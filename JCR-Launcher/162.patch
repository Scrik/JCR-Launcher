diff --git a/RMCClient/minecraft/net/minecraft/client/Minecraft.java b/RMCClient/minecraft/net/minecraft/client/Minecraft.java
index 7d61e22..1c59d00 100644
--- a/RMCClient/minecraft/net/minecraft/client/Minecraft.java
+++ b/RMCClient/minecraft/net/minecraft/client/Minecraft.java
@@ -1,58 +1,51 @@
 package net.minecraft.client;
 
-import java.awt.BorderLayout;
-import java.awt.Canvas;
-import java.awt.Color;
-import java.awt.Component;
-import java.awt.Dimension;
-import java.awt.Frame;
-import java.awt.Graphics;
+import java.awt.image.BufferedImage;
 import java.io.File;
 import java.io.IOException;
+import java.net.Proxy;
 import java.nio.ByteBuffer;
 import java.text.DecimalFormat;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
-import java.util.HashMap;
+import java.util.Collections;
+import java.util.Date;
+import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 
-import javax.swing.JPanel;
+import javax.imageio.ImageIO;
 
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.AchievementList;
+import net.minecraft.src.AnimationMetadataSection;
+import net.minecraft.src.AnimationMetadataSectionSerializer;
 import net.minecraft.src.AnvilSaveConverter;
 import net.minecraft.src.AxisAlignedBB;
 import net.minecraft.src.Block;
-import net.minecraft.src.CallableClientMemoryStats;
-import net.minecraft.src.CallableClientProfiler;
-import net.minecraft.src.CallableGLInfo;
-import net.minecraft.src.CallableLWJGLVersion;
-import net.minecraft.src.CallableModded;
-import net.minecraft.src.CallableParticleScreenName;
-import net.minecraft.src.CallableTexturePack;
-import net.minecraft.src.CallableTickingScreenName;
-import net.minecraft.src.CallableType2;
-import net.minecraft.src.CallableUpdatingScreenName;
-import net.minecraft.src.ColorizerFoliage;
-import net.minecraft.src.ColorizerGrass;
 import net.minecraft.src.CrashReport;
 import net.minecraft.src.CrashReportCategory;
+import net.minecraft.src.DefaultResourcePack;
 import net.minecraft.src.EffectRenderer;
 import net.minecraft.src.EntityBoat;
 import net.minecraft.src.EntityClientPlayerMP;
 import net.minecraft.src.EntityItemFrame;
+import net.minecraft.src.EntityLeashKnot;
 import net.minecraft.src.EntityList;
-import net.minecraft.src.EntityLiving;
+import net.minecraft.src.EntityLivingBase;
 import net.minecraft.src.EntityMinecart;
 import net.minecraft.src.EntityPainting;
 import net.minecraft.src.EntityRenderer;
 import net.minecraft.src.EnumMovingObjectType;
 import net.minecraft.src.EnumOS;
-import net.minecraft.src.EnumOSHelper;
 import net.minecraft.src.EnumOptions;
+import net.minecraft.src.FoliageColorReloadListener;
+import net.minecraft.src.FontMetadataSection;
+import net.minecraft.src.FontMetadataSectionSerializer;
 import net.minecraft.src.FontRenderer;
 import net.minecraft.src.GLAllocation;
 import net.minecraft.src.GameSettings;
-import net.minecraft.src.GameWindowListener;
+import net.minecraft.src.GrassColorReloadListener;
 import net.minecraft.src.GuiAchievement;
 import net.minecraft.src.GuiChat;
 import net.minecraft.src.GuiConnecting;
@@ -64,7 +57,7 @@
 import net.minecraft.src.GuiMemoryErrorScreen;
 import net.minecraft.src.GuiScreen;
 import net.minecraft.src.GuiSleepMP;
-import net.minecraft.src.HttpUtil;
+import net.minecraft.src.I18n;
 import net.minecraft.src.ILogAgent;
 import net.minecraft.src.INetworkManager;
 import net.minecraft.src.IPlayerUsage;
@@ -75,44 +68,50 @@
 import net.minecraft.src.ItemRenderer;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.KeyBinding;
+import net.minecraft.src.LanguageManager;
+import net.minecraft.src.LanguageMetadataSection;
+import net.minecraft.src.LanguageMetadataSectionSerializer;
 import net.minecraft.src.LoadingScreenRenderer;
 import net.minecraft.src.LogAgent;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.MemoryConnection;
+import net.minecraft.src.MetadataSerializer;
 import net.minecraft.src.MinecraftError;
-import net.minecraft.src.MinecraftFakeLauncher;
 import net.minecraft.src.MouseHelper;
 import net.minecraft.src.MovementInputFromOptions;
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.NetClientHandler;
 import net.minecraft.src.OpenGlHelper;
-import net.minecraft.src.Packet3Chat;
+import net.minecraft.src.PackMetadataSection;
+import net.minecraft.src.PackMetadataSectionSerializer;
 import net.minecraft.src.PlayerControllerMP;
 import net.minecraft.src.PlayerUsageSnooper;
 import net.minecraft.src.Profiler;
 import net.minecraft.src.ProfilerResult;
+import net.minecraft.src.ReloadableResourceManager;
 import net.minecraft.src.RenderBlocks;
-import net.minecraft.src.RenderEngine;
 import net.minecraft.src.RenderGlobal;
 import net.minecraft.src.RenderManager;
 import net.minecraft.src.ReportedException;
+import net.minecraft.src.ResourceLocation;
+import net.minecraft.src.ResourceManager;
+import net.minecraft.src.ResourcePackRepository;
+import net.minecraft.src.ResourcePackRepositoryEntry;
 import net.minecraft.src.ScaledResolution;
 import net.minecraft.src.ScreenShotHelper;
 import net.minecraft.src.ServerData;
 import net.minecraft.src.Session;
+import net.minecraft.src.SimpleReloadableResourceManager;
 import net.minecraft.src.SoundManager;
-import net.minecraft.src.StatCollector;
 import net.minecraft.src.StatFileWriter;
 import net.minecraft.src.StatList;
-import net.minecraft.src.StatStringFormatKeyInv;
-import net.minecraft.src.StringTranslate;
 import net.minecraft.src.Tessellator;
 import net.minecraft.src.TextureManager;
-import net.minecraft.src.TexturePackList;
-import net.minecraft.src.ThreadClientSleep;
-import net.minecraft.src.ThreadDownloadResources;
-import net.minecraft.src.ThreadShutdown;
+import net.minecraft.src.TextureMap;
+import net.minecraft.src.TextureMetadataSection;
+import net.minecraft.src.TextureMetadataSectionSerializer;
 import net.minecraft.src.Timer;
+import net.minecraft.src.Util;
 import net.minecraft.src.WorldClient;
 import net.minecraft.src.WorldInfo;
 import net.minecraft.src.WorldRenderer;
@@ -131,102 +130,118 @@
 import org.lwjgl.opengl.PixelFormat;
 import org.lwjgl.util.glu.GLU;
 
-public abstract class Minecraft implements Runnable, IPlayerUsage
+public class Minecraft implements IPlayerUsage
 {
+	private static final ResourceLocation field_110444_H = new ResourceLocation("textures/gui/title/mojang.png");
+	public static final boolean field_142025_a = Util.func_110647_a() == EnumOS.MACOS;
 	public static byte[] memoryReserve = new byte[10485760];
-	private final ILogAgent field_94139_O = new LogAgent("Minecraft-Client", " [CLIENT]", new File(getMinecraftDir(), "output-client.log").getAbsolutePath());
+	private static final List field_110445_I = Lists.newArrayList(new DisplayMode[] { new DisplayMode(2560, 1600), new DisplayMode(2880, 1800) });
+	private final ILogAgent field_94139_O;
+	private final File field_130070_K;
 	private ServerData currentServerData;
+	private TextureManager renderEngine;
 	private static Minecraft theMinecraft;
 	public PlayerControllerMP playerController;
-	private boolean fullscreen = false;
-	private boolean hasCrashed = false;
+	private boolean fullscreen;
+	private boolean hasCrashed;
 	private CrashReport crashReporter;
 	public int displayWidth;
 	public int displayHeight;
 	private Timer timer = new Timer(20.0F);
-	private PlayerUsageSnooper usageSnooper = new PlayerUsageSnooper("client", this);
+	private PlayerUsageSnooper usageSnooper = new PlayerUsageSnooper("client", this, MinecraftServer.func_130071_aq());
 	public WorldClient theWorld;
 	public RenderGlobal renderGlobal;
 	public EntityClientPlayerMP thePlayer;
-	public EntityLiving renderViewEntity;
-	public EntityLiving pointedEntityLiving;
+	public EntityLivingBase renderViewEntity;
+	public EntityLivingBase pointedEntityLiving;
 	public EffectRenderer effectRenderer;
-	public Session session = null;
-	public String minecraftUri;
-	public Canvas mcCanvas;
-	public boolean hideQuitButton = false;
-	public volatile boolean isGamePaused = false;
-	public RenderEngine renderEngine;
+	private final Session session;
+	private boolean isGamePaused;
 	public FontRenderer fontRenderer;
 	public FontRenderer standardGalacticFontRenderer;
-	public GuiScreen currentScreen = null;
+	public GuiScreen currentScreen;
 	public LoadingScreenRenderer loadingScreen;
 	public EntityRenderer entityRenderer;
-	private ThreadDownloadResources downloadResourcesThread;
-	private int leftClickCounter = 0;
+	private int leftClickCounter;
 	private int tempDisplayWidth;
 	private int tempDisplayHeight;
 	private IntegratedServer theIntegratedServer;
 	public GuiAchievement guiAchievement;
 	public GuiIngame ingameGUI;
-	public boolean skipRenderWorld = false;
-	public MovingObjectPosition objectMouseOver = null;
+	public boolean skipRenderWorld;
+	public MovingObjectPosition objectMouseOver;
 	public GameSettings gameSettings;
-	protected MinecraftApplet mcApplet;
-	public SoundManager sndManager = new SoundManager();
+	public SoundManager sndManager;
 	public MouseHelper mouseHelper;
-	public TexturePackList texturePackList;
-	public File mcDataDir;
+	public final File mcDataDir;
+	private final File field_110446_Y;
+	private final String field_110447_Z;
+	private final Proxy field_110453_aa;
 	private ISaveFormat saveLoader;
 	private static int debugFPS;
-	private int rightClickDelayTimer = 0;
+	private int rightClickDelayTimer;
 	private boolean refreshTexturePacksScheduled;
 	public StatFileWriter statFileWriter;
 	private String serverName;
 	private int serverPort;
-	boolean isTakingScreenshot = false;
-	public boolean inGameHasFocus = false;
+	boolean isTakingScreenshot;
+	public boolean inGameHasFocus;
 	long systemTime = getSystemTime();
-	private int joinPlayerCounter = 0;
-	private boolean isDemo;
+	private int joinPlayerCounter;
+	private final boolean isDemo;
 	private INetworkManager myNetworkManager;
 	private boolean integratedServerIsRunning;
 	public final Profiler mcProfiler = new Profiler();
 	private long field_83002_am = -1L;
-	private static File minecraftDir = null;
-	public volatile boolean running = true;
+	private ReloadableResourceManager field_110451_am;
+	private final MetadataSerializer field_110452_an = new MetadataSerializer();
+	private List field_110449_ao = Lists.newArrayList();
+	private DefaultResourcePack field_110450_ap;
+	private ResourcePackRepository field_110448_aq;
+	private LanguageManager field_135017_as;
+	volatile boolean running = true;
 	public String debug = "";
 	long debugUpdateTime = getSystemTime();
-	int fpsCounter = 0;
+	int fpsCounter;
 	long prevFrameTime = -1L;
 	private String debugProfilerName = "root";
 	
-	public Minecraft(Canvas par1Canvas, MinecraftApplet par2MinecraftApplet, int par3, int par4, boolean par5)
+	public Minecraft(Session p_i1014_1_, int p_i1014_2_, int p_i1014_3_, boolean p_i1014_4_, boolean p_i1014_5_, File p_i1014_6_, File p_i1014_7_, File p_i1014_8_, Proxy p_i1014_9_, String p_i1014_10_)
 	{
-		StatList.nopInit();
-		tempDisplayHeight = par4;
-		fullscreen = par5;
-		mcApplet = par2MinecraftApplet;
-		Packet3Chat.maxChatLength = 32767;
-		startTimerHackThread();
-		mcCanvas = par1Canvas;
-		displayWidth = par3;
-		displayHeight = par4;
-		fullscreen = par5;
 		theMinecraft = this;
-		TextureManager.init();
-		guiAchievement = new GuiAchievement(this);
+		field_94139_O = new LogAgent("Minecraft-Client", " [CLIENT]", new File(p_i1014_6_, "output-client.log").getAbsolutePath());
+		mcDataDir = p_i1014_6_;
+		field_110446_Y = p_i1014_7_;
+		field_130070_K = p_i1014_8_;
+		field_110447_Z = p_i1014_10_;
+		field_110450_ap = new DefaultResourcePack(field_110446_Y);
+		func_110435_P();
+		field_110453_aa = p_i1014_9_;
+		startTimerHackThread();
+		session = p_i1014_1_;
+		field_94139_O.logInfo("Setting user: " + p_i1014_1_.func_111285_a());
+		field_94139_O.logInfo("(Session ID is " + p_i1014_1_.func_111286_b() + ")");
+		isDemo = p_i1014_5_;
+		displayWidth = p_i1014_2_;
+		displayHeight = p_i1014_3_;
+		tempDisplayWidth = p_i1014_2_;
+		tempDisplayHeight = p_i1014_3_;
+		fullscreen = p_i1014_4_;
+		ImageIO.setUseCache(false);
+		StatList.nopInit();
 	}
 	
 	public CrashReport addGraphicsAndWorldToCrashReport(CrashReport par1CrashReport)
 	{
+		par1CrashReport.func_85056_g().addCrashSectionCallable("Launched Version", new CallableLaunchedVersion(this));
 		par1CrashReport.func_85056_g().addCrashSectionCallable("LWJGL", new CallableLWJGLVersion(this));
 		par1CrashReport.func_85056_g().addCrashSectionCallable("OpenGL", new CallableGLInfo(this));
 		par1CrashReport.func_85056_g().addCrashSectionCallable("Is Modded", new CallableModded(this));
 		par1CrashReport.func_85056_g().addCrashSectionCallable("Type", new CallableType2(this));
-		par1CrashReport.func_85056_g().addCrashSectionCallable("Texture Pack", new CallableTexturePack(this));
-		par1CrashReport.func_85056_g().addCrashSectionCallable("Profiler Position", new CallableClientProfiler(this));
-		par1CrashReport.func_85056_g().addCrashSectionCallable("Vec3 Pool Size", new CallableClientMemoryStats(this));
+		par1CrashReport.func_85056_g().addCrashSectionCallable("Resource Pack", new CallableTexturePack(this));
+		par1CrashReport.func_85056_g().addCrashSectionCallable("Current Language", new CallableClientProfiler(this));
+		par1CrashReport.func_85056_g().addCrashSectionCallable("Profiler Position", new CallableClientMemoryStats(this));
+		par1CrashReport.func_85056_g().addCrashSectionCallable("Vec3 Pool Size", new MinecraftINNER13(this));
 		if(theWorld != null)
 		{
 			theWorld.addWorldInfoToCrashReport(par1CrashReport);
@@ -237,10 +252,11 @@
 	@Override public void addServerStatsToSnooper(PlayerUsageSnooper par1PlayerUsageSnooper)
 	{
 		par1PlayerUsageSnooper.addData("fps", Integer.valueOf(debugFPS));
-		par1PlayerUsageSnooper.addData("texpack_name", texturePackList.getSelectedTexturePack().getTexturePackFileName());
+		par1PlayerUsageSnooper.addData("texpack_name", field_110448_aq.func_110610_d());
 		par1PlayerUsageSnooper.addData("vsync_enabled", Boolean.valueOf(gameSettings.enableVsync));
 		par1PlayerUsageSnooper.addData("display_frequency", Integer.valueOf(Display.getDisplayMode().getFrequency()));
 		par1PlayerUsageSnooper.addData("display_type", fullscreen ? "fullscreen" : "windowed");
+		par1PlayerUsageSnooper.addData("run_time", Long.valueOf((MinecraftServer.func_130071_aq() - par1PlayerUsageSnooper.func_130105_g()) / 60L * 1000L));
 		if(theIntegratedServer != null && theIntegratedServer.getPlayerUsageSnooper() != null)
 		{
 			par1PlayerUsageSnooper.addData("snooper_partner", theIntegratedServer.getPlayerUsageSnooper().getUniqueID());
@@ -252,7 +268,7 @@
 		par1PlayerUsageSnooper.addData("opengl_version", GL11.glGetString(GL11.GL_VERSION));
 		par1PlayerUsageSnooper.addData("opengl_vendor", GL11.glGetString(GL11.GL_VENDOR));
 		par1PlayerUsageSnooper.addData("client_brand", ClientBrandRetriever.getClientModName());
-		par1PlayerUsageSnooper.addData("applet", Boolean.valueOf(hideQuitButton));
+		par1PlayerUsageSnooper.addData("launched_version", field_110447_Z);
 		ContextCapabilities var2 = GLContext.getCapabilities();
 		par1PlayerUsageSnooper.addData("gl_caps[ARB_multitexture]", Boolean.valueOf(var2.GL_ARB_multitexture));
 		par1PlayerUsageSnooper.addData("gl_caps[ARB_multisample]", Boolean.valueOf(var2.GL_ARB_multisample));
@@ -313,6 +329,9 @@
 				if(objectMouseOver.entityHit instanceof EntityPainting)
 				{
 					var2 = Item.painting.itemID;
+				} else if(objectMouseOver.entityHit instanceof EntityLeashKnot)
+				{
+					var2 = Item.field_111214_ch.itemID;
 				} else if(objectMouseOver.entityHit instanceof EntityItemFrame)
 				{
 					EntityItemFrame var10 = (EntityItemFrame) objectMouseOver.entityHit;
@@ -450,11 +469,23 @@
 	
 	public void displayCrashReport(CrashReport par1CrashReport)
 	{
-		hasCrashed = true;
-		displayCrashReportInternal(par1CrashReport);
+		File var2 = new File(getMinecraft().mcDataDir, "crash-reports");
+		File var3 = new File(var2, "crash-" + new SimpleDateFormat("yyyy-MM-dd_HH.mm.ss").format(new Date()) + "-client.txt");
+		System.out.println(par1CrashReport.getCompleteReport());
+		if(par1CrashReport.getFile() != null)
+		{
+			System.out.println("#@!@# Game crashed! Crash report saved to: #@!@# " + par1CrashReport.getFile());
+			System.exit(-1);
+		} else if(par1CrashReport.saveToFile(var3, getLogAgent()))
+		{
+			System.out.println("#@!@# Game crashed! Crash report saved to: #@!@# " + var3.getAbsolutePath());
+			System.exit(-1);
+		} else
+		{
+			System.out.println("#@?@# Game crashed! Crash report could not be saved. #@?@#");
+			System.exit(-2);
+		}
 	}
-	
-	public abstract void displayCrashReportInternal(CrashReport var1);
 	
 	private void displayDebugInfo(long par1)
 	{
@@ -565,7 +596,7 @@
 		if(par1GuiScreen == null && theWorld == null)
 		{
 			par1GuiScreen = new GuiMainMenu();
-		} else if(par1GuiScreen == null && thePlayer.getHealth() <= 0)
+		} else if(par1GuiScreen == null && thePlayer.func_110143_aJ() <= 0.0F)
 		{
 			par1GuiScreen = new GuiGameOver();
 		}
@@ -601,18 +632,6 @@
 		}
 	}
 	
-	private void forceReload()
-	{
-		getLogAgent().logInfo("FORCING RELOAD!");
-		if(sndManager != null)
-		{
-			sndManager.stopAllSounds();
-		}
-		sndManager = new SoundManager();
-		sndManager.loadSoundSettings(gameSettings);
-		downloadResourcesThread.reloadResources();
-	}
-	
 	public void freeMemory()
 	{
 		try
@@ -643,9 +662,182 @@
 		System.gc();
 	}
 	
+	public Session func_110432_I()
+	{
+		return session;
+	}
+	
+	public TextureManager func_110434_K()
+	{
+		return renderEngine;
+	}
+	
+	private void func_110435_P()
+	{
+		field_110449_ao.add(field_110450_ap);
+	}
+	
+	public void func_110436_a()
+	{
+		ArrayList var1 = Lists.newArrayList(field_110449_ao);
+		Iterator var2 = field_110448_aq.func_110613_c().iterator();
+		while(var2.hasNext())
+		{
+			ResourcePackRepositoryEntry var3 = (ResourcePackRepositoryEntry) var2.next();
+			var1.add(var3.func_110514_c());
+		}
+		field_135017_as.func_135043_a(var1);
+		field_110451_am.func_110541_a(var1);
+		if(renderGlobal != null)
+		{
+			renderGlobal.loadRenderers();
+		}
+	}
+	
+	public Proxy func_110437_J()
+	{
+		return field_110453_aa;
+	}
+	
+	public ResourcePackRepository func_110438_M()
+	{
+		return field_110448_aq;
+	}
+	
+	private ByteBuffer func_110439_b(File p_110439_1_) throws IOException
+	{
+		BufferedImage var2 = ImageIO.read(p_110439_1_);
+		int[] var3 = var2.getRGB(0, 0, var2.getWidth(), var2.getHeight(), (int[]) null, 0, var2.getWidth());
+		ByteBuffer var4 = ByteBuffer.allocate(4 * var3.length);
+		int[] var5 = var3;
+		int var6 = var3.length;
+		for(int var7 = 0; var7 < var6; ++var7)
+		{
+			int var8 = var5[var7];
+			var4.putInt(var8 << 8 | var8 >> 24 & 255);
+		}
+		var4.flip();
+		return var4;
+	}
+	
+	private void func_110441_Q() throws LWJGLException
+	{
+		HashSet var1 = new HashSet();
+		Collections.addAll(var1, Display.getAvailableDisplayModes());
+		DisplayMode var2 = Display.getDesktopDisplayMode();
+		if(!var1.contains(var2) && Util.func_110647_a() == EnumOS.MACOS)
+		{
+			Iterator var3 = field_110445_I.iterator();
+			while(var3.hasNext())
+			{
+				DisplayMode var4 = (DisplayMode) var3.next();
+				boolean var5 = true;
+				Iterator var6 = var1.iterator();
+				DisplayMode var7;
+				while(var6.hasNext())
+				{
+					var7 = (DisplayMode) var6.next();
+					if(var7.getBitsPerPixel() == 32 && var7.getWidth() == var4.getWidth() && var7.getHeight() == var4.getHeight())
+					{
+						var5 = false;
+						break;
+					}
+				}
+				if(!var5)
+				{
+					var6 = var1.iterator();
+					while(var6.hasNext())
+					{
+						var7 = (DisplayMode) var6.next();
+						if(var7.getBitsPerPixel() == 32 && var7.getWidth() == var4.getWidth() / 2 && var7.getHeight() == var4.getHeight() / 2)
+						{
+							var2 = var7;
+							break;
+						}
+					}
+				}
+			}
+		}
+		Display.setDisplayMode(var2);
+		displayWidth = var2.getWidth();
+		displayHeight = var2.getHeight();
+	}
+	
+	public ResourceManager func_110442_L()
+	{
+		return field_110451_am;
+	}
+	
+	public LanguageManager func_135016_M()
+	{
+		return field_135017_as;
+	}
+	
 	private int func_90020_K()
 	{
 		return currentScreen != null && currentScreen instanceof GuiMainMenu ? 2 : gameSettings.limitFramerate;
+	}
+	
+	public void func_99999_d()
+	{
+		running = true;
+		CrashReport var2;
+		try
+		{
+			startGame();
+		} catch(Throwable var11)
+		{
+			var2 = CrashReport.makeCrashReport(var11, "Initializing game");
+			var2.makeCategory("Initialization");
+			displayCrashReport(addGraphicsAndWorldToCrashReport(var2));
+			return;
+		}
+		try
+		{
+			while(running)
+			{
+				if(running)
+				{
+					if(hasCrashed && crashReporter != null)
+					{
+						displayCrashReport(crashReporter);
+						return;
+					}
+					if(refreshTexturePacksScheduled)
+					{
+						refreshTexturePacksScheduled = false;
+						func_110436_a();
+					}
+					try
+					{
+						runGameLoop();
+					} catch(OutOfMemoryError var10)
+					{
+						freeMemory();
+						displayGuiScreen(new GuiMemoryErrorScreen());
+						System.gc();
+					}
+					continue;
+				}
+			}
+		} catch(MinecraftError var12)
+		{
+		} catch(ReportedException var13)
+		{
+			addGraphicsAndWorldToCrashReport(var13.getCrashReport());
+			freeMemory();
+			var13.printStackTrace();
+			displayCrashReport(var13.getCrashReport());
+		} catch(Throwable var14)
+		{
+			var2 = addGraphicsAndWorldToCrashReport(new CrashReport("Unexpected error", var14));
+			freeMemory();
+			var14.printStackTrace();
+			displayCrashReport(var2);
+		} finally
+		{
+			shutdownMinecraftApplet();
+		}
 	}
 	
 	public String getEntityDebug()
@@ -678,11 +870,6 @@
 		return saveLoader;
 	}
 	
-	public ServerData getServerData()
-	{
-		return currentServerData;
-	}
-	
 	public String getWorldProviderName()
 	{
 		return theWorld.getProviderName();
@@ -690,30 +877,7 @@
 	
 	public boolean handleClientCommand(String par1Str)
 	{
-		return !par1Str.startsWith("/") ? false : false;
-	}
-	
-	public void installResource(String par1Str, File par2File)
-	{
-		int var3 = par1Str.indexOf("/");
-		String var4 = par1Str.substring(0, var3);
-		par1Str = par1Str.substring(var3 + 1);
-		if(var4.equalsIgnoreCase("sound3"))
-		{
-			sndManager.addSound(par1Str, par2File);
-		} else if(var4.equalsIgnoreCase("streaming"))
-		{
-			sndManager.addStreaming(par1Str, par2File);
-		} else if(!var4.equalsIgnoreCase("music") && !var4.equalsIgnoreCase("newmusic"))
-		{
-			if(var4.equalsIgnoreCase("lang"))
-			{
-				StringTranslate.getInstance().func_94519_a(par1Str, par2File);
-			}
-		} else
-		{
-			sndManager.addMusic(par1Str, par2File);
-		}
+		return false;
 	}
 	
 	public final boolean isDemo()
@@ -749,7 +913,6 @@
 		WorldInfo var5 = var4.loadWorldInfo();
 		if(var5 == null && par3WorldSettings != null)
 		{
-			statFileWriter.readStat(StatList.createWorldStat, 1);
 			var5 = new WorldInfo(par3WorldSettings, par1Str);
 			var4.saveWorldInfo(var5);
 		}
@@ -761,13 +924,13 @@
 		theIntegratedServer = new IntegratedServer(this, par1Str, par2Str, par3WorldSettings);
 		theIntegratedServer.startServerThread();
 		integratedServerIsRunning = true;
-		loadingScreen.displayProgressMessage(StatCollector.translateToLocal("menu.loadingLevel"));
+		loadingScreen.displayProgressMessage(I18n.func_135053_a("menu.loadingLevel"));
 		while(!theIntegratedServer.serverIsInRunLoop())
 		{
 			String var6 = theIntegratedServer.getUserMessage();
 			if(var6 != null)
 			{
-				loadingScreen.resetProgresAndWorkingMessage(StatCollector.translateToLocal(var6));
+				loadingScreen.resetProgresAndWorkingMessage(I18n.func_135053_a(var6));
 			} else
 			{
 				loadingScreen.resetProgresAndWorkingMessage("");
@@ -806,8 +969,8 @@
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
 		GL11.glDisable(GL11.GL_FOG);
+		renderEngine.func_110577_a(field_110444_H);
 		Tessellator var2 = Tessellator.instance;
-		renderEngine.bindTexture("/title/mojang.png");
 		var2.startDrawingQuads();
 		var2.setColorOpaque_I(16777215);
 		var2.addVertexWithUV(0.0D, displayHeight, 0.0D, 0.0D, 0.0D);
@@ -824,7 +987,7 @@
 		GL11.glDisable(GL11.GL_FOG);
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
 		GL11.glAlphaFunc(GL11.GL_GREATER, 0.1F);
-		Display.swapBuffers();
+		Display.update();
 	}
 	
 	public void loadWorld(WorldClient par1WorldClient)
@@ -861,10 +1024,6 @@
 		}
 		if(par1WorldClient == null && theWorld != null)
 		{
-			if(texturePackList.getIsDownloading())
-			{
-				texturePackList.onDownloadFinished();
-			}
 			setServerData((ServerData) null);
 			integratedServerIsRunning = false;
 		}
@@ -913,191 +1072,128 @@
 		}
 	}
 	
-	@Override public void run()
-	{
-		running = true;
-		try
-		{
-			startGame();
-		} catch(Exception var11)
-		{
-			var11.printStackTrace();
-			displayCrashReport(addGraphicsAndWorldToCrashReport(new CrashReport("Failed to start game", var11)));
-			return;
-		}
-		try
-		{
-			while(running)
-			{
-				if(hasCrashed && crashReporter != null)
-				{
-					displayCrashReport(crashReporter);
-					return;
-				}
-				if(refreshTexturePacksScheduled)
-				{
-					refreshTexturePacksScheduled = false;
-					renderEngine.refreshTextures();
-				}
-				try
-				{
-					runGameLoop();
-				} catch(OutOfMemoryError var10)
-				{
-					freeMemory();
-					displayGuiScreen(new GuiMemoryErrorScreen());
-					System.gc();
-				}
-			}
-		} catch(MinecraftError var12)
-		{
-			;
-		} catch(ReportedException var13)
-		{
-			addGraphicsAndWorldToCrashReport(var13.getCrashReport());
-			freeMemory();
-			var13.printStackTrace();
-			displayCrashReport(var13.getCrashReport());
-		} catch(Throwable var14)
-		{
-			CrashReport var2 = addGraphicsAndWorldToCrashReport(new CrashReport("Unexpected error", var14));
-			freeMemory();
-			var14.printStackTrace();
-			displayCrashReport(var2);
-		} finally
-		{
-			shutdownMinecraftApplet();
-		}
-	}
-	
 	private void runGameLoop()
 	{
-		if(mcApplet != null && !mcApplet.isActive())
+		AxisAlignedBB.getAABBPool().cleanPool();
+		if(theWorld != null)
 		{
-			running = false;
+			theWorld.getWorldVec3Pool().clear();
+		}
+		mcProfiler.startSection("root");
+		if(Display.isCloseRequested())
+		{
+			shutdown();
+		}
+		if(isGamePaused && theWorld != null)
+		{
+			float var1 = timer.renderPartialTicks;
+			timer.updateTimer();
+			timer.renderPartialTicks = var1;
 		} else
 		{
-			AxisAlignedBB.getAABBPool().cleanPool();
-			if(theWorld != null)
-			{
-				theWorld.getWorldVec3Pool().clear();
-			}
-			mcProfiler.startSection("root");
-			if(mcCanvas == null && Display.isCloseRequested())
-			{
-				shutdown();
-			}
-			if(isGamePaused && theWorld != null)
-			{
-				float var1 = timer.renderPartialTicks;
-				timer.updateTimer();
-				timer.renderPartialTicks = var1;
-			} else
-			{
-				timer.updateTimer();
-			}
-			long var6 = System.nanoTime();
-			mcProfiler.startSection("tick");
-			for(int var3 = 0; var3 < timer.elapsedTicks; ++var3)
-			{
-				runTick();
-			}
-			mcProfiler.endStartSection("preRenderErrors");
-			long var7 = System.nanoTime() - var6;
-			checkGLError("Pre render");
-			RenderBlocks.fancyGrass = gameSettings.fancyGraphics;
-			mcProfiler.endStartSection("sound");
-			sndManager.setListener(thePlayer, timer.renderPartialTicks);
-			if(!isGamePaused)
-			{
-				sndManager.func_92071_g();
-			}
+			timer.updateTimer();
+		}
+		long var6 = System.nanoTime();
+		mcProfiler.startSection("tick");
+		for(int var3 = 0; var3 < timer.elapsedTicks; ++var3)
+		{
+			runTick();
+		}
+		mcProfiler.endStartSection("preRenderErrors");
+		long var7 = System.nanoTime() - var6;
+		checkGLError("Pre render");
+		RenderBlocks.fancyGrass = gameSettings.fancyGraphics;
+		mcProfiler.endStartSection("sound");
+		sndManager.setListener(thePlayer, timer.renderPartialTicks);
+		if(!isGamePaused)
+		{
+			sndManager.func_92071_g();
+		}
+		mcProfiler.endSection();
+		mcProfiler.startSection("render");
+		mcProfiler.startSection("display");
+		GL11.glEnable(GL11.GL_TEXTURE_2D);
+		if(!Keyboard.isKeyDown(65))
+		{
+			Display.update();
+		}
+		if(thePlayer != null && thePlayer.isEntityInsideOpaqueBlock())
+		{
+			gameSettings.thirdPersonView = 0;
+		}
+		mcProfiler.endSection();
+		if(!skipRenderWorld)
+		{
+			mcProfiler.endStartSection("gameRenderer");
+			entityRenderer.updateCameraAndRender(timer.renderPartialTicks);
 			mcProfiler.endSection();
-			mcProfiler.startSection("render");
-			mcProfiler.startSection("display");
-			GL11.glEnable(GL11.GL_TEXTURE_2D);
-			if(!Keyboard.isKeyDown(65))
+		}
+		GL11.glFlush();
+		mcProfiler.endSection();
+		if(!Display.isActive() && fullscreen)
+		{
+			toggleFullscreen();
+		}
+		if(gameSettings.showDebugInfo && gameSettings.showDebugProfilerChart)
+		{
+			if(!mcProfiler.profilingEnabled)
 			{
-				Display.update();
+				mcProfiler.clearProfiling();
 			}
-			if(thePlayer != null && thePlayer.isEntityInsideOpaqueBlock())
+			mcProfiler.profilingEnabled = true;
+			displayDebugInfo(var7);
+		} else
+		{
+			mcProfiler.profilingEnabled = false;
+			prevFrameTime = System.nanoTime();
+		}
+		guiAchievement.updateAchievementWindow();
+		mcProfiler.startSection("root");
+		Thread.yield();
+		if(Keyboard.isKeyDown(65))
+		{
+			Display.update();
+		}
+		screenshotListener();
+		if(!fullscreen && Display.wasResized())
+		{
+			displayWidth = Display.getWidth();
+			displayHeight = Display.getHeight();
+			if(displayWidth <= 0)
 			{
-				gameSettings.thirdPersonView = 0;
+				displayWidth = 1;
 			}
-			mcProfiler.endSection();
-			if(!skipRenderWorld)
+			if(displayHeight <= 0)
 			{
-				mcProfiler.endStartSection("gameRenderer");
-				entityRenderer.updateCameraAndRender(timer.renderPartialTicks);
-				mcProfiler.endSection();
+				displayHeight = 1;
 			}
-			GL11.glFlush();
-			mcProfiler.endSection();
-			if(!Display.isActive() && fullscreen)
+			resize(displayWidth, displayHeight);
+		}
+		checkGLError("Post render");
+		++fpsCounter;
+		boolean var5 = isGamePaused;
+		isGamePaused = isSingleplayer() && currentScreen != null && currentScreen.doesGuiPauseGame() && !theIntegratedServer.getPublic();
+		if(isIntegratedServerRunning() && thePlayer != null && thePlayer.sendQueue != null && isGamePaused != var5)
+		{
+			((MemoryConnection) thePlayer.sendQueue.getNetManager()).setGamePaused(isGamePaused);
+		}
+		while(getSystemTime() >= debugUpdateTime + 1000L)
+		{
+			debugFPS = fpsCounter;
+			debug = debugFPS + " fps, " + WorldRenderer.chunksUpdated + " chunk updates";
+			WorldRenderer.chunksUpdated = 0;
+			debugUpdateTime += 1000L;
+			fpsCounter = 0;
+			usageSnooper.addMemoryStatsToSnooper();
+			if(!usageSnooper.isSnooperRunning())
 			{
-				toggleFullscreen();
+				usageSnooper.startSnooper();
 			}
-			if(gameSettings.showDebugInfo && gameSettings.showDebugProfilerChart)
-			{
-				if(!mcProfiler.profilingEnabled)
-				{
-					mcProfiler.clearProfiling();
-				}
-				mcProfiler.profilingEnabled = true;
-				displayDebugInfo(var7);
-			} else
-			{
-				mcProfiler.profilingEnabled = false;
-				prevFrameTime = System.nanoTime();
-			}
-			guiAchievement.updateAchievementWindow();
-			mcProfiler.startSection("root");
-			Thread.yield();
-			if(Keyboard.isKeyDown(65))
-			{
-				Display.update();
-			}
-			screenshotListener();
-			if(mcCanvas != null && !fullscreen && (mcCanvas.getWidth() != displayWidth || mcCanvas.getHeight() != displayHeight))
-			{
-				displayWidth = mcCanvas.getWidth();
-				displayHeight = mcCanvas.getHeight();
-				if(displayWidth <= 0)
-				{
-					displayWidth = 1;
-				}
-				if(displayHeight <= 0)
-				{
-					displayHeight = 1;
-				}
-				resize(displayWidth, displayHeight);
-			}
-			checkGLError("Post render");
-			++fpsCounter;
-			boolean var5 = isGamePaused;
-			isGamePaused = isSingleplayer() && currentScreen != null && currentScreen.doesGuiPauseGame() && !theIntegratedServer.getPublic();
-			if(isIntegratedServerRunning() && thePlayer != null && thePlayer.sendQueue != null && isGamePaused != var5)
-			{
-				((MemoryConnection) thePlayer.sendQueue.getNetManager()).setGamePaused(isGamePaused);
-			}
-			while(getSystemTime() >= debugUpdateTime + 1000L)
-			{
-				debugFPS = fpsCounter;
-				debug = debugFPS + " fps, " + WorldRenderer.chunksUpdated + " chunk updates";
-				WorldRenderer.chunksUpdated = 0;
-				debugUpdateTime += 1000L;
-				fpsCounter = 0;
-				usageSnooper.addMemoryStatsToSnooper();
-				if(!usageSnooper.isSnooperRunning())
-				{
-					usageSnooper.startSnooper();
-				}
-			}
-			mcProfiler.endSection();
-			if(func_90020_K() > 0)
-			{
-				Display.sync(EntityRenderer.performanceToFps(func_90020_K()));
-			}
+		}
+		mcProfiler.endSection();
+		if(func_90020_K() > 0)
+		{
+			Display.sync(EntityRenderer.performanceToFps(func_90020_K()));
 		}
 	}
 	
@@ -1121,15 +1217,14 @@
 		{
 			playerController.updateController();
 		}
-		renderEngine.bindTexture("/terrain.png");
 		mcProfiler.endStartSection("textures");
 		if(!isGamePaused)
 		{
-			renderEngine.updateDynamicTextures();
+			renderEngine.func_110550_d();
 		}
 		if(currentScreen == null && thePlayer != null)
 		{
-			if(thePlayer.getHealth() <= 0)
+			if(thePlayer.func_110143_aJ() <= 0.0F)
 			{
 				displayGuiScreen((GuiScreen) null);
 			} else if(thePlayer.isPlayerSleeping() && theWorld != null)
@@ -1162,22 +1257,12 @@
 			{
 				try
 				{
-					currentScreen.guiParticles.update();
+					currentScreen.updateScreen();
 				} catch(Throwable var5)
 				{
-					var2 = CrashReport.makeCrashReport(var5, "Ticking screen particles");
+					var2 = CrashReport.makeCrashReport(var5, "Ticking screen");
 					var3 = var2.makeCategory("Affected screen");
 					var3.addCrashSectionCallable("Screen name", new CallableParticleScreenName(this));
-					throw new ReportedException(var2);
-				}
-				try
-				{
-					currentScreen.updateScreen();
-				} catch(Throwable var4)
-				{
-					var2 = CrashReport.makeCrashReport(var4, "Ticking screen");
-					var3 = var2.makeCategory("Affected screen");
-					var3.addCrashSectionCallable("Screen name", new CallableTickingScreenName(this));
 					throw new ReportedException(var2);
 				}
 			}
@@ -1185,31 +1270,37 @@
 		if(currentScreen == null || currentScreen.allowUserInput)
 		{
 			mcProfiler.endStartSection("mouse");
+			int var1;
 			while(Mouse.next())
 			{
-				KeyBinding.setKeyBindState(Mouse.getEventButton() - 100, Mouse.getEventButtonState());
+				var1 = Mouse.getEventButton();
+				if(field_142025_a && var1 == 0 && (Keyboard.isKeyDown(29) || Keyboard.isKeyDown(157)))
+				{
+					var1 = 1;
+				}
+				KeyBinding.setKeyBindState(var1 - 100, Mouse.getEventButtonState());
 				if(Mouse.getEventButtonState())
 				{
-					KeyBinding.onTick(Mouse.getEventButton() - 100);
+					KeyBinding.onTick(var1 - 100);
 				}
-				long var1 = getSystemTime() - systemTime;
-				if(var1 <= 200L)
+				long var9 = getSystemTime() - systemTime;
+				if(var9 <= 200L)
 				{
-					int var10 = Mouse.getEventDWheel();
-					if(var10 != 0)
+					int var4 = Mouse.getEventDWheel();
+					if(var4 != 0)
 					{
-						thePlayer.inventory.changeCurrentItem(var10);
+						thePlayer.inventory.changeCurrentItem(var4);
 						if(gameSettings.noclip)
 						{
-							if(var10 > 0)
+							if(var4 > 0)
 							{
-								var10 = 1;
+								var4 = 1;
 							}
-							if(var10 < 0)
+							if(var4 < 0)
 							{
-								var10 = -1;
+								var4 = -1;
 							}
-							gameSettings.noclipRate += var10 * 0.25F;
+							gameSettings.noclipRate += var4 * 0.25F;
 						}
 					}
 					if(currentScreen == null)
@@ -1266,12 +1357,11 @@
 							}
 							if(Keyboard.getEventKey() == 31 && Keyboard.isKeyDown(61))
 							{
-								forceReload();
+								func_110436_a();
 							}
 							if(Keyboard.getEventKey() == 20 && Keyboard.isKeyDown(61))
 							{
-								renderEngine.refreshTextures();
-								renderGlobal.loadRenderers();
+								func_110436_a();
 							}
 							if(Keyboard.getEventKey() == 33 && Keyboard.isKeyDown(61))
 							{
@@ -1318,12 +1408,11 @@
 								gameSettings.smoothCamera = !gameSettings.smoothCamera;
 							}
 						}
-						int var9;
-						for(var9 = 0; var9 < 9; ++var9)
+						for(var1 = 0; var1 < 9; ++var1)
 						{
-							if(Keyboard.getEventKey() == 2 + var9)
+							if(Keyboard.getEventKey() == 2 + var1)
 							{
-								thePlayer.inventory.currentItem = var9;
+								thePlayer.inventory.currentItem = var1;
 							}
 						}
 						if(gameSettings.showDebugInfo && gameSettings.showDebugProfilerChart)
@@ -1332,11 +1421,11 @@
 							{
 								updateDebugProfilerName(0);
 							}
-							for(var9 = 0; var9 < 9; ++var9)
+							for(var1 = 0; var1 < 9; ++var1)
 							{
-								if(Keyboard.getEventKey() == 2 + var9)
+								if(Keyboard.getEventKey() == 2 + var1)
 								{
-									updateDebugProfilerName(var9 + 1);
+									updateDebugProfilerName(var1 + 1);
 								}
 							}
 						}
@@ -1346,7 +1435,13 @@
 			var8 = gameSettings.chatVisibility != 2;
 			while(gameSettings.keyBindInventory.isPressed())
 			{
-				displayGuiScreen(new GuiInventory(thePlayer));
+				if(playerController.func_110738_j())
+				{
+					thePlayer.func_110322_i();
+				} else
+				{
+					displayGuiScreen(new GuiInventory(thePlayer));
+				}
 			}
 			while(gameSettings.keyBindDrop.isPressed())
 			{
@@ -1366,7 +1461,7 @@
 				{
 					playerController.onStoppedUsingItem(thePlayer);
 				}
-				label379: while(true)
+				label381: while(true)
 				{
 					if(!gameSettings.keyBindAttack.isPressed())
 					{
@@ -1380,7 +1475,7 @@
 							{
 								continue;
 							}
-							break label379;
+							break label381;
 						}
 					}
 				}
@@ -1487,11 +1582,6 @@
 		var9.draw();
 	}
 	
-	public void scheduleTexturePackRefresh()
-	{
-		refreshTexturePacksScheduled = true;
-	}
-	
 	private void screenshotListener()
 	{
 		if(Keyboard.isKeyDown(60))
@@ -1499,7 +1589,7 @@
 			if(!isTakingScreenshot)
 			{
 				isTakingScreenshot = true;
-				ingameGUI.getChatGUI().printChatMessage(ScreenShotHelper.saveScreenshot(minecraftDir, displayWidth, displayHeight));
+				ingameGUI.getChatGUI().printChatMessage(ScreenShotHelper.saveScreenshot(mcDataDir, displayWidth, displayHeight));
 			}
 		} else
 		{
@@ -1533,26 +1623,24 @@
 		}
 	}
 	
-	void setDemo(boolean par1)
-	{
-		isDemo = par1;
-	}
-	
 	public void setDimensionAndSpawnPlayer(int par1)
 	{
 		theWorld.setSpawnLocation();
 		theWorld.removeAllEntities();
 		int var2 = 0;
+		String var3 = null;
 		if(thePlayer != null)
 		{
 			var2 = thePlayer.entityId;
 			theWorld.removeEntity(thePlayer);
+			var3 = thePlayer.func_142021_k();
 		}
 		renderViewEntity = null;
 		thePlayer = playerController.func_78754_a(theWorld);
 		thePlayer.dimension = par1;
 		renderViewEntity = thePlayer;
 		thePlayer.preparePlayerToSpawn();
+		thePlayer.func_142020_c(var3);
 		theWorld.spawnEntityInWorld(thePlayer);
 		playerController.flipPlayer(thePlayer);
 		thePlayer.movementInput = new MovementInputFromOptions(gameSettings);
@@ -1609,34 +1697,22 @@
 		try
 		{
 			statFileWriter.syncStats();
-			try
-			{
-				if(downloadResourcesThread != null)
-				{
-					downloadResourcesThread.closeMinecraft();
-				}
-			} catch(Exception var9)
-			{
-				;
-			}
 			getLogAgent().logInfo("Stopping!");
 			try
 			{
 				this.loadWorld((WorldClient) null);
-			} catch(Throwable var8)
+			} catch(Throwable var7)
 			{
 				;
 			}
 			try
 			{
 				GLAllocation.deleteTexturesAndDisplayLists();
-			} catch(Throwable var7)
+			} catch(Throwable var6)
 			{
 				;
 			}
 			sndManager.closeMinecraft();
-			Mouse.destroy();
-			Keyboard.destroy();
 		} finally
 		{
 			Display.destroy();
@@ -1648,19 +1724,15 @@
 		System.gc();
 	}
 	
-	public void startGame() throws LWJGLException
+	private void startGame() throws LWJGLException
 	{
-		if(mcCanvas != null)
+		gameSettings = new GameSettings(this, mcDataDir);
+		if(gameSettings.overrideHeight > 0 && gameSettings.overrideWidth > 0)
 		{
-			Graphics var1 = mcCanvas.getGraphics();
-			if(var1 != null)
-			{
-				var1.setColor(Color.BLACK);
-				var1.fillRect(0, 0, displayWidth, displayHeight);
-				var1.dispose();
-			}
-			Display.setParent(mcCanvas);
-		} else if(fullscreen)
+			displayWidth = gameSettings.overrideWidth;
+			displayHeight = gameSettings.overrideHeight;
+		}
+		if(fullscreen)
 		{
 			Display.setFullscreen(true);
 			displayWidth = Display.getDisplayMode().getWidth();
@@ -1677,47 +1749,72 @@
 		{
 			Display.setDisplayMode(new DisplayMode(displayWidth, displayHeight));
 		}
-		Display.setTitle("Minecraft Minecraft 1.5.2");
+		Display.setResizable(true);
+		Display.setTitle("Minecraft 1.6.2");
 		getLogAgent().logInfo("LWJGL Version: " + Sys.getVersion());
+		if(Util.func_110647_a() != EnumOS.MACOS)
+		{
+			try
+			{
+				Display.setIcon(new ByteBuffer[] { func_110439_b(new File(field_110446_Y, "/icons/icon_16x16.png")), func_110439_b(new File(field_110446_Y, "/icons/icon_32x32.png")) });
+			} catch(IOException var5)
+			{
+				var5.printStackTrace();
+			}
+		}
 		try
 		{
 			Display.create(new PixelFormat().withDepthBits(24));
-		} catch(LWJGLException var5)
+		} catch(LWJGLException var4)
 		{
-			var5.printStackTrace();
+			var4.printStackTrace();
 			try
 			{
 				Thread.sleep(1000L);
-			} catch(InterruptedException var4)
+			} catch(InterruptedException var3)
 			{
 				;
+			}
+			if(fullscreen)
+			{
+				func_110441_Q();
 			}
 			Display.create();
 		}
 		OpenGlHelper.initializeTextures();
-		mcDataDir = getMinecraftDir();
+		guiAchievement = new GuiAchievement(this);
+		field_110452_an.func_110504_a(new TextureMetadataSectionSerializer(), TextureMetadataSection.class);
+		field_110452_an.func_110504_a(new FontMetadataSectionSerializer(), FontMetadataSection.class);
+		field_110452_an.func_110504_a(new AnimationMetadataSectionSerializer(), AnimationMetadataSection.class);
+		field_110452_an.func_110504_a(new PackMetadataSectionSerializer(), PackMetadataSection.class);
+		field_110452_an.func_110504_a(new LanguageMetadataSectionSerializer(), LanguageMetadataSection.class);
 		saveLoader = new AnvilSaveConverter(new File(mcDataDir, "saves"));
-		gameSettings = new GameSettings(this, mcDataDir);
-		texturePackList = new TexturePackList(mcDataDir, this);
-		renderEngine = new RenderEngine(texturePackList, gameSettings);
+		field_110448_aq = new ResourcePackRepository(field_130070_K, field_110450_ap, field_110452_an, gameSettings);
+		field_110451_am = new SimpleReloadableResourceManager(field_110452_an);
+		field_135017_as = new LanguageManager(field_110452_an, gameSettings.language);
+		field_110451_am.func_110542_a(field_135017_as);
+		func_110436_a();
+		renderEngine = new TextureManager(field_110451_am);
+		field_110451_am.func_110542_a(renderEngine);
+		sndManager = new SoundManager(field_110451_am, gameSettings, field_110446_Y);
+		field_110451_am.func_110542_a(sndManager);
 		loadScreen();
-		fontRenderer = new FontRenderer(gameSettings, "/font/default.png", renderEngine, false);
-		standardGalacticFontRenderer = new FontRenderer(gameSettings, "/font/alternate.png", renderEngine, false);
+		fontRenderer = new FontRenderer(gameSettings, new ResourceLocation("textures/font/ascii.png"), renderEngine, false);
 		if(gameSettings.language != null)
 		{
-			StringTranslate.getInstance().setLanguage(gameSettings.language, false);
-			fontRenderer.setUnicodeFlag(StringTranslate.getInstance().isUnicode());
-			fontRenderer.setBidiFlag(StringTranslate.isBidirectional(gameSettings.language));
+			fontRenderer.setUnicodeFlag(field_135017_as.func_135042_a());
+			fontRenderer.setBidiFlag(field_135017_as.func_135044_b());
 		}
-		ColorizerGrass.setGrassBiomeColorizer(renderEngine.getTextureContents("/misc/grasscolor.png"));
-		ColorizerFoliage.setFoliageBiomeColorizer(renderEngine.getTextureContents("/misc/foliagecolor.png"));
-		entityRenderer = new EntityRenderer(this);
+		standardGalacticFontRenderer = new FontRenderer(gameSettings, new ResourceLocation("textures/font/ascii_sga.png"), renderEngine, false);
+		field_110451_am.func_110542_a(fontRenderer);
+		field_110451_am.func_110542_a(standardGalacticFontRenderer);
+		field_110451_am.func_110542_a(new GrassColorReloadListener());
+		field_110451_am.func_110542_a(new FoliageColorReloadListener());
 		RenderManager.instance.itemRenderer = new ItemRenderer(this);
+		entityRenderer = new EntityRenderer(this);
 		statFileWriter = new StatFileWriter(session, mcDataDir);
 		AchievementList.openInventory.setStatStringFormatter(new StatStringFormatKeyInv(this));
-		loadScreen();
-		Mouse.create();
-		mouseHelper = new MouseHelper(mcCanvas, gameSettings);
+		mouseHelper = new MouseHelper();
 		checkGLError("Pre startup");
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
 		GL11.glShadeModel(GL11.GL_SMOOTH);
@@ -1731,19 +1828,11 @@
 		GL11.glLoadIdentity();
 		GL11.glMatrixMode(GL11.GL_MODELVIEW);
 		checkGLError("Startup");
-		sndManager.loadSoundSettings(gameSettings);
-		renderGlobal = new RenderGlobal(this, renderEngine);
-		renderEngine.refreshTextureMaps();
+		renderGlobal = new RenderGlobal(this);
+		renderEngine.func_130088_a(TextureMap.field_110575_b, new TextureMap(0, "textures/blocks"));
+		renderEngine.func_130088_a(TextureMap.field_110576_c, new TextureMap(1, "textures/items"));
 		GL11.glViewport(0, 0, displayWidth, displayHeight);
 		effectRenderer = new EffectRenderer(theWorld, renderEngine);
-		try
-		{
-			downloadResourcesThread = new ThreadDownloadResources(mcDataDir, this);
-			downloadResourcesThread.start();
-		} catch(Exception var3)
-		{
-			;
-		}
 		checkGLError("Post startup");
 		ingameGUI = new GuiIngame(this);
 		if(serverName != null)
@@ -1774,7 +1863,7 @@
 			fullscreen = !fullscreen;
 			if(fullscreen)
 			{
-				Display.setDisplayMode(Display.getDesktopDisplayMode());
+				func_110441_Q();
 				displayWidth = Display.getDisplayMode().getWidth();
 				displayHeight = Display.getDisplayMode().getHeight();
 				if(displayWidth <= 0)
@@ -1787,15 +1876,9 @@
 				}
 			} else
 			{
-				if(mcCanvas != null)
-				{
-					displayWidth = mcCanvas.getWidth();
-					displayHeight = mcCanvas.getHeight();
-				} else
-				{
-					displayWidth = tempDisplayWidth;
-					displayHeight = tempDisplayHeight;
-				}
+				Display.setDisplayMode(new DisplayMode(tempDisplayWidth, tempDisplayHeight));
+				displayWidth = tempDisplayWidth;
+				displayHeight = tempDisplayHeight;
 				if(displayWidth <= 0)
 				{
 					displayWidth = 1;
@@ -1849,34 +1932,14 @@
 		}
 	}
 	
-	public static File getAppDir(String par0Str)
+	static String func_110431_a(Minecraft p_110431_0_)
 	{
-		String var1 = System.getProperty("user.home", ".");
-		File var2;
-		switch(EnumOSHelper.field_90049_a[getOs().ordinal()])
-		{
-			case 1:
-			case 2:
-				var2 = new File(var1, '.' + par0Str + '/');
-				break;
-			case 3:
-				String var3 = System.getenv("APPDATA");
-				if(var3 != null)
-				{
-					var2 = new File(var3, "." + par0Str + '/');
-				} else
-				{
-					var2 = new File(var1, '.' + par0Str + '/');
-				}
-				break;
-			case 4:
-				var2 = new File(var1, "Library/Application Support/" + par0Str);
-				break;
-			default:
-				var2 = new File(var1, par0Str + '/');
-		}
-		if(!var2.exists() && !var2.mkdirs()) throw new RuntimeException("The working directory could not be created: " + var2);
-		else return var2;
+		return p_110431_0_.field_110447_Z;
+	}
+	
+	static LanguageManager func_142024_b(Minecraft p_142024_0_)
+	{
+		return p_142024_0_.field_135017_as;
 	}
 	
 	public static int getGLMaximumTextureSize()
@@ -1893,21 +1956,6 @@
 	public static Minecraft getMinecraft()
 	{
 		return theMinecraft;
-	}
-	
-	public static File getMinecraftDir()
-	{
-		if(minecraftDir == null)
-		{
-			minecraftDir = getAppDir("minecraft");
-		}
-		return minecraftDir;
-	}
-	
-	public static EnumOS getOs()
-	{
-		String var0 = System.getProperty("os.name").toLowerCase();
-		return var0.contains("win") ? EnumOS.WINDOWS : var0.contains("mac") ? EnumOS.MACOS : var0.contains("solaris") ? EnumOS.SOLARIS : var0.contains("sunos") ? EnumOS.SOLARIS : var0.contains("linux") ? EnumOS.LINUX : var0.contains("unix") ? EnumOS.LINUX : EnumOS.UNKNOWN;
 	}
 	
 	public static long getSystemTime()
@@ -1928,98 +1976,6 @@
 	public static boolean isGuiEnabled()
 	{
 		return theMinecraft == null || !theMinecraft.gameSettings.hideGUI;
-	}
-	
-	public static void main(String[] par0ArrayOfStr)
-	{
-		HashMap var1 = new HashMap();
-		boolean var2 = false;
-		boolean var3 = true;
-		boolean var4 = false;
-		String var5 = "Player" + getSystemTime() % 1000L;
-		String var6 = var5;
-		if(par0ArrayOfStr.length > 0)
-		{
-			var6 = par0ArrayOfStr[0];
-		}
-		String var7 = "-";
-		if(par0ArrayOfStr.length > 1)
-		{
-			var7 = par0ArrayOfStr[1];
-		}
-		ArrayList var8 = new ArrayList();
-		for(int var9 = 2; var9 < par0ArrayOfStr.length; ++var9)
-		{
-			String var10 = par0ArrayOfStr[var9];
-			String var11 = var9 == par0ArrayOfStr.length - 1 ? null : par0ArrayOfStr[var9 + 1];
-			boolean var12 = false;
-			if(!var10.equals("-demo") && !var10.equals("--demo"))
-			{
-				if(var10.equals("--applet"))
-				{
-					var3 = false;
-				} else if(var10.equals("--password") && var11 != null)
-				{
-					String[] var13 = HttpUtil.loginToMinecraft((ILogAgent) null, var6, var11);
-					if(var13 != null)
-					{
-						var6 = var13[0];
-						var7 = var13[1];
-						var8.add("Logged in insecurely as " + var6);
-					} else
-					{
-						var8.add("Could not log in as " + var6 + " with given password");
-					}
-					var12 = true;
-				}
-			} else
-			{
-				var2 = true;
-			}
-			if(var12)
-			{
-				++var9;
-			}
-		}
-		if(var6.contains("@") && var7.length() <= 1)
-		{
-			var6 = var5;
-		}
-		var1.put("demo", "" + var2);
-		var1.put("stand-alone", "" + var3);
-		var1.put("username", var6);
-		var1.put("fullscreen", "" + var4);
-		var1.put("sessionid", var7);
-		Frame var16 = new Frame();
-		var16.setTitle("Minecraft");
-		var16.setBackground(Color.BLACK);
-		JPanel var17 = new JPanel();
-		var16.setLayout(new BorderLayout());
-		var17.setPreferredSize(new Dimension(854, 480));
-		var16.add(var17, "Center");
-		var16.pack();
-		var16.setLocationRelativeTo((Component) null);
-		var16.setVisible(true);
-		var16.addWindowListener(new GameWindowListener());
-		MinecraftFakeLauncher var15 = new MinecraftFakeLauncher(var1);
-		MinecraftApplet var18 = new MinecraftApplet();
-		var18.setStub(var15);
-		var15.setLayout(new BorderLayout());
-		var15.add(var18, "Center");
-		var15.validate();
-		var16.removeAll();
-		var16.setLayout(new BorderLayout());
-		var16.add(var15, "Center");
-		var16.validate();
-		var18.init();
-		Iterator var19 = var8.iterator();
-		while(var19.hasNext())
-		{
-			String var14 = (String) var19.next();
-			getMinecraft().getLogAgent().logInfo(var14);
-		}
-		var18.start();
-		Runtime.getRuntime().addShutdownHook(new ThreadShutdown());
 	}
 	
 	public static void stopIntegratedServer()
diff --git a/RMCClient/minecraft/net/minecraft/client/MinecraftApplet.java b/RMCClient/minecraft/net/minecraft/client/MinecraftApplet.java
deleted file mode 100644
index 2e0a5f6..0000000
--- a/RMCClient/minecraft/net/minecraft/client/MinecraftApplet.java
+++ /dev/null
@@ -1,101 +0,0 @@
-package net.minecraft.client;
-
-import java.applet.Applet;
-import java.awt.BorderLayout;
-import java.awt.Canvas;
-
-import net.minecraft.src.CanvasMinecraftApplet;
-import net.minecraft.src.MinecraftAppletImpl;
-import net.minecraft.src.Session;
-
-public class MinecraftApplet extends Applet
-{
-	private static final long serialVersionUID = 1L;
-	private Canvas mcCanvas;
-	private Minecraft mc;
-	private Thread mcThread = null;
-	
-	@Override public void destroy()
-	{
-		shutdown();
-	}
-	
-	@Override public void init()
-	{
-		mcCanvas = new CanvasMinecraftApplet(this);
-		boolean var1 = "true".equalsIgnoreCase(getParameter("fullscreen"));
-		mc = new MinecraftAppletImpl(this, mcCanvas, this, getWidth(), getHeight(), var1);
-		mc.minecraftUri = getDocumentBase().getHost();
-		if(getDocumentBase().getPort() > 0)
-		{
-			mc.minecraftUri = mc.minecraftUri + ":" + getDocumentBase().getPort();
-		}
-		if(getParameter("username") != null && getParameter("sessionid") != null)
-		{
-			mc.session = new Session(getParameter("username"), getParameter("sessionid"));
-			mc.getLogAgent().logInfo("Setting user: " + mc.session.username);
-			System.out.println("(Session ID is " + mc.session.sessionId + ")");
-		} else
-		{
-			mc.session = new Session("Player", "");
-		}
-		mc.setDemo("true".equals(getParameter("demo")));
-		if(getParameter("server") != null && getParameter("port") != null)
-		{
-			mc.setServer(getParameter("server"), Integer.parseInt(getParameter("port")));
-		}
-		mc.hideQuitButton = !"true".equals(getParameter("stand-alone"));
-		setLayout(new BorderLayout());
-		this.add(mcCanvas, "Center");
-		mcCanvas.setFocusable(true);
-		mcCanvas.setFocusTraversalKeysEnabled(false);
-		validate();
-	}
-	
-	public void shutdown()
-	{
-		if(mcThread != null)
-		{
-			mc.shutdown();
-			try
-			{
-				mcThread.join(10000L);
-			} catch(InterruptedException var4)
-			{
-				try
-				{
-					mc.shutdownMinecraftApplet();
-				} catch(Exception var3)
-				{
-					var3.printStackTrace();
-				}
-			}
-			mcThread = null;
-		}
-	}
-	
-	@Override public void start()
-	{
-		if(mc != null)
-		{
-			mc.isGamePaused = false;
-		}
-	}
-	
-	public void startMainThread()
-	{
-		if(mcThread == null)
-		{
-			mcThread = new Thread(mc, "Minecraft main thread");
-			mcThread.start();
-		}
-	}
-	
-	@Override public void stop()
-	{
-		if(mc != null)
-		{
-			mc.isGamePaused = true;
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/server/MinecraftServer.java b/RMCClient/minecraft/net/minecraft/server/MinecraftServer.java
index 8d5f2e2..7c0de67 100644
--- a/RMCClient/minecraft/net/minecraft/server/MinecraftServer.java
+++ b/RMCClient/minecraft/net/minecraft/server/MinecraftServer.java
@@ -3,6 +3,7 @@
 import java.awt.GraphicsEnvironment;
 import java.io.File;
 import java.io.IOException;
+import java.net.Proxy;
 import java.security.KeyPair;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
@@ -15,6 +16,7 @@
 import net.minecraft.src.CallableIsServerModded;
 import net.minecraft.src.CallableServerMemoryStats;
 import net.minecraft.src.CallableServerProfiler;
+import net.minecraft.src.ChatMessageComponent;
 import net.minecraft.src.ChunkCoordinates;
 import net.minecraft.src.CommandBase;
 import net.minecraft.src.ConvertingProgressUpdate;
@@ -42,8 +44,6 @@
 import net.minecraft.src.ReportedException;
 import net.minecraft.src.ServerCommandManager;
 import net.minecraft.src.ServerConfigurationManager;
-import net.minecraft.src.StringTranslate;
-import net.minecraft.src.StringUtils;
 import net.minecraft.src.ThreadMinecraftServer;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldInfo;
@@ -55,9 +55,9 @@
 
 public abstract class MinecraftServer implements ICommandSender, Runnable, IPlayerUsage
 {
-	private static MinecraftServer mcServer = null;
+	private static MinecraftServer mcServer;
 	private final ISaveFormat anvilConverterForAnvilFile;
-	private final PlayerUsageSnooper usageSnooper = new PlayerUsageSnooper("server", this);
+	private final PlayerUsageSnooper usageSnooper = new PlayerUsageSnooper("server", this, func_130071_aq());
 	private final File anvilFile;
 	private final List tickables = new ArrayList();
 	private final ICommandManager commandManager;
@@ -67,8 +67,9 @@
 	public WorldServer[] worldServers;
 	private ServerConfigurationManager serverConfigManager;
 	private boolean serverRunning = true;
-	private boolean serverStopped = false;
-	private int tickCounter = 0;
+	private boolean serverStopped;
+	private int tickCounter;
+	protected Proxy field_110456_c;
 	public String currentTask;
 	public int percentDone;
 	private boolean onlineMode;
@@ -82,11 +83,11 @@
 	private long lastSentPacketSize;
 	private long lastReceivedID;
 	private long lastReceivedSize;
-	public final long[] sentPacketCountArray = new long[100];
-	public final long[] sentPacketSizeArray = new long[100];
-	public final long[] receivedPacketCountArray = new long[100];
-	public final long[] receivedPacketSizeArray = new long[100];
-	public final long[] tickTimeArray = new long[100];
+	public final long[] sentPacketCountArray;
+	public final long[] sentPacketSizeArray;
+	public final long[] receivedPacketCountArray;
+	public final long[] receivedPacketSizeArray;
+	public final long[] tickTimeArray;
 	public long[][] timeOfLastDimensionTick;
 	private KeyPair serverKeyPair;
 	private String serverOwner;
@@ -95,19 +96,26 @@
 	private boolean isDemo;
 	private boolean enableBonusChest;
 	private boolean worldIsBeingDeleted;
-	private String texturePack = "";
-	private boolean serverIsRunning = false;
+	private String texturePack;
+	private boolean serverIsRunning;
 	private long timeOfLastWarning;
 	private String userMessage;
 	private boolean startProfiling;
-	private boolean field_104057_T = false;
+	private boolean field_104057_T;
 	
-	public MinecraftServer(File par1File)
+	public MinecraftServer(File p_i1498_1_)
 	{
+		field_110456_c = Proxy.NO_PROXY;
+		sentPacketCountArray = new long[100];
+		sentPacketSizeArray = new long[100];
+		receivedPacketCountArray = new long[100];
+		receivedPacketSizeArray = new long[100];
+		tickTimeArray = new long[100];
+		texturePack = "";
 		mcServer = this;
-		anvilFile = par1File;
+		anvilFile = p_i1498_1_;
 		commandManager = new ServerCommandManager();
-		anvilConverterForAnvilFile = new AnvilSaveConverter(par1File);
+		anvilConverterForAnvilFile = new AnvilSaveConverter(p_i1498_1_);
 		registerDispenseBehaviors();
 	}
 	
@@ -134,6 +142,7 @@
 		par1PlayerUsageSnooper.addData("players_seen", Integer.valueOf(serverConfigManager.getAvailablePlayerDat().length));
 		par1PlayerUsageSnooper.addData("uses_auth", Boolean.valueOf(onlineMode));
 		par1PlayerUsageSnooper.addData("gui_state", getGuiEnabled() ? "enabled" : "disabled");
+		par1PlayerUsageSnooper.addData("run_time", Long.valueOf((func_130071_aq() - par1PlayerUsageSnooper.func_130105_g()) / 60L * 1000L));
 		par1PlayerUsageSnooper.addData("avg_tick_ms", Integer.valueOf((int) (MathHelper.average(tickTimeArray) * 1.0E-6D)));
 		par1PlayerUsageSnooper.addData("avg_sent_packet_count", Integer.valueOf((int) MathHelper.average(sentPacketCountArray)));
 		par1PlayerUsageSnooper.addData("avg_sent_packet_size", Integer.valueOf((int) MathHelper.average(sentPacketSizeArray)));
@@ -241,6 +250,18 @@
 		return field_104057_T;
 	}
 	
+	public Proxy func_110454_ao()
+	{
+		return field_110456_c;
+	}
+	
+	public abstract int func_110455_j();
+	
+	@Override public World func_130014_f_()
+	{
+		return worldServers[0];
+	}
+	
 	public boolean func_96290_a(World par1World, int par2, int par3, int par4, EntityPlayer par5EntityPlayer)
 	{
 		return false;
@@ -339,7 +360,7 @@
 	
 	public String getMinecraftVersion()
 	{
-		return "1.5.2";
+		return "1.6.2";
 	}
 	
 	public String getMOTD()
@@ -463,18 +484,22 @@
 	
 	protected void initialWorldChunkLoad()
 	{
+		boolean var1 = true;
+		boolean var2 = true;
+		boolean var3 = true;
+		boolean var4 = true;
 		int var5 = 0;
 		setUserMessage("menu.generatingTerrain");
 		byte var6 = 0;
 		getLogAgent().logInfo("Preparing start region for level " + var6);
 		WorldServer var7 = worldServers[var6];
 		ChunkCoordinates var8 = var7.getSpawnPoint();
-		long var9 = System.currentTimeMillis();
+		long var9 = func_130071_aq();
 		for(int var11 = -192; var11 <= 192 && isServerRunning(); var11 += 16)
 		{
 			for(int var12 = -192; var12 <= 192 && isServerRunning(); var12 += 16)
 			{
-				long var13 = System.currentTimeMillis();
+				long var13 = func_130071_aq();
 				if(var13 - var9 > 1000L)
 				{
 					outputPercentRemaining("Preparing spawn area", var5 * 100 / 625);
@@ -640,10 +665,10 @@
 		{
 			if(startServer())
 			{
-				long var1 = System.currentTimeMillis();
+				long var1 = func_130071_aq();
 				for(long var50 = 0L; serverRunning; serverIsRunning = true)
 				{
-					long var5 = System.currentTimeMillis();
+					long var5 = func_130071_aq();
 					long var7 = var5 - var1;
 					if(var7 > 2000L && var1 - timeOfLastWarning >= 15000L)
 					{
@@ -740,9 +765,9 @@
 		}
 	}
 	
-	@Override public void sendChatToPlayer(String par1Str)
+	@Override public void sendChatToPlayer(ChatMessageComponent par1Str)
 	{
-		getLogAgent().logInfo(StringUtils.stripControlCodes(par1Str));
+		getLogAgent().logInfo(par1Str.toString());
 	}
 	
 	public boolean serverIsInRunLoop()
@@ -957,11 +982,6 @@
 		theProfiler.endSection();
 	}
 	
-	@Override public String translateString(String par1Str, Object ... par2ArrayOfObj)
-	{
-		return StringTranslate.getInstance().translateKeyFormat(par1Str, par2ArrayOfObj);
-	}
-	
 	public void updateTimeLightAndEntities()
 	{
 		theProfiler.startSection("levels");
@@ -979,7 +999,7 @@
 				if(tickCounter % 20 == 0)
 				{
 					theProfiler.startSection("timeSync");
-					serverConfigManager.sendPacketToAllPlayersInDimension(new Packet4UpdateTime(var4.getTotalWorldTime(), var4.getWorldTime()), var4.provider.dimensionId);
+					serverConfigManager.sendPacketToAllPlayersInDimension(new Packet4UpdateTime(var4.getTotalWorldTime(), var4.getWorldTime(), var4.getGameRules().getGameRuleBooleanValue("doDaylightCycle")), var4.provider.dimensionId);
 					theProfiler.endSection();
 				}
 				theProfiler.startSection("tick");
@@ -1027,6 +1047,11 @@
 		return par1 == -1 ? worldServers[1] : par1 == 1 ? worldServers[2] : worldServers[0];
 	}
 	
+	public static long func_130071_aq()
+	{
+		return System.currentTimeMillis();
+	}
+	
 	public static MinecraftServer getServer()
 	{
 		return mcServer;
diff --git a/RMCClient/minecraft/net/minecraft/src/AABBPool.java b/RMCClient/minecraft/net/minecraft/src/AABBPool.java
index 810fd84..fa0e0bb 100644
--- a/RMCClient/minecraft/net/minecraft/src/AABBPool.java
+++ b/RMCClient/minecraft/net/minecraft/src/AABBPool.java
@@ -8,14 +8,14 @@
 	private final int maxNumCleans;
 	private final int numEntriesToRemove;
 	private final List listAABB = new ArrayList();
-	private int nextPoolIndex = 0;
-	private int maxPoolIndex = 0;
-	private int numCleans = 0;
+	private int nextPoolIndex;
+	private int maxPoolIndex;
+	private int numCleans;
 	
-	public AABBPool(int par1, int par2)
+	public AABBPool(int p_i2301_1_, int p_i2301_2_)
 	{
-		maxNumCleans = par1;
-		numEntriesToRemove = par2;
+		maxNumCleans = p_i2301_1_;
+		numEntriesToRemove = p_i2301_2_;
 	}
 	
 	public void cleanPool()
diff --git a/RMCClient/minecraft/net/minecraft/src/AbstractClientPlayer.java b/RMCClient/minecraft/net/minecraft/src/AbstractClientPlayer.java
new file mode 100644
index 0000000..bf1a1ea
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/AbstractClientPlayer.java
@@ -0,0 +1,97 @@
+package net.minecraft.src;
+
+import net.minecraft.client.Minecraft;
+
+public abstract class AbstractClientPlayer extends EntityPlayer
+{
+	public static final ResourceLocation field_110314_b = new ResourceLocation("textures/entity/steve.png");
+	private ThreadDownloadImageData field_110316_a;
+	private ThreadDownloadImageData field_110315_c;
+	private ResourceLocation field_110312_d;
+	private ResourceLocation field_110313_e;
+	
+	public AbstractClientPlayer(World p_i1236_1_, String p_i1236_2_)
+	{
+		super(p_i1236_1_, p_i1236_2_);
+		func_110302_j();
+	}
+	
+	protected void func_110302_j()
+	{
+		System.out.println("Setting up custom skins");
+		if(username != null && !username.isEmpty())
+		{
+			field_110312_d = func_110311_f(username);
+			field_110313_e = func_110299_g(username);
+			field_110316_a = func_110304_a(field_110312_d, username);
+			field_110315_c = func_110307_b(field_110313_e, username);
+		}
+	}
+	
+	public ResourceLocation func_110303_q()
+	{
+		return field_110313_e;
+	}
+	
+	public ResourceLocation func_110306_p()
+	{
+		return field_110312_d;
+	}
+	
+	public ThreadDownloadImageData func_110309_l()
+	{
+		return field_110316_a;
+	}
+	
+	public ThreadDownloadImageData func_110310_o()
+	{
+		return field_110315_c;
+	}
+	
+	public static ResourceLocation func_110299_g(String p_110299_0_)
+	{
+		return new ResourceLocation("cloaks/" + StringUtils.stripControlCodes(p_110299_0_));
+	}
+	
+	public static String func_110300_d(String p_110300_0_)
+	{
+		return String.format("http://skins.minecraft.net/MinecraftSkins/%s.png", new Object[] { StringUtils.stripControlCodes(p_110300_0_) });
+	}
+	
+	private static ThreadDownloadImageData func_110301_a(ResourceLocation p_110301_0_, String p_110301_1_, ResourceLocation p_110301_2_, IImageBuffer p_110301_3_)
+	{
+		TextureManager var4 = Minecraft.getMinecraft().func_110434_K();
+		Object var5 = var4.func_110581_b(p_110301_0_);
+		if(var5 == null)
+		{
+			var5 = new ThreadDownloadImageData(p_110301_1_, p_110301_2_, p_110301_3_);
+			var4.func_110579_a(p_110301_0_, (TextureObject) var5);
+		}
+		return (ThreadDownloadImageData) var5;
+	}
+	
+	public static ThreadDownloadImageData func_110304_a(ResourceLocation p_110304_0_, String p_110304_1_)
+	{
+		return func_110301_a(p_110304_0_, func_110300_d(p_110304_1_), field_110314_b, new ImageBufferDownload());
+	}
+	
+	public static ResourceLocation func_110305_h(String p_110305_0_)
+	{
+		return new ResourceLocation("skull/" + StringUtils.stripControlCodes(p_110305_0_));
+	}
+	
+	public static ThreadDownloadImageData func_110307_b(ResourceLocation p_110307_0_, String p_110307_1_)
+	{
+		return func_110301_a(p_110307_0_, func_110308_e(p_110307_1_), (ResourceLocation) null, (IImageBuffer) null);
+	}
+	
+	public static String func_110308_e(String p_110308_0_)
+	{
+		return String.format("http://skins.minecraft.net/MinecraftCloaks/%s.png", new Object[] { StringUtils.stripControlCodes(p_110308_0_) });
+	}
+	
+	public static ResourceLocation func_110311_f(String p_110311_0_)
+	{
+		return new ResourceLocation("skins/" + StringUtils.stripControlCodes(p_110311_0_));
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/AbstractResourcePack.java b/RMCClient/minecraft/net/minecraft/src/AbstractResourcePack.java
new file mode 100644
index 0000000..e437b57
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/AbstractResourcePack.java
@@ -0,0 +1,82 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+
+import javax.imageio.ImageIO;
+
+import net.minecraft.client.Minecraft;
+
+public abstract class AbstractResourcePack implements ResourcePack
+{
+	protected static final ILogAgent field_110598_a = Minecraft.getMinecraft().getLogAgent();
+	protected final File field_110597_b;
+	
+	public AbstractResourcePack(File p_i1287_1_)
+	{
+		field_110597_b = p_i1287_1_;
+	}
+	
+	@Override public BufferedImage func_110586_a() throws IOException
+	{
+		return ImageIO.read(func_110591_a("pack.png"));
+	}
+	
+	@Override public boolean func_110589_b(ResourceLocation p_110589_1_)
+	{
+		return func_110593_b(func_110592_c(p_110589_1_));
+	}
+	
+	@Override public InputStream func_110590_a(ResourceLocation p_110590_1_) throws IOException
+	{
+		return func_110591_a(func_110592_c(p_110590_1_));
+	}
+	
+	protected abstract InputStream func_110591_a(String var1) throws IOException;
+	
+	protected abstract boolean func_110593_b(String var1);
+	
+	protected void func_110594_c(String p_110594_1_)
+	{
+		field_110598_a.logWarningFormatted("ResourcePack: ignored non-lowercase namespace: %s in %s", new Object[] { p_110594_1_, field_110597_b });
+	}
+	
+	@Override public String func_130077_b()
+	{
+		return field_110597_b.getName();
+	}
+	
+	@Override public MetadataSection func_135058_a(MetadataSerializer p_135058_1_, String p_135058_2_) throws IOException
+	{
+		return func_110596_a(p_135058_1_, func_110591_a("pack.mcmeta"), p_135058_2_);
+	}
+	
+	private static String func_110592_c(ResourceLocation p_110592_0_)
+	{
+		return String.format("%s/%s/%s", new Object[] { "assets", p_110592_0_.func_110624_b(), p_110592_0_.func_110623_a() });
+	}
+	
+	protected static String func_110595_a(File p_110595_0_, File p_110595_1_)
+	{
+		return p_110595_0_.toURI().relativize(p_110595_1_.toURI()).getPath();
+	}
+	
+	static MetadataSection func_110596_a(MetadataSerializer p_110596_0_, InputStream p_110596_1_, String p_110596_2_)
+	{
+		JsonObject var3 = null;
+		BufferedReader var4 = null;
+		try
+		{
+			var4 = new BufferedReader(new InputStreamReader(p_110596_1_));
+			var3 = new JsonParser().parse(var4).getAsJsonObject();
+		} finally
+		{
+			IOUtils.closeQuietly(var4);
+		}
+		return p_110596_0_.func_110503_a(p_110596_2_, var3);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/AbstractTexture.java b/RMCClient/minecraft/net/minecraft/src/AbstractTexture.java
new file mode 100644
index 0000000..f67e862
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/AbstractTexture.java
@@ -0,0 +1,15 @@
+package net.minecraft.src;
+
+public abstract class AbstractTexture implements TextureObject
+{
+	protected int field_110553_a = -1;
+	
+	@Override public int func_110552_b()
+	{
+		if(field_110553_a == -1)
+		{
+			field_110553_a = TextureUtil.func_110996_a();
+		}
+		return field_110553_a;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Achievement.java b/RMCClient/minecraft/net/minecraft/src/Achievement.java
index 87beece..9898dd6 100644
--- a/RMCClient/minecraft/net/minecraft/src/Achievement.java
+++ b/RMCClient/minecraft/net/minecraft/src/Achievement.java
@@ -10,40 +10,40 @@
 	public final ItemStack theItemStack;
 	private boolean isSpecial;
 	
-	public Achievement(int par1, String par2Str, int par3, int par4, Block par5Block, Achievement par6Achievement)
+	public Achievement(int p_i1540_1_, String p_i1540_2_, int p_i1540_3_, int p_i1540_4_, Block p_i1540_5_, Achievement p_i1540_6_)
 	{
-		this(par1, par2Str, par3, par4, new ItemStack(par5Block), par6Achievement);
+		this(p_i1540_1_, p_i1540_2_, p_i1540_3_, p_i1540_4_, new ItemStack(p_i1540_5_), p_i1540_6_);
 	}
 	
-	public Achievement(int par1, String par2Str, int par3, int par4, Item par5Item, Achievement par6Achievement)
+	public Achievement(int p_i1539_1_, String p_i1539_2_, int p_i1539_3_, int p_i1539_4_, Item p_i1539_5_, Achievement p_i1539_6_)
 	{
-		this(par1, par2Str, par3, par4, new ItemStack(par5Item), par6Achievement);
+		this(p_i1539_1_, p_i1539_2_, p_i1539_3_, p_i1539_4_, new ItemStack(p_i1539_5_), p_i1539_6_);
 	}
 	
-	public Achievement(int par1, String par2Str, int par3, int par4, ItemStack par5ItemStack, Achievement par6Achievement)
+	public Achievement(int p_i1541_1_, String p_i1541_2_, int p_i1541_3_, int p_i1541_4_, ItemStack p_i1541_5_, Achievement p_i1541_6_)
 	{
-		super(5242880 + par1, "achievement." + par2Str);
-		theItemStack = par5ItemStack;
-		achievementDescription = "achievement." + par2Str + ".desc";
-		displayColumn = par3;
-		displayRow = par4;
-		if(par3 < AchievementList.minDisplayColumn)
+		super(5242880 + p_i1541_1_, "achievement." + p_i1541_2_);
+		theItemStack = p_i1541_5_;
+		achievementDescription = "achievement." + p_i1541_2_ + ".desc";
+		displayColumn = p_i1541_3_;
+		displayRow = p_i1541_4_;
+		if(p_i1541_3_ < AchievementList.minDisplayColumn)
 		{
-			AchievementList.minDisplayColumn = par3;
+			AchievementList.minDisplayColumn = p_i1541_3_;
 		}
-		if(par4 < AchievementList.minDisplayRow)
+		if(p_i1541_4_ < AchievementList.minDisplayRow)
 		{
-			AchievementList.minDisplayRow = par4;
+			AchievementList.minDisplayRow = p_i1541_4_;
 		}
-		if(par3 > AchievementList.maxDisplayColumn)
+		if(p_i1541_3_ > AchievementList.maxDisplayColumn)
 		{
-			AchievementList.maxDisplayColumn = par3;
+			AchievementList.maxDisplayColumn = p_i1541_3_;
 		}
-		if(par4 > AchievementList.maxDisplayRow)
+		if(p_i1541_4_ > AchievementList.maxDisplayRow)
 		{
-			AchievementList.maxDisplayRow = par4;
+			AchievementList.maxDisplayRow = p_i1541_4_;
 		}
-		parentAchievement = par6Achievement;
+		parentAchievement = p_i1541_6_;
 	}
 	
 	public String getDescription()
diff --git a/RMCClient/minecraft/net/minecraft/src/AchievementList.java b/RMCClient/minecraft/net/minecraft/src/AchievementList.java
index d26a142..2aa10ca 100644
--- a/RMCClient/minecraft/net/minecraft/src/AchievementList.java
+++ b/RMCClient/minecraft/net/minecraft/src/AchievementList.java
@@ -41,9 +41,4 @@
 	public static void init()
 	{
 	}
-	
-	static
-	{
-		System.out.println(achievementList.size() + " achievements");
-	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ActiveRenderInfo.java b/RMCClient/minecraft/net/minecraft/src/ActiveRenderInfo.java
index da7ec04..aa85889 100644
--- a/RMCClient/minecraft/net/minecraft/src/ActiveRenderInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/ActiveRenderInfo.java
@@ -8,9 +8,9 @@
 
 public class ActiveRenderInfo
 {
-	public static float objectX = 0.0F;
-	public static float objectY = 0.0F;
-	public static float objectZ = 0.0F;
+	public static float objectX;
+	public static float objectY;
+	public static float objectZ;
 	private static IntBuffer viewport = GLAllocation.createDirectIntBuffer(16);
 	private static FloatBuffer modelview = GLAllocation.createDirectFloatBuffer(16);
 	private static FloatBuffer projection = GLAllocation.createDirectFloatBuffer(16);
@@ -21,7 +21,7 @@
 	public static float rotationYZ;
 	public static float rotationXY;
 	
-	public static int getBlockIdAtEntityViewpoint(World par0World, EntityLiving par1EntityLiving, float par2)
+	public static int getBlockIdAtEntityViewpoint(World par0World, EntityLivingBase par1EntityLiving, float par2)
 	{
 		Vec3 var3 = projectViewFromEntity(par1EntityLiving, par2);
 		ChunkPosition var4 = new ChunkPosition(var3);
@@ -38,7 +38,7 @@
 		return var5;
 	}
 	
-	public static Vec3 projectViewFromEntity(EntityLiving par0EntityLiving, double par1)
+	public static Vec3 projectViewFromEntity(EntityLivingBase par0EntityLiving, double par1)
 	{
 		double var3 = par0EntityLiving.prevPosX + (par0EntityLiving.posX - par0EntityLiving.prevPosX) * par1;
 		double var5 = par0EntityLiving.prevPosY + (par0EntityLiving.posY - par0EntityLiving.prevPosY) * par1 + par0EntityLiving.getEyeHeight();
diff --git a/RMCClient/minecraft/net/minecraft/src/AnimalChest.java b/RMCClient/minecraft/net/minecraft/src/AnimalChest.java
new file mode 100644
index 0000000..256df72
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/AnimalChest.java
@@ -0,0 +1,14 @@
+package net.minecraft.src;
+
+public class AnimalChest extends InventoryBasic
+{
+	public AnimalChest(String p_i1797_1_, boolean p_i1797_2_, int p_i1797_3_)
+	{
+		super(p_i1797_1_, p_i1797_2_, p_i1797_3_);
+	}
+	
+	public AnimalChest(String p_i1796_1_, int p_i1796_2_)
+	{
+		super(p_i1796_1_, false, p_i1796_2_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/AnimationFrame.java b/RMCClient/minecraft/net/minecraft/src/AnimationFrame.java
new file mode 100644
index 0000000..e900a71
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/AnimationFrame.java
@@ -0,0 +1,33 @@
+package net.minecraft.src;
+
+public class AnimationFrame
+{
+	private final int field_110499_a;
+	private final int field_110498_b;
+	
+	public AnimationFrame(int p_i1307_1_)
+	{
+		this(p_i1307_1_, -1);
+	}
+	
+	public AnimationFrame(int p_i1308_1_, int p_i1308_2_)
+	{
+		field_110499_a = p_i1308_1_;
+		field_110498_b = p_i1308_2_;
+	}
+	
+	public boolean func_110495_a()
+	{
+		return field_110498_b == -1;
+	}
+	
+	public int func_110496_c()
+	{
+		return field_110499_a;
+	}
+	
+	public int func_110497_b()
+	{
+		return field_110498_b;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/AnimationMetadataSection.java b/RMCClient/minecraft/net/minecraft/src/AnimationMetadataSection.java
new file mode 100644
index 0000000..d0fa543
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/AnimationMetadataSection.java
@@ -0,0 +1,75 @@
+package net.minecraft.src;
+
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Set;
+
+public class AnimationMetadataSection implements MetadataSection
+{
+	private final List field_110478_a;
+	private final int field_110476_b;
+	private final int field_110477_c;
+	private final int field_110475_d;
+	
+	public AnimationMetadataSection(List p_i1309_1_, int p_i1309_2_, int p_i1309_3_, int p_i1309_4_)
+	{
+		field_110478_a = p_i1309_1_;
+		field_110476_b = p_i1309_2_;
+		field_110477_c = p_i1309_3_;
+		field_110475_d = p_i1309_4_;
+	}
+	
+	public int func_110468_c(int p_110468_1_)
+	{
+		return ((AnimationFrame) field_110478_a.get(p_110468_1_)).func_110496_c();
+	}
+	
+	public int func_110469_d()
+	{
+		return field_110475_d;
+	}
+	
+	public boolean func_110470_b(int p_110470_1_)
+	{
+		return !((AnimationFrame) field_110478_a.get(p_110470_1_)).func_110495_a();
+	}
+	
+	public int func_110471_a()
+	{
+		return field_110477_c;
+	}
+	
+	public int func_110472_a(int p_110472_1_)
+	{
+		AnimationFrame var2 = func_130072_d(p_110472_1_);
+		return var2.func_110495_a() ? field_110475_d : var2.func_110497_b();
+	}
+	
+	public int func_110473_c()
+	{
+		return field_110478_a.size();
+	}
+	
+	public int func_110474_b()
+	{
+		return field_110476_b;
+	}
+	
+	private AnimationFrame func_130072_d(int p_130072_1_)
+	{
+		return (AnimationFrame) field_110478_a.get(p_130072_1_);
+	}
+	
+	public Set func_130073_e()
+	{
+		HashSet var1 = Sets.newHashSet();
+		Iterator var2 = field_110478_a.iterator();
+		while(var2.hasNext())
+		{
+			AnimationFrame var3 = (AnimationFrame) var2.next();
+			var1.add(Integer.valueOf(var3.func_110496_c()));
+		}
+		return var1;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/AnimationMetadataSectionSerializer.java b/RMCClient/minecraft/net/minecraft/src/AnimationMetadataSectionSerializer.java
new file mode 100644
index 0000000..1774c0c
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/AnimationMetadataSectionSerializer.java
@@ -0,0 +1,105 @@
+package net.minecraft.src;
+
+import java.lang.reflect.Type;
+import java.util.ArrayList;
+
+public class AnimationMetadataSectionSerializer extends BaseMetadataSectionSerializer implements JsonSerializer
+{
+	public Object deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_)
+	{
+		return func_110493_a(p_deserialize_1_, p_deserialize_2_, p_deserialize_3_);
+	}
+	
+	@Override public String func_110483_a()
+	{
+		return "animation";
+	}
+	
+	public JsonElement func_110491_a(AnimationMetadataSection p_110491_1_, Type p_110491_2_, JsonSerializationContext p_110491_3_)
+	{
+		JsonObject var4 = new JsonObject();
+		var4.addProperty("frametime", Integer.valueOf(p_110491_1_.func_110469_d()));
+		if(p_110491_1_.func_110474_b() != -1)
+		{
+			var4.addProperty("width", Integer.valueOf(p_110491_1_.func_110474_b()));
+		}
+		if(p_110491_1_.func_110471_a() != -1)
+		{
+			var4.addProperty("height", Integer.valueOf(p_110491_1_.func_110471_a()));
+		}
+		if(p_110491_1_.func_110473_c() > 0)
+		{
+			JsonArray var5 = new JsonArray();
+			for(int var6 = 0; var6 < p_110491_1_.func_110473_c(); ++var6)
+			{
+				if(p_110491_1_.func_110470_b(var6))
+				{
+					JsonObject var7 = new JsonObject();
+					var7.addProperty("index", Integer.valueOf(p_110491_1_.func_110468_c(var6)));
+					var7.addProperty("time", Integer.valueOf(p_110491_1_.func_110472_a(var6)));
+					var5.add(var7);
+				} else
+				{
+					var5.add(new JsonPrimitive(Integer.valueOf(p_110491_1_.func_110468_c(var6))));
+				}
+			}
+			var4.add("frames", var5);
+		}
+		return var4;
+	}
+	
+	private AnimationFrame func_110492_a(int p_110492_1_, JsonElement p_110492_2_)
+	{
+		if(p_110492_2_.isJsonPrimitive())
+		{
+			try
+			{
+				return new AnimationFrame(p_110492_2_.getAsInt());
+			} catch(NumberFormatException var6)
+			{
+				throw new JsonParseException("Invalid animation->frames->" + p_110492_1_ + ": expected number, was " + p_110492_2_, var6);
+			}
+		} else if(p_110492_2_.isJsonObject())
+		{
+			JsonObject var3 = p_110492_2_.getAsJsonObject();
+			int var4 = func_110485_a(var3.get("time"), "frames->" + p_110492_1_ + "->time", Integer.valueOf(-1), 1, Integer.MAX_VALUE);
+			int var5 = func_110485_a(var3.get("index"), "frames->" + p_110492_1_ + "->index", (Integer) null, 0, Integer.MAX_VALUE);
+			return new AnimationFrame(var5, var4);
+		} else return null;
+	}
+	
+	public AnimationMetadataSection func_110493_a(JsonElement p_110493_1_, Type p_110493_2_, JsonDeserializationContext p_110493_3_)
+	{
+		ArrayList var4 = Lists.newArrayList();
+		JsonObject var5 = (JsonObject) p_110493_1_;
+		int var6 = func_110485_a(var5.get("frametime"), "frametime", Integer.valueOf(1), 1, Integer.MAX_VALUE);
+		int var8;
+		if(var5.has("frames"))
+		{
+			try
+			{
+				JsonArray var7 = var5.getAsJsonArray("frames");
+				for(var8 = 0; var8 < var7.size(); ++var8)
+				{
+					JsonElement var9 = var7.get(var8);
+					AnimationFrame var10 = func_110492_a(var8, var9);
+					if(var10 != null)
+					{
+						var4.add(var10);
+					}
+				}
+			} catch(ClassCastException var11)
+			{
+				throw new JsonParseException("Invalid animation->frames: expected array, was " + var5.get("frames"), var11);
+			}
+		}
+		int var12 = func_110485_a(var5.get("width"), "width", Integer.valueOf(-1), 1, Integer.MAX_VALUE);
+		var8 = func_110485_a(var5.get("height"), "height", Integer.valueOf(-1), 1, Integer.MAX_VALUE);
+		return new AnimationMetadataSection(var4, var12, var8, var6);
+	}
+	
+	public JsonElement serialize(Object p_serialize_1_, Type p_serialize_2_, JsonSerializationContext p_serialize_3_)
+	{
+		return func_110491_a((AnimationMetadataSection) p_serialize_1_, p_serialize_2_, p_serialize_3_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/AnvilChunkLoader.java b/RMCClient/minecraft/net/minecraft/src/AnvilChunkLoader.java
index e42c5c7..0b02b65 100644
--- a/RMCClient/minecraft/net/minecraft/src/AnvilChunkLoader.java
+++ b/RMCClient/minecraft/net/minecraft/src/AnvilChunkLoader.java
@@ -17,9 +17,9 @@
 	private Object syncLockObject = new Object();
 	private final File chunkSaveLocation;
 	
-	public AnvilChunkLoader(File par1File)
+	public AnvilChunkLoader(File p_i2003_1_)
 	{
-		chunkSaveLocation = par1File;
+		chunkSaveLocation = p_i2003_1_;
 	}
 	
 	protected void addChunkToPending(ChunkCoordIntPair par1ChunkCoordIntPair, NBTTagCompound par2NBTTagCompound)
@@ -107,6 +107,7 @@
 		Chunk var5 = new Chunk(par1World, var3, var4);
 		var5.heightMap = par2NBTTagCompound.getIntArray("HeightMap");
 		var5.isTerrainPopulated = par2NBTTagCompound.getBoolean("TerrainPopulated");
+		var5.field_111204_q = par2NBTTagCompound.getLong("InhabitedTime");
 		NBTTagList var6 = par2NBTTagCompound.getTagList("Sections");
 		byte var7 = 16;
 		ExtendedBlockStorage[] var8 = new ExtendedBlockStorage[var7];
@@ -230,6 +231,7 @@
 		par3NBTTagCompound.setLong("LastUpdate", par2World.getTotalWorldTime());
 		par3NBTTagCompound.setIntArray("HeightMap", par1Chunk.heightMap);
 		par3NBTTagCompound.setBoolean("TerrainPopulated", par1Chunk.isTerrainPopulated);
+		par3NBTTagCompound.setLong("InhabitedTime", par1Chunk.field_111204_q);
 		ExtendedBlockStorage[] var4 = par1Chunk.getBlockStorageArray();
 		NBTTagList var5 = new NBTTagList("Sections");
 		boolean var6 = !par2World.provider.hasNoSky;
diff --git a/RMCClient/minecraft/net/minecraft/src/AnvilChunkLoaderPending.java b/RMCClient/minecraft/net/minecraft/src/AnvilChunkLoaderPending.java
index af3a49c..0475026 100644
--- a/RMCClient/minecraft/net/minecraft/src/AnvilChunkLoaderPending.java
+++ b/RMCClient/minecraft/net/minecraft/src/AnvilChunkLoaderPending.java
@@ -5,9 +5,9 @@
 	public final ChunkCoordIntPair chunkCoordinate;
 	public final NBTTagCompound nbtTags;
 	
-	public AnvilChunkLoaderPending(ChunkCoordIntPair par1ChunkCoordIntPair, NBTTagCompound par2NBTTagCompound)
+	public AnvilChunkLoaderPending(ChunkCoordIntPair p_i2002_1_, NBTTagCompound p_i2002_2_)
 	{
-		chunkCoordinate = par1ChunkCoordIntPair;
-		nbtTags = par2NBTTagCompound;
+		chunkCoordinate = p_i2002_1_;
+		nbtTags = p_i2002_2_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/AnvilConverterData.java b/RMCClient/minecraft/net/minecraft/src/AnvilConverterData.java
index 10adefe..fb9a9be 100644
--- a/RMCClient/minecraft/net/minecraft/src/AnvilConverterData.java
+++ b/RMCClient/minecraft/net/minecraft/src/AnvilConverterData.java
@@ -15,9 +15,9 @@
 	public final int x;
 	public final int z;
 	
-	public AnvilConverterData(int par1, int par2)
+	public AnvilConverterData(int p_i1999_1_, int p_i1999_2_)
 	{
-		x = par1;
-		z = par2;
+		x = p_i1999_1_;
+		z = p_i1999_2_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/AnvilConverterException.java b/RMCClient/minecraft/net/minecraft/src/AnvilConverterException.java
index 89b295d..190c03d 100644
--- a/RMCClient/minecraft/net/minecraft/src/AnvilConverterException.java
+++ b/RMCClient/minecraft/net/minecraft/src/AnvilConverterException.java
@@ -4,8 +4,8 @@
 {
 	private static final long serialVersionUID = 1L;
 	
-	public AnvilConverterException(String par1Str)
+	public AnvilConverterException(String p_i2160_1_)
 	{
-		super(par1Str);
+		super(p_i2160_1_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/AnvilSaveConverter.java b/RMCClient/minecraft/net/minecraft/src/AnvilSaveConverter.java
index da900bb..4cab95a 100644
--- a/RMCClient/minecraft/net/minecraft/src/AnvilSaveConverter.java
+++ b/RMCClient/minecraft/net/minecraft/src/AnvilSaveConverter.java
@@ -14,9 +14,9 @@
 
 public class AnvilSaveConverter extends SaveFormatOld
 {
-	public AnvilSaveConverter(File par1File)
+	public AnvilSaveConverter(File p_i2144_1_)
 	{
-		super(par1File);
+		super(p_i2144_1_);
 	}
 	
 	private void addRegionFilesToCollection(File par1File, Collection par2Collection)
diff --git a/RMCClient/minecraft/net/minecraft/src/AnvilSaveConverterFileFilter.java b/RMCClient/minecraft/net/minecraft/src/AnvilSaveConverterFileFilter.java
index 7b3f6a4..c4ecdcd 100644
--- a/RMCClient/minecraft/net/minecraft/src/AnvilSaveConverterFileFilter.java
+++ b/RMCClient/minecraft/net/minecraft/src/AnvilSaveConverterFileFilter.java
@@ -7,9 +7,9 @@
 {
 	final AnvilSaveConverter parent;
 	
-	AnvilSaveConverterFileFilter(AnvilSaveConverter par1AnvilSaveConverter)
+	AnvilSaveConverterFileFilter(AnvilSaveConverter p_i2143_1_)
 	{
-		parent = par1AnvilSaveConverter;
+		parent = p_i2143_1_;
 	}
 	
 	@Override public boolean accept(File par1File, String par2Str)
diff --git a/RMCClient/minecraft/net/minecraft/src/AnvilSaveHandler.java b/RMCClient/minecraft/net/minecraft/src/AnvilSaveHandler.java
index d789d97..1babaef 100644
--- a/RMCClient/minecraft/net/minecraft/src/AnvilSaveHandler.java
+++ b/RMCClient/minecraft/net/minecraft/src/AnvilSaveHandler.java
@@ -4,9 +4,9 @@
 
 public class AnvilSaveHandler extends SaveHandler
 {
-	public AnvilSaveHandler(File par1File, String par2Str, boolean par3)
+	public AnvilSaveHandler(File p_i2142_1_, String p_i2142_2_, boolean p_i2142_3_)
 	{
-		super(par1File, par2Str, par3);
+		super(p_i2142_1_, p_i2142_2_, p_i2142_3_);
 	}
 	
 	@Override public void flush()
diff --git a/RMCClient/minecraft/net/minecraft/src/Attribute.java b/RMCClient/minecraft/net/minecraft/src/Attribute.java
new file mode 100644
index 0000000..cca49fa
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Attribute.java
@@ -0,0 +1,12 @@
+package net.minecraft.src;
+
+public interface Attribute
+{
+	String func_111108_a();
+	
+	double func_111109_a(double var1);
+	
+	double func_111110_b();
+	
+	boolean func_111111_c();
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/AttributeInstance.java b/RMCClient/minecraft/net/minecraft/src/AttributeInstance.java
new file mode 100644
index 0000000..51d082a
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/AttributeInstance.java
@@ -0,0 +1,25 @@
+package net.minecraft.src;
+
+import java.util.Collection;
+import java.util.UUID;
+
+public interface AttributeInstance
+{
+	void func_111121_a(AttributeModifier var1);
+	
+	Collection func_111122_c();
+	
+	Attribute func_111123_a();
+	
+	void func_111124_b(AttributeModifier var1);
+	
+	double func_111125_b();
+	
+	double func_111126_e();
+	
+	AttributeModifier func_111127_a(UUID var1);
+	
+	void func_111128_a(double var1);
+	
+	void func_142049_d();
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/AttributeModifier.java b/RMCClient/minecraft/net/minecraft/src/AttributeModifier.java
new file mode 100644
index 0000000..5235a2a
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/AttributeModifier.java
@@ -0,0 +1,83 @@
+package net.minecraft.src;
+
+import java.util.UUID;
+
+public class AttributeModifier
+{
+	private final double field_111174_a;
+	private final int field_111172_b;
+	private final String field_111173_c;
+	private final UUID field_111170_d;
+	private boolean field_111171_e;
+	
+	public AttributeModifier(String p_i1605_1_, double p_i1605_2_, int p_i1605_4_)
+	{
+		this(UUID.randomUUID(), p_i1605_1_, p_i1605_2_, p_i1605_4_);
+	}
+	
+	public AttributeModifier(UUID p_i1606_1_, String p_i1606_2_, double p_i1606_3_, int p_i1606_5_)
+	{
+		field_111171_e = true;
+		field_111170_d = p_i1606_1_;
+		field_111173_c = p_i1606_2_;
+		field_111174_a = p_i1606_3_;
+		field_111172_b = p_i1606_5_;
+		Validate.notEmpty(p_i1606_2_, "Modifier name cannot be empty", new Object[0]);
+		Validate.inclusiveBetween(Integer.valueOf(0), Integer.valueOf(2), Integer.valueOf(p_i1606_5_), "Invalid operation", new Object[0]);
+	}
+	
+	@Override public boolean equals(Object par1Obj)
+	{
+		if(this == par1Obj) return true;
+		else if(par1Obj != null && this.getClass() == par1Obj.getClass())
+		{
+			AttributeModifier var2 = (AttributeModifier) par1Obj;
+			if(field_111170_d != null)
+			{
+				if(!field_111170_d.equals(var2.field_111170_d)) return false;
+			} else if(var2.field_111170_d != null) return false;
+			return true;
+		} else return false;
+	}
+	
+	public double func_111164_d()
+	{
+		return field_111174_a;
+	}
+	
+	public boolean func_111165_e()
+	{
+		return field_111171_e;
+	}
+	
+	public String func_111166_b()
+	{
+		return field_111173_c;
+	}
+	
+	public UUID func_111167_a()
+	{
+		return field_111170_d;
+	}
+	
+	public AttributeModifier func_111168_a(boolean p_111168_1_)
+	{
+		field_111171_e = p_111168_1_;
+		return this;
+	}
+	
+	public int func_111169_c()
+	{
+		return field_111172_b;
+	}
+	
+	@Override public int hashCode()
+	{
+		return field_111170_d != null ? field_111170_d.hashCode() : 0;
+	}
+	
+	@Override public String toString()
+	{
+		return "AttributeModifier{amount=" + field_111174_a + ", operation=" + field_111172_b + ", name=\'" + field_111173_c + '\'' + ", id=" + field_111170_d + ", serialize=" + field_111171_e + '}';
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/AxisAlignedBB.java b/RMCClient/minecraft/net/minecraft/src/AxisAlignedBB.java
index 8dc0afb..740bff4 100644
--- a/RMCClient/minecraft/net/minecraft/src/AxisAlignedBB.java
+++ b/RMCClient/minecraft/net/minecraft/src/AxisAlignedBB.java
@@ -10,14 +10,14 @@
 	public double maxY;
 	public double maxZ;
 	
-	protected AxisAlignedBB(double par1, double par3, double par5, double par7, double par9, double par11)
+	protected AxisAlignedBB(double p_i2300_1_, double p_i2300_3_, double p_i2300_5_, double p_i2300_7_, double p_i2300_9_, double p_i2300_11_)
 	{
-		minX = par1;
-		minY = par3;
-		minZ = par5;
-		maxX = par7;
-		maxY = par9;
-		maxZ = par11;
+		minX = p_i2300_1_;
+		minY = p_i2300_3_;
+		minZ = p_i2300_5_;
+		maxX = p_i2300_7_;
+		maxY = p_i2300_9_;
+		maxZ = p_i2300_11_;
 	}
 	
 	public AxisAlignedBB addCoord(double par1, double par3, double par5)
@@ -255,6 +255,17 @@
 		return getAABBPool().getAABB(var7, var9, var11, var13, var15, var17);
 	}
 	
+	public AxisAlignedBB func_111270_a(AxisAlignedBB p_111270_1_)
+	{
+		double var2 = Math.min(minX, p_111270_1_.minX);
+		double var4 = Math.min(minY, p_111270_1_.minY);
+		double var6 = Math.min(minZ, p_111270_1_.minZ);
+		double var8 = Math.max(maxX, p_111270_1_.maxX);
+		double var10 = Math.max(maxY, p_111270_1_.maxY);
+		double var12 = Math.max(maxZ, p_111270_1_.maxZ);
+		return getAABBPool().getAABB(var2, var4, var6, var8, var10, var12);
+	}
+	
 	public double getAverageEdgeLength()
 	{
 		double var1 = maxX - minX;
diff --git a/RMCClient/minecraft/net/minecraft/src/Backup.java b/RMCClient/minecraft/net/minecraft/src/Backup.java
new file mode 100644
index 0000000..31f0a5a
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Backup.java
@@ -0,0 +1,25 @@
+package net.minecraft.src;
+
+import java.util.Date;
+
+public class Backup extends ValueObject
+{
+	public String field_110727_a;
+	public Date field_110725_b;
+	public long field_110726_c;
+	
+	public static Backup func_110724_a(JsonNode p_110724_0_)
+	{
+		Backup var1 = new Backup();
+		try
+		{
+			var1.field_110727_a = p_110724_0_.getStringValue(new Object[] { "backupId" });
+			var1.field_110725_b = new Date(Long.parseLong(p_110724_0_.getNumberValue(new Object[] { "lastModifiedDate" })));
+			var1.field_110726_c = Long.parseLong(p_110724_0_.getNumberValue(new Object[] { "size" }));
+		} catch(IllegalArgumentException var3)
+		{
+			;
+		}
+		return var1;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/BackupList.java b/RMCClient/minecraft/net/minecraft/src/BackupList.java
new file mode 100644
index 0000000..fa84bdc
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/BackupList.java
@@ -0,0 +1,36 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+public class BackupList
+{
+	public List field_111223_a;
+	
+	public static BackupList func_111222_a(String p_111222_0_)
+	{
+		BackupList var1 = new BackupList();
+		var1.field_111223_a = new ArrayList();
+		try
+		{
+			JsonRootNode var2 = new JdomParser().parse(p_111222_0_);
+			if(var2.isArrayNode(new Object[] { "backups" }))
+			{
+				Iterator var3 = var2.getArrayNode(new Object[] { "backups" }).iterator();
+				while(var3.hasNext())
+				{
+					JsonNode var4 = (JsonNode) var3.next();
+					var1.field_111223_a.add(Backup.func_110724_a(var4));
+				}
+			}
+		} catch(InvalidSyntaxException var5)
+		{
+			;
+		} catch(IllegalArgumentException var6)
+		{
+			;
+		}
+		return var1;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/BanEntry.java b/RMCClient/minecraft/net/minecraft/src/BanEntry.java
index 9ca6d5d..cb5e572 100644
--- a/RMCClient/minecraft/net/minecraft/src/BanEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/BanEntry.java
@@ -13,12 +13,12 @@
 	private final String username;
 	private Date banStartDate = new Date();
 	private String bannedBy = "(Unknown)";
-	private Date banEndDate = null;
+	private Date banEndDate;
 	private String reason = "Banned by an operator.";
 	
-	public BanEntry(String par1Str)
+	public BanEntry(String p_i1489_1_)
 	{
-		username = par1Str;
+		username = p_i1489_1_;
 	}
 	
 	public String buildBanString()
diff --git a/RMCClient/minecraft/net/minecraft/src/BanList.java b/RMCClient/minecraft/net/minecraft/src/BanList.java
index 3e1297d..9b8fe83 100644
--- a/RMCClient/minecraft/net/minecraft/src/BanList.java
+++ b/RMCClient/minecraft/net/minecraft/src/BanList.java
@@ -20,9 +20,9 @@
 	private final File fileName;
 	private boolean listActive = true;
 	
-	public BanList(File par1File)
+	public BanList(File p_i1490_1_)
 	{
-		fileName = par1File;
+		fileName = p_i1490_1_;
 	}
 	
 	public Map getBannedList()
@@ -112,7 +112,7 @@
 			PrintWriter var2 = new PrintWriter(new FileWriter(fileName, false));
 			if(par1)
 			{
-				var2.println("# Updated " + new SimpleDateFormat().format(new Date()) + " by Minecraft " + "1.5.2");
+				var2.println("# Updated " + new SimpleDateFormat().format(new Date()) + " by Minecraft " + "1.6.2");
 				var2.println("# victim name | ban date | banned by | banned until | reason");
 				var2.println();
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/BaseAttribute.java b/RMCClient/minecraft/net/minecraft/src/BaseAttribute.java
new file mode 100644
index 0000000..bb055e4
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/BaseAttribute.java
@@ -0,0 +1,41 @@
+package net.minecraft.src;
+
+public abstract class BaseAttribute implements Attribute
+{
+	private final String field_111115_a;
+	private final double field_111113_b;
+	private boolean field_111114_c;
+	
+	protected BaseAttribute(String p_i1607_1_, double p_i1607_2_)
+	{
+		field_111115_a = p_i1607_1_;
+		field_111113_b = p_i1607_2_;
+		if(p_i1607_1_ == null) throw new IllegalArgumentException("Name cannot be null!");
+	}
+	
+	@Override public String func_111108_a()
+	{
+		return field_111115_a;
+	}
+	
+	@Override public double func_111110_b()
+	{
+		return field_111113_b;
+	}
+	
+	@Override public boolean func_111111_c()
+	{
+		return field_111114_c;
+	}
+	
+	public BaseAttribute func_111112_a(boolean p_111112_1_)
+	{
+		field_111114_c = p_111112_1_;
+		return this;
+	}
+	
+	@Override public int hashCode()
+	{
+		return field_111115_a.hashCode();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/BaseAttributeMap.java b/RMCClient/minecraft/net/minecraft/src/BaseAttributeMap.java
new file mode 100644
index 0000000..89cb4c4
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/BaseAttributeMap.java
@@ -0,0 +1,63 @@
+package net.minecraft.src;
+
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Map.Entry;
+
+public abstract class BaseAttributeMap
+{
+	protected final Map field_111154_a = new HashMap();
+	protected final Map field_111153_b = new LowerStringMap();
+	
+	public Collection func_111146_a()
+	{
+		return field_111153_b.values();
+	}
+	
+	public void func_111147_b(Multimap p_111147_1_)
+	{
+		Iterator var2 = p_111147_1_.entries().iterator();
+		while(var2.hasNext())
+		{
+			Entry var3 = (Entry) var2.next();
+			AttributeInstance var4 = func_111152_a((String) var3.getKey());
+			if(var4 != null)
+			{
+				var4.func_111124_b((AttributeModifier) var3.getValue());
+				var4.func_111121_a((AttributeModifier) var3.getValue());
+			}
+		}
+	}
+	
+	public void func_111148_a(Multimap p_111148_1_)
+	{
+		Iterator var2 = p_111148_1_.entries().iterator();
+		while(var2.hasNext())
+		{
+			Entry var3 = (Entry) var2.next();
+			AttributeInstance var4 = func_111152_a((String) var3.getKey());
+			if(var4 != null)
+			{
+				var4.func_111124_b((AttributeModifier) var3.getValue());
+			}
+		}
+	}
+	
+	public void func_111149_a(ModifiableAttributeInstance p_111149_1_)
+	{
+	}
+	
+	public abstract AttributeInstance func_111150_b(Attribute var1);
+	
+	public AttributeInstance func_111151_a(Attribute p_111151_1_)
+	{
+		return (AttributeInstance) field_111154_a.get(p_111151_1_);
+	}
+	
+	public AttributeInstance func_111152_a(String p_111152_1_)
+	{
+		return (AttributeInstance) field_111153_b.get(p_111152_1_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/BaseMetadataSectionSerializer.java b/RMCClient/minecraft/net/minecraft/src/BaseMetadataSectionSerializer.java
new file mode 100644
index 0000000..25b5b95
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/BaseMetadataSectionSerializer.java
@@ -0,0 +1,83 @@
+package net.minecraft.src;
+
+
+public abstract class BaseMetadataSectionSerializer implements MetadataSectionSerializer
+{
+	protected boolean func_110484_a(JsonElement p_110484_1_, String p_110484_2_, Boolean p_110484_3_)
+	{
+		p_110484_2_ = func_110483_a() + "->" + p_110484_2_;
+		if(p_110484_1_ == null)
+		{
+			if(p_110484_3_ == null) throw new JsonParseException("Missing " + p_110484_2_ + ": expected boolean");
+			else return p_110484_3_.booleanValue();
+		} else if(!p_110484_1_.isJsonPrimitive()) throw new JsonParseException("Invalid " + p_110484_2_ + ": expected boolean, was " + p_110484_1_);
+		else
+		{
+			boolean var4 = p_110484_1_.getAsBoolean();
+			return var4;
+		}
+	}
+	
+	protected int func_110485_a(JsonElement p_110485_1_, String p_110485_2_, Integer p_110485_3_, int p_110485_4_, int p_110485_5_)
+	{
+		p_110485_2_ = func_110483_a() + "->" + p_110485_2_;
+		if(p_110485_1_ == null)
+		{
+			if(p_110485_3_ == null) throw new JsonParseException("Missing " + p_110485_2_ + ": expected int");
+			else return p_110485_3_.intValue();
+		} else if(!p_110485_1_.isJsonPrimitive()) throw new JsonParseException("Invalid " + p_110485_2_ + ": expected int, was " + p_110485_1_);
+		else
+		{
+			try
+			{
+				int var6 = p_110485_1_.getAsInt();
+				if(var6 < p_110485_4_) throw new JsonParseException("Invalid " + p_110485_2_ + ": expected int >= " + p_110485_4_ + ", was " + var6);
+				else if(var6 > p_110485_5_) throw new JsonParseException("Invalid " + p_110485_2_ + ": expected int <= " + p_110485_5_ + ", was " + var6);
+				else return var6;
+			} catch(NumberFormatException var7)
+			{
+				throw new JsonParseException("Invalid " + p_110485_2_ + ": expected int, was " + p_110485_1_, var7);
+			}
+		}
+	}
+	
+	protected String func_110486_a(JsonElement p_110486_1_, String p_110486_2_, String p_110486_3_, int p_110486_4_, int p_110486_5_)
+	{
+		p_110486_2_ = func_110483_a() + "->" + p_110486_2_;
+		if(p_110486_1_ == null)
+		{
+			if(p_110486_3_ == null) throw new JsonParseException("Missing " + p_110486_2_ + ": expected string");
+			else return p_110486_3_;
+		} else if(!p_110486_1_.isJsonPrimitive()) throw new JsonParseException("Invalid " + p_110486_2_ + ": expected string, was " + p_110486_1_);
+		else
+		{
+			String var6 = p_110486_1_.getAsString();
+			if(var6.length() < p_110486_4_) throw new JsonParseException("Invalid " + p_110486_2_ + ": expected string length >= " + p_110486_4_ + ", was " + var6);
+			else if(var6.length() > p_110486_5_) throw new JsonParseException("Invalid " + p_110486_2_ + ": expected string length <= " + p_110486_5_ + ", was " + var6);
+			else return var6;
+		}
+	}
+	
+	protected float func_110487_a(JsonElement p_110487_1_, String p_110487_2_, Float p_110487_3_, float p_110487_4_, float p_110487_5_)
+	{
+		p_110487_2_ = func_110483_a() + "->" + p_110487_2_;
+		if(p_110487_1_ == null)
+		{
+			if(p_110487_3_ == null) throw new JsonParseException("Missing " + p_110487_2_ + ": expected float");
+			else return p_110487_3_.floatValue();
+		} else if(!p_110487_1_.isJsonPrimitive()) throw new JsonParseException("Invalid " + p_110487_2_ + ": expected float, was " + p_110487_1_);
+		else
+		{
+			try
+			{
+				float var6 = p_110487_1_.getAsFloat();
+				if(var6 < p_110487_4_) throw new JsonParseException("Invalid " + p_110487_2_ + ": expected float >= " + p_110487_4_ + ", was " + var6);
+				else if(var6 > p_110487_5_) throw new JsonParseException("Invalid " + p_110487_2_ + ": expected float <= " + p_110487_5_ + ", was " + var6);
+				else return var6;
+			} catch(NumberFormatException var7)
+			{
+				throw new JsonParseException("Invalid " + p_110487_2_ + ": expected float, was " + p_110487_1_, var7);
+			}
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/BehaviorDispenseArmor.java b/RMCClient/minecraft/net/minecraft/src/BehaviorDispenseArmor.java
index 9406870..dd3f521 100644
--- a/RMCClient/minecraft/net/minecraft/src/BehaviorDispenseArmor.java
+++ b/RMCClient/minecraft/net/minecraft/src/BehaviorDispenseArmor.java
@@ -11,16 +11,19 @@
 		int var5 = par1IBlockSource.getYInt() + var3.getFrontOffsetY();
 		int var6 = par1IBlockSource.getZInt() + var3.getFrontOffsetZ();
 		AxisAlignedBB var7 = AxisAlignedBB.getAABBPool().getAABB(var4, var5, var6, var4 + 1, var5 + 1, var6 + 1);
-		List var8 = par1IBlockSource.getWorld().selectEntitiesWithinAABB(EntityLiving.class, var7, new EntitySelectorArmoredMob(par2ItemStack));
+		List var8 = par1IBlockSource.getWorld().selectEntitiesWithinAABB(EntityLivingBase.class, var7, new EntitySelectorArmoredMob(par2ItemStack));
 		if(var8.size() > 0)
 		{
-			EntityLiving var9 = (EntityLiving) var8.get(0);
+			EntityLivingBase var9 = (EntityLivingBase) var8.get(0);
 			int var10 = var9 instanceof EntityPlayer ? 1 : 0;
 			int var11 = EntityLiving.getArmorPosition(par2ItemStack);
 			ItemStack var12 = par2ItemStack.copy();
 			var12.stackSize = 1;
 			var9.setCurrentItemOrArmor(var11 - var10, var12);
-			var9.func_96120_a(var11, 2.0F);
+			if(var9 instanceof EntityLiving)
+			{
+				((EntityLiving) var9).func_96120_a(var11, 2.0F);
+			}
 			--par2ItemStack.stackSize;
 			return par2ItemStack;
 		} else return super.dispenseStack(par1IBlockSource, par2ItemStack);
diff --git a/RMCClient/minecraft/net/minecraft/src/BehaviorDispenseMinecart.java b/RMCClient/minecraft/net/minecraft/src/BehaviorDispenseMinecart.java
index f72288a..5f2dff5 100644
--- a/RMCClient/minecraft/net/minecraft/src/BehaviorDispenseMinecart.java
+++ b/RMCClient/minecraft/net/minecraft/src/BehaviorDispenseMinecart.java
@@ -25,6 +25,10 @@
 			var15 = -1.0D;
 		}
 		EntityMinecart var17 = EntityMinecart.createMinecart(var4, var5, var7 + var15, var9, ((ItemMinecart) par2ItemStack.getItem()).minecartType);
+		if(par2ItemStack.hasDisplayName())
+		{
+			var17.func_96094_a(par2ItemStack.getDisplayName());
+		}
 		var4.spawnEntityInWorld(var17);
 		par2ItemStack.splitStack(1);
 		return par2ItemStack;
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeCache.java b/RMCClient/minecraft/net/minecraft/src/BiomeCache.java
index 487073d..8804ecd 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeCache.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeCache.java
@@ -3,21 +3,23 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import net.minecraft.server.MinecraftServer;
+
 public class BiomeCache
 {
 	private final WorldChunkManager chunkManager;
-	private long lastCleanupTime = 0L;
+	private long lastCleanupTime;
 	private LongHashMap cacheMap = new LongHashMap();
 	private List cache = new ArrayList();
 	
-	public BiomeCache(WorldChunkManager par1WorldChunkManager)
+	public BiomeCache(WorldChunkManager p_i1973_1_)
 	{
-		chunkManager = par1WorldChunkManager;
+		chunkManager = p_i1973_1_;
 	}
 	
 	public void cleanupCache()
 	{
-		long var1 = System.currentTimeMillis();
+		long var1 = MinecraftServer.func_130071_aq();
 		long var3 = var1 - lastCleanupTime;
 		if(var3 > 7500L || var3 < 0L)
 		{
@@ -48,7 +50,7 @@
 			cacheMap.add(var3, var5);
 			cache.add(var5);
 		}
-		var5.lastAccessTime = System.currentTimeMillis();
+		var5.lastAccessTime = MinecraftServer.func_130071_aq();
 		return var5;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeCacheBlock.java b/RMCClient/minecraft/net/minecraft/src/BiomeCacheBlock.java
index e178839..f13f02f 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeCacheBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeCacheBlock.java
@@ -10,17 +10,17 @@
 	public long lastAccessTime;
 	final BiomeCache theBiomeCache;
 	
-	public BiomeCacheBlock(BiomeCache par1BiomeCache, int par2, int par3)
+	public BiomeCacheBlock(BiomeCache p_i1972_1_, int p_i1972_2_, int p_i1972_3_)
 	{
-		theBiomeCache = par1BiomeCache;
+		theBiomeCache = p_i1972_1_;
 		temperatureValues = new float[256];
 		rainfallValues = new float[256];
 		biomes = new BiomeGenBase[256];
-		xPosition = par2;
-		zPosition = par3;
-		BiomeCache.getChunkManager(par1BiomeCache).getTemperatures(temperatureValues, par2 << 4, par3 << 4, 16, 16);
-		BiomeCache.getChunkManager(par1BiomeCache).getRainfall(rainfallValues, par2 << 4, par3 << 4, 16, 16);
-		BiomeCache.getChunkManager(par1BiomeCache).getBiomeGenAt(biomes, par2 << 4, par3 << 4, 16, 16, false);
+		xPosition = p_i1972_2_;
+		zPosition = p_i1972_3_;
+		BiomeCache.getChunkManager(p_i1972_1_).getTemperatures(temperatureValues, p_i1972_2_ << 4, p_i1972_3_ << 4, 16, 16);
+		BiomeCache.getChunkManager(p_i1972_1_).getRainfall(rainfallValues, p_i1972_2_ << 4, p_i1972_3_ << 4, 16, 16);
+		BiomeCache.getChunkManager(p_i1972_1_).getBiomeGenAt(biomes, p_i1972_2_ << 4, p_i1972_3_ << 4, 16, 16, false);
 	}
 	
 	public BiomeGenBase getBiomeGenAt(int par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeDecorator.java b/RMCClient/minecraft/net/minecraft/src/BiomeDecorator.java
index 0df21cd..322c313 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeDecorator.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeDecorator.java
@@ -42,7 +42,7 @@
 	protected int bigMushroomsPerChunk;
 	public boolean generateLakes;
 	
-	public BiomeDecorator(BiomeGenBase par1BiomeGenBase)
+	public BiomeDecorator(BiomeGenBase p_i1974_1_)
 	{
 		sandGen = new WorldGenSand(7, Block.sand.blockID);
 		gravelAsSandGen = new WorldGenSand(6, Block.gravel.blockID);
@@ -62,20 +62,13 @@
 		reedGen = new WorldGenReed();
 		cactusGen = new WorldGenCactus();
 		waterlilyGen = new WorldGenWaterlily();
-		waterlilyPerChunk = 0;
-		treesPerChunk = 0;
 		flowersPerChunk = 2;
 		grassPerChunk = 1;
-		deadBushPerChunk = 0;
-		mushroomsPerChunk = 0;
-		reedsPerChunk = 0;
-		cactiPerChunk = 0;
 		sandPerChunk = 1;
 		sandPerChunk2 = 3;
 		clayPerChunk = 1;
-		bigMushroomsPerChunk = 0;
 		generateLakes = true;
-		biome = par1BiomeGenBase;
+		biome = p_i1974_1_;
 	}
 	
 	protected void decorate()
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeEndDecorator.java b/RMCClient/minecraft/net/minecraft/src/BiomeEndDecorator.java
index fddc2af..96c44d6 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeEndDecorator.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeEndDecorator.java
@@ -4,9 +4,9 @@
 {
 	protected WorldGenerator spikeGen;
 	
-	public BiomeEndDecorator(BiomeGenBase par1BiomeGenBase)
+	public BiomeEndDecorator(BiomeGenBase p_i1991_1_)
 	{
-		super(par1BiomeGenBase);
+		super(p_i1991_1_);
 		spikeGen = new WorldGenSpikes(Block.whiteStone.blockID);
 	}
 	
@@ -18,10 +18,6 @@
 			int var1 = chunk_X + randomGenerator.nextInt(16) + 8;
 			int var2 = chunk_Z + randomGenerator.nextInt(16) + 8;
 			int var3 = currentWorld.getTopSolidOrLiquidBlock(var1, var2);
-			if(var3 > 0)
-			{
-				;
-			}
 			spikeGen.generate(currentWorld, randomGenerator, var1, var3, var2);
 		}
 		if(chunk_X == 0 && chunk_Z == 0)
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenBase.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenBase.java
index 9641260..6c5831c 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenBase.java
@@ -54,7 +54,7 @@
 	protected WorldGenForest worldGeneratorForest;
 	protected WorldGenSwamp worldGeneratorSwamp;
 	
-	protected BiomeGenBase(int par1)
+	protected BiomeGenBase(int p_i1971_1_)
 	{
 		topBlock = (byte) Block.grass.blockID;
 		fillerBlock = (byte) Block.dirt.blockID;
@@ -73,8 +73,8 @@
 		worldGeneratorBigTree = new WorldGenBigTree(false);
 		worldGeneratorForest = new WorldGenForest(false);
 		worldGeneratorSwamp = new WorldGenSwamp();
-		biomeID = par1;
-		biomeList[par1] = this;
+		biomeID = p_i1971_1_;
+		biomeList[p_i1971_1_] = this;
 		theBiomeDecorator = createBiomeDecorator();
 		spawnableCreatureList.add(new SpawnListEntry(EntitySheep.class, 12, 4, 4));
 		spawnableCreatureList.add(new SpawnListEntry(EntityPig.class, 10, 4, 4));
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenBeach.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenBeach.java
index a2d2dd4..c18a75b 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenBeach.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenBeach.java
@@ -2,9 +2,9 @@
 
 public class BiomeGenBeach extends BiomeGenBase
 {
-	public BiomeGenBeach(int par1)
+	public BiomeGenBeach(int p_i1969_1_)
 	{
-		super(par1);
+		super(p_i1969_1_);
 		spawnableCreatureList.clear();
 		topBlock = (byte) Block.sand.blockID;
 		fillerBlock = (byte) Block.sand.blockID;
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenDesert.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenDesert.java
index 0224838..ded8b35 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenDesert.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenDesert.java
@@ -4,9 +4,9 @@
 
 public class BiomeGenDesert extends BiomeGenBase
 {
-	public BiomeGenDesert(int par1)
+	public BiomeGenDesert(int p_i1977_1_)
 	{
-		super(par1);
+		super(p_i1977_1_);
 		spawnableCreatureList.clear();
 		topBlock = (byte) Block.sand.blockID;
 		fillerBlock = (byte) Block.sand.blockID;
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenEnd.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenEnd.java
index 2c7da23..94b4422 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenEnd.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenEnd.java
@@ -2,9 +2,9 @@
 
 public class BiomeGenEnd extends BiomeGenBase
 {
-	public BiomeGenEnd(int par1)
+	public BiomeGenEnd(int p_i1990_1_)
 	{
-		super(par1);
+		super(p_i1990_1_);
 		spawnableMonsterList.clear();
 		spawnableCreatureList.clear();
 		spawnableWaterCreatureList.clear();
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenForest.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenForest.java
index 7495758..e139f9d 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenForest.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenForest.java
@@ -4,9 +4,9 @@
 
 public class BiomeGenForest extends BiomeGenBase
 {
-	public BiomeGenForest(int par1)
+	public BiomeGenForest(int p_i1980_1_)
 	{
-		super(par1);
+		super(p_i1980_1_);
 		spawnableCreatureList.add(new SpawnListEntry(EntityWolf.class, 5, 4, 4));
 		theBiomeDecorator.treesPerChunk = 10;
 		theBiomeDecorator.grassPerChunk = 2;
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenHell.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenHell.java
index 1ff56ea..bc12c37 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenHell.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenHell.java
@@ -2,9 +2,9 @@
 
 public class BiomeGenHell extends BiomeGenBase
 {
-	public BiomeGenHell(int par1)
+	public BiomeGenHell(int p_i1981_1_)
 	{
-		super(par1);
+		super(p_i1981_1_);
 		spawnableMonsterList.clear();
 		spawnableCreatureList.clear();
 		spawnableWaterCreatureList.clear();
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenHills.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenHills.java
index ecf93ed..6c18ca4 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenHills.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenHills.java
@@ -6,9 +6,9 @@
 {
 	private WorldGenerator theWorldGenerator;
 	
-	protected BiomeGenHills(int par1)
+	protected BiomeGenHills(int p_i1978_1_)
 	{
-		super(par1);
+		super(p_i1978_1_);
 		theWorldGenerator = new WorldGenMinable(Block.silverfish.blockID, 8);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenJungle.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenJungle.java
index 50803ef..032dfb8 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenJungle.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenJungle.java
@@ -4,9 +4,9 @@
 
 public class BiomeGenJungle extends BiomeGenBase
 {
-	public BiomeGenJungle(int par1)
+	public BiomeGenJungle(int p_i1983_1_)
 	{
-		super(par1);
+		super(p_i1983_1_);
 		theBiomeDecorator.treesPerChunk = 50;
 		theBiomeDecorator.grassPerChunk = 25;
 		theBiomeDecorator.flowersPerChunk = 4;
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenMushroomIsland.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenMushroomIsland.java
index 8d7a951..cf03e8d 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenMushroomIsland.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenMushroomIsland.java
@@ -2,9 +2,9 @@
 
 public class BiomeGenMushroomIsland extends BiomeGenBase
 {
-	public BiomeGenMushroomIsland(int par1)
+	public BiomeGenMushroomIsland(int p_i1984_1_)
 	{
-		super(par1);
+		super(p_i1984_1_);
 		theBiomeDecorator.treesPerChunk = -100;
 		theBiomeDecorator.flowersPerChunk = -100;
 		theBiomeDecorator.grassPerChunk = -100;
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenOcean.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenOcean.java
index 6746fbc..41147c8 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenOcean.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenOcean.java
@@ -2,9 +2,9 @@
 
 public class BiomeGenOcean extends BiomeGenBase
 {
-	public BiomeGenOcean(int par1)
+	public BiomeGenOcean(int p_i1985_1_)
 	{
-		super(par1);
+		super(p_i1985_1_);
 		spawnableCreatureList.clear();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenPlains.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenPlains.java
index a9e9ae2..a3032c4 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenPlains.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenPlains.java
@@ -2,9 +2,10 @@
 
 public class BiomeGenPlains extends BiomeGenBase
 {
-	protected BiomeGenPlains(int par1)
+	protected BiomeGenPlains(int p_i1986_1_)
 	{
-		super(par1);
+		super(p_i1986_1_);
+		spawnableCreatureList.add(new SpawnListEntry(EntityHorse.class, 5, 2, 6));
 		theBiomeDecorator.treesPerChunk = -999;
 		theBiomeDecorator.flowersPerChunk = 4;
 		theBiomeDecorator.grassPerChunk = 10;
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenRiver.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenRiver.java
index aa88f7e..7233d03 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenRiver.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenRiver.java
@@ -2,9 +2,9 @@
 
 public class BiomeGenRiver extends BiomeGenBase
 {
-	public BiomeGenRiver(int par1)
+	public BiomeGenRiver(int p_i1987_1_)
 	{
-		super(par1);
+		super(p_i1987_1_);
 		spawnableCreatureList.clear();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenSnow.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenSnow.java
index c8c260e..feb60fc 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenSnow.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenSnow.java
@@ -2,8 +2,8 @@
 
 public class BiomeGenSnow extends BiomeGenBase
 {
-	public BiomeGenSnow(int par1)
+	public BiomeGenSnow(int p_i1982_1_)
 	{
-		super(par1);
+		super(p_i1982_1_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenSwamp.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenSwamp.java
index 449de27..b334150 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenSwamp.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenSwamp.java
@@ -4,9 +4,9 @@
 
 public class BiomeGenSwamp extends BiomeGenBase
 {
-	protected BiomeGenSwamp(int par1)
+	protected BiomeGenSwamp(int p_i1988_1_)
 	{
-		super(par1);
+		super(p_i1988_1_);
 		theBiomeDecorator.treesPerChunk = 2;
 		theBiomeDecorator.flowersPerChunk = -999;
 		theBiomeDecorator.deadBushPerChunk = 1;
diff --git a/RMCClient/minecraft/net/minecraft/src/BiomeGenTaiga.java b/RMCClient/minecraft/net/minecraft/src/BiomeGenTaiga.java
index 72e8861..872d336 100644
--- a/RMCClient/minecraft/net/minecraft/src/BiomeGenTaiga.java
+++ b/RMCClient/minecraft/net/minecraft/src/BiomeGenTaiga.java
@@ -4,9 +4,9 @@
 
 public class BiomeGenTaiga extends BiomeGenBase
 {
-	public BiomeGenTaiga(int par1)
+	public BiomeGenTaiga(int p_i1989_1_)
 	{
-		super(par1);
+		super(p_i1989_1_);
 		spawnableCreatureList.add(new SpawnListEntry(EntityWolf.class, 8, 4, 4));
 		theBiomeDecorator.treesPerChunk = 10;
 		theBiomeDecorator.grassPerChunk = 1;
diff --git a/RMCClient/minecraft/net/minecraft/src/Block.java b/RMCClient/minecraft/net/minecraft/src/Block.java
index 4c96a9d..999e938 100644
--- a/RMCClient/minecraft/net/minecraft/src/Block.java
+++ b/RMCClient/minecraft/net/minecraft/src/Block.java
@@ -6,6 +6,7 @@
 public class Block
 {
 	private CreativeTabs displayOnCreativeTab;
+	protected String field_111026_f;
 	public static final StepSound soundPowderFootstep = new StepSound("stone", 1.0F, 1.0F);
 	public static final StepSound soundWoodFootstep = new StepSound("wood", 1.0F, 1.0F);
 	public static final StepSound soundGravelFootstep = new StepSound("gravel", 1.0F, 1.0F);
@@ -24,164 +25,169 @@
 	public static final boolean[] canBlockGrass = new boolean[4096];
 	public static final int[] lightValue = new int[4096];
 	public static boolean[] useNeighborBrightness = new boolean[4096];
-	public static final Block stone = new BlockStone(1).setHardness(1.5F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stone");
-	public static final BlockGrass grass = (BlockGrass) new BlockGrass(2).setHardness(0.6F).setStepSound(soundGrassFootstep).setUnlocalizedName("grass");
-	public static final Block dirt = new BlockDirt(3).setHardness(0.5F).setStepSound(soundGravelFootstep).setUnlocalizedName("dirt");
-	public static final Block cobblestone = new Block(4, Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stonebrick").setCreativeTab(CreativeTabs.tabBlock);
-	public static final Block planks = new BlockWood(5).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("wood");
-	public static final Block sapling = new BlockSapling(6).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("sapling");
-	public static final Block bedrock = new Block(7, Material.rock).setBlockUnbreakable().setResistance(6000000.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("bedrock").disableStats().setCreativeTab(CreativeTabs.tabBlock);
-	public static final BlockFluid waterMoving = (BlockFluid) new BlockFlowing(8, Material.water).setHardness(100.0F).setLightOpacity(3).setUnlocalizedName("water").disableStats();
-	public static final Block waterStill = new BlockStationary(9, Material.water).setHardness(100.0F).setLightOpacity(3).setUnlocalizedName("water").disableStats();
-	public static final BlockFluid lavaMoving = (BlockFluid) new BlockFlowing(10, Material.lava).setHardness(0.0F).setLightValue(1.0F).setUnlocalizedName("lava").disableStats();
-	public static final Block lavaStill = new BlockStationary(11, Material.lava).setHardness(100.0F).setLightValue(1.0F).setUnlocalizedName("lava").disableStats();
-	public static final Block sand = new BlockSand(12).setHardness(0.5F).setStepSound(soundSandFootstep).setUnlocalizedName("sand");
-	public static final Block gravel = new BlockGravel(13).setHardness(0.6F).setStepSound(soundGravelFootstep).setUnlocalizedName("gravel");
-	public static final Block oreGold = new BlockOre(14).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreGold");
-	public static final Block oreIron = new BlockOre(15).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreIron");
-	public static final Block oreCoal = new BlockOre(16).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreCoal");
-	public static final Block wood = new BlockLog(17).setHardness(2.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("log");
-	public static final BlockLeaves leaves = (BlockLeaves) new BlockLeaves(18).setHardness(0.2F).setLightOpacity(1).setStepSound(soundGrassFootstep).setUnlocalizedName("leaves");
-	public static final Block sponge = new BlockSponge(19).setHardness(0.6F).setStepSound(soundGrassFootstep).setUnlocalizedName("sponge");
-	public static final Block glass = new BlockGlass(20, Material.glass, false).setHardness(0.3F).setStepSound(soundGlassFootstep).setUnlocalizedName("glass");
-	public static final Block oreLapis = new BlockOre(21).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreLapis");
-	public static final Block blockLapis = new Block(22, Material.rock).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("blockLapis").setCreativeTab(CreativeTabs.tabBlock);
-	public static final Block dispenser = new BlockDispenser(23).setHardness(3.5F).setStepSound(soundStoneFootstep).setUnlocalizedName("dispenser");
-	public static final Block sandStone = new BlockSandStone(24).setStepSound(soundStoneFootstep).setHardness(0.8F).setUnlocalizedName("sandStone");
-	public static final Block music = new BlockNote(25).setHardness(0.8F).setUnlocalizedName("musicBlock");
-	public static final Block bed = new BlockBed(26).setHardness(0.2F).setUnlocalizedName("bed").disableStats();
-	public static final Block railPowered = new BlockRailPowered(27).setHardness(0.7F).setStepSound(soundMetalFootstep).setUnlocalizedName("goldenRail");
-	public static final Block railDetector = new BlockDetectorRail(28).setHardness(0.7F).setStepSound(soundMetalFootstep).setUnlocalizedName("detectorRail");
+	public static final Block stone = new BlockStone(1).setHardness(1.5F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stone").func_111022_d("stone");
+	public static final BlockGrass grass = (BlockGrass) new BlockGrass(2).setHardness(0.6F).setStepSound(soundGrassFootstep).setUnlocalizedName("grass").func_111022_d("grass");
+	public static final Block dirt = new BlockDirt(3).setHardness(0.5F).setStepSound(soundGravelFootstep).setUnlocalizedName("dirt").func_111022_d("dirt");
+	public static final Block cobblestone = new Block(4, Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stonebrick").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("cobblestone");
+	public static final Block planks = new BlockWood(5).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("wood").func_111022_d("planks");
+	public static final Block sapling = new BlockSapling(6).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("sapling").func_111022_d("sapling");
+	public static final Block bedrock = new Block(7, Material.rock).setBlockUnbreakable().setResistance(6000000.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("bedrock").disableStats().setCreativeTab(CreativeTabs.tabBlock).func_111022_d("bedrock");
+	public static final BlockFluid waterMoving = (BlockFluid) new BlockFlowing(8, Material.water).setHardness(100.0F).setLightOpacity(3).setUnlocalizedName("water").disableStats().func_111022_d("water_flow");
+	public static final Block waterStill = new BlockStationary(9, Material.water).setHardness(100.0F).setLightOpacity(3).setUnlocalizedName("water").disableStats().func_111022_d("water_still");
+	public static final BlockFluid lavaMoving = (BlockFluid) new BlockFlowing(10, Material.lava).setHardness(0.0F).setLightValue(1.0F).setUnlocalizedName("lava").disableStats().func_111022_d("lava_flow");
+	public static final Block lavaStill = new BlockStationary(11, Material.lava).setHardness(100.0F).setLightValue(1.0F).setUnlocalizedName("lava").disableStats().func_111022_d("lava_still");
+	public static final Block sand = new BlockSand(12).setHardness(0.5F).setStepSound(soundSandFootstep).setUnlocalizedName("sand").func_111022_d("sand");
+	public static final Block gravel = new BlockGravel(13).setHardness(0.6F).setStepSound(soundGravelFootstep).setUnlocalizedName("gravel").func_111022_d("gravel");
+	public static final Block oreGold = new BlockOre(14).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreGold").func_111022_d("gold_ore");
+	public static final Block oreIron = new BlockOre(15).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreIron").func_111022_d("iron_ore");
+	public static final Block oreCoal = new BlockOre(16).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreCoal").func_111022_d("coal_ore");
+	public static final Block wood = new BlockLog(17).setHardness(2.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("log").func_111022_d("log");
+	public static final BlockLeaves leaves = (BlockLeaves) new BlockLeaves(18).setHardness(0.2F).setLightOpacity(1).setStepSound(soundGrassFootstep).setUnlocalizedName("leaves").func_111022_d("leaves");
+	public static final Block sponge = new BlockSponge(19).setHardness(0.6F).setStepSound(soundGrassFootstep).setUnlocalizedName("sponge").func_111022_d("sponge");
+	public static final Block glass = new BlockGlass(20, Material.glass, false).setHardness(0.3F).setStepSound(soundGlassFootstep).setUnlocalizedName("glass").func_111022_d("glass");
+	public static final Block oreLapis = new BlockOre(21).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreLapis").func_111022_d("lapis_ore");
+	public static final Block blockLapis = new Block(22, Material.rock).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("blockLapis").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("lapis_block");
+	public static final Block dispenser = new BlockDispenser(23).setHardness(3.5F).setStepSound(soundStoneFootstep).setUnlocalizedName("dispenser").func_111022_d("dispenser");
+	public static final Block sandStone = new BlockSandStone(24).setStepSound(soundStoneFootstep).setHardness(0.8F).setUnlocalizedName("sandStone").func_111022_d("sandstone");
+	public static final Block music = new BlockNote(25).setHardness(0.8F).setUnlocalizedName("musicBlock").func_111022_d("noteblock");
+	public static final Block bed = new BlockBed(26).setHardness(0.2F).setUnlocalizedName("bed").disableStats().func_111022_d("bed");
+	public static final Block railPowered = new BlockRailPowered(27).setHardness(0.7F).setStepSound(soundMetalFootstep).setUnlocalizedName("goldenRail").func_111022_d("rail_golden");
+	public static final Block railDetector = new BlockDetectorRail(28).setHardness(0.7F).setStepSound(soundMetalFootstep).setUnlocalizedName("detectorRail").func_111022_d("rail_detector");
 	public static final BlockPistonBase pistonStickyBase = (BlockPistonBase) new BlockPistonBase(29, true).setUnlocalizedName("pistonStickyBase");
-	public static final Block web = new BlockWeb(30).setLightOpacity(1).setHardness(4.0F).setUnlocalizedName("web");
+	public static final Block web = new BlockWeb(30).setLightOpacity(1).setHardness(4.0F).setUnlocalizedName("web").func_111022_d("web");
 	public static final BlockTallGrass tallGrass = (BlockTallGrass) new BlockTallGrass(31).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("tallgrass");
-	public static final BlockDeadBush deadBush = (BlockDeadBush) new BlockDeadBush(32).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("deadbush");
+	public static final BlockDeadBush deadBush = (BlockDeadBush) new BlockDeadBush(32).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("deadbush").func_111022_d("deadbush");
 	public static final BlockPistonBase pistonBase = (BlockPistonBase) new BlockPistonBase(33, false).setUnlocalizedName("pistonBase");
 	public static final BlockPistonExtension pistonExtension = new BlockPistonExtension(34);
-	public static final Block cloth = new BlockCloth().setHardness(0.8F).setStepSound(soundClothFootstep).setUnlocalizedName("cloth");
+	public static final Block cloth = new BlockColored(35, Material.cloth).setHardness(0.8F).setStepSound(soundClothFootstep).setUnlocalizedName("cloth").func_111022_d("wool_colored");
 	public static final BlockPistonMoving pistonMoving = new BlockPistonMoving(36);
-	public static final BlockFlower plantYellow = (BlockFlower) new BlockFlower(37).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("flower");
-	public static final BlockFlower plantRed = (BlockFlower) new BlockFlower(38).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("rose");
-	public static final BlockFlower mushroomBrown = (BlockFlower) new BlockMushroom(39, "mushroom_brown").setHardness(0.0F).setStepSound(soundGrassFootstep).setLightValue(0.125F).setUnlocalizedName("mushroom");
-	public static final BlockFlower mushroomRed = (BlockFlower) new BlockMushroom(40, "mushroom_red").setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("mushroom");
-	public static final Block blockGold = new BlockOreStorage(41).setHardness(3.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockGold");
-	public static final Block blockIron = new BlockOreStorage(42).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockIron");
+	public static final BlockFlower plantYellow = (BlockFlower) new BlockFlower(37).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("flower").func_111022_d("flower_dandelion");
+	public static final BlockFlower plantRed = (BlockFlower) new BlockFlower(38).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("rose").func_111022_d("flower_rose");
+	public static final BlockFlower mushroomBrown = (BlockFlower) new BlockMushroom(39).setHardness(0.0F).setStepSound(soundGrassFootstep).setLightValue(0.125F).setUnlocalizedName("mushroom").func_111022_d("mushroom_brown");
+	public static final BlockFlower mushroomRed = (BlockFlower) new BlockMushroom(40).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("mushroom").func_111022_d("mushroom_red");
+	public static final Block blockGold = new BlockOreStorage(41).setHardness(3.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockGold").func_111022_d("gold_block");
+	public static final Block blockIron = new BlockOreStorage(42).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockIron").func_111022_d("iron_block");
 	public static final BlockHalfSlab stoneDoubleSlab = (BlockHalfSlab) new BlockStep(43, true).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stoneSlab");
 	public static final BlockHalfSlab stoneSingleSlab = (BlockHalfSlab) new BlockStep(44, false).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stoneSlab");
-	public static final Block brick = new Block(45, Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("brick").setCreativeTab(CreativeTabs.tabBlock);
-	public static final Block tnt = new BlockTNT(46).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("tnt");
-	public static final Block bookShelf = new BlockBookshelf(47).setHardness(1.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("bookshelf");
-	public static final Block cobblestoneMossy = new Block(48, Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stoneMoss").setCreativeTab(CreativeTabs.tabBlock);
-	public static final Block obsidian = new BlockObsidian(49).setHardness(50.0F).setResistance(2000.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("obsidian");
-	public static final Block torchWood = new BlockTorch(50).setHardness(0.0F).setLightValue(0.9375F).setStepSound(soundWoodFootstep).setUnlocalizedName("torch");
-	public static final BlockFire fire = (BlockFire) new BlockFire(51).setHardness(0.0F).setLightValue(1.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("fire").disableStats();
-	public static final Block mobSpawner = new BlockMobSpawner(52).setHardness(5.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("mobSpawner").disableStats();
+	public static final Block brick = new Block(45, Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("brick").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("brick");
+	public static final Block tnt = new BlockTNT(46).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("tnt").func_111022_d("tnt");
+	public static final Block bookShelf = new BlockBookshelf(47).setHardness(1.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("bookshelf").func_111022_d("bookshelf");
+	public static final Block cobblestoneMossy = new Block(48, Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stoneMoss").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("cobblestone_mossy");
+	public static final Block obsidian = new BlockObsidian(49).setHardness(50.0F).setResistance(2000.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("obsidian").func_111022_d("obsidian");
+	public static final Block torchWood = new BlockTorch(50).setHardness(0.0F).setLightValue(0.9375F).setStepSound(soundWoodFootstep).setUnlocalizedName("torch").func_111022_d("torch_on");
+	public static final BlockFire fire = (BlockFire) new BlockFire(51).setHardness(0.0F).setLightValue(1.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("fire").disableStats().func_111022_d("fire");
+	public static final Block mobSpawner = new BlockMobSpawner(52).setHardness(5.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("mobSpawner").disableStats().func_111022_d("mob_spawner");
 	public static final Block stairsWoodOak = new BlockStairs(53, planks, 0).setUnlocalizedName("stairsWood");
 	public static final BlockChest chest = (BlockChest) new BlockChest(54, 0).setHardness(2.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("chest");
-	public static final BlockRedstoneWire redstoneWire = (BlockRedstoneWire) new BlockRedstoneWire(55).setHardness(0.0F).setStepSound(soundPowderFootstep).setUnlocalizedName("redstoneDust").disableStats();
-	public static final Block oreDiamond = new BlockOre(56).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreDiamond");
-	public static final Block blockDiamond = new BlockOreStorage(57).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockDiamond");
-	public static final Block workbench = new BlockWorkbench(58).setHardness(2.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("workbench");
-	public static final Block crops = new BlockCrops(59).setUnlocalizedName("crops");
-	public static final Block tilledField = new BlockFarmland(60).setHardness(0.6F).setStepSound(soundGravelFootstep).setUnlocalizedName("farmland");
+	public static final BlockRedstoneWire redstoneWire = (BlockRedstoneWire) new BlockRedstoneWire(55).setHardness(0.0F).setStepSound(soundPowderFootstep).setUnlocalizedName("redstoneDust").disableStats().func_111022_d("redstone_dust");
+	public static final Block oreDiamond = new BlockOre(56).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreDiamond").func_111022_d("diamond_ore");
+	public static final Block blockDiamond = new BlockOreStorage(57).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockDiamond").func_111022_d("diamond_block");
+	public static final Block workbench = new BlockWorkbench(58).setHardness(2.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("workbench").func_111022_d("crafting_table");
+	public static final Block crops = new BlockCrops(59).setUnlocalizedName("crops").func_111022_d("wheat");
+	public static final Block tilledField = new BlockFarmland(60).setHardness(0.6F).setStepSound(soundGravelFootstep).setUnlocalizedName("farmland").func_111022_d("farmland");
 	public static final Block furnaceIdle = new BlockFurnace(61, false).setHardness(3.5F).setStepSound(soundStoneFootstep).setUnlocalizedName("furnace").setCreativeTab(CreativeTabs.tabDecorations);
 	public static final Block furnaceBurning = new BlockFurnace(62, true).setHardness(3.5F).setStepSound(soundStoneFootstep).setLightValue(0.875F).setUnlocalizedName("furnace");
 	public static final Block signPost = new BlockSign(63, TileEntitySign.class, true).setHardness(1.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("sign").disableStats();
-	public static final Block doorWood = new BlockDoor(64, Material.wood).setHardness(3.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("doorWood").disableStats();
-	public static final Block ladder = new BlockLadder(65).setHardness(0.4F).setStepSound(soundLadderFootstep).setUnlocalizedName("ladder");
-	public static final Block rail = new BlockRail(66).setHardness(0.7F).setStepSound(soundMetalFootstep).setUnlocalizedName("rail");
+	public static final Block doorWood = new BlockDoor(64, Material.wood).setHardness(3.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("doorWood").disableStats().func_111022_d("door_wood");
+	public static final Block ladder = new BlockLadder(65).setHardness(0.4F).setStepSound(soundLadderFootstep).setUnlocalizedName("ladder").func_111022_d("ladder");
+	public static final Block rail = new BlockRail(66).setHardness(0.7F).setStepSound(soundMetalFootstep).setUnlocalizedName("rail").func_111022_d("rail_normal");
 	public static final Block stairsCobblestone = new BlockStairs(67, cobblestone, 0).setUnlocalizedName("stairsStone");
 	public static final Block signWall = new BlockSign(68, TileEntitySign.class, false).setHardness(1.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("sign").disableStats();
-	public static final Block lever = new BlockLever(69).setHardness(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("lever");
+	public static final Block lever = new BlockLever(69).setHardness(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("lever").func_111022_d("lever");
 	public static final Block pressurePlateStone = new BlockPressurePlate(70, "stone", Material.rock, EnumMobType.mobs).setHardness(0.5F).setStepSound(soundStoneFootstep).setUnlocalizedName("pressurePlate");
-	public static final Block doorIron = new BlockDoor(71, Material.iron).setHardness(5.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("doorIron").disableStats();
-	public static final Block pressurePlatePlanks = new BlockPressurePlate(72, "wood", Material.wood, EnumMobType.everything).setHardness(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("pressurePlate");
-	public static final Block oreRedstone = new BlockRedstoneOre(73, false).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreRedstone").setCreativeTab(CreativeTabs.tabBlock);
-	public static final Block oreRedstoneGlowing = new BlockRedstoneOre(74, true).setLightValue(0.625F).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreRedstone");
-	public static final Block torchRedstoneIdle = new BlockRedstoneTorch(75, false).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("notGate");
-	public static final Block torchRedstoneActive = new BlockRedstoneTorch(76, true).setHardness(0.0F).setLightValue(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("notGate").setCreativeTab(CreativeTabs.tabRedstone);
+	public static final Block doorIron = new BlockDoor(71, Material.iron).setHardness(5.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("doorIron").disableStats().func_111022_d("door_iron");
+	public static final Block pressurePlatePlanks = new BlockPressurePlate(72, "planks_oak", Material.wood, EnumMobType.everything).setHardness(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("pressurePlate");
+	public static final Block oreRedstone = new BlockRedstoneOre(73, false).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreRedstone").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("redstone_ore");
+	public static final Block oreRedstoneGlowing = new BlockRedstoneOre(74, true).setLightValue(0.625F).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreRedstone").func_111022_d("redstone_ore");
+	public static final Block torchRedstoneIdle = new BlockRedstoneTorch(75, false).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("notGate").func_111022_d("redstone_torch_off");
+	public static final Block torchRedstoneActive = new BlockRedstoneTorch(76, true).setHardness(0.0F).setLightValue(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("notGate").setCreativeTab(CreativeTabs.tabRedstone).func_111022_d("redstone_torch_on");
 	public static final Block stoneButton = new BlockButtonStone(77).setHardness(0.5F).setStepSound(soundStoneFootstep).setUnlocalizedName("button");
-	public static final Block snow = new BlockSnow(78).setHardness(0.1F).setStepSound(soundSnowFootstep).setUnlocalizedName("snow").setLightOpacity(0);
-	public static final Block ice = new BlockIce(79).setHardness(0.5F).setLightOpacity(3).setStepSound(soundGlassFootstep).setUnlocalizedName("ice");
-	public static final Block blockSnow = new BlockSnowBlock(80).setHardness(0.2F).setStepSound(soundSnowFootstep).setUnlocalizedName("snow");
-	public static final Block cactus = new BlockCactus(81).setHardness(0.4F).setStepSound(soundClothFootstep).setUnlocalizedName("cactus");
-	public static final Block blockClay = new BlockClay(82).setHardness(0.6F).setStepSound(soundGravelFootstep).setUnlocalizedName("clay");
-	public static final Block reed = new BlockReed(83).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("reeds").disableStats();
-	public static final Block jukebox = new BlockJukeBox(84).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("jukebox");
-	public static final Block fence = new BlockFence(85, "wood", Material.wood).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("fence");
-	public static final Block pumpkin = new BlockPumpkin(86, false).setHardness(1.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("pumpkin");
-	public static final Block netherrack = new BlockNetherrack(87).setHardness(0.4F).setStepSound(soundStoneFootstep).setUnlocalizedName("hellrock");
-	public static final Block slowSand = new BlockSoulSand(88).setHardness(0.5F).setStepSound(soundSandFootstep).setUnlocalizedName("hellsand");
-	public static final Block glowStone = new BlockGlowStone(89, Material.glass).setHardness(0.3F).setStepSound(soundGlassFootstep).setLightValue(1.0F).setUnlocalizedName("lightgem");
-	public static final BlockPortal portal = (BlockPortal) new BlockPortal(90).setHardness(-1.0F).setStepSound(soundGlassFootstep).setLightValue(0.75F).setUnlocalizedName("portal");
-	public static final Block pumpkinLantern = new BlockPumpkin(91, true).setHardness(1.0F).setStepSound(soundWoodFootstep).setLightValue(1.0F).setUnlocalizedName("litpumpkin");
-	public static final Block cake = new BlockCake(92).setHardness(0.5F).setStepSound(soundClothFootstep).setUnlocalizedName("cake").disableStats();
-	public static final BlockRedstoneRepeater redstoneRepeaterIdle = (BlockRedstoneRepeater) new BlockRedstoneRepeater(93, false).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("diode").disableStats();
-	public static final BlockRedstoneRepeater redstoneRepeaterActive = (BlockRedstoneRepeater) new BlockRedstoneRepeater(94, true).setHardness(0.0F).setLightValue(0.625F).setStepSound(soundWoodFootstep).setUnlocalizedName("diode").disableStats();
+	public static final Block snow = new BlockSnow(78).setHardness(0.1F).setStepSound(soundSnowFootstep).setUnlocalizedName("snow").setLightOpacity(0).func_111022_d("snow");
+	public static final Block ice = new BlockIce(79).setHardness(0.5F).setLightOpacity(3).setStepSound(soundGlassFootstep).setUnlocalizedName("ice").func_111022_d("ice");
+	public static final Block blockSnow = new BlockSnowBlock(80).setHardness(0.2F).setStepSound(soundSnowFootstep).setUnlocalizedName("snow").func_111022_d("snow");
+	public static final Block cactus = new BlockCactus(81).setHardness(0.4F).setStepSound(soundClothFootstep).setUnlocalizedName("cactus").func_111022_d("cactus");
+	public static final Block blockClay = new BlockClay(82).setHardness(0.6F).setStepSound(soundGravelFootstep).setUnlocalizedName("clay").func_111022_d("clay");
+	public static final Block reed = new BlockReed(83).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("reeds").disableStats().func_111022_d("reeds");
+	public static final Block jukebox = new BlockJukeBox(84).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("jukebox").func_111022_d("jukebox");
+	public static final Block fence = new BlockFence(85, "planks_oak", Material.wood).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("fence");
+	public static final Block pumpkin = new BlockPumpkin(86, false).setHardness(1.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("pumpkin").func_111022_d("pumpkin");
+	public static final Block netherrack = new BlockNetherrack(87).setHardness(0.4F).setStepSound(soundStoneFootstep).setUnlocalizedName("hellrock").func_111022_d("netherrack");
+	public static final Block slowSand = new BlockSoulSand(88).setHardness(0.5F).setStepSound(soundSandFootstep).setUnlocalizedName("hellsand").func_111022_d("soul_sand");
+	public static final Block glowStone = new BlockGlowStone(89, Material.glass).setHardness(0.3F).setStepSound(soundGlassFootstep).setLightValue(1.0F).setUnlocalizedName("lightgem").func_111022_d("glowstone");
+	public static final BlockPortal portal = (BlockPortal) new BlockPortal(90).setHardness(-1.0F).setStepSound(soundGlassFootstep).setLightValue(0.75F).setUnlocalizedName("portal").func_111022_d("portal");
+	public static final Block pumpkinLantern = new BlockPumpkin(91, true).setHardness(1.0F).setStepSound(soundWoodFootstep).setLightValue(1.0F).setUnlocalizedName("litpumpkin").func_111022_d("pumpkin");
+	public static final Block cake = new BlockCake(92).setHardness(0.5F).setStepSound(soundClothFootstep).setUnlocalizedName("cake").disableStats().func_111022_d("cake");
+	public static final BlockRedstoneRepeater redstoneRepeaterIdle = (BlockRedstoneRepeater) new BlockRedstoneRepeater(93, false).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("diode").disableStats().func_111022_d("repeater_off");
+	public static final BlockRedstoneRepeater redstoneRepeaterActive = (BlockRedstoneRepeater) new BlockRedstoneRepeater(94, true).setHardness(0.0F).setLightValue(0.625F).setStepSound(soundWoodFootstep).setUnlocalizedName("diode").disableStats().func_111022_d("repeater_on");
 	public static final Block lockedChest = new BlockLockedChest(95).setHardness(0.0F).setLightValue(1.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("lockedchest").setTickRandomly(true);
-	public static final Block trapdoor = new BlockTrapDoor(96, Material.wood).setHardness(3.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("trapdoor").disableStats();
+	public static final Block trapdoor = new BlockTrapDoor(96, Material.wood).setHardness(3.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("trapdoor").disableStats().func_111022_d("trapdoor");
 	public static final Block silverfish = new BlockSilverfish(97).setHardness(0.75F).setUnlocalizedName("monsterStoneEgg");
-	public static final Block stoneBrick = new BlockStoneBrick(98).setHardness(1.5F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stonebricksmooth");
-	public static final Block mushroomCapBrown = new BlockMushroomCap(99, Material.wood, 0).setHardness(0.2F).setStepSound(soundWoodFootstep).setUnlocalizedName("mushroom");
-	public static final Block mushroomCapRed = new BlockMushroomCap(100, Material.wood, 1).setHardness(0.2F).setStepSound(soundWoodFootstep).setUnlocalizedName("mushroom");
-	public static final Block fenceIron = new BlockPane(101, "fenceIron", "fenceIron", Material.iron, true).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("fenceIron");
-	public static final Block thinGlass = new BlockPane(102, "glass", "thinglass_top", Material.glass, false).setHardness(0.3F).setStepSound(soundGlassFootstep).setUnlocalizedName("thinGlass");
-	public static final Block melon = new BlockMelon(103).setHardness(1.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("melon");
-	public static final Block pumpkinStem = new BlockStem(104, pumpkin).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("pumpkinStem");
-	public static final Block melonStem = new BlockStem(105, melon).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("pumpkinStem");
-	public static final Block vine = new BlockVine(106).setHardness(0.2F).setStepSound(soundGrassFootstep).setUnlocalizedName("vine");
+	public static final Block stoneBrick = new BlockStoneBrick(98).setHardness(1.5F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("stonebricksmooth").func_111022_d("stonebrick");
+	public static final Block mushroomCapBrown = new BlockMushroomCap(99, Material.wood, 0).setHardness(0.2F).setStepSound(soundWoodFootstep).setUnlocalizedName("mushroom").func_111022_d("mushroom_block");
+	public static final Block mushroomCapRed = new BlockMushroomCap(100, Material.wood, 1).setHardness(0.2F).setStepSound(soundWoodFootstep).setUnlocalizedName("mushroom").func_111022_d("mushroom_block");
+	public static final Block fenceIron = new BlockPane(101, "iron_bars", "iron_bars", Material.iron, true).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("fenceIron");
+	public static final Block thinGlass = new BlockPane(102, "glass", "glass_pane_top", Material.glass, false).setHardness(0.3F).setStepSound(soundGlassFootstep).setUnlocalizedName("thinGlass");
+	public static final Block melon = new BlockMelon(103).setHardness(1.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("melon").func_111022_d("melon");
+	public static final Block pumpkinStem = new BlockStem(104, pumpkin).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("pumpkinStem").func_111022_d("pumpkin_stem");
+	public static final Block melonStem = new BlockStem(105, melon).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("pumpkinStem").func_111022_d("melon_stem");
+	public static final Block vine = new BlockVine(106).setHardness(0.2F).setStepSound(soundGrassFootstep).setUnlocalizedName("vine").func_111022_d("vine");
 	public static final Block fenceGate = new BlockFenceGate(107).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("fenceGate");
 	public static final Block stairsBrick = new BlockStairs(108, brick, 0).setUnlocalizedName("stairsBrick");
 	public static final Block stairsStoneBrick = new BlockStairs(109, stoneBrick, 0).setUnlocalizedName("stairsStoneBrickSmooth");
-	public static final BlockMycelium mycelium = (BlockMycelium) new BlockMycelium(110).setHardness(0.6F).setStepSound(soundGrassFootstep).setUnlocalizedName("mycel");
-	public static final Block waterlily = new BlockLilyPad(111).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("waterlily");
-	public static final Block netherBrick = new Block(112, Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("netherBrick").setCreativeTab(CreativeTabs.tabBlock);
-	public static final Block netherFence = new BlockFence(113, "netherBrick", Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("netherFence");
+	public static final BlockMycelium mycelium = (BlockMycelium) new BlockMycelium(110).setHardness(0.6F).setStepSound(soundGrassFootstep).setUnlocalizedName("mycel").func_111022_d("mycelium");
+	public static final Block waterlily = new BlockLilyPad(111).setHardness(0.0F).setStepSound(soundGrassFootstep).setUnlocalizedName("waterlily").func_111022_d("waterlily");
+	public static final Block netherBrick = new Block(112, Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("netherBrick").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("nether_brick");
+	public static final Block netherFence = new BlockFence(113, "nether_brick", Material.rock).setHardness(2.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("netherFence");
 	public static final Block stairsNetherBrick = new BlockStairs(114, netherBrick, 0).setUnlocalizedName("stairsNetherBrick");
-	public static final Block netherStalk = new BlockNetherStalk(115).setUnlocalizedName("netherStalk");
-	public static final Block enchantmentTable = new BlockEnchantmentTable(116).setHardness(5.0F).setResistance(2000.0F).setUnlocalizedName("enchantmentTable");
-	public static final Block brewingStand = new BlockBrewingStand(117).setHardness(0.5F).setLightValue(0.125F).setUnlocalizedName("brewingStand");
-	public static final BlockCauldron cauldron = (BlockCauldron) new BlockCauldron(118).setHardness(2.0F).setUnlocalizedName("cauldron");
+	public static final Block netherStalk = new BlockNetherStalk(115).setUnlocalizedName("netherStalk").func_111022_d("nether_wart");
+	public static final Block enchantmentTable = new BlockEnchantmentTable(116).setHardness(5.0F).setResistance(2000.0F).setUnlocalizedName("enchantmentTable").func_111022_d("enchanting_table");
+	public static final Block brewingStand = new BlockBrewingStand(117).setHardness(0.5F).setLightValue(0.125F).setUnlocalizedName("brewingStand").func_111022_d("brewing_stand");
+	public static final BlockCauldron cauldron = (BlockCauldron) new BlockCauldron(118).setHardness(2.0F).setUnlocalizedName("cauldron").func_111022_d("cauldron");
 	public static final Block endPortal = new BlockEndPortal(119, Material.portal).setHardness(-1.0F).setResistance(6000000.0F);
-	public static final Block endPortalFrame = new BlockEndPortalFrame(120).setStepSound(soundGlassFootstep).setLightValue(0.125F).setHardness(-1.0F).setUnlocalizedName("endPortalFrame").setResistance(6000000.0F).setCreativeTab(CreativeTabs.tabDecorations);
-	public static final Block whiteStone = new Block(121, Material.rock).setHardness(3.0F).setResistance(15.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("whiteStone").setCreativeTab(CreativeTabs.tabBlock);
-	public static final Block dragonEgg = new BlockDragonEgg(122).setHardness(3.0F).setResistance(15.0F).setStepSound(soundStoneFootstep).setLightValue(0.125F).setUnlocalizedName("dragonEgg");
-	public static final Block redstoneLampIdle = new BlockRedstoneLight(123, false).setHardness(0.3F).setStepSound(soundGlassFootstep).setUnlocalizedName("redstoneLight").setCreativeTab(CreativeTabs.tabRedstone);
-	public static final Block redstoneLampActive = new BlockRedstoneLight(124, true).setHardness(0.3F).setStepSound(soundGlassFootstep).setUnlocalizedName("redstoneLight");
+	public static final Block endPortalFrame = new BlockEndPortalFrame(120).setStepSound(soundGlassFootstep).setLightValue(0.125F).setHardness(-1.0F).setUnlocalizedName("endPortalFrame").setResistance(6000000.0F).setCreativeTab(CreativeTabs.tabDecorations).func_111022_d("endframe");
+	public static final Block whiteStone = new Block(121, Material.rock).setHardness(3.0F).setResistance(15.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("whiteStone").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("end_stone");
+	public static final Block dragonEgg = new BlockDragonEgg(122).setHardness(3.0F).setResistance(15.0F).setStepSound(soundStoneFootstep).setLightValue(0.125F).setUnlocalizedName("dragonEgg").func_111022_d("dragon_egg");
+	public static final Block redstoneLampIdle = new BlockRedstoneLight(123, false).setHardness(0.3F).setStepSound(soundGlassFootstep).setUnlocalizedName("redstoneLight").setCreativeTab(CreativeTabs.tabRedstone).func_111022_d("redstone_lamp_off");
+	public static final Block redstoneLampActive = new BlockRedstoneLight(124, true).setHardness(0.3F).setStepSound(soundGlassFootstep).setUnlocalizedName("redstoneLight").func_111022_d("redstone_lamp_on");
 	public static final BlockHalfSlab woodDoubleSlab = (BlockHalfSlab) new BlockWoodSlab(125, true).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("woodSlab");
 	public static final BlockHalfSlab woodSingleSlab = (BlockHalfSlab) new BlockWoodSlab(126, false).setHardness(2.0F).setResistance(5.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("woodSlab");
-	public static final Block cocoaPlant = new BlockCocoa(127).setHardness(0.2F).setResistance(5.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("cocoa");
+	public static final Block cocoaPlant = new BlockCocoa(127).setHardness(0.2F).setResistance(5.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("cocoa").func_111022_d("cocoa");
 	public static final Block stairsSandStone = new BlockStairs(128, sandStone, 0).setUnlocalizedName("stairsSandStone");
-	public static final Block oreEmerald = new BlockOre(129).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreEmerald");
+	public static final Block oreEmerald = new BlockOre(129).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("oreEmerald").func_111022_d("emerald_ore");
 	public static final Block enderChest = new BlockEnderChest(130).setHardness(22.5F).setResistance(1000.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("enderChest").setLightValue(0.5F);
-	public static final BlockTripWireSource tripWireSource = (BlockTripWireSource) new BlockTripWireSource(131).setUnlocalizedName("tripWireSource");
-	public static final Block tripWire = new BlockTripWire(132).setUnlocalizedName("tripWire");
-	public static final Block blockEmerald = new BlockOreStorage(133).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockEmerald");
+	public static final BlockTripWireSource tripWireSource = (BlockTripWireSource) new BlockTripWireSource(131).setUnlocalizedName("tripWireSource").func_111022_d("trip_wire_source");
+	public static final Block tripWire = new BlockTripWire(132).setUnlocalizedName("tripWire").func_111022_d("trip_wire");
+	public static final Block blockEmerald = new BlockOreStorage(133).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockEmerald").func_111022_d("emerald_block");
 	public static final Block stairsWoodSpruce = new BlockStairs(134, planks, 1).setUnlocalizedName("stairsWoodSpruce");
 	public static final Block stairsWoodBirch = new BlockStairs(135, planks, 2).setUnlocalizedName("stairsWoodBirch");
 	public static final Block stairsWoodJungle = new BlockStairs(136, planks, 3).setUnlocalizedName("stairsWoodJungle");
-	public static final Block commandBlock = new BlockCommandBlock(137).setUnlocalizedName("commandBlock");
-	public static final BlockBeacon beacon = (BlockBeacon) new BlockBeacon(138).setUnlocalizedName("beacon").setLightValue(1.0F);
+	public static final Block commandBlock = new BlockCommandBlock(137).setBlockUnbreakable().setResistance(6000000.0F).setUnlocalizedName("commandBlock").func_111022_d("command_block");
+	public static final BlockBeacon beacon = (BlockBeacon) new BlockBeacon(138).setUnlocalizedName("beacon").setLightValue(1.0F).func_111022_d("beacon");
 	public static final Block cobblestoneWall = new BlockWall(139, cobblestone).setUnlocalizedName("cobbleWall");
-	public static final Block flowerPot = new BlockFlowerPot(140).setHardness(0.0F).setStepSound(soundPowderFootstep).setUnlocalizedName("flowerPot");
-	public static final Block carrot = new BlockCarrot(141).setUnlocalizedName("carrots");
-	public static final Block potato = new BlockPotato(142).setUnlocalizedName("potatoes");
+	public static final Block flowerPot = new BlockFlowerPot(140).setHardness(0.0F).setStepSound(soundPowderFootstep).setUnlocalizedName("flowerPot").func_111022_d("flower_pot");
+	public static final Block carrot = new BlockCarrot(141).setUnlocalizedName("carrots").func_111022_d("carrots");
+	public static final Block potato = new BlockPotato(142).setUnlocalizedName("potatoes").func_111022_d("potatoes");
 	public static final Block woodenButton = new BlockButtonWood(143).setHardness(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("button");
-	public static final Block skull = new BlockSkull(144).setHardness(1.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("skull");
+	public static final Block skull = new BlockSkull(144).setHardness(1.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("skull").func_111022_d("skull");
 	public static final Block anvil = new BlockAnvil(145).setHardness(5.0F).setStepSound(soundAnvilFootstep).setResistance(2000.0F).setUnlocalizedName("anvil");
 	public static final Block chestTrapped = new BlockChest(146, 1).setHardness(2.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("chestTrap");
-	public static final Block pressurePlateGold = new BlockPressurePlateWeighted(147, "blockGold", Material.iron, 64).setHardness(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("weightedPlate_light");
-	public static final Block pressurePlateIron = new BlockPressurePlateWeighted(148, "blockIron", Material.iron, 640).setHardness(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("weightedPlate_heavy");
-	public static final BlockComparator redstoneComparatorIdle = (BlockComparator) new BlockComparator(149, false).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("comparator").disableStats();
-	public static final BlockComparator redstoneComparatorActive = (BlockComparator) new BlockComparator(150, true).setHardness(0.0F).setLightValue(0.625F).setStepSound(soundWoodFootstep).setUnlocalizedName("comparator").disableStats();
-	public static final BlockDaylightDetector daylightSensor = (BlockDaylightDetector) new BlockDaylightDetector(151).setHardness(0.2F).setStepSound(soundWoodFootstep).setUnlocalizedName("daylightDetector");
-	public static final Block blockRedstone = new BlockPoweredOre(152).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockRedstone");
-	public static final Block oreNetherQuartz = new BlockOre(153).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("netherquartz");
-	public static final BlockHopper hopperBlock = (BlockHopper) new BlockHopper(154).setHardness(3.0F).setResistance(8.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("hopper");
-	public static final Block blockNetherQuartz = new BlockQuartz(155).setStepSound(soundStoneFootstep).setHardness(0.8F).setUnlocalizedName("quartzBlock");
+	public static final Block pressurePlateGold = new BlockPressurePlateWeighted(147, "gold_block", Material.iron, 64).setHardness(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("weightedPlate_light");
+	public static final Block pressurePlateIron = new BlockPressurePlateWeighted(148, "iron_block", Material.iron, 640).setHardness(0.5F).setStepSound(soundWoodFootstep).setUnlocalizedName("weightedPlate_heavy");
+	public static final BlockComparator redstoneComparatorIdle = (BlockComparator) new BlockComparator(149, false).setHardness(0.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("comparator").disableStats().func_111022_d("comparator_off");
+	public static final BlockComparator redstoneComparatorActive = (BlockComparator) new BlockComparator(150, true).setHardness(0.0F).setLightValue(0.625F).setStepSound(soundWoodFootstep).setUnlocalizedName("comparator").disableStats().func_111022_d("comparator_on");
+	public static final BlockDaylightDetector daylightSensor = (BlockDaylightDetector) new BlockDaylightDetector(151).setHardness(0.2F).setStepSound(soundWoodFootstep).setUnlocalizedName("daylightDetector").func_111022_d("daylight_detector");
+	public static final Block blockRedstone = new BlockPoweredOre(152).setHardness(5.0F).setResistance(10.0F).setStepSound(soundMetalFootstep).setUnlocalizedName("blockRedstone").func_111022_d("redstone_block");
+	public static final Block oreNetherQuartz = new BlockOre(153).setHardness(3.0F).setResistance(5.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("netherquartz").func_111022_d("quartz_ore");
+	public static final BlockHopper hopperBlock = (BlockHopper) new BlockHopper(154).setHardness(3.0F).setResistance(8.0F).setStepSound(soundWoodFootstep).setUnlocalizedName("hopper").func_111022_d("hopper");
+	public static final Block blockNetherQuartz = new BlockQuartz(155).setStepSound(soundStoneFootstep).setHardness(0.8F).setUnlocalizedName("quartzBlock").func_111022_d("quartz_block");
 	public static final Block stairsNetherQuartz = new BlockStairs(156, blockNetherQuartz, 0).setUnlocalizedName("stairsQuartz");
-	public static final Block railActivator = new BlockRailPowered(157).setHardness(0.7F).setStepSound(soundMetalFootstep).setUnlocalizedName("activatorRail");
-	public static final Block dropper = new BlockDropper(158).setHardness(3.5F).setStepSound(soundStoneFootstep).setUnlocalizedName("dropper");
+	public static final Block railActivator = new BlockRailPowered(157).setHardness(0.7F).setStepSound(soundMetalFootstep).setUnlocalizedName("activatorRail").func_111022_d("rail_activator");
+	public static final Block dropper = new BlockDropper(158).setHardness(3.5F).setStepSound(soundStoneFootstep).setUnlocalizedName("dropper").func_111022_d("dropper");
+	public static final Block field_111039_cA = new BlockColored(159, Material.rock).setHardness(1.25F).setResistance(7.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("clayHardenedStained").func_111022_d("hardened_clay_stained");
+	public static final Block field_111038_cB = new BlockHay(170).setHardness(0.5F).setStepSound(soundGrassFootstep).setUnlocalizedName("hayBlock").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("hay_block");
+	public static final Block field_111031_cC = new BlockCarpet(171).setHardness(0.1F).setStepSound(soundClothFootstep).setUnlocalizedName("woolCarpet").setLightOpacity(0);
+	public static final Block field_111032_cD = new Block(172, Material.rock).setHardness(1.25F).setResistance(7.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("clayHardened").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("hardened_clay");
+	public static final Block field_111034_cE = new Block(173, Material.rock).setHardness(5.0F).setResistance(10.0F).setStepSound(soundStoneFootstep).setUnlocalizedName("blockCoal").setCreativeTab(CreativeTabs.tabBlock).func_111022_d("coal_block");
 	public final int blockID;
 	protected float blockHardness;
 	protected float blockResistance;
@@ -202,21 +208,21 @@
 	private String unlocalizedName;
 	protected Icon blockIcon;
 	
-	protected Block(int par1, Material par2Material)
+	protected Block(int p_i2273_1_, Material p_i2273_2_)
 	{
 		stepSound = soundPowderFootstep;
 		blockParticleGravity = 1.0F;
 		slipperiness = 0.6F;
-		if(blocksList[par1] != null) throw new IllegalArgumentException("Slot " + par1 + " is already occupied by " + blocksList[par1] + " when adding " + this);
+		if(blocksList[p_i2273_1_] != null) throw new IllegalArgumentException("Slot " + p_i2273_1_ + " is already occupied by " + blocksList[p_i2273_1_] + " when adding " + this);
 		else
 		{
-			blockMaterial = par2Material;
-			blocksList[par1] = this;
-			blockID = par1;
+			blockMaterial = p_i2273_2_;
+			blocksList[p_i2273_1_] = this;
+			blockID = p_i2273_1_;
 			setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
-			opaqueCubeLookup[par1] = isOpaqueCube();
-			lightOpacity[par1] = isOpaqueCube() ? 255 : 0;
-			canBlockGrass[par1] = !par2Material.getCanBlockGrass();
+			opaqueCubeLookup[p_i2273_1_] = isOpaqueCube();
+			lightOpacity[p_i2273_1_] = isOpaqueCube() ? 255 : 0;
+			canBlockGrass[p_i2273_1_] = !p_i2273_2_.getCanBlockGrass();
 		}
 	}
 	
@@ -447,6 +453,17 @@
 	{
 	}
 	
+	protected Block func_111022_d(String p_111022_1_)
+	{
+		field_111026_f = p_111022_1_;
+		return this;
+	}
+	
+	protected String func_111023_E()
+	{
+		return field_111026_f == null ? "MISSING_ICON_TILE_" + blockID + "_" + unlocalizedName : field_111026_f;
+	}
+	
 	public boolean func_82506_l()
 	{
 		return true;
@@ -613,11 +630,6 @@
 		return "tile." + unlocalizedName;
 	}
 	
-	public String getUnlocalizedName2()
-	{
-		return unlocalizedName;
-	}
-	
 	public void harvestBlock(World par1World, EntityPlayer par2EntityPlayer, int par3, int par4, int par5, int par6)
 	{
 		par2EntityPlayer.addStat(StatList.mineBlockStatArray[blockID], 1);
@@ -745,7 +757,7 @@
 		return par9;
 	}
 	
-	public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 	}
 	
@@ -789,7 +801,7 @@
 	
 	public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon(unlocalizedName);
+		blockIcon = par1IconRegister.registerIcon(func_111023_E());
 	}
 	
 	public boolean renderAsNormalBlock()
@@ -905,6 +917,8 @@
 	static
 	{
 		Item.itemsList[cloth.blockID] = new ItemCloth(cloth.blockID - 256).setUnlocalizedName("cloth");
+		Item.itemsList[field_111039_cA.blockID] = new ItemCloth(field_111039_cA.blockID - 256).setUnlocalizedName("clayHardenedStained");
+		Item.itemsList[field_111031_cC.blockID] = new ItemCloth(field_111031_cC.blockID - 256).setUnlocalizedName("woolCarpet");
 		Item.itemsList[wood.blockID] = new ItemMultiTextureTile(wood.blockID - 256, wood, BlockLog.woodType).setUnlocalizedName("log");
 		Item.itemsList[planks.blockID] = new ItemMultiTextureTile(planks.blockID - 256, planks, BlockWood.woodType).setUnlocalizedName("wood");
 		Item.itemsList[silverfish.blockID] = new ItemMultiTextureTile(silverfish.blockID - 256, silverfish, BlockSilverfish.silverfishStoneTypes).setUnlocalizedName("monsterStoneEgg");
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockAnvil.java b/RMCClient/minecraft/net/minecraft/src/BlockAnvil.java
index 8c52bf2..da4e6aa 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockAnvil.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockAnvil.java
@@ -5,13 +5,13 @@
 public class BlockAnvil extends BlockSand
 {
 	public static final String[] statuses = new String[] { "intact", "slightlyDamaged", "veryDamaged" };
-	private static final String[] anvilIconNames = new String[] { "anvil_top", "anvil_top_damaged_1", "anvil_top_damaged_2" };
-	public int field_82521_b = 0;
+	private static final String[] anvilIconNames = new String[] { "anvil_top_damaged_0", "anvil_top_damaged_1", "anvil_top_damaged_2" };
+	public int field_82521_b;
 	private Icon[] iconArray;
 	
-	protected BlockAnvil(int par1)
+	protected BlockAnvil(int p_i2163_1_)
 	{
-		super(par1, Material.anvil);
+		super(p_i2163_1_, Material.anvil);
 		setLightOpacity(0);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
@@ -57,7 +57,7 @@
 		}
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 0.5D) & 3;
 		int var8 = par1World.getBlockMetadata(par2, par3, par4) >> 2;
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockBasePressurePlate.java b/RMCClient/minecraft/net/minecraft/src/BlockBasePressurePlate.java
index 62840c2..d504f1a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockBasePressurePlate.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockBasePressurePlate.java
@@ -6,10 +6,10 @@
 {
 	private String pressurePlateIconName;
 	
-	protected BlockBasePressurePlate(int par1, String par2Str, Material par3Material)
+	protected BlockBasePressurePlate(int p_i2165_1_, String p_i2165_2_, Material p_i2165_3_)
 	{
-		super(par1, par3Material);
-		pressurePlateIconName = par2Str;
+		super(p_i2165_1_, p_i2165_3_);
+		pressurePlateIconName = p_i2165_2_;
 		setCreativeTab(CreativeTabs.tabRedstone);
 		setTickRandomly(true);
 		func_94353_c_(getMetaFromWeight(15));
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockBaseRailLogic.java b/RMCClient/minecraft/net/minecraft/src/BlockBaseRailLogic.java
index 974e003..0b67e93 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockBaseRailLogic.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockBaseRailLogic.java
@@ -13,16 +13,16 @@
 	private List railChunkPosition;
 	final BlockRailBase theRail;
 	
-	public BlockBaseRailLogic(BlockRailBase par1, World par2, int par3, int par4, int par5)
+	public BlockBaseRailLogic(BlockRailBase p_i2166_1_, World p_i2166_2_, int p_i2166_3_, int p_i2166_4_, int p_i2166_5_)
 	{
-		theRail = par1;
+		theRail = p_i2166_1_;
 		railChunkPosition = new ArrayList();
-		logicWorld = par2;
-		railX = par3;
-		railY = par4;
-		railZ = par5;
-		int var6 = par2.getBlockId(par3, par4, par5);
-		int var7 = par2.getBlockMetadata(par3, par4, par5);
+		logicWorld = p_i2166_2_;
+		railX = p_i2166_3_;
+		railY = p_i2166_4_;
+		railZ = p_i2166_5_;
+		int var6 = p_i2166_2_.getBlockId(p_i2166_3_, p_i2166_4_, p_i2166_5_);
+		int var7 = p_i2166_2_.getBlockMetadata(p_i2166_3_, p_i2166_4_, p_i2166_5_);
 		if(((BlockRailBase) Block.blocksList[var6]).isPowered)
 		{
 			isStraightRail = true;
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockBeacon.java b/RMCClient/minecraft/net/minecraft/src/BlockBeacon.java
index 1485f86..3eb85e3 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockBeacon.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockBeacon.java
@@ -2,11 +2,9 @@
 
 public class BlockBeacon extends BlockContainer
 {
-	private Icon theIcon;
-	
-	public BlockBeacon(int par1)
+	public BlockBeacon(int p_i2168_1_)
 	{
-		super(par1, Material.glass);
+		super(p_i2168_1_, Material.glass);
 		setHardness(3.0F);
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
@@ -14,11 +12,6 @@
 	@Override public TileEntity createNewTileEntity(World par1World)
 	{
 		return new TileEntityBeacon();
-	}
-	
-	public Icon getBeaconIcon()
-	{
-		return theIcon;
 	}
 	
 	@Override public int getRenderType()
@@ -45,7 +38,7 @@
 		}
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		super.onBlockPlacedBy(par1World, par2, par3, par4, par5EntityLiving, par6ItemStack);
 		if(par6ItemStack.hasDisplayName())
@@ -57,7 +50,6 @@
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		super.registerIcons(par1IconRegister);
-		theIcon = par1IconRegister.registerIcon("beacon");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockBed.java b/RMCClient/minecraft/net/minecraft/src/BlockBed.java
index d6c54fd..cc31c5f 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockBed.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockBed.java
@@ -10,9 +10,9 @@
 	private Icon[] bedSideIcons;
 	private Icon[] bedTopIcons;
 	
-	public BlockBed(int par1)
+	public BlockBed(int p_i2169_1_)
 	{
-		super(par1, Material.cloth);
+		super(p_i2169_1_, Material.cloth);
 		setBounds();
 	}
 	
@@ -174,9 +174,9 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		bedTopIcons = new Icon[] { par1IconRegister.registerIcon("bed_feet_top"), par1IconRegister.registerIcon("bed_head_top") };
-		field_94472_b = new Icon[] { par1IconRegister.registerIcon("bed_feet_end"), par1IconRegister.registerIcon("bed_head_end") };
-		bedSideIcons = new Icon[] { par1IconRegister.registerIcon("bed_feet_side"), par1IconRegister.registerIcon("bed_head_side") };
+		bedTopIcons = new Icon[] { par1IconRegister.registerIcon(func_111023_E() + "_feet_top"), par1IconRegister.registerIcon(func_111023_E() + "_head_top") };
+		field_94472_b = new Icon[] { par1IconRegister.registerIcon(func_111023_E() + "_feet_end"), par1IconRegister.registerIcon(func_111023_E() + "_head_end") };
+		bedSideIcons = new Icon[] { par1IconRegister.registerIcon(func_111023_E() + "_feet_side"), par1IconRegister.registerIcon(func_111023_E() + "_head_side") };
 	}
 	
 	@Override public boolean renderAsNormalBlock()
@@ -208,7 +208,7 @@
 			{
 				for(int var13 = var9; var13 <= var11; ++var13)
 				{
-					if(par0World.doesBlockHaveSolidTopSurface(var12, par2 - 1, var13) && par0World.isAirBlock(var12, par2, var13) && par0World.isAirBlock(var12, par2 + 1, var13))
+					if(par0World.doesBlockHaveSolidTopSurface(var12, par2 - 1, var13) && !par0World.getBlockMaterial(var12, par2, var13).isOpaque() && !par0World.getBlockMaterial(var12, par2 + 1, var13).isOpaque())
 					{
 						if(par4 <= 0) return new ChunkCoordinates(var12, par2, var13);
 						--par4;
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockBookshelf.java b/RMCClient/minecraft/net/minecraft/src/BlockBookshelf.java
index e70836b..241740a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockBookshelf.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockBookshelf.java
@@ -4,9 +4,9 @@
 
 public class BlockBookshelf extends Block
 {
-	public BlockBookshelf(int par1)
+	public BlockBookshelf(int p_i2170_1_)
 	{
-		super(par1, Material.wood);
+		super(p_i2170_1_, Material.wood);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockBreakable.java b/RMCClient/minecraft/net/minecraft/src/BlockBreakable.java
index e077fcb..034d307 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockBreakable.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockBreakable.java
@@ -5,11 +5,11 @@
 	private boolean localFlag;
 	private String breakableBlockIcon;
 	
-	protected BlockBreakable(int par1, String par2Str, Material par3Material, boolean par4)
+	protected BlockBreakable(int p_i2209_1_, String p_i2209_2_, Material p_i2209_3_, boolean p_i2209_4_)
 	{
-		super(par1, par3Material);
-		localFlag = par4;
-		breakableBlockIcon = par2Str;
+		super(p_i2209_1_, p_i2209_3_);
+		localFlag = p_i2209_4_;
+		breakableBlockIcon = p_i2209_2_;
 	}
 	
 	@Override public boolean isOpaqueCube()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockBrewingStand.java b/RMCClient/minecraft/net/minecraft/src/BlockBrewingStand.java
index 40db6ed..de1cbdc 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockBrewingStand.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockBrewingStand.java
@@ -8,9 +8,9 @@
 	private Random rand = new Random();
 	private Icon theIcon;
 	
-	public BlockBrewingStand(int par1)
+	public BlockBrewingStand(int p_i2171_1_)
 	{
-		super(par1, Material.iron);
+		super(p_i2171_1_, Material.iron);
 	}
 	
 	@Override public void addCollisionBoxesToList(World par1World, int par2, int par3, int par4, AxisAlignedBB par5AxisAlignedBB, List par6List, Entity par7Entity)
@@ -110,7 +110,7 @@
 		}
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		if(par6ItemStack.hasDisplayName())
 		{
@@ -129,7 +129,7 @@
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		super.registerIcons(par1IconRegister);
-		theIcon = par1IconRegister.registerIcon("brewingStand_base");
+		theIcon = par1IconRegister.registerIcon(func_111023_E() + "_base");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockButton.java b/RMCClient/minecraft/net/minecraft/src/BlockButton.java
index abd597e..77969b9 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockButton.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockButton.java
@@ -7,12 +7,12 @@
 {
 	private final boolean sensible;
 	
-	protected BlockButton(int par1, boolean par2)
+	protected BlockButton(int p_i2174_1_, boolean p_i2174_2_)
 	{
-		super(par1, Material.circuits);
+		super(p_i2174_1_, Material.circuits);
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabRedstone);
-		sensible = par2;
+		sensible = p_i2174_2_;
 	}
 	
 	@Override public void breakBlock(World par1World, int par2, int par3, int par4, int par5, int par6)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockButtonStone.java b/RMCClient/minecraft/net/minecraft/src/BlockButtonStone.java
index 61f3939..59a2d04 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockButtonStone.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockButtonStone.java
@@ -2,9 +2,9 @@
 
 public class BlockButtonStone extends BlockButton
 {
-	protected BlockButtonStone(int par1)
+	protected BlockButtonStone(int p_i2261_1_)
 	{
-		super(par1, false);
+		super(p_i2261_1_, false);
 	}
 	
 	@Override public Icon getIcon(int par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockButtonWood.java b/RMCClient/minecraft/net/minecraft/src/BlockButtonWood.java
index 111273e..2471351 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockButtonWood.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockButtonWood.java
@@ -2,9 +2,9 @@
 
 public class BlockButtonWood extends BlockButton
 {
-	protected BlockButtonWood(int par1)
+	protected BlockButtonWood(int p_i2287_1_)
 	{
-		super(par1, true);
+		super(p_i2287_1_, true);
 	}
 	
 	@Override public Icon getIcon(int par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockCactus.java b/RMCClient/minecraft/net/minecraft/src/BlockCactus.java
index 0d72a48..41d2a11 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockCactus.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockCactus.java
@@ -7,9 +7,9 @@
 	private Icon cactusTopIcon;
 	private Icon cactusBottomIcon;
 	
-	protected BlockCactus(int par1)
+	protected BlockCactus(int p_i2175_1_)
 	{
-		super(par1, Material.cactus);
+		super(p_i2175_1_, Material.cactus);
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
@@ -61,7 +61,7 @@
 	
 	@Override public void onEntityCollidedWithBlock(World par1World, int par2, int par3, int par4, Entity par5Entity)
 	{
-		par5Entity.attackEntityFrom(DamageSource.cactus, 1);
+		par5Entity.attackEntityFrom(DamageSource.cactus, 1.0F);
 	}
 	
 	@Override public void onNeighborBlockChange(World par1World, int par2, int par3, int par4, int par5)
@@ -74,9 +74,9 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("cactus_side");
-		cactusTopIcon = par1IconRegister.registerIcon("cactus_top");
-		cactusBottomIcon = par1IconRegister.registerIcon("cactus_bottom");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+		cactusTopIcon = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		cactusBottomIcon = par1IconRegister.registerIcon(func_111023_E() + "_bottom");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockCake.java b/RMCClient/minecraft/net/minecraft/src/BlockCake.java
index 21a8842..a8521a5 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockCake.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockCake.java
@@ -8,9 +8,9 @@
 	private Icon cakeBottomIcon;
 	private Icon field_94382_c;
 	
-	protected BlockCake(int par1)
+	protected BlockCake(int p_i2176_1_)
 	{
-		super(par1, Material.cake);
+		super(p_i2176_1_, Material.cake);
 		setTickRandomly(true);
 	}
 	
@@ -104,10 +104,10 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("cake_side");
-		field_94382_c = par1IconRegister.registerIcon("cake_inner");
-		cakeTopIcon = par1IconRegister.registerIcon("cake_top");
-		cakeBottomIcon = par1IconRegister.registerIcon("cake_bottom");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+		field_94382_c = par1IconRegister.registerIcon(func_111023_E() + "_inner");
+		cakeTopIcon = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		cakeBottomIcon = par1IconRegister.registerIcon(func_111023_E() + "_bottom");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockCarpet.java b/RMCClient/minecraft/net/minecraft/src/BlockCarpet.java
new file mode 100644
index 0000000..5b3cef5
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/BlockCarpet.java
@@ -0,0 +1,101 @@
+package net.minecraft.src;
+
+import java.util.List;
+
+public class BlockCarpet extends Block
+{
+	protected BlockCarpet(int p_i2290_1_)
+	{
+		super(p_i2290_1_, Material.field_111018_r);
+		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.0625F, 1.0F);
+		setTickRandomly(true);
+		setCreativeTab(CreativeTabs.tabDecorations);
+		func_111047_d(0);
+	}
+	
+	@Override public boolean canBlockStay(World par1World, int par2, int par3, int par4)
+	{
+		return !par1World.isAirBlock(par2, par3 - 1, par4);
+	}
+	
+	@Override public boolean canPlaceBlockAt(World par1World, int par2, int par3, int par4)
+	{
+		return super.canPlaceBlockAt(par1World, par2, par3, par4) && canBlockStay(par1World, par2, par3, par4);
+	}
+	
+	@Override public int damageDropped(int par1)
+	{
+		return par1;
+	}
+	
+	private boolean func_111046_k(World p_111046_1_, int p_111046_2_, int p_111046_3_, int p_111046_4_)
+	{
+		if(!canBlockStay(p_111046_1_, p_111046_2_, p_111046_3_, p_111046_4_))
+		{
+			dropBlockAsItem(p_111046_1_, p_111046_2_, p_111046_3_, p_111046_4_, p_111046_1_.getBlockMetadata(p_111046_2_, p_111046_3_, p_111046_4_), 0);
+			p_111046_1_.setBlockToAir(p_111046_2_, p_111046_3_, p_111046_4_);
+			return false;
+		} else return true;
+	}
+	
+	protected void func_111047_d(int p_111047_1_)
+	{
+		byte var2 = 0;
+		float var3 = 1 * (1 + var2) / 16.0F;
+		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, var3, 1.0F);
+	}
+	
+	@Override public AxisAlignedBB getCollisionBoundingBoxFromPool(World par1World, int par2, int par3, int par4)
+	{
+		byte var5 = 0;
+		float var6 = 0.0625F;
+		return AxisAlignedBB.getAABBPool().getAABB(par2 + minX, par3 + minY, par4 + minZ, par2 + maxX, par3 + var5 * var6, par4 + maxZ);
+	}
+	
+	@Override public Icon getIcon(int par1, int par2)
+	{
+		return Block.cloth.getIcon(par1, par2);
+	}
+	
+	@Override public void getSubBlocks(int par1, CreativeTabs par2CreativeTabs, List par3List)
+	{
+		for(int var4 = 0; var4 < 16; ++var4)
+		{
+			par3List.add(new ItemStack(par1, 1, var4));
+		}
+	}
+	
+	@Override public boolean isOpaqueCube()
+	{
+		return false;
+	}
+	
+	@Override public void onNeighborBlockChange(World par1World, int par2, int par3, int par4, int par5)
+	{
+		func_111046_k(par1World, par2, par3, par4);
+	}
+	
+	@Override public void registerIcons(IconRegister par1IconRegister)
+	{
+	}
+	
+	@Override public boolean renderAsNormalBlock()
+	{
+		return false;
+	}
+	
+	@Override public void setBlockBoundsBasedOnState(IBlockAccess par1IBlockAccess, int par2, int par3, int par4)
+	{
+		func_111047_d(par1IBlockAccess.getBlockMetadata(par2, par3, par4));
+	}
+	
+	@Override public void setBlockBoundsForItemRender()
+	{
+		func_111047_d(0);
+	}
+	
+	@Override public boolean shouldSideBeRendered(IBlockAccess par1IBlockAccess, int par2, int par3, int par4, int par5)
+	{
+		return par5 == 1 ? true : super.shouldSideBeRendered(par1IBlockAccess, par2, par3, par4, par5);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockCarrot.java b/RMCClient/minecraft/net/minecraft/src/BlockCarrot.java
index 47c2c85..ee178cf 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockCarrot.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockCarrot.java
@@ -4,9 +4,9 @@
 {
 	private Icon[] iconArray;
 	
-	public BlockCarrot(int par1)
+	public BlockCarrot(int p_i2177_1_)
 	{
-		super(par1);
+		super(p_i2177_1_);
 	}
 	
 	@Override protected int getCropItem()
@@ -36,7 +36,7 @@
 		iconArray = new Icon[4];
 		for(int var2 = 0; var2 < iconArray.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon("carrots_" + var2);
+			iconArray[var2] = par1IconRegister.registerIcon(func_111023_E() + "_stage_" + var2);
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockCauldron.java b/RMCClient/minecraft/net/minecraft/src/BlockCauldron.java
index fb12954..944adbb 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockCauldron.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockCauldron.java
@@ -9,9 +9,9 @@
 	private Icon cauldronTopIcon;
 	private Icon cauldronBottomIcon;
 	
-	public BlockCauldron(int par1)
+	public BlockCauldron(int p_i2178_1_)
 	{
-		super(par1, Material.iron);
+		super(p_i2178_1_, Material.iron);
 	}
 	
 	@Override public void addCollisionBoxesToList(World par1World, int par2, int par3, int par4, AxisAlignedBB par5AxisAlignedBB, List par6List, Entity par7Entity)
@@ -42,6 +42,12 @@
 		}
 	}
 	
+	@Override public int getComparatorInputOverride(World par1World, int par2, int par3, int par4, int par5)
+	{
+		int var6 = par1World.getBlockMetadata(par2, par3, par4);
+		return func_111045_h_(var6);
+	}
+	
 	@Override public Icon getIcon(int par1, int par2)
 	{
 		return par1 == 1 ? cauldronTopIcon : par1 == 0 ? cauldronBottomIcon : blockIcon;
@@ -50,6 +56,11 @@
 	@Override public int getRenderType()
 	{
 		return 24;
+	}
+	
+	@Override public boolean hasComparatorInputOverride()
+	{
+		return true;
 	}
 	
 	@Override public int idDropped(int par1, Random par2Random, int par3)
@@ -77,27 +88,29 @@
 			else
 			{
 				int var11 = par1World.getBlockMetadata(par2, par3, par4);
+				int var12 = func_111045_h_(var11);
 				if(var10.itemID == Item.bucketWater.itemID)
 				{
-					if(var11 < 3)
+					if(var12 < 3)
 					{
 						if(!par5EntityPlayer.capabilities.isCreativeMode)
 						{
 							par5EntityPlayer.inventory.setInventorySlotContents(par5EntityPlayer.inventory.currentItem, new ItemStack(Item.bucketEmpty));
 						}
 						par1World.setBlockMetadataWithNotify(par2, par3, par4, 3, 2);
+						par1World.func_96440_m(par2, par3, par4, blockID);
 					}
 					return true;
 				} else
 				{
 					if(var10.itemID == Item.glassBottle.itemID)
 					{
-						if(var11 > 0)
+						if(var12 > 0)
 						{
-							ItemStack var12 = new ItemStack(Item.potion, 1, 0);
-							if(!par5EntityPlayer.inventory.addItemStackToInventory(var12))
+							ItemStack var13 = new ItemStack(Item.potion, 1, 0);
+							if(!par5EntityPlayer.inventory.addItemStackToInventory(var13))
 							{
-								par1World.spawnEntityInWorld(new EntityItem(par1World, par2 + 0.5D, par3 + 1.5D, par4 + 0.5D, var12));
+								par1World.spawnEntityInWorld(new EntityItem(par1World, par2 + 0.5D, par3 + 1.5D, par4 + 0.5D, var13));
 							} else if(par5EntityPlayer instanceof EntityPlayerMP)
 							{
 								((EntityPlayerMP) par5EntityPlayer).sendContainerToPlayer(par5EntityPlayer.inventoryContainer);
@@ -107,13 +120,15 @@
 							{
 								par5EntityPlayer.inventory.setInventorySlotContents(par5EntityPlayer.inventory.currentItem, (ItemStack) null);
 							}
-							par1World.setBlockMetadataWithNotify(par2, par3, par4, var11 - 1, 2);
+							par1World.setBlockMetadataWithNotify(par2, par3, par4, var12 - 1, 2);
+							par1World.func_96440_m(par2, par3, par4, blockID);
 						}
-					} else if(var11 > 0 && var10.getItem() instanceof ItemArmor && ((ItemArmor) var10.getItem()).getArmorMaterial() == EnumArmorMaterial.CLOTH)
+					} else if(var12 > 0 && var10.getItem() instanceof ItemArmor && ((ItemArmor) var10.getItem()).getArmorMaterial() == EnumArmorMaterial.CLOTH)
 					{
-						ItemArmor var13 = (ItemArmor) var10.getItem();
-						var13.removeColor(var10);
-						par1World.setBlockMetadataWithNotify(par2, par3, par4, var11 - 1, 2);
+						ItemArmor var14 = (ItemArmor) var10.getItem();
+						var14.removeColor(var10);
+						par1World.setBlockMetadataWithNotify(par2, par3, par4, var12 - 1, 2);
+						par1World.func_96440_m(par2, par3, par4, blockID);
 						return true;
 					}
 					return true;
@@ -124,10 +139,10 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		field_94378_a = par1IconRegister.registerIcon("cauldron_inner");
-		cauldronTopIcon = par1IconRegister.registerIcon("cauldron_top");
-		cauldronBottomIcon = par1IconRegister.registerIcon("cauldron_bottom");
-		blockIcon = par1IconRegister.registerIcon("cauldron_side");
+		field_94378_a = par1IconRegister.registerIcon(func_111023_E() + "_" + "inner");
+		cauldronTopIcon = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		cauldronBottomIcon = par1IconRegister.registerIcon(func_111023_E() + "_" + "bottom");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
@@ -140,8 +155,13 @@
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
 	}
 	
+	public static int func_111045_h_(int p_111045_0_)
+	{
+		return p_111045_0_;
+	}
+	
 	public static Icon func_94375_b(String par0Str)
 	{
-		return par0Str == "cauldron_inner" ? Block.cauldron.field_94378_a : par0Str == "cauldron_bottom" ? Block.cauldron.cauldronBottomIcon : null;
+		return par0Str.equals("inner") ? Block.cauldron.field_94378_a : par0Str.equals("bottom") ? Block.cauldron.cauldronBottomIcon : null;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockChest.java b/RMCClient/minecraft/net/minecraft/src/BlockChest.java
index a6d9888..0e4ec0f 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockChest.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockChest.java
@@ -8,10 +8,10 @@
 	private final Random random = new Random();
 	public final int isTrapped;
 	
-	protected BlockChest(int par1, int par2)
+	protected BlockChest(int p_i2179_1_, int p_i2179_2_)
 	{
-		super(par1, Material.wood);
-		isTrapped = par2;
+		super(p_i2179_1_, Material.wood);
+		isTrapped = p_i2179_2_;
 		setCreativeTab(CreativeTabs.tabDecorations);
 		setBlockBounds(0.0625F, 0.0F, 0.0625F, 0.9375F, 0.875F, 0.9375F);
 	}
@@ -199,7 +199,7 @@
 		}
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = par1World.getBlockId(par2, par3, par4 - 1);
 		int var8 = par1World.getBlockId(par2, par3, par4 + 1);
@@ -269,7 +269,7 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("wood");
+		blockIcon = par1IconRegister.registerIcon("planks_oak");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockClay.java b/RMCClient/minecraft/net/minecraft/src/BlockClay.java
index f63d6d7..d5a1a46 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockClay.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockClay.java
@@ -4,9 +4,9 @@
 
 public class BlockClay extends Block
 {
-	public BlockClay(int par1)
+	public BlockClay(int p_i2180_1_)
 	{
-		super(par1, Material.clay);
+		super(p_i2180_1_, Material.clay);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockCocoa.java b/RMCClient/minecraft/net/minecraft/src/BlockCocoa.java
index e8a6de8..db8b66a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockCocoa.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockCocoa.java
@@ -4,12 +4,11 @@
 
 public class BlockCocoa extends BlockDirectional
 {
-	public static final String[] cocoaIcons = new String[] { "cocoa_0", "cocoa_1", "cocoa_2" };
 	private Icon[] iconArray;
 	
-	public BlockCocoa(int par1)
+	public BlockCocoa(int p_i2181_1_)
 	{
-		super(par1, Material.plants);
+		super(p_i2181_1_, Material.plants);
 		setTickRandomly(true);
 	}
 	
@@ -91,7 +90,7 @@
 		return Direction.rotateOpposite[Direction.facingToDirection[par5]];
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = ((MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 0.5D) & 3) + 0) % 4;
 		par1World.setBlockMetadataWithNotify(par2, par3, par4, var7, 2);
@@ -102,16 +101,16 @@
 		if(!canBlockStay(par1World, par2, par3, par4))
 		{
 			dropBlockAsItem(par1World, par2, par3, par4, par1World.getBlockMetadata(par2, par3, par4), 0);
-			par1World.setBlockToAir(par2, par3, par4);
+			par1World.setBlock(par2, par3, par4, 0, 0, 2);
 		}
 	}
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		iconArray = new Icon[cocoaIcons.length];
+		iconArray = new Icon[3];
 		for(int var2 = 0; var2 < iconArray.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon(cocoaIcons[var2]);
+			iconArray[var2] = par1IconRegister.registerIcon(func_111023_E() + "_stage_" + var2);
 		}
 	}
 	
@@ -149,7 +148,7 @@
 		if(!canBlockStay(par1World, par2, par3, par4))
 		{
 			dropBlockAsItem(par1World, par2, par3, par4, par1World.getBlockMetadata(par2, par3, par4), 0);
-			par1World.setBlockToAir(par2, par3, par4);
+			par1World.setBlock(par2, par3, par4, 0, 0, 2);
 		} else if(par1World.rand.nextInt(5) == 0)
 		{
 			int var6 = par1World.getBlockMetadata(par2, par3, par4);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockCloth.java b/RMCClient/minecraft/net/minecraft/src/BlockColored.java
similarity index 76%
rename from RMCClient/minecraft/net/minecraft/src/BlockCloth.java
rename to RMCClient/minecraft/net/minecraft/src/BlockColored.java
index 5aee717..35d8fa2 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockCloth.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockColored.java
@@ -2,13 +2,13 @@
 
 import java.util.List;
 
-public class BlockCloth extends Block
+public class BlockColored extends Block
 {
 	private Icon[] iconArray;
 	
-	public BlockCloth()
+	public BlockColored(int p_i2182_1_, Material p_i2182_2_)
 	{
-		super(35, Material.cloth);
+		super(p_i2182_1_, p_i2182_2_);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
@@ -35,7 +35,7 @@
 		iconArray = new Icon[16];
 		for(int var2 = 0; var2 < iconArray.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon("cloth_" + var2);
+			iconArray[var2] = par1IconRegister.registerIcon(func_111023_E() + "_" + ItemDye.field_94595_b[getDyeFromBlock(var2)]);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockCommandBlock.java b/RMCClient/minecraft/net/minecraft/src/BlockCommandBlock.java
index 4817feb..0c34b7b 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockCommandBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockCommandBlock.java
@@ -4,9 +4,9 @@
 
 public class BlockCommandBlock extends BlockContainer
 {
-	public BlockCommandBlock(int par1)
+	public BlockCommandBlock(int p_i2183_1_)
 	{
-		super(par1, Material.iron);
+		super(p_i2183_1_, Material.iron);
 	}
 	
 	@Override public TileEntity createNewTileEntity(World par1World)
@@ -35,7 +35,7 @@
 		return true;
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		TileEntityCommandBlock var7 = (TileEntityCommandBlock) par1World.getBlockTileEntity(par2, par3, par4);
 		if(par6ItemStack.hasDisplayName())
@@ -62,6 +62,11 @@
 		}
 	}
 	
+	@Override public int quantityDropped(Random par1Random)
+	{
+		return 0;
+	}
+	
 	@Override public int tickRate(World par1World)
 	{
 		return 1;
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockComparator.java b/RMCClient/minecraft/net/minecraft/src/BlockComparator.java
index cb1046d..d2c7af4 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockComparator.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockComparator.java
@@ -4,9 +4,9 @@
 
 public class BlockComparator extends BlockRedstoneLogic implements ITileEntityProvider
 {
-	public BlockComparator(int par1, boolean par2)
+	public BlockComparator(int p_i2184_1_, boolean p_i2184_2_)
 	{
-		super(par1, par2);
+		super(p_i2184_1_, p_i2184_2_);
 		isBlockContainer = true;
 	}
 	
@@ -186,11 +186,6 @@
 		super.onBlockEventReceived(par1World, par2, par3, par4, par5, par6);
 		TileEntity var7 = par1World.getBlockTileEntity(par2, par3, par4);
 		return var7 != null ? var7.receiveClientEvent(par5, par6) : false;
-	}
-	
-	@Override public void registerIcons(IconRegister par1IconRegister)
-	{
-		blockIcon = par1IconRegister.registerIcon(isRepeaterPowered ? "comparator_lit" : "comparator");
 	}
 	
 	@Override public void updateTick(World par1World, int par2, int par3, int par4, Random par5Random)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockContainer.java b/RMCClient/minecraft/net/minecraft/src/BlockContainer.java
index 0187b59..48b7445 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockContainer.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockContainer.java
@@ -2,9 +2,9 @@
 
 public abstract class BlockContainer extends Block implements ITileEntityProvider
 {
-	protected BlockContainer(int par1, Material par2Material)
+	protected BlockContainer(int p_i2164_1_, Material p_i2164_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2164_1_, p_i2164_2_);
 		isBlockContainer = true;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockCrops.java b/RMCClient/minecraft/net/minecraft/src/BlockCrops.java
index f3de9b5..13b87e1 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockCrops.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockCrops.java
@@ -6,9 +6,9 @@
 {
 	private Icon[] iconArray;
 	
-	protected BlockCrops(int par1)
+	protected BlockCrops(int p_i2185_1_)
 	{
-		super(par1);
+		super(p_i2185_1_);
 		setTickRandomly(true);
 		float var2 = 0.5F;
 		setBlockBounds(0.5F - var2, 0.0F, 0.5F - var2, 0.5F + var2, 0.25F, 0.5F + var2);
@@ -138,7 +138,7 @@
 		iconArray = new Icon[8];
 		for(int var2 = 0; var2 < iconArray.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon("crops_" + var2);
+			iconArray[var2] = par1IconRegister.registerIcon(func_111023_E() + "_stage_" + var2);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockDaylightDetector.java b/RMCClient/minecraft/net/minecraft/src/BlockDaylightDetector.java
index 1ece92c..8b3b2c7 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockDaylightDetector.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockDaylightDetector.java
@@ -6,9 +6,9 @@
 {
 	private Icon[] iconArray = new Icon[2];
 	
-	public BlockDaylightDetector(int par1)
+	public BlockDaylightDetector(int p_i2186_1_)
 	{
-		super(par1, Material.wood);
+		super(p_i2186_1_, Material.wood);
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.375F, 1.0F);
 		setCreativeTab(CreativeTabs.tabRedstone);
 	}
@@ -48,8 +48,8 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		iconArray[0] = par1IconRegister.registerIcon("daylightDetector_top");
-		iconArray[1] = par1IconRegister.registerIcon("daylightDetector_side");
+		iconArray[0] = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		iconArray[1] = par1IconRegister.registerIcon(func_111023_E() + "_side");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockDeadBush.java b/RMCClient/minecraft/net/minecraft/src/BlockDeadBush.java
index ad8cb89..d47b995 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockDeadBush.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockDeadBush.java
@@ -4,9 +4,9 @@
 
 public class BlockDeadBush extends BlockFlower
 {
-	protected BlockDeadBush(int par1)
+	protected BlockDeadBush(int p_i2187_1_)
 	{
-		super(par1, Material.vine);
+		super(p_i2187_1_, Material.vine);
 		float var2 = 0.4F;
 		setBlockBounds(0.5F - var2, 0.0F, 0.5F - var2, 0.5F + var2, 0.8F, 0.5F + var2);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockDetectorRail.java b/RMCClient/minecraft/net/minecraft/src/BlockDetectorRail.java
index 500b34b..dff614e 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockDetectorRail.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockDetectorRail.java
@@ -7,9 +7,9 @@
 {
 	private Icon[] iconArray;
 	
-	public BlockDetectorRail(int par1)
+	public BlockDetectorRail(int p_i2188_1_)
 	{
-		super(par1, true);
+		super(p_i2188_1_, true);
 		setTickRandomly(true);
 	}
 	
@@ -70,8 +70,8 @@
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		iconArray = new Icon[2];
-		iconArray[0] = par1IconRegister.registerIcon("detectorRail");
-		iconArray[1] = par1IconRegister.registerIcon("detectorRail_on");
+		iconArray[0] = par1IconRegister.registerIcon(func_111023_E());
+		iconArray[1] = par1IconRegister.registerIcon(func_111023_E() + "_powered");
 	}
 	
 	private void setStateIfMinecartInteractsWithRail(World par1World, int par2, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockDirectional.java b/RMCClient/minecraft/net/minecraft/src/BlockDirectional.java
index 0abf6af..aa571a9 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockDirectional.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockDirectional.java
@@ -2,9 +2,9 @@
 
 public abstract class BlockDirectional extends Block
 {
-	protected BlockDirectional(int par1, Material par2Material)
+	protected BlockDirectional(int p_i2190_1_, Material p_i2190_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2190_1_, p_i2190_2_);
 	}
 	
 	public static int getDirection(int par0)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockDirt.java b/RMCClient/minecraft/net/minecraft/src/BlockDirt.java
index 4e29a73..8982774 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockDirt.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockDirt.java
@@ -2,9 +2,9 @@
 
 public class BlockDirt extends Block
 {
-	protected BlockDirt(int par1)
+	protected BlockDirt(int p_i2191_1_)
 	{
-		super(par1, Material.ground);
+		super(p_i2191_1_, Material.ground);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockDispenser.java b/RMCClient/minecraft/net/minecraft/src/BlockDispenser.java
index 07afeac..c221856 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockDispenser.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockDispenser.java
@@ -10,9 +10,9 @@
 	protected Icon furnaceFrontIcon;
 	protected Icon field_96473_e;
 	
-	protected BlockDispenser(int par1)
+	protected BlockDispenser(int p_i2192_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2192_1_, Material.rock);
 		setCreativeTab(CreativeTabs.tabRedstone);
 	}
 	
@@ -124,7 +124,7 @@
 		setDispenserDefaultDirection(par1World, par2, par3, par4);
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = BlockPistonBase.determineOrientation(par1World, par2, par3, par4, par5EntityLiving);
 		par1World.setBlockMetadataWithNotify(par2, par3, par4, var7, 2);
@@ -153,8 +153,8 @@
 	{
 		blockIcon = par1IconRegister.registerIcon("furnace_side");
 		furnaceTopIcon = par1IconRegister.registerIcon("furnace_top");
-		furnaceFrontIcon = par1IconRegister.registerIcon("dispenser_front");
-		field_96473_e = par1IconRegister.registerIcon("dispenser_front_vertical");
+		furnaceFrontIcon = par1IconRegister.registerIcon(func_111023_E() + "_front_horizontal");
+		field_96473_e = par1IconRegister.registerIcon(func_111023_E() + "_front_vertical");
 	}
 	
 	private void setDispenserDefaultDirection(World par1World, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockDoor.java b/RMCClient/minecraft/net/minecraft/src/BlockDoor.java
index 24f5dda..e672ec1 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockDoor.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockDoor.java
@@ -4,20 +4,12 @@
 
 public class BlockDoor extends Block
 {
-	private static final String[] doorIconNames = new String[] { "doorWood_lower", "doorWood_upper", "doorIron_lower", "doorIron_upper" };
-	private final int doorTypeForIcon;
-	private Icon[] iconArray;
+	private Icon[] field_111044_a;
+	private Icon[] field_111043_b;
 	
-	protected BlockDoor(int par1, Material par2Material)
+	protected BlockDoor(int p_i2193_1_, Material p_i2193_2_)
 	{
-		super(par1, par2Material);
-		if(par2Material == Material.iron)
-		{
-			doorTypeForIcon = 2;
-		} else
-		{
-			doorTypeForIcon = 0;
-		}
+		super(p_i2193_1_, p_i2193_2_);
 		float var3 = 0.5F;
 		float var4 = 1.0F;
 		setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var4, 0.5F + var3);
@@ -84,8 +76,8 @@
 					var9 = !var9;
 				}
 			}
-			return iconArray[doorTypeForIcon + (var9 ? doorIconNames.length : 0) + (var10 ? 1 : 0)];
-		} else return iconArray[doorTypeForIcon];
+			return var10 ? field_111044_a[var9 ? 1 : 0] : field_111043_b[var9 ? 1 : 0];
+		} else return field_111043_b[0];
 	}
 	
 	@Override public AxisAlignedBB getCollisionBoundingBoxFromPool(World par1World, int par2, int par3, int par4)
@@ -120,7 +112,7 @@
 	
 	@Override public Icon getIcon(int par1, int par2)
 	{
-		return iconArray[doorTypeForIcon];
+		return field_111043_b[0];
 	}
 	
 	@Override public int getMobilityFlag()
@@ -263,12 +255,12 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		iconArray = new Icon[doorIconNames.length * 2];
-		for(int var2 = 0; var2 < doorIconNames.length; ++var2)
-		{
-			iconArray[var2] = par1IconRegister.registerIcon(doorIconNames[var2]);
-			iconArray[var2 + doorIconNames.length] = new IconFlipped(iconArray[var2], true, false);
-		}
+		field_111044_a = new Icon[2];
+		field_111043_b = new Icon[2];
+		field_111044_a[0] = par1IconRegister.registerIcon(func_111023_E() + "_upper");
+		field_111043_b[0] = par1IconRegister.registerIcon(func_111023_E() + "_lower");
+		field_111044_a[1] = new IconFlipped(field_111044_a[0], true, false);
+		field_111043_b[1] = new IconFlipped(field_111043_b[0], true, false);
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockDragonEgg.java b/RMCClient/minecraft/net/minecraft/src/BlockDragonEgg.java
index af3806b..063f99b 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockDragonEgg.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockDragonEgg.java
@@ -4,9 +4,9 @@
 
 public class BlockDragonEgg extends Block
 {
-	public BlockDragonEgg(int par1)
+	public BlockDragonEgg(int p_i2195_1_)
 	{
-		super(par1, Material.dragonEgg);
+		super(p_i2195_1_, Material.dragonEgg);
 		setBlockBounds(0.0625F, 0.0F, 0.0625F, 0.9375F, 1.0F, 0.9375F);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockDropper.java b/RMCClient/minecraft/net/minecraft/src/BlockDropper.java
index ad5624c..fff39e9 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockDropper.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockDropper.java
@@ -4,9 +4,9 @@
 {
 	private final IBehaviorDispenseItem dropperDefaultBehaviour = new BehaviorDefaultDispenseItem();
 	
-	protected BlockDropper(int par1)
+	protected BlockDropper(int p_i2194_1_)
 	{
-		super(par1);
+		super(p_i2194_1_);
 	}
 	
 	@Override public TileEntity createNewTileEntity(World par1World)
@@ -66,7 +66,7 @@
 	{
 		blockIcon = par1IconRegister.registerIcon("furnace_side");
 		furnaceTopIcon = par1IconRegister.registerIcon("furnace_top");
-		furnaceFrontIcon = par1IconRegister.registerIcon("dropper_front");
-		field_96473_e = par1IconRegister.registerIcon("dropper_front_vertical");
+		furnaceFrontIcon = par1IconRegister.registerIcon(func_111023_E() + "_front_horizontal");
+		field_96473_e = par1IconRegister.registerIcon(func_111023_E() + "_front_vertical");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockEnchantmentTable.java b/RMCClient/minecraft/net/minecraft/src/BlockEnchantmentTable.java
index 25a2ffd..8f15be9 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockEnchantmentTable.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockEnchantmentTable.java
@@ -7,9 +7,9 @@
 	private Icon field_94461_a;
 	private Icon field_94460_b;
 	
-	protected BlockEnchantmentTable(int par1)
+	protected BlockEnchantmentTable(int p_i2196_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2196_1_, Material.rock);
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.75F, 1.0F);
 		setLightOpacity(0);
 		setCreativeTab(CreativeTabs.tabDecorations);
@@ -41,7 +41,7 @@
 		}
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		super.onBlockPlacedBy(par1World, par2, par3, par4, par5EntityLiving, par6ItemStack);
 		if(par6ItemStack.hasDisplayName())
@@ -81,9 +81,9 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("enchantment_side");
-		field_94461_a = par1IconRegister.registerIcon("enchantment_top");
-		field_94460_b = par1IconRegister.registerIcon("enchantment_bottom");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_" + "side");
+		field_94461_a = par1IconRegister.registerIcon(func_111023_E() + "_" + "top");
+		field_94460_b = par1IconRegister.registerIcon(func_111023_E() + "_" + "bottom");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockEndPortal.java b/RMCClient/minecraft/net/minecraft/src/BlockEndPortal.java
index b386227..202aa2e 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockEndPortal.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockEndPortal.java
@@ -5,11 +5,11 @@
 
 public class BlockEndPortal extends BlockContainer
 {
-	public static boolean bossDefeated = false;
+	public static boolean bossDefeated;
 	
-	protected BlockEndPortal(int par1, Material par2Material)
+	protected BlockEndPortal(int p_i2266_1_, Material p_i2266_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2266_1_, p_i2266_2_);
 		setLightValue(1.0F);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockEndPortalFrame.java b/RMCClient/minecraft/net/minecraft/src/BlockEndPortalFrame.java
index 0982e7d..afd7be3 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockEndPortalFrame.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockEndPortalFrame.java
@@ -8,9 +8,9 @@
 	private Icon field_94400_a;
 	private Icon field_94399_b;
 	
-	public BlockEndPortalFrame(int par1)
+	public BlockEndPortalFrame(int p_i2267_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2267_1_, Material.rock);
 	}
 	
 	@Override public void addCollisionBoxesToList(World par1World, int par2, int par3, int par4, AxisAlignedBB par5AxisAlignedBB, List par6List, Entity par7Entity)
@@ -31,6 +31,12 @@
 		return field_94399_b;
 	}
 	
+	@Override public int getComparatorInputOverride(World par1World, int par2, int par3, int par4, int par5)
+	{
+		int var6 = par1World.getBlockMetadata(par2, par3, par4);
+		return isEnderEyeInserted(var6) ? 15 : 0;
+	}
+	
 	@Override public Icon getIcon(int par1, int par2)
 	{
 		return par1 == 1 ? field_94400_a : par1 == 0 ? Block.whiteStone.getBlockTextureFromSide(par1) : blockIcon;
@@ -39,6 +45,11 @@
 	@Override public int getRenderType()
 	{
 		return 26;
+	}
+	
+	@Override public boolean hasComparatorInputOverride()
+	{
+		return true;
 	}
 	
 	@Override public int idDropped(int par1, Random par2Random, int par3)
@@ -51,7 +62,7 @@
 		return false;
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = ((MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 0.5D) & 3) + 2) % 4;
 		par1World.setBlockMetadataWithNotify(par2, par3, par4, var7, 2);
@@ -59,9 +70,9 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("endframe_side");
-		field_94400_a = par1IconRegister.registerIcon("endframe_top");
-		field_94399_b = par1IconRegister.registerIcon("endframe_eye");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+		field_94400_a = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		field_94399_b = par1IconRegister.registerIcon(func_111023_E() + "_eye");
 	}
 	
 	@Override public void setBlockBoundsForItemRender()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockEnderChest.java b/RMCClient/minecraft/net/minecraft/src/BlockEnderChest.java
index a2255db..8177ba1 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockEnderChest.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockEnderChest.java
@@ -4,9 +4,9 @@
 
 public class BlockEnderChest extends BlockContainer
 {
-	protected BlockEnderChest(int par1)
+	protected BlockEnderChest(int p_i2197_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2197_1_, Material.rock);
 		setCreativeTab(CreativeTabs.tabDecorations);
 		setBlockBounds(0.0625F, 0.0F, 0.0625F, 0.9375F, 0.875F, 0.9375F);
 	}
@@ -53,7 +53,7 @@
 		} else return true;
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		byte var7 = 0;
 		int var8 = MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 0.5D) & 3;
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockEventData.java b/RMCClient/minecraft/net/minecraft/src/BlockEventData.java
index 8432fae..55a15f3 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockEventData.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockEventData.java
@@ -9,14 +9,14 @@
 	private int eventID;
 	private int eventParameter;
 	
-	public BlockEventData(int par1, int par2, int par3, int par4, int par5, int par6)
+	public BlockEventData(int p_i1966_1_, int p_i1966_2_, int p_i1966_3_, int p_i1966_4_, int p_i1966_5_, int p_i1966_6_)
 	{
-		coordX = par1;
-		coordY = par2;
-		coordZ = par3;
-		eventID = par5;
-		eventParameter = par6;
-		blockID = par4;
+		coordX = p_i1966_1_;
+		coordY = p_i1966_2_;
+		coordZ = p_i1966_3_;
+		eventID = p_i1966_5_;
+		eventParameter = p_i1966_6_;
+		blockID = p_i1966_4_;
 	}
 	
 	@Override public boolean equals(Object par1Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockFarmland.java b/RMCClient/minecraft/net/minecraft/src/BlockFarmland.java
index 851b2a6..80f8339 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockFarmland.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockFarmland.java
@@ -7,9 +7,9 @@
 	private Icon field_94441_a;
 	private Icon field_94440_b;
 	
-	protected BlockFarmland(int par1)
+	protected BlockFarmland(int p_i2198_1_)
 	{
-		super(par1, Material.ground);
+		super(p_i2198_1_, Material.ground);
 		setTickRandomly(true);
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.9375F, 1.0F);
 		setLightOpacity(255);
@@ -90,8 +90,8 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		field_94441_a = par1IconRegister.registerIcon("farmland_wet");
-		field_94440_b = par1IconRegister.registerIcon("farmland_dry");
+		field_94441_a = par1IconRegister.registerIcon(func_111023_E() + "_wet");
+		field_94440_b = par1IconRegister.registerIcon(func_111023_E() + "_dry");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockFence.java b/RMCClient/minecraft/net/minecraft/src/BlockFence.java
index bcebe69..56e7157 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockFence.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockFence.java
@@ -6,10 +6,10 @@
 {
 	private final String field_94464_a;
 	
-	public BlockFence(int par1, String par2Str, Material par3Material)
+	public BlockFence(int p_i2200_1_, String p_i2200_2_, Material p_i2200_3_)
 	{
-		super(par1, par3Material);
-		field_94464_a = par2Str;
+		super(p_i2200_1_, p_i2200_3_);
+		field_94464_a = p_i2200_2_;
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
 	
@@ -87,6 +87,11 @@
 		return false;
 	}
 	
+	@Override public boolean onBlockActivated(World par1World, int par2, int par3, int par4, EntityPlayer par5EntityPlayer, int par6, float par7, float par8, float par9)
+	{
+		return par1World.isRemote ? true : ItemLeash.func_135066_a(par5EntityPlayer, par1World, par2, par3, par4);
+	}
+	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		blockIcon = par1IconRegister.registerIcon(field_94464_a);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockFenceGate.java b/RMCClient/minecraft/net/minecraft/src/BlockFenceGate.java
index 8751219..d80a8c5 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockFenceGate.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockFenceGate.java
@@ -2,9 +2,9 @@
 
 public class BlockFenceGate extends BlockDirectional
 {
-	public BlockFenceGate(int par1)
+	public BlockFenceGate(int p_i2199_1_)
 	{
-		super(par1, Material.wood);
+		super(p_i2199_1_, Material.wood);
 		setCreativeTab(CreativeTabs.tabRedstone);
 	}
 	
@@ -59,7 +59,7 @@
 		return true;
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = (MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 0.5D) & 3) % 4;
 		par1World.setBlockMetadataWithNotify(par2, par3, par4, var7, 2);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockFire.java b/RMCClient/minecraft/net/minecraft/src/BlockFire.java
index 55110f0..afd09d5 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockFire.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockFire.java
@@ -8,9 +8,9 @@
 	private int[] abilityToCatchFire = new int[256];
 	private Icon[] iconArray;
 	
-	protected BlockFire(int par1)
+	protected BlockFire(int p_i2201_1_)
 	{
-		super(par1, Material.fire);
+		super(p_i2201_1_, Material.fire);
 		setTickRandomly(true);
 	}
 	
@@ -93,6 +93,8 @@
 		setBurnRate(Block.tallGrass.blockID, 60, 100);
 		setBurnRate(Block.cloth.blockID, 30, 60);
 		setBurnRate(Block.vine.blockID, 15, 100);
+		setBurnRate(Block.field_111034_cE.blockID, 5, 5);
+		setBurnRate(Block.field_111038_cB.blockID, 60, 20);
 	}
 	
 	@Override public boolean isCollidable()
@@ -208,7 +210,7 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		iconArray = new Icon[] { par1IconRegister.registerIcon("fire_0"), par1IconRegister.registerIcon("fire_1") };
+		iconArray = new Icon[] { par1IconRegister.registerIcon(func_111023_E() + "_layer_0"), par1IconRegister.registerIcon(func_111023_E() + "_layer_1") };
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockFlower.java b/RMCClient/minecraft/net/minecraft/src/BlockFlower.java
index 55283f4..88a7ac4 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockFlower.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockFlower.java
@@ -4,14 +4,14 @@
 
 public class BlockFlower extends Block
 {
-	protected BlockFlower(int par1)
+	protected BlockFlower(int p_i2173_1_)
 	{
-		this(par1, Material.plants);
+		this(p_i2173_1_, Material.plants);
 	}
 	
-	protected BlockFlower(int par1, Material par2Material)
+	protected BlockFlower(int p_i2172_1_, Material p_i2172_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2172_1_, p_i2172_2_);
 		setTickRandomly(true);
 		float var3 = 0.2F;
 		setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var3 * 3.0F, 0.5F + var3);
@@ -38,7 +38,7 @@
 		if(!canBlockStay(par1World, par2, par3, par4))
 		{
 			dropBlockAsItem(par1World, par2, par3, par4, par1World.getBlockMetadata(par2, par3, par4), 0);
-			par1World.setBlockToAir(par2, par3, par4);
+			par1World.setBlock(par2, par3, par4, 0, 0, 2);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockFlowerPot.java b/RMCClient/minecraft/net/minecraft/src/BlockFlowerPot.java
index 5ea44ec..3c973c4 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockFlowerPot.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockFlowerPot.java
@@ -4,9 +4,9 @@
 
 public class BlockFlowerPot extends Block
 {
-	public BlockFlowerPot(int par1)
+	public BlockFlowerPot(int p_i2202_1_)
 	{
-		super(par1, Material.circuits);
+		super(p_i2202_1_, Material.circuits);
 		setBlockBoundsForItemRender();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockFlowing.java b/RMCClient/minecraft/net/minecraft/src/BlockFlowing.java
index 8f72c52..497b253 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockFlowing.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockFlowing.java
@@ -4,13 +4,13 @@
 
 public class BlockFlowing extends BlockFluid
 {
-	int numAdjacentSources = 0;
+	int numAdjacentSources;
 	boolean[] isOptimalFlowDirection = new boolean[4];
 	int[] flowCost = new int[4];
 	
-	protected BlockFlowing(int par1, Material par2Material)
+	protected BlockFlowing(int p_i2221_1_, Material p_i2221_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2221_1_, p_i2221_2_);
 	}
 	
 	private boolean blockBlocksFlow(World par1World, int par2, int par3, int par4)
@@ -90,7 +90,7 @@
 	
 	@Override public boolean func_82506_l()
 	{
-		return false;
+		return true;
 	}
 	
 	@Override public boolean getBlocksMovement(IBlockAccess par1IBlockAccess, int par2, int par3, int par4)
@@ -197,47 +197,47 @@
 			var7 = 2;
 		}
 		boolean var8 = true;
-		int var10;
+		int var9 = tickRate(par1World);
+		int var11;
 		if(var6 > 0)
 		{
-			byte var9 = -100;
+			byte var10 = -100;
 			numAdjacentSources = 0;
-			int var12 = getSmallestFlowDecay(par1World, par2 - 1, par3, par4, var9);
-			var12 = getSmallestFlowDecay(par1World, par2 + 1, par3, par4, var12);
-			var12 = getSmallestFlowDecay(par1World, par2, par3, par4 - 1, var12);
-			var12 = getSmallestFlowDecay(par1World, par2, par3, par4 + 1, var12);
-			var10 = var12 + var7;
-			if(var10 >= 8 || var12 < 0)
+			int var13 = getSmallestFlowDecay(par1World, par2 - 1, par3, par4, var10);
+			var13 = getSmallestFlowDecay(par1World, par2 + 1, par3, par4, var13);
+			var13 = getSmallestFlowDecay(par1World, par2, par3, par4 - 1, var13);
+			var13 = getSmallestFlowDecay(par1World, par2, par3, par4 + 1, var13);
+			var11 = var13 + var7;
+			if(var11 >= 8 || var13 < 0)
 			{
-				var10 = -1;
+				var11 = -1;
 			}
 			if(getFlowDecay(par1World, par2, par3 + 1, par4) >= 0)
 			{
-				int var11 = getFlowDecay(par1World, par2, par3 + 1, par4);
-				if(var11 >= 8)
+				int var12 = getFlowDecay(par1World, par2, par3 + 1, par4);
+				if(var12 >= 8)
 				{
-					var10 = var11;
+					var11 = var12;
 				} else
 				{
-					var10 = var11 + 8;
+					var11 = var12 + 8;
 				}
 			}
 			if(numAdjacentSources >= 2 && blockMaterial == Material.water)
 			{
 				if(par1World.getBlockMaterial(par2, par3 - 1, par4).isSolid())
 				{
-					var10 = 0;
+					var11 = 0;
 				} else if(par1World.getBlockMaterial(par2, par3 - 1, par4) == blockMaterial && par1World.getBlockMetadata(par2, par3 - 1, par4) == 0)
 				{
-					var10 = 0;
+					var11 = 0;
 				}
 			}
-			if(blockMaterial == Material.lava && var6 < 8 && var10 < 8 && var10 > var6 && par5Random.nextInt(4) != 0)
+			if(blockMaterial == Material.lava && var6 < 8 && var11 < 8 && var11 > var6 && par5Random.nextInt(4) != 0)
 			{
-				var10 = var6;
-				var8 = false;
+				var9 *= 4;
 			}
-			if(var10 == var6)
+			if(var11 == var6)
 			{
 				if(var8)
 				{
@@ -245,14 +245,14 @@
 				}
 			} else
 			{
-				var6 = var10;
-				if(var10 < 0)
+				var6 = var11;
+				if(var11 < 0)
 				{
 					par1World.setBlockToAir(par2, par3, par4);
 				} else
 				{
-					par1World.setBlockMetadataWithNotify(par2, par3, par4, var10, 2);
-					par1World.scheduleBlockUpdate(par2, par3, par4, blockID, tickRate(par1World));
+					par1World.setBlockMetadataWithNotify(par2, par3, par4, var11, 2);
+					par1World.scheduleBlockUpdate(par2, par3, par4, blockID, var9);
 					par1World.notifyBlocksOfNeighborChange(par2, par3, par4, blockID);
 				}
 			}
@@ -277,28 +277,28 @@
 			}
 		} else if(var6 >= 0 && (var6 == 0 || blockBlocksFlow(par1World, par2, par3 - 1, par4)))
 		{
-			boolean[] var13 = getOptimalFlowDirections(par1World, par2, par3, par4);
-			var10 = var6 + var7;
+			boolean[] var14 = getOptimalFlowDirections(par1World, par2, par3, par4);
+			var11 = var6 + var7;
 			if(var6 >= 8)
 			{
-				var10 = 1;
+				var11 = 1;
 			}
-			if(var10 >= 8) return;
-			if(var13[0])
+			if(var11 >= 8) return;
+			if(var14[0])
 			{
-				flowIntoBlock(par1World, par2 - 1, par3, par4, var10);
+				flowIntoBlock(par1World, par2 - 1, par3, par4, var11);
 			}
-			if(var13[1])
+			if(var14[1])
 			{
-				flowIntoBlock(par1World, par2 + 1, par3, par4, var10);
+				flowIntoBlock(par1World, par2 + 1, par3, par4, var11);
 			}
-			if(var13[2])
+			if(var14[2])
 			{
-				flowIntoBlock(par1World, par2, par3, par4 - 1, var10);
+				flowIntoBlock(par1World, par2, par3, par4 - 1, var11);
 			}
-			if(var13[3])
+			if(var14[3])
 			{
-				flowIntoBlock(par1World, par2, par3, par4 + 1, var10);
+				flowIntoBlock(par1World, par2, par3, par4 + 1, var11);
 			}
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockFluid.java b/RMCClient/minecraft/net/minecraft/src/BlockFluid.java
index 9a86842..8881a21 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockFluid.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockFluid.java
@@ -6,9 +6,9 @@
 {
 	private Icon[] theIcon;
 	
-	protected BlockFluid(int par1, Material par2Material)
+	protected BlockFluid(int p_i2220_1_, Material p_i2220_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2220_1_, p_i2220_2_);
 		float var3 = 0.0F;
 		float var4 = 0.0F;
 		setBlockBounds(0.0F + var4, 0.0F + var3, 0.0F + var4, 1.0F + var4, 1.0F + var3, 1.0F + var4);
@@ -393,10 +393,10 @@
 	{
 		if(blockMaterial == Material.lava)
 		{
-			theIcon = new Icon[] { par1IconRegister.registerIcon("lava"), par1IconRegister.registerIcon("lava_flow") };
+			theIcon = new Icon[] { par1IconRegister.registerIcon("lava_still"), par1IconRegister.registerIcon("lava_flow") };
 		} else
 		{
-			theIcon = new Icon[] { par1IconRegister.registerIcon("water"), par1IconRegister.registerIcon("water_flow") };
+			theIcon = new Icon[] { par1IconRegister.registerIcon("water_still"), par1IconRegister.registerIcon("water_flow") };
 		}
 	}
 	
@@ -435,7 +435,7 @@
 	
 	public static Icon func_94424_b(String par0Str)
 	{
-		return par0Str == "water" ? Block.waterMoving.theIcon[0] : par0Str == "water_flow" ? Block.waterMoving.theIcon[1] : par0Str == "lava" ? Block.lavaMoving.theIcon[0] : par0Str == "lava_flow" ? Block.lavaMoving.theIcon[1] : null;
+		return par0Str == "water_still" ? Block.waterMoving.theIcon[0] : par0Str == "water_flow" ? Block.waterMoving.theIcon[1] : par0Str == "lava_still" ? Block.lavaMoving.theIcon[0] : par0Str == "lava_flow" ? Block.lavaMoving.theIcon[1] : null;
 	}
 	
 	public static double getFlowDirection(IBlockAccess par0IBlockAccess, int par1, int par2, int par3, Material par4Material)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockFurnace.java b/RMCClient/minecraft/net/minecraft/src/BlockFurnace.java
index 88d5e2b..d3ce513 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockFurnace.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockFurnace.java
@@ -6,14 +6,14 @@
 {
 	private final Random furnaceRand = new Random();
 	private final boolean isActive;
-	private static boolean keepFurnaceInventory = false;
+	private static boolean keepFurnaceInventory;
 	private Icon furnaceIconTop;
 	private Icon furnaceIconFront;
 	
-	protected BlockFurnace(int par1, boolean par2)
+	protected BlockFurnace(int p_i2203_1_, boolean p_i2203_2_)
 	{
-		super(par1, Material.rock);
-		isActive = par2;
+		super(p_i2203_1_, Material.rock);
+		isActive = p_i2203_2_;
 	}
 	
 	@Override public void breakBlock(World par1World, int par2, int par3, int par4, int par5, int par6)
@@ -108,7 +108,7 @@
 		setDefaultDirection(par1World, par2, par3, par4);
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 0.5D) & 3;
 		if(var7 == 0)
@@ -166,7 +166,7 @@
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		blockIcon = par1IconRegister.registerIcon("furnace_side");
-		furnaceIconFront = par1IconRegister.registerIcon(isActive ? "furnace_front_lit" : "furnace_front");
+		furnaceIconFront = par1IconRegister.registerIcon(isActive ? "furnace_front_on" : "furnace_front_off");
 		furnaceIconTop = par1IconRegister.registerIcon("furnace_top");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockGlass.java b/RMCClient/minecraft/net/minecraft/src/BlockGlass.java
index 6310bbe..b710285 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockGlass.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockGlass.java
@@ -4,9 +4,9 @@
 
 public class BlockGlass extends BlockBreakable
 {
-	public BlockGlass(int par1, Material par2Material, boolean par3)
+	public BlockGlass(int p_i2204_1_, Material p_i2204_2_, boolean p_i2204_3_)
 	{
-		super(par1, "glass", par2Material, par3);
+		super(p_i2204_1_, "glass", p_i2204_2_, p_i2204_3_);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockGlowStone.java b/RMCClient/minecraft/net/minecraft/src/BlockGlowStone.java
index 71fb421..7e0b6b6 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockGlowStone.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockGlowStone.java
@@ -4,9 +4,9 @@
 
 public class BlockGlowStone extends Block
 {
-	public BlockGlowStone(int par1, Material par2Material)
+	public BlockGlowStone(int p_i2205_1_, Material p_i2205_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2205_1_, p_i2205_2_);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockGrass.java b/RMCClient/minecraft/net/minecraft/src/BlockGrass.java
index a10237b..ba4aa73 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockGrass.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockGrass.java
@@ -8,9 +8,9 @@
 	private Icon iconSnowSide;
 	private Icon iconGrassSideOverlay;
 	
-	protected BlockGrass(int par1)
+	protected BlockGrass(int p_i2206_1_)
 	{
-		super(par1, Material.grass);
+		super(p_i2206_1_, Material.grass);
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
@@ -68,10 +68,10 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("grass_side");
-		iconGrassTop = par1IconRegister.registerIcon("grass_top");
-		iconSnowSide = par1IconRegister.registerIcon("snow_side");
-		iconGrassSideOverlay = par1IconRegister.registerIcon("grass_side_overlay");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+		iconGrassTop = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		iconSnowSide = par1IconRegister.registerIcon(func_111023_E() + "_side_snowed");
+		iconGrassSideOverlay = par1IconRegister.registerIcon(func_111023_E() + "_side_overlay");
 	}
 	
 	@Override public void updateTick(World par1World, int par2, int par3, int par4, Random par5Random)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockGravel.java b/RMCClient/minecraft/net/minecraft/src/BlockGravel.java
index cff3ac1..733f827 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockGravel.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockGravel.java
@@ -4,9 +4,9 @@
 
 public class BlockGravel extends BlockSand
 {
-	public BlockGravel(int par1)
+	public BlockGravel(int p_i2207_1_)
 	{
-		super(par1);
+		super(p_i2207_1_);
 	}
 	
 	@Override public int idDropped(int par1, Random par2Random, int par3)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockHalfSlab.java b/RMCClient/minecraft/net/minecraft/src/BlockHalfSlab.java
index a44c58c..e2e203e 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockHalfSlab.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockHalfSlab.java
@@ -7,13 +7,13 @@
 {
 	protected final boolean isDoubleSlab;
 	
-	public BlockHalfSlab(int par1, boolean par2, Material par3Material)
+	public BlockHalfSlab(int p_i2208_1_, boolean p_i2208_2_, Material p_i2208_3_)
 	{
-		super(par1, par3Material);
-		isDoubleSlab = par2;
-		if(par2)
+		super(p_i2208_1_, p_i2208_3_);
+		isDoubleSlab = p_i2208_2_;
+		if(p_i2208_2_)
 		{
-			opaqueCubeLookup[par1] = true;
+			opaqueCubeLookup[p_i2208_1_] = true;
 		} else
 		{
 			setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.5F, 1.0F);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockHay.java b/RMCClient/minecraft/net/minecraft/src/BlockHay.java
new file mode 100644
index 0000000..448aff9
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/BlockHay.java
@@ -0,0 +1,26 @@
+package net.minecraft.src;
+
+public class BlockHay extends BlockRotatedPillar
+{
+	public BlockHay(int p_i2210_1_)
+	{
+		super(p_i2210_1_, Material.grass);
+		setCreativeTab(CreativeTabs.tabBlock);
+	}
+	
+	@Override protected Icon func_111048_c(int p_111048_1_)
+	{
+		return blockIcon;
+	}
+	
+	@Override public int getRenderType()
+	{
+		return 31;
+	}
+	
+	@Override public void registerIcons(IconRegister par1IconRegister)
+	{
+		field_111051_a = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockHopper.java b/RMCClient/minecraft/net/minecraft/src/BlockHopper.java
index 176d3d4..af005a5 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockHopper.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockHopper.java
@@ -10,9 +10,9 @@
 	private Icon hopperTopIcon;
 	private Icon hopperInsideIcon;
 	
-	public BlockHopper(int par1)
+	public BlockHopper(int p_i2213_1_)
 	{
-		super(par1, Material.iron);
+		super(p_i2213_1_, Material.iron);
 		setCreativeTab(CreativeTabs.tabRedstone);
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F);
 	}
@@ -137,7 +137,7 @@
 		return var10;
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		super.onBlockPlacedBy(par1World, par2, par3, par4, par5EntityLiving, par6ItemStack);
 		if(par6ItemStack.hasDisplayName())
@@ -154,7 +154,7 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		hopperIcon = par1IconRegister.registerIcon("hopper");
+		hopperIcon = par1IconRegister.registerIcon("hopper_outside");
 		hopperTopIcon = par1IconRegister.registerIcon("hopper_top");
 		hopperInsideIcon = par1IconRegister.registerIcon("hopper_inside");
 	}
@@ -193,7 +193,7 @@
 	
 	public static Icon getHopperIcon(String par0Str)
 	{
-		return par0Str == "hopper" ? Block.hopperBlock.hopperIcon : par0Str == "hopper_inside" ? Block.hopperBlock.hopperInsideIcon : null;
+		return par0Str.equals("hopper_outside") ? Block.hopperBlock.hopperIcon : par0Str.equals("hopper_inside") ? Block.hopperBlock.hopperInsideIcon : null;
 	}
 	
 	public static TileEntityHopper getHopperTile(IBlockAccess par0IBlockAccess, int par1, int par2, int par3)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockIce.java b/RMCClient/minecraft/net/minecraft/src/BlockIce.java
index ca433f8..586c396 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockIce.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockIce.java
@@ -4,9 +4,9 @@
 
 public class BlockIce extends BlockBreakable
 {
-	public BlockIce(int par1)
+	public BlockIce(int p_i2215_1_)
 	{
-		super(par1, "ice", Material.ice, false);
+		super(p_i2215_1_, "ice", Material.ice, false);
 		slipperiness = 0.98F;
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabBlock);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockJukeBox.java b/RMCClient/minecraft/net/minecraft/src/BlockJukeBox.java
index d5baa18..58bc08c 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockJukeBox.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockJukeBox.java
@@ -4,9 +4,9 @@
 {
 	private Icon theIcon;
 	
-	protected BlockJukeBox(int par1)
+	protected BlockJukeBox(int p_i2216_1_)
 	{
-		super(par1, Material.wood);
+		super(p_i2216_1_, Material.wood);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
 	
@@ -97,7 +97,7 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("musicBlock");
-		theIcon = par1IconRegister.registerIcon("jukebox_top");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+		theIcon = par1IconRegister.registerIcon(func_111023_E() + "_top");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockLadder.java b/RMCClient/minecraft/net/minecraft/src/BlockLadder.java
index c8caccb..3323f11 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockLadder.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockLadder.java
@@ -4,9 +4,9 @@
 
 public class BlockLadder extends Block
 {
-	protected BlockLadder(int par1)
+	protected BlockLadder(int p_i2217_1_)
 	{
-		super(par1, Material.circuits);
+		super(p_i2217_1_, Material.circuits);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockLeaves.java b/RMCClient/minecraft/net/minecraft/src/BlockLeaves.java
index 9cefda5..6fa9d0e 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockLeaves.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockLeaves.java
@@ -6,14 +6,14 @@
 public class BlockLeaves extends BlockLeavesBase
 {
 	public static final String[] LEAF_TYPES = new String[] { "oak", "spruce", "birch", "jungle" };
-	public static final String[][] field_94396_b = new String[][] { { "leaves", "leaves_spruce", "leaves", "leaves_jungle" }, { "leaves_opaque", "leaves_spruce_opaque", "leaves_opaque", "leaves_jungle_opaque" } };
+	public static final String[][] field_94396_b = new String[][] { { "leaves_oak", "leaves_spruce", "leaves_birch", "leaves_jungle" }, { "leaves_oak_opaque", "leaves_spruce_opaque", "leaves_birch_opaque", "leaves_jungle_opaque" } };
 	private int field_94394_cP;
 	private Icon[][] iconArray = new Icon[2][];
 	int[] adjacentTreeBlocks;
 	
-	protected BlockLeaves(int par1)
+	protected BlockLeaves(int p_i2218_1_)
 	{
-		super(par1, Material.leaves, false);
+		super(p_i2218_1_, Material.leaves, false);
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
@@ -123,7 +123,7 @@
 	
 	@Override public Icon getIcon(int par1, int par2)
 	{
-		return (par2 & 3) == 1 ? iconArray[field_94394_cP][1] : (par2 & 3) == 3 ? iconArray[field_94394_cP][3] : iconArray[field_94394_cP][0];
+		return (par2 & 3) == 1 ? iconArray[field_94394_cP][1] : (par2 & 3) == 3 ? iconArray[field_94394_cP][3] : (par2 & 3) == 2 ? iconArray[field_94394_cP][2] : iconArray[field_94394_cP][0];
 	}
 	
 	@Override public int getRenderColor(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockLeavesBase.java b/RMCClient/minecraft/net/minecraft/src/BlockLeavesBase.java
index f77fd9a..8ae672a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockLeavesBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockLeavesBase.java
@@ -4,10 +4,10 @@
 {
 	protected boolean graphicsLevel;
 	
-	protected BlockLeavesBase(int par1, Material par2Material, boolean par3)
+	protected BlockLeavesBase(int p_i2277_1_, Material p_i2277_2_, boolean p_i2277_3_)
 	{
-		super(par1, par2Material);
-		graphicsLevel = par3;
+		super(p_i2277_1_, p_i2277_2_);
+		graphicsLevel = p_i2277_3_;
 	}
 	
 	@Override public boolean isOpaqueCube()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockLever.java b/RMCClient/minecraft/net/minecraft/src/BlockLever.java
index 16fcdac..8ea5557 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockLever.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockLever.java
@@ -2,9 +2,9 @@
 
 public class BlockLever extends Block
 {
-	protected BlockLever(int par1)
+	protected BlockLever(int p_i2219_1_)
 	{
-		super(par1, Material.circuits);
+		super(p_i2219_1_, Material.circuits);
 		setCreativeTab(CreativeTabs.tabRedstone);
 	}
 	
@@ -165,7 +165,7 @@
 		return var12 + var11;
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = par1World.getBlockMetadata(par2, par3, par4);
 		int var8 = var7 & 7;
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockLilyPad.java b/RMCClient/minecraft/net/minecraft/src/BlockLilyPad.java
index b691bd5..2351781 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockLilyPad.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockLilyPad.java
@@ -4,9 +4,9 @@
 
 public class BlockLilyPad extends BlockFlower
 {
-	protected BlockLilyPad(int par1)
+	protected BlockLilyPad(int p_i2284_1_)
 	{
-		super(par1);
+		super(p_i2284_1_);
 		float var2 = 0.5F;
 		float var3 = 0.015625F;
 		setBlockBounds(0.5F - var2, 0.0F, 0.5F - var2, 0.5F + var2, var3, 0.5F + var2);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockLockedChest.java b/RMCClient/minecraft/net/minecraft/src/BlockLockedChest.java
index 3ea8255..90d8c46 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockLockedChest.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockLockedChest.java
@@ -4,9 +4,9 @@
 
 public class BlockLockedChest extends Block
 {
-	protected BlockLockedChest(int par1)
+	protected BlockLockedChest(int p_i2223_1_)
 	{
-		super(par1, Material.wood);
+		super(p_i2223_1_, Material.wood);
 	}
 	
 	@Override public boolean canPlaceBlockAt(World par1World, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockLog.java b/RMCClient/minecraft/net/minecraft/src/BlockLog.java
index 54da6aa..e87da94 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockLog.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockLog.java
@@ -3,16 +3,15 @@
 import java.util.List;
 import java.util.Random;
 
-public class BlockLog extends Block
+public class BlockLog extends BlockRotatedPillar
 {
 	public static final String[] woodType = new String[] { "oak", "spruce", "birch", "jungle" };
-	public static final String[] treeTextureTypes = new String[] { "tree_side", "tree_spruce", "tree_birch", "tree_jungle" };
-	private Icon[] iconArray;
-	private Icon tree_top;
+	private Icon[] field_111052_c;
+	private Icon[] tree_top;
 	
-	protected BlockLog(int par1)
+	protected BlockLog(int p_i2279_1_)
 	{
-		super(par1, Material.wood);
+		super(p_i2279_1_, Material.wood);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
@@ -43,26 +42,14 @@
 		}
 	}
 	
-	@Override protected ItemStack createStackedBlock(int par1)
+	@Override protected Icon func_111048_c(int p_111048_1_)
 	{
-		return new ItemStack(blockID, 1, limitToValidMetadata(par1));
+		return field_111052_c[p_111048_1_];
 	}
 	
-	@Override public int damageDropped(int par1)
+	@Override protected Icon func_111049_d(int p_111049_1_)
 	{
-		return par1 & 3;
-	}
-	
-	@Override public Icon getIcon(int par1, int par2)
-	{
-		int var3 = par2 & 12;
-		int var4 = par2 & 3;
-		return var3 == 0 && (par1 == 1 || par1 == 0) ? tree_top : var3 == 4 && (par1 == 5 || par1 == 4) ? tree_top : var3 == 8 && (par1 == 2 || par1 == 3) ? tree_top : iconArray[var4];
-	}
-	
-	@Override public int getRenderType()
-	{
-		return 31;
+		return tree_top[p_111049_1_];
 	}
 	
 	@Override public void getSubBlocks(int par1, CreativeTabs par2CreativeTabs, List par3List)
@@ -78,27 +65,6 @@
 		return Block.wood.blockID;
 	}
 	
-	@Override public int onBlockPlaced(World par1World, int par2, int par3, int par4, int par5, float par6, float par7, float par8, int par9)
-	{
-		int var10 = par9 & 3;
-		byte var11 = 0;
-		switch(par5)
-		{
-			case 0:
-			case 1:
-				var11 = 0;
-				break;
-			case 2:
-			case 3:
-				var11 = 8;
-				break;
-			case 4:
-			case 5:
-				var11 = 4;
-		}
-		return var10 | var11;
-	}
-	
 	@Override public int quantityDropped(Random par1Random)
 	{
 		return 1;
@@ -106,11 +72,12 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		tree_top = par1IconRegister.registerIcon("tree_top");
-		iconArray = new Icon[treeTextureTypes.length];
-		for(int var2 = 0; var2 < iconArray.length; ++var2)
+		field_111052_c = new Icon[woodType.length];
+		tree_top = new Icon[woodType.length];
+		for(int var2 = 0; var2 < field_111052_c.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon(treeTextureTypes[var2]);
+			field_111052_c[var2] = par1IconRegister.registerIcon(func_111023_E() + "_" + woodType[var2]);
+			tree_top[var2] = par1IconRegister.registerIcon(func_111023_E() + "_" + woodType[var2] + "_top");
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockMelon.java b/RMCClient/minecraft/net/minecraft/src/BlockMelon.java
index d972dcb..35d4fc9 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockMelon.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockMelon.java
@@ -6,9 +6,9 @@
 {
 	private Icon theIcon;
 	
-	protected BlockMelon(int par1)
+	protected BlockMelon(int p_i2224_1_)
 	{
-		super(par1, Material.pumpkin);
+		super(p_i2224_1_, Material.pumpkin);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
@@ -39,7 +39,7 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("melon_side");
-		theIcon = par1IconRegister.registerIcon("melon_top");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+		theIcon = par1IconRegister.registerIcon(func_111023_E() + "_top");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockMobSpawner.java b/RMCClient/minecraft/net/minecraft/src/BlockMobSpawner.java
index 2a45024..202eb13 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockMobSpawner.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockMobSpawner.java
@@ -4,9 +4,9 @@
 
 public class BlockMobSpawner extends BlockContainer
 {
-	protected BlockMobSpawner(int par1)
+	protected BlockMobSpawner(int p_i2226_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2226_1_, Material.rock);
 	}
 	
 	@Override public TileEntity createNewTileEntity(World par1World)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockMushroom.java b/RMCClient/minecraft/net/minecraft/src/BlockMushroom.java
index 4c730d7..6b18bba 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockMushroom.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockMushroom.java
@@ -4,14 +4,11 @@
 
 public class BlockMushroom extends BlockFlower
 {
-	private final String field_94374_a;
-	
-	protected BlockMushroom(int par1, String par2Str)
+	protected BlockMushroom(int p_i2227_1_)
 	{
-		super(par1);
-		field_94374_a = par2Str;
-		float var3 = 0.2F;
-		setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var3 * 2.0F, 0.5F + var3);
+		super(p_i2227_1_);
+		float var2 = 0.2F;
+		setBlockBounds(0.5F - var2, 0.0F, 0.5F - var2, 0.5F + var2, var2 * 2.0F, 0.5F + var2);
 		setTickRandomly(true);
 	}
 	
@@ -54,11 +51,6 @@
 		}
 	}
 	
-	@Override public void registerIcons(IconRegister par1IconRegister)
-	{
-		blockIcon = par1IconRegister.registerIcon(field_94374_a);
-	}
-	
 	@Override public void updateTick(World par1World, int par2, int par3, int par4, Random par5Random)
 	{
 		if(par5Random.nextInt(25) == 0)
@@ -99,7 +91,7 @@
 			}
 			if(par1World.isAirBlock(var8, var9, var10) && canBlockStay(par1World, var8, var9, var10))
 			{
-				par1World.setBlock(var8, var9, var10, blockID);
+				par1World.setBlock(var8, var9, var10, blockID, 0, 2);
 			}
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockMushroomCap.java b/RMCClient/minecraft/net/minecraft/src/BlockMushroomCap.java
index eeccfe9..b005e9a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockMushroomCap.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockMushroomCap.java
@@ -4,16 +4,16 @@
 
 public class BlockMushroomCap extends Block
 {
-	private static final String[] field_94429_a = new String[] { "mushroom_skin_brown", "mushroom_skin_red" };
+	private static final String[] field_94429_a = new String[] { "skin_brown", "skin_red" };
 	private final int mushroomType;
 	private Icon[] iconArray;
 	private Icon field_94426_cO;
 	private Icon field_94427_cP;
 	
-	public BlockMushroomCap(int par1, Material par2Material, int par3)
+	public BlockMushroomCap(int p_i2214_1_, Material p_i2214_2_, int p_i2214_3_)
 	{
-		super(par1, par2Material);
-		mushroomType = par3;
+		super(p_i2214_1_, p_i2214_2_);
+		mushroomType = p_i2214_3_;
 	}
 	
 	@Override public Icon getIcon(int par1, int par2)
@@ -46,9 +46,9 @@
 		iconArray = new Icon[field_94429_a.length];
 		for(int var2 = 0; var2 < iconArray.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon(field_94429_a[var2]);
+			iconArray[var2] = par1IconRegister.registerIcon(func_111023_E() + "_" + field_94429_a[var2]);
 		}
-		field_94427_cP = par1IconRegister.registerIcon("mushroom_inside");
-		field_94426_cO = par1IconRegister.registerIcon("mushroom_skin_stem");
+		field_94427_cP = par1IconRegister.registerIcon(func_111023_E() + "_" + "inside");
+		field_94426_cO = par1IconRegister.registerIcon(func_111023_E() + "_" + "skin_stem");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockMycelium.java b/RMCClient/minecraft/net/minecraft/src/BlockMycelium.java
index 47b1fd9..641649a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockMycelium.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockMycelium.java
@@ -7,9 +7,9 @@
 	private Icon field_94422_a;
 	private Icon field_94421_b;
 	
-	protected BlockMycelium(int par1)
+	protected BlockMycelium(int p_i2228_1_)
 	{
-		super(par1, Material.grass);
+		super(p_i2228_1_, Material.grass);
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
@@ -46,9 +46,9 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("mycel_side");
-		field_94422_a = par1IconRegister.registerIcon("mycel_top");
-		field_94421_b = par1IconRegister.registerIcon("snow_side");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+		field_94422_a = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		field_94421_b = par1IconRegister.registerIcon("grass_side_snowed");
 	}
 	
 	@Override public void updateTick(World par1World, int par2, int par3, int par4, Random par5Random)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockNetherStalk.java b/RMCClient/minecraft/net/minecraft/src/BlockNetherStalk.java
index 1ea6805..5f4b64e 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockNetherStalk.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockNetherStalk.java
@@ -4,12 +4,11 @@
 
 public class BlockNetherStalk extends BlockFlower
 {
-	private static final String[] field_94373_a = new String[] { "netherStalk_0", "netherStalk_1", "netherStalk_2" };
 	private Icon[] iconArray;
 	
-	protected BlockNetherStalk(int par1)
+	protected BlockNetherStalk(int p_i2229_1_)
 	{
-		super(par1);
+		super(p_i2229_1_);
 		setTickRandomly(true);
 		float var2 = 0.5F;
 		setBlockBounds(0.5F - var2, 0.0F, 0.5F - var2, 0.5F + var2, 0.25F, 0.5F + var2);
@@ -73,10 +72,10 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		iconArray = new Icon[field_94373_a.length];
+		iconArray = new Icon[3];
 		for(int var2 = 0; var2 < iconArray.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon(field_94373_a[var2]);
+			iconArray[var2] = par1IconRegister.registerIcon(func_111023_E() + "_stage_" + var2);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockNetherrack.java b/RMCClient/minecraft/net/minecraft/src/BlockNetherrack.java
index 69711d5..a12a816 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockNetherrack.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockNetherrack.java
@@ -2,9 +2,9 @@
 
 public class BlockNetherrack extends Block
 {
-	public BlockNetherrack(int par1)
+	public BlockNetherrack(int p_i2230_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2230_1_, Material.rock);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockNote.java b/RMCClient/minecraft/net/minecraft/src/BlockNote.java
index de6927a..8d95b9a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockNote.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockNote.java
@@ -2,9 +2,9 @@
 
 public class BlockNote extends BlockContainer
 {
-	public BlockNote(int par1)
+	public BlockNote(int p_i2233_1_)
 	{
-		super(par1, Material.wood);
+		super(p_i2233_1_, Material.wood);
 		setCreativeTab(CreativeTabs.tabRedstone);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockObsidian.java b/RMCClient/minecraft/net/minecraft/src/BlockObsidian.java
index 421ba9e..5ed0487 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockObsidian.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockObsidian.java
@@ -4,9 +4,9 @@
 
 public class BlockObsidian extends BlockStone
 {
-	public BlockObsidian(int par1)
+	public BlockObsidian(int p_i2234_1_)
 	{
-		super(par1);
+		super(p_i2234_1_);
 	}
 	
 	@Override public int idDropped(int par1, Random par2Random, int par3)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockOre.java b/RMCClient/minecraft/net/minecraft/src/BlockOre.java
index 85c63f4..0a12e2d 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockOre.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockOre.java
@@ -4,9 +4,9 @@
 
 public class BlockOre extends Block
 {
-	public BlockOre(int par1)
+	public BlockOre(int p_i2235_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2235_1_, Material.rock);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockOreStorage.java b/RMCClient/minecraft/net/minecraft/src/BlockOreStorage.java
index 5b0baa2..0058a58 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockOreStorage.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockOreStorage.java
@@ -2,9 +2,9 @@
 
 public class BlockOreStorage extends Block
 {
-	public BlockOreStorage(int par1)
+	public BlockOreStorage(int p_i2225_1_)
 	{
-		super(par1, Material.iron);
+		super(p_i2225_1_, Material.iron);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPane.java b/RMCClient/minecraft/net/minecraft/src/BlockPane.java
index ed41536..ebe912f 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPane.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPane.java
@@ -10,12 +10,12 @@
 	private final String field_94402_c;
 	private Icon theIcon;
 	
-	protected BlockPane(int par1, String par2Str, String par3Str, Material par4Material, boolean par5)
+	protected BlockPane(int p_i2268_1_, String p_i2268_2_, String p_i2268_3_, Material p_i2268_4_, boolean p_i2268_5_)
 	{
-		super(par1, par4Material);
-		sideTextureIndex = par3Str;
-		canDropItself = par5;
-		field_94402_c = par2Str;
+		super(p_i2268_1_, p_i2268_4_);
+		sideTextureIndex = p_i2268_3_;
+		canDropItself = p_i2268_5_;
+		field_94402_c = p_i2268_2_;
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPistonBase.java b/RMCClient/minecraft/net/minecraft/src/BlockPistonBase.java
index 165b95e..9e4d608 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPistonBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPistonBase.java
@@ -9,10 +9,10 @@
 	private Icon bottomIcon;
 	private Icon topIcon;
 	
-	public BlockPistonBase(int par1, boolean par2)
+	public BlockPistonBase(int p_i2296_1_, boolean p_i2296_2_)
 	{
-		super(par1, Material.piston);
-		isSticky = par2;
+		super(p_i2296_1_, Material.piston);
+		isSticky = p_i2296_2_;
 		setStepSound(soundStoneFootstep);
 		setHardness(0.5F);
 		setCreativeTab(CreativeTabs.tabRedstone);
@@ -144,7 +144,7 @@
 		return true;
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = determineOrientation(par1World, par2, par3, par4, par5EntityLiving);
 		par1World.setBlockMetadataWithNotify(par2, par3, par4, var7, 2);
@@ -165,8 +165,8 @@
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		blockIcon = par1IconRegister.registerIcon("piston_side");
-		topIcon = par1IconRegister.registerIcon(isSticky ? "piston_top_sticky" : "piston_top");
-		innerTopIcon = par1IconRegister.registerIcon("piston_inner_top");
+		topIcon = par1IconRegister.registerIcon(isSticky ? "piston_top_sticky" : "piston_top_normal");
+		innerTopIcon = par1IconRegister.registerIcon("piston_inner");
 		bottomIcon = par1IconRegister.registerIcon("piston_bottom");
 	}
 	
@@ -180,6 +180,7 @@
 		int var5 = par1IBlockAccess.getBlockMetadata(par2, par3, par4);
 		if(isExtended(var5))
 		{
+			float var6 = 0.25F;
 			switch(getOrientation(var5))
 			{
 				case 0:
@@ -354,7 +355,7 @@
 		}
 	}
 	
-	public static int determineOrientation(World par0World, int par1, int par2, int par3, EntityLiving par4EntityLiving)
+	public static int determineOrientation(World par0World, int par1, int par2, int par3, EntityLivingBase par4EntityLiving)
 	{
 		if(MathHelper.abs((float) par4EntityLiving.posX - par1) < 2.0F && MathHelper.abs((float) par4EntityLiving.posZ - par3) < 2.0F)
 		{
@@ -368,7 +369,7 @@
 	
 	public static Icon func_94496_b(String par0Str)
 	{
-		return par0Str == "piston_side" ? Block.pistonBase.blockIcon : par0Str == "piston_top" ? Block.pistonBase.topIcon : par0Str == "piston_top_sticky" ? Block.pistonStickyBase.topIcon : par0Str == "piston_inner_top" ? Block.pistonBase.innerTopIcon : null;
+		return par0Str == "piston_side" ? Block.pistonBase.blockIcon : par0Str == "piston_top_normal" ? Block.pistonBase.topIcon : par0Str == "piston_top_sticky" ? Block.pistonStickyBase.topIcon : par0Str == "piston_inner" ? Block.pistonBase.innerTopIcon : null;
 	}
 	
 	public static int getOrientation(int par0)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPistonExtension.java b/RMCClient/minecraft/net/minecraft/src/BlockPistonExtension.java
index e4ebceb..d55f41d 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPistonExtension.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPistonExtension.java
@@ -5,11 +5,11 @@
 
 public class BlockPistonExtension extends Block
 {
-	private Icon headTexture = null;
+	private Icon headTexture;
 	
-	public BlockPistonExtension(int par1)
+	public BlockPistonExtension(int p_i2297_1_)
 	{
-		super(par1, Material.piston);
+		super(p_i2297_1_, Material.piston);
 		setStepSound(soundStoneFootstep);
 		setHardness(0.5F);
 	}
@@ -17,6 +17,11 @@
 	@Override public void addCollisionBoxesToList(World par1World, int par2, int par3, int par4, AxisAlignedBB par5AxisAlignedBB, List par6List, Entity par7Entity)
 	{
 		int var8 = par1World.getBlockMetadata(par2, par3, par4);
+		float var9 = 0.25F;
+		float var10 = 0.375F;
+		float var11 = 0.625F;
+		float var12 = 0.25F;
+		float var13 = 0.75F;
 		switch(getDirectionMeta(var8))
 		{
 			case 0:
@@ -95,7 +100,7 @@
 	@Override public Icon getIcon(int par1, int par2)
 	{
 		int var3 = getDirectionMeta(par2);
-		return par1 == var3 ? headTexture != null ? headTexture : (par2 & 8) != 0 ? BlockPistonBase.func_94496_b("piston_top_sticky") : BlockPistonBase.func_94496_b("piston_top") : var3 < 6 && par1 == Facing.oppositeSide[var3] ? BlockPistonBase.func_94496_b("piston_top") : BlockPistonBase.func_94496_b("piston_side");
+		return par1 == var3 ? headTexture != null ? headTexture : (par2 & 8) != 0 ? BlockPistonBase.func_94496_b("piston_top_sticky") : BlockPistonBase.func_94496_b("piston_top_normal") : var3 < 6 && par1 == Facing.oppositeSide[var3] ? BlockPistonBase.func_94496_b("piston_top_normal") : BlockPistonBase.func_94496_b("piston_side");
 	}
 	
 	@Override public int getRenderType()
@@ -105,12 +110,27 @@
 	
 	@Override public int idPicked(World par1World, int par2, int par3, int par4)
 	{
-		return 0;
+		int var5 = par1World.getBlockMetadata(par2, par3, par4);
+		return (var5 & 8) != 0 ? Block.pistonStickyBase.blockID : Block.pistonBase.blockID;
 	}
 	
 	@Override public boolean isOpaqueCube()
 	{
 		return false;
+	}
+	
+	@Override public void onBlockHarvested(World par1World, int par2, int par3, int par4, int par5, EntityPlayer par6EntityPlayer)
+	{
+		if(par6EntityPlayer.capabilities.isCreativeMode)
+		{
+			int var7 = getDirectionMeta(par5);
+			int var8 = par1World.getBlockId(par2 - Facing.offsetsXForSide[var7], par3 - Facing.offsetsYForSide[var7], par4 - Facing.offsetsZForSide[var7]);
+			if(var8 == Block.pistonBase.blockID || var8 == Block.pistonStickyBase.blockID)
+			{
+				par1World.setBlockToAir(par2 - Facing.offsetsXForSide[var7], par3 - Facing.offsetsYForSide[var7], par4 - Facing.offsetsZForSide[var7]);
+			}
+		}
+		super.onBlockHarvested(par1World, par2, par3, par4, par5, par6EntityPlayer);
 	}
 	
 	@Override public void onNeighborBlockChange(World par1World, int par2, int par3, int par4, int par5)
@@ -143,6 +163,7 @@
 	@Override public void setBlockBoundsBasedOnState(IBlockAccess par1IBlockAccess, int par2, int par3, int par4)
 	{
 		int var5 = par1IBlockAccess.getBlockMetadata(par2, par3, par4);
+		float var6 = 0.25F;
 		switch(getDirectionMeta(var5))
 		{
 			case 0:
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPistonMoving.java b/RMCClient/minecraft/net/minecraft/src/BlockPistonMoving.java
index fa4b770..2e808d9 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPistonMoving.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPistonMoving.java
@@ -4,9 +4,9 @@
 
 public class BlockPistonMoving extends BlockContainer
 {
-	public BlockPistonMoving(int par1)
+	public BlockPistonMoving(int p_i2298_1_)
 	{
-		super(par1, Material.piston);
+		super(p_i2298_1_, Material.piston);
 		setHardness(-1.0F);
 	}
 	
@@ -139,15 +139,15 @@
 	
 	@Override public void onNeighborBlockChange(World par1World, int par2, int par3, int par4, int par5)
 	{
-		if(!par1World.isRemote && par1World.getBlockTileEntity(par2, par3, par4) == null)
+		if(!par1World.isRemote)
 		{
-			;
+			par1World.getBlockTileEntity(par2, par3, par4);
 		}
 	}
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("piston_top");
+		blockIcon = par1IconRegister.registerIcon("piston_top_normal");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPortal.java b/RMCClient/minecraft/net/minecraft/src/BlockPortal.java
index a246f5f..9f3628d 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPortal.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPortal.java
@@ -4,9 +4,9 @@
 
 public class BlockPortal extends BlockBreakable
 {
-	public BlockPortal(int par1)
+	public BlockPortal(int p_i2236_1_)
 	{
-		super(par1, "portal", Material.portal, false);
+		super(p_i2236_1_, "portal", Material.portal, false);
 		setTickRandomly(true);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPotato.java b/RMCClient/minecraft/net/minecraft/src/BlockPotato.java
index 670cda2..2a8a7c6 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPotato.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPotato.java
@@ -4,9 +4,9 @@
 {
 	private Icon[] iconArray;
 	
-	public BlockPotato(int par1)
+	public BlockPotato(int p_i2237_1_)
 	{
-		super(par1);
+		super(p_i2237_1_);
 	}
 	
 	@Override public void dropBlockAsItemWithChance(World par1World, int par2, int par3, int par4, int par5, float par6, int par7)
@@ -48,7 +48,7 @@
 		iconArray = new Icon[4];
 		for(int var2 = 0; var2 < iconArray.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon("potatoes_" + var2);
+			iconArray[var2] = par1IconRegister.registerIcon(func_111023_E() + "_stage_" + var2);
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPoweredOre.java b/RMCClient/minecraft/net/minecraft/src/BlockPoweredOre.java
index d96fc97..2a71c15 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPoweredOre.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPoweredOre.java
@@ -2,9 +2,9 @@
 
 public class BlockPoweredOre extends BlockOreStorage
 {
-	public BlockPoweredOre(int par1)
+	public BlockPoweredOre(int p_i2238_1_)
 	{
-		super(par1);
+		super(p_i2238_1_);
 		setCreativeTab(CreativeTabs.tabRedstone);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPressurePlate.java b/RMCClient/minecraft/net/minecraft/src/BlockPressurePlate.java
index beda18d..bc170b0 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPressurePlate.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPressurePlate.java
@@ -7,10 +7,10 @@
 {
 	private EnumMobType triggerMobType;
 	
-	protected BlockPressurePlate(int par1, String par2Str, Material par3Material, EnumMobType par4EnumMobType)
+	protected BlockPressurePlate(int p_i2241_1_, String p_i2241_2_, Material p_i2241_3_, EnumMobType p_i2241_4_)
 	{
-		super(par1, par2Str, par3Material);
-		triggerMobType = par4EnumMobType;
+		super(p_i2241_1_, p_i2241_2_, p_i2241_3_);
+		triggerMobType = p_i2241_4_;
 	}
 	
 	@Override protected int getMetaFromWeight(int par1)
@@ -27,13 +27,13 @@
 		}
 		if(triggerMobType == EnumMobType.mobs)
 		{
-			var5 = par1World.getEntitiesWithinAABB(EntityLiving.class, getSensitiveAABB(par2, par3, par4));
+			var5 = par1World.getEntitiesWithinAABB(EntityLivingBase.class, getSensitiveAABB(par2, par3, par4));
 		}
 		if(triggerMobType == EnumMobType.players)
 		{
 			var5 = par1World.getEntitiesWithinAABB(EntityPlayer.class, getSensitiveAABB(par2, par3, par4));
 		}
-		if(!var5.isEmpty())
+		if(var5 != null && !var5.isEmpty())
 		{
 			Iterator var6 = var5.iterator();
 			while(var6.hasNext())
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPressurePlateWeighted.java b/RMCClient/minecraft/net/minecraft/src/BlockPressurePlateWeighted.java
index 37eb5a1..5c285e5 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPressurePlateWeighted.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPressurePlateWeighted.java
@@ -6,10 +6,10 @@
 {
 	private final int maxItemsWeighted;
 	
-	protected BlockPressurePlateWeighted(int par1, String par2Str, Material par3Material, int par4)
+	protected BlockPressurePlateWeighted(int p_i2286_1_, String p_i2286_2_, Material p_i2286_3_, int p_i2286_4_)
 	{
-		super(par1, par2Str, par3Material);
-		maxItemsWeighted = par4;
+		super(p_i2286_1_, p_i2286_2_, p_i2286_3_);
+		maxItemsWeighted = p_i2286_4_;
 	}
 	
 	@Override protected int getMetaFromWeight(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockPumpkin.java b/RMCClient/minecraft/net/minecraft/src/BlockPumpkin.java
index 2677486..5aabc72 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockPumpkin.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockPumpkin.java
@@ -6,11 +6,11 @@
 	private Icon field_94474_b;
 	private Icon field_94475_c;
 	
-	protected BlockPumpkin(int par1, boolean par2)
+	protected BlockPumpkin(int p_i2242_1_, boolean p_i2242_2_)
 	{
-		super(par1, Material.pumpkin);
+		super(p_i2242_1_, Material.pumpkin);
 		setTickRandomly(true);
-		blockType = par2;
+		blockType = p_i2242_2_;
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
@@ -88,7 +88,7 @@
 		}
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 2.5D) & 3;
 		par1World.setBlockMetadataWithNotify(par2, par3, par4, var7, 2);
@@ -96,8 +96,8 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		field_94475_c = par1IconRegister.registerIcon(blockType ? "pumpkin_jack" : "pumpkin_face");
-		field_94474_b = par1IconRegister.registerIcon("pumpkin_top");
-		blockIcon = par1IconRegister.registerIcon("pumpkin_side");
+		field_94475_c = par1IconRegister.registerIcon(func_111023_E() + "_face_" + (blockType ? "on" : "off"));
+		field_94474_b = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockQuartz.java b/RMCClient/minecraft/net/minecraft/src/BlockQuartz.java
index eac6e11..a55992c 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockQuartz.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockQuartz.java
@@ -5,16 +5,16 @@
 public class BlockQuartz extends Block
 {
 	public static final String[] quartzBlockTypes = new String[] { "default", "chiseled", "lines" };
-	private static final String[] quartzBlockTextureTypes = new String[] { "quartzblock_side", "quartzblock_chiseled", "quartzblock_lines", null, null };
+	private static final String[] quartzBlockTextureTypes = new String[] { "side", "chiseled", "lines", null, null };
 	private Icon[] quartzblockIcons;
 	private Icon quartzblock_chiseled_top;
 	private Icon quartzblock_lines_top;
 	private Icon quartzblock_top;
 	private Icon quartzblock_bottom;
 	
-	public BlockQuartz(int par1)
+	public BlockQuartz(int p_i2243_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2243_1_, Material.rock);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
@@ -91,12 +91,12 @@
 				quartzblockIcons[var2] = quartzblockIcons[var2 - 1];
 			} else
 			{
-				quartzblockIcons[var2] = par1IconRegister.registerIcon(quartzBlockTextureTypes[var2]);
+				quartzblockIcons[var2] = par1IconRegister.registerIcon(func_111023_E() + "_" + quartzBlockTextureTypes[var2]);
 			}
 		}
-		quartzblock_top = par1IconRegister.registerIcon("quartzblock_top");
-		quartzblock_chiseled_top = par1IconRegister.registerIcon("quartzblock_chiseled_top");
-		quartzblock_lines_top = par1IconRegister.registerIcon("quartzblock_lines_top");
-		quartzblock_bottom = par1IconRegister.registerIcon("quartzblock_bottom");
+		quartzblock_top = par1IconRegister.registerIcon(func_111023_E() + "_" + "top");
+		quartzblock_chiseled_top = par1IconRegister.registerIcon(func_111023_E() + "_" + "chiseled_top");
+		quartzblock_lines_top = par1IconRegister.registerIcon(func_111023_E() + "_" + "lines_top");
+		quartzblock_bottom = par1IconRegister.registerIcon(func_111023_E() + "_" + "bottom");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRail.java b/RMCClient/minecraft/net/minecraft/src/BlockRail.java
index 250a02f..288b081 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockRail.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRail.java
@@ -4,9 +4,9 @@
 {
 	private Icon theIcon;
 	
-	protected BlockRail(int par1)
+	protected BlockRail(int p_i2244_1_)
 	{
-		super(par1, false);
+		super(p_i2244_1_, false);
 	}
 	
 	@Override protected void func_94358_a(World par1World, int par2, int par3, int par4, int par5, int par6, int par7)
@@ -25,6 +25,6 @@
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		super.registerIcons(par1IconRegister);
-		theIcon = par1IconRegister.registerIcon("rail_turn");
+		theIcon = par1IconRegister.registerIcon(func_111023_E() + "_turned");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRailBase.java b/RMCClient/minecraft/net/minecraft/src/BlockRailBase.java
index f5ec495..6d67660 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockRailBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRailBase.java
@@ -6,10 +6,10 @@
 {
 	protected final boolean isPowered;
 	
-	protected BlockRailBase(int par1, boolean par2)
+	protected BlockRailBase(int p_i2167_1_, boolean p_i2167_2_)
 	{
-		super(par1, Material.circuits);
-		isPowered = par2;
+		super(p_i2167_1_, Material.circuits);
+		isPowered = p_i2167_2_;
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.125F, 1.0F);
 		setCreativeTab(CreativeTabs.tabTransport);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRailPowered.java b/RMCClient/minecraft/net/minecraft/src/BlockRailPowered.java
index f7d3779..68300de 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockRailPowered.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRailPowered.java
@@ -4,9 +4,9 @@
 {
 	protected Icon theIcon;
 	
-	protected BlockRailPowered(int par1)
+	protected BlockRailPowered(int p_i2239_1_)
 	{
-		super(par1, true);
+		super(p_i2239_1_, true);
 	}
 	
 	@Override protected void func_94358_a(World par1World, int par2, int par3, int par4, int par5, int par6, int par7)
@@ -138,6 +138,6 @@
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		super.registerIcons(par1IconRegister);
-		theIcon = par1IconRegister.registerIcon(getUnlocalizedName2() + "_powered");
+		theIcon = par1IconRegister.registerIcon(func_111023_E() + "_powered");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneLight.java b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneLight.java
index 795c825..2320b30 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneLight.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneLight.java
@@ -6,11 +6,11 @@
 {
 	private final boolean powered;
 	
-	public BlockRedstoneLight(int par1, boolean par2)
+	public BlockRedstoneLight(int p_i2247_1_, boolean p_i2247_2_)
 	{
-		super(par1, Material.redstoneLight);
-		powered = par2;
-		if(par2)
+		super(p_i2247_1_, Material.redstoneLight);
+		powered = p_i2247_2_;
+		if(p_i2247_2_)
 		{
 			setLightValue(1.0F);
 		}
@@ -51,17 +51,6 @@
 			{
 				par1World.setBlock(par2, par3, par4, Block.redstoneLampActive.blockID, 0, 2);
 			}
-		}
-	}
-	
-	@Override public void registerIcons(IconRegister par1IconRegister)
-	{
-		if(powered)
-		{
-			blockIcon = par1IconRegister.registerIcon("redstoneLight_lit");
-		} else
-		{
-			blockIcon = par1IconRegister.registerIcon("redstoneLight");
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneLogic.java b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneLogic.java
index c0caa60..26448c5 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneLogic.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneLogic.java
@@ -6,10 +6,10 @@
 {
 	protected final boolean isRepeaterPowered;
 	
-	protected BlockRedstoneLogic(int par1, boolean par2)
+	protected BlockRedstoneLogic(int p_i2189_1_, boolean p_i2189_2_)
 	{
-		super(par1, Material.circuits);
-		isRepeaterPowered = par2;
+		super(p_i2189_1_, Material.circuits);
+		isRepeaterPowered = p_i2189_2_;
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.125F, 1.0F);
 	}
 	
@@ -213,7 +213,7 @@
 		super.onBlockDestroyedByPlayer(par1World, par2, par3, par4, par5);
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = ((MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 0.5D) & 3) + 2) % 4;
 		par1World.setBlockMetadataWithNotify(par2, par3, par4, var7, 3);
@@ -240,11 +240,6 @@
 		{
 			func_94479_f(par1World, par2, par3, par4, par5);
 		}
-	}
-	
-	@Override public void registerIcons(IconRegister par1IconRegister)
-	{
-		blockIcon = par1IconRegister.registerIcon(isRepeaterPowered ? "repeater_lit" : "repeater");
 	}
 	
 	@Override public boolean renderAsNormalBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneOre.java b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneOre.java
index 274159f..5cd8c7a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneOre.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneOre.java
@@ -6,14 +6,14 @@
 {
 	private boolean glowing;
 	
-	public BlockRedstoneOre(int par1, boolean par2)
+	public BlockRedstoneOre(int p_i2246_1_, boolean p_i2246_2_)
 	{
-		super(par1, Material.rock);
-		if(par2)
+		super(p_i2246_1_, Material.rock);
+		if(p_i2246_2_)
 		{
 			setTickRandomly(true);
 		}
-		glowing = par2;
+		glowing = p_i2246_2_;
 	}
 	
 	@Override protected ItemStack createStackedBlock(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneRepeater.java b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneRepeater.java
index 8c53762..80f3c55 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneRepeater.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneRepeater.java
@@ -7,9 +7,9 @@
 	public static final double[] repeaterTorchOffset = new double[] { -0.0625D, 0.0625D, 0.1875D, 0.3125D };
 	private static final int[] repeaterState = new int[] { 1, 2, 3, 4 };
 	
-	protected BlockRedstoneRepeater(int par1, boolean par2)
+	protected BlockRedstoneRepeater(int p_i2249_1_, boolean p_i2249_2_)
 	{
-		super(par1, par2);
+		super(p_i2249_1_, p_i2249_2_);
 	}
 	
 	@Override public void breakBlock(World par1World, int par2, int par3, int par4, int par5, int par6)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneTorch.java b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneTorch.java
index 8263c4f..db58c97 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneTorch.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneTorch.java
@@ -8,13 +8,13 @@
 
 public class BlockRedstoneTorch extends BlockTorch
 {
-	private boolean torchActive = false;
+	private boolean torchActive;
 	private static Map redstoneUpdateInfoCache = new HashMap();
 	
-	protected BlockRedstoneTorch(int par1, boolean par2)
+	protected BlockRedstoneTorch(int p_i2232_1_, boolean p_i2232_2_)
 	{
-		super(par1);
-		torchActive = par2;
+		super(p_i2232_1_);
+		torchActive = p_i2232_2_;
 		setTickRandomly(true);
 		setCreativeTab((CreativeTabs) null);
 	}
@@ -152,17 +152,6 @@
 			{
 				par1World.spawnParticle("reddust", var7, var9, var11, 0.0D, 0.0D, 0.0D);
 			}
-		}
-	}
-	
-	@Override public void registerIcons(IconRegister par1IconRegister)
-	{
-		if(torchActive)
-		{
-			blockIcon = par1IconRegister.registerIcon("redtorch_lit");
-		} else
-		{
-			blockIcon = par1IconRegister.registerIcon("redtorch");
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneWire.java b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneWire.java
index 2123074..30328bf 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockRedstoneWire.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRedstoneWire.java
@@ -14,9 +14,9 @@
 	private Icon field_94411_cP;
 	private Icon field_94412_cQ;
 	
-	public BlockRedstoneWire(int par1)
+	public BlockRedstoneWire(int p_i2245_1_)
 	{
-		super(par1, Material.circuits);
+		super(p_i2245_1_, Material.circuits);
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.0625F, 1.0F);
 	}
 	
@@ -339,10 +339,10 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		field_94413_c = par1IconRegister.registerIcon("redstoneDust_cross");
-		field_94410_cO = par1IconRegister.registerIcon("redstoneDust_line");
-		field_94411_cP = par1IconRegister.registerIcon("redstoneDust_cross_overlay");
-		field_94412_cQ = par1IconRegister.registerIcon("redstoneDust_line_overlay");
+		field_94413_c = par1IconRegister.registerIcon(func_111023_E() + "_" + "cross");
+		field_94410_cO = par1IconRegister.registerIcon(func_111023_E() + "_" + "line");
+		field_94411_cP = par1IconRegister.registerIcon(func_111023_E() + "_" + "cross_overlay");
+		field_94412_cQ = par1IconRegister.registerIcon(func_111023_E() + "_" + "line_overlay");
 		blockIcon = field_94413_c;
 	}
 	
@@ -365,7 +365,7 @@
 	
 	public static Icon func_94409_b(String par0Str)
 	{
-		return par0Str == "redstoneDust_cross" ? Block.redstoneWire.field_94413_c : par0Str == "redstoneDust_line" ? Block.redstoneWire.field_94410_cO : par0Str == "redstoneDust_cross_overlay" ? Block.redstoneWire.field_94411_cP : par0Str == "redstoneDust_line_overlay" ? Block.redstoneWire.field_94412_cQ : null;
+		return par0Str.equals("cross") ? Block.redstoneWire.field_94413_c : par0Str.equals("line") ? Block.redstoneWire.field_94410_cO : par0Str.equals("cross_overlay") ? Block.redstoneWire.field_94411_cP : par0Str.equals("line_overlay") ? Block.redstoneWire.field_94412_cQ : null;
 	}
 	
 	public static boolean isPoweredOrRepeater(IBlockAccess par0IBlockAccess, int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockReed.java b/RMCClient/minecraft/net/minecraft/src/BlockReed.java
index e760715..a585fbb 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockReed.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockReed.java
@@ -4,9 +4,9 @@
 
 public class BlockReed extends Block
 {
-	protected BlockReed(int par1)
+	protected BlockReed(int p_i2248_1_)
 	{
-		super(par1, Material.plants);
+		super(p_i2248_1_, Material.plants);
 		float var2 = 0.375F;
 		setBlockBounds(0.5F - var2, 0.0F, 0.5F - var2, 0.5F + var2, 1.0F, 0.5F + var2);
 		setTickRandomly(true);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockRotatedPillar.java b/RMCClient/minecraft/net/minecraft/src/BlockRotatedPillar.java
new file mode 100644
index 0000000..8eb765a
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/BlockRotatedPillar.java
@@ -0,0 +1,66 @@
+package net.minecraft.src;
+
+public abstract class BlockRotatedPillar extends Block
+{
+	protected Icon field_111051_a;
+	
+	protected BlockRotatedPillar(int p_i2250_1_, Material p_i2250_2_)
+	{
+		super(p_i2250_1_, p_i2250_2_);
+	}
+	
+	@Override protected ItemStack createStackedBlock(int par1)
+	{
+		return new ItemStack(blockID, 1, func_111050_e(par1));
+	}
+	
+	@Override public int damageDropped(int par1)
+	{
+		return par1 & 3;
+	}
+	
+	protected abstract Icon func_111048_c(int var1);
+	
+	protected Icon func_111049_d(int p_111049_1_)
+	{
+		return field_111051_a;
+	}
+	
+	public int func_111050_e(int p_111050_1_)
+	{
+		return p_111050_1_ & 3;
+	}
+	
+	@Override public Icon getIcon(int par1, int par2)
+	{
+		int var3 = par2 & 12;
+		int var4 = par2 & 3;
+		return var3 == 0 && (par1 == 1 || par1 == 0) ? func_111049_d(var4) : var3 == 4 && (par1 == 5 || par1 == 4) ? func_111049_d(var4) : var3 == 8 && (par1 == 2 || par1 == 3) ? func_111049_d(var4) : func_111048_c(var4);
+	}
+	
+	@Override public int getRenderType()
+	{
+		return 31;
+	}
+	
+	@Override public int onBlockPlaced(World par1World, int par2, int par3, int par4, int par5, float par6, float par7, float par8, int par9)
+	{
+		int var10 = par9 & 3;
+		byte var11 = 0;
+		switch(par5)
+		{
+			case 0:
+			case 1:
+				var11 = 0;
+				break;
+			case 2:
+			case 3:
+				var11 = 8;
+				break;
+			case 4:
+			case 5:
+				var11 = 4;
+		}
+		return var10 | var11;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSand.java b/RMCClient/minecraft/net/minecraft/src/BlockSand.java
index 509c218..2d91291 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSand.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSand.java
@@ -4,17 +4,17 @@
 
 public class BlockSand extends Block
 {
-	public static boolean fallInstantly = false;
+	public static boolean fallInstantly;
 	
-	public BlockSand(int par1)
+	public BlockSand(int p_i2211_1_)
 	{
-		super(par1, Material.sand);
+		super(p_i2211_1_, Material.sand);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
-	public BlockSand(int par1, Material par2Material)
+	public BlockSand(int p_i2212_1_, Material p_i2212_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2212_1_, p_i2212_2_);
 	}
 	
 	@Override public void onBlockAdded(World par1World, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSandStone.java b/RMCClient/minecraft/net/minecraft/src/BlockSandStone.java
index 154f26a..a01b4c7 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSandStone.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSandStone.java
@@ -5,14 +5,14 @@
 public class BlockSandStone extends Block
 {
 	public static final String[] SAND_STONE_TYPES = new String[] { "default", "chiseled", "smooth" };
-	private static final String[] field_94405_b = new String[] { "sandstone_side", "sandstone_carved", "sandstone_smooth" };
+	private static final String[] field_94405_b = new String[] { "normal", "carved", "smooth" };
 	private Icon[] field_94406_c;
 	private Icon field_94403_cO;
 	private Icon field_94404_cP;
 	
-	public BlockSandStone(int par1)
+	public BlockSandStone(int p_i2251_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2251_1_, Material.rock);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
@@ -49,9 +49,9 @@
 		field_94406_c = new Icon[field_94405_b.length];
 		for(int var2 = 0; var2 < field_94406_c.length; ++var2)
 		{
-			field_94406_c[var2] = par1IconRegister.registerIcon(field_94405_b[var2]);
+			field_94406_c[var2] = par1IconRegister.registerIcon(func_111023_E() + "_" + field_94405_b[var2]);
 		}
-		field_94403_cO = par1IconRegister.registerIcon("sandstone_top");
-		field_94404_cP = par1IconRegister.registerIcon("sandstone_bottom");
+		field_94403_cO = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		field_94404_cP = par1IconRegister.registerIcon(func_111023_E() + "_bottom");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSapling.java b/RMCClient/minecraft/net/minecraft/src/BlockSapling.java
index 891c1a0..ed171f3 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSapling.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSapling.java
@@ -6,12 +6,11 @@
 public class BlockSapling extends BlockFlower
 {
 	public static final String[] WOOD_TYPES = new String[] { "oak", "spruce", "birch", "jungle" };
-	private static final String[] field_94370_b = new String[] { "sapling", "sapling_spruce", "sapling_birch", "sapling_jungle" };
 	private Icon[] saplingIcon;
 	
-	protected BlockSapling(int par1)
+	protected BlockSapling(int p_i2252_1_)
 	{
-		super(par1);
+		super(p_i2252_1_);
 		float var2 = 0.4F;
 		setBlockBounds(0.5F - var2, 0.0F, 0.5F - var2, 0.5F + var2, var2 * 2.0F, 0.5F + var2);
 		setCreativeTab(CreativeTabs.tabDecorations);
@@ -125,10 +124,10 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		saplingIcon = new Icon[field_94370_b.length];
+		saplingIcon = new Icon[WOOD_TYPES.length];
 		for(int var2 = 0; var2 < saplingIcon.length; ++var2)
 		{
-			saplingIcon[var2] = par1IconRegister.registerIcon(field_94370_b[var2]);
+			saplingIcon[var2] = par1IconRegister.registerIcon(func_111023_E() + "_" + WOOD_TYPES[var2]);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSign.java b/RMCClient/minecraft/net/minecraft/src/BlockSign.java
index 15c5e26..9678c21 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSign.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSign.java
@@ -7,11 +7,11 @@
 	private Class signEntityClass;
 	private boolean isFreestanding;
 	
-	protected BlockSign(int par1, Class par2Class, boolean par3)
+	protected BlockSign(int p_i2253_1_, Class p_i2253_2_, boolean p_i2253_3_)
 	{
-		super(par1, Material.wood);
-		isFreestanding = par3;
-		signEntityClass = par2Class;
+		super(p_i2253_1_, Material.wood);
+		isFreestanding = p_i2253_3_;
+		signEntityClass = p_i2253_2_;
 		float var4 = 0.25F;
 		float var5 = 1.0F;
 		setBlockBounds(0.5F - var4, 0.0F, 0.5F - var4, 0.5F + var4, var5, 0.5F + var4);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSilverfish.java b/RMCClient/minecraft/net/minecraft/src/BlockSilverfish.java
index 276e64c..e7ef24c 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSilverfish.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSilverfish.java
@@ -7,9 +7,9 @@
 {
 	public static final String[] silverfishStoneTypes = new String[] { "stone", "cobble", "brick" };
 	
-	public BlockSilverfish(int par1)
+	public BlockSilverfish(int p_i2262_1_)
 	{
-		super(par1, Material.clay);
+		super(p_i2262_1_, Material.clay);
 		setHardness(0.0F);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSkull.java b/RMCClient/minecraft/net/minecraft/src/BlockSkull.java
index 7e78207..2ad9220 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSkull.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSkull.java
@@ -4,9 +4,9 @@
 
 public class BlockSkull extends BlockContainer
 {
-	protected BlockSkull(int par1)
+	protected BlockSkull(int p_i2254_1_)
 	{
-		super(par1, Material.circuits);
+		super(p_i2254_1_, Material.circuits);
 		setBlockBounds(0.25F, 0.0F, 0.25F, 0.75F, 0.5F, 0.75F);
 	}
 	
@@ -72,7 +72,7 @@
 	
 	@Override public String getItemIconName()
 	{
-		return ItemSkull.field_94587_a[0];
+		return func_111023_E() + "_" + ItemSkull.field_94587_a[0];
 	}
 	
 	@Override public int getRenderType()
@@ -187,7 +187,7 @@
 		super.onBlockHarvested(par1World, par2, par3, par4, par5, par6EntityPlayer);
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 2.5D) & 3;
 		par1World.setBlockMetadataWithNotify(par2, par3, par4, var7, 2);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSnow.java b/RMCClient/minecraft/net/minecraft/src/BlockSnow.java
index 5ea05df..f332b2e 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSnow.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSnow.java
@@ -4,9 +4,9 @@
 
 public class BlockSnow extends Block
 {
-	protected BlockSnow(int par1)
+	protected BlockSnow(int p_i2275_1_)
 	{
-		super(par1, Material.snow);
+		super(p_i2275_1_, Material.snow);
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.125F, 1.0F);
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabDecorations);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSnowBlock.java b/RMCClient/minecraft/net/minecraft/src/BlockSnowBlock.java
index f54421a..1b6d6e0 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSnowBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSnowBlock.java
@@ -4,9 +4,9 @@
 
 public class BlockSnowBlock extends Block
 {
-	protected BlockSnowBlock(int par1)
+	protected BlockSnowBlock(int p_i2256_1_)
 	{
-		super(par1, Material.craftedSnow);
+		super(p_i2256_1_, Material.craftedSnow);
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSoulSand.java b/RMCClient/minecraft/net/minecraft/src/BlockSoulSand.java
index 87c9e1d..1e6048b 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSoulSand.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSoulSand.java
@@ -2,9 +2,9 @@
 
 public class BlockSoulSand extends Block
 {
-	public BlockSoulSand(int par1)
+	public BlockSoulSand(int p_i2257_1_)
 	{
-		super(par1, Material.sand);
+		super(p_i2257_1_, Material.sand);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSourceImpl.java b/RMCClient/minecraft/net/minecraft/src/BlockSourceImpl.java
index 5b7b364..50d1d70 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSourceImpl.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSourceImpl.java
@@ -7,12 +7,12 @@
 	private final int yPos;
 	private final int zPos;
 	
-	public BlockSourceImpl(World par1World, int par2, int par3, int par4)
+	public BlockSourceImpl(World p_i1365_1_, int p_i1365_2_, int p_i1365_3_, int p_i1365_4_)
 	{
-		worldObj = par1World;
-		xPos = par2;
-		yPos = par3;
-		zPos = par4;
+		worldObj = p_i1365_1_;
+		xPos = p_i1365_2_;
+		yPos = p_i1365_3_;
+		zPos = p_i1365_4_;
 	}
 	
 	@Override public int getBlockMetadata()
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockSponge.java b/RMCClient/minecraft/net/minecraft/src/BlockSponge.java
index f137712..2e5165c 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockSponge.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockSponge.java
@@ -2,9 +2,9 @@
 
 public class BlockSponge extends Block
 {
-	protected BlockSponge(int par1)
+	protected BlockSponge(int p_i2258_1_)
 	{
-		super(par1, Material.sponge);
+		super(p_i2258_1_, Material.sponge);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockStairs.java b/RMCClient/minecraft/net/minecraft/src/BlockStairs.java
index 84698e3..24e1915 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockStairs.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockStairs.java
@@ -8,17 +8,17 @@
 	private static final int[][] field_72159_a = new int[][] { { 2, 6 }, { 3, 7 }, { 2, 3 }, { 6, 7 }, { 0, 4 }, { 1, 5 }, { 0, 1 }, { 4, 5 } };
 	private final Block modelBlock;
 	private final int modelBlockMetadata;
-	private boolean field_72156_cr = false;
-	private int field_72160_cs = 0;
+	private boolean field_72156_cr;
+	private int field_72160_cs;
 	
-	protected BlockStairs(int par1, Block par2Block, int par3)
+	protected BlockStairs(int p_i2259_1_, Block p_i2259_2_, int p_i2259_3_)
 	{
-		super(par1, par2Block.blockMaterial);
-		modelBlock = par2Block;
-		modelBlockMetadata = par3;
-		setHardness(par2Block.blockHardness);
-		setResistance(par2Block.blockResistance / 3.0F);
-		setStepSound(par2Block.stepSound);
+		super(p_i2259_1_, p_i2259_2_.blockMaterial);
+		modelBlock = p_i2259_2_;
+		modelBlockMetadata = p_i2259_3_;
+		setHardness(p_i2259_2_.blockHardness);
+		setResistance(p_i2259_2_.blockResistance / 3.0F);
+		setStepSound(p_i2259_2_.stepSound);
 		setLightOpacity(255);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
@@ -399,7 +399,7 @@
 		return par5 != 0 && (par5 == 1 || par7 <= 0.5D) ? par9 : par9 | 4;
 	}
 	
-	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving, ItemStack par6ItemStack)
+	@Override public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLivingBase par5EntityLiving, ItemStack par6ItemStack)
 	{
 		int var7 = MathHelper.floor_double(par5EntityLiving.rotationYaw * 4.0F / 360.0F + 0.5D) & 3;
 		int var8 = par1World.getBlockMetadata(par2, par3, par4) & 4;
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockStationary.java b/RMCClient/minecraft/net/minecraft/src/BlockStationary.java
index 6a24167..3a8e699 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockStationary.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockStationary.java
@@ -4,11 +4,11 @@
 
 public class BlockStationary extends BlockFluid
 {
-	protected BlockStationary(int par1, Material par2Material)
+	protected BlockStationary(int p_i2222_1_, Material p_i2222_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2222_1_, p_i2222_2_);
 		setTickRandomly(false);
-		if(par2Material == Material.lava)
+		if(p_i2222_2_ == Material.lava)
 		{
 			setTickRandomly(true);
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockStem.java b/RMCClient/minecraft/net/minecraft/src/BlockStem.java
index edda687..41677c6 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockStem.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockStem.java
@@ -7,10 +7,10 @@
 	private final Block fruitType;
 	private Icon theIcon;
 	
-	protected BlockStem(int par1, Block par2Block)
+	protected BlockStem(int p_i2260_1_, Block p_i2260_2_)
 	{
-		super(par1);
-		fruitType = par2Block;
+		super(p_i2260_1_);
+		fruitType = p_i2260_2_;
 		setTickRandomly(true);
 		float var3 = 0.125F;
 		setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, 0.25F, 0.5F + var3);
@@ -144,8 +144,8 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("stem_straight");
-		theIcon = par1IconRegister.registerIcon("stem_bent");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_disconnected");
+		theIcon = par1IconRegister.registerIcon(func_111023_E() + "_connected");
 	}
 	
 	@Override public void setBlockBoundsBasedOnState(IBlockAccess par1IBlockAccess, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockStep.java b/RMCClient/minecraft/net/minecraft/src/BlockStep.java
index 3629acd..f610224 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockStep.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockStep.java
@@ -8,9 +8,9 @@
 	public static final String[] blockStepTypes = new String[] { "stone", "sand", "wood", "cobble", "brick", "smoothStoneBrick", "netherBrick", "quartz" };
 	private Icon theIcon;
 	
-	public BlockStep(int par1, boolean par2)
+	public BlockStep(int p_i2263_1_, boolean p_i2263_2_)
 	{
-		super(par1, par2, Material.rock);
+		super(p_i2263_1_, p_i2263_2_, Material.rock);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
@@ -59,7 +59,7 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("stoneslab_top");
-		theIcon = par1IconRegister.registerIcon("stoneslab_side");
+		blockIcon = par1IconRegister.registerIcon("stone_slab_top");
+		theIcon = par1IconRegister.registerIcon("stone_slab_side");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockStone.java b/RMCClient/minecraft/net/minecraft/src/BlockStone.java
index 2a7e23d..4b14f2b 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockStone.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockStone.java
@@ -4,9 +4,9 @@
 
 public class BlockStone extends Block
 {
-	public BlockStone(int par1)
+	public BlockStone(int p_i2264_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2264_1_, Material.rock);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockStoneBrick.java b/RMCClient/minecraft/net/minecraft/src/BlockStoneBrick.java
index 2433857..5716001 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockStoneBrick.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockStoneBrick.java
@@ -5,12 +5,12 @@
 public class BlockStoneBrick extends Block
 {
 	public static final String[] STONE_BRICK_TYPES = new String[] { "default", "mossy", "cracked", "chiseled" };
-	public static final String[] field_94407_b = new String[] { "stonebricksmooth", "stonebricksmooth_mossy", "stonebricksmooth_cracked", "stonebricksmooth_carved" };
+	public static final String[] field_94407_b = new String[] { null, "mossy", "cracked", "carved" };
 	private Icon[] field_94408_c;
 	
-	public BlockStoneBrick(int par1)
+	public BlockStoneBrick(int p_i2255_1_)
 	{
-		super(par1, Material.rock);
+		super(p_i2255_1_, Material.rock);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
@@ -41,7 +41,12 @@
 		field_94408_c = new Icon[field_94407_b.length];
 		for(int var2 = 0; var2 < field_94408_c.length; ++var2)
 		{
-			field_94408_c[var2] = par1IconRegister.registerIcon(field_94407_b[var2]);
+			String var3 = func_111023_E();
+			if(field_94407_b[var2] != null)
+			{
+				var3 = var3 + "_" + field_94407_b[var2];
+			}
+			field_94408_c[var2] = par1IconRegister.registerIcon(var3);
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockTNT.java b/RMCClient/minecraft/net/minecraft/src/BlockTNT.java
index 31a15cf..ddbc655 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockTNT.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockTNT.java
@@ -7,9 +7,9 @@
 	private Icon field_94393_a;
 	private Icon field_94392_b;
 	
-	public BlockTNT(int par1)
+	public BlockTNT(int p_i2274_1_)
 	{
-		super(par1, Material.tnt);
+		super(p_i2274_1_, Material.tnt);
 		setCreativeTab(CreativeTabs.tabRedstone);
 	}
 	
@@ -18,7 +18,7 @@
 		return false;
 	}
 	
-	public void func_94391_a(World par1World, int par2, int par3, int par4, int par5, EntityLiving par6EntityLiving)
+	public void func_94391_a(World par1World, int par2, int par3, int par4, int par5, EntityLivingBase par6EntityLiving)
 	{
 		if(!par1World.isRemote)
 		{
@@ -42,6 +42,7 @@
 		{
 			func_94391_a(par1World, par2, par3, par4, 1, par5EntityPlayer);
 			par1World.setBlockToAir(par2, par3, par4);
+			par5EntityPlayer.getCurrentEquippedItem().damageItem(1, par5EntityPlayer);
 			return true;
 		} else return super.onBlockActivated(par1World, par2, par3, par4, par5EntityPlayer, par6, par7, par8, par9);
 	}
@@ -68,7 +69,7 @@
 	
 	@Override public void onBlockDestroyedByPlayer(World par1World, int par2, int par3, int par4, int par5)
 	{
-		func_94391_a(par1World, par2, par3, par4, par5, (EntityLiving) null);
+		func_94391_a(par1World, par2, par3, par4, par5, (EntityLivingBase) null);
 	}
 	
 	@Override public void onEntityCollidedWithBlock(World par1World, int par2, int par3, int par4, Entity par5Entity)
@@ -78,7 +79,7 @@
 			EntityArrow var6 = (EntityArrow) par5Entity;
 			if(var6.isBurning())
 			{
-				func_94391_a(par1World, par2, par3, par4, 1, var6.shootingEntity instanceof EntityLiving ? (EntityLiving) var6.shootingEntity : null);
+				func_94391_a(par1World, par2, par3, par4, 1, var6.shootingEntity instanceof EntityLivingBase ? (EntityLivingBase) var6.shootingEntity : null);
 				par1World.setBlockToAir(par2, par3, par4);
 			}
 		}
@@ -100,8 +101,8 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("tnt_side");
-		field_94393_a = par1IconRegister.registerIcon("tnt_top");
-		field_94392_b = par1IconRegister.registerIcon("tnt_bottom");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+		field_94393_a = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		field_94392_b = par1IconRegister.registerIcon(func_111023_E() + "_bottom");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockTallGrass.java b/RMCClient/minecraft/net/minecraft/src/BlockTallGrass.java
index fc6c06c..117af4a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockTallGrass.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockTallGrass.java
@@ -8,9 +8,9 @@
 	private static final String[] grassTypes = new String[] { "deadbush", "tallgrass", "fern" };
 	private Icon[] iconArray;
 	
-	protected BlockTallGrass(int par1)
+	protected BlockTallGrass(int p_i2265_1_)
 	{
-		super(par1, Material.vine);
+		super(p_i2265_1_, Material.vine);
 		float var2 = 0.4F;
 		setBlockBounds(0.5F - var2, 0.0F, 0.5F - var2, 0.5F + var2, 0.8F, 0.5F + var2);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockTorch.java b/RMCClient/minecraft/net/minecraft/src/BlockTorch.java
index 0c51dd6..ccbd8cc 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockTorch.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockTorch.java
@@ -4,9 +4,9 @@
 
 public class BlockTorch extends Block
 {
-	protected BlockTorch(int par1)
+	protected BlockTorch(int p_i2276_1_)
 	{
-		super(par1, Material.circuits);
+		super(p_i2276_1_, Material.circuits);
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockTrapDoor.java b/RMCClient/minecraft/net/minecraft/src/BlockTrapDoor.java
index 24a8c72..1e136c0 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockTrapDoor.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockTrapDoor.java
@@ -2,9 +2,9 @@
 
 public class BlockTrapDoor extends Block
 {
-	protected BlockTrapDoor(int par1, Material par2Material)
+	protected BlockTrapDoor(int p_i2278_1_, Material p_i2278_2_)
 	{
-		super(par1, par2Material);
+		super(p_i2278_1_, p_i2278_2_);
 		float var3 = 0.5F;
 		float var4 = 1.0F;
 		setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var4, 0.5F + var3);
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockTripWire.java b/RMCClient/minecraft/net/minecraft/src/BlockTripWire.java
index e83d53e..d90724f 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockTripWire.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockTripWire.java
@@ -6,9 +6,9 @@
 
 public class BlockTripWire extends Block
 {
-	public BlockTripWire(int par1)
+	public BlockTripWire(int p_i2281_1_)
 	{
-		super(par1, Material.circuits);
+		super(p_i2281_1_, Material.circuits);
 		setBlockBounds(0.0F, 0.0F, 0.0F, 1.0F, 0.15625F, 1.0F);
 		setTickRandomly(true);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockTripWireSource.java b/RMCClient/minecraft/net/minecraft/src/BlockTripWireSource.java
index 1145e45..de1e25a 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockTripWireSource.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockTripWireSource.java
@@ -4,9 +4,9 @@
 
 public class BlockTripWireSource extends Block
 {
-	public BlockTripWireSource(int par1)
+	public BlockTripWireSource(int p_i2280_1_)
 	{
-		super(par1, Material.circuits);
+		super(p_i2280_1_, Material.circuits);
 		setCreativeTab(CreativeTabs.tabRedstone);
 		setTickRandomly(true);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockVine.java b/RMCClient/minecraft/net/minecraft/src/BlockVine.java
index 541598c..d86cb87 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockVine.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockVine.java
@@ -4,9 +4,9 @@
 
 public class BlockVine extends Block
 {
-	public BlockVine(int par1)
+	public BlockVine(int p_i2282_1_)
 	{
-		super(par1, Material.vine);
+		super(p_i2282_1_, Material.vine);
 		setTickRandomly(true);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
@@ -154,6 +154,7 @@
 	
 	@Override public void setBlockBoundsBasedOnState(IBlockAccess par1IBlockAccess, int par2, int par3, int par4)
 	{
+		float var5 = 0.0625F;
 		int var6 = par1IBlockAccess.getBlockMetadata(par2, par3, par4);
 		float var7 = 1.0F;
 		float var8 = 1.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockWall.java b/RMCClient/minecraft/net/minecraft/src/BlockWall.java
index 5fbf6a1..2ecefc8 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockWall.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockWall.java
@@ -6,12 +6,12 @@
 {
 	public static final String[] types = new String[] { "normal", "mossy" };
 	
-	public BlockWall(int par1, Block par2Block)
+	public BlockWall(int p_i2283_1_, Block p_i2283_2_)
 	{
-		super(par1, par2Block.blockMaterial);
-		setHardness(par2Block.blockHardness);
-		setResistance(par2Block.blockResistance / 3.0F);
-		setStepSound(par2Block.stepSound);
+		super(p_i2283_1_, p_i2283_2_.blockMaterial);
+		setHardness(p_i2283_2_.blockHardness);
+		setResistance(p_i2283_2_.blockResistance / 3.0F);
+		setStepSound(p_i2283_2_.stepSound);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockWeb.java b/RMCClient/minecraft/net/minecraft/src/BlockWeb.java
index 2571501..7b261a5 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockWeb.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockWeb.java
@@ -4,9 +4,9 @@
 
 public class BlockWeb extends Block
 {
-	public BlockWeb(int par1)
+	public BlockWeb(int p_i2285_1_)
 	{
-		super(par1, Material.web);
+		super(p_i2285_1_, Material.web);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockWood.java b/RMCClient/minecraft/net/minecraft/src/BlockWood.java
index 2f2f61f..3607a65 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockWood.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockWood.java
@@ -5,12 +5,11 @@
 public class BlockWood extends Block
 {
 	public static final String[] woodType = new String[] { "oak", "spruce", "birch", "jungle" };
-	public static final String[] woodTextureTypes = new String[] { "wood", "wood_spruce", "wood_birch", "wood_jungle" };
 	private Icon[] iconArray;
 	
-	public BlockWood(int par1)
+	public BlockWood(int p_i2289_1_)
 	{
-		super(par1, Material.wood);
+		super(p_i2289_1_, Material.wood);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
@@ -38,10 +37,10 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		iconArray = new Icon[woodTextureTypes.length];
+		iconArray = new Icon[woodType.length];
 		for(int var2 = 0; var2 < iconArray.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon(woodTextureTypes[var2]);
+			iconArray[var2] = par1IconRegister.registerIcon(func_111023_E() + "_" + woodType[var2]);
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockWoodSlab.java b/RMCClient/minecraft/net/minecraft/src/BlockWoodSlab.java
index 7f51a3b..a8f769b 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockWoodSlab.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockWoodSlab.java
@@ -7,9 +7,9 @@
 {
 	public static final String[] woodType = new String[] { "oak", "spruce", "birch", "jungle" };
 	
-	public BlockWoodSlab(int par1, boolean par2)
+	public BlockWoodSlab(int p_i2288_1_, boolean p_i2288_2_)
 	{
-		super(par1, par2, Material.wood);
+		super(p_i2288_1_, p_i2288_2_, Material.wood);
 		setCreativeTab(CreativeTabs.tabBlock);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/BlockWorkbench.java b/RMCClient/minecraft/net/minecraft/src/BlockWorkbench.java
index bd83315..928b233 100644
--- a/RMCClient/minecraft/net/minecraft/src/BlockWorkbench.java
+++ b/RMCClient/minecraft/net/minecraft/src/BlockWorkbench.java
@@ -5,9 +5,9 @@
 	private Icon workbenchIconTop;
 	private Icon workbenchIconFront;
 	
-	protected BlockWorkbench(int par1)
+	protected BlockWorkbench(int p_i2291_1_)
 	{
-		super(par1, Material.wood);
+		super(p_i2291_1_, Material.wood);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
 	
@@ -28,8 +28,8 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		blockIcon = par1IconRegister.registerIcon("workbench_side");
-		workbenchIconTop = par1IconRegister.registerIcon("workbench_top");
-		workbenchIconFront = par1IconRegister.registerIcon("workbench_front");
+		blockIcon = par1IconRegister.registerIcon(func_111023_E() + "_side");
+		workbenchIconTop = par1IconRegister.registerIcon(func_111023_E() + "_top");
+		workbenchIconFront = par1IconRegister.registerIcon(func_111023_E() + "_front");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/BossStatus.java b/RMCClient/minecraft/net/minecraft/src/BossStatus.java
index b6d23d9..9a84789 100644
--- a/RMCClient/minecraft/net/minecraft/src/BossStatus.java
+++ b/RMCClient/minecraft/net/minecraft/src/BossStatus.java
@@ -9,7 +9,7 @@
 	
 	public static void func_82824_a(IBossDisplayData par0IBossDisplayData, boolean par1)
 	{
-		healthScale = (float) par0IBossDisplayData.getBossHealth() / (float) par0IBossDisplayData.getMaxHealth();
+		healthScale = par0IBossDisplayData.func_110143_aJ() / par0IBossDisplayData.func_110138_aP();
 		statusBarLength = 100;
 		bossName = par0IBossDisplayData.getEntityName();
 		field_82825_d = par1;
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableBlockDataValue.java b/RMCClient/minecraft/net/minecraft/src/CallableBlockDataValue.java
index 965d0d3..a1f3b3a 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableBlockDataValue.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableBlockDataValue.java
@@ -6,9 +6,9 @@
 {
 	final int field_85063_a;
 	
-	CallableBlockDataValue(int par1)
+	CallableBlockDataValue(int p_i1350_1_)
 	{
-		field_85063_a = par1;
+		field_85063_a = p_i1350_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableBlockLocation.java b/RMCClient/minecraft/net/minecraft/src/CallableBlockLocation.java
index f459187..93132ed 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableBlockLocation.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableBlockLocation.java
@@ -8,11 +8,11 @@
 	final int blockYCoord;
 	final int blockZCoord;
 	
-	CallableBlockLocation(int par1, int par2, int par3)
+	CallableBlockLocation(int p_i1351_1_, int p_i1351_2_, int p_i1351_3_)
 	{
-		blockXCoord = par1;
-		blockYCoord = par2;
-		blockZCoord = par3;
+		blockXCoord = p_i1351_1_;
+		blockYCoord = p_i1351_2_;
+		blockZCoord = p_i1351_3_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableBlockType.java b/RMCClient/minecraft/net/minecraft/src/CallableBlockType.java
index 9cd2c50..b86ebb5 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableBlockType.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableBlockType.java
@@ -6,9 +6,9 @@
 {
 	final int blockID;
 	
-	CallableBlockType(int par1)
+	CallableBlockType(int p_i1349_1_)
 	{
-		blockID = par1;
+		blockID = p_i1349_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableChunkPosHash.java b/RMCClient/minecraft/net/minecraft/src/CallableChunkPosHash.java
index 2ffd86c..c6d3c61 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableChunkPosHash.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableChunkPosHash.java
@@ -8,11 +8,11 @@
 	final int field_85163_b;
 	final MapGenStructure theMapStructureGenerator;
 	
-	CallableChunkPosHash(MapGenStructure par1MapGenStructure, int par2, int par3)
+	CallableChunkPosHash(MapGenStructure p_i2089_1_, int p_i2089_2_, int p_i2089_3_)
 	{
-		theMapStructureGenerator = par1MapGenStructure;
-		field_85165_a = par2;
-		field_85163_b = par3;
+		theMapStructureGenerator = p_i2089_1_;
+		field_85165_a = p_i2089_2_;
+		field_85163_b = p_i2089_3_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableClientMemoryStats.java b/RMCClient/minecraft/net/minecraft/src/CallableClientMemoryStats.java
index 40b260a..7aa910f 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableClientMemoryStats.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableClientMemoryStats.java
@@ -4,13 +4,13 @@
 
 import net.minecraft.client.Minecraft;
 
-public class CallableClientMemoryStats implements Callable
+class CallableClientMemoryStats implements Callable
 {
 	final Minecraft theMinecraft;
 	
-	public CallableClientMemoryStats(Minecraft par1)
+	CallableClientMemoryStats(Minecraft p_i1005_1_)
 	{
-		theMinecraft = par1;
+		theMinecraft = p_i1005_1_;
 	}
 	
 	@Override public Object call()
@@ -20,12 +20,6 @@
 	
 	public String callClientMemoryStats()
 	{
-		int var1 = theMinecraft.theWorld.getWorldVec3Pool().getPoolSize();
-		int var2 = 56 * var1;
-		int var3 = var2 / 1024 / 1024;
-		int var4 = theMinecraft.theWorld.getWorldVec3Pool().func_82590_d();
-		int var5 = 56 * var4;
-		int var6 = var5 / 1024 / 1024;
-		return var1 + " (" + var2 + " bytes; " + var3 + " MB) allocated, " + var4 + " (" + var5 + " bytes; " + var6 + " MB) used";
+		return theMinecraft.mcProfiler.profilingEnabled ? theMinecraft.mcProfiler.getNameOfLastSection() : "N/A (disabled)";
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableClientProfiler.java b/RMCClient/minecraft/net/minecraft/src/CallableClientProfiler.java
index e5760b4..43d97ba 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableClientProfiler.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableClientProfiler.java
@@ -4,13 +4,13 @@
 
 import net.minecraft.client.Minecraft;
 
-public class CallableClientProfiler implements Callable
+class CallableClientProfiler implements Callable
 {
 	final Minecraft theMinecraft;
 	
-	public CallableClientProfiler(Minecraft par1Minecraft)
+	CallableClientProfiler(Minecraft p_i1004_1_)
 	{
-		theMinecraft = par1Minecraft;
+		theMinecraft = p_i1004_1_;
 	}
 	
 	@Override public Object call()
@@ -20,6 +20,6 @@
 	
 	public String callClientProfilerInfo()
 	{
-		return theMinecraft.mcProfiler.profilingEnabled ? theMinecraft.mcProfiler.getNameOfLastSection() : "N/A (disabled)";
+		return Minecraft.func_142024_b(theMinecraft).func_135041_c().toString();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableConnectionName.java b/RMCClient/minecraft/net/minecraft/src/CallableConnectionName.java
new file mode 100644
index 0000000..761761b
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/CallableConnectionName.java
@@ -0,0 +1,25 @@
+package net.minecraft.src;
+
+import java.util.concurrent.Callable;
+
+class CallableConnectionName implements Callable
+{
+	final NetServerHandler field_111201_a;
+	final NetworkListenThread field_111200_b;
+	
+	CallableConnectionName(NetworkListenThread p_i1531_1_, NetServerHandler p_i1531_2_)
+	{
+		field_111200_b = p_i1531_1_;
+		field_111201_a = p_i1531_2_;
+	}
+	
+	@Override public Object call()
+	{
+		return func_111199_a();
+	}
+	
+	public String func_111199_a()
+	{
+		return field_111201_a.toString();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableCrashMemoryReport.java b/RMCClient/minecraft/net/minecraft/src/CallableCrashMemoryReport.java
index 58782ec..f8c66e7 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableCrashMemoryReport.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableCrashMemoryReport.java
@@ -6,9 +6,9 @@
 {
 	final CrashReport theCrashReport;
 	
-	CallableCrashMemoryReport(CrashReport par1CrashReport)
+	CallableCrashMemoryReport(CrashReport p_i1344_1_)
 	{
-		theCrashReport = par1CrashReport;
+		theCrashReport = p_i1344_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableEffectAmplifier.java b/RMCClient/minecraft/net/minecraft/src/CallableEffectAmplifier.java
deleted file mode 100644
index afbe370..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CallableEffectAmplifier.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package net.minecraft.src;
-
-import java.util.concurrent.Callable;
-
-class CallableEffectAmplifier implements Callable
-{
-	final PotionEffect field_102040_a;
-	final EntityLiving field_102039_b;
-	
-	CallableEffectAmplifier(EntityLiving par1EntityLiving, PotionEffect par2PotionEffect)
-	{
-		field_102039_b = par1EntityLiving;
-		field_102040_a = par2PotionEffect;
-	}
-	
-	@Override public Object call()
-	{
-		return func_102038_a();
-	}
-	
-	public String func_102038_a()
-	{
-		return field_102040_a.getAmplifier() + "";
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableEffectDuration.java b/RMCClient/minecraft/net/minecraft/src/CallableEffectDuration.java
deleted file mode 100644
index 597cdbb..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CallableEffectDuration.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package net.minecraft.src;
-
-import java.util.concurrent.Callable;
-
-class CallableEffectDuration implements Callable
-{
-	final PotionEffect field_102037_a;
-	final EntityLiving field_102036_b;
-	
-	CallableEffectDuration(EntityLiving par1EntityLiving, PotionEffect par2PotionEffect)
-	{
-		field_102036_b = par1EntityLiving;
-		field_102037_a = par2PotionEffect;
-	}
-	
-	@Override public Object call()
-	{
-		return func_102035_a();
-	}
-	
-	public String func_102035_a()
-	{
-		return field_102037_a.getDuration() + "";
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableEffectID.java b/RMCClient/minecraft/net/minecraft/src/CallableEffectID.java
deleted file mode 100644
index 7374978..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CallableEffectID.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package net.minecraft.src;
-
-import java.util.concurrent.Callable;
-
-class CallableEffectID implements Callable
-{
-	final PotionEffect field_102034_a;
-	final EntityLiving field_102033_b;
-	
-	CallableEffectID(EntityLiving par1EntityLiving, PotionEffect par2PotionEffect)
-	{
-		field_102033_b = par1EntityLiving;
-		field_102034_a = par2PotionEffect;
-	}
-	
-	@Override public Object call()
-	{
-		return func_102032_a();
-	}
-	
-	public String func_102032_a()
-	{
-		return field_102034_a.getPotionID() + "";
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableEffectIsAmbient.java b/RMCClient/minecraft/net/minecraft/src/CallableEffectIsAmbient.java
deleted file mode 100644
index 783fd0c..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CallableEffectIsAmbient.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package net.minecraft.src;
-
-import java.util.concurrent.Callable;
-
-class CallableEffectIsAmbient implements Callable
-{
-	final PotionEffect field_102046_a;
-	final EntityLiving field_102045_b;
-	
-	CallableEffectIsAmbient(EntityLiving par1EntityLiving, PotionEffect par2PotionEffect)
-	{
-		field_102045_b = par1EntityLiving;
-		field_102046_a = par2PotionEffect;
-	}
-	
-	@Override public Object call()
-	{
-		return func_102044_a();
-	}
-	
-	public String func_102044_a()
-	{
-		return field_102046_a.getIsAmbient() + "";
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableEffectIsSplash.java b/RMCClient/minecraft/net/minecraft/src/CallableEffectIsSplash.java
deleted file mode 100644
index 96cc488..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CallableEffectIsSplash.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package net.minecraft.src;
-
-import java.util.concurrent.Callable;
-
-class CallableEffectIsSplash implements Callable
-{
-	final PotionEffect field_102043_a;
-	final EntityLiving field_102042_b;
-	
-	CallableEffectIsSplash(EntityLiving par1EntityLiving, PotionEffect par2PotionEffect)
-	{
-		field_102042_b = par1EntityLiving;
-		field_102043_a = par2PotionEffect;
-	}
-	
-	@Override public Object call()
-	{
-		return func_102041_a();
-	}
-	
-	public String func_102041_a()
-	{
-		return field_102043_a.isSplashPotionEffect() + "";
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableEffectName.java b/RMCClient/minecraft/net/minecraft/src/CallableEffectName.java
deleted file mode 100644
index e41e704..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CallableEffectName.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package net.minecraft.src;
-
-import java.util.concurrent.Callable;
-
-class CallableEffectName implements Callable
-{
-	final PotionEffect field_102031_a;
-	final EntityLiving field_102030_b;
-	
-	CallableEffectName(EntityLiving par1EntityLiving, PotionEffect par2PotionEffect)
-	{
-		field_102030_b = par1EntityLiving;
-		field_102031_a = par2PotionEffect;
-	}
-	
-	@Override public Object call()
-	{
-		return func_102029_a();
-	}
-	
-	public String func_102029_a()
-	{
-		return Potion.potionTypes[field_102031_a.getPotionID()].getName();
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableEntityName.java b/RMCClient/minecraft/net/minecraft/src/CallableEntityName.java
index 4f64389..936426d 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableEntityName.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableEntityName.java
@@ -6,9 +6,9 @@
 {
 	final Entity theEntity;
 	
-	CallableEntityName(Entity par1Entity)
+	CallableEntityName(Entity p_i1580_1_)
 	{
-		theEntity = par1Entity;
+		theEntity = p_i1580_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableEntityTracker.java b/RMCClient/minecraft/net/minecraft/src/CallableEntityTracker.java
index 98ed071..7f3b381 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableEntityTracker.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableEntityTracker.java
@@ -7,10 +7,10 @@
 	final int field_96570_a;
 	final EntityTracker theEntityTracker;
 	
-	CallableEntityTracker(EntityTracker par1EntityTracker, int par2)
+	CallableEntityTracker(EntityTracker p_i1515_1_, int p_i1515_2_)
 	{
-		theEntityTracker = par1EntityTracker;
-		field_96570_a = par2;
+		theEntityTracker = p_i1515_1_;
+		field_96570_a = p_i1515_2_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableEntityType.java b/RMCClient/minecraft/net/minecraft/src/CallableEntityType.java
index 41f620a..241e586 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableEntityType.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableEntityType.java
@@ -6,9 +6,9 @@
 {
 	final Entity theEntity;
 	
-	CallableEntityType(Entity par1Entity)
+	CallableEntityType(Entity p_i1579_1_)
 	{
-		theEntity = par1Entity;
+		theEntity = p_i1579_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableGLInfo.java b/RMCClient/minecraft/net/minecraft/src/CallableGLInfo.java
index 60c9dd8..ceaacfb 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableGLInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableGLInfo.java
@@ -6,13 +6,13 @@
 
 import org.lwjgl.opengl.GL11;
 
-public class CallableGLInfo implements Callable
+class CallableGLInfo implements Callable
 {
 	final Minecraft mc;
 	
-	public CallableGLInfo(Minecraft par1Minecraft)
+	CallableGLInfo(Minecraft p_i1011_1_)
 	{
-		mc = par1Minecraft;
+		mc = p_i1011_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableIntCache.java b/RMCClient/minecraft/net/minecraft/src/CallableIntCache.java
index 75e50b1..5b1b55d 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableIntCache.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableIntCache.java
@@ -6,9 +6,9 @@
 {
 	final CrashReport theCrashReport;
 	
-	CallableIntCache(CrashReport par1CrashReport)
+	CallableIntCache(CrashReport p_i1347_1_)
 	{
-		theCrashReport = par1CrashReport;
+		theCrashReport = p_i1347_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableIsFeatureChunk.java b/RMCClient/minecraft/net/minecraft/src/CallableIsFeatureChunk.java
index 7170c04..b81a665 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableIsFeatureChunk.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableIsFeatureChunk.java
@@ -8,11 +8,11 @@
 	final int field_85167_b;
 	final MapGenStructure theMapStructureGenerator;
 	
-	CallableIsFeatureChunk(MapGenStructure par1MapGenStructure, int par2, int par3)
+	CallableIsFeatureChunk(MapGenStructure p_i2088_1_, int p_i2088_2_, int p_i2088_3_)
 	{
-		theMapStructureGenerator = par1MapGenStructure;
-		field_85169_a = par2;
-		field_85167_b = par3;
+		theMapStructureGenerator = p_i2088_1_;
+		field_85169_a = p_i2088_2_;
+		field_85167_b = p_i2088_3_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableIsModded.java b/RMCClient/minecraft/net/minecraft/src/CallableIsModded.java
index e1b9950..592607f 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableIsModded.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableIsModded.java
@@ -9,9 +9,9 @@
 {
 	final IntegratedServer theIntegratedServer;
 	
-	CallableIsModded(IntegratedServer par1IntegratedServer)
+	CallableIsModded(IntegratedServer p_i1316_1_)
 	{
-		theIntegratedServer = par1IntegratedServer;
+		theIntegratedServer = p_i1316_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableIsServerModded.java b/RMCClient/minecraft/net/minecraft/src/CallableIsServerModded.java
index 6e2a9ca..334f128 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableIsServerModded.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableIsServerModded.java
@@ -8,9 +8,9 @@
 {
 	final MinecraftServer mcServer;
 	
-	public CallableIsServerModded(MinecraftServer par1)
+	public CallableIsServerModded(MinecraftServer p_i1495_1_)
 	{
-		mcServer = par1;
+		mcServer = p_i1495_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableItemName.java b/RMCClient/minecraft/net/minecraft/src/CallableItemName.java
index 6b823f1..4f181c4 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableItemName.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableItemName.java
@@ -7,10 +7,10 @@
 	final ItemStack theItemStack;
 	final InventoryPlayer playerInventory;
 	
-	CallableItemName(InventoryPlayer par1InventoryPlayer, ItemStack par2ItemStack)
+	CallableItemName(InventoryPlayer p_i1749_1_, ItemStack p_i1749_2_)
 	{
-		playerInventory = par1InventoryPlayer;
-		theItemStack = par2ItemStack;
+		playerInventory = p_i1749_1_;
+		theItemStack = p_i1749_2_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableJVMFlags.java b/RMCClient/minecraft/net/minecraft/src/CallableJVMFlags.java
index 3d3f00b..619095a 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableJVMFlags.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableJVMFlags.java
@@ -10,9 +10,9 @@
 {
 	final CrashReport theCrashReport;
 	
-	CallableJVMFlags(CrashReport par1CrashReport)
+	CallableJVMFlags(CrashReport p_i1343_1_)
 	{
-		theCrashReport = par1CrashReport;
+		theCrashReport = p_i1343_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableJavaInfo.java b/RMCClient/minecraft/net/minecraft/src/CallableJavaInfo.java
index 53ff9c7..665437a 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableJavaInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableJavaInfo.java
@@ -6,9 +6,9 @@
 {
 	final CrashReport theCrashReport;
 	
-	CallableJavaInfo(CrashReport par1CrashReport)
+	CallableJavaInfo(CrashReport p_i1340_1_)
 	{
-		theCrashReport = par1CrashReport;
+		theCrashReport = p_i1340_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableJavaInfo2.java b/RMCClient/minecraft/net/minecraft/src/CallableJavaInfo2.java
index b56b8b7..ac98fe9 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableJavaInfo2.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableJavaInfo2.java
@@ -6,9 +6,9 @@
 {
 	final CrashReport theCrashReport;
 	
-	CallableJavaInfo2(CrashReport par1CrashReport)
+	CallableJavaInfo2(CrashReport p_i1341_1_)
 	{
-		theCrashReport = par1CrashReport;
+		theCrashReport = p_i1341_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLWJGLVersion.java b/RMCClient/minecraft/net/minecraft/src/CallableLWJGLVersion.java
index d3273a0..44638e3 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLWJGLVersion.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLWJGLVersion.java
@@ -6,13 +6,13 @@
 
 import org.lwjgl.Sys;
 
-public class CallableLWJGLVersion implements Callable
+class CallableLWJGLVersion implements Callable
 {
 	final Minecraft mc;
 	
-	public CallableLWJGLVersion(Minecraft par1Minecraft)
+	CallableLWJGLVersion(Minecraft p_i1010_1_)
 	{
-		mc = par1Minecraft;
+		mc = p_i1010_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLaunchedVersion.java b/RMCClient/minecraft/net/minecraft/src/CallableLaunchedVersion.java
new file mode 100644
index 0000000..5033721
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLaunchedVersion.java
@@ -0,0 +1,25 @@
+package net.minecraft.src;
+
+import java.util.concurrent.Callable;
+
+import net.minecraft.client.Minecraft;
+
+class CallableLaunchedVersion implements Callable
+{
+	final Minecraft mc;
+	
+	CallableLaunchedVersion(Minecraft p_i1009_1_)
+	{
+		mc = p_i1009_1_;
+	}
+	
+	@Override public Object call()
+	{
+		return getLWJGLVersion();
+	}
+	
+	public String getLWJGLVersion()
+	{
+		return Minecraft.func_110431_a(mc);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLevelDimension.java b/RMCClient/minecraft/net/minecraft/src/CallableLevelDimension.java
index 62ce176..5f37505 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLevelDimension.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLevelDimension.java
@@ -6,9 +6,9 @@
 {
 	final WorldInfo worldInfoInstance;
 	
-	CallableLevelDimension(WorldInfo par1WorldInfo)
+	CallableLevelDimension(WorldInfo p_i2153_1_)
 	{
-		worldInfoInstance = par1WorldInfo;
+		worldInfoInstance = p_i2153_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLevelGamemode.java b/RMCClient/minecraft/net/minecraft/src/CallableLevelGamemode.java
index d96b76a..eaccfd4 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLevelGamemode.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLevelGamemode.java
@@ -6,9 +6,9 @@
 {
 	final WorldInfo worldInfoInstance;
 	
-	CallableLevelGamemode(WorldInfo par1WorldInfo)
+	CallableLevelGamemode(WorldInfo p_i2156_1_)
 	{
-		worldInfoInstance = par1WorldInfo;
+		worldInfoInstance = p_i2156_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLevelGenerator.java b/RMCClient/minecraft/net/minecraft/src/CallableLevelGenerator.java
index 8f51133..caa8e5e 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLevelGenerator.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLevelGenerator.java
@@ -6,9 +6,9 @@
 {
 	final WorldInfo worldInfoInstance;
 	
-	CallableLevelGenerator(WorldInfo par1WorldInfo)
+	CallableLevelGenerator(WorldInfo p_i2149_1_)
 	{
-		worldInfoInstance = par1WorldInfo;
+		worldInfoInstance = p_i2149_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLevelGeneratorOptions.java b/RMCClient/minecraft/net/minecraft/src/CallableLevelGeneratorOptions.java
index 8509d55..9877825 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLevelGeneratorOptions.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLevelGeneratorOptions.java
@@ -6,9 +6,9 @@
 {
 	final WorldInfo worldInfoInstance;
 	
-	CallableLevelGeneratorOptions(WorldInfo par1WorldInfo)
+	CallableLevelGeneratorOptions(WorldInfo p_i2150_1_)
 	{
-		worldInfoInstance = par1WorldInfo;
+		worldInfoInstance = p_i2150_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLevelSeed.java b/RMCClient/minecraft/net/minecraft/src/CallableLevelSeed.java
index be44d7e..0fc5437 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLevelSeed.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLevelSeed.java
@@ -6,9 +6,9 @@
 {
 	final WorldInfo worldInfoInstance;
 	
-	CallableLevelSeed(WorldInfo par1WorldInfo)
+	CallableLevelSeed(WorldInfo p_i2148_1_)
 	{
-		worldInfoInstance = par1WorldInfo;
+		worldInfoInstance = p_i2148_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLevelSpawnLocation.java b/RMCClient/minecraft/net/minecraft/src/CallableLevelSpawnLocation.java
index 2a01b70..e34d7d4 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLevelSpawnLocation.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLevelSpawnLocation.java
@@ -6,9 +6,9 @@
 {
 	final WorldInfo worldInfoInstance;
 	
-	CallableLevelSpawnLocation(WorldInfo par1WorldInfo)
+	CallableLevelSpawnLocation(WorldInfo p_i2151_1_)
 	{
-		worldInfoInstance = par1WorldInfo;
+		worldInfoInstance = p_i2151_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLevelStorageVersion.java b/RMCClient/minecraft/net/minecraft/src/CallableLevelStorageVersion.java
index 37cd64c..9be2892 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLevelStorageVersion.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLevelStorageVersion.java
@@ -6,9 +6,9 @@
 {
 	final WorldInfo worldInfoInstance;
 	
-	CallableLevelStorageVersion(WorldInfo par1WorldInfo)
+	CallableLevelStorageVersion(WorldInfo p_i2154_1_)
 	{
-		worldInfoInstance = par1WorldInfo;
+		worldInfoInstance = p_i2154_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLevelTime.java b/RMCClient/minecraft/net/minecraft/src/CallableLevelTime.java
index 91b497d..bbb2553 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLevelTime.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLevelTime.java
@@ -6,9 +6,9 @@
 {
 	final WorldInfo worldInfoInstance;
 	
-	CallableLevelTime(WorldInfo par1WorldInfo)
+	CallableLevelTime(WorldInfo p_i2152_1_)
 	{
-		worldInfoInstance = par1WorldInfo;
+		worldInfoInstance = p_i2152_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLevelWeather.java b/RMCClient/minecraft/net/minecraft/src/CallableLevelWeather.java
index 64d2701..2c6999d 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLevelWeather.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLevelWeather.java
@@ -6,9 +6,9 @@
 {
 	final WorldInfo worldInfoInstance;
 	
-	CallableLevelWeather(WorldInfo par1WorldInfo)
+	CallableLevelWeather(WorldInfo p_i2155_1_)
 	{
-		worldInfoInstance = par1WorldInfo;
+		worldInfoInstance = p_i2155_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLvl1.java b/RMCClient/minecraft/net/minecraft/src/CallableLvl1.java
index bcb1348..c6e9409 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLvl1.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLvl1.java
@@ -7,10 +7,10 @@
 	final int field_85179_a;
 	final World theWorld;
 	
-	CallableLvl1(World par1World, int par2)
+	CallableLvl1(World p_i1950_1_, int p_i1950_2_)
 	{
-		theWorld = par1World;
-		field_85179_a = par2;
+		theWorld = p_i1950_1_;
+		field_85179_a = p_i1950_2_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLvl2.java b/RMCClient/minecraft/net/minecraft/src/CallableLvl2.java
index b478bda..6478e16 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLvl2.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLvl2.java
@@ -6,9 +6,9 @@
 {
 	final World theWorld;
 	
-	CallableLvl2(World par1World)
+	CallableLvl2(World p_i1951_1_)
 	{
-		theWorld = par1World;
+		theWorld = p_i1951_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableLvl3.java b/RMCClient/minecraft/net/minecraft/src/CallableLvl3.java
index 5576bd1..c43fa90 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableLvl3.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableLvl3.java
@@ -6,9 +6,9 @@
 {
 	final World theWorld;
 	
-	CallableLvl3(World par1World)
+	CallableLvl3(World p_i1952_1_)
 	{
-		theWorld = par1World;
+		theWorld = p_i1952_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableMPL1.java b/RMCClient/minecraft/net/minecraft/src/CallableMPL1.java
index 1d12771..2d78f6a 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableMPL1.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableMPL1.java
@@ -6,9 +6,9 @@
 {
 	final WorldClient theWorldClient;
 	
-	CallableMPL1(WorldClient par1WorldClient)
+	CallableMPL1(WorldClient p_i1186_1_)
 	{
-		theWorldClient = par1WorldClient;
+		theWorldClient = p_i1186_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableMPL2.java b/RMCClient/minecraft/net/minecraft/src/CallableMPL2.java
index 370b7cc..f9ea1dc 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableMPL2.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableMPL2.java
@@ -6,9 +6,9 @@
 {
 	final WorldClient theWorldClient;
 	
-	CallableMPL2(WorldClient par1WorldClient)
+	CallableMPL2(WorldClient p_i1187_1_)
 	{
-		theWorldClient = par1WorldClient;
+		theWorldClient = p_i1187_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableMemoryInfo.java b/RMCClient/minecraft/net/minecraft/src/CallableMemoryInfo.java
index 3fd9e2f..c30db8f 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableMemoryInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableMemoryInfo.java
@@ -6,9 +6,9 @@
 {
 	final CrashReport theCrashReport;
 	
-	CallableMemoryInfo(CrashReport par1CrashReport)
+	CallableMemoryInfo(CrashReport p_i1342_1_)
 	{
-		theCrashReport = par1CrashReport;
+		theCrashReport = p_i1342_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableMinecraftVersion.java b/RMCClient/minecraft/net/minecraft/src/CallableMinecraftVersion.java
index 6e0ea19..bea64d0 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableMinecraftVersion.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableMinecraftVersion.java
@@ -6,9 +6,9 @@
 {
 	final CrashReport theCrashReport;
 	
-	CallableMinecraftVersion(CrashReport par1CrashReport)
+	CallableMinecraftVersion(CrashReport p_i1338_1_)
 	{
-		theCrashReport = par1CrashReport;
+		theCrashReport = p_i1338_1_;
 	}
 	
 	@Override public Object call()
@@ -18,6 +18,6 @@
 	
 	public String minecraftVersion()
 	{
-		return "1.5.2";
+		return "1.6.2";
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableModded.java b/RMCClient/minecraft/net/minecraft/src/CallableModded.java
index fbdeeef..1445cf6 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableModded.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableModded.java
@@ -5,13 +5,13 @@
 import net.minecraft.client.ClientBrandRetriever;
 import net.minecraft.client.Minecraft;
 
-public class CallableModded implements Callable
+class CallableModded implements Callable
 {
 	final Minecraft mc;
 	
-	public CallableModded(Minecraft par1Minecraft)
+	CallableModded(Minecraft p_i1012_1_)
 	{
-		mc = par1Minecraft;
+		mc = p_i1012_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableMouseLocation.java b/RMCClient/minecraft/net/minecraft/src/CallableMouseLocation.java
index a759e00..576bfba 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableMouseLocation.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableMouseLocation.java
@@ -10,11 +10,11 @@
 	final int field_90024_b;
 	final EntityRenderer theEntityRenderer;
 	
-	CallableMouseLocation(EntityRenderer par1EntityRenderer, int par2, int par3)
+	CallableMouseLocation(EntityRenderer p_i1244_1_, int p_i1244_2_, int p_i1244_3_)
 	{
-		theEntityRenderer = par1EntityRenderer;
-		field_90026_a = par2;
-		field_90024_b = par3;
+		theEntityRenderer = p_i1244_1_;
+		field_90026_a = p_i1244_2_;
+		field_90024_b = p_i1244_3_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableOSInfo.java b/RMCClient/minecraft/net/minecraft/src/CallableOSInfo.java
index 884491c..88c231e 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableOSInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableOSInfo.java
@@ -6,9 +6,9 @@
 {
 	final CrashReport theCrashReport;
 	
-	CallableOSInfo(CrashReport par1CrashReport)
+	CallableOSInfo(CrashReport p_i1339_1_)
 	{
-		theCrashReport = par1CrashReport;
+		theCrashReport = p_i1339_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallablePacketClass.java b/RMCClient/minecraft/net/minecraft/src/CallablePacketClass.java
index 2671d2f..24ffdbb 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallablePacketClass.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallablePacketClass.java
@@ -7,10 +7,10 @@
 	final Packet thePacket;
 	final NetServerHandler theNetServerHandler;
 	
-	CallablePacketClass(NetServerHandler par1NetServerHandler, Packet par2Packet)
+	CallablePacketClass(NetServerHandler p_i1529_1_, Packet p_i1529_2_)
 	{
-		theNetServerHandler = par1NetServerHandler;
-		thePacket = par2Packet;
+		theNetServerHandler = p_i1529_1_;
+		thePacket = p_i1529_2_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallablePacketID.java b/RMCClient/minecraft/net/minecraft/src/CallablePacketID.java
index ee2502f..5094ab2 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallablePacketID.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallablePacketID.java
@@ -7,10 +7,10 @@
 	final Packet thePacket;
 	final NetServerHandler theNetServerHandler;
 	
-	CallablePacketID(NetServerHandler par1NetServerHandler, Packet par2Packet)
+	CallablePacketID(NetServerHandler p_i1528_1_, Packet p_i1528_2_)
 	{
-		theNetServerHandler = par1NetServerHandler;
-		thePacket = par2Packet;
+		theNetServerHandler = p_i1528_1_;
+		thePacket = p_i1528_2_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableParticlePositionInfo.java b/RMCClient/minecraft/net/minecraft/src/CallableParticlePositionInfo.java
index 57c10b8..f5a3e88 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableParticlePositionInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableParticlePositionInfo.java
@@ -9,12 +9,12 @@
 	final double field_85100_c;
 	final RenderGlobal globalRenderer;
 	
-	CallableParticlePositionInfo(RenderGlobal par1RenderGlobal, double par2, double par4, double par6)
+	CallableParticlePositionInfo(RenderGlobal p_i1248_1_, double p_i1248_2_, double p_i1248_4_, double p_i1248_6_)
 	{
-		globalRenderer = par1RenderGlobal;
-		field_85101_a = par2;
-		field_85099_b = par4;
-		field_85100_c = par6;
+		globalRenderer = p_i1248_1_;
+		field_85101_a = p_i1248_2_;
+		field_85099_b = p_i1248_4_;
+		field_85100_c = p_i1248_6_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableParticleScreenName.java b/RMCClient/minecraft/net/minecraft/src/CallableParticleScreenName.java
index 956d7fb..ce0ac49 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableParticleScreenName.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableParticleScreenName.java
@@ -4,13 +4,13 @@
 
 import net.minecraft.client.Minecraft;
 
-public class CallableParticleScreenName implements Callable
+class CallableParticleScreenName implements Callable
 {
 	final Minecraft theMinecraft;
 	
-	public CallableParticleScreenName(Minecraft par1Minecraft)
+	CallableParticleScreenName(Minecraft p_i1008_1_)
 	{
-		theMinecraft = par1Minecraft;
+		theMinecraft = p_i1008_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableScreenName.java b/RMCClient/minecraft/net/minecraft/src/CallableScreenName.java
index 18825d4..c768e89 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableScreenName.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableScreenName.java
@@ -6,9 +6,9 @@
 {
 	final EntityRenderer entityRender;
 	
-	CallableScreenName(EntityRenderer par1EntityRenderer)
+	CallableScreenName(EntityRenderer p_i1243_1_)
 	{
-		entityRender = par1EntityRenderer;
+		entityRender = p_i1243_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableScreenSize.java b/RMCClient/minecraft/net/minecraft/src/CallableScreenSize.java
index 7449180..48d099e 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableScreenSize.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableScreenSize.java
@@ -7,10 +7,10 @@
 	final ScaledResolution theScaledResolution;
 	final EntityRenderer theEntityRenderer;
 	
-	CallableScreenSize(EntityRenderer par1EntityRenderer, ScaledResolution par2ScaledResolution)
+	CallableScreenSize(EntityRenderer p_i1245_1_, ScaledResolution p_i1245_2_)
 	{
-		theEntityRenderer = par1EntityRenderer;
-		theScaledResolution = par2ScaledResolution;
+		theEntityRenderer = p_i1245_1_;
+		theScaledResolution = p_i1245_2_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableServerMemoryStats.java b/RMCClient/minecraft/net/minecraft/src/CallableServerMemoryStats.java
index 1e49d17..68c2ada 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableServerMemoryStats.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableServerMemoryStats.java
@@ -8,9 +8,9 @@
 {
 	final MinecraftServer mcServer;
 	
-	public CallableServerMemoryStats(MinecraftServer par1)
+	public CallableServerMemoryStats(MinecraftServer p_i1497_1_)
 	{
-		mcServer = par1;
+		mcServer = p_i1497_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableServerProfiler.java b/RMCClient/minecraft/net/minecraft/src/CallableServerProfiler.java
index a2ec2bc..42c6cb6 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableServerProfiler.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableServerProfiler.java
@@ -8,9 +8,9 @@
 {
 	final MinecraftServer mcServer;
 	
-	public CallableServerProfiler(MinecraftServer par1)
+	public CallableServerProfiler(MinecraftServer p_i1496_1_)
 	{
-		mcServer = par1;
+		mcServer = p_i1496_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableServerType.java b/RMCClient/minecraft/net/minecraft/src/CallableServerType.java
index 6a279f2..fce4115 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableServerType.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableServerType.java
@@ -6,9 +6,9 @@
 {
 	final DedicatedServer theDedicatedServer;
 	
-	CallableServerType(DedicatedServer par1DedicatedServer)
+	CallableServerType(DedicatedServer p_i1507_1_)
 	{
-		theDedicatedServer = par1DedicatedServer;
+		theDedicatedServer = p_i1507_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableStructureType.java b/RMCClient/minecraft/net/minecraft/src/CallableStructureType.java
index 5a8ecf8..46ee2cd 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableStructureType.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableStructureType.java
@@ -6,9 +6,9 @@
 {
 	final MapGenStructure theMapStructureGenerator;
 	
-	CallableStructureType(MapGenStructure par1MapGenStructure)
+	CallableStructureType(MapGenStructure p_i2090_1_)
 	{
-		theMapStructureGenerator = par1MapGenStructure;
+		theMapStructureGenerator = p_i2090_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableSuspiciousClasses.java b/RMCClient/minecraft/net/minecraft/src/CallableSuspiciousClasses.java
index 1eee2c3..9c72248 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableSuspiciousClasses.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableSuspiciousClasses.java
@@ -12,17 +12,23 @@
 {
 	final CrashReport theCrashReport;
 	
-	CallableSuspiciousClasses(CrashReport par1CrashReport)
+	CallableSuspiciousClasses(CrashReport p_i1346_1_)
 	{
-		theCrashReport = par1CrashReport;
+		theCrashReport = p_i1346_1_;
 	}
 	
 	@Override public Object call()
 	{
-		return callSuspiciousClasses();
+		try
+		{
+			return callSuspiciousClasses();
+		} catch(Exception ex)
+		{
+			return null;
+		}
 	}
 	
-	public String callSuspiciousClasses()
+	public String callSuspiciousClasses() throws SecurityException, NoSuchFieldException, IllegalAccessException, IllegalArgumentException
 	{
 		StringBuilder var1 = new StringBuilder();
 		ArrayList var3;
@@ -47,11 +53,11 @@
 			if(var9 != null)
 			{
 				String var10 = var9.getCanonicalName();
-				if(var10 != null && !var10.startsWith("org.lwjgl.") && !var10.startsWith("paulscode.") && !var10.startsWith("org.bouncycastle.") && !var10.startsWith("argo.") && !var10.startsWith("com.jcraft.") && !var10.startsWith("com.fasterxml.") && !var10.equals("util.GLX"))
+				if(var10 != null && !var10.startsWith("org.lwjgl.") && !var10.startsWith("paulscode.") && !var10.startsWith("org.bouncycastle.") && !var10.startsWith("argo.") && !var10.startsWith("com.jcraft.") && !var10.startsWith("com.fasterxml.") && !var10.startsWith("com.google.") && !var10.startsWith("joptsimple.") && !var10.startsWith("org.apache.") && !var10.equals("util.GLX"))
 				{
 					if(var5)
 					{
-						if(var10.length() <= 3 || var10.equals("net.minecraft.client.MinecraftApplet") || var10.equals("net.minecraft.client.Minecraft") || var10.equals("net.minecraft.client.ClientBrandRetriever") || var10.equals("net.minecraft.server.MinecraftServer"))
+						if(var10.length() <= 3 || var10.equals("net.minecraft.client.main.Main") || var10.equals("net.minecraft.client.Minecraft") || var10.equals("net.minecraft.client.ClientBrandRetriever") || var10.equals("net.minecraft.server.MinecraftServer"))
 						{
 							continue;
 						}
@@ -83,15 +89,15 @@
 					{
 						var6.put(var12, Integer.valueOf(1));
 					}
-					if(var7 != var12 && var7.length() > 0)
+					if(!var7.equals(var12) && var7.length() > 0)
 					{
 						var1.append("], ");
 					}
-					if(!var4 && var7 == var12)
+					if(!var4 && var7.equals(var12))
 					{
 						var1.append(", ");
 					}
-					if(var7 != var12)
+					if(!var7.equals(var12))
 					{
 						var1.append("[");
 						var1.append(var12);
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableTagCompound1.java b/RMCClient/minecraft/net/minecraft/src/CallableTagCompound1.java
index 0dff5f4..fb69b2b 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableTagCompound1.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableTagCompound1.java
@@ -7,10 +7,10 @@
 	final String field_82585_a;
 	final NBTTagCompound theNBTTagCompound;
 	
-	CallableTagCompound1(NBTTagCompound par1NBTTagCompound, String par2Str)
+	CallableTagCompound1(NBTTagCompound p_i1373_1_, String p_i1373_2_)
 	{
-		theNBTTagCompound = par1NBTTagCompound;
-		field_82585_a = par2Str;
+		theNBTTagCompound = p_i1373_1_;
+		field_82585_a = p_i1373_2_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableTagCompound2.java b/RMCClient/minecraft/net/minecraft/src/CallableTagCompound2.java
index 70e9eef..c394281 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableTagCompound2.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableTagCompound2.java
@@ -7,10 +7,10 @@
 	final int field_82588_a;
 	final NBTTagCompound theNBTTagCompound;
 	
-	CallableTagCompound2(NBTTagCompound par1NBTTagCompound, int par2)
+	CallableTagCompound2(NBTTagCompound p_i1374_1_, int p_i1374_2_)
 	{
-		theNBTTagCompound = par1NBTTagCompound;
-		field_82588_a = par2;
+		theNBTTagCompound = p_i1374_1_;
+		field_82588_a = p_i1374_2_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableTexturePack.java b/RMCClient/minecraft/net/minecraft/src/CallableTexturePack.java
index 186b082..1665189 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableTexturePack.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableTexturePack.java
@@ -4,13 +4,13 @@
 
 import net.minecraft.client.Minecraft;
 
-public class CallableTexturePack implements Callable
+class CallableTexturePack implements Callable
 {
 	final Minecraft theMinecraft;
 	
-	public CallableTexturePack(Minecraft par1Minecraft)
+	CallableTexturePack(Minecraft p_i1003_1_)
 	{
-		theMinecraft = par1Minecraft;
+		theMinecraft = p_i1003_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableTickingScreenName.java b/RMCClient/minecraft/net/minecraft/src/CallableTickingScreenName.java
deleted file mode 100644
index a55c812..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CallableTickingScreenName.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package net.minecraft.src;
-
-import java.util.concurrent.Callable;
-
-import net.minecraft.client.Minecraft;
-
-public class CallableTickingScreenName implements Callable
-{
-	final Minecraft mc;
-	
-	public CallableTickingScreenName(Minecraft par1Minecraft)
-	{
-		mc = par1Minecraft;
-	}
-	
-	@Override public Object call()
-	{
-		return getLWJGLVersion();
-	}
-	
-	public String getLWJGLVersion()
-	{
-		return mc.currentScreen.getClass().getCanonicalName();
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableTileEntityData.java b/RMCClient/minecraft/net/minecraft/src/CallableTileEntityData.java
index 2e907ca..22c0f07 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableTileEntityData.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableTileEntityData.java
@@ -6,9 +6,9 @@
 {
 	final TileEntity theTileEntity;
 	
-	CallableTileEntityData(TileEntity par1TileEntity)
+	CallableTileEntityData(TileEntity p_i2295_1_)
 	{
-		theTileEntity = par1TileEntity;
+		theTileEntity = p_i2295_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableTileEntityID.java b/RMCClient/minecraft/net/minecraft/src/CallableTileEntityID.java
index 63ecf1d..6f1a2ed 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableTileEntityID.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableTileEntityID.java
@@ -6,9 +6,9 @@
 {
 	final TileEntity theTileEntity;
 	
-	CallableTileEntityID(TileEntity par1TileEntity)
+	CallableTileEntityID(TileEntity p_i2294_1_)
 	{
-		theTileEntity = par1TileEntity;
+		theTileEntity = p_i2294_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableTileEntityName.java b/RMCClient/minecraft/net/minecraft/src/CallableTileEntityName.java
index 90de4a2..dab28a6 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableTileEntityName.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableTileEntityName.java
@@ -6,9 +6,9 @@
 {
 	final TileEntity theTileEntity;
 	
-	CallableTileEntityName(TileEntity par1TileEntity)
+	CallableTileEntityName(TileEntity p_i2293_1_)
 	{
-		theTileEntity = par1TileEntity;
+		theTileEntity = p_i2293_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableType.java b/RMCClient/minecraft/net/minecraft/src/CallableType.java
index dea591a..e9b5f20 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableType.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableType.java
@@ -6,9 +6,9 @@
 {
 	final DedicatedServer theDecitatedServer;
 	
-	CallableType(DedicatedServer par1DedicatedServer)
+	CallableType(DedicatedServer p_i1506_1_)
 	{
-		theDecitatedServer = par1DedicatedServer;
+		theDecitatedServer = p_i1506_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableType2.java b/RMCClient/minecraft/net/minecraft/src/CallableType2.java
index 8f54ade..ad2956c 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableType2.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableType2.java
@@ -4,13 +4,13 @@
 
 import net.minecraft.client.Minecraft;
 
-public class CallableType2 implements Callable
+class CallableType2 implements Callable
 {
 	final Minecraft mc;
 	
-	public CallableType2(Minecraft par1Minecraft)
+	CallableType2(Minecraft p_i1013_1_)
 	{
-		mc = par1Minecraft;
+		mc = p_i1013_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableType3.java b/RMCClient/minecraft/net/minecraft/src/CallableType3.java
index 2df4989..601dce2 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableType3.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableType3.java
@@ -6,9 +6,9 @@
 {
 	final IntegratedServer theIntegratedServer;
 	
-	CallableType3(IntegratedServer par1IntegratedServer)
+	CallableType3(IntegratedServer p_i1315_1_)
 	{
-		theIntegratedServer = par1IntegratedServer;
+		theIntegratedServer = p_i1315_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CallableUpdatingScreenName.java b/RMCClient/minecraft/net/minecraft/src/CallableUpdatingScreenName.java
index 69eb98e..2257447 100644
--- a/RMCClient/minecraft/net/minecraft/src/CallableUpdatingScreenName.java
+++ b/RMCClient/minecraft/net/minecraft/src/CallableUpdatingScreenName.java
@@ -4,13 +4,13 @@
 
 import net.minecraft.client.Minecraft;
 
-public class CallableUpdatingScreenName implements Callable
+class CallableUpdatingScreenName implements Callable
 {
 	final Minecraft theMinecraft;
 	
-	public CallableUpdatingScreenName(Minecraft par1Minecraft)
+	CallableUpdatingScreenName(Minecraft p_i1007_1_)
 	{
-		theMinecraft = par1Minecraft;
+		theMinecraft = p_i1007_1_;
 	}
 	
 	@Override public Object call()
diff --git a/RMCClient/minecraft/net/minecraft/src/CanvasCrashReport.java b/RMCClient/minecraft/net/minecraft/src/CanvasCrashReport.java
deleted file mode 100644
index 7c27a86..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CanvasCrashReport.java
+++ /dev/null
@@ -1,15 +0,0 @@
-package net.minecraft.src;
-
-import java.awt.Canvas;
-import java.awt.Dimension;
-
-class CanvasCrashReport extends Canvas
-{
-	private static final long serialVersionUID = 1L;
-	
-	public CanvasCrashReport(int par1)
-	{
-		setPreferredSize(new Dimension(par1, par1));
-		setMinimumSize(new Dimension(par1, par1));
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CanvasMinecraftApplet.java b/RMCClient/minecraft/net/minecraft/src/CanvasMinecraftApplet.java
deleted file mode 100644
index 6effeb9..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CanvasMinecraftApplet.java
+++ /dev/null
@@ -1,28 +0,0 @@
-package net.minecraft.src;
-
-import java.awt.Canvas;
-
-import net.minecraft.client.MinecraftApplet;
-
-public class CanvasMinecraftApplet extends Canvas
-{
-	private static final long serialVersionUID = 1L;
-	final MinecraftApplet mcApplet;
-	
-	public CanvasMinecraftApplet(MinecraftApplet par1MinecraftApplet)
-	{
-		mcApplet = par1MinecraftApplet;
-	}
-	
-	@Override public synchronized void addNotify()
-	{
-		super.addNotify();
-		mcApplet.startMainThread();
-	}
-	
-	@Override public synchronized void removeNotify()
-	{
-		mcApplet.shutdown();
-		super.removeNotify();
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CanvasMojangLogo.java b/RMCClient/minecraft/net/minecraft/src/CanvasMojangLogo.java
deleted file mode 100644
index 4fa2526..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CanvasMojangLogo.java
+++ /dev/null
@@ -1,36 +0,0 @@
-package net.minecraft.src;
-
-import java.awt.Canvas;
-import java.awt.Dimension;
-import java.awt.Graphics;
-import java.awt.image.BufferedImage;
-import java.awt.image.ImageObserver;
-import java.io.IOException;
-
-import javax.imageio.ImageIO;
-
-class CanvasMojangLogo extends Canvas
-{
-	private static final long serialVersionUID = 1L;
-	private BufferedImage logo;
-	
-	public CanvasMojangLogo()
-	{
-		try
-		{
-			logo = ImageIO.read(PanelCrashReport.class.getResource("/gui/crash_logo.png"));
-		} catch(IOException var2)
-		{
-			;
-		}
-		byte var1 = 100;
-		setPreferredSize(new Dimension(var1, var1));
-		setMinimumSize(new Dimension(var1, var1));
-	}
-	
-	@Override public void paint(Graphics par1Graphics)
-	{
-		super.paint(par1Graphics);
-		par1Graphics.drawImage(logo, getWidth() / 2 - logo.getWidth() / 2, 32, (ImageObserver) null);
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/ChatClickData.java b/RMCClient/minecraft/net/minecraft/src/ChatClickData.java
index f9cbee2..1a629ec 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChatClickData.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChatClickData.java
@@ -17,13 +17,13 @@
 	private final String field_78310_f;
 	private final String clickedUrl;
 	
-	public ChatClickData(FontRenderer par1FontRenderer, ChatLine par2ChatLine, int par3, int par4)
+	public ChatClickData(FontRenderer p_i1037_1_, ChatLine p_i1037_2_, int p_i1037_3_, int p_i1037_4_)
 	{
-		fontR = par1FontRenderer;
-		line = par2ChatLine;
-		field_78312_d = par3;
-		field_78313_e = par4;
-		field_78310_f = par1FontRenderer.trimStringToWidth(par2ChatLine.getChatLineString(), par3);
+		fontR = p_i1037_1_;
+		line = p_i1037_2_;
+		field_78312_d = p_i1037_3_;
+		field_78313_e = p_i1037_4_;
+		field_78310_f = p_i1037_1_.trimStringToWidth(p_i1037_2_.getChatLineString(), p_i1037_3_);
 		clickedUrl = findClickedUrl();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ChatLine.java b/RMCClient/minecraft/net/minecraft/src/ChatLine.java
index 2ad958b..7c61c39 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChatLine.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChatLine.java
@@ -6,11 +6,11 @@
 	private final String lineString;
 	private final int chatLineID;
 	
-	public ChatLine(int par1, String par2Str, int par3)
+	public ChatLine(int p_i1000_1_, String p_i1000_2_, int p_i1000_3_)
 	{
-		lineString = par2Str;
-		updateCounterCreated = par1;
-		chatLineID = par3;
+		lineString = p_i1000_2_;
+		updateCounterCreated = p_i1000_1_;
+		chatLineID = p_i1000_3_;
 	}
 	
 	public int getChatLineID()
diff --git a/RMCClient/minecraft/net/minecraft/src/ChatMessageComponent.java b/RMCClient/minecraft/net/minecraft/src/ChatMessageComponent.java
new file mode 100644
index 0000000..f809991
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ChatMessageComponent.java
@@ -0,0 +1,329 @@
+package net.minecraft.src;
+
+import java.util.Iterator;
+import java.util.List;
+
+public class ChatMessageComponent
+{
+	private static final Gson field_111089_a = new GsonBuilder().registerTypeAdapter(ChatMessageComponent.class, new MessageComponentSerializer()).create();
+	private EnumChatFormatting field_111087_b;
+	private Boolean field_111088_c;
+	private Boolean field_111085_d;
+	private Boolean field_111086_e;
+	private Boolean field_111083_f;
+	private String field_111084_g;
+	private String field_111090_h;
+	private List field_111091_i;
+	
+	public ChatMessageComponent()
+	{
+	}
+	
+	public ChatMessageComponent(ChatMessageComponent p_i1399_1_)
+	{
+		field_111087_b = p_i1399_1_.field_111087_b;
+		field_111088_c = p_i1399_1_.field_111088_c;
+		field_111085_d = p_i1399_1_.field_111085_d;
+		field_111086_e = p_i1399_1_.field_111086_e;
+		field_111083_f = p_i1399_1_.field_111083_f;
+		field_111084_g = p_i1399_1_.field_111084_g;
+		field_111090_h = p_i1399_1_.field_111090_h;
+		field_111091_i = p_i1399_1_.field_111091_i == null ? null : Lists.newArrayList(p_i1399_1_.field_111091_i);
+	}
+	
+	public Boolean func_111058_b()
+	{
+		return field_111088_c;
+	}
+	
+	public ChatMessageComponent func_111059_a(EnumChatFormatting p_111059_1_)
+	{
+		if(p_111059_1_ != null && !p_111059_1_.func_96302_c()) throw new IllegalArgumentException("Argument is not a valid color!");
+		else
+		{
+			field_111087_b = p_111059_1_;
+			return this;
+		}
+	}
+	
+	public ChatMessageComponent func_111061_d(Boolean p_111061_1_)
+	{
+		field_111083_f = p_111061_1_;
+		return this;
+	}
+	
+	public String func_111062_i()
+	{
+		return field_111089_a.toJson(this);
+	}
+	
+	public ChatMessageComponent func_111063_b(Boolean p_111063_1_)
+	{
+		field_111085_d = p_111063_1_;
+		return this;
+	}
+	
+	public Boolean func_111064_c()
+	{
+		return field_111085_d;
+	}
+	
+	public EnumChatFormatting func_111065_a()
+	{
+		return field_111087_b;
+	}
+	
+	public Boolean func_111067_d()
+	{
+		return field_111086_e;
+	}
+	
+	public String func_111068_a(boolean p_111068_1_)
+	{
+		return func_111070_a(p_111068_1_, (EnumChatFormatting) null, false, false, false, false);
+	}
+	
+	protected List func_111069_h()
+	{
+		return field_111091_i;
+	}
+	
+	public String func_111070_a(boolean p_111070_1_, EnumChatFormatting p_111070_2_, boolean p_111070_3_, boolean p_111070_4_, boolean p_111070_5_, boolean p_111070_6_)
+	{
+		StringBuilder var7 = new StringBuilder();
+		EnumChatFormatting var8 = field_111087_b == null ? p_111070_2_ : field_111087_b;
+		boolean var9 = field_111088_c == null ? p_111070_3_ : field_111088_c.booleanValue();
+		boolean var10 = field_111085_d == null ? p_111070_4_ : field_111085_d.booleanValue();
+		boolean var11 = field_111086_e == null ? p_111070_5_ : field_111086_e.booleanValue();
+		boolean var12 = field_111083_f == null ? p_111070_6_ : field_111083_f.booleanValue();
+		if(field_111090_h != null)
+		{
+			if(p_111070_1_)
+			{
+				func_111060_a(var7, var8, var9, var10, var11, var12);
+			}
+			if(field_111091_i != null)
+			{
+				String[] var13 = new String[field_111091_i.size()];
+				for(int var14 = 0; var14 < field_111091_i.size(); ++var14)
+				{
+					var13[var14] = ((ChatMessageComponent) field_111091_i.get(var14)).func_111070_a(p_111070_1_, var8, var9, var10, var11, var12);
+				}
+				var7.append(StatCollector.translateToLocalFormatted(field_111090_h, var13));
+			} else
+			{
+				var7.append(StatCollector.translateToLocal(field_111090_h));
+			}
+		} else if(field_111084_g != null)
+		{
+			if(p_111070_1_)
+			{
+				func_111060_a(var7, var8, var9, var10, var11, var12);
+			}
+			var7.append(field_111084_g);
+		} else
+		{
+			ChatMessageComponent var16;
+			if(field_111091_i != null)
+			{
+				for(Iterator var15 = field_111091_i.iterator(); var15.hasNext(); var7.append(var16.func_111070_a(p_111070_1_, var8, var9, var10, var11, var12)))
+				{
+					var16 = (ChatMessageComponent) var15.next();
+					if(p_111070_1_)
+					{
+						func_111060_a(var7, var8, var9, var10, var11, var12);
+					}
+				}
+			}
+		}
+		return var7.toString();
+	}
+	
+	public ChatMessageComponent func_111071_a(Boolean p_111071_1_)
+	{
+		field_111088_c = p_111071_1_;
+		return this;
+	}
+	
+	public ChatMessageComponent func_111072_b(String p_111072_1_)
+	{
+		if(field_111084_g == null && field_111090_h == null)
+		{
+			if(field_111091_i != null)
+			{
+				field_111091_i.add(func_111077_e(p_111072_1_));
+			} else
+			{
+				field_111090_h = p_111072_1_;
+			}
+		} else
+		{
+			field_111091_i = Lists.newArrayList(new ChatMessageComponent[] { new ChatMessageComponent(this), func_111077_e(p_111072_1_) });
+			field_111084_g = null;
+			field_111090_h = null;
+		}
+		return this;
+	}
+	
+	public ChatMessageComponent func_111073_a(ChatMessageComponent p_111073_1_)
+	{
+		if(field_111084_g == null && field_111090_h == null)
+		{
+			if(field_111091_i != null)
+			{
+				field_111091_i.add(p_111073_1_);
+			} else
+			{
+				field_111091_i = Lists.newArrayList(new ChatMessageComponent[] { p_111073_1_ });
+			}
+		} else
+		{
+			field_111091_i = Lists.newArrayList(new ChatMessageComponent[] { new ChatMessageComponent(this), p_111073_1_ });
+			field_111084_g = null;
+			field_111090_h = null;
+		}
+		return this;
+	}
+	
+	protected String func_111074_g()
+	{
+		return field_111090_h;
+	}
+	
+	protected String func_111075_f()
+	{
+		return field_111084_g;
+	}
+	
+	public Boolean func_111076_e()
+	{
+		return field_111083_f;
+	}
+	
+	public ChatMessageComponent func_111079_a(String p_111079_1_)
+	{
+		if(field_111084_g == null && field_111090_h == null)
+		{
+			if(field_111091_i != null)
+			{
+				field_111091_i.add(func_111066_d(p_111079_1_));
+			} else
+			{
+				field_111084_g = p_111079_1_;
+			}
+		} else
+		{
+			field_111091_i = Lists.newArrayList(new ChatMessageComponent[] { new ChatMessageComponent(this), func_111066_d(p_111079_1_) });
+			field_111084_g = null;
+			field_111090_h = null;
+		}
+		return this;
+	}
+	
+	public ChatMessageComponent func_111080_a(String p_111080_1_, Object ... p_111080_2_)
+	{
+		if(field_111084_g == null && field_111090_h == null)
+		{
+			if(field_111091_i != null)
+			{
+				field_111091_i.add(func_111082_b(p_111080_1_, p_111080_2_));
+			} else
+			{
+				field_111090_h = p_111080_1_;
+				field_111091_i = Lists.newArrayList();
+				Object[] var3 = p_111080_2_;
+				int var4 = p_111080_2_.length;
+				for(int var5 = 0; var5 < var4; ++var5)
+				{
+					Object var6 = var3[var5];
+					if(var6 instanceof ChatMessageComponent)
+					{
+						field_111091_i.add(var6);
+					} else
+					{
+						field_111091_i.add(func_111066_d(var6.toString()));
+					}
+				}
+			}
+		} else
+		{
+			field_111091_i = Lists.newArrayList(new ChatMessageComponent[] { new ChatMessageComponent(this), func_111082_b(p_111080_1_, p_111080_2_) });
+			field_111084_g = null;
+			field_111090_h = null;
+		}
+		return this;
+	}
+	
+	public ChatMessageComponent func_111081_c(Boolean p_111081_1_)
+	{
+		field_111086_e = p_111081_1_;
+		return this;
+	}
+	
+	@Override public String toString()
+	{
+		return func_111068_a(false);
+	}
+	
+	private static void func_111060_a(StringBuilder p_111060_0_, EnumChatFormatting p_111060_1_, boolean p_111060_2_, boolean p_111060_3_, boolean p_111060_4_, boolean p_111060_5_)
+	{
+		if(p_111060_1_ != null)
+		{
+			p_111060_0_.append(p_111060_1_);
+		} else if(p_111060_2_ || p_111060_3_ || p_111060_4_ || p_111060_5_)
+		{
+			p_111060_0_.append(EnumChatFormatting.RESET);
+		}
+		if(p_111060_2_)
+		{
+			p_111060_0_.append(EnumChatFormatting.BOLD);
+		}
+		if(p_111060_3_)
+		{
+			p_111060_0_.append(EnumChatFormatting.ITALIC);
+		}
+		if(p_111060_4_)
+		{
+			p_111060_0_.append(EnumChatFormatting.UNDERLINE);
+		}
+		if(p_111060_5_)
+		{
+			p_111060_0_.append(EnumChatFormatting.OBFUSCATED);
+		}
+	}
+	
+	public static ChatMessageComponent func_111066_d(String p_111066_0_)
+	{
+		ChatMessageComponent var1 = new ChatMessageComponent();
+		var1.func_111079_a(p_111066_0_);
+		return var1;
+	}
+	
+	public static ChatMessageComponent func_111077_e(String p_111077_0_)
+	{
+		ChatMessageComponent var1 = new ChatMessageComponent();
+		var1.func_111072_b(p_111077_0_);
+		return var1;
+	}
+	
+	public static ChatMessageComponent func_111078_c(String p_111078_0_)
+	{
+		try
+		{
+			return (ChatMessageComponent) field_111089_a.fromJson(p_111078_0_, ChatMessageComponent.class);
+		} catch(Throwable var4)
+		{
+			CrashReport var2 = CrashReport.makeCrashReport(var4, "Deserializing Message");
+			CrashReportCategory var3 = var2.makeCategory("Serialized Message");
+			var3.addCrashSection("JSON string", p_111078_0_);
+			throw new ReportedException(var2);
+		}
+	}
+	
+	public static ChatMessageComponent func_111082_b(String p_111082_0_, Object ... p_111082_1_)
+	{
+		ChatMessageComponent var2 = new ChatMessageComponent();
+		var2.func_111080_a(p_111082_0_, p_111082_1_);
+		return var2;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ChestItemRenderHelper.java b/RMCClient/minecraft/net/minecraft/src/ChestItemRenderHelper.java
index eb09cfa..e0e87a3 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChestItemRenderHelper.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChestItemRenderHelper.java
@@ -3,7 +3,8 @@
 public class ChestItemRenderHelper
 {
 	public static ChestItemRenderHelper instance = new ChestItemRenderHelper();
-	private TileEntityChest theChest = new TileEntityChest();
+	private TileEntityChest theChest = new TileEntityChest(0);
+	private TileEntityChest field_142033_c = new TileEntityChest(1);
 	private TileEntityEnderChest theEnderChest = new TileEntityEnderChest();
 	
 	public void renderChest(Block par1Block, int par2, float par3)
@@ -11,6 +12,9 @@
 		if(par1Block.blockID == Block.enderChest.blockID)
 		{
 			TileEntityRenderer.instance.renderTileEntityAt(theEnderChest, 0.0D, 0.0D, 0.0D, 0.0F);
+		} else if(par1Block.blockID == Block.chestTrapped.blockID)
+		{
+			TileEntityRenderer.instance.renderTileEntityAt(field_142033_c, 0.0D, 0.0D, 0.0D, 0.0F);
 		} else
 		{
 			TileEntityRenderer.instance.renderTileEntityAt(theChest, 0.0D, 0.0D, 0.0D, 0.0F);
diff --git a/RMCClient/minecraft/net/minecraft/src/Chunk.java b/RMCClient/minecraft/net/minecraft/src/Chunk.java
index 8305968..21bff9a 100644
--- a/RMCClient/minecraft/net/minecraft/src/Chunk.java
+++ b/RMCClient/minecraft/net/minecraft/src/Chunk.java
@@ -29,26 +29,26 @@
 	public long lastSaveTime;
 	public boolean sendUpdates;
 	public int heightMapMinimum;
+	public long field_111204_q;
 	private int queuedLightChecks;
-	boolean field_76653_p;
 	
-	public Chunk(World par1World, byte[] par2ArrayOfByte, int par3, int par4)
+	public Chunk(World p_i1996_1_, byte[] p_i1996_2_, int p_i1996_3_, int p_i1996_4_)
 	{
-		this(par1World, par3, par4);
-		int var5 = par2ArrayOfByte.length / 256;
+		this(p_i1996_1_, p_i1996_3_, p_i1996_4_);
+		int var5 = p_i1996_2_.length / 256;
 		for(int var6 = 0; var6 < 16; ++var6)
 		{
 			for(int var7 = 0; var7 < 16; ++var7)
 			{
 				for(int var8 = 0; var8 < var5; ++var8)
 				{
-					byte var9 = par2ArrayOfByte[var6 << 11 | var7 << 7 | var8];
+					byte var9 = p_i1996_2_[var6 << 11 | var7 << 7 | var8];
 					if(var9 != 0)
 					{
 						int var10 = var8 >> 4;
 						if(storageArrays[var10] == null)
 						{
-							storageArrays[var10] = new ExtendedBlockStorage(var10 << 4, !par1World.provider.hasNoSky);
+							storageArrays[var10] = new ExtendedBlockStorage(var10 << 4, !p_i1996_1_.provider.hasNoSky);
 						}
 						storageArrays[var10].setExtBlockID(var6, var8 & 15, var7, var9);
 					}
@@ -57,26 +57,18 @@
 		}
 	}
 	
-	public Chunk(World par1World, int par2, int par3)
+	public Chunk(World p_i1995_1_, int p_i1995_2_, int p_i1995_3_)
 	{
 		storageArrays = new ExtendedBlockStorage[16];
 		blockBiomeArray = new byte[256];
 		precipitationHeightMap = new int[256];
 		updateSkylightColumns = new boolean[256];
-		isGapLightingUpdated = false;
 		chunkTileEntityMap = new HashMap();
-		isTerrainPopulated = false;
-		isModified = false;
-		hasEntities = false;
-		lastSaveTime = 0L;
-		sendUpdates = false;
-		heightMapMinimum = 0;
 		queuedLightChecks = 4096;
-		field_76653_p = false;
 		entityLists = new List[16];
-		worldObj = par1World;
-		xPosition = par2;
-		zPosition = par3;
+		worldObj = p_i1995_1_;
+		xPosition = p_i1995_2_;
+		zPosition = p_i1995_3_;
 		heightMap = new int[256];
 		for(int var4 = 0; var4 < entityLists.length; ++var4)
 		{
@@ -634,6 +626,12 @@
 		worldObj.addTileEntity(chunkTileEntityMap.values());
 		for(List entityList : entityLists)
 		{
+			Iterator var2 = entityList.iterator();
+			while(var2.hasNext())
+			{
+				Entity var3 = (Entity) var2.next();
+				var3.func_110123_P();
+			}
 			worldObj.addLoadedEntities(entityList);
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkCache.java b/RMCClient/minecraft/net/minecraft/src/ChunkCache.java
index 062f12f..83c66fd 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkCache.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkCache.java
@@ -8,13 +8,13 @@
 	private boolean hasExtendedLevels;
 	private World worldObj;
 	
-	public ChunkCache(World par1World, int par2, int par3, int par4, int par5, int par6, int par7, int par8)
+	public ChunkCache(World p_i1964_1_, int p_i1964_2_, int p_i1964_3_, int p_i1964_4_, int p_i1964_5_, int p_i1964_6_, int p_i1964_7_, int p_i1964_8_)
 	{
-		worldObj = par1World;
-		chunkX = par2 - par8 >> 4;
-		chunkZ = par4 - par8 >> 4;
-		int var9 = par5 + par8 >> 4;
-		int var10 = par7 + par8 >> 4;
+		worldObj = p_i1964_1_;
+		chunkX = p_i1964_2_ - p_i1964_8_ >> 4;
+		chunkZ = p_i1964_4_ - p_i1964_8_ >> 4;
+		int var9 = p_i1964_5_ + p_i1964_8_ >> 4;
+		int var10 = p_i1964_7_ + p_i1964_8_ >> 4;
 		chunkArray = new Chunk[var9 - chunkX + 1][var10 - chunkZ + 1];
 		hasExtendedLevels = true;
 		int var11;
@@ -24,19 +24,19 @@
 		{
 			for(var12 = chunkZ; var12 <= var10; ++var12)
 			{
-				var13 = par1World.getChunkFromChunkCoords(var11, var12);
+				var13 = p_i1964_1_.getChunkFromChunkCoords(var11, var12);
 				if(var13 != null)
 				{
 					chunkArray[var11 - chunkX][var12 - chunkZ] = var13;
 				}
 			}
 		}
-		for(var11 = par2 >> 4; var11 <= par5 >> 4; ++var11)
+		for(var11 = p_i1964_2_ >> 4; var11 <= p_i1964_5_ >> 4; ++var11)
 		{
-			for(var12 = par4 >> 4; var12 <= par7 >> 4; ++var12)
+			for(var12 = p_i1964_4_ >> 4; var12 <= p_i1964_7_ >> 4; ++var12)
 			{
 				var13 = chunkArray[var11 - chunkX][var12 - chunkZ];
-				if(var13 != null && !var13.getAreLevelsEmpty(par3, par6))
+				if(var13 != null && !var13.getAreLevelsEmpty(p_i1964_3_, p_i1964_6_))
 				{
 					hasExtendedLevels = false;
 				}
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkCoordIntPair.java b/RMCClient/minecraft/net/minecraft/src/ChunkCoordIntPair.java
index 4fa4e56..29ea17a 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkCoordIntPair.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkCoordIntPair.java
@@ -5,10 +5,10 @@
 	public final int chunkXPos;
 	public final int chunkZPos;
 	
-	public ChunkCoordIntPair(int par1, int par2)
+	public ChunkCoordIntPair(int p_i1947_1_, int p_i1947_2_)
 	{
-		chunkXPos = par1;
-		chunkZPos = par2;
+		chunkXPos = p_i1947_1_;
+		chunkZPos = p_i1947_2_;
 	}
 	
 	@Override public boolean equals(Object par1Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkCoordinates.java b/RMCClient/minecraft/net/minecraft/src/ChunkCoordinates.java
index 16596e1..0cb85dc 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkCoordinates.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkCoordinates.java
@@ -10,18 +10,18 @@
 	{
 	}
 	
-	public ChunkCoordinates(ChunkCoordinates par1ChunkCoordinates)
+	public ChunkCoordinates(ChunkCoordinates p_i1355_1_)
 	{
-		posX = par1ChunkCoordinates.posX;
-		posY = par1ChunkCoordinates.posY;
-		posZ = par1ChunkCoordinates.posZ;
+		posX = p_i1355_1_.posX;
+		posY = p_i1355_1_.posY;
+		posZ = p_i1355_1_.posZ;
 	}
 	
-	public ChunkCoordinates(int par1, int par2, int par3)
+	public ChunkCoordinates(int p_i1354_1_, int p_i1354_2_, int p_i1354_3_)
 	{
-		posX = par1;
-		posY = par2;
-		posZ = par3;
+		posX = p_i1354_1_;
+		posY = p_i1354_2_;
+		posZ = p_i1354_3_;
 	}
 	
 	public int compareChunkCoordinate(ChunkCoordinates par1ChunkCoordinates)
@@ -46,9 +46,9 @@
 	
 	public float getDistanceSquared(int par1, int par2, int par3)
 	{
-		int var4 = posX - par1;
-		int var5 = posY - par2;
-		int var6 = posZ - par3;
+		float var4 = posX - par1;
+		float var5 = posY - par2;
+		float var6 = posZ - par3;
 		return var4 * var4 + var5 * var5 + var6 * var6;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkPosition.java b/RMCClient/minecraft/net/minecraft/src/ChunkPosition.java
index 3774c69..63e7ef4 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkPosition.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkPosition.java
@@ -6,16 +6,16 @@
 	public final int y;
 	public final int z;
 	
-	public ChunkPosition(int par1, int par2, int par3)
+	public ChunkPosition(int p_i1967_1_, int p_i1967_2_, int p_i1967_3_)
 	{
-		x = par1;
-		y = par2;
-		z = par3;
+		x = p_i1967_1_;
+		y = p_i1967_2_;
+		z = p_i1967_3_;
 	}
 	
-	public ChunkPosition(Vec3 par1Vec3)
+	public ChunkPosition(Vec3 p_i1968_1_)
 	{
-		this(MathHelper.floor_double(par1Vec3.xCoord), MathHelper.floor_double(par1Vec3.yCoord), MathHelper.floor_double(par1Vec3.zCoord));
+		this(MathHelper.floor_double(p_i1968_1_.xCoord), MathHelper.floor_double(p_i1968_1_.yCoord), MathHelper.floor_double(p_i1968_1_.zCoord));
 	}
 	
 	@Override public boolean equals(Object par1Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkProviderClient.java b/RMCClient/minecraft/net/minecraft/src/ChunkProviderClient.java
index 4de1426..3aed691 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkProviderClient.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkProviderClient.java
@@ -10,10 +10,10 @@
 	private List chunkListing = new ArrayList();
 	private World worldObj;
 	
-	public ChunkProviderClient(World par1World)
+	public ChunkProviderClient(World p_i1184_1_)
 	{
-		blankChunk = new EmptyChunk(par1World, 0, 0);
-		worldObj = par1World;
+		blankChunk = new EmptyChunk(p_i1184_1_, 0, 0);
+		worldObj = p_i1184_1_;
 	}
 	
 	@Override public boolean canSave()
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkProviderEnd.java b/RMCClient/minecraft/net/minecraft/src/ChunkProviderEnd.java
index 53fd2f6..6b04177 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkProviderEnd.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkProviderEnd.java
@@ -21,10 +21,10 @@
 	double[] noiseData5;
 	int[][] field_73203_h = new int[32][32];
 	
-	public ChunkProviderEnd(World par1World, long par2)
+	public ChunkProviderEnd(World p_i2007_1_, long p_i2007_2_)
 	{
-		endWorld = par1World;
-		endRNG = new Random(par2);
+		endWorld = p_i2007_1_;
+		endRNG = new Random(p_i2007_2_);
 		noiseGen1 = new NoiseGeneratorOctaves(endRNG, 16);
 		noiseGen2 = new NoiseGeneratorOctaves(endRNG, 16);
 		noiseGen3 = new NoiseGeneratorOctaves(endRNG, 8);
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkProviderFlat.java b/RMCClient/minecraft/net/minecraft/src/ChunkProviderFlat.java
index 1865c26..ad47256 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkProviderFlat.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkProviderFlat.java
@@ -19,12 +19,12 @@
 	private WorldGenLakes waterLakeGenerator;
 	private WorldGenLakes lavaLakeGenerator;
 	
-	public ChunkProviderFlat(World par1World, long par2, boolean par4, String par5Str)
+	public ChunkProviderFlat(World p_i2004_1_, long p_i2004_2_, boolean p_i2004_4_, String p_i2004_5_)
 	{
-		worldObj = par1World;
-		random = new Random(par2);
-		field_82699_e = FlatGeneratorInfo.createFlatGeneratorFromString(par5Str);
-		if(par4)
+		worldObj = p_i2004_1_;
+		random = new Random(p_i2004_2_);
+		field_82699_e = FlatGeneratorInfo.createFlatGeneratorFromString(p_i2004_5_);
+		if(p_i2004_4_)
 		{
 			Map var6 = field_82699_e.getWorldFeatures();
 			if(var6.containsKey("village"))
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkProviderGenerate.java b/RMCClient/minecraft/net/minecraft/src/ChunkProviderGenerate.java
index 97a00db..ed4fcf8 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkProviderGenerate.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkProviderGenerate.java
@@ -32,11 +32,11 @@
 	float[] parabolicField;
 	int[][] field_73219_j = new int[32][32];
 	
-	public ChunkProviderGenerate(World par1World, long par2, boolean par4)
+	public ChunkProviderGenerate(World p_i2006_1_, long p_i2006_2_, boolean p_i2006_4_)
 	{
-		worldObj = par1World;
-		mapFeaturesEnabled = par4;
-		rand = new Random(par2);
+		worldObj = p_i2006_1_;
+		mapFeaturesEnabled = p_i2006_4_;
+		rand = new Random(p_i2006_2_);
 		noiseGen1 = new NoiseGeneratorOctaves(rand, 16);
 		noiseGen2 = new NoiseGeneratorOctaves(rand, 16);
 		noiseGen3 = new NoiseGeneratorOctaves(rand, 8);
@@ -294,7 +294,7 @@
 		int var12;
 		int var13;
 		int var14;
-		if(!var11 && rand.nextInt(4) == 0)
+		if(var6 != BiomeGenBase.desert && var6 != BiomeGenBase.desertHills && !var11 && rand.nextInt(4) == 0)
 		{
 			var12 = var4 + rand.nextInt(16) + 8;
 			var13 = rand.nextInt(128);
@@ -316,10 +316,7 @@
 			var13 = var4 + rand.nextInt(16) + 8;
 			var14 = rand.nextInt(128);
 			int var15 = var5 + rand.nextInt(16) + 8;
-			if(new WorldGenDungeons().generate(worldObj, rand, var13, var14, var15))
-			{
-				;
-			}
+			new WorldGenDungeons().generate(worldObj, rand, var13, var14, var15);
 		}
 		var6.decorate(worldObj, rand, var4, var5);
 		SpawnerAnimals.performWorldGenSpawning(worldObj, var6, var4 + 8, var5 + 8, 16, 16, rand);
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkProviderHell.java b/RMCClient/minecraft/net/minecraft/src/ChunkProviderHell.java
index e809c4a..445e86b 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkProviderHell.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkProviderHell.java
@@ -26,10 +26,10 @@
 	double[] noiseData4;
 	double[] noiseData5;
 	
-	public ChunkProviderHell(World par1World, long par2)
+	public ChunkProviderHell(World p_i2005_1_, long p_i2005_2_)
 	{
-		worldObj = par1World;
-		hellRNG = new Random(par2);
+		worldObj = p_i2005_1_;
+		hellRNG = new Random(p_i2005_2_);
 		netherNoiseGen1 = new NoiseGeneratorOctaves(hellRNG, 16);
 		netherNoiseGen2 = new NoiseGeneratorOctaves(hellRNG, 16);
 		netherNoiseGen3 = new NoiseGeneratorOctaves(hellRNG, 8);
@@ -130,12 +130,13 @@
 	
 	@Override public List getPossibleCreatures(EnumCreatureType par1EnumCreatureType, int par2, int par3, int par4)
 	{
-		if(par1EnumCreatureType == EnumCreatureType.monster && genNetherBridge.hasStructureAt(par2, par3, par4)) return genNetherBridge.getSpawnList();
-		else
+		if(par1EnumCreatureType == EnumCreatureType.monster)
 		{
-			BiomeGenBase var5 = worldObj.getBiomeGenForCoords(par2, par4);
-			return var5 == null ? null : var5.getSpawnableList(par1EnumCreatureType);
+			if(genNetherBridge.hasStructureAt(par2, par3, par4)) return genNetherBridge.getSpawnList();
+			if(genNetherBridge.func_142038_b(par2, par3, par4) && worldObj.getBlockId(par2, par3 - 1, par4) == Block.netherBrick.blockID) return genNetherBridge.getSpawnList();
 		}
+		BiomeGenBase var5 = worldObj.getBiomeGenForCoords(par2, par4);
+		return var5 == null ? null : var5.getSpawnableList(par1EnumCreatureType);
 	}
 	
 	private double[] initializeNoiseField(double[] par1ArrayOfDouble, int par2, int par3, int par4, int par5, int par6, int par7)
diff --git a/RMCClient/minecraft/net/minecraft/src/ChunkProviderServer.java b/RMCClient/minecraft/net/minecraft/src/ChunkProviderServer.java
index 58eafb5..5c9c1a0 100644
--- a/RMCClient/minecraft/net/minecraft/src/ChunkProviderServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/ChunkProviderServer.java
@@ -18,12 +18,12 @@
 	private List loadedChunks = new ArrayList();
 	private WorldServer worldObj;
 	
-	public ChunkProviderServer(WorldServer par1WorldServer, IChunkLoader par2IChunkLoader, IChunkProvider par3IChunkProvider)
+	public ChunkProviderServer(WorldServer p_i1520_1_, IChunkLoader p_i1520_2_, IChunkProvider p_i1520_3_)
 	{
-		defaultEmptyChunk = new EmptyChunk(par1WorldServer, 0, 0);
-		worldObj = par1WorldServer;
-		currentChunkLoader = par2IChunkLoader;
-		currentChunkProvider = par3IChunkProvider;
+		defaultEmptyChunk = new EmptyChunk(p_i1520_1_, 0, 0);
+		worldObj = p_i1520_1_;
+		currentChunkLoader = p_i1520_2_;
+		currentChunkProvider = p_i1520_3_;
 	}
 	
 	@Override public boolean canSave()
diff --git a/RMCClient/minecraft/net/minecraft/src/CodecMus.java b/RMCClient/minecraft/net/minecraft/src/CodecMus.java
deleted file mode 100644
index 3ac095f..0000000
--- a/RMCClient/minecraft/net/minecraft/src/CodecMus.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package net.minecraft.src;
-
-import java.io.IOException;
-import java.io.InputStream;
-
-import paulscode.sound.codecs.CodecJOrbis;
-
-public class CodecMus extends CodecJOrbis
-{
-	protected InputStream openInputStream()
-	{
-		try
-		{
-			return new MusInputStream(this, url, urlConnection.getInputStream());
-		} catch(IOException e)
-		{
-			return null;
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/CombatEntry.java b/RMCClient/minecraft/net/minecraft/src/CombatEntry.java
index 7699c62..30b077d 100644
--- a/RMCClient/minecraft/net/minecraft/src/CombatEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/CombatEntry.java
@@ -4,19 +4,19 @@
 {
 	private final DamageSource field_94569_a;
 	private final int field_94567_b;
-	private final int field_94568_c;
-	private final int field_94565_d;
+	private final float field_94568_c;
+	private final float field_94565_d;
 	private final String field_94566_e;
 	private final float field_94564_f;
 	
-	public CombatEntry(DamageSource par1DamageSource, int par2, int par3, int par4, String par5Str, float par6)
+	public CombatEntry(DamageSource p_i1564_1_, int p_i1564_2_, float p_i1564_3_, float p_i1564_4_, String p_i1564_5_, float p_i1564_6_)
 	{
-		field_94569_a = par1DamageSource;
-		field_94567_b = par2;
-		field_94568_c = par4;
-		field_94565_d = par3;
-		field_94566_e = par5Str;
-		field_94564_f = par6;
+		field_94569_a = p_i1564_1_;
+		field_94567_b = p_i1564_2_;
+		field_94568_c = p_i1564_4_;
+		field_94565_d = p_i1564_3_;
+		field_94566_e = p_i1564_5_;
+		field_94564_f = p_i1564_6_;
 	}
 	
 	public String func_94558_h()
@@ -26,7 +26,7 @@
 	
 	public boolean func_94559_f()
 	{
-		return field_94569_a.getEntity() instanceof EntityLiving;
+		return field_94569_a.getEntity() instanceof EntityLivingBase;
 	}
 	
 	public DamageSource func_94560_a()
@@ -44,7 +44,7 @@
 		return field_94566_e;
 	}
 	
-	public int func_94563_c()
+	public float func_94563_c()
 	{
 		return field_94568_c;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/CombatTracker.java b/RMCClient/minecraft/net/minecraft/src/CombatTracker.java
index da58dc3..54b5d21 100644
--- a/RMCClient/minecraft/net/minecraft/src/CombatTracker.java
+++ b/RMCClient/minecraft/net/minecraft/src/CombatTracker.java
@@ -7,15 +7,15 @@
 public class CombatTracker
 {
 	private final List field_94556_a = new ArrayList();
-	private final EntityLiving field_94554_b;
-	private int field_94555_c = 0;
-	private boolean field_94552_d = false;
-	private boolean field_94553_e = false;
+	private final EntityLivingBase field_94554_b;
+	private int field_94555_c;
+	private boolean field_94552_d;
+	private boolean field_94553_e;
 	private String field_94551_f;
 	
-	public CombatTracker(EntityLiving par1EntityLiving)
+	public CombatTracker(EntityLivingBase p_i1565_1_)
 	{
-		field_94554_b = par1EntityLiving;
+		field_94554_b = p_i1565_1_;
 	}
 	
 	private void func_94542_g()
@@ -73,16 +73,16 @@
 		}
 	}
 	
-	public String func_94546_b()
+	public ChatMessageComponent func_94546_b()
 	{
-		if(field_94556_a.size() == 0) return field_94554_b.getTranslatedEntityName() + " died";
+		if(field_94556_a.size() == 0) return ChatMessageComponent.func_111082_b("death.attack.generic", new Object[] { field_94554_b.getTranslatedEntityName() });
 		else
 		{
 			CombatEntry var1 = func_94544_f();
 			CombatEntry var2 = (CombatEntry) field_94556_a.get(field_94556_a.size() - 1);
-			String var3 = "";
 			String var4 = var2.func_94558_h();
 			Entity var5 = var2.func_94560_a().getEntity();
+			ChatMessageComponent var3;
 			if(var1 != null && var2.func_94560_a() == DamageSource.fall)
 			{
 				String var6 = var1.func_94558_h();
@@ -91,31 +91,31 @@
 					if(var6 != null && (var4 == null || !var6.equals(var4)))
 					{
 						Entity var9 = var1.func_94560_a().getEntity();
-						ItemStack var8 = var9 instanceof EntityLiving ? ((EntityLiving) var9).getHeldItem() : null;
+						ItemStack var8 = var9 instanceof EntityLivingBase ? ((EntityLivingBase) var9).getHeldItem() : null;
 						if(var8 != null && var8.hasDisplayName())
 						{
-							var3 = StatCollector.translateToLocalFormatted("death.fell.assist.item", new Object[] { field_94554_b.getTranslatedEntityName(), var4, var8.getDisplayName() });
+							var3 = ChatMessageComponent.func_111082_b("death.fell.assist.item", new Object[] { field_94554_b.getTranslatedEntityName(), var6, var8.getDisplayName() });
 						} else
 						{
-							var3 = StatCollector.translateToLocalFormatted("death.fell.assist", new Object[] { field_94554_b.getTranslatedEntityName(), var6 });
+							var3 = ChatMessageComponent.func_111082_b("death.fell.assist", new Object[] { field_94554_b.getTranslatedEntityName(), var6 });
 						}
 					} else if(var4 != null)
 					{
-						ItemStack var7 = var5 instanceof EntityLiving ? ((EntityLiving) var5).getHeldItem() : null;
+						ItemStack var7 = var5 instanceof EntityLivingBase ? ((EntityLivingBase) var5).getHeldItem() : null;
 						if(var7 != null && var7.hasDisplayName())
 						{
-							var3 = StatCollector.translateToLocalFormatted("death.fell.finish.item", new Object[] { field_94554_b.getTranslatedEntityName(), var4, var7.getDisplayName() });
+							var3 = ChatMessageComponent.func_111082_b("death.fell.finish.item", new Object[] { field_94554_b.getTranslatedEntityName(), var4, var7.getDisplayName() });
 						} else
 						{
-							var3 = StatCollector.translateToLocalFormatted("death.fell.finish", new Object[] { field_94554_b.getTranslatedEntityName(), var4 });
+							var3 = ChatMessageComponent.func_111082_b("death.fell.finish", new Object[] { field_94554_b.getTranslatedEntityName(), var4 });
 						}
 					} else
 					{
-						var3 = StatCollector.translateToLocalFormatted("death.fell.killer", new Object[] { field_94554_b.getTranslatedEntityName() });
+						var3 = ChatMessageComponent.func_111082_b("death.fell.killer", new Object[] { field_94554_b.getTranslatedEntityName() });
 					}
 				} else
 				{
-					var3 = StatCollector.translateToLocalFormatted("death.fell.accident." + func_94548_b(var1), new Object[] { field_94554_b.getTranslatedEntityName() });
+					var3 = ChatMessageComponent.func_111082_b("death.fell.accident." + func_94548_b(var1), new Object[] { field_94554_b.getTranslatedEntityName() });
 				}
 			} else
 			{
@@ -125,7 +125,7 @@
 		}
 	}
 	
-	public void func_94547_a(DamageSource par1DamageSource, int par2, int par3)
+	public void func_94547_a(DamageSource par1DamageSource, float par2, float par3)
 	{
 		func_94549_h();
 		func_94545_a();
@@ -152,12 +152,12 @@
 		}
 	}
 	
-	public EntityLiving func_94550_c()
+	public EntityLivingBase func_94550_c()
 	{
-		EntityLiving var1 = null;
+		EntityLivingBase var1 = null;
 		EntityPlayer var2 = null;
-		int var3 = 0;
-		int var4 = 0;
+		float var3 = 0.0F;
+		float var4 = 0.0F;
 		Iterator var5 = field_94556_a.iterator();
 		while(var5.hasNext())
 		{
@@ -167,13 +167,13 @@
 				var4 = var6.func_94563_c();
 				var2 = (EntityPlayer) var6.func_94560_a().getEntity();
 			}
-			if(var6.func_94560_a().getEntity() instanceof EntityLiving && (var1 == null || var6.func_94563_c() > var3))
+			if(var6.func_94560_a().getEntity() instanceof EntityLivingBase && (var1 == null || var6.func_94563_c() > var3))
 			{
 				var3 = var6.func_94563_c();
-				var1 = (EntityLiving) var6.func_94560_a().getEntity();
+				var1 = (EntityLivingBase) var6.func_94560_a().getEntity();
 			}
 		}
-		if(var2 != null && var4 >= var3 / 3) return var2;
+		if(var2 != null && var4 >= var3 / 3.0F) return var2;
 		else return var1;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandBase.java b/RMCClient/minecraft/net/minecraft/src/CommandBase.java
index a89ac3c..b2f0091 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandBase.java
@@ -9,7 +9,7 @@
 
 public abstract class CommandBase implements ICommand
 {
-	private static IAdminCommand theAdmin = null;
+	private static IAdminCommand theAdmin;
 	
 	@Override public List addTabCompletionOptions(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
@@ -36,11 +36,6 @@
 		return null;
 	}
 	
-	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
-	{
-		return "/" + getCommandName();
-	}
-	
 	public int getRequiredPermissionLevel()
 	{
 		return 4;
@@ -54,6 +49,74 @@
 	public static boolean doesStringStartWith(String par0Str, String par1Str)
 	{
 		return par1Str.regionMatches(true, 0, par0Str, 0, par0Str.length());
+	}
+	
+	public static double func_110661_a(ICommandSender p_110661_0_, String p_110661_1_, double p_110661_2_, double p_110661_4_)
+	{
+		double var6 = parseDouble(p_110661_0_, p_110661_1_);
+		if(var6 < p_110661_2_) throw new NumberInvalidException("commands.generic.double.tooSmall", new Object[] { Double.valueOf(var6), Double.valueOf(p_110661_2_) });
+		else if(var6 > p_110661_4_) throw new NumberInvalidException("commands.generic.double.tooBig", new Object[] { Double.valueOf(var6), Double.valueOf(p_110661_4_) });
+		else return var6;
+	}
+	
+	public static boolean func_110662_c(ICommandSender p_110662_0_, String p_110662_1_)
+	{
+		if(!p_110662_1_.equals("true") && !p_110662_1_.equals("1"))
+		{
+			if(!p_110662_1_.equals("false") && !p_110662_1_.equals("0")) throw new CommandException("commands.generic.boolean.invalid", new Object[] { p_110662_1_ });
+			else return false;
+		} else return true;
+	}
+	
+	public static String func_110663_b(Collection p_110663_0_)
+	{
+		String[] var1 = new String[p_110663_0_.size()];
+		int var2 = 0;
+		EntityLivingBase var4;
+		for(Iterator var3 = p_110663_0_.iterator(); var3.hasNext(); var1[var2++] = var4.getTranslatedEntityName())
+		{
+			var4 = (EntityLivingBase) var3.next();
+		}
+		return joinNiceString(var1);
+	}
+	
+	public static double func_110664_a(ICommandSender p_110664_0_, String p_110664_1_, double p_110664_2_)
+	{
+		return func_110661_a(p_110664_0_, p_110664_1_, p_110664_2_, Double.MAX_VALUE);
+	}
+	
+	public static double func_110665_a(ICommandSender p_110665_0_, double p_110665_1_, String p_110665_3_, int p_110665_4_, int p_110665_5_)
+	{
+		boolean var6 = p_110665_3_.startsWith("~");
+		if(var6 && Double.isNaN(p_110665_1_)) throw new NumberInvalidException("commands.generic.num.invalid", new Object[] { Double.valueOf(p_110665_1_) });
+		else
+		{
+			double var7 = var6 ? p_110665_1_ : 0.0D;
+			if(!var6 || p_110665_3_.length() > 1)
+			{
+				boolean var9 = p_110665_3_.contains(".");
+				if(var6)
+				{
+					p_110665_3_ = p_110665_3_.substring(1);
+				}
+				var7 += parseDouble(p_110665_0_, p_110665_3_);
+				if(!var9 && !var6)
+				{
+					var7 += 0.5D;
+				}
+			}
+			if(p_110665_4_ != 0 || p_110665_5_ != 0)
+			{
+				if(var7 < p_110665_4_) throw new NumberInvalidException("commands.generic.double.tooSmall", new Object[] { Double.valueOf(var7), Integer.valueOf(p_110665_4_) });
+				if(var7 > p_110665_5_) throw new NumberInvalidException("commands.generic.double.tooBig", new Object[] { Double.valueOf(var7), Integer.valueOf(p_110665_5_) });
+			}
+			return var7;
+		}
+	}
+	
+	public static double func_110666_a(ICommandSender p_110666_0_, double p_110666_1_, String p_110666_3_)
+	{
+		return func_110665_a(p_110666_0_, p_110666_1_, p_110666_3_, -30000000, 30000000);
 	}
 	
 	public static EntityPlayerMP func_82359_c(ICommandSender par0ICommandSender, String par1Str)
@@ -106,7 +169,7 @@
 	
 	public static String func_96333_a(Collection par0Collection)
 	{
-		return joinNiceString(par0Collection.toArray(new String[0]));
+		return joinNiceString(par0Collection.toArray(new String[par0Collection.size()]));
 	}
 	
 	public static EntityPlayerMP getCommandSenderAsPlayer(ICommandSender par0ICommandSender)
@@ -186,8 +249,10 @@
 	{
 		try
 		{
-			return Double.parseDouble(par1Str);
-		} catch(NumberFormatException var3)
+			double var2 = Double.parseDouble(par1Str);
+			if(!Doubles.isFinite(var2)) throw new NumberInvalidException("commands.generic.double.invalid", new Object[] { par1Str });
+			else return var2;
+		} catch(NumberFormatException var4)
 		{
 			throw new NumberInvalidException("commands.generic.double.invalid", new Object[] { par1Str });
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandClearInventory.java b/RMCClient/minecraft/net/minecraft/src/CommandClearInventory.java
index 6fae01a..53198e0 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandClearInventory.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandClearInventory.java
@@ -23,7 +23,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.clear.usage", new Object[0]);
+		return "commands.clear.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
@@ -43,6 +43,10 @@
 		int var5 = par2ArrayOfStr.length >= 3 ? parseIntWithMin(par1ICommandSender, par2ArrayOfStr[2], 0) : -1;
 		int var6 = var3.inventory.clearInventory(var4, var5);
 		var3.inventoryContainer.detectAndSendChanges();
+		if(!var3.capabilities.isCreativeMode)
+		{
+			var3.updateHeldItem();
+		}
 		if(var6 == 0) throw new CommandException("commands.clear.failure", new Object[] { var3.getEntityName() });
 		else
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandDebug.java b/RMCClient/minecraft/net/minecraft/src/CommandDebug.java
index 07c258a..6b5b911 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandDebug.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandDebug.java
@@ -10,8 +10,8 @@
 
 public class CommandDebug extends CommandBase
 {
-	private long startTime = 0L;
-	private int startTicks = 0;
+	private long startTime;
+	private int startTicks;
 	
 	@Override public List addTabCompletionOptions(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
@@ -21,6 +21,11 @@
 	@Override public String getCommandName()
 	{
 		return "debug";
+	}
+	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.debug.usage";
 	}
 	
 	private void getProfileDump(int par1, String par2Str, StringBuilder par3StringBuilder)
@@ -85,14 +90,14 @@
 			{
 				notifyAdmins(par1ICommandSender, "commands.debug.start", new Object[0]);
 				MinecraftServer.getServer().enableProfiling();
-				startTime = System.currentTimeMillis();
+				startTime = MinecraftServer.func_130071_aq();
 				startTicks = MinecraftServer.getServer().getTickCounter();
 				return;
 			}
 			if(par2ArrayOfStr[0].equals("stop"))
 			{
 				if(!MinecraftServer.getServer().theProfiler.profilingEnabled) throw new CommandException("commands.debug.notStarted", new Object[0]);
-				long var3 = System.currentTimeMillis();
+				long var3 = MinecraftServer.func_130071_aq();
 				int var5 = MinecraftServer.getServer().getTickCounter();
 				long var6 = var3 - startTime;
 				int var8 = var5 - startTicks;
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandDefaultGameMode.java b/RMCClient/minecraft/net/minecraft/src/CommandDefaultGameMode.java
index eef8cf6..a243b84 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandDefaultGameMode.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandDefaultGameMode.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import java.util.Iterator;
+
 import net.minecraft.server.MinecraftServer;
 
 public class CommandDefaultGameMode extends CommandGameMode
@@ -11,7 +13,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.defaultgamemode.usage", new Object[0]);
+		return "commands.defaultgamemode.usage";
 	}
 	
 	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
@@ -20,13 +22,22 @@
 		{
 			EnumGameType var3 = getGameModeFromCommand(par1ICommandSender, par2ArrayOfStr[0]);
 			setGameType(var3);
-			String var4 = StatCollector.translateToLocal("gameMode." + var3.getName());
-			notifyAdmins(par1ICommandSender, "commands.defaultgamemode.success", new Object[] { var4 });
+			notifyAdmins(par1ICommandSender, "commands.defaultgamemode.success", new Object[] { ChatMessageComponent.func_111077_e("gameMode." + var3.getName()) });
 		} else throw new WrongUsageException("commands.defaultgamemode.usage", new Object[0]);
 	}
 	
 	protected void setGameType(EnumGameType par1EnumGameType)
 	{
-		MinecraftServer.getServer().setGameType(par1EnumGameType);
+		MinecraftServer var2 = MinecraftServer.getServer();
+		var2.setGameType(par1EnumGameType);
+		EntityPlayerMP var4;
+		if(var2.func_104056_am())
+		{
+			for(Iterator var3 = MinecraftServer.getServer().getConfigurationManager().playerEntityList.iterator(); var3.hasNext(); var4.fallDistance = 0.0F)
+			{
+				var4 = (EntityPlayerMP) var3.next();
+				var4.setGameType(par1EnumGameType);
+			}
+		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandDifficulty.java b/RMCClient/minecraft/net/minecraft/src/CommandDifficulty.java
index e817edd..9508284 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandDifficulty.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandDifficulty.java
@@ -20,7 +20,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.difficulty.usage", new Object[0]);
+		return "commands.difficulty.usage";
 	}
 	
 	protected int getDifficultyForName(ICommandSender par1ICommandSender, String par2Str)
@@ -39,8 +39,7 @@
 		{
 			int var3 = getDifficultyForName(par1ICommandSender, par2ArrayOfStr[0]);
 			MinecraftServer.getServer().setDifficultyForAllWorlds(var3);
-			String var4 = StatCollector.translateToLocal(difficulties[var3]);
-			notifyAdmins(par1ICommandSender, "commands.difficulty.success", new Object[] { var4 });
+			notifyAdmins(par1ICommandSender, "commands.difficulty.success", new Object[] { ChatMessageComponent.func_111077_e(difficulties[var3]) });
 		} else throw new WrongUsageException("commands.difficulty.usage", new Object[0]);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandEffect.java b/RMCClient/minecraft/net/minecraft/src/CommandEffect.java
index 5035ea1..4da0e24 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandEffect.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandEffect.java
@@ -23,7 +23,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.effect.usage", new Object[0]);
+		return "commands.effect.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
@@ -38,15 +38,22 @@
 	
 	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
-		if(par2ArrayOfStr.length >= 2)
+		if(par2ArrayOfStr.length < 2) throw new WrongUsageException("commands.effect.usage", new Object[0]);
+		else
 		{
 			EntityPlayerMP var3 = func_82359_c(par1ICommandSender, par2ArrayOfStr[0]);
-			int var4 = parseIntWithMin(par1ICommandSender, par2ArrayOfStr[1], 1);
-			int var5 = 600;
-			int var6 = 30;
-			int var7 = 0;
-			if(var4 >= 0 && var4 < Potion.potionTypes.length && Potion.potionTypes[var4] != null)
+			if(par2ArrayOfStr[1].equals("clear"))
 			{
+				if(var3.getActivePotionEffects().isEmpty()) throw new CommandException("commands.effect.failure.notActive.all", new Object[] { var3.getEntityName() });
+				var3.clearActivePotions();
+				notifyAdmins(par1ICommandSender, "commands.effect.success.removed.all", new Object[] { var3.getEntityName() });
+			} else
+			{
+				int var4 = parseIntWithMin(par1ICommandSender, par2ArrayOfStr[1], 1);
+				int var5 = 600;
+				int var6 = 30;
+				int var7 = 0;
+				if(var4 < 0 || var4 >= Potion.potionTypes.length || Potion.potionTypes[var4] == null) throw new NumberInvalidException("commands.effect.notFound", new Object[] { Integer.valueOf(var4) });
 				if(par2ArrayOfStr.length >= 3)
 				{
 					var6 = parseIntBounded(par1ICommandSender, par2ArrayOfStr[2], 0, 1000000);
@@ -67,16 +74,16 @@
 				}
 				if(var6 == 0)
 				{
-					if(!var3.isPotionActive(var4)) throw new CommandException("commands.effect.failure.notActive", new Object[] { StatCollector.translateToLocal(Potion.potionTypes[var4].getName()), var3.getEntityName() });
+					if(!var3.isPotionActive(var4)) throw new CommandException("commands.effect.failure.notActive", new Object[] { ChatMessageComponent.func_111077_e(Potion.potionTypes[var4].getName()), var3.getEntityName() });
 					var3.removePotionEffect(var4);
-					notifyAdmins(par1ICommandSender, "commands.effect.success.removed", new Object[] { StatCollector.translateToLocal(Potion.potionTypes[var4].getName()), var3.getEntityName() });
+					notifyAdmins(par1ICommandSender, "commands.effect.success.removed", new Object[] { ChatMessageComponent.func_111077_e(Potion.potionTypes[var4].getName()), var3.getEntityName() });
 				} else
 				{
 					PotionEffect var8 = new PotionEffect(var4, var5, var7);
 					var3.addPotionEffect(var8);
-					notifyAdmins(par1ICommandSender, "commands.effect.success", new Object[] { StatCollector.translateToLocal(var8.getEffectName()), Integer.valueOf(var4), Integer.valueOf(var7), var3.getEntityName(), Integer.valueOf(var6) });
+					notifyAdmins(par1ICommandSender, "commands.effect.success", new Object[] { ChatMessageComponent.func_111077_e(var8.getEffectName()), Integer.valueOf(var4), Integer.valueOf(var7), var3.getEntityName(), Integer.valueOf(var6) });
 				}
-			} else throw new NumberInvalidException("commands.effect.notFound", new Object[] { Integer.valueOf(var4) });
-		} else throw new WrongUsageException("commands.effect.usage", new Object[0]);
+			}
+		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandEnchant.java b/RMCClient/minecraft/net/minecraft/src/CommandEnchant.java
index 9988caa..31a6881 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandEnchant.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandEnchant.java
@@ -18,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.enchant.usage", new Object[0]);
+		return "commands.enchant.usage";
 	}
 	
 	protected String[] getListOfPlayers()
@@ -45,17 +45,13 @@
 			int var4 = parseIntBounded(par1ICommandSender, par2ArrayOfStr[1], 0, Enchantment.enchantmentsList.length - 1);
 			int var5 = 1;
 			ItemStack var6 = var3.getCurrentEquippedItem();
-			if(var6 == null)
-			{
-				notifyAdmins(par1ICommandSender, "commands.enchant.noItem", new Object[0]);
-			} else
+			if(var6 == null) throw new CommandException("commands.enchant.noItem", new Object[0]);
+			else
 			{
 				Enchantment var7 = Enchantment.enchantmentsList[var4];
 				if(var7 == null) throw new NumberInvalidException("commands.enchant.notFound", new Object[] { Integer.valueOf(var4) });
-				else if(!var7.canApply(var6))
-				{
-					notifyAdmins(par1ICommandSender, "commands.enchant.cantEnchant", new Object[0]);
-				} else
+				else if(!var7.canApply(var6)) throw new CommandException("commands.enchant.cantEnchant", new Object[0]);
+				else
 				{
 					if(par2ArrayOfStr.length >= 3)
 					{
@@ -72,11 +68,7 @@
 								if(Enchantment.enchantmentsList[var10] != null)
 								{
 									Enchantment var11 = Enchantment.enchantmentsList[var10];
-									if(!var11.canApplyTogether(var7))
-									{
-										notifyAdmins(par1ICommandSender, "commands.enchant.cantCombine", new Object[] { var7.getTranslatedName(var5), var11.getTranslatedName(((NBTTagCompound) var8.tagAt(var9)).getShort("lvl")) });
-										return;
-									}
+									if(!var11.canApplyTogether(var7)) throw new CommandException("commands.enchant.cantCombine", new Object[] { var7.getTranslatedName(var5), var11.getTranslatedName(((NBTTagCompound) var8.tagAt(var9)).getShort("lvl")) });
 								}
 							}
 						}
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandException.java b/RMCClient/minecraft/net/minecraft/src/CommandException.java
index 92fff5d..c54d452 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandException.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandException.java
@@ -5,10 +5,10 @@
 	private static final long serialVersionUID = 1L;
 	private Object[] errorObjects;
 	
-	public CommandException(String par1Str, Object ... par2ArrayOfObj)
+	public CommandException(String p_i1359_1_, Object ... p_i1359_2_)
 	{
-		super(par1Str);
-		errorObjects = par2ArrayOfObj;
+		super(p_i1359_1_);
+		errorObjects = p_i1359_2_;
 	}
 	
 	public Object[] getErrorOjbects()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandGameMode.java b/RMCClient/minecraft/net/minecraft/src/CommandGameMode.java
index 1cdc6e8..b658cff 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandGameMode.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandGameMode.java
@@ -18,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.gamemode.usage", new Object[0]);
+		return "commands.gamemode.usage";
 	}
 	
 	protected EnumGameType getGameModeFromCommand(ICommandSender par1ICommandSender, String par2Str)
@@ -49,7 +49,7 @@
 			EntityPlayerMP var4 = par2ArrayOfStr.length >= 2 ? func_82359_c(par1ICommandSender, par2ArrayOfStr[1]) : getCommandSenderAsPlayer(par1ICommandSender);
 			var4.setGameType(var3);
 			var4.fallDistance = 0.0F;
-			String var5 = StatCollector.translateToLocal("gameMode." + var3.getName());
+			ChatMessageComponent var5 = ChatMessageComponent.func_111077_e("gameMode." + var3.getName());
 			if(var4 != par1ICommandSender)
 			{
 				notifyAdmins(par1ICommandSender, 1, "commands.gamemode.success.other", new Object[] { var4.getEntityName(), var5 });
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandGameRule.java b/RMCClient/minecraft/net/minecraft/src/CommandGameRule.java
index e2fb5de..dc130ad 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandGameRule.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandGameRule.java
@@ -18,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.gamerule.usage", new Object[0]);
+		return "commands.gamerule.usage";
 	}
 	
 	private GameRules getGameRules()
@@ -54,7 +54,7 @@
 			if(var4.hasRule(var6))
 			{
 				String var5 = var4.getGameRuleStringValue(var6);
-				par1ICommandSender.sendChatToPlayer(var6 + " = " + var5);
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111066_d(var6).func_111079_a(" = ").func_111079_a(var5));
 			} else
 			{
 				notifyAdmins(par1ICommandSender, "commands.gamerule.norule", new Object[] { var6 });
@@ -62,7 +62,7 @@
 		} else if(par2ArrayOfStr.length == 0)
 		{
 			GameRules var3 = getGameRules();
-			par1ICommandSender.sendChatToPlayer(joinNiceString(var3.getRules()));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111066_d(joinNiceString(var3.getRules())));
 		} else throw new WrongUsageException("commands.gamerule.usage", new Object[0]);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandGive.java b/RMCClient/minecraft/net/minecraft/src/CommandGive.java
index 2103c0d..205a17e 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandGive.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandGive.java
@@ -18,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.give.usage", new Object[0]);
+		return "commands.give.usage";
 	}
 	
 	protected String[] getPlayers()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandHandler.java b/RMCClient/minecraft/net/minecraft/src/CommandHandler.java
index ff0c330..0819517 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandHandler.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandHandler.java
@@ -48,7 +48,7 @@
 							++var7;
 						} catch(CommandException var15)
 						{
-							par1ICommandSender.sendChatToPlayer(EnumChatFormatting.RED + par1ICommandSender.translateString(var15.getMessage(), var15.getErrorOjbects()));
+							par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b(var15.getMessage(), var15.getErrorOjbects()).func_111059_a(EnumChatFormatting.RED));
 						}
 					}
 					var3[var6] = var9;
@@ -59,17 +59,17 @@
 				}
 			} else
 			{
-				par1ICommandSender.sendChatToPlayer("" + EnumChatFormatting.RED + "You do not have permission to use this command.");
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111077_e("commands.generic.permission").func_111059_a(EnumChatFormatting.RED));
 			}
 		} catch(WrongUsageException var16)
 		{
-			par1ICommandSender.sendChatToPlayer(EnumChatFormatting.RED + par1ICommandSender.translateString("commands.generic.usage", new Object[] { par1ICommandSender.translateString(var16.getMessage(), var16.getErrorOjbects()) }));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.generic.usage", new Object[] { ChatMessageComponent.func_111082_b(var16.getMessage(), var16.getErrorOjbects()) }).func_111059_a(EnumChatFormatting.RED));
 		} catch(CommandException var17)
 		{
-			par1ICommandSender.sendChatToPlayer(EnumChatFormatting.RED + par1ICommandSender.translateString(var17.getMessage(), var17.getErrorOjbects()));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b(var17.getMessage(), var17.getErrorOjbects()).func_111059_a(EnumChatFormatting.RED));
 		} catch(Throwable var18)
 		{
-			par1ICommandSender.sendChatToPlayer(EnumChatFormatting.RED + par1ICommandSender.translateString("commands.generic.exception", new Object[0]));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111077_e("commands.generic.exception").func_111059_a(EnumChatFormatting.RED));
 			var18.printStackTrace();
 		}
 		return var7;
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandHelp.java b/RMCClient/minecraft/net/minecraft/src/CommandHelp.java
index df3c916..1ac7f8d 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandHelp.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandHelp.java
@@ -26,7 +26,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.help.usage", new Object[0]);
+		return "commands.help.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
@@ -60,15 +60,15 @@
 			throw new CommandNotFoundException();
 		}
 		int var7 = Math.min((var11 + 1) * var4, var3.size());
-		par1ICommandSender.sendChatToPlayer(EnumChatFormatting.DARK_GREEN + par1ICommandSender.translateString("commands.help.header", new Object[] { Integer.valueOf(var11 + 1), Integer.valueOf(var5 + 1) }));
+		par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.help.header", new Object[] { Integer.valueOf(var11 + 1), Integer.valueOf(var5 + 1) }).func_111059_a(EnumChatFormatting.DARK_GREEN));
 		for(int var12 = var11 * var4; var12 < var7; ++var12)
 		{
 			var9 = (ICommand) var3.get(var12);
-			par1ICommandSender.sendChatToPlayer(var9.getCommandUsage(par1ICommandSender));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111077_e(var9.getCommandUsage(par1ICommandSender)));
 		}
 		if(var11 == 0 && par1ICommandSender instanceof EntityPlayer)
 		{
-			par1ICommandSender.sendChatToPlayer(EnumChatFormatting.GREEN + par1ICommandSender.translateString("commands.help.footer", new Object[0]));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111077_e("commands.help.footer").func_111059_a(EnumChatFormatting.GREEN));
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandKill.java b/RMCClient/minecraft/net/minecraft/src/CommandKill.java
index 65d2bc7..8d3e267 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandKill.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandKill.java
@@ -7,6 +7,11 @@
 		return "kill";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.kill.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 0;
@@ -15,7 +20,7 @@
 	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
 		EntityPlayerMP var3 = getCommandSenderAsPlayer(par1ICommandSender);
-		var3.attackEntityFrom(DamageSource.outOfWorld, 1000);
-		par1ICommandSender.sendChatToPlayer("Ouch. That looks like it hurt.");
+		var3.attackEntityFrom(DamageSource.outOfWorld, Float.MAX_VALUE);
+		par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111077_e("commands.kill.success"));
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandNotFoundException.java b/RMCClient/minecraft/net/minecraft/src/CommandNotFoundException.java
index 7f5f960..71af5eb 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandNotFoundException.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandNotFoundException.java
@@ -9,8 +9,8 @@
 		this("commands.generic.notFound", new Object[0]);
 	}
 	
-	public CommandNotFoundException(String par1Str, Object ... par2ArrayOfObj)
+	public CommandNotFoundException(String p_i1363_1_, Object ... p_i1363_2_)
 	{
-		super(par1Str, par2ArrayOfObj);
+		super(p_i1363_1_, p_i1363_2_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandPlaySound.java b/RMCClient/minecraft/net/minecraft/src/CommandPlaySound.java
new file mode 100644
index 0000000..43ab291
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/CommandPlaySound.java
@@ -0,0 +1,90 @@
+package net.minecraft.src;
+
+public class CommandPlaySound extends CommandBase
+{
+	@Override public String getCommandName()
+	{
+		return "playsound";
+	}
+	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.playsound.usage";
+	}
+	
+	@Override public int getRequiredPermissionLevel()
+	{
+		return 2;
+	}
+	
+	@Override public boolean isUsernameIndex(String[] par1ArrayOfStr, int par2)
+	{
+		return par2 == 1;
+	}
+	
+	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
+	{
+		if(par2ArrayOfStr.length < 2) throw new WrongUsageException(getCommandUsage(par1ICommandSender), new Object[0]);
+		else
+		{
+			byte var3 = 0;
+			int var36 = var3 + 1;
+			String var4 = par2ArrayOfStr[var3];
+			EntityPlayerMP var5 = func_82359_c(par1ICommandSender, par2ArrayOfStr[var36++]);
+			double var6 = var5.getPlayerCoordinates().posX;
+			double var8 = var5.getPlayerCoordinates().posY;
+			double var10 = var5.getPlayerCoordinates().posZ;
+			double var12 = 1.0D;
+			double var14 = 1.0D;
+			double var16 = 0.0D;
+			if(par2ArrayOfStr.length > var36)
+			{
+				var6 = func_110666_a(par1ICommandSender, var6, par2ArrayOfStr[var36++]);
+			}
+			if(par2ArrayOfStr.length > var36)
+			{
+				var8 = func_110665_a(par1ICommandSender, var8, par2ArrayOfStr[var36++], 0, 0);
+			}
+			if(par2ArrayOfStr.length > var36)
+			{
+				var10 = func_110666_a(par1ICommandSender, var10, par2ArrayOfStr[var36++]);
+			}
+			if(par2ArrayOfStr.length > var36)
+			{
+				var12 = func_110661_a(par1ICommandSender, par2ArrayOfStr[var36++], 0.0D, 3.4028234663852886E38D);
+			}
+			if(par2ArrayOfStr.length > var36)
+			{
+				var14 = func_110661_a(par1ICommandSender, par2ArrayOfStr[var36++], 0.0D, 2.0D);
+			}
+			if(par2ArrayOfStr.length > var36)
+			{
+				var16 = func_110661_a(par1ICommandSender, par2ArrayOfStr[var36++], 0.0D, 1.0D);
+			}
+			double var18 = var12 > 1.0D ? var12 * 16.0D : 16.0D;
+			double var20 = var5.getDistance(var6, var8, var10);
+			if(var20 > var18)
+			{
+				if(var16 <= 0.0D) throw new CommandException("commands.playsound.playerTooFar", new Object[] { var5.getEntityName() });
+				double var22 = var6 - var5.posX;
+				double var24 = var8 - var5.posY;
+				double var26 = var10 - var5.posZ;
+				double var28 = Math.sqrt(var22 * var22 + var24 * var24 + var26 * var26);
+				double var30 = var5.posX;
+				double var32 = var5.posY;
+				double var34 = var5.posZ;
+				if(var28 > 0.0D)
+				{
+					var30 += var22 / var28 * 2.0D;
+					var32 += var24 / var28 * 2.0D;
+					var34 += var26 / var28 * 2.0D;
+				}
+				var5.playerNetServerHandler.sendPacketToPlayer(new Packet62LevelSound(var4, var30, var32, var34, (float) var16, (float) var14));
+			} else
+			{
+				var5.playerNetServerHandler.sendPacketToPlayer(new Packet62LevelSound(var4, var6, var8, var10, (float) var12, (float) var14));
+			}
+			notifyAdmins(par1ICommandSender, "commands.playsound.success", new Object[] { var4, var5.getEntityName() });
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerBan.java b/RMCClient/minecraft/net/minecraft/src/CommandServerBan.java
index 3174220..c0a09b4 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerBan.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerBan.java
@@ -23,7 +23,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.ban.usage", new Object[0]);
+		return "commands.ban.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerBanIp.java b/RMCClient/minecraft/net/minecraft/src/CommandServerBanIp.java
index 56cf4c2..e14f33b 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerBanIp.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerBanIp.java
@@ -55,7 +55,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.banip.usage", new Object[0]);
+		return "commands.banip.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerBanlist.java b/RMCClient/minecraft/net/minecraft/src/CommandServerBanlist.java
index a03a1c2..df66c3e 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerBanlist.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerBanlist.java
@@ -23,7 +23,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.banlist.usage", new Object[0]);
+		return "commands.banlist.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
@@ -35,12 +35,12 @@
 	{
 		if(par2ArrayOfStr.length >= 1 && par2ArrayOfStr[0].equalsIgnoreCase("ips"))
 		{
-			par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.banlist.ips", new Object[] { Integer.valueOf(MinecraftServer.getServer().getConfigurationManager().getBannedIPs().getBannedList().size()) }));
-			par1ICommandSender.sendChatToPlayer(joinNiceString(MinecraftServer.getServer().getConfigurationManager().getBannedIPs().getBannedList().keySet().toArray()));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.banlist.ips", new Object[] { Integer.valueOf(MinecraftServer.getServer().getConfigurationManager().getBannedIPs().getBannedList().size()) }));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111066_d(joinNiceString(MinecraftServer.getServer().getConfigurationManager().getBannedIPs().getBannedList().keySet().toArray())));
 		} else
 		{
-			par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.banlist.players", new Object[] { Integer.valueOf(MinecraftServer.getServer().getConfigurationManager().getBannedPlayers().getBannedList().size()) }));
-			par1ICommandSender.sendChatToPlayer(joinNiceString(MinecraftServer.getServer().getConfigurationManager().getBannedPlayers().getBannedList().keySet().toArray()));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.banlist.players", new Object[] { Integer.valueOf(MinecraftServer.getServer().getConfigurationManager().getBannedPlayers().getBannedList().size()) }));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111066_d(joinNiceString(MinecraftServer.getServer().getConfigurationManager().getBannedPlayers().getBannedList().keySet().toArray())));
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerDeop.java b/RMCClient/minecraft/net/minecraft/src/CommandServerDeop.java
index dcaf93a..8019bd4 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerDeop.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerDeop.java
@@ -18,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.deop.usage", new Object[0]);
+		return "commands.deop.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerEmote.java b/RMCClient/minecraft/net/minecraft/src/CommandServerEmote.java
index 22f9b1c..8d1baa4 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerEmote.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerEmote.java
@@ -18,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.me.usage", new Object[0]);
+		return "commands.me.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
@@ -31,7 +31,7 @@
 		if(par2ArrayOfStr.length > 0)
 		{
 			String var3 = func_82361_a(par1ICommandSender, par2ArrayOfStr, 0, par1ICommandSender.canCommandSenderUseCommand(1, "me"));
-			MinecraftServer.getServer().getConfigurationManager().sendPacketToAllPlayers(new Packet3Chat("* " + par1ICommandSender.getCommandSenderName() + " " + var3));
+			MinecraftServer.getServer().getConfigurationManager().sendChatMsg(ChatMessageComponent.func_111082_b("chat.type.emote", new Object[] { par1ICommandSender.getCommandSenderName(), var3 }));
 		} else throw new WrongUsageException("commands.me.usage", new Object[0]);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerKick.java b/RMCClient/minecraft/net/minecraft/src/CommandServerKick.java
index c89bd11..01b8770 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerKick.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerKick.java
@@ -18,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.kick.usage", new Object[0]);
+		return "commands.kick.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerList.java b/RMCClient/minecraft/net/minecraft/src/CommandServerList.java
index c625b17..eaee31a 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerList.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerList.java
@@ -9,6 +9,11 @@
 		return "list";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.players.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 0;
@@ -16,7 +21,7 @@
 	
 	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
-		par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.players.list", new Object[] { Integer.valueOf(MinecraftServer.getServer().getCurrentPlayerCount()), Integer.valueOf(MinecraftServer.getServer().getMaxPlayers()) }));
-		par1ICommandSender.sendChatToPlayer(MinecraftServer.getServer().getConfigurationManager().getPlayerListAsString());
+		par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.players.list", new Object[] { Integer.valueOf(MinecraftServer.getServer().getCurrentPlayerCount()), Integer.valueOf(MinecraftServer.getServer().getMaxPlayers()) }));
+		par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111066_d(MinecraftServer.getServer().getConfigurationManager().getPlayerListAsString()));
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerMessage.java b/RMCClient/minecraft/net/minecraft/src/CommandServerMessage.java
index ccbdcf0..aa35805 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerMessage.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerMessage.java
@@ -22,6 +22,11 @@
 		return "tell";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.message.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 0;
@@ -43,8 +48,8 @@
 			else
 			{
 				String var4 = func_82361_a(par1ICommandSender, par2ArrayOfStr, 1, !(par1ICommandSender instanceof EntityPlayer));
-				var3.sendChatToPlayer(EnumChatFormatting.GRAY + "" + EnumChatFormatting.ITALIC + var3.translateString("commands.message.display.incoming", new Object[] { par1ICommandSender.getCommandSenderName(), var4 }));
-				par1ICommandSender.sendChatToPlayer(EnumChatFormatting.GRAY + "" + EnumChatFormatting.ITALIC + par1ICommandSender.translateString("commands.message.display.outgoing", new Object[] { var3.getCommandSenderName(), var4 }));
+				var3.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.message.display.incoming", new Object[] { par1ICommandSender.getCommandSenderName(), var4 }).func_111059_a(EnumChatFormatting.GRAY).func_111063_b(Boolean.valueOf(true)));
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.message.display.outgoing", new Object[] { var3.getCommandSenderName(), var4 }).func_111059_a(EnumChatFormatting.GRAY).func_111063_b(Boolean.valueOf(true)));
 			}
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerOp.java b/RMCClient/minecraft/net/minecraft/src/CommandServerOp.java
index fa73f75..64f8895 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerOp.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerOp.java
@@ -34,7 +34,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.op.usage", new Object[0]);
+		return "commands.op.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerPardon.java b/RMCClient/minecraft/net/minecraft/src/CommandServerPardon.java
index f69b21e..fb39edb 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerPardon.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerPardon.java
@@ -23,7 +23,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.unban.usage", new Object[0]);
+		return "commands.unban.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerPardonIp.java b/RMCClient/minecraft/net/minecraft/src/CommandServerPardonIp.java
index f74a9b6..994aaf5 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerPardonIp.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerPardonIp.java
@@ -24,7 +24,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.unbanip.usage", new Object[0]);
+		return "commands.unbanip.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerPublishLocal.java b/RMCClient/minecraft/net/minecraft/src/CommandServerPublishLocal.java
index dedfb1f..fe37941 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerPublishLocal.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerPublishLocal.java
@@ -9,6 +9,11 @@
 		return "publish";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.publish.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 4;
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerSaveAll.java b/RMCClient/minecraft/net/minecraft/src/CommandServerSaveAll.java
index 9310571..a4fc221 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerSaveAll.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerSaveAll.java
@@ -9,6 +9,11 @@
 		return "save-all";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.save.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 4;
@@ -17,7 +22,7 @@
 	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
 		MinecraftServer var3 = MinecraftServer.getServer();
-		par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.save.start", new Object[0]));
+		par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111077_e("commands.save.start"));
 		if(var3.getConfigurationManager() != null)
 		{
 			var3.getConfigurationManager().saveAllPlayerData();
@@ -40,7 +45,7 @@
 			}
 			if(par2ArrayOfStr.length > 0 && "flush".equals(par2ArrayOfStr[0]))
 			{
-				par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.save.flushStart", new Object[0]));
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111077_e("commands.save.flushStart"));
 				for(var4 = 0; var4 < var3.worldServers.length; ++var4)
 				{
 					if(var3.worldServers[var4] != null)
@@ -52,7 +57,7 @@
 						var5.canNotSave = var6;
 					}
 				}
-				par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.save.flushEnd", new Object[0]));
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111077_e("commands.save.flushEnd"));
 			}
 		} catch(MinecraftException var7)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerSaveOff.java b/RMCClient/minecraft/net/minecraft/src/CommandServerSaveOff.java
index fafef4f..82ae48c 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerSaveOff.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerSaveOff.java
@@ -9,6 +9,11 @@
 		return "save-off";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.save-off.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 4;
@@ -17,14 +22,22 @@
 	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
 		MinecraftServer var3 = MinecraftServer.getServer();
+		boolean var4 = false;
 		for(WorldServer worldServer : var3.worldServers)
 		{
 			if(worldServer != null)
 			{
-				WorldServer var5 = worldServer;
-				var5.canNotSave = true;
+				WorldServer var6 = worldServer;
+				if(!var6.canNotSave)
+				{
+					var6.canNotSave = true;
+					var4 = true;
+				}
 			}
 		}
-		notifyAdmins(par1ICommandSender, "commands.save.disabled", new Object[0]);
+		if(var4)
+		{
+			notifyAdmins(par1ICommandSender, "commands.save.disabled", new Object[0]);
+		} else throw new CommandException("commands.save-off.alreadyOff", new Object[0]);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerSaveOn.java b/RMCClient/minecraft/net/minecraft/src/CommandServerSaveOn.java
index 8ff8034..719de78 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerSaveOn.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerSaveOn.java
@@ -9,6 +9,11 @@
 		return "save-on";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.save-on.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 4;
@@ -17,14 +22,22 @@
 	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
 		MinecraftServer var3 = MinecraftServer.getServer();
+		boolean var4 = false;
 		for(WorldServer worldServer : var3.worldServers)
 		{
 			if(worldServer != null)
 			{
-				WorldServer var5 = worldServer;
-				var5.canNotSave = false;
+				WorldServer var6 = worldServer;
+				if(var6.canNotSave)
+				{
+					var6.canNotSave = false;
+					var4 = true;
+				}
 			}
 		}
-		notifyAdmins(par1ICommandSender, "commands.save.enabled", new Object[0]);
+		if(var4)
+		{
+			notifyAdmins(par1ICommandSender, "commands.save.enabled", new Object[0]);
+		} else throw new CommandException("commands.save-on.alreadyOn", new Object[0]);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerSay.java b/RMCClient/minecraft/net/minecraft/src/CommandServerSay.java
index 2fad303..b041b78 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerSay.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerSay.java
@@ -18,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.say.usage", new Object[0]);
+		return "commands.say.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
@@ -31,7 +31,7 @@
 		if(par2ArrayOfStr.length > 0 && par2ArrayOfStr[0].length() > 0)
 		{
 			String var3 = func_82361_a(par1ICommandSender, par2ArrayOfStr, 0, true);
-			MinecraftServer.getServer().getConfigurationManager().sendChatMsg(String.format("[%s] %s", new Object[] { par1ICommandSender.getCommandSenderName(), var3 }));
+			MinecraftServer.getServer().getConfigurationManager().sendChatMsg(ChatMessageComponent.func_111082_b("chat.type.announcement", new Object[] { par1ICommandSender.getCommandSenderName(), var3 }));
 		} else throw new WrongUsageException("commands.say.usage", new Object[0]);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerStop.java b/RMCClient/minecraft/net/minecraft/src/CommandServerStop.java
index f4bcedc..c321b08 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerStop.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerStop.java
@@ -9,6 +9,11 @@
 		return "stop";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.stop.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 4;
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerTp.java b/RMCClient/minecraft/net/minecraft/src/CommandServerTp.java
index 7d4e261..70ccd7a 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerTp.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerTp.java
@@ -11,36 +11,6 @@
 		return par2ArrayOfStr.length != 1 && par2ArrayOfStr.length != 2 ? null : getListOfStringsMatchingLastWord(par2ArrayOfStr, MinecraftServer.getServer().getAllUsernames());
 	}
 	
-	private double func_82367_a(ICommandSender par1ICommandSender, double par2, String par4Str, int par5, int par6)
-	{
-		boolean var7 = par4Str.startsWith("~");
-		double var8 = var7 ? par2 : 0.0D;
-		if(!var7 || par4Str.length() > 1)
-		{
-			boolean var10 = par4Str.contains(".");
-			if(var7)
-			{
-				par4Str = par4Str.substring(1);
-			}
-			var8 += parseDouble(par1ICommandSender, par4Str);
-			if(!var10 && !var7)
-			{
-				var8 += 0.5D;
-			}
-		}
-		if(par5 != 0 || par6 != 0)
-		{
-			if(var8 < par5) throw new NumberInvalidException("commands.generic.double.tooSmall", new Object[] { Double.valueOf(var8), Integer.valueOf(par5) });
-			if(var8 > par6) throw new NumberInvalidException("commands.generic.double.tooBig", new Object[] { Double.valueOf(var8), Integer.valueOf(par6) });
-		}
-		return var8;
-	}
-	
-	private double func_82368_a(ICommandSender par1ICommandSender, double par2, String par4Str)
-	{
-		return func_82367_a(par1ICommandSender, par2, par4Str, -30000000, 30000000);
-	}
-	
 	@Override public String getCommandName()
 	{
 		return "tp";
@@ -48,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.tp.usage", new Object[0]);
+		return "commands.tp.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
@@ -93,9 +63,9 @@
 			} else if(var3.worldObj != null)
 			{
 				int var4 = par2ArrayOfStr.length - 3;
-				double var5 = func_82368_a(par1ICommandSender, var3.posX, par2ArrayOfStr[var4++]);
-				double var7 = func_82367_a(par1ICommandSender, var3.posY, par2ArrayOfStr[var4++], 0, 0);
-				double var9 = func_82368_a(par1ICommandSender, var3.posZ, par2ArrayOfStr[var4++]);
+				double var5 = func_110666_a(par1ICommandSender, var3.posX, par2ArrayOfStr[var4++]);
+				double var7 = func_110665_a(par1ICommandSender, var3.posY, par2ArrayOfStr[var4++], 0, 0);
+				double var9 = func_110666_a(par1ICommandSender, var3.posZ, par2ArrayOfStr[var4++]);
 				var3.mountEntity((Entity) null);
 				var3.setPositionAndUpdate(var5, var7, var9);
 				notifyAdmins(par1ICommandSender, "commands.tp.success.coordinates", new Object[] { var3.getEntityName(), Double.valueOf(var5), Double.valueOf(var7), Double.valueOf(var9) });
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandServerWhitelist.java b/RMCClient/minecraft/net/minecraft/src/CommandServerWhitelist.java
index 8d4bd03..796d68c 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandServerWhitelist.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandServerWhitelist.java
@@ -2,6 +2,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Set;
 
 import net.minecraft.server.MinecraftServer;
 
@@ -44,7 +45,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.whitelist.usage", new Object[0]);
+		return "commands.whitelist.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
@@ -70,8 +71,9 @@
 			}
 			if(par2ArrayOfStr[0].equals("list"))
 			{
-				par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.whitelist.list", new Object[] { Integer.valueOf(MinecraftServer.getServer().getConfigurationManager().getWhiteListedPlayers().size()), Integer.valueOf(MinecraftServer.getServer().getConfigurationManager().getAvailablePlayerDat().length) }));
-				par1ICommandSender.sendChatToPlayer(joinNiceString(MinecraftServer.getServer().getConfigurationManager().getWhiteListedPlayers().toArray(new String[0])));
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.whitelist.list", new Object[] { Integer.valueOf(MinecraftServer.getServer().getConfigurationManager().getWhiteListedPlayers().size()), Integer.valueOf(MinecraftServer.getServer().getConfigurationManager().getAvailablePlayerDat().length) }));
+				Set var3 = MinecraftServer.getServer().getConfigurationManager().getWhiteListedPlayers();
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111066_d(joinNiceString(var3.toArray(new String[var3.size()]))));
 				return;
 			}
 			if(par2ArrayOfStr[0].equals("add"))
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandSetSpawnpoint.java b/RMCClient/minecraft/net/minecraft/src/CommandSetSpawnpoint.java
index d0b1e52..9ae08a1 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandSetSpawnpoint.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandSetSpawnpoint.java
@@ -18,7 +18,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.spawnpoint.usage", new Object[0]);
+		return "commands.spawnpoint.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandShowSeed.java b/RMCClient/minecraft/net/minecraft/src/CommandShowSeed.java
index 3ac55a2..a285b5d 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandShowSeed.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandShowSeed.java
@@ -14,6 +14,11 @@
 		return "seed";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.seed.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 2;
@@ -22,6 +27,6 @@
 	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
 		Object var3 = par1ICommandSender instanceof EntityPlayer ? ((EntityPlayer) par1ICommandSender).worldObj : MinecraftServer.getServer().worldServerForDimension(0);
-		par1ICommandSender.sendChatToPlayer("Seed: " + ((World) var3).getSeed());
+		par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.seed.success", new Object[] { Long.valueOf(((World) var3).getSeed()) }));
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandSpreadPlayers.java b/RMCClient/minecraft/net/minecraft/src/CommandSpreadPlayers.java
new file mode 100644
index 0000000..173ebcd
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/CommandSpreadPlayers.java
@@ -0,0 +1,221 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Random;
+
+import net.minecraft.server.MinecraftServer;
+
+public class CommandSpreadPlayers extends CommandBase
+{
+	private int func_110667_a(List p_110667_1_)
+	{
+		HashSet var2 = Sets.newHashSet();
+		Iterator var3 = p_110667_1_.iterator();
+		while(var3.hasNext())
+		{
+			EntityLivingBase var4 = (EntityLivingBase) var3.next();
+			if(var4 instanceof EntityPlayer)
+			{
+				var2.add(((EntityPlayer) var4).getTeam());
+			} else
+			{
+				var2.add((Object) null);
+			}
+		}
+		return var2.size();
+	}
+	
+	private int func_110668_a(CommandSpreadPlayersPosition p_110668_1_, double p_110668_2_, World p_110668_4_, Random p_110668_5_, double p_110668_6_, double p_110668_8_, double p_110668_10_, double p_110668_12_, CommandSpreadPlayersPosition[] p_110668_14_, boolean p_110668_15_)
+	{
+		boolean var16 = true;
+		double var18 = 3.4028234663852886E38D;
+		int var17;
+		for(var17 = 0; var17 < 10000 && var16; ++var17)
+		{
+			var16 = false;
+			var18 = 3.4028234663852886E38D;
+			CommandSpreadPlayersPosition var23;
+			int var22;
+			for(int var20 = 0; var20 < p_110668_14_.length; ++var20)
+			{
+				CommandSpreadPlayersPosition var21 = p_110668_14_[var20];
+				var22 = 0;
+				var23 = new CommandSpreadPlayersPosition();
+				for(int var24 = 0; var24 < p_110668_14_.length; ++var24)
+				{
+					if(var20 != var24)
+					{
+						CommandSpreadPlayersPosition var25 = p_110668_14_[var24];
+						double var26 = var21.func_111099_a(var25);
+						var18 = Math.min(var26, var18);
+						if(var26 < p_110668_2_)
+						{
+							++var22;
+							var23.field_111101_a += var25.field_111101_a - var21.field_111101_a;
+							var23.field_111100_b += var25.field_111100_b - var21.field_111100_b;
+						}
+					}
+				}
+				if(var22 > 0)
+				{
+					var23.field_111101_a /= var22;
+					var23.field_111100_b /= var22;
+					double var30 = var23.func_111096_b();
+					if(var30 > 0.0D)
+					{
+						var23.func_111095_a();
+						var21.func_111094_b(var23);
+					} else
+					{
+						var21.func_111097_a(p_110668_5_, p_110668_6_, p_110668_8_, p_110668_10_, p_110668_12_);
+					}
+					var16 = true;
+				}
+				if(var21.func_111093_a(p_110668_6_, p_110668_8_, p_110668_10_, p_110668_12_))
+				{
+					var16 = true;
+				}
+			}
+			if(!var16)
+			{
+				CommandSpreadPlayersPosition[] var28 = p_110668_14_;
+				int var29 = p_110668_14_.length;
+				for(var22 = 0; var22 < var29; ++var22)
+				{
+					var23 = var28[var22];
+					if(!var23.func_111098_b(p_110668_4_))
+					{
+						var23.func_111097_a(p_110668_5_, p_110668_6_, p_110668_8_, p_110668_10_, p_110668_12_);
+						var16 = true;
+					}
+				}
+			}
+		}
+		if(var17 >= 10000) throw new CommandException("commands.spreadplayers.failure." + (p_110668_15_ ? "teams" : "players"), new Object[] { Integer.valueOf(p_110668_14_.length), Double.valueOf(p_110668_1_.field_111101_a), Double.valueOf(p_110668_1_.field_111100_b), String.format("%.2f", new Object[] { Double.valueOf(var18) }) });
+		else return var17;
+	}
+	
+	private void func_110669_a(ICommandSender p_110669_1_, List p_110669_2_, CommandSpreadPlayersPosition p_110669_3_, double p_110669_4_, double p_110669_6_, World p_110669_8_, boolean p_110669_9_)
+	{
+		Random var10 = new Random();
+		double var11 = p_110669_3_.field_111101_a - p_110669_6_;
+		double var13 = p_110669_3_.field_111100_b - p_110669_6_;
+		double var15 = p_110669_3_.field_111101_a + p_110669_6_;
+		double var17 = p_110669_3_.field_111100_b + p_110669_6_;
+		CommandSpreadPlayersPosition[] var19 = func_110670_a(var10, p_110669_9_ ? func_110667_a(p_110669_2_) : p_110669_2_.size(), var11, var13, var15, var17);
+		int var20 = func_110668_a(p_110669_3_, p_110669_4_, p_110669_8_, var10, var11, var13, var15, var17, var19, p_110669_9_);
+		double var21 = func_110671_a(p_110669_2_, p_110669_8_, var19, p_110669_9_);
+		notifyAdmins(p_110669_1_, "commands.spreadplayers.success." + (p_110669_9_ ? "teams" : "players"), new Object[] { Integer.valueOf(var19.length), Double.valueOf(p_110669_3_.field_111101_a), Double.valueOf(p_110669_3_.field_111100_b) });
+		if(var19.length > 1)
+		{
+			p_110669_1_.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.spreadplayers.info." + (p_110669_9_ ? "teams" : "players"), new Object[] { String.format("%.2f", new Object[] { Double.valueOf(var21) }), Integer.valueOf(var20) }));
+		}
+	}
+	
+	private CommandSpreadPlayersPosition[] func_110670_a(Random p_110670_1_, int p_110670_2_, double p_110670_3_, double p_110670_5_, double p_110670_7_, double p_110670_9_)
+	{
+		CommandSpreadPlayersPosition[] var11 = new CommandSpreadPlayersPosition[p_110670_2_];
+		for(int var12 = 0; var12 < var11.length; ++var12)
+		{
+			CommandSpreadPlayersPosition var13 = new CommandSpreadPlayersPosition();
+			var13.func_111097_a(p_110670_1_, p_110670_3_, p_110670_5_, p_110670_7_, p_110670_9_);
+			var11[var12] = var13;
+		}
+		return var11;
+	}
+	
+	private double func_110671_a(List p_110671_1_, World p_110671_2_, CommandSpreadPlayersPosition[] p_110671_3_, boolean p_110671_4_)
+	{
+		double var5 = 0.0D;
+		int var7 = 0;
+		HashMap var8 = Maps.newHashMap();
+		for(int var9 = 0; var9 < p_110671_1_.size(); ++var9)
+		{
+			EntityLivingBase var10 = (EntityLivingBase) p_110671_1_.get(var9);
+			CommandSpreadPlayersPosition var11;
+			if(p_110671_4_)
+			{
+				Team var12 = var10 instanceof EntityPlayer ? ((EntityPlayer) var10).getTeam() : null;
+				if(!var8.containsKey(var12))
+				{
+					var8.put(var12, p_110671_3_[var7++]);
+				}
+				var11 = (CommandSpreadPlayersPosition) var8.get(var12);
+			} else
+			{
+				var11 = p_110671_3_[var7++];
+			}
+			var10.setPositionAndUpdate(MathHelper.floor_double(var11.field_111101_a) + 0.5F, var11.func_111092_a(p_110671_2_), MathHelper.floor_double(var11.field_111100_b) + 0.5D);
+			double var17 = Double.MAX_VALUE;
+			for(CommandSpreadPlayersPosition element : p_110671_3_)
+			{
+				if(var11 != element)
+				{
+					double var15 = var11.func_111099_a(element);
+					var17 = Math.min(var15, var17);
+				}
+			}
+			var5 += var17;
+		}
+		var5 /= p_110671_1_.size();
+		return var5;
+	}
+	
+	@Override public String getCommandName()
+	{
+		return "spreadplayers";
+	}
+	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.spreadplayers.usage";
+	}
+	
+	@Override public int getRequiredPermissionLevel()
+	{
+		return 2;
+	}
+	
+	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
+	{
+		if(par2ArrayOfStr.length < 6) throw new WrongUsageException("commands.spreadplayers.usage", new Object[0]);
+		else
+		{
+			byte var3 = 0;
+			int var17 = var3 + 1;
+			double var4 = func_110666_a(par1ICommandSender, Double.NaN, par2ArrayOfStr[var3]);
+			double var6 = func_110666_a(par1ICommandSender, Double.NaN, par2ArrayOfStr[var17++]);
+			double var8 = func_110664_a(par1ICommandSender, par2ArrayOfStr[var17++], 0.0D);
+			double var10 = func_110664_a(par1ICommandSender, par2ArrayOfStr[var17++], var8 + 1.0D);
+			boolean var12 = func_110662_c(par1ICommandSender, par2ArrayOfStr[var17++]);
+			ArrayList var13 = Lists.newArrayList();
+			while(true)
+			{
+				while(var17 < par2ArrayOfStr.length)
+				{
+					String var14 = par2ArrayOfStr[var17++];
+					if(PlayerSelector.hasArguments(var14))
+					{
+						EntityPlayerMP[] var18 = PlayerSelector.matchPlayers(par1ICommandSender, var14);
+						if(var18 == null || var18.length == 0) throw new PlayerNotFoundException();
+						Collections.addAll(var13, var18);
+					} else
+					{
+						EntityPlayerMP var15 = MinecraftServer.getServer().getConfigurationManager().getPlayerForUsername(var14);
+						if(var15 == null) throw new PlayerNotFoundException();
+						var13.add(var15);
+					}
+				}
+				if(var13.isEmpty()) throw new PlayerNotFoundException();
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.spreadplayers.spreading." + (var12 ? "teams" : "players"), new Object[] { func_110663_b(var13), Double.valueOf(var4), Double.valueOf(var6), Double.valueOf(var8), Double.valueOf(var10) }));
+				func_110669_a(par1ICommandSender, var13, new CommandSpreadPlayersPosition(var4, var6), var8, var10, ((EntityLivingBase) var13.get(0)).worldObj, var12);
+				return;
+			}
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandSpreadPlayersPosition.java b/RMCClient/minecraft/net/minecraft/src/CommandSpreadPlayersPosition.java
new file mode 100644
index 0000000..95ecf3d
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/CommandSpreadPlayersPosition.java
@@ -0,0 +1,102 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+class CommandSpreadPlayersPosition
+{
+	double field_111101_a;
+	double field_111100_b;
+	
+	CommandSpreadPlayersPosition()
+	{
+	}
+	
+	CommandSpreadPlayersPosition(double p_i1358_1_, double p_i1358_3_)
+	{
+		field_111101_a = p_i1358_1_;
+		field_111100_b = p_i1358_3_;
+	}
+	
+	public int func_111092_a(World p_111092_1_)
+	{
+		int var2 = MathHelper.floor_double(field_111101_a);
+		int var3 = MathHelper.floor_double(field_111100_b);
+		for(int var4 = 256; var4 > 0; --var4)
+		{
+			int var5 = p_111092_1_.getBlockId(var2, var4, var3);
+			if(var5 != 0) return var4 + 1;
+		}
+		return 257;
+	}
+	
+	public boolean func_111093_a(double p_111093_1_, double p_111093_3_, double p_111093_5_, double p_111093_7_)
+	{
+		boolean var9 = false;
+		if(field_111101_a < p_111093_1_)
+		{
+			field_111101_a = p_111093_1_;
+			var9 = true;
+		} else if(field_111101_a > p_111093_5_)
+		{
+			field_111101_a = p_111093_5_;
+			var9 = true;
+		}
+		if(field_111100_b < p_111093_3_)
+		{
+			field_111100_b = p_111093_3_;
+			var9 = true;
+		} else if(field_111100_b > p_111093_7_)
+		{
+			field_111100_b = p_111093_7_;
+			var9 = true;
+		}
+		return var9;
+	}
+	
+	public void func_111094_b(CommandSpreadPlayersPosition p_111094_1_)
+	{
+		field_111101_a -= p_111094_1_.field_111101_a;
+		field_111100_b -= p_111094_1_.field_111100_b;
+	}
+	
+	void func_111095_a()
+	{
+		double var1 = func_111096_b();
+		field_111101_a /= var1;
+		field_111100_b /= var1;
+	}
+	
+	float func_111096_b()
+	{
+		return MathHelper.sqrt_double(field_111101_a * field_111101_a + field_111100_b * field_111100_b);
+	}
+	
+	public void func_111097_a(Random p_111097_1_, double p_111097_2_, double p_111097_4_, double p_111097_6_, double p_111097_8_)
+	{
+		field_111101_a = MathHelper.getRandomDoubleInRange(p_111097_1_, p_111097_2_, p_111097_6_);
+		field_111100_b = MathHelper.getRandomDoubleInRange(p_111097_1_, p_111097_4_, p_111097_8_);
+	}
+	
+	public boolean func_111098_b(World p_111098_1_)
+	{
+		int var2 = MathHelper.floor_double(field_111101_a);
+		int var3 = MathHelper.floor_double(field_111100_b);
+		for(int var4 = 256; var4 > 0; --var4)
+		{
+			int var5 = p_111098_1_.getBlockId(var2, var4, var3);
+			if(var5 != 0)
+			{
+				Material var6 = Block.blocksList[var5].blockMaterial;
+				return !var6.isLiquid() && var6 != Material.fire;
+			}
+		}
+		return false;
+	}
+	
+	double func_111099_a(CommandSpreadPlayersPosition p_111099_1_)
+	{
+		double var2 = field_111101_a - p_111099_1_.field_111101_a;
+		double var4 = field_111100_b - p_111099_1_.field_111100_b;
+		return Math.sqrt(var2 * var2 + var4 * var4);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandTime.java b/RMCClient/minecraft/net/minecraft/src/CommandTime.java
index e50a87f..8227641 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandTime.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandTime.java
@@ -26,7 +26,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.time.usage", new Object[0]);
+		return "commands.time.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandToggleDownfall.java b/RMCClient/minecraft/net/minecraft/src/CommandToggleDownfall.java
index 7c06613..ea14670 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandToggleDownfall.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandToggleDownfall.java
@@ -9,6 +9,11 @@
 		return "toggledownfall";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.downfall.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 2;
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandWeather.java b/RMCClient/minecraft/net/minecraft/src/CommandWeather.java
index d6e8fee..95605c3 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandWeather.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandWeather.java
@@ -17,6 +17,11 @@
 		return "weather";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.weather.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 2;
@@ -24,8 +29,7 @@
 	
 	@Override public void processCommand(ICommandSender par1ICommandSender, String[] par2ArrayOfStr)
 	{
-		if(par2ArrayOfStr.length < 1) throw new WrongUsageException("commands.weather.usage", new Object[0]);
-		else
+		if(par2ArrayOfStr.length >= 1 && par2ArrayOfStr.length <= 2)
 		{
 			int var3 = (300 + new Random().nextInt(600)) * 20;
 			if(par2ArrayOfStr.length >= 2)
@@ -46,12 +50,13 @@
 				var5.setRaining(true);
 				var5.setThundering(false);
 				notifyAdmins(par1ICommandSender, "commands.weather.rain", new Object[0]);
-			} else if("thunder".equalsIgnoreCase(par2ArrayOfStr[0]))
+			} else
 			{
+				if(!"thunder".equalsIgnoreCase(par2ArrayOfStr[0])) throw new WrongUsageException("commands.weather.usage", new Object[0]);
 				var5.setRaining(true);
 				var5.setThundering(true);
 				notifyAdmins(par1ICommandSender, "commands.weather.thunder", new Object[0]);
 			}
-		}
+		} else throw new WrongUsageException("commands.weather.usage", new Object[0]);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CommandXP.java b/RMCClient/minecraft/net/minecraft/src/CommandXP.java
index 5f9b725..d60c991 100644
--- a/RMCClient/minecraft/net/minecraft/src/CommandXP.java
+++ b/RMCClient/minecraft/net/minecraft/src/CommandXP.java
@@ -23,7 +23,7 @@
 	
 	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
 	{
-		return par1ICommandSender.translateString("commands.xp.usage", new Object[0]);
+		return "commands.xp.usage";
 	}
 	
 	@Override public int getRequiredPermissionLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/ComparatorClassSorter.java b/RMCClient/minecraft/net/minecraft/src/ComparatorClassSorter.java
index 3007317..deead76 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComparatorClassSorter.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComparatorClassSorter.java
@@ -6,9 +6,9 @@
 {
 	final CallableSuspiciousClasses theSuspiciousClasses;
 	
-	ComparatorClassSorter(CallableSuspiciousClasses par1CallableSuspiciousClasses)
+	ComparatorClassSorter(CallableSuspiciousClasses p_i1345_1_)
 	{
-		theSuspiciousClasses = par1CallableSuspiciousClasses;
+		theSuspiciousClasses = p_i1345_1_;
 	}
 	
 	@Override public int compare(Object par1Obj, Object par2Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftCorridor.java b/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftCorridor.java
index 3941f34..42a38a7 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftCorridor.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftCorridor.java
@@ -10,19 +10,19 @@
 	private boolean spawnerPlaced;
 	private int sectionCount;
 	
-	public ComponentMineshaftCorridor(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentMineshaftCorridor(int p_i2035_1_, Random p_i2035_2_, StructureBoundingBox p_i2035_3_, int p_i2035_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
-		hasRails = par2Random.nextInt(3) == 0;
-		hasSpiders = !hasRails && par2Random.nextInt(23) == 0;
+		super(p_i2035_1_);
+		coordBaseMode = p_i2035_4_;
+		boundingBox = p_i2035_3_;
+		hasRails = p_i2035_2_.nextInt(3) == 0;
+		hasSpiders = !hasRails && p_i2035_2_.nextInt(23) == 0;
 		if(coordBaseMode != 2 && coordBaseMode != 0)
 		{
-			sectionCount = par3StructureBoundingBox.getXSize() / 5;
+			sectionCount = p_i2035_3_.getXSize() / 5;
 		} else
 		{
-			sectionCount = par3StructureBoundingBox.getZSize() / 5;
+			sectionCount = p_i2035_3_.getZSize() / 5;
 		}
 	}
 	
@@ -31,6 +31,10 @@
 		if(isLiquidInStructureBoundingBox(par1World, par3StructureBoundingBox)) return false;
 		else
 		{
+			boolean var4 = false;
+			boolean var5 = true;
+			boolean var6 = false;
+			boolean var7 = true;
 			int var8 = sectionCount * 5 - 1;
 			fillWithBlocks(par1World, par3StructureBoundingBox, 0, 0, 0, 2, 1, var8, 0, 0, false);
 			randomlyFillWithBlocks(par1World, par3StructureBoundingBox, par2Random, 0.8F, 0, 2, 0, 2, 2, var8, 0, 0, false);
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftCross.java b/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftCross.java
index c684991..8719873 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftCross.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftCross.java
@@ -8,12 +8,12 @@
 	private final int corridorDirection;
 	private final boolean isMultipleFloors;
 	
-	public ComponentMineshaftCross(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentMineshaftCross(int p_i2036_1_, Random p_i2036_2_, StructureBoundingBox p_i2036_3_, int p_i2036_4_)
 	{
-		super(par1);
-		corridorDirection = par4;
-		boundingBox = par3StructureBoundingBox;
-		isMultipleFloors = par3StructureBoundingBox.getYSize() > 3;
+		super(p_i2036_1_);
+		corridorDirection = p_i2036_4_;
+		boundingBox = p_i2036_3_;
+		isMultipleFloors = p_i2036_3_.getYSize() > 3;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftRoom.java b/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftRoom.java
index 32d7a28..395c7de 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftRoom.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftRoom.java
@@ -9,10 +9,10 @@
 {
 	private List roomsLinkedToTheRoom = new LinkedList();
 	
-	public ComponentMineshaftRoom(int par1, Random par2Random, int par3, int par4)
+	public ComponentMineshaftRoom(int p_i2037_1_, Random p_i2037_2_, int p_i2037_3_, int p_i2037_4_)
 	{
-		super(par1);
-		boundingBox = new StructureBoundingBox(par3, 50, par4, par3 + 7 + par2Random.nextInt(6), 54 + par2Random.nextInt(6), par4 + 7 + par2Random.nextInt(6));
+		super(p_i2037_1_);
+		boundingBox = new StructureBoundingBox(p_i2037_3_, 50, p_i2037_4_, p_i2037_3_ + 7 + p_i2037_2_.nextInt(6), 54 + p_i2037_2_.nextInt(6), p_i2037_4_ + 7 + p_i2037_2_.nextInt(6));
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftStairs.java b/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftStairs.java
index ccf3296..c755331 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftStairs.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentMineshaftStairs.java
@@ -5,11 +5,11 @@
 
 public class ComponentMineshaftStairs extends StructureComponent
 {
-	public ComponentMineshaftStairs(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentMineshaftStairs(int p_i2038_1_, Random p_i2038_2_, StructureBoundingBox p_i2038_3_, int p_i2038_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2038_1_);
+		coordBaseMode = p_i2038_4_;
+		boundingBox = p_i2038_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor.java
index b1b4f00..2981e2d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor.java
@@ -5,11 +5,14 @@
 
 public class ComponentNetherBridgeCorridor extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeCorridor(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	private boolean field_111021_b;
+	
+	public ComponentNetherBridgeCorridor(int p_i2049_1_, Random p_i2049_2_, StructureBoundingBox p_i2049_3_, int p_i2049_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2049_1_);
+		coordBaseMode = p_i2049_4_;
+		boundingBox = p_i2049_3_;
+		field_111021_b = p_i2049_2_.nextInt(3) == 0;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
@@ -23,10 +26,23 @@
 		fillWithBlocks(par1World, par3StructureBoundingBox, 0, 2, 4, 3, 5, 4, Block.netherBrick.blockID, Block.netherBrick.blockID, false);
 		fillWithBlocks(par1World, par3StructureBoundingBox, 1, 3, 4, 1, 4, 4, Block.netherFence.blockID, Block.netherBrick.blockID, false);
 		fillWithBlocks(par1World, par3StructureBoundingBox, 3, 3, 4, 3, 4, 4, Block.netherFence.blockID, Block.netherBrick.blockID, false);
-		fillWithBlocks(par1World, par3StructureBoundingBox, 0, 6, 0, 4, 6, 4, Block.netherBrick.blockID, Block.netherBrick.blockID, false);
-		for(int var4 = 0; var4 <= 4; ++var4)
+		int var4;
+		int var5;
+		if(field_111021_b)
 		{
-			for(int var5 = 0; var5 <= 4; ++var5)
+			var4 = getYWithOffset(2);
+			var5 = getXWithOffset(3, 3);
+			int var6 = getZWithOffset(3, 3);
+			if(par3StructureBoundingBox.isVecInside(var5, var4, var6))
+			{
+				field_111021_b = false;
+				generateStructureChestContents(par1World, par3StructureBoundingBox, par2Random, 3, 2, 3, field_111019_a, 2 + par2Random.nextInt(4));
+			}
+		}
+		fillWithBlocks(par1World, par3StructureBoundingBox, 0, 6, 0, 4, 6, 4, Block.netherBrick.blockID, Block.netherBrick.blockID, false);
+		for(var4 = 0; var4 <= 4; ++var4)
+		{
+			for(var5 = 0; var5 <= 4; ++var5)
 			{
 				fillCurrentPositionBlocksDownwards(par1World, Block.netherBrick.blockID, 0, var4, -1, var5, par3StructureBoundingBox);
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor2.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor2.java
index d574426..cc47fa1 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor2.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor2.java
@@ -5,11 +5,14 @@
 
 public class ComponentNetherBridgeCorridor2 extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeCorridor2(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	private boolean field_111020_b;
+	
+	public ComponentNetherBridgeCorridor2(int p_i2051_1_, Random p_i2051_2_, StructureBoundingBox p_i2051_3_, int p_i2051_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2051_1_);
+		coordBaseMode = p_i2051_4_;
+		boundingBox = p_i2051_3_;
+		field_111020_b = p_i2051_2_.nextInt(3) == 0;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
@@ -23,10 +26,23 @@
 		fillWithBlocks(par1World, par3StructureBoundingBox, 1, 2, 4, 4, 5, 4, Block.netherBrick.blockID, Block.netherBrick.blockID, false);
 		fillWithBlocks(par1World, par3StructureBoundingBox, 1, 3, 4, 1, 4, 4, Block.netherFence.blockID, Block.netherBrick.blockID, false);
 		fillWithBlocks(par1World, par3StructureBoundingBox, 3, 3, 4, 3, 4, 4, Block.netherFence.blockID, Block.netherBrick.blockID, false);
-		fillWithBlocks(par1World, par3StructureBoundingBox, 0, 6, 0, 4, 6, 4, Block.netherBrick.blockID, Block.netherBrick.blockID, false);
-		for(int var4 = 0; var4 <= 4; ++var4)
+		int var4;
+		int var5;
+		if(field_111020_b)
 		{
-			for(int var5 = 0; var5 <= 4; ++var5)
+			var4 = getYWithOffset(2);
+			var5 = getXWithOffset(1, 3);
+			int var6 = getZWithOffset(1, 3);
+			if(par3StructureBoundingBox.isVecInside(var5, var4, var6))
+			{
+				field_111020_b = false;
+				generateStructureChestContents(par1World, par3StructureBoundingBox, par2Random, 1, 2, 3, field_111019_a, 2 + par2Random.nextInt(4));
+			}
+		}
+		fillWithBlocks(par1World, par3StructureBoundingBox, 0, 6, 0, 4, 6, 4, Block.netherBrick.blockID, Block.netherBrick.blockID, false);
+		for(var4 = 0; var4 <= 4; ++var4)
+		{
+			for(var5 = 0; var5 <= 4; ++var5)
 			{
 				fillCurrentPositionBlocksDownwards(par1World, Block.netherBrick.blockID, 0, var4, -1, var5, par3StructureBoundingBox);
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor3.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor3.java
index 0e2b5d7..df94a25 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor3.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor3.java
@@ -5,11 +5,11 @@
 
 public class ComponentNetherBridgeCorridor3 extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeCorridor3(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeCorridor3(int p_i2045_1_, Random p_i2045_2_, StructureBoundingBox p_i2045_3_, int p_i2045_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2045_1_);
+		coordBaseMode = p_i2045_4_;
+		boundingBox = p_i2045_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor4.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor4.java
index 5303525..5d55f9c 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor4.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor4.java
@@ -5,11 +5,11 @@
 
 public class ComponentNetherBridgeCorridor4 extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeCorridor4(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeCorridor4(int p_i2046_1_, Random p_i2046_2_, StructureBoundingBox p_i2046_3_, int p_i2046_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2046_1_);
+		coordBaseMode = p_i2046_4_;
+		boundingBox = p_i2046_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor5.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor5.java
index 427b577..99125e0 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor5.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCorridor5.java
@@ -5,11 +5,11 @@
 
 public class ComponentNetherBridgeCorridor5 extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeCorridor5(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeCorridor5(int p_i2050_1_, Random p_i2050_2_, StructureBoundingBox p_i2050_3_, int p_i2050_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2050_1_);
+		coordBaseMode = p_i2050_4_;
+		boundingBox = p_i2050_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing.java
index 57cb784..dc8f9a7 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing.java
@@ -5,11 +5,11 @@
 
 public class ComponentNetherBridgeCrossing extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeCrossing(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeCrossing(int p_i2057_1_, Random p_i2057_2_, StructureBoundingBox p_i2057_3_, int p_i2057_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2057_1_);
+		coordBaseMode = p_i2057_4_;
+		boundingBox = p_i2057_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing2.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing2.java
index 0bce5b1..e5003fa 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing2.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing2.java
@@ -5,11 +5,11 @@
 
 public class ComponentNetherBridgeCrossing2 extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeCrossing2(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeCrossing2(int p_i2048_1_, Random p_i2048_2_, StructureBoundingBox p_i2048_3_, int p_i2048_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2048_1_);
+		coordBaseMode = p_i2048_4_;
+		boundingBox = p_i2048_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing3.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing3.java
index 793aa92..53db535 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing3.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeCrossing3.java
@@ -5,25 +5,25 @@
 
 public class ComponentNetherBridgeCrossing3 extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeCrossing3(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeCrossing3(int p_i2041_1_, Random p_i2041_2_, StructureBoundingBox p_i2041_3_, int p_i2041_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2041_1_);
+		coordBaseMode = p_i2041_4_;
+		boundingBox = p_i2041_3_;
 	}
 	
-	protected ComponentNetherBridgeCrossing3(Random par1Random, int par2, int par3)
+	protected ComponentNetherBridgeCrossing3(Random p_i2042_1_, int p_i2042_2_, int p_i2042_3_)
 	{
 		super(0);
-		coordBaseMode = par1Random.nextInt(4);
+		coordBaseMode = p_i2042_1_.nextInt(4);
 		switch(coordBaseMode)
 		{
 			case 0:
 			case 2:
-				boundingBox = new StructureBoundingBox(par2, 64, par3, par2 + 19 - 1, 73, par3 + 19 - 1);
+				boundingBox = new StructureBoundingBox(p_i2042_2_, 64, p_i2042_3_, p_i2042_2_ + 19 - 1, 73, p_i2042_3_ + 19 - 1);
 				break;
 			default:
-				boundingBox = new StructureBoundingBox(par2, 64, par3, par2 + 19 - 1, 73, par3 + 19 - 1);
+				boundingBox = new StructureBoundingBox(p_i2042_2_, 64, p_i2042_3_, p_i2042_2_ + 19 - 1, 73, p_i2042_3_ + 19 - 1);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeEnd.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeEnd.java
index 69b5bc8..9c619b5 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeEnd.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeEnd.java
@@ -7,12 +7,12 @@
 {
 	private int fillSeed;
 	
-	public ComponentNetherBridgeEnd(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeEnd(int p_i2043_1_, Random p_i2043_2_, StructureBoundingBox p_i2043_3_, int p_i2043_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
-		fillSeed = par2Random.nextInt();
+		super(p_i2043_1_);
+		coordBaseMode = p_i2043_4_;
+		boundingBox = p_i2043_3_;
+		fillSeed = p_i2043_2_.nextInt();
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeEntrance.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeEntrance.java
index e44b69b..f02069d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeEntrance.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeEntrance.java
@@ -5,11 +5,11 @@
 
 public class ComponentNetherBridgeEntrance extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeEntrance(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeEntrance(int p_i2047_1_, Random p_i2047_2_, StructureBoundingBox p_i2047_3_, int p_i2047_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2047_1_);
+		coordBaseMode = p_i2047_4_;
+		boundingBox = p_i2047_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeNetherStalkRoom.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeNetherStalkRoom.java
index c1eedb6..4a7fb85 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeNetherStalkRoom.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeNetherStalkRoom.java
@@ -5,11 +5,11 @@
 
 public class ComponentNetherBridgeNetherStalkRoom extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeNetherStalkRoom(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeNetherStalkRoom(int p_i2052_1_, Random p_i2052_2_, StructureBoundingBox p_i2052_3_, int p_i2052_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2052_1_);
+		coordBaseMode = p_i2052_4_;
+		boundingBox = p_i2052_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgePiece.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgePiece.java
index eb6d1f4..c259b5a 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgePiece.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgePiece.java
@@ -6,9 +6,11 @@
 
 abstract class ComponentNetherBridgePiece extends StructureComponent
 {
-	protected ComponentNetherBridgePiece(int par1)
+	protected static final WeightedRandomChestContent[] field_111019_a = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 3, 5), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 5), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.swordGold.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.plateGold.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.flintAndSteel.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.netherStalkSeeds.itemID, 0, 3, 7, 5), new WeightedRandomChestContent(Item.saddle.itemID, 0, 1, 1, 10), new WeightedRandomChestContent(Item.field_111216_cf.itemID, 0, 1, 1, 8), new WeightedRandomChestContent(Item.field_111215_ce.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.field_111213_cg.itemID, 0, 1, 1, 3) };
+	
+	protected ComponentNetherBridgePiece(int p_i2054_1_)
 	{
-		super(par1);
+		super(p_i2054_1_);
 	}
 	
 	private ComponentNetherBridgePiece getNextComponent(ComponentNetherBridgeStartPiece par1ComponentNetherBridgeStartPiece, List par2List, List par3List, Random par4Random, int par5, int par6, int par7, int par8, int par9)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStairs.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStairs.java
index a897f60..66769db 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStairs.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStairs.java
@@ -5,11 +5,11 @@
 
 public class ComponentNetherBridgeStairs extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeStairs(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeStairs(int p_i2058_1_, Random p_i2058_2_, StructureBoundingBox p_i2058_3_, int p_i2058_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2058_1_);
+		coordBaseMode = p_i2058_4_;
+		boundingBox = p_i2058_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStartPiece.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStartPiece.java
index c7cbc27..f19788b 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStartPiece.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStartPiece.java
@@ -11,9 +11,9 @@
 	public List secondaryWeights;
 	public ArrayList field_74967_d = new ArrayList();
 	
-	public ComponentNetherBridgeStartPiece(Random par1Random, int par2, int par3)
+	public ComponentNetherBridgeStartPiece(Random p_i2059_1_, int p_i2059_2_, int p_i2059_3_)
 	{
-		super(par1Random, par2, par3);
+		super(p_i2059_1_, p_i2059_2_, p_i2059_3_);
 		StructureNetherBridgePieceWeight[] var4 = StructureNetherBridgePieces.getPrimaryComponents();
 		int var5 = var4.length;
 		int var6;
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStraight.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStraight.java
index c1cbb82..f123c6f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStraight.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeStraight.java
@@ -5,11 +5,11 @@
 
 public class ComponentNetherBridgeStraight extends ComponentNetherBridgePiece
 {
-	public ComponentNetherBridgeStraight(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeStraight(int p_i2044_1_, Random p_i2044_2_, StructureBoundingBox p_i2044_3_, int p_i2044_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2044_1_);
+		coordBaseMode = p_i2044_4_;
+		boundingBox = p_i2044_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeThrone.java b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeThrone.java
index a6ae1f9..761168b 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeThrone.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentNetherBridgeThrone.java
@@ -7,11 +7,11 @@
 {
 	private boolean hasSpawner;
 	
-	public ComponentNetherBridgeThrone(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentNetherBridgeThrone(int p_i2053_1_, Random p_i2053_2_, StructureBoundingBox p_i2053_3_, int p_i2053_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2053_1_);
+		coordBaseMode = p_i2053_4_;
+		boundingBox = p_i2053_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeature.java b/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeature.java
index 641424c..98d54cf 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeature.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeature.java
@@ -9,21 +9,21 @@
 	protected final int scatteredFeatureSizeZ;
 	protected int field_74936_d = -1;
 	
-	protected ComponentScatteredFeature(Random par1Random, int par2, int par3, int par4, int par5, int par6, int par7)
+	protected ComponentScatteredFeature(Random p_i2065_1_, int p_i2065_2_, int p_i2065_3_, int p_i2065_4_, int p_i2065_5_, int p_i2065_6_, int p_i2065_7_)
 	{
 		super(0);
-		scatteredFeatureSizeX = par5;
-		scatteredFeatureSizeY = par6;
-		scatteredFeatureSizeZ = par7;
-		coordBaseMode = par1Random.nextInt(4);
+		scatteredFeatureSizeX = p_i2065_5_;
+		scatteredFeatureSizeY = p_i2065_6_;
+		scatteredFeatureSizeZ = p_i2065_7_;
+		coordBaseMode = p_i2065_1_.nextInt(4);
 		switch(coordBaseMode)
 		{
 			case 0:
 			case 2:
-				boundingBox = new StructureBoundingBox(par2, par3, par4, par2 + par5 - 1, par3 + par6 - 1, par4 + par7 - 1);
+				boundingBox = new StructureBoundingBox(p_i2065_2_, p_i2065_3_, p_i2065_4_, p_i2065_2_ + p_i2065_5_ - 1, p_i2065_3_ + p_i2065_6_ - 1, p_i2065_4_ + p_i2065_7_ - 1);
 				break;
 			default:
-				boundingBox = new StructureBoundingBox(par2, par3, par4, par2 + par7 - 1, par3 + par6 - 1, par4 + par5 - 1);
+				boundingBox = new StructureBoundingBox(p_i2065_2_, p_i2065_3_, p_i2065_4_, p_i2065_2_ + p_i2065_7_ - 1, p_i2065_3_ + p_i2065_6_ - 1, p_i2065_4_ + p_i2065_5_ - 1);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureDesertPyramid.java b/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureDesertPyramid.java
index ad856a2..9b69a67 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureDesertPyramid.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureDesertPyramid.java
@@ -5,11 +5,11 @@
 public class ComponentScatteredFeatureDesertPyramid extends ComponentScatteredFeature
 {
 	private boolean[] field_74940_h = new boolean[4];
-	private static final WeightedRandomChestContent[] itemsToGenerateInTemple = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 3, 3), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 2, 7, 15), new WeightedRandomChestContent(Item.emerald.itemID, 0, 1, 3, 2), new WeightedRandomChestContent(Item.bone.itemID, 0, 4, 6, 20), new WeightedRandomChestContent(Item.rottenFlesh.itemID, 0, 3, 7, 16) };
+	private static final WeightedRandomChestContent[] itemsToGenerateInTemple = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 3, 3), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 2, 7, 15), new WeightedRandomChestContent(Item.emerald.itemID, 0, 1, 3, 2), new WeightedRandomChestContent(Item.bone.itemID, 0, 4, 6, 20), new WeightedRandomChestContent(Item.rottenFlesh.itemID, 0, 3, 7, 16), new WeightedRandomChestContent(Item.saddle.itemID, 0, 1, 1, 3), new WeightedRandomChestContent(Item.field_111215_ce.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.field_111216_cf.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.field_111213_cg.itemID, 0, 1, 1, 1) };
 	
-	public ComponentScatteredFeatureDesertPyramid(Random par1Random, int par2, int par3)
+	public ComponentScatteredFeatureDesertPyramid(Random p_i2062_1_, int p_i2062_2_, int p_i2062_3_)
 	{
-		super(par1Random, par2, 64, par3, 21, 15, 21);
+		super(p_i2062_1_, p_i2062_2_, 64, p_i2062_3_, 21, 15, 21);
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureJunglePyramid.java b/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureJunglePyramid.java
index d5a4345..e30fedf 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureJunglePyramid.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureJunglePyramid.java
@@ -8,13 +8,13 @@
 	private boolean field_74948_i;
 	private boolean field_74945_j;
 	private boolean field_74946_k;
-	private static final WeightedRandomChestContent[] junglePyramidsChestContents = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 3, 3), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 2, 7, 15), new WeightedRandomChestContent(Item.emerald.itemID, 0, 1, 3, 2), new WeightedRandomChestContent(Item.bone.itemID, 0, 4, 6, 20), new WeightedRandomChestContent(Item.rottenFlesh.itemID, 0, 3, 7, 16) };
+	private static final WeightedRandomChestContent[] junglePyramidsChestContents = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 3, 3), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 2, 7, 15), new WeightedRandomChestContent(Item.emerald.itemID, 0, 1, 3, 2), new WeightedRandomChestContent(Item.bone.itemID, 0, 4, 6, 20), new WeightedRandomChestContent(Item.rottenFlesh.itemID, 0, 3, 7, 16), new WeightedRandomChestContent(Item.saddle.itemID, 0, 1, 1, 3), new WeightedRandomChestContent(Item.field_111215_ce.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.field_111216_cf.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.field_111213_cg.itemID, 0, 1, 1, 1) };
 	private static final WeightedRandomChestContent[] junglePyramidsDispenserContents = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.arrow.itemID, 0, 2, 7, 30) };
 	private static StructureScatteredFeatureStones junglePyramidsRandomScatteredStones = new StructureScatteredFeatureStones((ComponentScatteredFeaturePieces2) null);
 	
-	public ComponentScatteredFeatureJunglePyramid(Random par1Random, int par2, int par3)
+	public ComponentScatteredFeatureJunglePyramid(Random p_i2064_1_, int p_i2064_2_, int p_i2064_3_)
 	{
-		super(par1Random, par2, 64, par3, 12, 10, 15);
+		super(p_i2064_1_, p_i2064_2_, 64, p_i2064_3_, 12, 10, 15);
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureSwampHut.java b/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureSwampHut.java
index 00c6d4f..f2de58f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureSwampHut.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentScatteredFeatureSwampHut.java
@@ -6,9 +6,9 @@
 {
 	private boolean hasWitch;
 	
-	public ComponentScatteredFeatureSwampHut(Random par1Random, int par2, int par3)
+	public ComponentScatteredFeatureSwampHut(Random p_i2066_1_, int p_i2066_2_, int p_i2066_3_)
 	{
-		super(par1Random, par2, 64, par3, 7, 5, 9);
+		super(p_i2066_1_, p_i2066_2_, 64, p_i2066_3_, 7, 5, 9);
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
@@ -64,7 +64,7 @@
 					hasWitch = true;
 					EntityWitch var11 = new EntityWitch(par1World);
 					var11.setLocationAndAngles(var8 + 0.5D, var9, var10 + 0.5D, 0.0F, 0.0F);
-					var11.initCreature();
+					var11.func_110161_a((EntityLivingData) null);
 					par1World.spawnEntityInWorld(var11);
 				}
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStronghold.java b/RMCClient/minecraft/net/minecraft/src/ComponentStronghold.java
index 2fff5a3..d2af963 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStronghold.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStronghold.java
@@ -5,9 +5,9 @@
 
 abstract class ComponentStronghold extends StructureComponent
 {
-	protected ComponentStronghold(int par1)
+	protected ComponentStronghold(int p_i2087_1_)
 	{
-		super(par1);
+		super(p_i2087_1_);
 	}
 	
 	protected StructureComponent getNextComponentNormal(ComponentStrongholdStairs2 par1ComponentStrongholdStairs2, List par2List, Random par3Random, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdChestCorridor.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdChestCorridor.java
index e5e8420..9870535 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdChestCorridor.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdChestCorridor.java
@@ -5,16 +5,16 @@
 
 public class ComponentStrongholdChestCorridor extends ComponentStronghold
 {
-	private static final WeightedRandomChestContent[] strongholdChestContents = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.enderPearl.itemID, 0, 1, 1, 10), new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 3, 3), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 1, 3, 5), new WeightedRandomChestContent(Item.redstone.itemID, 0, 4, 9, 5), new WeightedRandomChestContent(Item.bread.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.appleRed.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.pickaxeIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.swordIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.plateIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.helmetIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.legsIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.bootsIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.appleGold.itemID, 0, 1, 1, 1) };
+	private static final WeightedRandomChestContent[] strongholdChestContents = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.enderPearl.itemID, 0, 1, 1, 10), new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 3, 3), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 1, 3, 5), new WeightedRandomChestContent(Item.redstone.itemID, 0, 4, 9, 5), new WeightedRandomChestContent(Item.bread.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.appleRed.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.pickaxeIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.swordIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.plateIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.helmetIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.legsIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.bootsIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.appleGold.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.saddle.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.field_111215_ce.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.field_111216_cf.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.field_111213_cg.itemID, 0, 1, 1, 1) };
 	private final EnumDoor doorType;
 	private boolean hasMadeChest;
 	
-	public ComponentStrongholdChestCorridor(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdChestCorridor(int p_i2071_1_, Random p_i2071_2_, StructureBoundingBox p_i2071_3_, int p_i2071_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		doorType = getRandomDoor(par2Random);
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2071_1_);
+		coordBaseMode = p_i2071_4_;
+		doorType = getRandomDoor(p_i2071_2_);
+		boundingBox = p_i2071_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdCorridor.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdCorridor.java
index 62fb944..7242cdf 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdCorridor.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdCorridor.java
@@ -7,12 +7,12 @@
 {
 	private final int field_74993_a;
 	
-	public ComponentStrongholdCorridor(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdCorridor(int p_i2072_1_, Random p_i2072_2_, StructureBoundingBox p_i2072_3_, int p_i2072_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
-		field_74993_a = par4 != 2 && par4 != 0 ? par3StructureBoundingBox.getXSize() : par3StructureBoundingBox.getZSize();
+		super(p_i2072_1_);
+		coordBaseMode = p_i2072_4_;
+		boundingBox = p_i2072_3_;
+		field_74993_a = p_i2072_4_ != 2 && p_i2072_4_ != 0 ? p_i2072_3_.getXSize() : p_i2072_3_.getZSize();
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
@@ -47,6 +47,7 @@
 	
 	public static StructureBoundingBox func_74992_a(List par0List, Random par1Random, int par2, int par3, int par4, int par5)
 	{
+		boolean var6 = true;
 		StructureBoundingBox var7 = StructureBoundingBox.getComponentToAddBoundingBox(par2, par3, par4, -1, -1, 0, 5, 5, 4, par5);
 		StructureComponent var8 = StructureComponent.findIntersecting(par0List, var7);
 		if(var8 == null) return null;
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdCrossing.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdCrossing.java
index 92383fc..03a655d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdCrossing.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdCrossing.java
@@ -11,16 +11,16 @@
 	private boolean field_74995_d;
 	private boolean field_74999_h;
 	
-	public ComponentStrongholdCrossing(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdCrossing(int p_i2073_1_, Random p_i2073_2_, StructureBoundingBox p_i2073_3_, int p_i2073_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		doorType = getRandomDoor(par2Random);
-		boundingBox = par3StructureBoundingBox;
-		field_74996_b = par2Random.nextBoolean();
-		field_74997_c = par2Random.nextBoolean();
-		field_74995_d = par2Random.nextBoolean();
-		field_74999_h = par2Random.nextInt(3) > 0;
+		super(p_i2073_1_);
+		coordBaseMode = p_i2073_4_;
+		doorType = getRandomDoor(p_i2073_2_);
+		boundingBox = p_i2073_3_;
+		field_74996_b = p_i2073_2_.nextBoolean();
+		field_74997_c = p_i2073_2_.nextBoolean();
+		field_74995_d = p_i2073_2_.nextBoolean();
+		field_74999_h = p_i2073_2_.nextInt(3) > 0;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdLeftTurn.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdLeftTurn.java
index be9917b..e67d2a3 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdLeftTurn.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdLeftTurn.java
@@ -7,12 +7,12 @@
 {
 	protected final EnumDoor doorType;
 	
-	public ComponentStrongholdLeftTurn(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdLeftTurn(int p_i2074_1_, Random p_i2074_2_, StructureBoundingBox p_i2074_3_, int p_i2074_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		doorType = getRandomDoor(par2Random);
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2074_1_);
+		coordBaseMode = p_i2074_4_;
+		doorType = getRandomDoor(p_i2074_2_);
+		boundingBox = p_i2074_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdLibrary.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdLibrary.java
index e40cfaf..d207f45 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdLibrary.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdLibrary.java
@@ -9,13 +9,13 @@
 	protected final EnumDoor doorType;
 	private final boolean isLargeRoom;
 	
-	public ComponentStrongholdLibrary(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdLibrary(int p_i2075_1_, Random p_i2075_2_, StructureBoundingBox p_i2075_3_, int p_i2075_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		doorType = getRandomDoor(par2Random);
-		boundingBox = par3StructureBoundingBox;
-		isLargeRoom = par3StructureBoundingBox.getYSize() > 6;
+		super(p_i2075_1_);
+		coordBaseMode = p_i2075_4_;
+		doorType = getRandomDoor(p_i2075_2_);
+		boundingBox = p_i2075_3_;
+		isLargeRoom = p_i2075_3_.getYSize() > 6;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
@@ -31,6 +31,8 @@
 			fillWithRandomizedBlocks(par1World, par3StructureBoundingBox, 0, 0, 0, 13, var4 - 1, 14, true, par2Random, StructureStrongholdPieces.getStrongholdStones());
 			placeDoor(par1World, par2Random, par3StructureBoundingBox, doorType, 4, 1, 0);
 			randomlyFillWithBlocks(par1World, par3StructureBoundingBox, par2Random, 0.07F, 2, 1, 1, 11, 4, 13, Block.web.blockID, Block.web.blockID, false);
+			boolean var5 = true;
+			boolean var6 = true;
 			int var7;
 			for(var7 = 1; var7 <= 13; ++var7)
 			{
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdPortalRoom.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdPortalRoom.java
index df0993f..97314d6 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdPortalRoom.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdPortalRoom.java
@@ -7,11 +7,11 @@
 {
 	private boolean hasSpawner;
 	
-	public ComponentStrongholdPortalRoom(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdPortalRoom(int p_i2077_1_, Random p_i2077_2_, StructureBoundingBox p_i2077_3_, int p_i2077_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2077_1_);
+		coordBaseMode = p_i2077_4_;
+		boundingBox = p_i2077_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdPrison.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdPrison.java
index ae1fb85..fcca8fe 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdPrison.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdPrison.java
@@ -7,12 +7,12 @@
 {
 	protected final EnumDoor doorType;
 	
-	public ComponentStrongholdPrison(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdPrison(int p_i2078_1_, Random p_i2078_2_, StructureBoundingBox p_i2078_3_, int p_i2078_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		doorType = getRandomDoor(par2Random);
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2078_1_);
+		coordBaseMode = p_i2078_4_;
+		doorType = getRandomDoor(p_i2078_2_);
+		boundingBox = p_i2078_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdRightTurn.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdRightTurn.java
index a25c2de..f9e479f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdRightTurn.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdRightTurn.java
@@ -5,9 +5,9 @@
 
 public class ComponentStrongholdRightTurn extends ComponentStrongholdLeftTurn
 {
-	public ComponentStrongholdRightTurn(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdRightTurn(int p_i2074_1_, Random p_i2074_2_, StructureBoundingBox p_i2074_3_, int p_i2074_4_)
 	{
-		super(par1, par2Random, par3StructureBoundingBox, par4);
+		super(p_i2074_1_, p_i2074_2_, p_i2074_3_, p_i2074_4_);
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdRoomCrossing.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdRoomCrossing.java
index 480ab83..d983c9f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdRoomCrossing.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdRoomCrossing.java
@@ -9,13 +9,13 @@
 	protected final EnumDoor doorType;
 	protected final int roomType;
 	
-	public ComponentStrongholdRoomCrossing(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdRoomCrossing(int p_i2079_1_, Random p_i2079_2_, StructureBoundingBox p_i2079_3_, int p_i2079_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		doorType = getRandomDoor(par2Random);
-		boundingBox = par3StructureBoundingBox;
-		roomType = par2Random.nextInt(5);
+		super(p_i2079_1_);
+		coordBaseMode = p_i2079_4_;
+		doorType = getRandomDoor(p_i2079_2_);
+		boundingBox = p_i2079_3_;
+		roomType = p_i2079_2_.nextInt(5);
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairs.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairs.java
index 5f5225e..9a1a61e 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairs.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairs.java
@@ -8,30 +8,30 @@
 	private final boolean field_75024_a;
 	private final EnumDoor doorType;
 	
-	public ComponentStrongholdStairs(int par1, Random par2Random, int par3, int par4)
+	public ComponentStrongholdStairs(int p_i2081_1_, Random p_i2081_2_, int p_i2081_3_, int p_i2081_4_)
 	{
-		super(par1);
+		super(p_i2081_1_);
 		field_75024_a = true;
-		coordBaseMode = par2Random.nextInt(4);
+		coordBaseMode = p_i2081_2_.nextInt(4);
 		doorType = EnumDoor.OPENING;
 		switch(coordBaseMode)
 		{
 			case 0:
 			case 2:
-				boundingBox = new StructureBoundingBox(par3, 64, par4, par3 + 5 - 1, 74, par4 + 5 - 1);
+				boundingBox = new StructureBoundingBox(p_i2081_3_, 64, p_i2081_4_, p_i2081_3_ + 5 - 1, 74, p_i2081_4_ + 5 - 1);
 				break;
 			default:
-				boundingBox = new StructureBoundingBox(par3, 64, par4, par3 + 5 - 1, 74, par4 + 5 - 1);
+				boundingBox = new StructureBoundingBox(p_i2081_3_, 64, p_i2081_4_, p_i2081_3_ + 5 - 1, 74, p_i2081_4_ + 5 - 1);
 		}
 	}
 	
-	public ComponentStrongholdStairs(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdStairs(int p_i2082_1_, Random p_i2082_2_, StructureBoundingBox p_i2082_3_, int p_i2082_4_)
 	{
-		super(par1);
+		super(p_i2082_1_);
 		field_75024_a = false;
-		coordBaseMode = par4;
-		doorType = getRandomDoor(par2Random);
-		boundingBox = par3StructureBoundingBox;
+		coordBaseMode = p_i2082_4_;
+		doorType = getRandomDoor(p_i2082_2_);
+		boundingBox = p_i2082_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairs2.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairs2.java
index 0016421..0c1806d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairs2.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairs2.java
@@ -1,17 +1,18 @@
 package net.minecraft.src;
 
 import java.util.ArrayList;
+import java.util.List;
 import java.util.Random;
 
 public class ComponentStrongholdStairs2 extends ComponentStrongholdStairs
 {
 	public StructureStrongholdPieceWeight strongholdPieceWeight;
 	public ComponentStrongholdPortalRoom strongholdPortalRoom;
-	public ArrayList field_75026_c = new ArrayList();
+	public List field_75026_c = new ArrayList();
 	
-	public ComponentStrongholdStairs2(int par1, Random par2Random, int par3, int par4)
+	public ComponentStrongholdStairs2(int p_i2083_1_, Random p_i2083_2_, int p_i2083_3_, int p_i2083_4_)
 	{
-		super(0, par2Random, par3, par4);
+		super(0, p_i2083_2_, p_i2083_3_, p_i2083_4_);
 	}
 	
 	@Override public ChunkPosition getCenter()
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairsStraight.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairsStraight.java
index 8edd8cf..6b8cab8 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairsStraight.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStairsStraight.java
@@ -7,12 +7,12 @@
 {
 	private final EnumDoor doorType;
 	
-	public ComponentStrongholdStairsStraight(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdStairsStraight(int p_i2085_1_, Random p_i2085_2_, StructureBoundingBox p_i2085_3_, int p_i2085_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		doorType = getRandomDoor(par2Random);
-		boundingBox = par3StructureBoundingBox;
+		super(p_i2085_1_);
+		coordBaseMode = p_i2085_4_;
+		doorType = getRandomDoor(p_i2085_2_);
+		boundingBox = p_i2085_3_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStraight.java b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStraight.java
index 59e7d13..47b69ec 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStraight.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentStrongholdStraight.java
@@ -9,14 +9,14 @@
 	private final boolean expandsX;
 	private final boolean expandsZ;
 	
-	public ComponentStrongholdStraight(int par1, Random par2Random, StructureBoundingBox par3StructureBoundingBox, int par4)
+	public ComponentStrongholdStraight(int p_i2084_1_, Random p_i2084_2_, StructureBoundingBox p_i2084_3_, int p_i2084_4_)
 	{
-		super(par1);
-		coordBaseMode = par4;
-		doorType = getRandomDoor(par2Random);
-		boundingBox = par3StructureBoundingBox;
-		expandsX = par2Random.nextInt(2) == 0;
-		expandsZ = par2Random.nextInt(2) == 0;
+		super(p_i2084_1_);
+		coordBaseMode = p_i2084_4_;
+		doorType = getRandomDoor(p_i2084_2_);
+		boundingBox = p_i2084_3_;
+		expandsX = p_i2084_2_.nextInt(2) == 0;
+		expandsZ = p_i2084_2_.nextInt(2) == 0;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillage.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillage.java
index a73f590..a845383 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillage.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillage.java
@@ -8,10 +8,10 @@
 	private int villagersSpawned;
 	protected ComponentVillageStartPiece startPiece;
 	
-	protected ComponentVillage(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2)
+	protected ComponentVillage(ComponentVillageStartPiece p_i2107_1_, int p_i2107_2_)
 	{
-		super(par2);
-		startPiece = par1ComponentVillageStartPiece;
+		super(p_i2107_2_);
+		startPiece = p_i2107_1_;
 	}
 	
 	@Override protected void fillCurrentPositionBlocksDownwards(World par1World, int par2, int par3, int par4, int par5, int par6, StructureBoundingBox par7StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageChurch.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageChurch.java
index 5e41445..2b77861 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageChurch.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageChurch.java
@@ -7,11 +7,11 @@
 {
 	private int averageGroundLevel = -1;
 	
-	public ComponentVillageChurch(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageChurch(ComponentVillageStartPiece p_i2102_1_, int p_i2102_2_, Random p_i2102_3_, StructureBoundingBox p_i2102_4_, int p_i2102_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
+		super(p_i2102_1_, p_i2102_2_);
+		coordBaseMode = p_i2102_5_;
+		boundingBox = p_i2102_4_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageField.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageField.java
index 519601f..94e65b7 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageField.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageField.java
@@ -11,15 +11,15 @@
 	private int cropTypeC;
 	private int cropTypeD;
 	
-	public ComponentVillageField(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageField(ComponentVillageStartPiece p_i2095_1_, int p_i2095_2_, Random p_i2095_3_, StructureBoundingBox p_i2095_4_, int p_i2095_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
-		cropTypeA = getRandomCrop(par3Random);
-		cropTypeB = getRandomCrop(par3Random);
-		cropTypeC = getRandomCrop(par3Random);
-		cropTypeD = getRandomCrop(par3Random);
+		super(p_i2095_1_, p_i2095_2_);
+		coordBaseMode = p_i2095_5_;
+		boundingBox = p_i2095_4_;
+		cropTypeA = getRandomCrop(p_i2095_3_);
+		cropTypeB = getRandomCrop(p_i2095_3_);
+		cropTypeC = getRandomCrop(p_i2095_3_);
+		cropTypeD = getRandomCrop(p_i2095_3_);
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageField2.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageField2.java
index 982ad92..8ddadf9 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageField2.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageField2.java
@@ -9,13 +9,13 @@
 	private int cropTypeA;
 	private int cropTypeB;
 	
-	public ComponentVillageField2(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageField2(ComponentVillageStartPiece p_i2096_1_, int p_i2096_2_, Random p_i2096_3_, StructureBoundingBox p_i2096_4_, int p_i2096_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
-		cropTypeA = pickRandomCrop(par3Random);
-		cropTypeB = pickRandomCrop(par3Random);
+		super(p_i2096_1_, p_i2096_2_);
+		coordBaseMode = p_i2096_5_;
+		boundingBox = p_i2096_4_;
+		cropTypeA = pickRandomCrop(p_i2096_3_);
+		cropTypeB = pickRandomCrop(p_i2096_3_);
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHall.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHall.java
index 87b551c..ea519d1 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHall.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHall.java
@@ -7,11 +7,11 @@
 {
 	private int averageGroundLevel = -1;
 	
-	public ComponentVillageHall(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageHall(ComponentVillageStartPiece p_i2099_1_, int p_i2099_2_, Random p_i2099_3_, StructureBoundingBox p_i2099_4_, int p_i2099_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
+		super(p_i2099_1_, p_i2099_2_);
+		coordBaseMode = p_i2099_5_;
+		boundingBox = p_i2099_4_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse1.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse1.java
index e462496..a18b44e 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse1.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse1.java
@@ -7,11 +7,11 @@
 {
 	private int averageGroundLevel = -1;
 	
-	public ComponentVillageHouse1(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageHouse1(ComponentVillageStartPiece p_i2094_1_, int p_i2094_2_, Random p_i2094_3_, StructureBoundingBox p_i2094_4_, int p_i2094_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
+		super(p_i2094_1_, p_i2094_2_);
+		coordBaseMode = p_i2094_5_;
+		boundingBox = p_i2094_4_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse2.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse2.java
index c9f282e..1d032a4 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse2.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse2.java
@@ -5,15 +5,15 @@
 
 public class ComponentVillageHouse2 extends ComponentVillage
 {
-	private static final WeightedRandomChestContent[] villageBlacksmithChestContents = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 3, 3), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 1, 3, 5), new WeightedRandomChestContent(Item.bread.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.appleRed.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.pickaxeIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.swordIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.plateIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.helmetIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.legsIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.bootsIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Block.obsidian.blockID, 0, 3, 7, 5), new WeightedRandomChestContent(Block.sapling.blockID, 0, 3, 7, 5) };
+	private static final WeightedRandomChestContent[] villageBlacksmithChestContents = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 3, 3), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 1, 3, 5), new WeightedRandomChestContent(Item.bread.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.appleRed.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.pickaxeIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.swordIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.plateIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.helmetIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.legsIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.bootsIron.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Block.obsidian.blockID, 0, 3, 7, 5), new WeightedRandomChestContent(Block.sapling.blockID, 0, 3, 7, 5), new WeightedRandomChestContent(Item.saddle.itemID, 0, 1, 1, 3), new WeightedRandomChestContent(Item.field_111215_ce.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.field_111216_cf.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.field_111213_cg.itemID, 0, 1, 1, 1) };
 	private int averageGroundLevel = -1;
 	private boolean hasMadeChest;
 	
-	public ComponentVillageHouse2(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageHouse2(ComponentVillageStartPiece p_i2103_1_, int p_i2103_2_, Random p_i2103_3_, StructureBoundingBox p_i2103_4_, int p_i2103_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
+		super(p_i2103_1_, p_i2103_2_);
+		coordBaseMode = p_i2103_5_;
+		boundingBox = p_i2103_4_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse3.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse3.java
index 771aedb..f3e3a44 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse3.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse3.java
@@ -7,11 +7,11 @@
 {
 	private int averageGroundLevel = -1;
 	
-	public ComponentVillageHouse3(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageHouse3(ComponentVillageStartPiece p_i2106_1_, int p_i2106_2_, Random p_i2106_3_, StructureBoundingBox p_i2106_4_, int p_i2106_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
+		super(p_i2106_1_, p_i2106_2_);
+		coordBaseMode = p_i2106_5_;
+		boundingBox = p_i2106_4_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse4_Garden.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse4_Garden.java
index fb2a554..d20d9a9 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse4_Garden.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageHouse4_Garden.java
@@ -8,12 +8,12 @@
 	private int averageGroundLevel = -1;
 	private final boolean isRoofAccessible;
 	
-	public ComponentVillageHouse4_Garden(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageHouse4_Garden(ComponentVillageStartPiece p_i2100_1_, int p_i2100_2_, Random p_i2100_3_, StructureBoundingBox p_i2100_4_, int p_i2100_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
-		isRoofAccessible = par3Random.nextBoolean();
+		super(p_i2100_1_, p_i2100_2_);
+		coordBaseMode = p_i2100_5_;
+		boundingBox = p_i2100_4_;
+		isRoofAccessible = p_i2100_3_.nextBoolean();
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillagePathGen.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillagePathGen.java
index e0cca14..2a0c91f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillagePathGen.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillagePathGen.java
@@ -7,12 +7,12 @@
 {
 	private int averageGroundLevel;
 	
-	public ComponentVillagePathGen(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillagePathGen(ComponentVillageStartPiece p_i2105_1_, int p_i2105_2_, Random p_i2105_3_, StructureBoundingBox p_i2105_4_, int p_i2105_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
-		averageGroundLevel = Math.max(par4StructureBoundingBox.getXSize(), par4StructureBoundingBox.getZSize());
+		super(p_i2105_1_, p_i2105_2_);
+		coordBaseMode = p_i2105_5_;
+		boundingBox = p_i2105_4_;
+		averageGroundLevel = Math.max(p_i2105_4_.getXSize(), p_i2105_4_.getZSize());
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageRoadPiece.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageRoadPiece.java
index cc9e4f1..88abafd 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageRoadPiece.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageRoadPiece.java
@@ -2,8 +2,8 @@
 
 public abstract class ComponentVillageRoadPiece extends ComponentVillage
 {
-	protected ComponentVillageRoadPiece(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2)
+	protected ComponentVillageRoadPiece(ComponentVillageStartPiece p_i2108_1_, int p_i2108_2_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
+		super(p_i2108_1_, p_i2108_2_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageStartPiece.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageStartPiece.java
index c13a649..35e9302 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageStartPiece.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageStartPiece.java
@@ -1,6 +1,7 @@
 package net.minecraft.src;
 
 import java.util.ArrayList;
+import java.util.List;
 import java.util.Random;
 
 public class ComponentVillageStartPiece extends ComponentVillageWell
@@ -9,17 +10,17 @@
 	public final boolean inDesert;
 	public final int terrainType;
 	public StructureVillagePieceWeight structVillagePieceWeight;
-	public ArrayList structureVillageWeightedPieceList;
-	public ArrayList field_74932_i = new ArrayList();
-	public ArrayList field_74930_j = new ArrayList();
+	public List structureVillageWeightedPieceList;
+	public List field_74932_i = new ArrayList();
+	public List field_74930_j = new ArrayList();
 	
-	public ComponentVillageStartPiece(WorldChunkManager par1WorldChunkManager, int par2, Random par3Random, int par4, int par5, ArrayList par6ArrayList, int par7)
+	public ComponentVillageStartPiece(WorldChunkManager p_i2104_1_, int p_i2104_2_, Random p_i2104_3_, int p_i2104_4_, int p_i2104_5_, List p_i2104_6_, int p_i2104_7_)
 	{
-		super((ComponentVillageStartPiece) null, 0, par3Random, par4, par5);
-		worldChunkMngr = par1WorldChunkManager;
-		structureVillageWeightedPieceList = par6ArrayList;
-		terrainType = par7;
-		BiomeGenBase var8 = par1WorldChunkManager.getBiomeGenAt(par4, par5);
+		super((ComponentVillageStartPiece) null, 0, p_i2104_3_, p_i2104_4_, p_i2104_5_);
+		worldChunkMngr = p_i2104_1_;
+		structureVillageWeightedPieceList = p_i2104_6_;
+		terrainType = p_i2104_7_;
+		BiomeGenBase var8 = p_i2104_1_.getBiomeGenAt(p_i2104_4_, p_i2104_5_);
 		inDesert = var8 == BiomeGenBase.desert || var8 == BiomeGenBase.desertHills;
 		startPiece = this;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageTorch.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageTorch.java
index 65bcba2..15f17ad 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageTorch.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageTorch.java
@@ -7,11 +7,11 @@
 {
 	private int averageGroundLevel = -1;
 	
-	public ComponentVillageTorch(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageTorch(ComponentVillageStartPiece p_i2097_1_, int p_i2097_2_, Random p_i2097_3_, StructureBoundingBox p_i2097_4_, int p_i2097_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
+		super(p_i2097_1_, p_i2097_2_);
+		coordBaseMode = p_i2097_5_;
+		boundingBox = p_i2097_4_;
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageWell.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageWell.java
index 05a2038..83b97c6 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageWell.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageWell.java
@@ -8,18 +8,18 @@
 	private final boolean field_74924_a = true;
 	private int averageGroundLevel = -1;
 	
-	public ComponentVillageWell(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, int par4, int par5)
+	public ComponentVillageWell(ComponentVillageStartPiece p_i2109_1_, int p_i2109_2_, Random p_i2109_3_, int p_i2109_4_, int p_i2109_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par3Random.nextInt(4);
+		super(p_i2109_1_, p_i2109_2_);
+		coordBaseMode = p_i2109_3_.nextInt(4);
 		switch(coordBaseMode)
 		{
 			case 0:
 			case 2:
-				boundingBox = new StructureBoundingBox(par4, 64, par5, par4 + 6 - 1, 78, par5 + 6 - 1);
+				boundingBox = new StructureBoundingBox(p_i2109_4_, 64, p_i2109_5_, p_i2109_4_ + 6 - 1, 78, p_i2109_5_ + 6 - 1);
 				break;
 			default:
-				boundingBox = new StructureBoundingBox(par4, 64, par5, par4 + 6 - 1, 78, par5 + 6 - 1);
+				boundingBox = new StructureBoundingBox(p_i2109_4_, 64, p_i2109_5_, p_i2109_4_ + 6 - 1, 78, p_i2109_5_ + 6 - 1);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ComponentVillageWoodHut.java b/RMCClient/minecraft/net/minecraft/src/ComponentVillageWoodHut.java
index 6cc1eb3..326665a 100644
--- a/RMCClient/minecraft/net/minecraft/src/ComponentVillageWoodHut.java
+++ b/RMCClient/minecraft/net/minecraft/src/ComponentVillageWoodHut.java
@@ -9,13 +9,13 @@
 	private final boolean isTallHouse;
 	private final int tablePosition;
 	
-	public ComponentVillageWoodHut(ComponentVillageStartPiece par1ComponentVillageStartPiece, int par2, Random par3Random, StructureBoundingBox par4StructureBoundingBox, int par5)
+	public ComponentVillageWoodHut(ComponentVillageStartPiece p_i2101_1_, int p_i2101_2_, Random p_i2101_3_, StructureBoundingBox p_i2101_4_, int p_i2101_5_)
 	{
-		super(par1ComponentVillageStartPiece, par2);
-		coordBaseMode = par5;
-		boundingBox = par4StructureBoundingBox;
-		isTallHouse = par3Random.nextBoolean();
-		tablePosition = par3Random.nextInt(3);
+		super(p_i2101_1_, p_i2101_2_);
+		coordBaseMode = p_i2101_5_;
+		boundingBox = p_i2101_4_;
+		isTallHouse = p_i2101_3_.nextBoolean();
+		tablePosition = p_i2101_3_.nextInt(3);
 	}
 	
 	@Override public boolean addComponentParts(World par1World, Random par2Random, StructureBoundingBox par3StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/Container.java b/RMCClient/minecraft/net/minecraft/src/Container.java
index 127b475..95f351b 100644
--- a/RMCClient/minecraft/net/minecraft/src/Container.java
+++ b/RMCClient/minecraft/net/minecraft/src/Container.java
@@ -10,10 +10,10 @@
 {
 	public List inventoryItemStacks = new ArrayList();
 	public List inventorySlots = new ArrayList();
-	public int windowId = 0;
-	private short transactionID = 0;
+	public int windowId;
+	private short transactionID;
 	private int field_94535_f = -1;
-	private int field_94536_g = 0;
+	private int field_94536_g;
 	private final Set field_94537_h = new HashSet();
 	protected List crafters = new ArrayList();
 	private Set playerList = new HashSet();
@@ -377,7 +377,10 @@
 								{
 									var21 = var16.getSlotStackLimit();
 								}
-								var16.putStack(var19.splitStack(var21));
+								if(var19.stackSize >= var21)
+								{
+									var16.putStack(var19.splitStack(var21));
+								}
 								if(var19.stackSize == 0)
 								{
 									var6.setItemStack((ItemStack) null);
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerBeacon.java b/RMCClient/minecraft/net/minecraft/src/ContainerBeacon.java
index 4324d48..0e75a7e 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerBeacon.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerBeacon.java
@@ -8,10 +8,10 @@
 	private int field_82867_h;
 	private int field_82868_i;
 	
-	public ContainerBeacon(InventoryPlayer par1InventoryPlayer, TileEntityBeacon par2TileEntityBeacon)
+	public ContainerBeacon(InventoryPlayer p_i1802_1_, TileEntityBeacon p_i1802_2_)
 	{
-		theBeacon = par2TileEntityBeacon;
-		addSlotToContainer(beaconSlot = new SlotBeacon(this, par2TileEntityBeacon, 0, 136, 110));
+		theBeacon = p_i1802_2_;
+		addSlotToContainer(beaconSlot = new SlotBeacon(this, p_i1802_2_, 0, 136, 110));
 		byte var3 = 36;
 		short var4 = 137;
 		int var5;
@@ -19,16 +19,16 @@
 		{
 			for(int var6 = 0; var6 < 9; ++var6)
 			{
-				addSlotToContainer(new Slot(par1InventoryPlayer, var6 + var5 * 9 + 9, var3 + var6 * 18, var4 + var5 * 18));
+				addSlotToContainer(new Slot(p_i1802_1_, var6 + var5 * 9 + 9, var3 + var6 * 18, var4 + var5 * 18));
 			}
 		}
 		for(var5 = 0; var5 < 9; ++var5)
 		{
-			addSlotToContainer(new Slot(par1InventoryPlayer, var5, var3 + var5 * 18, 58 + var4));
+			addSlotToContainer(new Slot(p_i1802_1_, var5, var3 + var5 * 18, 58 + var4));
 		}
-		field_82865_g = par2TileEntityBeacon.getLevels();
-		field_82867_h = par2TileEntityBeacon.getPrimaryEffect();
-		field_82868_i = par2TileEntityBeacon.getSecondaryEffect();
+		field_82865_g = p_i1802_2_.getLevels();
+		field_82867_h = p_i1802_2_.getPrimaryEffect();
+		field_82868_i = p_i1802_2_.getSecondaryEffect();
 	}
 	
 	@Override public void addCraftingToCrafters(ICrafting par1ICrafting)
@@ -42,11 +42,6 @@
 	@Override public boolean canInteractWith(EntityPlayer par1EntityPlayer)
 	{
 		return theBeacon.isUseableByPlayer(par1EntityPlayer);
-	}
-	
-	@Override public void detectAndSendChanges()
-	{
-		super.detectAndSendChanges();
 	}
 	
 	public TileEntityBeacon getBeacon()
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerBrewingStand.java b/RMCClient/minecraft/net/minecraft/src/ContainerBrewingStand.java
index 520e7ad..fd26f53 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerBrewingStand.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerBrewingStand.java
@@ -4,26 +4,26 @@
 {
 	private TileEntityBrewingStand tileBrewingStand;
 	private final Slot theSlot;
-	private int brewTime = 0;
+	private int brewTime;
 	
-	public ContainerBrewingStand(InventoryPlayer par1InventoryPlayer, TileEntityBrewingStand par2TileEntityBrewingStand)
+	public ContainerBrewingStand(InventoryPlayer p_i1805_1_, TileEntityBrewingStand p_i1805_2_)
 	{
-		tileBrewingStand = par2TileEntityBrewingStand;
-		addSlotToContainer(new SlotBrewingStandPotion(par1InventoryPlayer.player, par2TileEntityBrewingStand, 0, 56, 46));
-		addSlotToContainer(new SlotBrewingStandPotion(par1InventoryPlayer.player, par2TileEntityBrewingStand, 1, 79, 53));
-		addSlotToContainer(new SlotBrewingStandPotion(par1InventoryPlayer.player, par2TileEntityBrewingStand, 2, 102, 46));
-		theSlot = addSlotToContainer(new SlotBrewingStandIngredient(this, par2TileEntityBrewingStand, 3, 79, 17));
+		tileBrewingStand = p_i1805_2_;
+		addSlotToContainer(new SlotBrewingStandPotion(p_i1805_1_.player, p_i1805_2_, 0, 56, 46));
+		addSlotToContainer(new SlotBrewingStandPotion(p_i1805_1_.player, p_i1805_2_, 1, 79, 53));
+		addSlotToContainer(new SlotBrewingStandPotion(p_i1805_1_.player, p_i1805_2_, 2, 102, 46));
+		theSlot = addSlotToContainer(new SlotBrewingStandIngredient(this, p_i1805_2_, 3, 79, 17));
 		int var3;
 		for(var3 = 0; var3 < 3; ++var3)
 		{
 			for(int var4 = 0; var4 < 9; ++var4)
 			{
-				addSlotToContainer(new Slot(par1InventoryPlayer, var4 + var3 * 9 + 9, 8 + var4 * 18, 84 + var3 * 18));
+				addSlotToContainer(new Slot(p_i1805_1_, var4 + var3 * 9 + 9, 8 + var4 * 18, 84 + var3 * 18));
 			}
 		}
 		for(var3 = 0; var3 < 9; ++var3)
 		{
-			addSlotToContainer(new Slot(par1InventoryPlayer, var3, 8 + var3 * 18, 142));
+			addSlotToContainer(new Slot(p_i1805_1_, var3, 8 + var3 * 18, 142));
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerChest.java b/RMCClient/minecraft/net/minecraft/src/ContainerChest.java
index 7fd8971..7990561 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerChest.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerChest.java
@@ -5,11 +5,11 @@
 	private IInventory lowerChestInventory;
 	private int numRows;
 	
-	public ContainerChest(IInventory par1IInventory, IInventory par2IInventory)
+	public ContainerChest(IInventory p_i1806_1_, IInventory p_i1806_2_)
 	{
-		lowerChestInventory = par2IInventory;
-		numRows = par2IInventory.getSizeInventory() / 9;
-		par2IInventory.openChest();
+		lowerChestInventory = p_i1806_2_;
+		numRows = p_i1806_2_.getSizeInventory() / 9;
+		p_i1806_2_.openChest();
 		int var3 = (numRows - 4) * 18;
 		int var4;
 		int var5;
@@ -17,19 +17,19 @@
 		{
 			for(var5 = 0; var5 < 9; ++var5)
 			{
-				addSlotToContainer(new Slot(par2IInventory, var5 + var4 * 9, 8 + var5 * 18, 18 + var4 * 18));
+				addSlotToContainer(new Slot(p_i1806_2_, var5 + var4 * 9, 8 + var5 * 18, 18 + var4 * 18));
 			}
 		}
 		for(var4 = 0; var4 < 3; ++var4)
 		{
 			for(var5 = 0; var5 < 9; ++var5)
 			{
-				addSlotToContainer(new Slot(par1IInventory, var5 + var4 * 9 + 9, 8 + var5 * 18, 103 + var4 * 18 + var3));
+				addSlotToContainer(new Slot(p_i1806_1_, var5 + var4 * 9 + 9, 8 + var5 * 18, 103 + var4 * 18 + var3));
 			}
 		}
 		for(var4 = 0; var4 < 9; ++var4)
 		{
-			addSlotToContainer(new Slot(par1IInventory, var4, 8 + var4 * 18, 161 + var3));
+			addSlotToContainer(new Slot(p_i1806_1_, var4, 8 + var4 * 18, 161 + var3));
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerCreative.java b/RMCClient/minecraft/net/minecraft/src/ContainerCreative.java
index 795bd54..f7627ad 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerCreative.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerCreative.java
@@ -7,9 +7,9 @@
 {
 	public List itemList = new ArrayList();
 	
-	public ContainerCreative(EntityPlayer par1EntityPlayer)
+	public ContainerCreative(EntityPlayer p_i1086_1_)
 	{
-		InventoryPlayer var2 = par1EntityPlayer.inventory;
+		InventoryPlayer var2 = p_i1086_1_.inventory;
 		int var3;
 		for(var3 = 0; var3 < 5; ++var3)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerDispenser.java b/RMCClient/minecraft/net/minecraft/src/ContainerDispenser.java
index e05bda5..06b23e6 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerDispenser.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerDispenser.java
@@ -4,28 +4,28 @@
 {
 	private TileEntityDispenser tileEntityDispenser;
 	
-	public ContainerDispenser(IInventory par1IInventory, TileEntityDispenser par2TileEntityDispenser)
+	public ContainerDispenser(IInventory p_i1825_1_, TileEntityDispenser p_i1825_2_)
 	{
-		tileEntityDispenser = par2TileEntityDispenser;
+		tileEntityDispenser = p_i1825_2_;
 		int var3;
 		int var4;
 		for(var3 = 0; var3 < 3; ++var3)
 		{
 			for(var4 = 0; var4 < 3; ++var4)
 			{
-				addSlotToContainer(new Slot(par2TileEntityDispenser, var4 + var3 * 3, 62 + var4 * 18, 17 + var3 * 18));
+				addSlotToContainer(new Slot(p_i1825_2_, var4 + var3 * 3, 62 + var4 * 18, 17 + var3 * 18));
 			}
 		}
 		for(var3 = 0; var3 < 3; ++var3)
 		{
 			for(var4 = 0; var4 < 9; ++var4)
 			{
-				addSlotToContainer(new Slot(par1IInventory, var4 + var3 * 9 + 9, 8 + var4 * 18, 84 + var3 * 18));
+				addSlotToContainer(new Slot(p_i1825_1_, var4 + var3 * 9 + 9, 8 + var4 * 18, 84 + var3 * 18));
 			}
 		}
 		for(var3 = 0; var3 < 9; ++var3)
 		{
-			addSlotToContainer(new Slot(par1IInventory, var3, 8 + var3 * 18, 142));
+			addSlotToContainer(new Slot(p_i1825_1_, var3, 8 + var3 * 18, 142));
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerEnchantment.java b/RMCClient/minecraft/net/minecraft/src/ContainerEnchantment.java
index b039180..f05c6db 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerEnchantment.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerEnchantment.java
@@ -14,24 +14,24 @@
 	public long nameSeed;
 	public int[] enchantLevels = new int[3];
 	
-	public ContainerEnchantment(InventoryPlayer par1InventoryPlayer, World par2World, int par3, int par4, int par5)
+	public ContainerEnchantment(InventoryPlayer p_i1811_1_, World p_i1811_2_, int p_i1811_3_, int p_i1811_4_, int p_i1811_5_)
 	{
-		worldPointer = par2World;
-		posX = par3;
-		posY = par4;
-		posZ = par5;
+		worldPointer = p_i1811_2_;
+		posX = p_i1811_3_;
+		posY = p_i1811_4_;
+		posZ = p_i1811_5_;
 		addSlotToContainer(new SlotEnchantment(this, tableInventory, 0, 25, 47));
 		int var6;
 		for(var6 = 0; var6 < 3; ++var6)
 		{
 			for(int var7 = 0; var7 < 9; ++var7)
 			{
-				addSlotToContainer(new Slot(par1InventoryPlayer, var7 + var6 * 9 + 9, 8 + var7 * 18, 84 + var6 * 18));
+				addSlotToContainer(new Slot(p_i1811_1_, var7 + var6 * 9 + 9, 8 + var7 * 18, 84 + var6 * 18));
 			}
 		}
 		for(var6 = 0; var6 < 9; ++var6)
 		{
-			addSlotToContainer(new Slot(par1InventoryPlayer, var6, 8 + var6 * 18, 142));
+			addSlotToContainer(new Slot(p_i1811_1_, var6, 8 + var6 * 18, 142));
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerFurnace.java b/RMCClient/minecraft/net/minecraft/src/ContainerFurnace.java
index ce5041e..5cf6c9d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerFurnace.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerFurnace.java
@@ -3,27 +3,27 @@
 public class ContainerFurnace extends Container
 {
 	private TileEntityFurnace furnace;
-	private int lastCookTime = 0;
-	private int lastBurnTime = 0;
-	private int lastItemBurnTime = 0;
+	private int lastCookTime;
+	private int lastBurnTime;
+	private int lastItemBurnTime;
 	
-	public ContainerFurnace(InventoryPlayer par1InventoryPlayer, TileEntityFurnace par2TileEntityFurnace)
+	public ContainerFurnace(InventoryPlayer p_i1812_1_, TileEntityFurnace p_i1812_2_)
 	{
-		furnace = par2TileEntityFurnace;
-		addSlotToContainer(new Slot(par2TileEntityFurnace, 0, 56, 17));
-		addSlotToContainer(new Slot(par2TileEntityFurnace, 1, 56, 53));
-		addSlotToContainer(new SlotFurnace(par1InventoryPlayer.player, par2TileEntityFurnace, 2, 116, 35));
+		furnace = p_i1812_2_;
+		addSlotToContainer(new Slot(p_i1812_2_, 0, 56, 17));
+		addSlotToContainer(new Slot(p_i1812_2_, 1, 56, 53));
+		addSlotToContainer(new SlotFurnace(p_i1812_1_.player, p_i1812_2_, 2, 116, 35));
 		int var3;
 		for(var3 = 0; var3 < 3; ++var3)
 		{
 			for(int var4 = 0; var4 < 9; ++var4)
 			{
-				addSlotToContainer(new Slot(par1InventoryPlayer, var4 + var3 * 9 + 9, 8 + var4 * 18, 84 + var3 * 18));
+				addSlotToContainer(new Slot(p_i1812_1_, var4 + var3 * 9 + 9, 8 + var4 * 18, 84 + var3 * 18));
 			}
 		}
 		for(var3 = 0; var3 < 9; ++var3)
 		{
-			addSlotToContainer(new Slot(par1InventoryPlayer, var3, 8 + var3 * 18, 142));
+			addSlotToContainer(new Slot(p_i1812_1_, var3, 8 + var3 * 18, 142));
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerHopper.java b/RMCClient/minecraft/net/minecraft/src/ContainerHopper.java
index e6bdd82..27e1083 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerHopper.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerHopper.java
@@ -4,26 +4,26 @@
 {
 	private final IInventory field_94538_a;
 	
-	public ContainerHopper(InventoryPlayer par1InventoryPlayer, IInventory par2IInventory)
+	public ContainerHopper(InventoryPlayer p_i1814_1_, IInventory p_i1814_2_)
 	{
-		field_94538_a = par2IInventory;
-		par2IInventory.openChest();
+		field_94538_a = p_i1814_2_;
+		p_i1814_2_.openChest();
 		byte var3 = 51;
 		int var4;
-		for(var4 = 0; var4 < par2IInventory.getSizeInventory(); ++var4)
+		for(var4 = 0; var4 < p_i1814_2_.getSizeInventory(); ++var4)
 		{
-			addSlotToContainer(new Slot(par2IInventory, var4, 44 + var4 * 18, 20));
+			addSlotToContainer(new Slot(p_i1814_2_, var4, 44 + var4 * 18, 20));
 		}
 		for(var4 = 0; var4 < 3; ++var4)
 		{
 			for(int var5 = 0; var5 < 9; ++var5)
 			{
-				addSlotToContainer(new Slot(par1InventoryPlayer, var5 + var4 * 9 + 9, 8 + var5 * 18, var4 * 18 + var3));
+				addSlotToContainer(new Slot(p_i1814_1_, var5 + var4 * 9 + 9, 8 + var5 * 18, var4 * 18 + var3));
 			}
 		}
 		for(var4 = 0; var4 < 9; ++var4)
 		{
-			addSlotToContainer(new Slot(par1InventoryPlayer, var4, 8 + var4 * 18, 58 + var3));
+			addSlotToContainer(new Slot(p_i1814_1_, var4, 8 + var4 * 18, 58 + var3));
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerHorseInventory.java b/RMCClient/minecraft/net/minecraft/src/ContainerHorseInventory.java
new file mode 100644
index 0000000..d63797c
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerHorseInventory.java
@@ -0,0 +1,81 @@
+package net.minecraft.src;
+
+public class ContainerHorseInventory extends Container
+{
+	private IInventory field_111243_a;
+	private EntityHorse field_111242_f;
+	
+	public ContainerHorseInventory(IInventory p_i1817_1_, IInventory p_i1817_2_, EntityHorse p_i1817_3_)
+	{
+		field_111243_a = p_i1817_2_;
+		field_111242_f = p_i1817_3_;
+		byte var4 = 3;
+		p_i1817_2_.openChest();
+		int var5 = (var4 - 4) * 18;
+		addSlotToContainer(new ContainerHorseInventorySlotSaddle(this, p_i1817_2_, 0, 8, 18));
+		addSlotToContainer(new ContainerHorseInventorySlotArmor(this, p_i1817_2_, 1, 8, 36, p_i1817_3_));
+		int var6;
+		int var7;
+		if(p_i1817_3_.func_110261_ca())
+		{
+			for(var6 = 0; var6 < var4; ++var6)
+			{
+				for(var7 = 0; var7 < 5; ++var7)
+				{
+					addSlotToContainer(new Slot(p_i1817_2_, 2 + var7 + var6 * 5, 80 + var7 * 18, 18 + var6 * 18));
+				}
+			}
+		}
+		for(var6 = 0; var6 < 3; ++var6)
+		{
+			for(var7 = 0; var7 < 9; ++var7)
+			{
+				addSlotToContainer(new Slot(p_i1817_1_, var7 + var6 * 9 + 9, 8 + var7 * 18, 102 + var6 * 18 + var5));
+			}
+		}
+		for(var6 = 0; var6 < 9; ++var6)
+		{
+			addSlotToContainer(new Slot(p_i1817_1_, var6, 8 + var6 * 18, 160 + var5));
+		}
+	}
+	
+	@Override public boolean canInteractWith(EntityPlayer par1EntityPlayer)
+	{
+		return field_111243_a.isUseableByPlayer(par1EntityPlayer) && field_111242_f.isEntityAlive() && field_111242_f.getDistanceToEntity(par1EntityPlayer) < 8.0F;
+	}
+	
+	@Override public void onCraftGuiClosed(EntityPlayer par1EntityPlayer)
+	{
+		super.onCraftGuiClosed(par1EntityPlayer);
+		field_111243_a.closeChest();
+	}
+	
+	@Override public ItemStack transferStackInSlot(EntityPlayer par1EntityPlayer, int par2)
+	{
+		ItemStack var3 = null;
+		Slot var4 = (Slot) inventorySlots.get(par2);
+		if(var4 != null && var4.getHasStack())
+		{
+			ItemStack var5 = var4.getStack();
+			var3 = var5.copy();
+			if(par2 < field_111243_a.getSizeInventory())
+			{
+				if(!mergeItemStack(var5, field_111243_a.getSizeInventory(), inventorySlots.size(), true)) return null;
+			} else if(getSlot(1).isItemValid(var5) && !getSlot(1).getHasStack())
+			{
+				if(!mergeItemStack(var5, 1, 2, false)) return null;
+			} else if(getSlot(0).isItemValid(var5))
+			{
+				if(!mergeItemStack(var5, 0, 1, false)) return null;
+			} else if(field_111243_a.getSizeInventory() <= 2 || !mergeItemStack(var5, 2, field_111243_a.getSizeInventory(), false)) return null;
+			if(var5.stackSize == 0)
+			{
+				var4.putStack((ItemStack) null);
+			} else
+			{
+				var4.onSlotChanged();
+			}
+		}
+		return var3;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerHorseInventorySlotArmor.java b/RMCClient/minecraft/net/minecraft/src/ContainerHorseInventorySlotArmor.java
new file mode 100644
index 0000000..3e8d48c
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerHorseInventorySlotArmor.java
@@ -0,0 +1,24 @@
+package net.minecraft.src;
+
+class ContainerHorseInventorySlotArmor extends Slot
+{
+	final EntityHorse field_111241_a;
+	final ContainerHorseInventory field_111240_b;
+	
+	ContainerHorseInventorySlotArmor(ContainerHorseInventory p_i1816_1_, IInventory p_i1816_2_, int p_i1816_3_, int p_i1816_4_, int p_i1816_5_, EntityHorse p_i1816_6_)
+	{
+		super(p_i1816_2_, p_i1816_3_, p_i1816_4_, p_i1816_5_);
+		field_111240_b = p_i1816_1_;
+		field_111241_a = p_i1816_6_;
+	}
+	
+	@Override public boolean func_111238_b()
+	{
+		return field_111241_a.func_110259_cr();
+	}
+	
+	@Override public boolean isItemValid(ItemStack par1ItemStack)
+	{
+		return super.isItemValid(par1ItemStack) && field_111241_a.func_110259_cr() && EntityHorse.func_110211_v(par1ItemStack.itemID);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerHorseInventorySlotSaddle.java b/RMCClient/minecraft/net/minecraft/src/ContainerHorseInventorySlotSaddle.java
new file mode 100644
index 0000000..8154061
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerHorseInventorySlotSaddle.java
@@ -0,0 +1,17 @@
+package net.minecraft.src;
+
+class ContainerHorseInventorySlotSaddle extends Slot
+{
+	final ContainerHorseInventory field_111239_a;
+	
+	ContainerHorseInventorySlotSaddle(ContainerHorseInventory p_i1815_1_, IInventory p_i1815_2_, int p_i1815_3_, int p_i1815_4_, int p_i1815_5_)
+	{
+		super(p_i1815_2_, p_i1815_3_, p_i1815_4_, p_i1815_5_);
+		field_111239_a = p_i1815_1_;
+	}
+	
+	@Override public boolean isItemValid(ItemStack par1ItemStack)
+	{
+		return super.isItemValid(par1ItemStack) && par1ItemStack.itemID == Item.saddle.itemID && !getHasStack();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerMerchant.java b/RMCClient/minecraft/net/minecraft/src/ContainerMerchant.java
index e1010df..3176b44 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerMerchant.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerMerchant.java
@@ -6,25 +6,25 @@
 	private InventoryMerchant merchantInventory;
 	private final World theWorld;
 	
-	public ContainerMerchant(InventoryPlayer par1InventoryPlayer, IMerchant par2IMerchant, World par3World)
+	public ContainerMerchant(InventoryPlayer p_i1821_1_, IMerchant p_i1821_2_, World p_i1821_3_)
 	{
-		theMerchant = par2IMerchant;
-		theWorld = par3World;
-		merchantInventory = new InventoryMerchant(par1InventoryPlayer.player, par2IMerchant);
+		theMerchant = p_i1821_2_;
+		theWorld = p_i1821_3_;
+		merchantInventory = new InventoryMerchant(p_i1821_1_.player, p_i1821_2_);
 		addSlotToContainer(new Slot(merchantInventory, 0, 36, 53));
 		addSlotToContainer(new Slot(merchantInventory, 1, 62, 53));
-		addSlotToContainer(new SlotMerchantResult(par1InventoryPlayer.player, par2IMerchant, merchantInventory, 2, 120, 53));
+		addSlotToContainer(new SlotMerchantResult(p_i1821_1_.player, p_i1821_2_, merchantInventory, 2, 120, 53));
 		int var4;
 		for(var4 = 0; var4 < 3; ++var4)
 		{
 			for(int var5 = 0; var5 < 9; ++var5)
 			{
-				addSlotToContainer(new Slot(par1InventoryPlayer, var5 + var4 * 9 + 9, 8 + var5 * 18, 84 + var4 * 18));
+				addSlotToContainer(new Slot(p_i1821_1_, var5 + var4 * 9 + 9, 8 + var5 * 18, 84 + var4 * 18));
 			}
 		}
 		for(var4 = 0; var4 < 9; ++var4)
 		{
-			addSlotToContainer(new Slot(par1InventoryPlayer, var4, 8 + var4 * 18, 142));
+			addSlotToContainer(new Slot(p_i1821_1_, var4, 8 + var4 * 18, 142));
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerPlayer.java b/RMCClient/minecraft/net/minecraft/src/ContainerPlayer.java
index c15890a..51a4f10 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerPlayer.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerPlayer.java
@@ -4,14 +4,14 @@
 {
 	public InventoryCrafting craftMatrix = new InventoryCrafting(this, 2, 2);
 	public IInventory craftResult = new InventoryCraftResult();
-	public boolean isLocalWorld = false;
+	public boolean isLocalWorld;
 	private final EntityPlayer thePlayer;
 	
-	public ContainerPlayer(InventoryPlayer par1InventoryPlayer, boolean par2, EntityPlayer par3EntityPlayer)
+	public ContainerPlayer(InventoryPlayer p_i1819_1_, boolean p_i1819_2_, EntityPlayer p_i1819_3_)
 	{
-		isLocalWorld = par2;
-		thePlayer = par3EntityPlayer;
-		addSlotToContainer(new SlotCrafting(par1InventoryPlayer.player, craftMatrix, craftResult, 0, 144, 36));
+		isLocalWorld = p_i1819_2_;
+		thePlayer = p_i1819_3_;
+		addSlotToContainer(new SlotCrafting(p_i1819_1_.player, craftMatrix, craftResult, 0, 144, 36));
 		int var4;
 		int var5;
 		for(var4 = 0; var4 < 2; ++var4)
@@ -23,18 +23,18 @@
 		}
 		for(var4 = 0; var4 < 4; ++var4)
 		{
-			addSlotToContainer(new SlotArmor(this, par1InventoryPlayer, par1InventoryPlayer.getSizeInventory() - 1 - var4, 8, 8 + var4 * 18, var4));
+			addSlotToContainer(new SlotArmor(this, p_i1819_1_, p_i1819_1_.getSizeInventory() - 1 - var4, 8, 8 + var4 * 18, var4));
 		}
 		for(var4 = 0; var4 < 3; ++var4)
 		{
 			for(var5 = 0; var5 < 9; ++var5)
 			{
-				addSlotToContainer(new Slot(par1InventoryPlayer, var5 + (var4 + 1) * 9, 8 + var5 * 18, 84 + var4 * 18));
+				addSlotToContainer(new Slot(p_i1819_1_, var5 + (var4 + 1) * 9, 8 + var5 * 18, 84 + var4 * 18));
 			}
 		}
 		for(var4 = 0; var4 < 9; ++var4)
 		{
-			addSlotToContainer(new Slot(par1InventoryPlayer, var4, 8 + var4 * 18, 142));
+			addSlotToContainer(new Slot(p_i1819_1_, var4, 8 + var4 * 18, 142));
 		}
 		onCraftMatrixChanged(craftMatrix);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerRepair.java b/RMCClient/minecraft/net/minecraft/src/ContainerRepair.java
index 515f48b..6151a06 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerRepair.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerRepair.java
@@ -6,37 +6,37 @@
 public class ContainerRepair extends Container
 {
 	private IInventory outputSlot = new InventoryCraftResult();
-	private IInventory inputSlots = new InventoryRepair(this, "Repair", true, 2);
+	private IInventory inputSlots = new ContainerRepairINNER1(this, "Repair", true, 2);
 	private World theWorld;
 	private int field_82861_i;
 	private int field_82858_j;
 	private int field_82859_k;
-	public int maximumCost = 0;
-	private int stackSizeToBeUsedInRepair = 0;
+	public int maximumCost;
+	private int stackSizeToBeUsedInRepair;
 	private String repairedItemName;
 	private final EntityPlayer thePlayer;
 	
-	public ContainerRepair(InventoryPlayer par1InventoryPlayer, World par2World, int par3, int par4, int par5, EntityPlayer par6EntityPlayer)
+	public ContainerRepair(InventoryPlayer p_i1800_1_, World p_i1800_2_, int p_i1800_3_, int p_i1800_4_, int p_i1800_5_, EntityPlayer p_i1800_6_)
 	{
-		theWorld = par2World;
-		field_82861_i = par3;
-		field_82858_j = par4;
-		field_82859_k = par5;
-		thePlayer = par6EntityPlayer;
+		theWorld = p_i1800_2_;
+		field_82861_i = p_i1800_3_;
+		field_82858_j = p_i1800_4_;
+		field_82859_k = p_i1800_5_;
+		thePlayer = p_i1800_6_;
 		addSlotToContainer(new Slot(inputSlots, 0, 27, 47));
 		addSlotToContainer(new Slot(inputSlots, 1, 76, 47));
-		addSlotToContainer(new SlotRepair(this, outputSlot, 2, 134, 47, par2World, par3, par4, par5));
+		addSlotToContainer(new ContainerRepairINNER2(this, outputSlot, 2, 134, 47, p_i1800_2_, p_i1800_3_, p_i1800_4_, p_i1800_5_));
 		int var7;
 		for(var7 = 0; var7 < 3; ++var7)
 		{
 			for(int var8 = 0; var8 < 9; ++var8)
 			{
-				addSlotToContainer(new Slot(par1InventoryPlayer, var8 + var7 * 9 + 9, 8 + var8 * 18, 84 + var7 * 18));
+				addSlotToContainer(new Slot(p_i1800_1_, var8 + var7 * 9 + 9, 8 + var8 * 18, 84 + var7 * 18));
 			}
 		}
 		for(var7 = 0; var7 < 9; ++var7)
 		{
-			addSlotToContainer(new Slot(par1InventoryPlayer, var7, 8 + var7 * 18, 142));
+			addSlotToContainer(new Slot(p_i1800_1_, var7, 8 + var7 * 18, 142));
 		}
 	}
 	
@@ -110,7 +110,14 @@
 		repairedItemName = par1Str;
 		if(getSlot(2).getHasStack())
 		{
-			getSlot(2).getStack().setItemName(repairedItemName);
+			ItemStack var2 = getSlot(2).getStack();
+			if(org.apache.commons.lang3.StringUtils.isBlank(par1Str))
+			{
+				var2.func_135074_t();
+			} else
+			{
+				var2.setItemName(repairedItemName);
+			}
 		}
 		updateRepairOutput();
 	}
@@ -266,7 +273,15 @@
 					}
 				}
 			}
-			if(repairedItemName != null && repairedItemName.length() > 0 && !repairedItemName.equalsIgnoreCase(thePlayer.getTranslator().translateNamedKey(var1.getItemName())) && !repairedItemName.equals(var1.getDisplayName()))
+			if(org.apache.commons.lang3.StringUtils.isBlank(repairedItemName))
+			{
+				if(var1.hasDisplayName())
+				{
+					var4 = var1.isItemStackDamageable() ? 7 : var1.stackSize * 5;
+					var2 += var4;
+					var5.func_135074_t();
+				}
+			} else if(!repairedItemName.equals(var1.getDisplayName()))
 			{
 				var4 = var1.isItemStackDamageable() ? 7 : var1.stackSize * 5;
 				var2 += var4;
@@ -321,7 +336,6 @@
 			}
 			if(var4 == var2 && var4 > 0 && maximumCost >= 40)
 			{
-				theWorld.getWorldLogAgent().logInfo("Naming an item only, cost too high; giving discount to cap cost to 39 levels");
 				maximumCost = 39;
 			}
 			if(maximumCost >= 40 && !thePlayer.capabilities.isCreativeMode)
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerRepairINNER1.java b/RMCClient/minecraft/net/minecraft/src/ContainerRepairINNER1.java
new file mode 100644
index 0000000..651a161
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerRepairINNER1.java
@@ -0,0 +1,23 @@
+package net.minecraft.src;
+
+class ContainerRepairINNER1 extends InventoryBasic
+{
+	final ContainerRepair field_135010_a;
+	
+	ContainerRepairINNER1(ContainerRepair p_i1798_1_, String p_i1798_2_, boolean p_i1798_3_, int p_i1798_4_)
+	{
+		super(p_i1798_2_, p_i1798_3_, p_i1798_4_);
+		field_135010_a = p_i1798_1_;
+	}
+	
+	@Override public boolean isStackValidForSlot(int par1, ItemStack par2ItemStack)
+	{
+		return true;
+	}
+	
+	@Override public void onInventoryChanged()
+	{
+		super.onInventoryChanged();
+		field_135010_a.onCraftMatrixChanged(this);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerRepairINNER2.java b/RMCClient/minecraft/net/minecraft/src/ContainerRepairINNER2.java
new file mode 100644
index 0000000..19e58f2
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerRepairINNER2.java
@@ -0,0 +1,74 @@
+package net.minecraft.src;
+
+class ContainerRepairINNER2 extends Slot
+{
+	final World field_135071_a;
+	final int field_135069_b;
+	final int field_135070_c;
+	final int field_135067_d;
+	final ContainerRepair field_135068_e;
+	
+	ContainerRepairINNER2(ContainerRepair p_i1799_1_, IInventory p_i1799_2_, int p_i1799_3_, int p_i1799_4_, int p_i1799_5_, World p_i1799_6_, int p_i1799_7_, int p_i1799_8_, int p_i1799_9_)
+	{
+		super(p_i1799_2_, p_i1799_3_, p_i1799_4_, p_i1799_5_);
+		field_135068_e = p_i1799_1_;
+		field_135071_a = p_i1799_6_;
+		field_135069_b = p_i1799_7_;
+		field_135070_c = p_i1799_8_;
+		field_135067_d = p_i1799_9_;
+	}
+	
+	@Override public boolean canTakeStack(EntityPlayer par1EntityPlayer)
+	{
+		return (par1EntityPlayer.capabilities.isCreativeMode || par1EntityPlayer.experienceLevel >= field_135068_e.maximumCost) && field_135068_e.maximumCost > 0 && getHasStack();
+	}
+	
+	@Override public boolean isItemValid(ItemStack par1ItemStack)
+	{
+		return false;
+	}
+	
+	@Override public void onPickupFromSlot(EntityPlayer par1EntityPlayer, ItemStack par2ItemStack)
+	{
+		if(!par1EntityPlayer.capabilities.isCreativeMode)
+		{
+			par1EntityPlayer.addExperienceLevel(-field_135068_e.maximumCost);
+		}
+		ContainerRepair.getRepairInputInventory(field_135068_e).setInventorySlotContents(0, (ItemStack) null);
+		if(ContainerRepair.getStackSizeUsedInRepair(field_135068_e) > 0)
+		{
+			ItemStack var3 = ContainerRepair.getRepairInputInventory(field_135068_e).getStackInSlot(1);
+			if(var3 != null && var3.stackSize > ContainerRepair.getStackSizeUsedInRepair(field_135068_e))
+			{
+				var3.stackSize -= ContainerRepair.getStackSizeUsedInRepair(field_135068_e);
+				ContainerRepair.getRepairInputInventory(field_135068_e).setInventorySlotContents(1, var3);
+			} else
+			{
+				ContainerRepair.getRepairInputInventory(field_135068_e).setInventorySlotContents(1, (ItemStack) null);
+			}
+		} else
+		{
+			ContainerRepair.getRepairInputInventory(field_135068_e).setInventorySlotContents(1, (ItemStack) null);
+		}
+		field_135068_e.maximumCost = 0;
+		if(!par1EntityPlayer.capabilities.isCreativeMode && !field_135071_a.isRemote && field_135071_a.getBlockId(field_135069_b, field_135070_c, field_135067_d) == Block.anvil.blockID && par1EntityPlayer.getRNG().nextFloat() < 0.12F)
+		{
+			int var6 = field_135071_a.getBlockMetadata(field_135069_b, field_135070_c, field_135067_d);
+			int var4 = var6 & 3;
+			int var5 = var6 >> 2;
+			++var5;
+			if(var5 > 2)
+			{
+				field_135071_a.setBlockToAir(field_135069_b, field_135070_c, field_135067_d);
+				field_135071_a.playAuxSFX(1020, field_135069_b, field_135070_c, field_135067_d, 0);
+			} else
+			{
+				field_135071_a.setBlockMetadataWithNotify(field_135069_b, field_135070_c, field_135067_d, var4 | var5 << 2, 2);
+				field_135071_a.playAuxSFX(1021, field_135069_b, field_135070_c, field_135067_d, 0);
+			}
+		} else if(!field_135071_a.isRemote)
+		{
+			field_135071_a.playAuxSFX(1021, field_135069_b, field_135070_c, field_135067_d, 0);
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerSheep.java b/RMCClient/minecraft/net/minecraft/src/ContainerSheep.java
index b20a848..9302f4f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerSheep.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerSheep.java
@@ -4,9 +4,9 @@
 {
 	final EntitySheep field_90034_a;
 	
-	ContainerSheep(EntitySheep par1EntitySheep)
+	ContainerSheep(EntitySheep p_i1690_1_)
 	{
-		field_90034_a = par1EntitySheep;
+		field_90034_a = p_i1690_1_;
 	}
 	
 	@Override public boolean canInteractWith(EntityPlayer par1EntityPlayer)
diff --git a/RMCClient/minecraft/net/minecraft/src/ContainerWorkbench.java b/RMCClient/minecraft/net/minecraft/src/ContainerWorkbench.java
index cc2dc02..dd759a2 100644
--- a/RMCClient/minecraft/net/minecraft/src/ContainerWorkbench.java
+++ b/RMCClient/minecraft/net/minecraft/src/ContainerWorkbench.java
@@ -9,13 +9,13 @@
 	private int posY;
 	private int posZ;
 	
-	public ContainerWorkbench(InventoryPlayer par1InventoryPlayer, World par2World, int par3, int par4, int par5)
+	public ContainerWorkbench(InventoryPlayer p_i1808_1_, World p_i1808_2_, int p_i1808_3_, int p_i1808_4_, int p_i1808_5_)
 	{
-		worldObj = par2World;
-		posX = par3;
-		posY = par4;
-		posZ = par5;
-		addSlotToContainer(new SlotCrafting(par1InventoryPlayer.player, craftMatrix, craftResult, 0, 124, 35));
+		worldObj = p_i1808_2_;
+		posX = p_i1808_3_;
+		posY = p_i1808_4_;
+		posZ = p_i1808_5_;
+		addSlotToContainer(new SlotCrafting(p_i1808_1_.player, craftMatrix, craftResult, 0, 124, 35));
 		int var6;
 		int var7;
 		for(var6 = 0; var6 < 3; ++var6)
@@ -29,12 +29,12 @@
 		{
 			for(var7 = 0; var7 < 9; ++var7)
 			{
-				addSlotToContainer(new Slot(par1InventoryPlayer, var7 + var6 * 9 + 9, 8 + var7 * 18, 84 + var6 * 18));
+				addSlotToContainer(new Slot(p_i1808_1_, var7 + var6 * 9 + 9, 8 + var7 * 18, 84 + var6 * 18));
 			}
 		}
 		for(var6 = 0; var6 < 9; ++var6)
 		{
-			addSlotToContainer(new Slot(par1InventoryPlayer, var6, 8 + var6 * 18, 142));
+			addSlotToContainer(new Slot(p_i1808_1_, var6, 8 + var6 * 18, 142));
 		}
 		onCraftMatrixChanged(craftMatrix);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ConvertingProgressUpdate.java b/RMCClient/minecraft/net/minecraft/src/ConvertingProgressUpdate.java
index 2aad96f..dd35dec 100644
--- a/RMCClient/minecraft/net/minecraft/src/ConvertingProgressUpdate.java
+++ b/RMCClient/minecraft/net/minecraft/src/ConvertingProgressUpdate.java
@@ -7,17 +7,13 @@
 	private long field_96245_b;
 	final MinecraftServer mcServer;
 	
-	public ConvertingProgressUpdate(MinecraftServer par1)
+	public ConvertingProgressUpdate(MinecraftServer p_i1493_1_)
 	{
-		mcServer = par1;
-		field_96245_b = System.currentTimeMillis();
+		mcServer = p_i1493_1_;
+		field_96245_b = MinecraftServer.func_130071_aq();
 	}
 	
 	@Override public void displayProgressMessage(String par1Str)
-	{
-	}
-	
-	@Override public void onNoMoreProgress()
 	{
 	}
 	
@@ -25,15 +21,11 @@
 	{
 	}
 	
-	@Override public void resetProgressAndMessage(String par1Str)
-	{
-	}
-	
 	@Override public void setLoadingProgress(int par1)
 	{
-		if(System.currentTimeMillis() - field_96245_b >= 1000L)
+		if(MinecraftServer.func_130071_aq() - field_96245_b >= 1000L)
 		{
-			field_96245_b = System.currentTimeMillis();
+			field_96245_b = MinecraftServer.func_130071_aq();
 			mcServer.getLogAgent().logInfo("Converting... " + par1 + "%");
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/CraftingManager.java b/RMCClient/minecraft/net/minecraft/src/CraftingManager.java
index 2e6f121..da9158c 100644
--- a/RMCClient/minecraft/net/minecraft/src/CraftingManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/CraftingManager.java
@@ -32,6 +32,7 @@
 		addRecipe(new ItemStack(Block.netherFence, 6), new Object[] { "###", "###", '#', Block.netherBrick });
 		addRecipe(new ItemStack(Block.fenceGate, 1), new Object[] { "#W#", "#W#", '#', Item.stick, 'W', Block.planks });
 		addRecipe(new ItemStack(Block.jukebox, 1), new Object[] { "###", "#X#", "###", '#', Block.planks, 'X', Item.diamond });
+		addRecipe(new ItemStack(Item.field_111214_ch, 2), new Object[] { "~~ ", "~O ", "  ~", '~', Item.silk, 'O', Item.slimeBall });
 		addRecipe(new ItemStack(Block.music, 1), new Object[] { "###", "#X#", "###", '#', Block.planks, 'X', Item.redstone });
 		addRecipe(new ItemStack(Block.bookShelf, 1), new Object[] { "###", "XXX", "###", '#', Block.planks, 'X', Item.book });
 		addRecipe(new ItemStack(Block.blockSnow, 1), new Object[] { "##", "##", '#', Item.snowball });
@@ -100,9 +101,10 @@
 		addRecipe(new ItemStack(Block.stairsNetherQuartz, 4), new Object[] { "#  ", "## ", "###", '#', Block.blockNetherQuartz });
 		addRecipe(new ItemStack(Item.painting, 1), new Object[] { "###", "#X#", "###", '#', Item.stick, 'X', Block.cloth });
 		addRecipe(new ItemStack(Item.itemFrame, 1), new Object[] { "###", "#X#", "###", '#', Item.stick, 'X', Item.leather });
-		addRecipe(new ItemStack(Item.appleGold, 1, 0), new Object[] { "###", "#X#", "###", '#', Item.goldNugget, 'X', Item.appleRed });
+		addRecipe(new ItemStack(Item.appleGold, 1, 0), new Object[] { "###", "#X#", "###", '#', Item.ingotGold, 'X', Item.appleRed });
 		addRecipe(new ItemStack(Item.appleGold, 1, 1), new Object[] { "###", "#X#", "###", '#', Block.blockGold, 'X', Item.appleRed });
 		addRecipe(new ItemStack(Item.goldenCarrot, 1, 0), new Object[] { "###", "#X#", "###", '#', Item.goldNugget, 'X', Item.carrot });
+		addRecipe(new ItemStack(Item.speckledMelon, 1), new Object[] { "###", "#X#", "###", '#', Item.goldNugget, 'X', Item.melon });
 		addRecipe(new ItemStack(Block.lever, 1), new Object[] { "X", "#", '#', Block.cobblestone, 'X', Item.stick });
 		addRecipe(new ItemStack(Block.tripWireSource, 2), new Object[] { "I", "S", "#", '#', Block.planks, 'S', Item.stick, 'I', Item.ingotIron });
 		addRecipe(new ItemStack(Block.torchRedstoneActive, 1), new Object[] { "X", "#", '#', Item.stick, 'X', Item.redstone });
@@ -130,7 +132,6 @@
 		addRecipe(new ItemStack(Block.daylightSensor), new Object[] { "GGG", "QQQ", "WWW", 'G', Block.glass, 'Q', Item.netherQuartz, 'W', Block.woodSingleSlab });
 		addRecipe(new ItemStack(Block.hopperBlock), new Object[] { "I I", "ICI", " I ", 'I', Item.ingotIron, 'C', Block.chest });
 		Collections.sort(recipes, new RecipeSorter(this));
-		System.out.println(recipes.size() + " recipes");
 	}
 	
 	ShapedRecipes addRecipe(ItemStack par1ItemStack, Object ... par2ArrayOfObj)
diff --git a/RMCClient/minecraft/net/minecraft/src/CrashReport.java b/RMCClient/minecraft/net/minecraft/src/CrashReport.java
index 97731d6..f6dd627 100644
--- a/RMCClient/minecraft/net/minecraft/src/CrashReport.java
+++ b/RMCClient/minecraft/net/minecraft/src/CrashReport.java
@@ -17,27 +17,20 @@
 	private final Throwable cause;
 	private final CrashReportCategory field_85061_c = new CrashReportCategory(this, "System Details");
 	private final List crashReportSections = new ArrayList();
-	private File crashReportFile = null;
+	private File crashReportFile;
 	private boolean field_85059_f = true;
 	private StackTraceElement[] field_85060_g = new StackTraceElement[0];
 	
-	public CrashReport(String par1Str, Throwable par2Throwable)
+	public CrashReport(String p_i1348_1_, Throwable p_i1348_2_)
 	{
-		description = par1Str;
-		cause = par2Throwable;
+		description = p_i1348_1_;
+		cause = p_i1348_2_;
 		populateEnvironment();
 	}
 	
 	public CrashReportCategory func_85056_g()
 	{
 		return field_85061_c;
-	}
-	
-	public String func_90021_c()
-	{
-		StringBuilder var1 = new StringBuilder();
-		getSectionsInStringBuilder(var1);
-		return var1.toString();
 	}
 	
 	public String getCauseStackTraceOrString()
diff --git a/RMCClient/minecraft/net/minecraft/src/CrashReportCategory.java b/RMCClient/minecraft/net/minecraft/src/CrashReportCategory.java
index 654a7ba..43ae104 100644
--- a/RMCClient/minecraft/net/minecraft/src/CrashReportCategory.java
+++ b/RMCClient/minecraft/net/minecraft/src/CrashReportCategory.java
@@ -12,10 +12,10 @@
 	private final List field_85077_c = new ArrayList();
 	private StackTraceElement[] stackTrace = new StackTraceElement[0];
 	
-	public CrashReportCategory(CrashReport par1CrashReport, String par2Str)
+	public CrashReportCategory(CrashReport p_i1353_1_, String p_i1353_2_)
 	{
-		theCrashReport = par1CrashReport;
-		field_85076_b = par2Str;
+		theCrashReport = p_i1353_1_;
+		field_85076_b = p_i1353_2_;
 	}
 	
 	public void addCrashSection(String par1Str, Object par2Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/CrashReportCategoryEntry.java b/RMCClient/minecraft/net/minecraft/src/CrashReportCategoryEntry.java
index 4d9f9fe..a6cf6d7 100644
--- a/RMCClient/minecraft/net/minecraft/src/CrashReportCategoryEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/CrashReportCategoryEntry.java
@@ -5,19 +5,19 @@
 	private final String field_85092_a;
 	private final String field_85091_b;
 	
-	public CrashReportCategoryEntry(String par1Str, Object par2Obj)
+	public CrashReportCategoryEntry(String p_i1352_1_, Object p_i1352_2_)
 	{
-		field_85092_a = par1Str;
-		if(par2Obj == null)
+		field_85092_a = p_i1352_1_;
+		if(p_i1352_2_ == null)
 		{
 			field_85091_b = "~~NULL~~";
-		} else if(par2Obj instanceof Throwable)
+		} else if(p_i1352_2_ instanceof Throwable)
 		{
-			Throwable var3 = (Throwable) par2Obj;
+			Throwable var3 = (Throwable) p_i1352_2_;
 			field_85091_b = "~~ERROR~~ " + var3.getClass().getSimpleName() + ": " + var3.getMessage();
 		} else
 		{
-			field_85091_b = par2Obj.toString();
+			field_85091_b = p_i1352_2_.toString();
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeCrafting.java b/RMCClient/minecraft/net/minecraft/src/CreativeCrafting.java
index dac0d9a..65f2a51 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeCrafting.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeCrafting.java
@@ -8,9 +8,9 @@
 {
 	private final Minecraft mc;
 	
-	public CreativeCrafting(Minecraft par1)
+	public CreativeCrafting(Minecraft p_i1085_1_)
 	{
-		mc = par1;
+		mc = p_i1085_1_;
 	}
 	
 	@Override public void sendContainerAndContentsToPlayer(Container par1Container, List par2List)
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabBlock.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabBlock.java
index d1a0609..8314744 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabBlock.java
@@ -2,13 +2,13 @@
 
 final class CreativeTabBlock extends CreativeTabs
 {
-	CreativeTabBlock(int par1, String par2Str)
+	CreativeTabBlock(int p_i1845_1_, String p_i1845_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1845_1_, p_i1845_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
 	{
-		return Block.brick.blockID;
+		return Block.plantRed.blockID;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabBrewing.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabBrewing.java
index 6cd13f6..2fe2604 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabBrewing.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabBrewing.java
@@ -2,9 +2,9 @@
 
 final class CreativeTabBrewing extends CreativeTabs
 {
-	CreativeTabBrewing(int par1, String par2Str)
+	CreativeTabBrewing(int p_i1842_1_, String p_i1842_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1842_1_, p_i1842_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabCombat.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabCombat.java
index 9f135dd..96b1a7f 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabCombat.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabCombat.java
@@ -1,22 +1,14 @@
 package net.minecraft.src;
 
-import java.util.List;
-
 final class CreativeTabCombat extends CreativeTabs
 {
-	CreativeTabCombat(int par1, String par2Str)
+	CreativeTabCombat(int p_i1841_1_, String p_i1841_2_)
 	{
-		super(par1, par2Str);
-	}
-	
-	@Override public void displayAllReleventItems(List par1List)
-	{
-		super.displayAllReleventItems(par1List);
-		func_92116_a(par1List, new EnumEnchantmentType[] { EnumEnchantmentType.armor, EnumEnchantmentType.armor_feet, EnumEnchantmentType.armor_head, EnumEnchantmentType.armor_legs, EnumEnchantmentType.armor_torso, EnumEnchantmentType.bow, EnumEnchantmentType.weapon });
+		super(p_i1841_1_, p_i1841_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
 	{
-		return Item.swordGold.itemID;
+		return Block.brick.blockID;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabDeco.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabDeco.java
index 97e610e..22f3f75 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabDeco.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabDeco.java
@@ -2,13 +2,13 @@
 
 final class CreativeTabDeco extends CreativeTabs
 {
-	CreativeTabDeco(int par1, String par2Str)
+	CreativeTabDeco(int p_i1846_1_, String p_i1846_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1846_1_, p_i1846_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
 	{
-		return Block.plantRed.blockID;
+		return Item.redstone.itemID;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabFood.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabFood.java
index 8bcf3ae..9b06474 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabFood.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabFood.java
@@ -2,13 +2,13 @@
 
 final class CreativeTabFood extends CreativeTabs
 {
-	CreativeTabFood(int par1, String par2Str)
+	CreativeTabFood(int p_i1851_1_, String p_i1851_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1851_1_, p_i1851_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
 	{
-		return Item.appleRed.itemID;
+		return Item.axeIron.itemID;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabInventory.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabInventory.java
index aec245a..79cc438 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabInventory.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabInventory.java
@@ -2,9 +2,9 @@
 
 final class CreativeTabInventory extends CreativeTabs
 {
-	CreativeTabInventory(int par1, String par2Str)
+	CreativeTabInventory(int p_i1844_1_, String p_i1844_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1844_1_, p_i1844_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabMaterial.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabMaterial.java
index 81327ee..bea4b6c 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabMaterial.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabMaterial.java
@@ -2,9 +2,9 @@
 
 final class CreativeTabMaterial extends CreativeTabs
 {
-	CreativeTabMaterial(int par1, String par2Str)
+	CreativeTabMaterial(int p_i1843_1_, String p_i1843_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1843_1_, p_i1843_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabMisc.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabMisc.java
index 767f7e0..731d18c 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabMisc.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabMisc.java
@@ -1,22 +1,14 @@
 package net.minecraft.src;
 
-import java.util.List;
-
 final class CreativeTabMisc extends CreativeTabs
 {
-	CreativeTabMisc(int par1, String par2Str)
+	CreativeTabMisc(int p_i1849_1_, String p_i1849_2_)
 	{
-		super(par1, par2Str);
-	}
-	
-	@Override public void displayAllReleventItems(List par1List)
-	{
-		super.displayAllReleventItems(par1List);
-		func_92116_a(par1List, new EnumEnchantmentType[] { EnumEnchantmentType.all });
+		super(p_i1849_1_, p_i1849_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
 	{
-		return Item.bucketLava.itemID;
+		return Item.compass.itemID;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabRedstone.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabRedstone.java
index 0b563b1..a8b8137 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabRedstone.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabRedstone.java
@@ -2,13 +2,13 @@
 
 final class CreativeTabRedstone extends CreativeTabs
 {
-	CreativeTabRedstone(int par1, String par2Str)
+	CreativeTabRedstone(int p_i1847_1_, String p_i1847_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1847_1_, p_i1847_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
 	{
-		return Item.redstone.itemID;
+		return Block.railPowered.blockID;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabSearch.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabSearch.java
index 17e5d31..470873b 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabSearch.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabSearch.java
@@ -2,13 +2,13 @@
 
 final class CreativeTabSearch extends CreativeTabs
 {
-	CreativeTabSearch(int par1, String par2Str)
+	CreativeTabSearch(int p_i1850_1_, String p_i1850_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1850_1_, p_i1850_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
 	{
-		return Item.compass.itemID;
+		return Item.appleRed.itemID;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabTools.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabTools.java
index 2e3b42a..194b244 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabTools.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabTools.java
@@ -1,22 +1,14 @@
 package net.minecraft.src;
 
-import java.util.List;
-
 final class CreativeTabTools extends CreativeTabs
 {
-	CreativeTabTools(int par1, String par2Str)
+	CreativeTabTools(int p_i1852_1_, String p_i1852_2_)
 	{
-		super(par1, par2Str);
-	}
-	
-	@Override public void displayAllReleventItems(List par1List)
-	{
-		super.displayAllReleventItems(par1List);
-		func_92116_a(par1List, new EnumEnchantmentType[] { EnumEnchantmentType.digger });
+		super(p_i1852_1_, p_i1852_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
 	{
-		return Item.axeIron.itemID;
+		return Item.swordGold.itemID;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabTransport.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabTransport.java
index 098c617..8c68f76 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabTransport.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabTransport.java
@@ -2,13 +2,13 @@
 
 final class CreativeTabTransport extends CreativeTabs
 {
-	CreativeTabTransport(int par1, String par2Str)
+	CreativeTabTransport(int p_i1848_1_, String p_i1848_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1848_1_, p_i1848_2_);
 	}
 	
 	@Override public int getTabIconItemIndex()
 	{
-		return Block.railPowered.blockID;
+		return Item.bucketLava.itemID;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/CreativeTabs.java b/RMCClient/minecraft/net/minecraft/src/CreativeTabs.java
index 7df40ea..f36ec80 100644
--- a/RMCClient/minecraft/net/minecraft/src/CreativeTabs.java
+++ b/RMCClient/minecraft/net/minecraft/src/CreativeTabs.java
@@ -5,29 +5,30 @@
 public class CreativeTabs
 {
 	public static final CreativeTabs[] creativeTabArray = new CreativeTabs[12];
-	public static final CreativeTabs tabBlock = new CreativeTabBlock(0, "buildingBlocks");
-	public static final CreativeTabs tabDecorations = new CreativeTabDeco(1, "decorations");
-	public static final CreativeTabs tabRedstone = new CreativeTabRedstone(2, "redstone");
-	public static final CreativeTabs tabTransport = new CreativeTabTransport(3, "transportation");
-	public static final CreativeTabs tabMisc = new CreativeTabMisc(4, "misc");
-	public static final CreativeTabs tabAllSearch = new CreativeTabSearch(5, "search").setBackgroundImageName("search.png");
-	public static final CreativeTabs tabFood = new CreativeTabFood(6, "food");
-	public static final CreativeTabs tabTools = new CreativeTabTools(7, "tools");
-	public static final CreativeTabs tabCombat = new CreativeTabCombat(8, "combat");
+	public static final CreativeTabs tabBlock = new CreativeTabCombat(0, "buildingBlocks");
+	public static final CreativeTabs tabDecorations = new CreativeTabBlock(1, "decorations");
+	public static final CreativeTabs tabRedstone = new CreativeTabDeco(2, "redstone");
+	public static final CreativeTabs tabTransport = new CreativeTabRedstone(3, "transportation");
+	public static final CreativeTabs tabMisc = new CreativeTabTransport(4, "misc").func_111229_a(new EnumEnchantmentType[] { EnumEnchantmentType.all });
+	public static final CreativeTabs tabAllSearch = new CreativeTabMisc(5, "search").setBackgroundImageName("item_search.png");
+	public static final CreativeTabs tabFood = new CreativeTabSearch(6, "food");
+	public static final CreativeTabs tabTools = new CreativeTabFood(7, "tools").func_111229_a(new EnumEnchantmentType[] { EnumEnchantmentType.digger });
+	public static final CreativeTabs tabCombat = new CreativeTabTools(8, "combat").func_111229_a(new EnumEnchantmentType[] { EnumEnchantmentType.armor, EnumEnchantmentType.armor_feet, EnumEnchantmentType.armor_head, EnumEnchantmentType.armor_legs, EnumEnchantmentType.armor_torso, EnumEnchantmentType.bow, EnumEnchantmentType.weapon });
 	public static final CreativeTabs tabBrewing = new CreativeTabBrewing(9, "brewing");
 	public static final CreativeTabs tabMaterials = new CreativeTabMaterial(10, "materials");
-	public static final CreativeTabs tabInventory = new CreativeTabInventory(11, "inventory").setBackgroundImageName("survival_inv.png").setNoScrollbar().setNoTitle();
+	public static final CreativeTabs tabInventory = new CreativeTabInventory(11, "inventory").setBackgroundImageName("inventory.png").setNoScrollbar().setNoTitle();
 	private final int tabIndex;
 	private final String tabLabel;
-	private String backgroundImageName = "list_items.png";
+	private String backgroundImageName = "items.png";
 	private boolean hasScrollbar = true;
 	private boolean drawTitle = true;
+	private EnumEnchantmentType[] field_111230_s;
 	
-	public CreativeTabs(int par1, String par2Str)
+	public CreativeTabs(int p_i1853_1_, String p_i1853_2_)
 	{
-		tabIndex = par1;
-		tabLabel = par2Str;
-		creativeTabArray[par1] = this;
+		tabIndex = p_i1853_1_;
+		tabLabel = p_i1853_2_;
+		creativeTabArray[p_i1853_1_] = this;
 	}
 	
 	public void displayAllReleventItems(List par1List)
@@ -42,11 +43,42 @@
 				var5.getSubItems(var5.itemID, this, par1List);
 			}
 		}
+		if(func_111225_m() != null)
+		{
+			func_92116_a(par1List, func_111225_m());
+		}
 	}
 	
 	public boolean drawInForegroundOfTab()
 	{
 		return drawTitle;
+	}
+	
+	public EnumEnchantmentType[] func_111225_m()
+	{
+		return field_111230_s;
+	}
+	
+	public boolean func_111226_a(EnumEnchantmentType p_111226_1_)
+	{
+		if(field_111230_s == null) return false;
+		else
+		{
+			EnumEnchantmentType[] var2 = field_111230_s;
+			int var3 = var2.length;
+			for(int var4 = 0; var4 < var3; ++var4)
+			{
+				EnumEnchantmentType var5 = var2[var4];
+				if(var5 == p_111226_1_) return true;
+			}
+			return false;
+		}
+	}
+	
+	public CreativeTabs func_111229_a(EnumEnchantmentType ... p_111229_1_)
+	{
+		field_111230_s = p_111229_1_;
+		return this;
 	}
 	
 	public void func_92116_a(List par1List, EnumEnchantmentType ... par2ArrayOfEnumEnchantmentType)
@@ -106,7 +138,7 @@
 	
 	public String getTranslatedTabLabel()
 	{
-		return StringTranslate.getInstance().translateKey("itemGroup." + getTabLabel());
+		return "itemGroup." + getTabLabel();
 	}
 	
 	public boolean isTabInFirstRow()
diff --git a/RMCClient/minecraft/net/minecraft/src/CryptManager.java b/RMCClient/minecraft/net/minecraft/src/CryptManager.java
index 7da0667..6792a13 100644
--- a/RMCClient/minecraft/net/minecraft/src/CryptManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/CryptManager.java
@@ -3,7 +3,6 @@
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.io.UnsupportedEncodingException;
-import java.nio.charset.Charset;
 import java.security.InvalidKeyException;
 import java.security.Key;
 import java.security.KeyFactory;
@@ -29,8 +28,6 @@
 
 public class CryptManager
 {
-	public static final Charset charSet = Charset.forName("ISO_8859_1");
-	
 	private static byte[] cipherOperation(int par0, Key par1Key, byte[] par2ArrayOfByte)
 	{
 		try
diff --git a/RMCClient/minecraft/net/minecraft/src/DamageSource.java b/RMCClient/minecraft/net/minecraft/src/DamageSource.java
index aa35b62..3091de7 100644
--- a/RMCClient/minecraft/net/minecraft/src/DamageSource.java
+++ b/RMCClient/minecraft/net/minecraft/src/DamageSource.java
@@ -16,19 +16,19 @@
 	public static DamageSource wither = new DamageSource("wither").setDamageBypassesArmor();
 	public static DamageSource anvil = new DamageSource("anvil");
 	public static DamageSource fallingBlock = new DamageSource("fallingBlock");
-	private boolean isUnblockable = false;
-	private boolean isDamageAllowedInCreativeMode = false;
+	private boolean isUnblockable;
+	private boolean isDamageAllowedInCreativeMode;
 	private float hungerDamage = 0.3F;
 	private boolean fireDamage;
 	private boolean projectile;
 	private boolean difficultyScaled;
-	private boolean magicDamage = false;
-	private boolean explosion = false;
+	private boolean magicDamage;
+	private boolean explosion;
 	public String damageType;
 	
-	protected DamageSource(String par1Str)
+	protected DamageSource(String p_i1566_1_)
 	{
-		damageType = par1Str;
+		damageType = p_i1566_1_;
 	}
 	
 	public boolean canHarmInCreative()
@@ -41,12 +41,12 @@
 		return damageType;
 	}
 	
-	public String getDeathMessage(EntityLiving par1EntityLiving)
+	public ChatMessageComponent getDeathMessage(EntityLivingBase par1EntityLiving)
 	{
-		EntityLiving var2 = par1EntityLiving.func_94060_bK();
+		EntityLivingBase var2 = par1EntityLiving.func_94060_bK();
 		String var3 = "death.attack." + damageType;
 		String var4 = var3 + ".player";
-		return var2 != null && StatCollector.func_94522_b(var4) ? StatCollector.translateToLocalFormatted(var4, new Object[] { par1EntityLiving.getTranslatedEntityName(), var2.getTranslatedEntityName() }) : StatCollector.translateToLocalFormatted(var3, new Object[] { par1EntityLiving.getTranslatedEntityName() });
+		return var2 != null && StatCollector.func_94522_b(var4) ? ChatMessageComponent.func_111082_b(var4, new Object[] { par1EntityLiving.getTranslatedEntityName(), var2.getTranslatedEntityName() }) : ChatMessageComponent.func_111082_b(var3, new Object[] { par1EntityLiving.getTranslatedEntityName() });
 	}
 	
 	public Entity getEntity()
@@ -152,7 +152,7 @@
 		return new EntityDamageSourceIndirect("indirectMagic", par0Entity, par1Entity).setDamageBypassesArmor().setMagicDamage();
 	}
 	
-	public static DamageSource causeMobDamage(EntityLiving par0EntityLiving)
+	public static DamageSource causeMobDamage(EntityLivingBase par0EntityLiving)
 	{
 		return new EntityDamageSource("mob", par0EntityLiving);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/DataWatcher.java b/RMCClient/minecraft/net/minecraft/src/DataWatcher.java
index d675482..722ce52 100644
--- a/RMCClient/minecraft/net/minecraft/src/DataWatcher.java
+++ b/RMCClient/minecraft/net/minecraft/src/DataWatcher.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -42,6 +42,16 @@
 		watchedObjects.put(Integer.valueOf(par1), var3);
 		lock.writeLock().unlock();
 		isBlank = false;
+	}
+	
+	public void func_111144_e()
+	{
+		objectChanged = false;
+	}
+	
+	public float func_111145_d(int p_111145_1_)
+	{
+		return ((Float) getWatchedObject(p_111145_1_).getObject()).floatValue();
 	}
 	
 	public List getAllWatched()
@@ -171,9 +181,10 @@
 			}
 		}
 		lock.writeLock().unlock();
+		objectChanged = true;
 	}
 	
-	public void writeWatchableObjects(DataOutputStream par1DataOutputStream) throws IOException
+	public void writeWatchableObjects(DataOutput par1DataOutputStream) throws IOException
 	{
 		lock.readLock().lock();
 		Iterator var2 = watchedObjects.values().iterator();
@@ -186,7 +197,7 @@
 		par1DataOutputStream.writeByte(127);
 	}
 	
-	public static List readWatchableObjects(DataInputStream par0DataInputStream) throws IOException
+	public static List readWatchableObjects(DataInput par0DataInputStream) throws IOException
 	{
 		ArrayList var1 = null;
 		for(byte var2 = par0DataInputStream.readByte(); var2 != 127; var2 = par0DataInputStream.readByte())
@@ -229,7 +240,7 @@
 		return var1;
 	}
 	
-	public static void writeObjectsInListToStream(List par0List, DataOutputStream par1DataOutputStream) throws IOException
+	public static void writeObjectsInListToStream(List par0List, DataOutput par1DataOutputStream) throws IOException
 	{
 		if(par0List != null)
 		{
@@ -243,7 +254,7 @@
 		par1DataOutputStream.writeByte(127);
 	}
 	
-	private static void writeWatchableObject(DataOutputStream par0DataOutputStream, WatchableObject par1WatchableObject) throws IOException
+	private static void writeWatchableObject(DataOutput par0DataOutputStream, WatchableObject par1WatchableObject) throws IOException
 	{
 		int var2 = (par1WatchableObject.getObjectType() << 5 | par1WatchableObject.getDataValueId() & 31) & 255;
 		par0DataOutputStream.writeByte(var2);
diff --git a/RMCClient/minecraft/net/minecraft/src/DedicatedPlayerList.java b/RMCClient/minecraft/net/minecraft/src/DedicatedPlayerList.java
index 60016f3..8a2530c 100644
--- a/RMCClient/minecraft/net/minecraft/src/DedicatedPlayerList.java
+++ b/RMCClient/minecraft/net/minecraft/src/DedicatedPlayerList.java
@@ -14,15 +14,15 @@
 	private File opsList;
 	private File whiteList;
 	
-	public DedicatedPlayerList(DedicatedServer par1DedicatedServer)
+	public DedicatedPlayerList(DedicatedServer p_i1503_1_)
 	{
-		super(par1DedicatedServer);
-		opsList = par1DedicatedServer.getFile("ops.txt");
-		whiteList = par1DedicatedServer.getFile("white-list.txt");
-		viewDistance = par1DedicatedServer.getIntProperty("view-distance", 10);
-		maxPlayers = par1DedicatedServer.getIntProperty("max-players", 20);
-		setWhiteListEnabled(par1DedicatedServer.getBooleanProperty("white-list", false));
-		if(!par1DedicatedServer.isSinglePlayer())
+		super(p_i1503_1_);
+		opsList = p_i1503_1_.getFile("ops.txt");
+		whiteList = p_i1503_1_.getFile("white-list.txt");
+		viewDistance = p_i1503_1_.getIntProperty("view-distance", 10);
+		maxPlayers = p_i1503_1_.getIntProperty("max-players", 20);
+		setWhiteListEnabled(p_i1503_1_.getBooleanProperty("white-list", false));
+		if(!p_i1503_1_.isSinglePlayer())
 		{
 			getBannedPlayers().setListActive(true);
 			getBannedIPs().setListActive(true);
diff --git a/RMCClient/minecraft/net/minecraft/src/DedicatedServer.java b/RMCClient/minecraft/net/minecraft/src/DedicatedServer.java
index c1b94be..bade65a 100644
--- a/RMCClient/minecraft/net/minecraft/src/DedicatedServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/DedicatedServer.java
@@ -20,12 +20,12 @@
 	private boolean canSpawnStructures;
 	private EnumGameType gameType;
 	private NetworkListenThread networkThread;
-	private boolean guiIsEnabled = false;
+	private boolean guiIsEnabled;
 	
-	public DedicatedServer(File par1File)
+	public DedicatedServer(File p_i1508_1_)
 	{
-		super(par1File);
-		field_98131_l = new LogAgent("Minecraft-Server", (String) null, new File(par1File, "server.log").getAbsolutePath());
+		super(p_i1508_1_);
+		field_98131_l = new LogAgent("Minecraft-Server", (String) null, new File(p_i1508_1_, "server.log").getAbsolutePath());
 		new DedicatedServerSleepThread(this);
 	}
 	
@@ -83,11 +83,16 @@
 		}
 	}
 	
+	@Override public int func_110455_j()
+	{
+		return settings.getIntProperty("op-permission-level", 4);
+	}
+	
 	@Override public boolean func_96290_a(World par1World, int par2, int par3, int par4, EntityPlayer par5EntityPlayer)
 	{
 		if(par1World.provider.dimensionId != 0) return false;
 		else if(getDedicatedPlayerList().getOps().isEmpty()) return false;
-		else if(getDedicatedPlayerList().areCommandsAllowed(par5EntityPlayer.username)) return false;
+		else if(getDedicatedPlayerList().areCommandsAllowed(par5EntityPlayer.getCommandSenderName())) return false;
 		else if(getSpawnProtectionSize() <= 0) return false;
 		else
 		{
@@ -205,7 +210,7 @@
 		DedicatedServerCommandThread var1 = new DedicatedServerCommandThread(this);
 		var1.setDaemon(true);
 		var1.start();
-		getLogAgent().logInfo("Starting minecraft server version 1.5.2");
+		getLogAgent().logInfo("Starting minecraft server version 1.6.2");
 		if(Runtime.getRuntime().maxMemory() / 1024L / 1024L < 512L)
 		{
 			getLogAgent().logWarning("To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
diff --git a/RMCClient/minecraft/net/minecraft/src/DedicatedServerCommandThread.java b/RMCClient/minecraft/net/minecraft/src/DedicatedServerCommandThread.java
index ce921cc..c366408 100644
--- a/RMCClient/minecraft/net/minecraft/src/DedicatedServerCommandThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/DedicatedServerCommandThread.java
@@ -8,9 +8,9 @@
 {
 	final DedicatedServer server;
 	
-	DedicatedServerCommandThread(DedicatedServer par1DedicatedServer)
+	DedicatedServerCommandThread(DedicatedServer p_i1505_1_)
 	{
-		server = par1DedicatedServer;
+		server = p_i1505_1_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/DedicatedServerListenThread.java b/RMCClient/minecraft/net/minecraft/src/DedicatedServerListenThread.java
index 9a68026..f2743eb 100644
--- a/RMCClient/minecraft/net/minecraft/src/DedicatedServerListenThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/DedicatedServerListenThread.java
@@ -9,10 +9,10 @@
 {
 	private final ServerListenThread theServerListenThread;
 	
-	public DedicatedServerListenThread(MinecraftServer par1MinecraftServer, InetAddress par2InetAddress, int par3) throws IOException
+	public DedicatedServerListenThread(MinecraftServer p_i1509_1_, InetAddress p_i1509_2_, int p_i1509_3_) throws IOException
 	{
-		super(par1MinecraftServer);
-		theServerListenThread = new ServerListenThread(this, par2InetAddress, par3);
+		super(p_i1509_1_);
+		theServerListenThread = new ServerListenThread(this, p_i1509_2_, p_i1509_3_);
 		theServerListenThread.start();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/DedicatedServerSleepThread.java b/RMCClient/minecraft/net/minecraft/src/DedicatedServerSleepThread.java
index c5be85f..1cda2ba 100644
--- a/RMCClient/minecraft/net/minecraft/src/DedicatedServerSleepThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/DedicatedServerSleepThread.java
@@ -4,9 +4,9 @@
 {
 	final DedicatedServer theDecitatedServer;
 	
-	DedicatedServerSleepThread(DedicatedServer par1DedicatedServer)
+	DedicatedServerSleepThread(DedicatedServer p_i1504_1_)
 	{
-		theDecitatedServer = par1DedicatedServer;
+		theDecitatedServer = p_i1504_1_;
 		setDaemon(true);
 		start();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/DefaultResourcePack.java b/RMCClient/minecraft/net/minecraft/src/DefaultResourcePack.java
new file mode 100644
index 0000000..b7c20a9
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/DefaultResourcePack.java
@@ -0,0 +1,89 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Map;
+import java.util.Set;
+
+import javax.imageio.ImageIO;
+
+public class DefaultResourcePack implements ResourcePack
+{
+	public static final Set field_110608_a = ImmutableSet.of("minecraft");
+	private final Map field_110606_b = Maps.newHashMap();
+	private final File field_110607_c;
+	
+	public DefaultResourcePack(File p_i1288_1_)
+	{
+		field_110607_c = p_i1288_1_;
+		func_110603_a(field_110607_c);
+	}
+	
+	@Override public BufferedImage func_110586_a() throws IOException
+	{
+		return ImageIO.read(DefaultResourcePack.class.getResourceAsStream("/" + new ResourceLocation("pack.png").func_110623_a()));
+	}
+	
+	@Override public Set func_110587_b()
+	{
+		return field_110608_a;
+	}
+	
+	@Override public boolean func_110589_b(ResourceLocation p_110589_1_)
+	{
+		return func_110605_c(p_110589_1_) != null || field_110606_b.containsKey(p_110589_1_.toString());
+	}
+	
+	@Override public InputStream func_110590_a(ResourceLocation p_110590_1_) throws IOException
+	{
+		InputStream var2 = func_110605_c(p_110590_1_);
+		if(var2 != null) return var2;
+		else
+		{
+			File var3 = (File) field_110606_b.get(p_110590_1_.toString());
+			if(var3 != null) return new FileInputStream(var3);
+			else throw new FileNotFoundException(p_110590_1_.func_110623_a());
+		}
+	}
+	
+	public void func_110603_a(File p_110603_1_)
+	{
+		if(p_110603_1_.isDirectory())
+		{
+			File[] var2 = p_110603_1_.listFiles();
+			int var3 = var2.length;
+			for(int var4 = 0; var4 < var3; ++var4)
+			{
+				File var5 = var2[var4];
+				func_110603_a(var5);
+			}
+		} else
+		{
+			func_110604_a(AbstractResourcePack.func_110595_a(field_110607_c, p_110603_1_), p_110603_1_);
+		}
+	}
+	
+	public void func_110604_a(String p_110604_1_, File p_110604_2_)
+	{
+		field_110606_b.put(new ResourceLocation(p_110604_1_).toString(), p_110604_2_);
+	}
+	
+	private InputStream func_110605_c(ResourceLocation p_110605_1_)
+	{
+		return DefaultResourcePack.class.getResourceAsStream("/assets/minecraft/" + p_110605_1_.func_110623_a());
+	}
+	
+	@Override public String func_130077_b()
+	{
+		return "Default";
+	}
+	
+	@Override public MetadataSection func_135058_a(MetadataSerializer p_135058_1_, String p_135058_2_) throws IOException
+	{
+		return AbstractResourcePack.func_110596_a(p_135058_1_, DefaultResourcePack.class.getResourceAsStream("/" + new ResourceLocation("pack.mcmeta").func_110623_a()), p_135058_2_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/DemoWorldManager.java b/RMCClient/minecraft/net/minecraft/src/DemoWorldManager.java
index 6eba06e..df07251 100644
--- a/RMCClient/minecraft/net/minecraft/src/DemoWorldManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/DemoWorldManager.java
@@ -2,14 +2,14 @@
 
 public class DemoWorldManager extends ItemInWorldManager
 {
-	private boolean field_73105_c = false;
-	private boolean demoTimeExpired = false;
-	private int field_73104_e = 0;
-	private int field_73102_f = 0;
+	private boolean field_73105_c;
+	private boolean demoTimeExpired;
+	private int field_73104_e;
+	private int field_73102_f;
 	
-	public DemoWorldManager(World par1World)
+	public DemoWorldManager(World p_i1513_1_)
 	{
-		super(par1World);
+		super(p_i1513_1_);
 	}
 	
 	@Override public boolean activateBlockOrUseItem(EntityPlayer par1EntityPlayer, World par2World, ItemStack par3ItemStack, int par4, int par5, int par6, int par7, float par8, float par9, float par10)
@@ -36,7 +36,7 @@
 	{
 		if(field_73104_e > 100)
 		{
-			thisPlayerMP.sendChatToPlayer(thisPlayerMP.translateString("demo.reminder", new Object[0]));
+			thisPlayerMP.sendChatToPlayer(ChatMessageComponent.func_111077_e("demo.reminder"));
 			field_73104_e = 0;
 		}
 	}
@@ -83,7 +83,7 @@
 		{
 			if(var3 <= 6L)
 			{
-				thisPlayerMP.sendChatToPlayer(thisPlayerMP.translateString("demo.day." + var3, new Object[0]));
+				thisPlayerMP.sendChatToPlayer(ChatMessageComponent.func_111077_e("demo.day." + var3));
 			}
 		} else if(var3 == 1L)
 		{
@@ -99,7 +99,7 @@
 			}
 		} else if(var3 == 5L && var1 % 24000L == 22000L)
 		{
-			thisPlayerMP.sendChatToPlayer(thisPlayerMP.translateString("demo.day.warning", new Object[0]));
+			thisPlayerMP.sendChatToPlayer(ChatMessageComponent.func_111077_e("demo.day.warning"));
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/DemoWorldServer.java b/RMCClient/minecraft/net/minecraft/src/DemoWorldServer.java
index 3bc2f9d..7869c3a 100644
--- a/RMCClient/minecraft/net/minecraft/src/DemoWorldServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/DemoWorldServer.java
@@ -7,8 +7,8 @@
 	private static final long demoWorldSeed = "North Carolina".hashCode();
 	public static final WorldSettings demoWorldSettings = new WorldSettings(demoWorldSeed, EnumGameType.SURVIVAL, true, false, WorldType.DEFAULT).enableBonusChest();
 	
-	public DemoWorldServer(MinecraftServer par1MinecraftServer, ISaveHandler par2ISaveHandler, String par3Str, int par4, Profiler par5Profiler, ILogAgent par6ILogAgent)
+	public DemoWorldServer(MinecraftServer p_i1512_1_, ISaveHandler p_i1512_2_, String p_i1512_3_, int p_i1512_4_, Profiler p_i1512_5_, ILogAgent p_i1512_6_)
 	{
-		super(par1MinecraftServer, par2ISaveHandler, par3Str, par4, demoWorldSettings, par5Profiler, par6ILogAgent);
+		super(p_i1512_1_, p_i1512_2_, p_i1512_3_, p_i1512_4_, demoWorldSettings, p_i1512_5_, p_i1512_6_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/DerivedWorldInfo.java b/RMCClient/minecraft/net/minecraft/src/DerivedWorldInfo.java
index 33e4d10..15851c3 100644
--- a/RMCClient/minecraft/net/minecraft/src/DerivedWorldInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/DerivedWorldInfo.java
@@ -4,9 +4,9 @@
 {
 	private final WorldInfo theWorldInfo;
 	
-	public DerivedWorldInfo(WorldInfo par1WorldInfo)
+	public DerivedWorldInfo(WorldInfo p_i2145_1_)
 	{
-		theWorldInfo = par1WorldInfo;
+		theWorldInfo = p_i2145_1_;
 	}
 	
 	@Override public boolean areCommandsAllowed()
diff --git a/RMCClient/minecraft/net/minecraft/src/DestroyBlockProgress.java b/RMCClient/minecraft/net/minecraft/src/DestroyBlockProgress.java
index 6944a83..efd9b91 100644
--- a/RMCClient/minecraft/net/minecraft/src/DestroyBlockProgress.java
+++ b/RMCClient/minecraft/net/minecraft/src/DestroyBlockProgress.java
@@ -9,12 +9,12 @@
 	private int partialBlockProgress;
 	private int createdAtCloudUpdateTick;
 	
-	public DestroyBlockProgress(int par1, int par2, int par3, int par4)
+	public DestroyBlockProgress(int p_i1511_1_, int p_i1511_2_, int p_i1511_3_, int p_i1511_4_)
 	{
-		miningPlayerEntId = par1;
-		partialBlockX = par2;
-		partialBlockY = par3;
-		partialBlockZ = par4;
+		miningPlayerEntId = p_i1511_1_;
+		partialBlockX = p_i1511_2_;
+		partialBlockY = p_i1511_3_;
+		partialBlockZ = p_i1511_4_;
 	}
 	
 	public int getCreationCloudUpdateTick()
diff --git a/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorFilledBucket.java b/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorFilledBucket.java
index a739c4a..8d6415e 100644
--- a/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorFilledBucket.java
+++ b/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorFilledBucket.java
@@ -11,7 +11,7 @@
 		int var5 = par1IBlockSource.getYInt();
 		int var6 = par1IBlockSource.getZInt();
 		EnumFacing var7 = BlockDispenser.getFacing(par1IBlockSource.getBlockMetadata());
-		if(var3.tryPlaceContainedLiquid(par1IBlockSource.getWorld(), var4, var5, var6, var4 + var7.getFrontOffsetX(), var5 + var7.getFrontOffsetY(), var6 + var7.getFrontOffsetZ()))
+		if(var3.tryPlaceContainedLiquid(par1IBlockSource.getWorld(), var4 + var7.getFrontOffsetX(), var5 + var7.getFrontOffsetY(), var6 + var7.getFrontOffsetZ()))
 		{
 			par2ItemStack.itemID = Item.bucketEmpty.itemID;
 			par2ItemStack.stackSize = 1;
diff --git a/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorMobEgg.java b/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorMobEgg.java
index 3d0d0d3..2681b0f 100644
--- a/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorMobEgg.java
+++ b/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorMobEgg.java
@@ -9,7 +9,7 @@
 		double var6 = par1IBlockSource.getYInt() + 0.2F;
 		double var8 = par1IBlockSource.getZ() + var3.getFrontOffsetZ();
 		Entity var10 = ItemMonsterPlacer.spawnCreature(par1IBlockSource.getWorld(), par2ItemStack.getItemDamage(), var4, var6, var8);
-		if(var10 instanceof EntityLiving && par2ItemStack.hasDisplayName())
+		if(var10 instanceof EntityLivingBase && par2ItemStack.hasDisplayName())
 		{
 			((EntityLiving) var10).func_94058_c(par2ItemStack.getDisplayName());
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorPotionProjectile.java b/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorPotionProjectile.java
index cd5d94f..673e72a 100644
--- a/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorPotionProjectile.java
+++ b/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorPotionProjectile.java
@@ -5,10 +5,10 @@
 	final ItemStack potionItemStack;
 	final DispenserBehaviorPotion dispenserPotionBehavior;
 	
-	DispenserBehaviorPotionProjectile(DispenserBehaviorPotion par1DispenserBehaviorPotion, ItemStack par2ItemStack)
+	DispenserBehaviorPotionProjectile(DispenserBehaviorPotion p_i1492_1_, ItemStack p_i1492_2_)
 	{
-		dispenserPotionBehavior = par1DispenserBehaviorPotion;
-		potionItemStack = par2ItemStack;
+		dispenserPotionBehavior = p_i1492_1_;
+		potionItemStack = p_i1492_2_;
 	}
 	
 	@Override protected float func_82498_a()
diff --git a/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorTNT.java b/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorTNT.java
index 9b6d9b9..2f5a5fd 100644
--- a/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorTNT.java
+++ b/RMCClient/minecraft/net/minecraft/src/DispenserBehaviorTNT.java
@@ -9,7 +9,7 @@
 		int var5 = par1IBlockSource.getXInt() + var3.getFrontOffsetX();
 		int var6 = par1IBlockSource.getYInt() + var3.getFrontOffsetY();
 		int var7 = par1IBlockSource.getZInt() + var3.getFrontOffsetZ();
-		EntityTNTPrimed var8 = new EntityTNTPrimed(var4, var5 + 0.5F, var6 + 0.5F, var7 + 0.5F, (EntityLiving) null);
+		EntityTNTPrimed var8 = new EntityTNTPrimed(var4, var5 + 0.5F, var6 + 0.5F, var7 + 0.5F, (EntityLivingBase) null);
 		var4.spawnEntityInWorld(var8);
 		--par2ItemStack.stackSize;
 		return par2ItemStack;
diff --git a/RMCClient/minecraft/net/minecraft/src/DynamicTexture.java b/RMCClient/minecraft/net/minecraft/src/DynamicTexture.java
new file mode 100644
index 0000000..079cc06
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/DynamicTexture.java
@@ -0,0 +1,40 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.IOException;
+
+public class DynamicTexture extends AbstractTexture
+{
+	private final int[] field_110566_b;
+	private final int width;
+	private final int height;
+	
+	public DynamicTexture(BufferedImage p_i1270_1_)
+	{
+		this(p_i1270_1_.getWidth(), p_i1270_1_.getHeight());
+		p_i1270_1_.getRGB(0, 0, p_i1270_1_.getWidth(), p_i1270_1_.getHeight(), field_110566_b, 0, p_i1270_1_.getWidth());
+		func_110564_a();
+	}
+	
+	public DynamicTexture(int p_i1271_1_, int p_i1271_2_)
+	{
+		width = p_i1271_1_;
+		height = p_i1271_2_;
+		field_110566_b = new int[p_i1271_1_ * p_i1271_2_];
+		TextureUtil.func_110991_a(func_110552_b(), p_i1271_1_, p_i1271_2_);
+	}
+	
+	@Override public void func_110551_a(ResourceManager p_110551_1_) throws IOException
+	{
+	}
+	
+	public void func_110564_a()
+	{
+		TextureUtil.func_110988_a(func_110552_b(), field_110566_b, width, height);
+	}
+	
+	public int[] func_110565_c()
+	{
+		return field_110566_b;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EffectRenderer.java b/RMCClient/minecraft/net/minecraft/src/EffectRenderer.java
index 42ae50b..b4d5090 100644
--- a/RMCClient/minecraft/net/minecraft/src/EffectRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/EffectRenderer.java
@@ -8,18 +8,19 @@
 
 public class EffectRenderer
 {
+	private static final ResourceLocation field_110737_b = new ResourceLocation("textures/particle/particles.png");
 	protected World worldObj;
 	private List[] fxLayers = new List[4];
-	private RenderEngine renderer;
+	private TextureManager renderer;
 	private Random rand = new Random();
 	
-	public EffectRenderer(World par1World, RenderEngine par2RenderEngine)
+	public EffectRenderer(World p_i1220_1_, TextureManager p_i1220_2_)
 	{
-		if(par1World != null)
+		if(p_i1220_1_ != null)
 		{
-			worldObj = par1World;
+			worldObj = p_i1220_1_;
 		}
-		renderer = par2RenderEngine;
+		renderer = p_i1220_2_;
 		for(int var3 = 0; var3 < 4; ++var3)
 		{
 			fxLayers[var3] = new ArrayList();
@@ -41,8 +42,7 @@
 						double var11 = par1 + (var8 + 0.5D) / var7;
 						double var13 = par2 + (var9 + 0.5D) / var7;
 						double var15 = par3 + (var10 + 0.5D) / var7;
-						int var17 = rand.nextInt(6);
-						addEffect(new EntityDiggingFX(worldObj, var11, var13, var15, var11 - par1 - 0.5D, var13 - par2 - 0.5D, var15 - par3 - 0.5D, var6, var17, par5, renderer).func_70596_a(par1, par2, par3));
+						addEffect(new EntityDiggingFX(worldObj, var11, var13, var15, var11 - par1 - 0.5D, var13 - par2 - 0.5D, var15 - par3 - 0.5D, var6, par5).func_70596_a(par1, par2, par3));
 					}
 				}
 			}
@@ -83,7 +83,7 @@
 			{
 				var8 = par1 + var6.getBlockBoundsMaxX() + var7;
 			}
-			addEffect(new EntityDiggingFX(worldObj, var8, var10, var12, 0.0D, 0.0D, 0.0D, var6, par4, worldObj.getBlockMetadata(par1, par2, par3), renderer).func_70596_a(par1, par2, par3).multiplyVelocity(0.2F).multipleParticleScaleBy(0.6F));
+			addEffect(new EntityDiggingFX(worldObj, var8, var10, var12, 0.0D, 0.0D, 0.0D, var6, worldObj.getBlockMetadata(par1, par2, par3)).func_70596_a(par1, par2, par3).multiplyVelocity(0.2F).multipleParticleScaleBy(0.6F));
 		}
 	}
 	
@@ -113,20 +113,22 @@
 	
 	public void renderLitParticles(Entity par1Entity, float par2)
 	{
+		float var3 = 0.017453292F;
 		float var4 = MathHelper.cos(par1Entity.rotationYaw * 0.017453292F);
 		float var5 = MathHelper.sin(par1Entity.rotationYaw * 0.017453292F);
 		float var6 = -var5 * MathHelper.sin(par1Entity.rotationPitch * 0.017453292F);
 		float var7 = var4 * MathHelper.sin(par1Entity.rotationPitch * 0.017453292F);
 		float var8 = MathHelper.cos(par1Entity.rotationPitch * 0.017453292F);
 		byte var9 = 3;
-		if(!fxLayers[var9].isEmpty())
+		List var10 = fxLayers[var9];
+		if(!var10.isEmpty())
 		{
-			Tessellator var10 = Tessellator.instance;
-			for(int var11 = 0; var11 < fxLayers[var9].size(); ++var11)
+			Tessellator var11 = Tessellator.instance;
+			for(int var12 = 0; var12 < var10.size(); ++var12)
 			{
-				EntityFX var12 = (EntityFX) fxLayers[var9].get(var11);
-				var10.setBrightness(var12.getBrightnessForRender(par2));
-				var12.renderParticle(var10, par2, var4, var8, var5, var6, var7);
+				EntityFX var13 = (EntityFX) var10.get(var12);
+				var11.setBrightness(var13.getBrightnessForRender(par2));
+				var13.renderParticle(var11, par2, var4, var8, var5, var6, var7);
 			}
 		}
 	}
@@ -149,20 +151,20 @@
 				{
 					case 0:
 					default:
-						renderer.bindTexture("/particles.png");
+						renderer.func_110577_a(field_110737_b);
 						break;
 					case 1:
-						renderer.bindTexture("/terrain.png");
+						renderer.func_110577_a(TextureMap.field_110575_b);
 						break;
 					case 2:
-						renderer.bindTexture("/gui/items.png");
+						renderer.func_110577_a(TextureMap.field_110576_c);
 				}
-				Tessellator var9 = Tessellator.instance;
 				GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 				GL11.glDepthMask(false);
 				GL11.glEnable(GL11.GL_BLEND);
 				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 				GL11.glAlphaFunc(GL11.GL_GREATER, 0.003921569F);
+				Tessellator var9 = Tessellator.instance;
 				var9.startDrawingQuads();
 				for(int var10 = 0; var10 < fxLayers[var8].size(); ++var10)
 				{
diff --git a/RMCClient/minecraft/net/minecraft/src/EmptyChunk.java b/RMCClient/minecraft/net/minecraft/src/EmptyChunk.java
index 47a6884..d470d3b 100644
--- a/RMCClient/minecraft/net/minecraft/src/EmptyChunk.java
+++ b/RMCClient/minecraft/net/minecraft/src/EmptyChunk.java
@@ -5,9 +5,9 @@
 
 public class EmptyChunk extends Chunk
 {
-	public EmptyChunk(World par1World, int par2, int par3)
+	public EmptyChunk(World p_i1994_1_, int p_i1994_2_, int p_i1994_3_)
 	{
-		super(par1World, par2, par3);
+		super(p_i1994_1_, p_i1994_2_, p_i1994_3_);
 	}
 	
 	@Override public void addEntity(Entity par1Entity)
diff --git a/RMCClient/minecraft/net/minecraft/src/Enchantment.java b/RMCClient/minecraft/net/minecraft/src/Enchantment.java
index 2807b50..498c084 100644
--- a/RMCClient/minecraft/net/minecraft/src/Enchantment.java
+++ b/RMCClient/minecraft/net/minecraft/src/Enchantment.java
@@ -33,15 +33,15 @@
 	public EnumEnchantmentType type;
 	protected String name;
 	
-	protected Enchantment(int par1, int par2, EnumEnchantmentType par3EnumEnchantmentType)
+	protected Enchantment(int p_i1926_1_, int p_i1926_2_, EnumEnchantmentType p_i1926_3_)
 	{
-		effectId = par1;
-		weight = par2;
-		type = par3EnumEnchantmentType;
-		if(enchantmentsList[par1] != null) throw new IllegalArgumentException("Duplicate enchantment id!");
+		effectId = p_i1926_1_;
+		weight = p_i1926_2_;
+		type = p_i1926_3_;
+		if(enchantmentsList[p_i1926_1_] != null) throw new IllegalArgumentException("Duplicate enchantment id!");
 		else
 		{
-			enchantmentsList[par1] = this;
+			enchantmentsList[p_i1926_1_] = this;
 		}
 	}
 	
@@ -50,9 +50,9 @@
 		return 0;
 	}
 	
-	public int calcModifierLiving(int par1, EntityLiving par2EntityLiving)
+	public float calcModifierLiving(int par1, EntityLivingBase par2EntityLiving)
 	{
-		return 0;
+		return 0.0F;
 	}
 	
 	public boolean canApply(ItemStack par1ItemStack)
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowDamage.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowDamage.java
index 6bcd79e..0cb1abe 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowDamage.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowDamage.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentArrowDamage extends Enchantment
 {
-	public EnchantmentArrowDamage(int par1, int par2)
+	public EnchantmentArrowDamage(int p_i1919_1_, int p_i1919_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.bow);
+		super(p_i1919_1_, p_i1919_2_, EnumEnchantmentType.bow);
 		setName("arrowDamage");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowFire.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowFire.java
index be1c838..bbcb99b 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowFire.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowFire.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentArrowFire extends Enchantment
 {
-	public EnchantmentArrowFire(int par1, int par2)
+	public EnchantmentArrowFire(int p_i1920_1_, int p_i1920_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.bow);
+		super(p_i1920_1_, p_i1920_2_, EnumEnchantmentType.bow);
 		setName("arrowFire");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowInfinite.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowInfinite.java
index 069263b..7e30d6e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowInfinite.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowInfinite.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentArrowInfinite extends Enchantment
 {
-	public EnchantmentArrowInfinite(int par1, int par2)
+	public EnchantmentArrowInfinite(int p_i1921_1_, int p_i1921_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.bow);
+		super(p_i1921_1_, p_i1921_2_, EnumEnchantmentType.bow);
 		setName("arrowInfinite");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowKnockback.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowKnockback.java
index 603a420..9a6ece4 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowKnockback.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentArrowKnockback.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentArrowKnockback extends Enchantment
 {
-	public EnchantmentArrowKnockback(int par1, int par2)
+	public EnchantmentArrowKnockback(int p_i1922_1_, int p_i1922_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.bow);
+		super(p_i1922_1_, p_i1922_2_, EnumEnchantmentType.bow);
 		setName("arrowKnockback");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentDamage.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentDamage.java
index 762b691..44882cd 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentDamage.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentDamage.java
@@ -8,15 +8,15 @@
 	private static final int[] thresholdEnchantability = new int[] { 20, 20, 20 };
 	public final int damageType;
 	
-	public EnchantmentDamage(int par1, int par2, int par3)
+	public EnchantmentDamage(int p_i1923_1_, int p_i1923_2_, int p_i1923_3_)
 	{
-		super(par1, par2, EnumEnchantmentType.weapon);
-		damageType = par3;
+		super(p_i1923_1_, p_i1923_2_, EnumEnchantmentType.weapon);
+		damageType = p_i1923_3_;
 	}
 	
-	@Override public int calcModifierLiving(int par1, EntityLiving par2EntityLiving)
+	@Override public float calcModifierLiving(int par1, EntityLivingBase par2EntityLiving)
 	{
-		return damageType == 0 ? MathHelper.floor_float(par1 * 2.75F) : damageType == 1 && par2EntityLiving.getCreatureAttribute() == EnumCreatureAttribute.UNDEAD ? MathHelper.floor_float(par1 * 4.5F) : damageType == 2 && par2EntityLiving.getCreatureAttribute() == EnumCreatureAttribute.ARTHROPOD ? MathHelper.floor_float(par1 * 4.5F) : 0;
+		return damageType == 0 ? par1 * 1.25F : damageType == 1 && par2EntityLiving.getCreatureAttribute() == EnumCreatureAttribute.UNDEAD ? par1 * 2.5F : damageType == 2 && par2EntityLiving.getCreatureAttribute() == EnumCreatureAttribute.ARTHROPOD ? par1 * 2.5F : 0.0F;
 	}
 	
 	@Override public boolean canApply(ItemStack par1ItemStack)
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentData.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentData.java
index 944938c..89e7440 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentData.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentData.java
@@ -5,15 +5,15 @@
 	public final Enchantment enchantmentobj;
 	public final int enchantmentLevel;
 	
-	public EnchantmentData(Enchantment par1Enchantment, int par2)
+	public EnchantmentData(Enchantment p_i1930_1_, int p_i1930_2_)
 	{
-		super(par1Enchantment.getWeight());
-		enchantmentobj = par1Enchantment;
-		enchantmentLevel = par2;
+		super(p_i1930_1_.getWeight());
+		enchantmentobj = p_i1930_1_;
+		enchantmentLevel = p_i1930_2_;
 	}
 	
-	public EnchantmentData(int par1, int par2)
+	public EnchantmentData(int p_i1931_1_, int p_i1931_2_)
 	{
-		this(Enchantment.enchantmentsList[par1], par2);
+		this(Enchantment.enchantmentsList[p_i1931_1_], p_i1931_2_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentDigging.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentDigging.java
index 1856efc..08af0d3 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentDigging.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentDigging.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentDigging extends Enchantment
 {
-	protected EnchantmentDigging(int par1, int par2)
+	protected EnchantmentDigging(int p_i1925_1_, int p_i1925_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.digger);
+		super(p_i1925_1_, p_i1925_2_, EnumEnchantmentType.digger);
 		setName("digging");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentDurability.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentDurability.java
index 745e8b1..809e087 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentDurability.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentDurability.java
@@ -4,9 +4,9 @@
 
 public class EnchantmentDurability extends Enchantment
 {
-	protected EnchantmentDurability(int par1, int par2)
+	protected EnchantmentDurability(int p_i1924_1_, int p_i1924_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.digger);
+		super(p_i1924_1_, p_i1924_2_, EnumEnchantmentType.digger);
 		setName("durability");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentFireAspect.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentFireAspect.java
index 8c19778..9352ff9 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentFireAspect.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentFireAspect.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentFireAspect extends Enchantment
 {
-	protected EnchantmentFireAspect(int par1, int par2)
+	protected EnchantmentFireAspect(int p_i1932_1_, int p_i1932_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.weapon);
+		super(p_i1932_1_, p_i1932_2_, EnumEnchantmentType.weapon);
 		setName("fire");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentHelper.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentHelper.java
index 9d62930..038b62f 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentHelper.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentHelper.java
@@ -150,12 +150,12 @@
 		}
 	}
 	
-	public static int func_92098_i(EntityLiving par0EntityLiving)
+	public static int func_92098_i(EntityLivingBase par0EntityLiving)
 	{
 		return getMaxEnchantmentLevel(Enchantment.thorns.effectId, par0EntityLiving.getLastActiveItems());
 	}
 	
-	public static ItemStack func_92099_a(Enchantment par0Enchantment, EntityLiving par1EntityLiving)
+	public static ItemStack func_92099_a(Enchantment par0Enchantment, EntityLivingBase par1EntityLiving)
 	{
 		ItemStack[] var2 = par1EntityLiving.getLastActiveItems();
 		int var3 = var2.length;
@@ -167,12 +167,12 @@
 		return null;
 	}
 	
-	public static boolean getAquaAffinityModifier(EntityLiving par0EntityLiving)
+	public static boolean getAquaAffinityModifier(EntityLivingBase par0EntityLiving)
 	{
 		return getMaxEnchantmentLevel(Enchantment.aquaAffinity.effectId, par0EntityLiving.getLastActiveItems()) > 0;
 	}
 	
-	public static int getEfficiencyModifier(EntityLiving par0EntityLiving)
+	public static int getEfficiencyModifier(EntityLivingBase par0EntityLiving)
 	{
 		return getEnchantmentLevel(Enchantment.efficiency.effectId, par0EntityLiving.getHeldItem());
 	}
@@ -209,12 +209,12 @@
 		return (enchantmentModifierDamage.damageModifier + 1 >> 1) + enchantmentRand.nextInt((enchantmentModifierDamage.damageModifier >> 1) + 1);
 	}
 	
-	public static int getEnchantmentModifierLiving(EntityLiving par0EntityLiving, EntityLiving par1EntityLiving)
+	public static float getEnchantmentModifierLiving(EntityLivingBase par0EntityLiving, EntityLivingBase par1EntityLiving)
 	{
-		enchantmentModifierLiving.livingModifier = 0;
+		enchantmentModifierLiving.livingModifier = 0.0F;
 		enchantmentModifierLiving.entityLiving = par1EntityLiving;
 		applyEnchantmentModifier(enchantmentModifierLiving, par0EntityLiving.getHeldItem());
-		return enchantmentModifierLiving.livingModifier > 0 ? 1 + enchantmentRand.nextInt(enchantmentModifierLiving.livingModifier) : 0;
+		return enchantmentModifierLiving.livingModifier;
 	}
 	
 	public static Map getEnchantments(ItemStack par0ItemStack)
@@ -233,22 +233,22 @@
 		return var1;
 	}
 	
-	public static int getFireAspectModifier(EntityLiving par0EntityLiving)
+	public static int getFireAspectModifier(EntityLivingBase par0EntityLiving)
 	{
 		return getEnchantmentLevel(Enchantment.fireAspect.effectId, par0EntityLiving.getHeldItem());
 	}
 	
-	public static int getFortuneModifier(EntityLiving par0EntityLiving)
+	public static int getFortuneModifier(EntityLivingBase par0EntityLiving)
 	{
 		return getEnchantmentLevel(Enchantment.fortune.effectId, par0EntityLiving.getHeldItem());
 	}
 	
-	public static int getKnockbackModifier(EntityLiving par0EntityLiving, EntityLiving par1EntityLiving)
+	public static int getKnockbackModifier(EntityLivingBase par0EntityLiving, EntityLivingBase par1EntityLiving)
 	{
 		return getEnchantmentLevel(Enchantment.knockback.effectId, par0EntityLiving.getHeldItem());
 	}
 	
-	public static int getLootingModifier(EntityLiving par0EntityLiving)
+	public static int getLootingModifier(EntityLivingBase par0EntityLiving)
 	{
 		return getEnchantmentLevel(Enchantment.looting.effectId, par0EntityLiving.getHeldItem());
 	}
@@ -274,12 +274,12 @@
 		}
 	}
 	
-	public static int getRespiration(EntityLiving par0EntityLiving)
+	public static int getRespiration(EntityLivingBase par0EntityLiving)
 	{
 		return getMaxEnchantmentLevel(Enchantment.respiration.effectId, par0EntityLiving.getLastActiveItems());
 	}
 	
-	public static boolean getSilkTouchModifier(EntityLiving par0EntityLiving)
+	public static boolean getSilkTouchModifier(EntityLivingBase par0EntityLiving)
 	{
 		return getEnchantmentLevel(Enchantment.silkTouch.effectId, par0EntityLiving.getHeldItem()) > 0;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentKnockback.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentKnockback.java
index 698185c..5596a2a 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentKnockback.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentKnockback.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentKnockback extends Enchantment
 {
-	protected EnchantmentKnockback(int par1, int par2)
+	protected EnchantmentKnockback(int p_i1933_1_, int p_i1933_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.weapon);
+		super(p_i1933_1_, p_i1933_2_, EnumEnchantmentType.weapon);
 		setName("knockback");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentLootBonus.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentLootBonus.java
index b824a71..24b3f67 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentLootBonus.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentLootBonus.java
@@ -2,11 +2,11 @@
 
 public class EnchantmentLootBonus extends Enchantment
 {
-	protected EnchantmentLootBonus(int par1, int par2, EnumEnchantmentType par3EnumEnchantmentType)
+	protected EnchantmentLootBonus(int p_i1934_1_, int p_i1934_2_, EnumEnchantmentType p_i1934_3_)
 	{
-		super(par1, par2, par3EnumEnchantmentType);
+		super(p_i1934_1_, p_i1934_2_, p_i1934_3_);
 		setName("lootBonus");
-		if(par3EnumEnchantmentType == EnumEnchantmentType.digger)
+		if(p_i1934_3_ == EnumEnchantmentType.digger)
 		{
 			setName("lootBonusDigger");
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentModifierDamage.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentModifierDamage.java
index a8ce716..733cc7d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentModifierDamage.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentModifierDamage.java
@@ -9,7 +9,7 @@
 	{
 	}
 	
-	EnchantmentModifierDamage(Empty3 par1Empty3)
+	EnchantmentModifierDamage(Empty3 p_i1929_1_)
 	{
 		this();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentModifierLiving.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentModifierLiving.java
index 2fae5e9..d5ec70c 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentModifierLiving.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentModifierLiving.java
@@ -2,14 +2,14 @@
 
 final class EnchantmentModifierLiving implements IEnchantmentModifier
 {
-	public int livingModifier;
-	public EntityLiving entityLiving;
+	public float livingModifier;
+	public EntityLivingBase entityLiving;
 	
 	private EnchantmentModifierLiving()
 	{
 	}
 	
-	EnchantmentModifierLiving(Empty3 par1Empty3)
+	EnchantmentModifierLiving(Empty3 p_i1928_1_)
 	{
 		this();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentOxygen.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentOxygen.java
index 28c9480..c63dbb5 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentOxygen.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentOxygen.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentOxygen extends Enchantment
 {
-	public EnchantmentOxygen(int par1, int par2)
+	public EnchantmentOxygen(int p_i1935_1_, int p_i1935_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.armor_head);
+		super(p_i1935_1_, p_i1935_2_, EnumEnchantmentType.armor_head);
 		setName("oxygen");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentProtection.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentProtection.java
index 59d43cb..fbeee1c 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentProtection.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentProtection.java
@@ -8,11 +8,11 @@
 	private static final int[] thresholdEnchantability = new int[] { 20, 12, 10, 12, 15 };
 	public final int protectionType;
 	
-	public EnchantmentProtection(int par1, int par2, int par3)
+	public EnchantmentProtection(int p_i1936_1_, int p_i1936_2_, int p_i1936_3_)
 	{
-		super(par1, par2, EnumEnchantmentType.armor);
-		protectionType = par3;
-		if(par3 == 2)
+		super(p_i1936_1_, p_i1936_2_, EnumEnchantmentType.armor);
+		protectionType = p_i1936_3_;
+		if(p_i1936_3_ == 2)
 		{
 			type = EnumEnchantmentType.armor_feet;
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentThorns.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentThorns.java
index cfdfe1b..6afb425 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentThorns.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentThorns.java
@@ -4,9 +4,9 @@
 
 public class EnchantmentThorns extends Enchantment
 {
-	public EnchantmentThorns(int par1, int par2)
+	public EnchantmentThorns(int p_i1937_1_, int p_i1937_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.armor_torso);
+		super(p_i1937_1_, p_i1937_2_, EnumEnchantmentType.armor_torso);
 		setName("thorns");
 	}
 	
@@ -40,7 +40,7 @@
 		return par0 > 10 ? par0 - 10 : 1 + par1Random.nextInt(4);
 	}
 	
-	public static void func_92096_a(Entity par0Entity, EntityLiving par1EntityLiving, Random par2Random)
+	public static void func_92096_a(Entity par0Entity, EntityLivingBase par1EntityLiving, Random par2Random)
 	{
 		int var3 = EnchantmentHelper.func_92098_i(par1EntityLiving);
 		ItemStack var4 = EnchantmentHelper.func_92099_a(Enchantment.thorns, par1EntityLiving);
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentUntouching.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentUntouching.java
index 2cf5b5a..14b07d8 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentUntouching.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentUntouching.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentUntouching extends Enchantment
 {
-	protected EnchantmentUntouching(int par1, int par2)
+	protected EnchantmentUntouching(int p_i1938_1_, int p_i1938_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.digger);
+		super(p_i1938_1_, p_i1938_2_, EnumEnchantmentType.digger);
 		setName("untouching");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EnchantmentWaterWorker.java b/RMCClient/minecraft/net/minecraft/src/EnchantmentWaterWorker.java
index c1b585f..b52e45f 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnchantmentWaterWorker.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnchantmentWaterWorker.java
@@ -2,9 +2,9 @@
 
 public class EnchantmentWaterWorker extends Enchantment
 {
-	public EnchantmentWaterWorker(int par1, int par2)
+	public EnchantmentWaterWorker(int p_i1939_1_, int p_i1939_2_)
 	{
-		super(par1, par2, EnumEnchantmentType.armor_head);
+		super(p_i1939_1_, p_i1939_2_, EnumEnchantmentType.armor_head);
 		setName("waterWorker");
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/Entity.java b/RMCClient/minecraft/net/minecraft/src/Entity.java
index ce9d137..c5267e2 100644
--- a/RMCClient/minecraft/net/minecraft/src/Entity.java
+++ b/RMCClient/minecraft/net/minecraft/src/Entity.java
@@ -8,7 +8,7 @@
 
 public abstract class Entity
 {
-	private static int nextEntityID = 0;
+	private static int nextEntityID;
 	public int entityId;
 	public double renderDistanceWeight;
 	public boolean preventEntitySpawning;
@@ -60,8 +60,6 @@
 	protected boolean inWater;
 	public int hurtResistantTime;
 	private boolean firstUpdate;
-	public String skinUrl;
-	public String cloakUrl;
 	protected boolean isImmuneToFire;
 	protected DataWatcher dataWatcher;
 	private double entityRiderPitchDelta;
@@ -84,48 +82,26 @@
 	private UUID entityUniqueID;
 	public EnumEntitySize myEntitySize;
 	
-	public Entity(World par1World)
+	public Entity(World p_i1582_1_)
 	{
 		entityId = nextEntityID++;
 		renderDistanceWeight = 1.0D;
-		preventEntitySpawning = false;
 		boundingBox = AxisAlignedBB.getBoundingBox(0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D);
-		onGround = false;
-		isCollided = false;
-		velocityChanged = false;
 		field_70135_K = true;
-		isDead = false;
-		yOffset = 0.0F;
 		width = 0.6F;
 		height = 1.8F;
-		prevDistanceWalkedModified = 0.0F;
-		distanceWalkedModified = 0.0F;
-		distanceWalkedOnStepModified = 0.0F;
-		fallDistance = 0.0F;
 		nextStepDistance = 1;
-		ySize = 0.0F;
-		stepHeight = 0.0F;
-		noClip = false;
-		entityCollisionReduction = 0.0F;
 		rand = new Random();
-		ticksExisted = 0;
 		fireResistance = 1;
-		fire = 0;
-		inWater = false;
-		hurtResistantTime = 0;
 		firstUpdate = true;
-		isImmuneToFire = false;
 		dataWatcher = new DataWatcher();
-		addedToChunk = false;
-		teleportDirection = 0;
-		invulnerable = false;
 		entityUniqueID = UUID.randomUUID();
 		myEntitySize = EnumEntitySize.SIZE_2;
-		worldObj = par1World;
+		worldObj = p_i1582_1_;
 		setPosition(0.0D, 0.0D, 0.0D);
-		if(par1World != null)
+		if(p_i1582_1_ != null)
 		{
-			dimension = par1World.provider.dimensionId;
+			dimension = p_i1582_1_.provider.dimensionId;
 		}
 		dataWatcher.addObject(0, Byte.valueOf((byte) 0));
 		dataWatcher.addObject(1, Short.valueOf((short) 300));
@@ -195,7 +171,7 @@
 		}
 	}
 	
-	public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -266,7 +242,16 @@
 						int var10 = worldObj.getBlockId(var7, var8, var9);
 						if(var10 > 0)
 						{
-							Block.blocksList[var10].onEntityCollidedWithBlock(worldObj, var7, var8, var9, this);
+							try
+							{
+								Block.blocksList[var10].onEntityCollidedWithBlock(worldObj, var7, var8, var9, this);
+							} catch(Throwable var14)
+							{
+								CrashReport var12 = CrashReport.makeCrashReport(var14, "Colliding entity with tile");
+								CrashReportCategory var13 = var12.makeCategory("Tile being collided with");
+								CrashReportCategory.func_85068_a(var13, var7, var8, var9, var10, worldObj.getBlockMetadata(var7, var8, var9));
+								throw new ReportedException(var12);
+							}
 						}
 					}
 				}
@@ -291,10 +276,14 @@
 	
 	public EntityItem entityDropItem(ItemStack par1ItemStack, float par2)
 	{
-		EntityItem var3 = new EntityItem(worldObj, posX, posY + par2, posZ, par1ItemStack);
-		var3.delayBeforeCanPickup = 10;
-		worldObj.spawnEntityInWorld(var3);
-		return var3;
+		if(par1ItemStack.stackSize == 0) return null;
+		else
+		{
+			EntityItem var3 = new EntityItem(worldObj, posX, posY + par2, posZ, par1ItemStack);
+			var3.delayBeforeCanPickup = 10;
+			worldObj.spawnEntityInWorld(var3);
+			return var3;
+		}
 	}
 	
 	protected abstract void entityInit();
@@ -315,6 +304,25 @@
 		{
 			riddenByEntity.fall(par1);
 		}
+	}
+	
+	public void func_110123_P()
+	{
+	}
+	
+	public UUID func_110124_au()
+	{
+		return entityUniqueID;
+	}
+	
+	public boolean func_130002_c(EntityPlayer p_130002_1_)
+	{
+		return false;
+	}
+	
+	protected boolean func_142008_O()
+	{
+		return true;
 	}
 	
 	public int func_82143_as()
@@ -513,11 +521,6 @@
 		return teleportDirection;
 	}
 	
-	public String getTexture()
-	{
-		return null;
-	}
-	
 	public String getTranslatedEntityName()
 	{
 		return getEntityName();
@@ -581,14 +584,9 @@
 		return entityId;
 	}
 	
-	public boolean interact(EntityPlayer par1EntityPlayer)
-	{
-		return false;
-	}
-	
 	public boolean isBurning()
 	{
-		return fire > 0 || getFlag(0);
+		return !isImmuneToFire && (fire > 0 || getFlag(0));
 	}
 	
 	public boolean isEating()
@@ -681,7 +679,7 @@
 	
 	public boolean isRiding()
 	{
-		return ridingEntity != null || getFlag(2);
+		return ridingEntity != null;
 	}
 	
 	public boolean isSneaking()
@@ -812,10 +810,10 @@
 					var17 = par5;
 				}
 			}
-			List var35 = worldObj.getCollidingBoundingBoxes(this, boundingBox.addCoord(par1, par3, par5));
-			for(int var22 = 0; var22 < var35.size(); ++var22)
+			List var36 = worldObj.getCollidingBoundingBoxes(this, boundingBox.addCoord(par1, par3, par5));
+			for(int var22 = 0; var22 < var36.size(); ++var22)
 			{
-				par3 = ((AxisAlignedBB) var35.get(var22)).calculateYOffset(boundingBox, par3);
+				par3 = ((AxisAlignedBB) var36.get(var22)).calculateYOffset(boundingBox, par3);
 			}
 			boundingBox.offset(0.0D, par3, 0.0D);
 			if(!field_70135_K && var15 != par3)
@@ -824,11 +822,11 @@
 				par3 = 0.0D;
 				par1 = 0.0D;
 			}
-			boolean var34 = onGround || var15 != par3 && var15 < 0.0D;
+			boolean var35 = onGround || var15 != par3 && var15 < 0.0D;
 			int var23;
-			for(var23 = 0; var23 < var35.size(); ++var23)
+			for(var23 = 0; var23 < var36.size(); ++var23)
 			{
-				par1 = ((AxisAlignedBB) var35.get(var23)).calculateXOffset(boundingBox, par1);
+				par1 = ((AxisAlignedBB) var36.get(var23)).calculateXOffset(boundingBox, par1);
 			}
 			boundingBox.offset(par1, 0.0D, 0.0D);
 			if(!field_70135_K && var13 != par1)
@@ -837,9 +835,9 @@
 				par3 = 0.0D;
 				par1 = 0.0D;
 			}
-			for(var23 = 0; var23 < var35.size(); ++var23)
+			for(var23 = 0; var23 < var36.size(); ++var23)
 			{
-				par5 = ((AxisAlignedBB) var35.get(var23)).calculateZOffset(boundingBox, par5);
+				par5 = ((AxisAlignedBB) var36.get(var23)).calculateZOffset(boundingBox, par5);
 			}
 			boundingBox.offset(0.0D, 0.0D, par5);
 			if(!field_70135_K && var17 != par5)
@@ -851,10 +849,10 @@
 			double var25;
 			double var27;
 			int var30;
-			double var36;
-			if(stepHeight > 0.0F && var34 && (var20 || ySize < 0.05F) && (var13 != par1 || var17 != par5))
+			double var37;
+			if(stepHeight > 0.0F && var35 && (var20 || ySize < 0.05F) && (var13 != par1 || var17 != par5))
 			{
-				var36 = par1;
+				var37 = par1;
 				var25 = par3;
 				var27 = par5;
 				par1 = var13;
@@ -862,10 +860,10 @@
 				par5 = var17;
 				AxisAlignedBB var29 = boundingBox.copy();
 				boundingBox.setBB(var19);
-				var35 = worldObj.getCollidingBoundingBoxes(this, boundingBox.addCoord(var13, par3, var17));
-				for(var30 = 0; var30 < var35.size(); ++var30)
+				var36 = worldObj.getCollidingBoundingBoxes(this, boundingBox.addCoord(var13, par3, var17));
+				for(var30 = 0; var30 < var36.size(); ++var30)
 				{
-					par3 = ((AxisAlignedBB) var35.get(var30)).calculateYOffset(boundingBox, par3);
+					par3 = ((AxisAlignedBB) var36.get(var30)).calculateYOffset(boundingBox, par3);
 				}
 				boundingBox.offset(0.0D, par3, 0.0D);
 				if(!field_70135_K && var15 != par3)
@@ -874,9 +872,9 @@
 					par3 = 0.0D;
 					par1 = 0.0D;
 				}
-				for(var30 = 0; var30 < var35.size(); ++var30)
+				for(var30 = 0; var30 < var36.size(); ++var30)
 				{
-					par1 = ((AxisAlignedBB) var35.get(var30)).calculateXOffset(boundingBox, par1);
+					par1 = ((AxisAlignedBB) var36.get(var30)).calculateXOffset(boundingBox, par1);
 				}
 				boundingBox.offset(par1, 0.0D, 0.0D);
 				if(!field_70135_K && var13 != par1)
@@ -885,9 +883,9 @@
 					par3 = 0.0D;
 					par1 = 0.0D;
 				}
-				for(var30 = 0; var30 < var35.size(); ++var30)
+				for(var30 = 0; var30 < var36.size(); ++var30)
 				{
-					par5 = ((AxisAlignedBB) var35.get(var30)).calculateZOffset(boundingBox, par5);
+					par5 = ((AxisAlignedBB) var36.get(var30)).calculateZOffset(boundingBox, par5);
 				}
 				boundingBox.offset(0.0D, 0.0D, par5);
 				if(!field_70135_K && var17 != par5)
@@ -904,15 +902,15 @@
 				} else
 				{
 					par3 = -stepHeight;
-					for(var30 = 0; var30 < var35.size(); ++var30)
+					for(var30 = 0; var30 < var36.size(); ++var30)
 					{
-						par3 = ((AxisAlignedBB) var35.get(var30)).calculateYOffset(boundingBox, par3);
+						par3 = ((AxisAlignedBB) var36.get(var30)).calculateYOffset(boundingBox, par3);
 					}
 					boundingBox.offset(0.0D, par3, 0.0D);
 				}
-				if(var36 * var36 + var27 * var27 >= par1 * par1 + par5 * par5)
+				if(var37 * var37 + var27 * var27 >= par1 * par1 + par5 * par5)
 				{
-					par1 = var36;
+					par1 = var37;
 					par3 = var25;
 					par5 = var27;
 					boundingBox.setBB(var29);
@@ -940,51 +938,60 @@
 			{
 				motionZ = 0.0D;
 			}
-			var36 = posX - var7;
+			var37 = posX - var7;
 			var25 = posY - var9;
 			var27 = posZ - var11;
 			if(canTriggerWalking() && !var20 && ridingEntity == null)
 			{
-				int var37 = MathHelper.floor_double(posX);
+				int var39 = MathHelper.floor_double(posX);
 				var30 = MathHelper.floor_double(posY - 0.20000000298023224D - yOffset);
 				int var31 = MathHelper.floor_double(posZ);
-				int var32 = worldObj.getBlockId(var37, var30, var31);
+				int var32 = worldObj.getBlockId(var39, var30, var31);
 				if(var32 == 0)
 				{
-					int var33 = worldObj.blockGetRenderType(var37, var30 - 1, var31);
+					int var33 = worldObj.blockGetRenderType(var39, var30 - 1, var31);
 					if(var33 == 11 || var33 == 32 || var33 == 21)
 					{
-						var32 = worldObj.getBlockId(var37, var30 - 1, var31);
+						var32 = worldObj.getBlockId(var39, var30 - 1, var31);
 					}
 				}
 				if(var32 != Block.ladder.blockID)
 				{
 					var25 = 0.0D;
 				}
-				distanceWalkedModified = (float) (distanceWalkedModified + MathHelper.sqrt_double(var36 * var36 + var27 * var27) * 0.6D);
-				distanceWalkedOnStepModified = (float) (distanceWalkedOnStepModified + MathHelper.sqrt_double(var36 * var36 + var25 * var25 + var27 * var27) * 0.6D);
+				distanceWalkedModified = (float) (distanceWalkedModified + MathHelper.sqrt_double(var37 * var37 + var27 * var27) * 0.6D);
+				distanceWalkedOnStepModified = (float) (distanceWalkedOnStepModified + MathHelper.sqrt_double(var37 * var37 + var25 * var25 + var27 * var27) * 0.6D);
 				if(distanceWalkedOnStepModified > nextStepDistance && var32 > 0)
 				{
 					nextStepDistance = (int) distanceWalkedOnStepModified + 1;
 					if(isInWater())
 					{
-						float var39 = MathHelper.sqrt_double(motionX * motionX * 0.20000000298023224D + motionY * motionY + motionZ * motionZ * 0.20000000298023224D) * 0.35F;
-						if(var39 > 1.0F)
+						float var42 = MathHelper.sqrt_double(motionX * motionX * 0.20000000298023224D + motionY * motionY + motionZ * motionZ * 0.20000000298023224D) * 0.35F;
+						if(var42 > 1.0F)
 						{
-							var39 = 1.0F;
+							var42 = 1.0F;
 						}
-						playSound("liquid.swim", var39, 1.0F + (rand.nextFloat() - rand.nextFloat()) * 0.4F);
+						playSound("liquid.swim", var42, 1.0F + (rand.nextFloat() - rand.nextFloat()) * 0.4F);
 					}
-					playStepSound(var37, var30, var31, var32);
-					Block.blocksList[var32].onEntityWalking(worldObj, var37, var30, var31, this);
+					playStepSound(var39, var30, var31, var32);
+					Block.blocksList[var32].onEntityWalking(worldObj, var39, var30, var31, this);
 				}
 			}
-			doBlockCollisions();
-			boolean var38 = isWet();
+			try
+			{
+				doBlockCollisions();
+			} catch(Throwable var34)
+			{
+				CrashReport var41 = CrashReport.makeCrashReport(var34, "Checking entity tile collision");
+				CrashReportCategory var38 = var41.makeCategory("Entity being checked for collision");
+				func_85029_a(var38);
+				throw new ReportedException(var41);
+			}
+			boolean var40 = isWet();
 			if(worldObj.isBoundingBoxBurning(boundingBox.contract(0.001D, 0.001D, 0.001D)))
 			{
 				dealFireDamage(1);
-				if(!var38)
+				if(!var40)
 				{
 					++fire;
 					if(fire == 0)
@@ -996,7 +1003,7 @@
 			{
 				fire = -fireResistance;
 			}
-			if(var38 && fire > 0)
+			if(var40 && fire > 0)
 			{
 				playSound("random.fizz", 0.7F, 1.6F + (rand.nextFloat() - rand.nextFloat()) * 0.4F);
 				fire = -fireResistance;
@@ -1139,7 +1146,7 @@
 			{
 				if(fire % 20 == 0)
 				{
-					attackEntityFrom(DamageSource.onFire, 1);
+					attackEntityFrom(DamageSource.onFire, 1.0F);
 				}
 				--fire;
 			}
@@ -1156,13 +1163,12 @@
 		if(!worldObj.isRemote)
 		{
 			setFlag(0, fire > 0);
-			setFlag(2, ridingEntity != null);
 		}
 		firstUpdate = false;
 		worldObj.theProfiler.endSection();
 	}
 	
-	public void onKillEntity(EntityLiving par1EntityLiving)
+	public void onKillEntity(EntityLivingBase par1EntityLiving)
 	{
 	}
 	
@@ -1338,6 +1344,10 @@
 			setPosition(posX, posY, posZ);
 			setRotation(rotationYaw, rotationPitch);
 			readEntityFromNBT(par1NBTTagCompound);
+			if(func_142008_O())
+			{
+				setPosition(posX, posY, posZ);
+			}
 		} catch(Throwable var5)
 		{
 			CrashReport var3 = CrashReport.makeCrashReport(var5, "Loading entity NBT");
@@ -1453,7 +1463,7 @@
 	{
 		if(!isImmuneToFire)
 		{
-			attackEntityFrom(DamageSource.lava, 4);
+			attackEntityFrom(DamageSource.lava, 4.0F);
 			setFire(15);
 		}
 	}
@@ -1522,15 +1532,21 @@
 	
 	protected void setSize(float par1, float par2)
 	{
+		float var3;
 		if(par1 != width || par2 != height)
 		{
+			var3 = width;
 			width = par1;
 			height = par2;
 			boundingBox.maxX = boundingBox.minX + width;
 			boundingBox.maxZ = boundingBox.minZ + width;
 			boundingBox.maxY = boundingBox.minY + height;
+			if(width > var3 && !firstUpdate && !worldObj.isRemote)
+			{
+				moveEntity(var3 - width, 0.0D, var3 - width);
+			}
 		}
-		float var3 = par1 % 2.0F;
+		var3 = par1 % 2.0F;
 		if(var3 < 0.375D)
 		{
 			myEntitySize = EnumEntitySize.SIZE_1;
@@ -1589,6 +1605,11 @@
 			WorldServer var4 = var2.worldServerForDimension(var3);
 			WorldServer var5 = var2.worldServerForDimension(par1);
 			dimension = par1;
+			if(var3 == 1 && par1 == 1)
+			{
+				var5 = var2.worldServerForDimension(0);
+				dimension = 0;
+			}
 			worldObj.removeEntity(this);
 			isDead = false;
 			worldObj.theProfiler.startSection("reposition");
@@ -1598,6 +1619,12 @@
 			if(var6 != null)
 			{
 				var6.copyDataFrom(this, true);
+				if(var3 == 1 && par1 == 1)
+				{
+					ChunkCoordinates var7 = var5.getSpawnPoint();
+					var7.posY = worldObj.getTopSolidOrLiquidBlock(var7.posX, var7.posZ);
+					var6.setLocationAndAngles(var7.posX, var7.posY, var7.posZ, var6.rotationYaw, var6.rotationPitch);
+				}
 				var5.spawnEntityInWorld(var6);
 			}
 			isDead = true;
@@ -1606,50 +1633,6 @@
 			var5.resetUpdateEntityTick();
 			worldObj.theProfiler.endSection();
 		}
-	}
-	
-	public void unmountEntity(Entity par1Entity)
-	{
-		double var3 = posX;
-		double var5 = posY;
-		double var7 = posZ;
-		if(par1Entity != null)
-		{
-			var3 = par1Entity.posX;
-			var5 = par1Entity.boundingBox.minY + par1Entity.height;
-			var7 = par1Entity.posZ;
-		}
-		for(double var9 = -1.5D; var9 < 2.0D; ++var9)
-		{
-			for(double var11 = -1.5D; var11 < 2.0D; ++var11)
-			{
-				if(var9 != 0.0D || var11 != 0.0D)
-				{
-					int var13 = (int) (posX + var9);
-					int var14 = (int) (posZ + var11);
-					AxisAlignedBB var2 = boundingBox.getOffsetBoundingBox(var9, 1.0D, var11);
-					if(worldObj.getCollidingBlockBounds(var2).isEmpty())
-					{
-						if(worldObj.doesBlockHaveSolidTopSurface(var13, (int) posY, var14))
-						{
-							setLocationAndAngles(posX + var9, posY + 1.0D, posZ + var11, rotationYaw, rotationPitch);
-							return;
-						}
-						if(worldObj.doesBlockHaveSolidTopSurface(var13, (int) posY - 1, var14) || worldObj.getBlockMaterial(var13, (int) posY - 1, var14) == Material.water)
-						{
-							var3 = posX + var9;
-							var5 = posY + 1.0D;
-							var7 = posZ + var11;
-						}
-					}
-				}
-			}
-		}
-		setLocationAndAngles(var3, var5, var7, rotationYaw, rotationPitch);
-	}
-	
-	public void updateCloak()
-	{
 	}
 	
 	protected void updateFallState(double par1, boolean par3)
@@ -1719,8 +1702,6 @@
 				}
 				entityRiderYawDelta -= var1;
 				entityRiderPitchDelta -= var3;
-				rotationYaw = (float) (rotationYaw + var1);
-				rotationPitch = (float) (rotationPitch + var3);
 			}
 		}
 	}
@@ -1729,12 +1710,6 @@
 	{
 		if(riddenByEntity != null)
 		{
-			if(!(riddenByEntity instanceof EntityPlayer) || !((EntityPlayer) riddenByEntity).func_71066_bF())
-			{
-				riddenByEntity.lastTickPosX = lastTickPosX;
-				riddenByEntity.lastTickPosY = lastTickPosY + getMountedYOffset() + riddenByEntity.getYOffset();
-				riddenByEntity.lastTickPosZ = lastTickPosZ;
-			}
 			riddenByEntity.setPosition(posX, posY + getMountedYOffset() + riddenByEntity.getYOffset(), posZ);
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIArrowAttack.java b/RMCClient/minecraft/net/minecraft/src/EntityAIArrowAttack.java
index 02d2b5f..6dcdb7b 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIArrowAttack.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIArrowAttack.java
@@ -4,34 +4,33 @@
 {
 	private final EntityLiving entityHost;
 	private final IRangedAttackMob rangedAttackEntityHost;
-	private EntityLiving attackTarget;
+	private EntityLivingBase attackTarget;
 	private int rangedAttackTime;
-	private float entityMoveSpeed;
+	private double entityMoveSpeed;
 	private int field_75318_f;
 	private int field_96561_g;
 	private int maxRangedAttackTime;
 	private float field_96562_i;
 	private float field_82642_h;
 	
-	public EntityAIArrowAttack(IRangedAttackMob par1IRangedAttackMob, float par2, int par3, float par4)
+	public EntityAIArrowAttack(IRangedAttackMob p_i1649_1_, double p_i1649_2_, int p_i1649_4_, float p_i1649_5_)
 	{
-		this(par1IRangedAttackMob, par2, par3, par3, par4);
+		this(p_i1649_1_, p_i1649_2_, p_i1649_4_, p_i1649_4_, p_i1649_5_);
 	}
 	
-	public EntityAIArrowAttack(IRangedAttackMob par1IRangedAttackMob, float par2, int par3, int par4, float par5)
+	public EntityAIArrowAttack(IRangedAttackMob p_i1650_1_, double p_i1650_2_, int p_i1650_4_, int p_i1650_5_, float p_i1650_6_)
 	{
 		rangedAttackTime = -1;
-		field_75318_f = 0;
-		if(!(par1IRangedAttackMob instanceof EntityLiving)) throw new IllegalArgumentException("ArrowAttackGoal requires Mob implements RangedAttackMob");
+		if(!(p_i1650_1_ instanceof EntityLivingBase)) throw new IllegalArgumentException("ArrowAttackGoal requires Mob implements RangedAttackMob");
 		else
 		{
-			rangedAttackEntityHost = par1IRangedAttackMob;
-			entityHost = (EntityLiving) par1IRangedAttackMob;
-			entityMoveSpeed = par2;
-			field_96561_g = par3;
-			maxRangedAttackTime = par4;
-			field_96562_i = par5;
-			field_82642_h = par5 * par5;
+			rangedAttackEntityHost = p_i1650_1_;
+			entityHost = (EntityLiving) p_i1650_1_;
+			entityMoveSpeed = p_i1650_2_;
+			field_96561_g = p_i1650_4_;
+			maxRangedAttackTime = p_i1650_5_;
+			field_96562_i = p_i1650_6_;
+			field_82642_h = p_i1650_6_ * p_i1650_6_;
 			setMutexBits(3);
 		}
 	}
@@ -50,7 +49,7 @@
 	
 	@Override public boolean shouldExecute()
 	{
-		EntityLiving var1 = entityHost.getAttackTarget();
+		EntityLivingBase var1 = entityHost.getAttackTarget();
 		if(var1 == null) return false;
 		else
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIAttackOnCollide.java b/RMCClient/minecraft/net/minecraft/src/EntityAIAttackOnCollide.java
index 8c4b3f6..562692c 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIAttackOnCollide.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIAttackOnCollide.java
@@ -3,52 +3,49 @@
 public class EntityAIAttackOnCollide extends EntityAIBase
 {
 	World worldObj;
-	EntityLiving attacker;
-	EntityLiving entityTarget;
+	EntityCreature attacker;
 	int attackTick;
-	float field_75440_e;
+	double field_75440_e;
 	boolean field_75437_f;
 	PathEntity entityPathEntity;
 	Class classTarget;
 	private int field_75445_i;
 	
-	public EntityAIAttackOnCollide(EntityLiving par1EntityLiving, Class par2Class, float par3, boolean par4)
+	public EntityAIAttackOnCollide(EntityCreature p_i1635_1_, Class p_i1635_2_, double p_i1635_3_, boolean p_i1635_5_)
 	{
-		this(par1EntityLiving, par3, par4);
-		classTarget = par2Class;
+		this(p_i1635_1_, p_i1635_3_, p_i1635_5_);
+		classTarget = p_i1635_2_;
 	}
 	
-	public EntityAIAttackOnCollide(EntityLiving par1EntityLiving, float par2, boolean par3)
+	public EntityAIAttackOnCollide(EntityCreature p_i1636_1_, double p_i1636_2_, boolean p_i1636_4_)
 	{
-		attackTick = 0;
-		attacker = par1EntityLiving;
-		worldObj = par1EntityLiving.worldObj;
-		field_75440_e = par2;
-		field_75437_f = par3;
+		attacker = p_i1636_1_;
+		worldObj = p_i1636_1_.worldObj;
+		field_75440_e = p_i1636_2_;
+		field_75437_f = p_i1636_4_;
 		setMutexBits(3);
 	}
 	
 	@Override public boolean continueExecuting()
 	{
-		EntityLiving var1 = attacker.getAttackTarget();
-		return var1 == null ? false : !entityTarget.isEntityAlive() ? false : !field_75437_f ? !attacker.getNavigator().noPath() : attacker.isWithinHomeDistance(MathHelper.floor_double(entityTarget.posX), MathHelper.floor_double(entityTarget.posY), MathHelper.floor_double(entityTarget.posZ));
+		EntityLivingBase var1 = attacker.getAttackTarget();
+		return var1 == null ? false : !var1.isEntityAlive() ? false : !field_75437_f ? !attacker.getNavigator().noPath() : attacker.func_110176_b(MathHelper.floor_double(var1.posX), MathHelper.floor_double(var1.posY), MathHelper.floor_double(var1.posZ));
 	}
 	
 	@Override public void resetTask()
 	{
-		entityTarget = null;
 		attacker.getNavigator().clearPathEntity();
 	}
 	
 	@Override public boolean shouldExecute()
 	{
-		EntityLiving var1 = attacker.getAttackTarget();
+		EntityLivingBase var1 = attacker.getAttackTarget();
 		if(var1 == null) return false;
+		else if(!var1.isEntityAlive()) return false;
 		else if(classTarget != null && !classTarget.isAssignableFrom(var1.getClass())) return false;
 		else
 		{
-			entityTarget = var1;
-			entityPathEntity = attacker.getNavigator().getPathToEntityLiving(entityTarget);
+			entityPathEntity = attacker.getNavigator().getPathToEntityLiving(var1);
 			return entityPathEntity != null;
 		}
 	}
@@ -61,15 +58,16 @@
 	
 	@Override public void updateTask()
 	{
-		attacker.getLookHelper().setLookPositionWithEntity(entityTarget, 30.0F, 30.0F);
-		if((field_75437_f || attacker.getEntitySenses().canSee(entityTarget)) && --field_75445_i <= 0)
+		EntityLivingBase var1 = attacker.getAttackTarget();
+		attacker.getLookHelper().setLookPositionWithEntity(var1, 30.0F, 30.0F);
+		if((field_75437_f || attacker.getEntitySenses().canSee(var1)) && --field_75445_i <= 0)
 		{
 			field_75445_i = 4 + attacker.getRNG().nextInt(7);
-			attacker.getNavigator().tryMoveToEntityLiving(entityTarget, field_75440_e);
+			attacker.getNavigator().tryMoveToEntityLiving(var1, field_75440_e);
 		}
 		attackTick = Math.max(attackTick - 1, 0);
-		double var1 = attacker.width * 2.0F * attacker.width * 2.0F;
-		if(attacker.getDistanceSq(entityTarget.posX, entityTarget.boundingBox.minY, entityTarget.posZ) <= var1)
+		double var2 = attacker.width * 2.0F * attacker.width * 2.0F + var1.width;
+		if(attacker.getDistanceSq(var1.posX, var1.boundingBox.minY, var1.posZ) <= var2)
 		{
 			if(attackTick <= 0)
 			{
@@ -78,7 +76,7 @@
 				{
 					attacker.swingItem();
 				}
-				attacker.attackEntityAsMob(entityTarget);
+				attacker.attackEntityAsMob(var1);
 			}
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIAvoidEntity.java b/RMCClient/minecraft/net/minecraft/src/EntityAIAvoidEntity.java
index 57c1491..6fcfe97 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIAvoidEntity.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIAvoidEntity.java
@@ -6,22 +6,22 @@
 {
 	public final IEntitySelector field_98218_a = new EntityAIAvoidEntitySelector(this);
 	private EntityCreature theEntity;
-	private float farSpeed;
-	private float nearSpeed;
+	private double farSpeed;
+	private double nearSpeed;
 	private Entity closestLivingEntity;
 	private float distanceFromEntity;
 	private PathEntity entityPathEntity;
 	private PathNavigate entityPathNavigate;
 	private Class targetEntityClass;
 	
-	public EntityAIAvoidEntity(EntityCreature par1EntityCreature, Class par2Class, float par3, float par4, float par5)
+	public EntityAIAvoidEntity(EntityCreature p_i1616_1_, Class p_i1616_2_, float p_i1616_3_, double p_i1616_4_, double p_i1616_6_)
 	{
-		theEntity = par1EntityCreature;
-		targetEntityClass = par2Class;
-		distanceFromEntity = par3;
-		farSpeed = par4;
-		nearSpeed = par5;
-		entityPathNavigate = par1EntityCreature.getNavigator();
+		theEntity = p_i1616_1_;
+		targetEntityClass = p_i1616_2_;
+		distanceFromEntity = p_i1616_3_;
+		farSpeed = p_i1616_4_;
+		nearSpeed = p_i1616_6_;
+		entityPathNavigate = p_i1616_1_.getNavigator();
 		setMutexBits(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIAvoidEntitySelector.java b/RMCClient/minecraft/net/minecraft/src/EntityAIAvoidEntitySelector.java
index d8b7a07..72f1445 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIAvoidEntitySelector.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIAvoidEntitySelector.java
@@ -4,9 +4,9 @@
 {
 	final EntityAIAvoidEntity entityAvoiderAI;
 	
-	EntityAIAvoidEntitySelector(EntityAIAvoidEntity par1EntityAIAvoidEntity)
+	EntityAIAvoidEntitySelector(EntityAIAvoidEntity p_i1615_1_)
 	{
-		entityAvoiderAI = par1EntityAIAvoidEntity;
+		entityAvoiderAI = p_i1615_1_;
 	}
 	
 	@Override public boolean isEntityApplicable(Entity par1Entity)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIBase.java b/RMCClient/minecraft/net/minecraft/src/EntityAIBase.java
index 9f4910d..4e47c05 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIBase.java
@@ -2,7 +2,7 @@
 
 public abstract class EntityAIBase
 {
-	private int mutexBits = 0;
+	private int mutexBits;
 	
 	public boolean continueExecuting()
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIBeg.java b/RMCClient/minecraft/net/minecraft/src/EntityAIBeg.java
index 542cae2..c2fd19e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIBeg.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIBeg.java
@@ -8,11 +8,11 @@
 	private float minPlayerDistance;
 	private int field_75384_e;
 	
-	public EntityAIBeg(EntityWolf par1EntityWolf, float par2)
+	public EntityAIBeg(EntityWolf p_i1617_1_, float p_i1617_2_)
 	{
-		theWolf = par1EntityWolf;
-		worldObject = par1EntityWolf.worldObj;
-		minPlayerDistance = par2;
+		theWolf = p_i1617_1_;
+		worldObject = p_i1617_1_.worldObj;
+		minPlayerDistance = p_i1617_2_;
 		setMutexBits(2);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIBreakDoor.java b/RMCClient/minecraft/net/minecraft/src/EntityAIBreakDoor.java
index 309e0f5..7dff859 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIBreakDoor.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIBreakDoor.java
@@ -5,9 +5,9 @@
 	private int breakingTime;
 	private int field_75358_j = -1;
 	
-	public EntityAIBreakDoor(EntityLiving par1EntityLiving)
+	public EntityAIBreakDoor(EntityLiving p_i1618_1_)
 	{
-		super(par1EntityLiving);
+		super(p_i1618_1_);
 	}
 	
 	@Override public boolean continueExecuting()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIControlledByPlayer.java b/RMCClient/minecraft/net/minecraft/src/EntityAIControlledByPlayer.java
index ccb9d7e..feb141c 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIControlledByPlayer.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIControlledByPlayer.java
@@ -4,15 +4,15 @@
 {
 	private final EntityLiving thisEntity;
 	private final float maxSpeed;
-	private float currentSpeed = 0.0F;
-	private boolean speedBoosted = false;
-	private int speedBoostTime = 0;
-	private int maxSpeedBoostTime = 0;
+	private float currentSpeed;
+	private boolean speedBoosted;
+	private int speedBoostTime;
+	private int maxSpeedBoostTime;
 	
-	public EntityAIControlledByPlayer(EntityLiving par1EntityLiving, float par2)
+	public EntityAIControlledByPlayer(EntityLiving p_i1620_1_, float p_i1620_2_)
 	{
-		thisEntity = par1EntityLiving;
-		maxSpeed = par2;
+		thisEntity = p_i1620_1_;
+		maxSpeed = p_i1620_2_;
 		setMutexBits(7);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAICreeperSwell.java b/RMCClient/minecraft/net/minecraft/src/EntityAICreeperSwell.java
index 411f120..74a797e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAICreeperSwell.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAICreeperSwell.java
@@ -3,11 +3,11 @@
 public class EntityAICreeperSwell extends EntityAIBase
 {
 	EntityCreeper swellingCreeper;
-	EntityLiving creeperAttackTarget;
+	EntityLivingBase creeperAttackTarget;
 	
-	public EntityAICreeperSwell(EntityCreeper par1EntityCreeper)
+	public EntityAICreeperSwell(EntityCreeper p_i1655_1_)
 	{
-		swellingCreeper = par1EntityCreeper;
+		swellingCreeper = p_i1655_1_;
 		setMutexBits(1);
 	}
 	
@@ -18,7 +18,7 @@
 	
 	@Override public boolean shouldExecute()
 	{
-		EntityLiving var1 = swellingCreeper.getAttackTarget();
+		EntityLivingBase var1 = swellingCreeper.getAttackTarget();
 		return swellingCreeper.getCreeperState() > 0 || var1 != null && swellingCreeper.getDistanceSqToEntity(var1) < 9.0D;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIDefendVillage.java b/RMCClient/minecraft/net/minecraft/src/EntityAIDefendVillage.java
index ff6e8cd..c30cf24 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIDefendVillage.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIDefendVillage.java
@@ -3,12 +3,12 @@
 public class EntityAIDefendVillage extends EntityAITarget
 {
 	EntityIronGolem irongolem;
-	EntityLiving villageAgressorTarget;
+	EntityLivingBase villageAgressorTarget;
 	
-	public EntityAIDefendVillage(EntityIronGolem par1EntityIronGolem)
+	public EntityAIDefendVillage(EntityIronGolem p_i1659_1_)
 	{
-		super(par1EntityIronGolem, 16.0F, false, true);
-		irongolem = par1EntityIronGolem;
+		super(p_i1659_1_, false, true);
+		irongolem = p_i1659_1_;
 		setMutexBits(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIDoorInteract.java b/RMCClient/minecraft/net/minecraft/src/EntityAIDoorInteract.java
index aa7ed40..961a656 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIDoorInteract.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIDoorInteract.java
@@ -11,9 +11,9 @@
 	float entityPositionX;
 	float entityPositionZ;
 	
-	public EntityAIDoorInteract(EntityLiving par1EntityLiving)
+	public EntityAIDoorInteract(EntityLiving p_i1621_1_)
 	{
-		theEntity = par1EntityLiving;
+		theEntity = p_i1621_1_;
 	}
 	
 	@Override public boolean continueExecuting()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIEatGrass.java b/RMCClient/minecraft/net/minecraft/src/EntityAIEatGrass.java
index 1245a80..14190f7 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIEatGrass.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIEatGrass.java
@@ -4,12 +4,12 @@
 {
 	private EntityLiving theEntity;
 	private World theWorld;
-	int eatGrassTick = 0;
+	int eatGrassTick;
 	
-	public EntityAIEatGrass(EntityLiving par1EntityLiving)
+	public EntityAIEatGrass(EntityLiving p_i1622_1_)
 	{
-		theEntity = par1EntityLiving;
-		theWorld = par1EntityLiving.worldObj;
+		theEntity = p_i1622_1_;
+		theWorld = p_i1622_1_.worldObj;
 		setMutexBits(7);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIFleeSun.java b/RMCClient/minecraft/net/minecraft/src/EntityAIFleeSun.java
index 55abb93..dd08c47 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIFleeSun.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIFleeSun.java
@@ -8,14 +8,14 @@
 	private double shelterX;
 	private double shelterY;
 	private double shelterZ;
-	private float movementSpeed;
+	private double movementSpeed;
 	private World theWorld;
 	
-	public EntityAIFleeSun(EntityCreature par1EntityCreature, float par2)
+	public EntityAIFleeSun(EntityCreature p_i1623_1_, double p_i1623_2_)
 	{
-		theCreature = par1EntityCreature;
-		movementSpeed = par2;
-		theWorld = par1EntityCreature.worldObj;
+		theCreature = p_i1623_1_;
+		movementSpeed = p_i1623_2_;
+		theWorld = p_i1623_1_.worldObj;
 		setMutexBits(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIFollowGolem.java b/RMCClient/minecraft/net/minecraft/src/EntityAIFollowGolem.java
index e65201a..7309830 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIFollowGolem.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIFollowGolem.java
@@ -8,11 +8,11 @@
 	private EntityVillager theVillager;
 	private EntityIronGolem theGolem;
 	private int takeGolemRoseTick;
-	private boolean tookGolemRose = false;
+	private boolean tookGolemRose;
 	
-	public EntityAIFollowGolem(EntityVillager par1EntityVillager)
+	public EntityAIFollowGolem(EntityVillager p_i1656_1_)
 	{
-		theVillager = par1EntityVillager;
+		theVillager = p_i1656_1_;
 		setMutexBits(3);
 	}
 	
@@ -64,7 +64,7 @@
 		theVillager.getLookHelper().setLookPositionWithEntity(theGolem, 30.0F, 30.0F);
 		if(theGolem.getHoldRoseTick() == takeGolemRoseTick)
 		{
-			theVillager.getNavigator().tryMoveToEntityLiving(theGolem, 0.15F);
+			theVillager.getNavigator().tryMoveToEntityLiving(theGolem, 0.5D);
 			tookGolemRose = true;
 		}
 		if(tookGolemRose && theVillager.getDistanceSqToEntity(theGolem) < 4.0D)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIFollowOwner.java b/RMCClient/minecraft/net/minecraft/src/EntityAIFollowOwner.java
index 8a57ffc..c332421 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIFollowOwner.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIFollowOwner.java
@@ -3,23 +3,23 @@
 public class EntityAIFollowOwner extends EntityAIBase
 {
 	private EntityTameable thePet;
-	private EntityLiving theOwner;
+	private EntityLivingBase theOwner;
 	World theWorld;
-	private float field_75336_f;
+	private double field_75336_f;
 	private PathNavigate petPathfinder;
 	private int field_75343_h;
 	float maxDist;
 	float minDist;
 	private boolean field_75344_i;
 	
-	public EntityAIFollowOwner(EntityTameable par1EntityTameable, float par2, float par3, float par4)
+	public EntityAIFollowOwner(EntityTameable p_i1625_1_, double p_i1625_2_, float p_i1625_4_, float p_i1625_5_)
 	{
-		thePet = par1EntityTameable;
-		theWorld = par1EntityTameable.worldObj;
-		field_75336_f = par2;
-		petPathfinder = par1EntityTameable.getNavigator();
-		minDist = par3;
-		maxDist = par4;
+		thePet = p_i1625_1_;
+		theWorld = p_i1625_1_.worldObj;
+		field_75336_f = p_i1625_2_;
+		petPathfinder = p_i1625_1_.getNavigator();
+		minDist = p_i1625_4_;
+		maxDist = p_i1625_5_;
 		setMutexBits(3);
 	}
 	
@@ -37,7 +37,7 @@
 	
 	@Override public boolean shouldExecute()
 	{
-		EntityLiving var1 = thePet.getOwner();
+		EntityLivingBase var1 = thePet.func_130012_q();
 		if(var1 == null) return false;
 		else if(thePet.isSitting()) return false;
 		else if(thePet.getDistanceSqToEntity(var1) < minDist * minDist) return false;
@@ -65,20 +65,23 @@
 				field_75343_h = 10;
 				if(!petPathfinder.tryMoveToEntityLiving(theOwner, field_75336_f))
 				{
-					if(thePet.getDistanceSqToEntity(theOwner) >= 144.0D)
+					if(!thePet.func_110167_bD())
 					{
-						int var1 = MathHelper.floor_double(theOwner.posX) - 2;
-						int var2 = MathHelper.floor_double(theOwner.posZ) - 2;
-						int var3 = MathHelper.floor_double(theOwner.boundingBox.minY);
-						for(int var4 = 0; var4 <= 4; ++var4)
+						if(thePet.getDistanceSqToEntity(theOwner) >= 144.0D)
 						{
-							for(int var5 = 0; var5 <= 4; ++var5)
+							int var1 = MathHelper.floor_double(theOwner.posX) - 2;
+							int var2 = MathHelper.floor_double(theOwner.posZ) - 2;
+							int var3 = MathHelper.floor_double(theOwner.boundingBox.minY);
+							for(int var4 = 0; var4 <= 4; ++var4)
 							{
-								if((var4 < 1 || var5 < 1 || var4 > 3 || var5 > 3) && theWorld.doesBlockHaveSolidTopSurface(var1 + var4, var3 - 1, var2 + var5) && !theWorld.isBlockNormalCube(var1 + var4, var3, var2 + var5) && !theWorld.isBlockNormalCube(var1 + var4, var3 + 1, var2 + var5))
+								for(int var5 = 0; var5 <= 4; ++var5)
 								{
-									thePet.setLocationAndAngles(var1 + var4 + 0.5F, var3, var2 + var5 + 0.5F, thePet.rotationYaw, thePet.rotationPitch);
-									petPathfinder.clearPathEntity();
-									return;
+									if((var4 < 1 || var5 < 1 || var4 > 3 || var5 > 3) && theWorld.doesBlockHaveSolidTopSurface(var1 + var4, var3 - 1, var2 + var5) && !theWorld.isBlockNormalCube(var1 + var4, var3, var2 + var5) && !theWorld.isBlockNormalCube(var1 + var4, var3 + 1, var2 + var5))
+									{
+										thePet.setLocationAndAngles(var1 + var4 + 0.5F, var3, var2 + var5 + 0.5F, thePet.rotationYaw, thePet.rotationPitch);
+										petPathfinder.clearPathEntity();
+										return;
+									}
 								}
 							}
 						}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIFollowParent.java b/RMCClient/minecraft/net/minecraft/src/EntityAIFollowParent.java
index e38933c..ec6b27d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIFollowParent.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIFollowParent.java
@@ -7,13 +7,13 @@
 {
 	EntityAnimal childAnimal;
 	EntityAnimal parentAnimal;
-	float field_75347_c;
+	double field_75347_c;
 	private int field_75345_d;
 	
-	public EntityAIFollowParent(EntityAnimal par1EntityAnimal, float par2)
+	public EntityAIFollowParent(EntityAnimal p_i1626_1_, double p_i1626_2_)
 	{
-		childAnimal = par1EntityAnimal;
-		field_75347_c = par2;
+		childAnimal = p_i1626_1_;
+		field_75347_c = p_i1626_2_;
 	}
 	
 	@Override public boolean continueExecuting()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIHurtByTarget.java b/RMCClient/minecraft/net/minecraft/src/EntityAIHurtByTarget.java
index 0945b16..b6a9ac0 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIHurtByTarget.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIHurtByTarget.java
@@ -6,47 +6,36 @@
 public class EntityAIHurtByTarget extends EntityAITarget
 {
 	boolean field_75312_a;
-	EntityLiving entityPathNavigate;
+	private int field_142052_b;
 	
-	public EntityAIHurtByTarget(EntityLiving par1EntityLiving, boolean par2)
+	public EntityAIHurtByTarget(EntityCreature p_i1660_1_, boolean p_i1660_2_)
 	{
-		super(par1EntityLiving, 16.0F, false);
-		field_75312_a = par2;
+		super(p_i1660_1_, false);
+		field_75312_a = p_i1660_2_;
 		setMutexBits(1);
-	}
-	
-	@Override public boolean continueExecuting()
-	{
-		return taskOwner.getAITarget() != null && taskOwner.getAITarget() != entityPathNavigate;
-	}
-	
-	@Override public void resetTask()
-	{
-		if(taskOwner.getAttackTarget() != null && taskOwner.getAttackTarget() instanceof EntityPlayer && ((EntityPlayer) taskOwner.getAttackTarget()).capabilities.disableDamage)
-		{
-			super.resetTask();
-		}
 	}
 	
 	@Override public boolean shouldExecute()
 	{
-		return isSuitableTarget(taskOwner.getAITarget(), true);
+		int var1 = taskOwner.func_142015_aE();
+		return var1 != field_142052_b && isSuitableTarget(taskOwner.getAITarget(), false);
 	}
 	
 	@Override public void startExecuting()
 	{
 		taskOwner.setAttackTarget(taskOwner.getAITarget());
-		entityPathNavigate = taskOwner.getAITarget();
+		field_142052_b = taskOwner.func_142015_aE();
 		if(field_75312_a)
 		{
-			List var1 = taskOwner.worldObj.getEntitiesWithinAABB(taskOwner.getClass(), AxisAlignedBB.getAABBPool().getAABB(taskOwner.posX, taskOwner.posY, taskOwner.posZ, taskOwner.posX + 1.0D, taskOwner.posY + 1.0D, taskOwner.posZ + 1.0D).expand(targetDistance, 10.0D, targetDistance));
-			Iterator var2 = var1.iterator();
-			while(var2.hasNext())
+			double var1 = func_111175_f();
+			List var3 = taskOwner.worldObj.getEntitiesWithinAABB(taskOwner.getClass(), AxisAlignedBB.getAABBPool().getAABB(taskOwner.posX, taskOwner.posY, taskOwner.posZ, taskOwner.posX + 1.0D, taskOwner.posY + 1.0D, taskOwner.posZ + 1.0D).expand(var1, 10.0D, var1));
+			Iterator var4 = var3.iterator();
+			while(var4.hasNext())
 			{
-				EntityLiving var3 = (EntityLiving) var2.next();
-				if(taskOwner != var3 && var3.getAttackTarget() == null)
+				EntityCreature var5 = (EntityCreature) var4.next();
+				if(taskOwner != var5 && var5.getAttackTarget() == null && !var5.func_142014_c(taskOwner.getAITarget()))
 				{
-					var3.setAttackTarget(taskOwner.getAITarget());
+					var5.setAttackTarget(taskOwner.getAITarget());
 				}
 			}
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAILeapAtTarget.java b/RMCClient/minecraft/net/minecraft/src/EntityAILeapAtTarget.java
index 23c79de..46e593c 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAILeapAtTarget.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAILeapAtTarget.java
@@ -3,13 +3,13 @@
 public class EntityAILeapAtTarget extends EntityAIBase
 {
 	EntityLiving leaper;
-	EntityLiving leapTarget;
+	EntityLivingBase leapTarget;
 	float leapMotionY;
 	
-	public EntityAILeapAtTarget(EntityLiving par1EntityLiving, float par2)
+	public EntityAILeapAtTarget(EntityLiving p_i1630_1_, float p_i1630_2_)
 	{
-		leaper = par1EntityLiving;
-		leapMotionY = par2;
+		leaper = p_i1630_1_;
+		leapMotionY = p_i1630_2_;
 		setMutexBits(5);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAILookAtTradePlayer.java b/RMCClient/minecraft/net/minecraft/src/EntityAILookAtTradePlayer.java
index 83569b7..31f16be 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAILookAtTradePlayer.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAILookAtTradePlayer.java
@@ -4,10 +4,10 @@
 {
 	private final EntityVillager theMerchant;
 	
-	public EntityAILookAtTradePlayer(EntityVillager par1EntityVillager)
+	public EntityAILookAtTradePlayer(EntityVillager p_i1633_1_)
 	{
-		super(par1EntityVillager, EntityPlayer.class, 8.0F);
-		theMerchant = par1EntityVillager;
+		super(p_i1633_1_, EntityPlayer.class, 8.0F);
+		theMerchant = p_i1633_1_;
 	}
 	
 	@Override public boolean shouldExecute()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAILookAtVillager.java b/RMCClient/minecraft/net/minecraft/src/EntityAILookAtVillager.java
index 6b1b417..78ace26 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAILookAtVillager.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAILookAtVillager.java
@@ -6,9 +6,9 @@
 	private EntityVillager theVillager;
 	private int lookTime;
 	
-	public EntityAILookAtVillager(EntityIronGolem par1EntityIronGolem)
+	public EntityAILookAtVillager(EntityIronGolem p_i1643_1_)
 	{
-		theGolem = par1EntityIronGolem;
+		theGolem = p_i1643_1_;
 		setMutexBits(3);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAILookIdle.java b/RMCClient/minecraft/net/minecraft/src/EntityAILookIdle.java
index bb2693b..e420047 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAILookIdle.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAILookIdle.java
@@ -5,11 +5,11 @@
 	private EntityLiving idleEntity;
 	private double lookX;
 	private double lookZ;
-	private int idleTime = 0;
+	private int idleTime;
 	
-	public EntityAILookIdle(EntityLiving par1EntityLiving)
+	public EntityAILookIdle(EntityLiving p_i1647_1_)
 	{
-		idleEntity = par1EntityLiving;
+		idleEntity = p_i1647_1_;
 		setMutexBits(3);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIMate.java b/RMCClient/minecraft/net/minecraft/src/EntityAIMate.java
index bb9427c..c3afbaf 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIMate.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIMate.java
@@ -9,14 +9,14 @@
 	private EntityAnimal theAnimal;
 	World theWorld;
 	private EntityAnimal targetMate;
-	int spawnBabyDelay = 0;
-	float moveSpeed;
+	int spawnBabyDelay;
+	double moveSpeed;
 	
-	public EntityAIMate(EntityAnimal par1EntityAnimal, float par2)
+	public EntityAIMate(EntityAnimal p_i1619_1_, double p_i1619_2_)
 	{
-		theAnimal = par1EntityAnimal;
-		theWorld = par1EntityAnimal.worldObj;
-		moveSpeed = par2;
+		theAnimal = p_i1619_1_;
+		theWorld = p_i1619_1_.worldObj;
+		moveSpeed = p_i1619_2_;
 		setMutexBits(3);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIMoveIndoors.java b/RMCClient/minecraft/net/minecraft/src/EntityAIMoveIndoors.java
index 32b5ebb..66f38e6 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIMoveIndoors.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIMoveIndoors.java
@@ -7,9 +7,9 @@
 	private int insidePosX = -1;
 	private int insidePosZ = -1;
 	
-	public EntityAIMoveIndoors(EntityCreature par1EntityCreature)
+	public EntityAIMoveIndoors(EntityCreature p_i1637_1_)
 	{
-		entityObj = par1EntityCreature;
+		entityObj = p_i1637_1_;
 		setMutexBits(1);
 	}
 	
@@ -52,11 +52,11 @@
 			Vec3 var1 = RandomPositionGenerator.findRandomTargetBlockTowards(entityObj, 14, 3, entityObj.worldObj.getWorldVec3Pool().getVecFromPool(doorInfo.getInsidePosX() + 0.5D, doorInfo.getInsidePosY(), doorInfo.getInsidePosZ() + 0.5D));
 			if(var1 != null)
 			{
-				entityObj.getNavigator().tryMoveToXYZ(var1.xCoord, var1.yCoord, var1.zCoord, 0.3F);
+				entityObj.getNavigator().tryMoveToXYZ(var1.xCoord, var1.yCoord, var1.zCoord, 1.0D);
 			}
 		} else
 		{
-			entityObj.getNavigator().tryMoveToXYZ(doorInfo.getInsidePosX() + 0.5D, doorInfo.getInsidePosY(), doorInfo.getInsidePosZ() + 0.5D, 0.3F);
+			entityObj.getNavigator().tryMoveToXYZ(doorInfo.getInsidePosX() + 0.5D, doorInfo.getInsidePosY(), doorInfo.getInsidePosZ() + 0.5D, 1.0D);
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIMoveThroughVillage.java b/RMCClient/minecraft/net/minecraft/src/EntityAIMoveThroughVillage.java
index 872b5c9..cd3c40c 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIMoveThroughVillage.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIMoveThroughVillage.java
@@ -7,17 +7,17 @@
 public class EntityAIMoveThroughVillage extends EntityAIBase
 {
 	private EntityCreature theEntity;
-	private float movementSpeed;
+	private double movementSpeed;
 	private PathEntity entityPathNavigate;
 	private VillageDoorInfo doorInfo;
 	private boolean isNocturnal;
 	private List doorList = new ArrayList();
 	
-	public EntityAIMoveThroughVillage(EntityCreature par1EntityCreature, float par2, boolean par3)
+	public EntityAIMoveThroughVillage(EntityCreature p_i1638_1_, double p_i1638_2_, boolean p_i1638_4_)
 	{
-		theEntity = par1EntityCreature;
-		movementSpeed = par2;
-		isNocturnal = par3;
+		theEntity = p_i1638_1_;
+		movementSpeed = p_i1638_2_;
+		isNocturnal = p_i1638_4_;
 		setMutexBits(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIMoveTwardsRestriction.java b/RMCClient/minecraft/net/minecraft/src/EntityAIMoveTowardsRestriction.java
similarity index 69%
rename from RMCClient/minecraft/net/minecraft/src/EntityAIMoveTwardsRestriction.java
rename to RMCClient/minecraft/net/minecraft/src/EntityAIMoveTowardsRestriction.java
index 29b5276..5703749 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIMoveTwardsRestriction.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIMoveTowardsRestriction.java
@@ -1,17 +1,17 @@
 package net.minecraft.src;
 
-public class EntityAIMoveTwardsRestriction extends EntityAIBase
+public class EntityAIMoveTowardsRestriction extends EntityAIBase
 {
 	private EntityCreature theEntity;
 	private double movePosX;
 	private double movePosY;
 	private double movePosZ;
-	private float movementSpeed;
+	private double movementSpeed;
 	
-	public EntityAIMoveTwardsRestriction(EntityCreature par1EntityCreature, float par2)
+	public EntityAIMoveTowardsRestriction(EntityCreature p_i2347_1_, double p_i2347_2_)
 	{
-		theEntity = par1EntityCreature;
-		movementSpeed = par2;
+		theEntity = p_i2347_1_;
+		movementSpeed = p_i2347_2_;
 		setMutexBits(1);
 	}
 	
@@ -22,10 +22,10 @@
 	
 	@Override public boolean shouldExecute()
 	{
-		if(theEntity.isWithinHomeDistanceCurrentPosition()) return false;
+		if(theEntity.func_110173_bK()) return false;
 		else
 		{
-			ChunkCoordinates var1 = theEntity.getHomePosition();
+			ChunkCoordinates var1 = theEntity.func_110172_bL();
 			Vec3 var2 = RandomPositionGenerator.findRandomTargetBlockTowards(theEntity, 16, 7, theEntity.worldObj.getWorldVec3Pool().getVecFromPool(var1.posX, var1.posY, var1.posZ));
 			if(var2 == null) return false;
 			else
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIMoveTowardsTarget.java b/RMCClient/minecraft/net/minecraft/src/EntityAIMoveTowardsTarget.java
index d40ef53..d44ae67 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIMoveTowardsTarget.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIMoveTowardsTarget.java
@@ -3,18 +3,18 @@
 public class EntityAIMoveTowardsTarget extends EntityAIBase
 {
 	private EntityCreature theEntity;
-	private EntityLiving targetEntity;
+	private EntityLivingBase targetEntity;
 	private double movePosX;
 	private double movePosY;
 	private double movePosZ;
-	private float field_75425_f;
+	private double field_75425_f;
 	private float field_75426_g;
 	
-	public EntityAIMoveTowardsTarget(EntityCreature par1EntityCreature, float par2, float par3)
+	public EntityAIMoveTowardsTarget(EntityCreature p_i1640_1_, double p_i1640_2_, float p_i1640_4_)
 	{
-		theEntity = par1EntityCreature;
-		field_75425_f = par2;
-		field_75426_g = par3;
+		theEntity = p_i1640_1_;
+		field_75425_f = p_i1640_2_;
+		field_75426_g = p_i1640_4_;
 		setMutexBits(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTarget.java b/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTarget.java
index 3ad4696..168abff 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTarget.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTarget.java
@@ -1,36 +1,34 @@
 package net.minecraft.src;
 
 import java.util.Collections;
-import java.util.Iterator;
 import java.util.List;
 
 public class EntityAINearestAttackableTarget extends EntityAITarget
 {
-	EntityLiving targetEntity;
-	Class targetClass;
-	int targetChance;
+	private final Class targetClass;
+	private final int targetChance;
+	private final EntityAINearestAttackableTargetSorter theNearestAttackableTargetSorter;
 	private final IEntitySelector field_82643_g;
-	private EntityAINearestAttackableTargetSorter theNearestAttackableTargetSorter;
+	private EntityLivingBase targetEntity;
 	
-	public EntityAINearestAttackableTarget(EntityLiving par1EntityLiving, Class par2Class, float par3, int par4, boolean par5)
+	public EntityAINearestAttackableTarget(EntityCreature p_i1663_1_, Class p_i1663_2_, int p_i1663_3_, boolean p_i1663_4_)
 	{
-		this(par1EntityLiving, par2Class, par3, par4, par5, false);
+		this(p_i1663_1_, p_i1663_2_, p_i1663_3_, p_i1663_4_, false);
 	}
 	
-	public EntityAINearestAttackableTarget(EntityLiving par1EntityLiving, Class par2Class, float par3, int par4, boolean par5, boolean par6)
+	public EntityAINearestAttackableTarget(EntityCreature p_i1664_1_, Class p_i1664_2_, int p_i1664_3_, boolean p_i1664_4_, boolean p_i1664_5_)
 	{
-		this(par1EntityLiving, par2Class, par3, par4, par5, par6, (IEntitySelector) null);
+		this(p_i1664_1_, p_i1664_2_, p_i1664_3_, p_i1664_4_, p_i1664_5_, (IEntitySelector) null);
 	}
 	
-	public EntityAINearestAttackableTarget(EntityLiving par1, Class par2, float par3, int par4, boolean par5, boolean par6, IEntitySelector par7IEntitySelector)
+	public EntityAINearestAttackableTarget(EntityCreature p_i1665_1_, Class p_i1665_2_, int p_i1665_3_, boolean p_i1665_4_, boolean p_i1665_5_, IEntitySelector p_i1665_6_)
 	{
-		super(par1, par3, par5, par6);
-		targetClass = par2;
-		targetDistance = par3;
-		targetChance = par4;
-		theNearestAttackableTargetSorter = new EntityAINearestAttackableTargetSorter(this, par1);
-		field_82643_g = par7IEntitySelector;
+		super(p_i1665_1_, p_i1665_4_, p_i1665_5_);
+		targetClass = p_i1665_2_;
+		targetChance = p_i1665_3_;
+		theNearestAttackableTargetSorter = new EntityAINearestAttackableTargetSorter(p_i1665_1_);
 		setMutexBits(1);
+		field_82643_g = new EntityAINearestAttackableTargetSelector(this, p_i1665_6_);
 	}
 	
 	@Override public boolean shouldExecute()
@@ -38,31 +36,15 @@
 		if(targetChance > 0 && taskOwner.getRNG().nextInt(targetChance) != 0) return false;
 		else
 		{
-			if(targetClass == EntityPlayer.class)
+			double var1 = func_111175_f();
+			List var3 = taskOwner.worldObj.selectEntitiesWithinAABB(targetClass, taskOwner.boundingBox.expand(var1, 4.0D, var1), field_82643_g);
+			Collections.sort(var3, theNearestAttackableTargetSorter);
+			if(var3.isEmpty()) return false;
+			else
 			{
-				EntityPlayer var1 = taskOwner.worldObj.getClosestVulnerablePlayerToEntity(taskOwner, targetDistance);
-				if(isSuitableTarget(var1, false))
-				{
-					targetEntity = var1;
-					return true;
-				}
-			} else
-			{
-				List var5 = taskOwner.worldObj.selectEntitiesWithinAABB(targetClass, taskOwner.boundingBox.expand(targetDistance, 4.0D, targetDistance), field_82643_g);
-				Collections.sort(var5, theNearestAttackableTargetSorter);
-				Iterator var2 = var5.iterator();
-				while(var2.hasNext())
-				{
-					Entity var3 = (Entity) var2.next();
-					EntityLiving var4 = (EntityLiving) var3;
-					if(isSuitableTarget(var4, false))
-					{
-						targetEntity = var4;
-						return true;
-					}
-				}
+				targetEntity = (EntityLivingBase) var3.get(0);
+				return true;
 			}
-			return false;
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTargetSelector.java b/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTargetSelector.java
new file mode 100644
index 0000000..9098057
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTargetSelector.java
@@ -0,0 +1,18 @@
+package net.minecraft.src;
+
+class EntityAINearestAttackableTargetSelector implements IEntitySelector
+{
+	final IEntitySelector field_111103_c;
+	final EntityAINearestAttackableTarget field_111102_d;
+	
+	EntityAINearestAttackableTargetSelector(EntityAINearestAttackableTarget p_i1661_1_, IEntitySelector p_i1661_2_)
+	{
+		field_111102_d = p_i1661_1_;
+		field_111103_c = p_i1661_2_;
+	}
+	
+	@Override public boolean isEntityApplicable(Entity par1Entity)
+	{
+		return !(par1Entity instanceof EntityLivingBase) ? false : field_111103_c != null && !field_111103_c.isEntityApplicable(par1Entity) ? false : field_111102_d.isSuitableTarget((EntityLivingBase) par1Entity, false);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTargetSorter.java b/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTargetSorter.java
index 62e2fd7..31bc0eb 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTargetSorter.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAINearestAttackableTargetSorter.java
@@ -4,13 +4,11 @@
 
 public class EntityAINearestAttackableTargetSorter implements Comparator
 {
-	private Entity theEntity;
-	final EntityAINearestAttackableTarget parent;
+	private final Entity theEntity;
 	
-	public EntityAINearestAttackableTargetSorter(EntityAINearestAttackableTarget par1EntityAINearestAttackableTarget, Entity par2Entity)
+	public EntityAINearestAttackableTargetSorter(Entity p_i1662_1_)
 	{
-		parent = par1EntityAINearestAttackableTarget;
-		theEntity = par2Entity;
+		theEntity = p_i1662_1_;
 	}
 	
 	@Override public int compare(Object par1Obj, Object par2Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIOcelotAttack.java b/RMCClient/minecraft/net/minecraft/src/EntityAIOcelotAttack.java
index aff5c40..776a042 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIOcelotAttack.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIOcelotAttack.java
@@ -4,13 +4,13 @@
 {
 	World theWorld;
 	EntityLiving theEntity;
-	EntityLiving theVictim;
-	int attackCountdown = 0;
+	EntityLivingBase theVictim;
+	int attackCountdown;
 	
-	public EntityAIOcelotAttack(EntityLiving par1EntityLiving)
+	public EntityAIOcelotAttack(EntityLiving p_i1641_1_)
 	{
-		theEntity = par1EntityLiving;
-		theWorld = par1EntityLiving.worldObj;
+		theEntity = p_i1641_1_;
+		theWorld = p_i1641_1_.worldObj;
 		setMutexBits(3);
 	}
 	
@@ -27,7 +27,7 @@
 	
 	@Override public boolean shouldExecute()
 	{
-		EntityLiving var1 = theEntity.getAttackTarget();
+		EntityLivingBase var1 = theEntity.getAttackTarget();
 		if(var1 == null) return false;
 		else
 		{
@@ -41,13 +41,13 @@
 		theEntity.getLookHelper().setLookPositionWithEntity(theVictim, 30.0F, 30.0F);
 		double var1 = theEntity.width * 2.0F * theEntity.width * 2.0F;
 		double var3 = theEntity.getDistanceSq(theVictim.posX, theVictim.boundingBox.minY, theVictim.posZ);
-		float var5 = 0.23F;
+		double var5 = 0.8D;
 		if(var3 > var1 && var3 < 16.0D)
 		{
-			var5 = 0.4F;
+			var5 = 1.33D;
 		} else if(var3 < 225.0D)
 		{
-			var5 = 0.18F;
+			var5 = 0.6D;
 		}
 		theEntity.getNavigator().tryMoveToEntityLiving(theVictim, var5);
 		attackCountdown = Math.max(attackCountdown - 1, 0);
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIOcelotSit.java b/RMCClient/minecraft/net/minecraft/src/EntityAIOcelotSit.java
index a959481..a0f0246 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIOcelotSit.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIOcelotSit.java
@@ -3,18 +3,18 @@
 public class EntityAIOcelotSit extends EntityAIBase
 {
 	private final EntityOcelot theOcelot;
-	private final float field_75404_b;
-	private int currentTick = 0;
-	private int field_75402_d = 0;
-	private int maxSittingTicks = 0;
-	private int sitableBlockX = 0;
-	private int sitableBlockY = 0;
-	private int sitableBlockZ = 0;
+	private final double field_75404_b;
+	private int currentTick;
+	private int field_75402_d;
+	private int maxSittingTicks;
+	private int sitableBlockX;
+	private int sitableBlockY;
+	private int sitableBlockZ;
 	
-	public EntityAIOcelotSit(EntityOcelot par1EntityOcelot, float par2)
+	public EntityAIOcelotSit(EntityOcelot p_i1642_1_, double p_i1642_2_)
 	{
-		theOcelot = par1EntityOcelot;
-		field_75404_b = par2;
+		theOcelot = p_i1642_1_;
+		field_75404_b = p_i1642_2_;
 		setMutexBits(5);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIOpenDoor.java b/RMCClient/minecraft/net/minecraft/src/EntityAIOpenDoor.java
index 230a33d..22047cb 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIOpenDoor.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIOpenDoor.java
@@ -5,11 +5,11 @@
 	boolean field_75361_i;
 	int field_75360_j;
 	
-	public EntityAIOpenDoor(EntityLiving par1EntityLiving, boolean par2)
+	public EntityAIOpenDoor(EntityLiving p_i1644_1_, boolean p_i1644_2_)
 	{
-		super(par1EntityLiving);
-		theEntity = par1EntityLiving;
-		field_75361_i = par2;
+		super(p_i1644_1_);
+		theEntity = p_i1644_1_;
+		field_75361_i = p_i1644_2_;
 	}
 	
 	@Override public boolean continueExecuting()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIOwnerHurtByTarget.java b/RMCClient/minecraft/net/minecraft/src/EntityAIOwnerHurtByTarget.java
index 67305f1..fe4b337 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIOwnerHurtByTarget.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIOwnerHurtByTarget.java
@@ -3,12 +3,13 @@
 public class EntityAIOwnerHurtByTarget extends EntityAITarget
 {
 	EntityTameable theDefendingTameable;
-	EntityLiving theOwnerAttacker;
+	EntityLivingBase theOwnerAttacker;
+	private int field_142051_e;
 	
-	public EntityAIOwnerHurtByTarget(EntityTameable par1EntityTameable)
+	public EntityAIOwnerHurtByTarget(EntityTameable p_i1667_1_)
 	{
-		super(par1EntityTameable, 32.0F, false);
-		theDefendingTameable = par1EntityTameable;
+		super(p_i1667_1_, false);
+		theDefendingTameable = p_i1667_1_;
 		setMutexBits(1);
 	}
 	
@@ -17,12 +18,13 @@
 		if(!theDefendingTameable.isTamed()) return false;
 		else
 		{
-			EntityLiving var1 = theDefendingTameable.getOwner();
+			EntityLivingBase var1 = theDefendingTameable.func_130012_q();
 			if(var1 == null) return false;
 			else
 			{
 				theOwnerAttacker = var1.getAITarget();
-				return isSuitableTarget(theOwnerAttacker, false);
+				int var2 = var1.func_142015_aE();
+				return var2 != field_142051_e && isSuitableTarget(theOwnerAttacker, false) && theDefendingTameable.func_142018_a(theOwnerAttacker, var1);
 			}
 		}
 	}
@@ -30,6 +32,11 @@
 	@Override public void startExecuting()
 	{
 		taskOwner.setAttackTarget(theOwnerAttacker);
+		EntityLivingBase var1 = theDefendingTameable.func_130012_q();
+		if(var1 != null)
+		{
+			field_142051_e = var1.func_142015_aE();
+		}
 		super.startExecuting();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIOwnerHurtTarget.java b/RMCClient/minecraft/net/minecraft/src/EntityAIOwnerHurtTarget.java
index 19d5da4..2d66588 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIOwnerHurtTarget.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIOwnerHurtTarget.java
@@ -3,12 +3,13 @@
 public class EntityAIOwnerHurtTarget extends EntityAITarget
 {
 	EntityTameable theEntityTameable;
-	EntityLiving theTarget;
+	EntityLivingBase theTarget;
+	private int field_142050_e;
 	
-	public EntityAIOwnerHurtTarget(EntityTameable par1EntityTameable)
+	public EntityAIOwnerHurtTarget(EntityTameable p_i1668_1_)
 	{
-		super(par1EntityTameable, 32.0F, false);
-		theEntityTameable = par1EntityTameable;
+		super(p_i1668_1_, false);
+		theEntityTameable = p_i1668_1_;
 		setMutexBits(1);
 	}
 	
@@ -17,12 +18,13 @@
 		if(!theEntityTameable.isTamed()) return false;
 		else
 		{
-			EntityLiving var1 = theEntityTameable.getOwner();
+			EntityLivingBase var1 = theEntityTameable.func_130012_q();
 			if(var1 == null) return false;
 			else
 			{
-				theTarget = var1.getLastAttackingEntity();
-				return isSuitableTarget(theTarget, false);
+				theTarget = var1.func_110144_aD();
+				int var2 = var1.func_142013_aG();
+				return var2 != field_142050_e && isSuitableTarget(theTarget, false) && theEntityTameable.func_142018_a(theTarget, var1);
 			}
 		}
 	}
@@ -30,6 +32,11 @@
 	@Override public void startExecuting()
 	{
 		taskOwner.setAttackTarget(theTarget);
+		EntityLivingBase var1 = theEntityTameable.func_130012_q();
+		if(var1 != null)
+		{
+			field_142050_e = var1.func_142013_aG();
+		}
 		super.startExecuting();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIPanic.java b/RMCClient/minecraft/net/minecraft/src/EntityAIPanic.java
index 310ac2c..7268aa2 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIPanic.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIPanic.java
@@ -3,15 +3,15 @@
 public class EntityAIPanic extends EntityAIBase
 {
 	private EntityCreature theEntityCreature;
-	private float speed;
+	private double speed;
 	private double randPosX;
 	private double randPosY;
 	private double randPosZ;
 	
-	public EntityAIPanic(EntityCreature par1EntityCreature, float par2)
+	public EntityAIPanic(EntityCreature p_i1645_1_, double p_i1645_2_)
 	{
-		theEntityCreature = par1EntityCreature;
-		speed = par2;
+		theEntityCreature = p_i1645_1_;
+		speed = p_i1645_2_;
 		setMutexBits(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIPlay.java b/RMCClient/minecraft/net/minecraft/src/EntityAIPlay.java
index c601347..2e7fb4a 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIPlay.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIPlay.java
@@ -6,14 +6,14 @@
 public class EntityAIPlay extends EntityAIBase
 {
 	private EntityVillager villagerObj;
-	private EntityLiving targetVillager;
-	private float field_75261_c;
+	private EntityLivingBase targetVillager;
+	private double field_75261_c;
 	private int playTime;
 	
-	public EntityAIPlay(EntityVillager par1EntityVillager, float par2)
+	public EntityAIPlay(EntityVillager p_i1646_1_, double p_i1646_2_)
 	{
-		villagerObj = par1EntityVillager;
-		field_75261_c = par2;
+		villagerObj = p_i1646_1_;
+		field_75261_c = p_i1646_2_;
 		setMutexBits(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIRestrictOpenDoor.java b/RMCClient/minecraft/net/minecraft/src/EntityAIRestrictOpenDoor.java
index 2f250d1..0f15dfb 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIRestrictOpenDoor.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIRestrictOpenDoor.java
@@ -5,9 +5,9 @@
 	private EntityCreature entityObj;
 	private VillageDoorInfo frontDoor;
 	
-	public EntityAIRestrictOpenDoor(EntityCreature par1EntityCreature)
+	public EntityAIRestrictOpenDoor(EntityCreature p_i1651_1_)
 	{
-		entityObj = par1EntityCreature;
+		entityObj = p_i1651_1_;
 	}
 	
 	@Override public boolean continueExecuting()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIRestrictSun.java b/RMCClient/minecraft/net/minecraft/src/EntityAIRestrictSun.java
index c583576..990d21a 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIRestrictSun.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIRestrictSun.java
@@ -4,9 +4,9 @@
 {
 	private EntityCreature theEntity;
 	
-	public EntityAIRestrictSun(EntityCreature par1EntityCreature)
+	public EntityAIRestrictSun(EntityCreature p_i1652_1_)
 	{
-		theEntity = par1EntityCreature;
+		theEntity = p_i1652_1_;
 	}
 	
 	@Override public void resetTask()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIRunAroundLikeCrazy.java b/RMCClient/minecraft/net/minecraft/src/EntityAIRunAroundLikeCrazy.java
new file mode 100644
index 0000000..c9a6de7
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIRunAroundLikeCrazy.java
@@ -0,0 +1,66 @@
+package net.minecraft.src;
+
+public class EntityAIRunAroundLikeCrazy extends EntityAIBase
+{
+	private EntityHorse field_111180_a;
+	private double field_111178_b;
+	private double field_111179_c;
+	private double field_111176_d;
+	private double field_111177_e;
+	
+	public EntityAIRunAroundLikeCrazy(EntityHorse p_i1653_1_, double p_i1653_2_)
+	{
+		field_111180_a = p_i1653_1_;
+		field_111178_b = p_i1653_2_;
+		setMutexBits(1);
+	}
+	
+	@Override public boolean continueExecuting()
+	{
+		return !field_111180_a.getNavigator().noPath() && field_111180_a.riddenByEntity != null;
+	}
+	
+	@Override public boolean shouldExecute()
+	{
+		if(!field_111180_a.func_110248_bS() && field_111180_a.riddenByEntity != null)
+		{
+			Vec3 var1 = RandomPositionGenerator.findRandomTarget(field_111180_a, 5, 4);
+			if(var1 == null) return false;
+			else
+			{
+				field_111179_c = var1.xCoord;
+				field_111176_d = var1.yCoord;
+				field_111177_e = var1.zCoord;
+				return true;
+			}
+		} else return false;
+	}
+	
+	@Override public void startExecuting()
+	{
+		field_111180_a.getNavigator().tryMoveToXYZ(field_111179_c, field_111176_d, field_111177_e, field_111178_b);
+	}
+	
+	@Override public void updateTask()
+	{
+		if(field_111180_a.getRNG().nextInt(50) == 0)
+		{
+			if(field_111180_a.riddenByEntity instanceof EntityPlayer)
+			{
+				int var1 = field_111180_a.func_110252_cg();
+				int var2 = field_111180_a.func_110218_cm();
+				if(var2 > 0 && field_111180_a.getRNG().nextInt(var2) < var1)
+				{
+					field_111180_a.func_110263_g((EntityPlayer) field_111180_a.riddenByEntity);
+					field_111180_a.worldObj.setEntityState(field_111180_a, (byte) 7);
+					return;
+				}
+				field_111180_a.func_110198_t(5);
+			}
+			field_111180_a.riddenByEntity.mountEntity((Entity) null);
+			field_111180_a.riddenByEntity = null;
+			field_111180_a.func_110231_cz();
+			field_111180_a.worldObj.setEntityState(field_111180_a, (byte) 6);
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAISit.java b/RMCClient/minecraft/net/minecraft/src/EntityAISit.java
index 6ef5d94..1cb9f92 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAISit.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAISit.java
@@ -3,11 +3,11 @@
 public class EntityAISit extends EntityAIBase
 {
 	private EntityTameable theEntity;
-	private boolean isSitting = false;
+	private boolean isSitting;
 	
-	public EntityAISit(EntityTameable par1EntityTameable)
+	public EntityAISit(EntityTameable p_i1654_1_)
 	{
-		theEntity = par1EntityTameable;
+		theEntity = p_i1654_1_;
 		setMutexBits(5);
 	}
 	
@@ -28,7 +28,7 @@
 		else if(!theEntity.onGround) return false;
 		else
 		{
-			EntityLiving var1 = theEntity.getOwner();
+			EntityLivingBase var1 = theEntity.func_130012_q();
 			return var1 == null ? true : theEntity.getDistanceSqToEntity(var1) < 144.0D && var1.getAITarget() != null ? false : isSitting;
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAISwimming.java b/RMCClient/minecraft/net/minecraft/src/EntityAISwimming.java
index b458fc1..78f2c80 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAISwimming.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAISwimming.java
@@ -4,11 +4,11 @@
 {
 	private EntityLiving theEntity;
 	
-	public EntityAISwimming(EntityLiving par1EntityLiving)
+	public EntityAISwimming(EntityLiving p_i1624_1_)
 	{
-		theEntity = par1EntityLiving;
+		theEntity = p_i1624_1_;
 		setMutexBits(4);
-		par1EntityLiving.getNavigator().setCanSwim(true);
+		p_i1624_1_.getNavigator().setCanSwim(true);
 	}
 	
 	@Override public boolean shouldExecute()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAITarget.java b/RMCClient/minecraft/net/minecraft/src/EntityAITarget.java
index e2612db..56a7433 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAITarget.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAITarget.java
@@ -2,50 +2,55 @@
 
 public abstract class EntityAITarget extends EntityAIBase
 {
-	protected EntityLiving taskOwner;
-	protected float targetDistance;
+	protected EntityCreature taskOwner;
 	protected boolean shouldCheckSight;
 	private boolean field_75303_a;
 	private int field_75301_b;
 	private int field_75302_c;
 	private int field_75298_g;
 	
-	public EntityAITarget(EntityLiving par1EntityLiving, float par2, boolean par3)
+	public EntityAITarget(EntityCreature p_i1669_1_, boolean p_i1669_2_)
 	{
-		this(par1EntityLiving, par2, par3, false);
+		this(p_i1669_1_, p_i1669_2_, false);
 	}
 	
-	public EntityAITarget(EntityLiving par1EntityLiving, float par2, boolean par3, boolean par4)
+	public EntityAITarget(EntityCreature p_i1670_1_, boolean p_i1670_2_, boolean p_i1670_3_)
 	{
-		field_75301_b = 0;
-		field_75302_c = 0;
-		field_75298_g = 0;
-		taskOwner = par1EntityLiving;
-		targetDistance = par2;
-		shouldCheckSight = par3;
-		field_75303_a = par4;
+		taskOwner = p_i1670_1_;
+		shouldCheckSight = p_i1670_2_;
+		field_75303_a = p_i1670_3_;
 	}
 	
 	@Override public boolean continueExecuting()
 	{
-		EntityLiving var1 = taskOwner.getAttackTarget();
+		EntityLivingBase var1 = taskOwner.getAttackTarget();
 		if(var1 == null) return false;
 		else if(!var1.isEntityAlive()) return false;
-		else if(taskOwner.getDistanceSqToEntity(var1) > targetDistance * targetDistance) return false;
 		else
 		{
-			if(shouldCheckSight)
+			double var2 = func_111175_f();
+			if(taskOwner.getDistanceSqToEntity(var1) > var2 * var2) return false;
+			else
 			{
-				if(taskOwner.getEntitySenses().canSee(var1))
+				if(shouldCheckSight)
 				{
-					field_75298_g = 0;
-				} else if(++field_75298_g > 60) return false;
+					if(taskOwner.getEntitySenses().canSee(var1))
+					{
+						field_75298_g = 0;
+					} else if(++field_75298_g > 60) return false;
+				}
+				return true;
 			}
-			return true;
 		}
 	}
 	
-	private boolean func_75295_a(EntityLiving par1EntityLiving)
+	protected double func_111175_f()
+	{
+		AttributeInstance var1 = taskOwner.func_110148_a(SharedMonsterAttributes.field_111265_b);
+		return var1 == null ? 16.0D : var1.func_111126_e();
+	}
+	
+	private boolean func_75295_a(EntityLivingBase par1EntityLiving)
 	{
 		field_75302_c = 10 + taskOwner.getRNG().nextInt(5);
 		PathEntity var2 = taskOwner.getNavigator().getPathToEntityLiving(par1EntityLiving);
@@ -63,7 +68,7 @@
 		}
 	}
 	
-	protected boolean isSuitableTarget(EntityLiving par1EntityLiving, boolean par2)
+	protected boolean isSuitableTarget(EntityLivingBase par1EntityLiving, boolean par2)
 	{
 		if(par1EntityLiving == null) return false;
 		else if(par1EntityLiving == taskOwner) return false;
@@ -71,12 +76,12 @@
 		else if(!taskOwner.canAttackClass(par1EntityLiving.getClass())) return false;
 		else
 		{
-			if(taskOwner instanceof EntityTameable && ((EntityTameable) taskOwner).isTamed())
+			if(taskOwner instanceof EntityOwnable && org.apache.commons.lang3.StringUtils.isNotEmpty(((EntityOwnable) taskOwner).getOwnerName()))
 			{
-				if(par1EntityLiving instanceof EntityTameable && ((EntityTameable) par1EntityLiving).isTamed()) return false;
-				if(par1EntityLiving == ((EntityTameable) taskOwner).getOwner()) return false;
+				if(par1EntityLiving instanceof EntityOwnable && ((EntityOwnable) taskOwner).getOwnerName().equals(((EntityOwnable) par1EntityLiving).getOwnerName())) return false;
+				if(par1EntityLiving == ((EntityOwnable) taskOwner).getOwner()) return false;
 			} else if(par1EntityLiving instanceof EntityPlayer && !par2 && ((EntityPlayer) par1EntityLiving).capabilities.disableDamage) return false;
-			if(!taskOwner.isWithinHomeDistance(MathHelper.floor_double(par1EntityLiving.posX), MathHelper.floor_double(par1EntityLiving.posY), MathHelper.floor_double(par1EntityLiving.posZ))) return false;
+			if(!taskOwner.func_110176_b(MathHelper.floor_double(par1EntityLiving.posX), MathHelper.floor_double(par1EntityLiving.posY), MathHelper.floor_double(par1EntityLiving.posZ))) return false;
 			else if(shouldCheckSight && !taskOwner.getEntitySenses().canSee(par1EntityLiving)) return false;
 			else
 			{
@@ -99,7 +104,7 @@
 	
 	@Override public void resetTask()
 	{
-		taskOwner.setAttackTarget((EntityLiving) null);
+		taskOwner.setAttackTarget((EntityLivingBase) null);
 	}
 	
 	@Override public void startExecuting()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAITargetNonTamed.java b/RMCClient/minecraft/net/minecraft/src/EntityAITargetNonTamed.java
index 49d3f5d..e320c6c 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAITargetNonTamed.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAITargetNonTamed.java
@@ -4,14 +4,14 @@
 {
 	private EntityTameable theTameable;
 	
-	public EntityAITargetNonTamed(EntityTameable par1EntityTameable, Class par2Class, float par3, int par4, boolean par5)
+	public EntityAITargetNonTamed(EntityTameable p_i1666_1_, Class p_i1666_2_, int p_i1666_3_, boolean p_i1666_4_)
 	{
-		super(par1EntityTameable, par2Class, par3, par4, par5);
-		theTameable = par1EntityTameable;
+		super(p_i1666_1_, p_i1666_2_, p_i1666_3_, p_i1666_4_);
+		theTameable = p_i1666_1_;
 	}
 	
 	@Override public boolean shouldExecute()
 	{
-		return theTameable.isTamed() ? false : super.shouldExecute();
+		return !theTameable.isTamed() && super.shouldExecute();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAITaskEntry.java b/RMCClient/minecraft/net/minecraft/src/EntityAITaskEntry.java
index 9799431..d939f27 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAITaskEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAITaskEntry.java
@@ -6,10 +6,10 @@
 	public int priority;
 	final EntityAITasks tasks;
 	
-	public EntityAITaskEntry(EntityAITasks par1EntityAITasks, int par2, EntityAIBase par3EntityAIBase)
+	public EntityAITaskEntry(EntityAITasks p_i1627_1_, int p_i1627_2_, EntityAIBase p_i1627_3_)
 	{
-		tasks = par1EntityAITasks;
-		priority = par2;
-		action = par3EntityAIBase;
+		tasks = p_i1627_1_;
+		priority = p_i1627_2_;
+		action = p_i1627_3_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAITasks.java b/RMCClient/minecraft/net/minecraft/src/EntityAITasks.java
index f684899..e6a0f7e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAITasks.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAITasks.java
@@ -9,12 +9,12 @@
 	private List taskEntries = new ArrayList();
 	private List executingTaskEntries = new ArrayList();
 	private final Profiler theProfiler;
-	private int field_75778_d = 0;
+	private int field_75778_d;
 	private int field_75779_e = 3;
 	
-	public EntityAITasks(Profiler par1Profiler)
+	public EntityAITasks(Profiler p_i1628_1_)
 	{
-		theProfiler = par1Profiler;
+		theProfiler = p_i1628_1_;
 	}
 	
 	public void addTask(int par1, EntityAIBase par2EntityAIBase)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAITempt.java b/RMCClient/minecraft/net/minecraft/src/EntityAITempt.java
index f4cde53..76e137d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAITempt.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAITempt.java
@@ -3,25 +3,25 @@
 public class EntityAITempt extends EntityAIBase
 {
 	private EntityCreature temptedEntity;
-	private float field_75282_b;
+	private double field_75282_b;
 	private double field_75283_c;
 	private double field_75280_d;
 	private double field_75281_e;
 	private double field_75278_f;
 	private double field_75279_g;
 	private EntityPlayer temptingPlayer;
-	private int delayTemptCounter = 0;
+	private int delayTemptCounter;
 	private boolean field_75287_j;
 	private int breedingFood;
 	private boolean scaredByPlayerMovement;
 	private boolean field_75286_m;
 	
-	public EntityAITempt(EntityCreature par1EntityCreature, float par2, int par3, boolean par4)
+	public EntityAITempt(EntityCreature p_i1657_1_, double p_i1657_2_, int p_i1657_4_, boolean p_i1657_5_)
 	{
-		temptedEntity = par1EntityCreature;
-		field_75282_b = par2;
-		breedingFood = par3;
-		scaredByPlayerMovement = par4;
+		temptedEntity = p_i1657_1_;
+		field_75282_b = p_i1657_2_;
+		breedingFood = p_i1657_4_;
+		scaredByPlayerMovement = p_i1657_5_;
 		setMutexBits(3);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAITradePlayer.java b/RMCClient/minecraft/net/minecraft/src/EntityAITradePlayer.java
index 6ba848a..b2b1a52 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAITradePlayer.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAITradePlayer.java
@@ -4,9 +4,9 @@
 {
 	private EntityVillager villager;
 	
-	public EntityAITradePlayer(EntityVillager par1EntityVillager)
+	public EntityAITradePlayer(EntityVillager p_i1658_1_)
 	{
-		villager = par1EntityVillager;
+		villager = p_i1658_1_;
 		setMutexBits(5);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIVillagerMate.java b/RMCClient/minecraft/net/minecraft/src/EntityAIVillagerMate.java
index 791ee48..5d7c99e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIVillagerMate.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIVillagerMate.java
@@ -5,13 +5,13 @@
 	private EntityVillager villagerObj;
 	private EntityVillager mate;
 	private World worldObj;
-	private int matingTimeout = 0;
+	private int matingTimeout;
 	Village villageObj;
 	
-	public EntityAIVillagerMate(EntityVillager par1EntityVillager)
+	public EntityAIVillagerMate(EntityVillager p_i1634_1_)
 	{
-		villagerObj = par1EntityVillager;
-		worldObj = par1EntityVillager.worldObj;
+		villagerObj = p_i1634_1_;
+		worldObj = p_i1634_1_.worldObj;
 		setMutexBits(3);
 	}
 	
@@ -82,7 +82,7 @@
 		villagerObj.getLookHelper().setLookPositionWithEntity(mate, 10.0F, 30.0F);
 		if(villagerObj.getDistanceSqToEntity(mate) > 2.25D)
 		{
-			villagerObj.getNavigator().tryMoveToEntityLiving(mate, 0.25F);
+			villagerObj.getNavigator().tryMoveToEntityLiving(mate, 0.25D);
 		} else if(matingTimeout == 0 && mate.isMating())
 		{
 			giveBirth();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIWander.java b/RMCClient/minecraft/net/minecraft/src/EntityAIWander.java
index 29a93e3..3a7c30d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIWander.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIWander.java
@@ -6,12 +6,12 @@
 	private double xPosition;
 	private double yPosition;
 	private double zPosition;
-	private float speed;
+	private double speed;
 	
-	public EntityAIWander(EntityCreature par1EntityCreature, float par2)
+	public EntityAIWander(EntityCreature p_i1648_1_, double p_i1648_2_)
 	{
-		entity = par1EntityCreature;
-		speed = par2;
+		entity = p_i1648_1_;
+		speed = p_i1648_2_;
 		setMutexBits(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIWatchClosest.java b/RMCClient/minecraft/net/minecraft/src/EntityAIWatchClosest.java
index c813db0..a7dc39b 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIWatchClosest.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIWatchClosest.java
@@ -9,21 +9,21 @@
 	private float field_75331_e;
 	private Class watchedClass;
 	
-	public EntityAIWatchClosest(EntityLiving par1EntityLiving, Class par2Class, float par3)
+	public EntityAIWatchClosest(EntityLiving p_i1631_1_, Class p_i1631_2_, float p_i1631_3_)
 	{
-		theWatcher = par1EntityLiving;
-		watchedClass = par2Class;
-		field_75333_c = par3;
+		theWatcher = p_i1631_1_;
+		watchedClass = p_i1631_2_;
+		field_75333_c = p_i1631_3_;
 		field_75331_e = 0.02F;
 		setMutexBits(2);
 	}
 	
-	public EntityAIWatchClosest(EntityLiving par1EntityLiving, Class par2Class, float par3, float par4)
+	public EntityAIWatchClosest(EntityLiving p_i1632_1_, Class p_i1632_2_, float p_i1632_3_, float p_i1632_4_)
 	{
-		theWatcher = par1EntityLiving;
-		watchedClass = par2Class;
-		field_75333_c = par3;
-		field_75331_e = par4;
+		theWatcher = p_i1632_1_;
+		watchedClass = p_i1632_2_;
+		field_75333_c = p_i1632_3_;
+		field_75331_e = p_i1632_4_;
 		setMutexBits(2);
 	}
 	
@@ -42,6 +42,10 @@
 		if(theWatcher.getRNG().nextFloat() >= field_75331_e) return false;
 		else
 		{
+			if(theWatcher.getAttackTarget() != null)
+			{
+				closestEntity = theWatcher.getAttackTarget();
+			}
 			if(watchedClass == EntityPlayer.class)
 			{
 				closestEntity = theWatcher.worldObj.getClosestPlayerToEntity(theWatcher, field_75333_c);
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAIWatchClosest2.java b/RMCClient/minecraft/net/minecraft/src/EntityAIWatchClosest2.java
index 78a0ef6..ff61ba7 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAIWatchClosest2.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAIWatchClosest2.java
@@ -2,9 +2,9 @@
 
 public class EntityAIWatchClosest2 extends EntityAIWatchClosest
 {
-	public EntityAIWatchClosest2(EntityLiving par1EntityLiving, Class par2Class, float par3, float par4)
+	public EntityAIWatchClosest2(EntityLiving p_i1629_1_, Class p_i1629_2_, float p_i1629_3_, float p_i1629_4_)
 	{
-		super(par1EntityLiving, par2Class, par3, par4);
+		super(p_i1629_1_, p_i1629_2_, p_i1629_3_, p_i1629_4_);
 		setMutexBits(3);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAgeable.java b/RMCClient/minecraft/net/minecraft/src/EntityAgeable.java
index e358457..2e75bb4 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAgeable.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAgeable.java
@@ -5,9 +5,9 @@
 	private float field_98056_d = -1.0F;
 	private float field_98057_e;
 	
-	public EntityAgeable(World par1World)
+	public EntityAgeable(World p_i1578_1_)
 	{
-		super(par1World);
+		super(p_i1578_1_);
 	}
 	
 	public abstract EntityAgeable createChild(EntityAgeable var1);
@@ -18,12 +18,23 @@
 		dataWatcher.addObject(12, new Integer(0));
 	}
 	
+	public void func_110195_a(int p_110195_1_)
+	{
+		int var2 = getGrowingAge();
+		var2 += p_110195_1_ * 20;
+		if(var2 > 0)
+		{
+			var2 = 0;
+		}
+		setGrowingAge(var2);
+	}
+	
 	public void func_98054_a(boolean par1)
 	{
 		func_98055_j(par1 ? 0.5F : 1.0F);
 	}
 	
-	private void func_98055_j(float par1)
+	protected final void func_98055_j(float par1)
 	{
 		super.setSize(field_98056_d * par1, field_98057_e * par1);
 	}
@@ -36,33 +47,36 @@
 	@Override public boolean interact(EntityPlayer par1EntityPlayer)
 	{
 		ItemStack var2 = par1EntityPlayer.inventory.getCurrentItem();
-		if(var2 != null && var2.itemID == Item.monsterPlacer.itemID && !worldObj.isRemote)
+		if(var2 != null && var2.itemID == Item.monsterPlacer.itemID)
 		{
-			Class var3 = EntityList.getClassFromID(var2.getItemDamage());
-			if(var3 != null && var3.isAssignableFrom(this.getClass()))
+			if(!worldObj.isRemote)
 			{
-				EntityAgeable var4 = createChild(this);
-				if(var4 != null)
+				Class var3 = EntityList.getClassFromID(var2.getItemDamage());
+				if(var3 != null && var3.isAssignableFrom(this.getClass()))
 				{
-					var4.setGrowingAge(-24000);
-					var4.setLocationAndAngles(posX, posY, posZ, 0.0F, 0.0F);
-					worldObj.spawnEntityInWorld(var4);
-					if(var2.hasDisplayName())
+					EntityAgeable var4 = createChild(this);
+					if(var4 != null)
 					{
-						var4.func_94058_c(var2.getDisplayName());
-					}
-					if(!par1EntityPlayer.capabilities.isCreativeMode)
-					{
-						--var2.stackSize;
-						if(var2.stackSize <= 0)
+						var4.setGrowingAge(-24000);
+						var4.setLocationAndAngles(posX, posY, posZ, 0.0F, 0.0F);
+						worldObj.spawnEntityInWorld(var4);
+						if(var2.hasDisplayName())
 						{
-							par1EntityPlayer.inventory.setInventorySlotContents(par1EntityPlayer.inventory.currentItem, (ItemStack) null);
+							var4.func_94058_c(var2.getDisplayName());
+						}
+						if(!par1EntityPlayer.capabilities.isCreativeMode)
+						{
+							--var2.stackSize;
+							if(var2.stackSize <= 0)
+							{
+								par1EntityPlayer.inventory.setInventorySlotContents(par1EntityPlayer.inventory.currentItem, (ItemStack) null);
+							}
 						}
 					}
 				}
 			}
-		}
-		return super.interact(par1EntityPlayer);
+			return true;
+		} else return false;
 	}
 	
 	@Override public boolean isChild()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAmbientCreature.java b/RMCClient/minecraft/net/minecraft/src/EntityAmbientCreature.java
index 8f49fce..d48f66a 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAmbientCreature.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAmbientCreature.java
@@ -2,8 +2,18 @@
 
 public abstract class EntityAmbientCreature extends EntityLiving implements IAnimals
 {
-	public EntityAmbientCreature(World par1World)
+	public EntityAmbientCreature(World p_i1679_1_)
 	{
-		super(par1World);
+		super(p_i1679_1_);
+	}
+	
+	@Override public boolean func_110164_bC()
+	{
+		return false;
+	}
+	
+	@Override protected boolean interact(EntityPlayer par1EntityPlayer)
+	{
+		return false;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAnimal.java b/RMCClient/minecraft/net/minecraft/src/EntityAnimal.java
index bfdf6e3..39f0521 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAnimal.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAnimal.java
@@ -5,11 +5,11 @@
 public abstract class EntityAnimal extends EntityAgeable implements IAnimals
 {
 	private int inLove;
-	private int breeding = 0;
+	private int breeding;
 	
-	public EntityAnimal(World par1World)
+	public EntityAnimal(World p_i1681_1_)
 	{
-		super(par1World);
+		super(p_i1681_1_);
 	}
 	
 	@Override protected void attackEntity(Entity par1Entity, float par2)
@@ -68,12 +68,20 @@
 		}
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
 		{
 			fleeingTick = 60;
+			if(!isAIEnabled())
+			{
+				AttributeInstance var3 = func_110148_a(SharedMonsterAttributes.field_111263_d);
+				if(var3.func_111127_a(field_110179_h) == null)
+				{
+					var3.func_111121_a(field_110181_i);
+				}
+			}
 			entityToAttack = null;
 			inLove = 0;
 			return super.attackEntityFrom(par1DamageSource, par2);
@@ -128,6 +136,13 @@
 		}
 	}
 	
+	public void func_110196_bT()
+	{
+		inLove = 600;
+		entityToAttack = null;
+		worldObj.setEntityState(this, (byte) 18);
+	}
+	
 	@Override public float getBlockPathWeight(int par1, int par2, int par3)
 	{
 		return worldObj.getBlockId(par1, par2 - 1, par3) == Block.grass.blockID ? 10.0F : worldObj.getLightBrightness(par1, par2, par3) - 0.5F;
@@ -151,6 +166,23 @@
 		return 120;
 	}
 	
+	@Override public void handleHealthUpdate(byte par1)
+	{
+		if(par1 == 18)
+		{
+			for(int var2 = 0; var2 < 7; ++var2)
+			{
+				double var3 = rand.nextGaussian() * 0.02D;
+				double var5 = rand.nextGaussian() * 0.02D;
+				double var7 = rand.nextGaussian() * 0.02D;
+				worldObj.spawnParticle("heart", posX + rand.nextFloat() * width * 2.0F - width, posY + 0.5D + rand.nextFloat() * height, posZ + rand.nextFloat() * width * 2.0F - width, var3, var5, var7);
+			}
+		} else
+		{
+			super.handleHealthUpdate(par1);
+		}
+	}
+	
 	@Override public boolean interact(EntityPlayer par1EntityPlayer)
 	{
 		ItemStack var2 = par1EntityPlayer.inventory.getCurrentItem();
@@ -164,15 +196,7 @@
 					par1EntityPlayer.inventory.setInventorySlotContents(par1EntityPlayer.inventory.currentItem, (ItemStack) null);
 				}
 			}
-			inLove = 600;
-			entityToAttack = null;
-			for(int var3 = 0; var3 < 7; ++var3)
-			{
-				double var4 = rand.nextGaussian() * 0.02D;
-				double var6 = rand.nextGaussian() * 0.02D;
-				double var8 = rand.nextGaussian() * 0.02D;
-				worldObj.spawnParticle("heart", posX + rand.nextFloat() * width * 2.0F - width, posY + 0.5D + rand.nextFloat() * height, posZ + rand.nextFloat() * width * 2.0F - width, var4, var6, var8);
-			}
+			func_110196_bT();
 			return true;
 		} else return super.interact(par1EntityPlayer);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityArrow.java b/RMCClient/minecraft/net/minecraft/src/EntityArrow.java
index e0a9920..69b7482 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityArrow.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityArrow.java
@@ -7,46 +7,46 @@
 	private int xTile = -1;
 	private int yTile = -1;
 	private int zTile = -1;
-	private int inTile = 0;
-	private int inData = 0;
-	private boolean inGround = false;
-	public int canBePickedUp = 0;
-	public int arrowShake = 0;
+	private int inTile;
+	private int inData;
+	private boolean inGround;
+	public int canBePickedUp;
+	public int arrowShake;
 	public Entity shootingEntity;
 	private int ticksInGround;
-	private int ticksInAir = 0;
+	private int ticksInAir;
 	private double damage = 2.0D;
 	private int knockbackStrength;
 	
-	public EntityArrow(World par1World)
+	public EntityArrow(World p_i1753_1_)
 	{
-		super(par1World);
+		super(p_i1753_1_);
 		renderDistanceWeight = 10.0D;
 		setSize(0.5F, 0.5F);
 	}
 	
-	public EntityArrow(World par1World, double par2, double par4, double par6)
+	public EntityArrow(World p_i1754_1_, double p_i1754_2_, double p_i1754_4_, double p_i1754_6_)
 	{
-		super(par1World);
+		super(p_i1754_1_);
 		renderDistanceWeight = 10.0D;
 		setSize(0.5F, 0.5F);
-		setPosition(par2, par4, par6);
+		setPosition(p_i1754_2_, p_i1754_4_, p_i1754_6_);
 		yOffset = 0.0F;
 	}
 	
-	public EntityArrow(World par1World, EntityLiving par2EntityLiving, EntityLiving par3EntityLiving, float par4, float par5)
+	public EntityArrow(World p_i1755_1_, EntityLivingBase p_i1755_2_, EntityLivingBase p_i1755_3_, float p_i1755_4_, float p_i1755_5_)
 	{
-		super(par1World);
+		super(p_i1755_1_);
 		renderDistanceWeight = 10.0D;
-		shootingEntity = par2EntityLiving;
-		if(par2EntityLiving instanceof EntityPlayer)
+		shootingEntity = p_i1755_2_;
+		if(p_i1755_2_ instanceof EntityPlayer)
 		{
 			canBePickedUp = 1;
 		}
-		posY = par2EntityLiving.posY + par2EntityLiving.getEyeHeight() - 0.10000000149011612D;
-		double var6 = par3EntityLiving.posX - par2EntityLiving.posX;
-		double var8 = par3EntityLiving.boundingBox.minY + par3EntityLiving.height / 3.0F - posY;
-		double var10 = par3EntityLiving.posZ - par2EntityLiving.posZ;
+		posY = p_i1755_2_.posY + p_i1755_2_.getEyeHeight() - 0.10000000149011612D;
+		double var6 = p_i1755_3_.posX - p_i1755_2_.posX;
+		double var8 = p_i1755_3_.boundingBox.minY + p_i1755_3_.height / 3.0F - posY;
+		double var10 = p_i1755_3_.posZ - p_i1755_2_.posZ;
 		double var12 = MathHelper.sqrt_double(var6 * var6 + var10 * var10);
 		if(var12 >= 1.0E-7D)
 		{
@@ -54,24 +54,24 @@
 			float var15 = (float) -(Math.atan2(var8, var12) * 180.0D / Math.PI);
 			double var16 = var6 / var12;
 			double var18 = var10 / var12;
-			setLocationAndAngles(par2EntityLiving.posX + var16, posY, par2EntityLiving.posZ + var18, var14, var15);
+			setLocationAndAngles(p_i1755_2_.posX + var16, posY, p_i1755_2_.posZ + var18, var14, var15);
 			yOffset = 0.0F;
 			float var20 = (float) var12 * 0.2F;
-			setThrowableHeading(var6, var8 + var20, var10, par4, par5);
+			setThrowableHeading(var6, var8 + var20, var10, p_i1755_4_, p_i1755_5_);
 		}
 	}
 	
-	public EntityArrow(World par1World, EntityLiving par2EntityLiving, float par3)
+	public EntityArrow(World p_i1756_1_, EntityLivingBase p_i1756_2_, float p_i1756_3_)
 	{
-		super(par1World);
+		super(p_i1756_1_);
 		renderDistanceWeight = 10.0D;
-		shootingEntity = par2EntityLiving;
-		if(par2EntityLiving instanceof EntityPlayer)
+		shootingEntity = p_i1756_2_;
+		if(p_i1756_2_ instanceof EntityPlayer)
 		{
 			canBePickedUp = 1;
 		}
 		setSize(0.5F, 0.5F);
-		setLocationAndAngles(par2EntityLiving.posX, par2EntityLiving.posY + par2EntityLiving.getEyeHeight(), par2EntityLiving.posZ, par2EntityLiving.rotationYaw, par2EntityLiving.rotationPitch);
+		setLocationAndAngles(p_i1756_2_.posX, p_i1756_2_.posY + p_i1756_2_.getEyeHeight(), p_i1756_2_.posZ, p_i1756_2_.rotationYaw, p_i1756_2_.rotationPitch);
 		posX -= MathHelper.cos(rotationYaw / 180.0F * (float) Math.PI) * 0.16F;
 		posY -= 0.10000000149011612D;
 		posZ -= MathHelper.sin(rotationYaw / 180.0F * (float) Math.PI) * 0.16F;
@@ -80,7 +80,7 @@
 		motionX = -MathHelper.sin(rotationYaw / 180.0F * (float) Math.PI) * MathHelper.cos(rotationPitch / 180.0F * (float) Math.PI);
 		motionZ = MathHelper.cos(rotationYaw / 180.0F * (float) Math.PI) * MathHelper.cos(rotationPitch / 180.0F * (float) Math.PI);
 		motionY = -MathHelper.sin(rotationPitch / 180.0F * (float) Math.PI);
-		setThrowableHeading(motionX, motionY, motionZ, par3 * 1.5F, 1.0F);
+		setThrowableHeading(motionX, motionY, motionZ, p_i1756_3_ * 1.5F, 1.0F);
 	}
 	
 	@Override public boolean canAttackWithItem()
@@ -249,9 +249,9 @@
 					}
 					if(var4.entityHit.attackEntityFrom(var22, var24))
 					{
-						if(var4.entityHit instanceof EntityLiving)
+						if(var4.entityHit instanceof EntityLivingBase)
 						{
-							EntityLiving var25 = (EntityLiving) var4.entityHit;
+							EntityLivingBase var25 = (EntityLivingBase) var4.entityHit;
 							if(!worldObj.isRemote)
 							{
 								var25.setArrowCountInEntity(var25.getArrowCountInEntity() + 1);
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityAuraFX.java b/RMCClient/minecraft/net/minecraft/src/EntityAuraFX.java
index ae9015b..cd7c933 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityAuraFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityAuraFX.java
@@ -2,9 +2,9 @@
 
 public class EntityAuraFX extends EntityFX
 {
-	public EntityAuraFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityAuraFX(World p_i1232_1_, double p_i1232_2_, double p_i1232_4_, double p_i1232_6_, double p_i1232_8_, double p_i1232_10_, double p_i1232_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
+		super(p_i1232_1_, p_i1232_2_, p_i1232_4_, p_i1232_6_, p_i1232_8_, p_i1232_10_, p_i1232_12_);
 		float var14 = rand.nextFloat() * 0.1F + 0.2F;
 		particleRed = var14;
 		particleGreen = var14;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityBat.java b/RMCClient/minecraft/net/minecraft/src/EntityBat.java
index e7c21fd..2ad26c4 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityBat.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityBat.java
@@ -6,15 +6,14 @@
 {
 	private ChunkCoordinates currentFlightTarget;
 	
-	public EntityBat(World par1World)
+	public EntityBat(World p_i1680_1_)
 	{
-		super(par1World);
-		texture = "/mob/bat.png";
+		super(p_i1680_1_);
 		setSize(0.5F, 0.9F);
 		setIsBatHanging(true);
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -54,6 +53,12 @@
 	
 	@Override protected void fall(float par1)
 	{
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(6.0D);
 	}
 	
 	@Override protected void func_85033_bc()
@@ -102,11 +107,6 @@
 		return getIsBatHanging() && rand.nextInt(4) != 0 ? null : "mob.bat.idle";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 6;
-	}
-	
 	@Override protected float getSoundPitch()
 	{
 		return super.getSoundPitch() * 0.95F;
@@ -115,10 +115,6 @@
 	@Override protected float getSoundVolume()
 	{
 		return 0.1F;
-	}
-	
-	@Override public void initCreature()
-	{
 	}
 	
 	@Override protected boolean isAIEnabled()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityBlaze.java b/RMCClient/minecraft/net/minecraft/src/EntityBlaze.java
index eda433d..9e4f5d1 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityBlaze.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityBlaze.java
@@ -6,10 +6,9 @@
 	private int heightOffsetUpdateTime;
 	private int field_70846_g;
 	
-	public EntityBlaze(World par1World)
+	public EntityBlaze(World p_i1731_1_)
 	{
-		super(par1World);
-		texture = "/mob/fire.png";
+		super(p_i1731_1_);
 		isImmuneToFire = true;
 		experienceValue = 10;
 	}
@@ -80,6 +79,12 @@
 	{
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(6.0D);
+	}
+	
 	public void func_70844_e(boolean par1)
 	{
 		byte var2 = dataWatcher.getWatchableObjectByte(16);
@@ -96,11 +101,6 @@
 	public boolean func_70845_n()
 	{
 		return (dataWatcher.getWatchableObjectByte(16) & 1) != 0;
-	}
-	
-	@Override public int getAttackStrength(Entity par1Entity)
-	{
-		return 6;
 	}
 	
 	@Override public float getBrightness(float par1)
@@ -133,11 +133,6 @@
 		return "mob.blaze.breathe";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 20;
-	}
-	
 	@Override public boolean isBurning()
 	{
 		return func_70845_n();
@@ -154,7 +149,7 @@
 		{
 			if(isWet())
 			{
-				attackEntityFrom(DamageSource.drown, 1);
+				attackEntityFrom(DamageSource.drown, 1.0F);
 			}
 			--heightOffsetUpdateTime;
 			if(heightOffsetUpdateTime <= 0)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityBoat.java b/RMCClient/minecraft/net/minecraft/src/EntityBoat.java
index 23e891d..97bd153 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityBoat.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityBoat.java
@@ -16,9 +16,9 @@
 	private double velocityY;
 	private double velocityZ;
 	
-	public EntityBoat(World par1World)
+	public EntityBoat(World p_i1704_1_)
 	{
-		super(par1World);
+		super(p_i1704_1_);
 		field_70279_a = true;
 		speedMultiplier = 0.07D;
 		preventEntitySpawning = true;
@@ -26,29 +26,29 @@
 		yOffset = height / 2.0F;
 	}
 	
-	public EntityBoat(World par1World, double par2, double par4, double par6)
+	public EntityBoat(World p_i1705_1_, double p_i1705_2_, double p_i1705_4_, double p_i1705_6_)
 	{
-		this(par1World);
-		setPosition(par2, par4 + yOffset, par6);
+		this(p_i1705_1_);
+		setPosition(p_i1705_2_, p_i1705_4_ + yOffset, p_i1705_6_);
 		motionX = 0.0D;
 		motionY = 0.0D;
 		motionZ = 0.0D;
-		prevPosX = par2;
-		prevPosY = par4;
-		prevPosZ = par6;
+		prevPosX = p_i1705_2_;
+		prevPosY = p_i1705_4_;
+		prevPosZ = p_i1705_6_;
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else if(!worldObj.isRemote && !isDead)
 		{
 			setForwardDirection(-getForwardDirection());
 			setTimeSinceHit(10);
-			setDamageTaken(getDamageTaken() + par2 * 10);
+			setDamageTaken(getDamageTaken() + par2 * 10.0F);
 			setBeenAttacked();
 			boolean var3 = par1DamageSource.getEntity() instanceof EntityPlayer && ((EntityPlayer) par1DamageSource.getEntity()).capabilities.isCreativeMode;
-			if(var3 || getDamageTaken() > 40)
+			if(var3 || getDamageTaken() > 40.0F)
 			{
 				if(riddenByEntity != null)
 				{
@@ -83,7 +83,20 @@
 	{
 		dataWatcher.addObject(17, new Integer(0));
 		dataWatcher.addObject(18, new Integer(1));
-		dataWatcher.addObject(19, new Integer(0));
+		dataWatcher.addObject(19, new Float(0.0F));
+	}
+	
+	@Override public boolean func_130002_c(EntityPlayer p_130002_1_)
+	{
+		if(riddenByEntity != null && riddenByEntity instanceof EntityPlayer && riddenByEntity != p_130002_1_) return true;
+		else
+		{
+			if(!worldObj.isRemote)
+			{
+				p_130002_1_.mountEntity(this);
+			}
+			return true;
+		}
 	}
 	
 	public void func_70270_d(boolean par1)
@@ -101,9 +114,9 @@
 		return par1Entity.boundingBox;
 	}
 	
-	public int getDamageTaken()
+	public float getDamageTaken()
 	{
-		return dataWatcher.getWatchableObjectInt(19);
+		return dataWatcher.func_111145_d(19);
 	}
 	
 	public int getForwardDirection()
@@ -126,19 +139,6 @@
 		return dataWatcher.getWatchableObjectInt(17);
 	}
 	
-	@Override public boolean interact(EntityPlayer par1EntityPlayer)
-	{
-		if(riddenByEntity != null && riddenByEntity instanceof EntityPlayer && riddenByEntity != par1EntityPlayer) return true;
-		else
-		{
-			if(!worldObj.isRemote)
-			{
-				par1EntityPlayer.mountEntity(this);
-			}
-			return true;
-		}
-	}
-	
 	@Override public void onUpdate()
 	{
 		super.onUpdate();
@@ -146,9 +146,9 @@
 		{
 			setTimeSinceHit(getTimeSinceHit() - 1);
 		}
-		if(getDamageTaken() > 0)
+		if(getDamageTaken() > 0.0F)
 		{
-			setDamageTaken(getDamageTaken() - 1);
+			setDamageTaken(getDamageTaken() - 1.0F);
 		}
 		prevPosX = posX;
 		prevPosY = posY;
@@ -236,10 +236,16 @@
 				}
 				motionY += 0.007000000216066837D;
 			}
-			if(riddenByEntity != null)
+			if(riddenByEntity != null && riddenByEntity instanceof EntityLivingBase)
 			{
-				motionX += riddenByEntity.motionX * speedMultiplier;
-				motionZ += riddenByEntity.motionZ * speedMultiplier;
+				var6 = ((EntityLivingBase) riddenByEntity).moveForward;
+				if(var6 > 0.0D)
+				{
+					var8 = -Math.sin(riddenByEntity.rotationYaw * (float) Math.PI / 180.0F);
+					var25 = Math.cos(riddenByEntity.rotationYaw * (float) Math.PI / 180.0F);
+					motionX += var8 * speedMultiplier * 0.05000000074505806D;
+					motionZ += var25 * speedMultiplier * 0.05000000074505806D;
+				}
 			}
 			var6 = Math.sqrt(motionX * motionX + motionZ * motionZ);
 			if(var6 > 0.35D)
@@ -355,16 +361,16 @@
 	{
 		setForwardDirection(-getForwardDirection());
 		setTimeSinceHit(10);
-		setDamageTaken(getDamageTaken() * 11);
+		setDamageTaken(getDamageTaken() * 11.0F);
 	}
 	
 	@Override protected void readEntityFromNBT(NBTTagCompound par1NBTTagCompound)
 	{
 	}
 	
-	public void setDamageTaken(int par1)
+	public void setDamageTaken(float par1)
 	{
-		dataWatcher.updateObject(19, Integer.valueOf(par1));
+		dataWatcher.updateObject(19, Float.valueOf(par1));
 	}
 	
 	public void setForwardDirection(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityBodyHelper.java b/RMCClient/minecraft/net/minecraft/src/EntityBodyHelper.java
index 3fc8054..0d7dff0 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityBodyHelper.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityBodyHelper.java
@@ -2,13 +2,13 @@
 
 public class EntityBodyHelper
 {
-	private EntityLiving theLiving;
-	private int field_75666_b = 0;
-	private float field_75667_c = 0.0F;
+	private EntityLivingBase theLiving;
+	private int field_75666_b;
+	private float field_75667_c;
 	
-	public EntityBodyHelper(EntityLiving par1EntityLiving)
+	public EntityBodyHelper(EntityLivingBase p_i1611_1_)
 	{
-		theLiving = par1EntityLiving;
+		theLiving = p_i1611_1_;
 	}
 	
 	public void func_75664_a()
@@ -31,6 +31,7 @@
 			} else
 			{
 				++field_75666_b;
+				boolean var6 = true;
 				if(field_75666_b > 10)
 				{
 					var5 = Math.max(1.0F - (field_75666_b - 10) / 10.0F, 0.0F) * 75.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityBreakingFX.java b/RMCClient/minecraft/net/minecraft/src/EntityBreakingFX.java
index 9c614d1..ae5623e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityBreakingFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityBreakingFX.java
@@ -2,21 +2,26 @@
 
 public class EntityBreakingFX extends EntityFX
 {
-	public EntityBreakingFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, Item par14Item, RenderEngine par15RenderEngine)
+	public EntityBreakingFX(World p_i1197_1_, double p_i1197_2_, double p_i1197_4_, double p_i1197_6_, double p_i1197_8_, double p_i1197_10_, double p_i1197_12_, Item p_i1197_14_, int p_i1197_15_)
 	{
-		this(par1World, par2, par4, par6, par14Item, par15RenderEngine);
+		this(p_i1197_1_, p_i1197_2_, p_i1197_4_, p_i1197_6_, p_i1197_14_, p_i1197_15_);
 		motionX *= 0.10000000149011612D;
 		motionY *= 0.10000000149011612D;
 		motionZ *= 0.10000000149011612D;
-		motionX += par8;
-		motionY += par10;
-		motionZ += par12;
+		motionX += p_i1197_8_;
+		motionY += p_i1197_10_;
+		motionZ += p_i1197_12_;
 	}
 	
-	public EntityBreakingFX(World par1World, double par2, double par4, double par6, Item par8Item, RenderEngine par9RenderEngine)
+	public EntityBreakingFX(World p_i1195_1_, double p_i1195_2_, double p_i1195_4_, double p_i1195_6_, Item p_i1195_8_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
-		setParticleIcon(par9RenderEngine, par8Item.getIconFromDamage(0));
+		this(p_i1195_1_, p_i1195_2_, p_i1195_4_, p_i1195_6_, p_i1195_8_, 0);
+	}
+	
+	public EntityBreakingFX(World p_i1196_1_, double p_i1196_2_, double p_i1196_4_, double p_i1196_6_, Item p_i1196_8_, int p_i1196_9_)
+	{
+		super(p_i1196_1_, p_i1196_2_, p_i1196_4_, p_i1196_6_, 0.0D, 0.0D, 0.0D);
+		func_110125_a(p_i1196_8_.getIconFromDamage(p_i1196_9_));
 		particleRed = particleGreen = particleBlue = 1.0F;
 		particleGravity = Block.blockSnow.blockParticleGravity;
 		particleScale /= 2.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityBubbleFX.java b/RMCClient/minecraft/net/minecraft/src/EntityBubbleFX.java
index 9296451..b538563 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityBubbleFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityBubbleFX.java
@@ -2,18 +2,18 @@
 
 public class EntityBubbleFX extends EntityFX
 {
-	public EntityBubbleFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityBubbleFX(World p_i1198_1_, double p_i1198_2_, double p_i1198_4_, double p_i1198_6_, double p_i1198_8_, double p_i1198_10_, double p_i1198_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
+		super(p_i1198_1_, p_i1198_2_, p_i1198_4_, p_i1198_6_, p_i1198_8_, p_i1198_10_, p_i1198_12_);
 		particleRed = 1.0F;
 		particleGreen = 1.0F;
 		particleBlue = 1.0F;
 		setParticleTextureIndex(32);
 		setSize(0.02F, 0.02F);
 		particleScale *= rand.nextFloat() * 0.6F + 0.2F;
-		motionX = par8 * 0.20000000298023224D + (float) (Math.random() * 2.0D - 1.0D) * 0.02F;
-		motionY = par10 * 0.20000000298023224D + (float) (Math.random() * 2.0D - 1.0D) * 0.02F;
-		motionZ = par12 * 0.20000000298023224D + (float) (Math.random() * 2.0D - 1.0D) * 0.02F;
+		motionX = p_i1198_8_ * 0.20000000298023224D + (float) (Math.random() * 2.0D - 1.0D) * 0.02F;
+		motionY = p_i1198_10_ * 0.20000000298023224D + (float) (Math.random() * 2.0D - 1.0D) * 0.02F;
+		motionZ = p_i1198_12_ * 0.20000000298023224D + (float) (Math.random() * 2.0D - 1.0D) * 0.02F;
 		particleMaxAge = (int) (8.0D / (Math.random() * 0.8D + 0.2D));
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityCaveSpider.java b/RMCClient/minecraft/net/minecraft/src/EntityCaveSpider.java
index 08c8221..2929002 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityCaveSpider.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityCaveSpider.java
@@ -2,10 +2,9 @@
 
 public class EntityCaveSpider extends EntitySpider
 {
-	public EntityCaveSpider(World par1World)
+	public EntityCaveSpider(World p_i1732_1_)
 	{
-		super(par1World);
-		texture = "/mob/cavespider.png";
+		super(p_i1732_1_);
 		setSize(0.7F, 0.5F);
 	}
 	
@@ -13,7 +12,7 @@
 	{
 		if(super.attackEntityAsMob(par1Entity))
 		{
-			if(par1Entity instanceof EntityLiving)
+			if(par1Entity instanceof EntityLivingBase)
 			{
 				byte var2 = 0;
 				if(worldObj.difficultySetting > 1)
@@ -28,24 +27,21 @@
 				}
 				if(var2 > 0)
 				{
-					((EntityLiving) par1Entity).addPotionEffect(new PotionEffect(Potion.poison.id, var2 * 20, 0));
+					((EntityLivingBase) par1Entity).addPotionEffect(new PotionEffect(Potion.poison.id, var2 * 20, 0));
 				}
 			}
 			return true;
 		} else return false;
 	}
 	
-	@Override public int getMaxHealth()
+	@Override protected void func_110147_ax()
 	{
-		return 12;
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(12.0D);
 	}
 	
-	@Override public void initCreature()
+	@Override public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
 	{
-	}
-	
-	@Override public float spiderScaleAmount()
-	{
-		return 0.7F;
+		return p_110161_1_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityChicken.java b/RMCClient/minecraft/net/minecraft/src/EntityChicken.java
index bddbc98..6c018df 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityChicken.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityChicken.java
@@ -2,27 +2,24 @@
 
 public class EntityChicken extends EntityAnimal
 {
-	public boolean field_70885_d = false;
-	public float field_70886_e = 0.0F;
-	public float destPos = 0.0F;
+	public float field_70886_e;
+	public float destPos;
 	public float field_70884_g;
 	public float field_70888_h;
 	public float field_70889_i = 1.0F;
 	public int timeUntilNextEgg;
 	
-	public EntityChicken(World par1World)
+	public EntityChicken(World p_i1682_1_)
 	{
-		super(par1World);
-		texture = "/mob/chicken.png";
+		super(p_i1682_1_);
 		setSize(0.3F, 0.7F);
 		timeUntilNextEgg = rand.nextInt(6000) + 6000;
-		float var2 = 0.25F;
 		tasks.addTask(0, new EntityAISwimming(this));
-		tasks.addTask(1, new EntityAIPanic(this, 0.38F));
-		tasks.addTask(2, new EntityAIMate(this, var2));
-		tasks.addTask(3, new EntityAITempt(this, 0.25F, Item.seeds.itemID, false));
-		tasks.addTask(4, new EntityAIFollowParent(this, 0.28F));
-		tasks.addTask(5, new EntityAIWander(this, var2));
+		tasks.addTask(1, new EntityAIPanic(this, 1.4D));
+		tasks.addTask(2, new EntityAIMate(this, 1.0D));
+		tasks.addTask(3, new EntityAITempt(this, 1.0D, Item.seeds.itemID, false));
+		tasks.addTask(4, new EntityAIFollowParent(this, 1.1D));
+		tasks.addTask(5, new EntityAIWander(this, 1.0D));
 		tasks.addTask(6, new EntityAIWatchClosest(this, EntityPlayer.class, 6.0F));
 		tasks.addTask(7, new EntityAILookIdle(this));
 	}
@@ -52,6 +49,13 @@
 	{
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(4.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.25D);
+	}
+	
 	@Override protected String getDeathSound()
 	{
 		return "mob.chicken.hurt";
@@ -70,11 +74,6 @@
 	@Override protected String getLivingSound()
 	{
 		return "mob.chicken.say";
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 4;
 	}
 	
 	@Override public boolean isAIEnabled()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityClientPlayerMP.java b/RMCClient/minecraft/net/minecraft/src/EntityClientPlayerMP.java
index 3c70bbd..e5d4188 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityClientPlayerMP.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityClientPlayerMP.java
@@ -11,16 +11,17 @@
 	private double oldPosZ;
 	private float oldRotationYaw;
 	private float oldRotationPitch;
-	private boolean wasOnGround = false;
-	private boolean shouldStopSneaking = false;
-	private boolean wasSneaking = false;
-	private int field_71168_co = 0;
-	private boolean hasSetHealth = false;
+	private boolean wasOnGround;
+	private boolean shouldStopSneaking;
+	private boolean wasSneaking;
+	private int field_71168_co;
+	private boolean hasSetHealth;
+	private String field_142022_ce;
 	
-	public EntityClientPlayerMP(Minecraft par1Minecraft, World par2World, Session par3Session, NetClientHandler par4NetClientHandler)
+	public EntityClientPlayerMP(Minecraft p_i1189_1_, World p_i1189_2_, Session p_i1189_3_, NetClientHandler p_i1189_4_)
 	{
-		super(par1Minecraft, par2World, par3Session, 0);
-		sendQueue = par4NetClientHandler;
+		super(p_i1189_1_, p_i1189_2_, p_i1189_3_, 0);
+		sendQueue = p_i1189_4_;
 	}
 	
 	@Override public void addStat(StatBase par1StatBase, int par2)
@@ -34,7 +35,7 @@
 		}
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		return false;
 	}
@@ -45,11 +46,11 @@
 		func_92015_f();
 	}
 	
-	@Override protected void damageEntity(DamageSource par1DamageSource, int par2)
+	@Override protected void damageEntity(DamageSource par1DamageSource, float par2)
 	{
 		if(!isEntityInvulnerable())
 		{
-			setEntityHealth(getHealth() - par2);
+			setEntityHealth(func_110143_aJ() - par2);
 		}
 	}
 	
@@ -60,9 +61,24 @@
 		return null;
 	}
 	
-	@Override public boolean func_71066_bF()
+	@Override protected void func_110318_g()
 	{
-		return true;
+		sendQueue.addToSendQueue(new Packet19EntityAction(this, 6, (int) (func_110319_bJ() * 100.0F)));
+	}
+	
+	public void func_110322_i()
+	{
+		sendQueue.addToSendQueue(new Packet19EntityAction(this, 7));
+	}
+	
+	public void func_142020_c(String p_142020_1_)
+	{
+		field_142022_ce = p_142020_1_;
+	}
+	
+	public String func_142021_k()
+	{
+		return field_142022_ce;
 	}
 	
 	public void func_92015_f()
@@ -71,7 +87,7 @@
 		super.closeScreen();
 	}
 	
-	@Override public void heal(int par1)
+	@Override public void heal(float par1)
 	{
 	}
 	
@@ -95,7 +111,14 @@
 		if(worldObj.blockExists(MathHelper.floor_double(posX), 0, MathHelper.floor_double(posZ)))
 		{
 			super.onUpdate();
-			sendMotionUpdates();
+			if(isRiding())
+			{
+				sendQueue.addToSendQueue(new Packet12PlayerLook(rotationYaw, rotationPitch, onGround));
+				sendQueue.addToSendQueue(new Packet27PlayerInput(moveStrafing, moveForward, movementInput.jump, movementInput.sneak));
+			} else
+			{
+				sendMotionUpdates();
+			}
 		}
 	}
 	
@@ -181,7 +204,7 @@
 		sendQueue.addToSendQueue(new Packet202PlayerAbilities(capabilities));
 	}
 	
-	@Override public void setHealth(int par1)
+	@Override public void setHealth(float par1)
 	{
 		if(hasSetHealth)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityCloudFX.java b/RMCClient/minecraft/net/minecraft/src/EntityCloudFX.java
index 56a0c20..6e80083 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityCloudFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityCloudFX.java
@@ -4,16 +4,16 @@
 {
 	float field_70569_a;
 	
-	public EntityCloudFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityCloudFX(World p_i1221_1_, double p_i1221_2_, double p_i1221_4_, double p_i1221_6_, double p_i1221_8_, double p_i1221_10_, double p_i1221_12_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		super(p_i1221_1_, p_i1221_2_, p_i1221_4_, p_i1221_6_, 0.0D, 0.0D, 0.0D);
 		float var14 = 2.5F;
 		motionX *= 0.10000000149011612D;
 		motionY *= 0.10000000149011612D;
 		motionZ *= 0.10000000149011612D;
-		motionX += par8;
-		motionY += par10;
-		motionZ += par12;
+		motionX += p_i1221_8_;
+		motionY += p_i1221_10_;
+		motionZ += p_i1221_12_;
 		particleRed = particleGreen = particleBlue = 1.0F - (float) (Math.random() * 0.30000001192092896D);
 		particleScale *= 0.75F;
 		particleScale *= var14;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityCow.java b/RMCClient/minecraft/net/minecraft/src/EntityCow.java
index 9fc8497..57864b5 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityCow.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityCow.java
@@ -2,18 +2,17 @@
 
 public class EntityCow extends EntityAnimal
 {
-	public EntityCow(World par1World)
+	public EntityCow(World p_i1683_1_)
 	{
-		super(par1World);
-		texture = "/mob/cow.png";
+		super(p_i1683_1_);
 		setSize(0.9F, 1.3F);
 		getNavigator().setAvoidsWater(true);
 		tasks.addTask(0, new EntityAISwimming(this));
-		tasks.addTask(1, new EntityAIPanic(this, 0.38F));
-		tasks.addTask(2, new EntityAIMate(this, 0.2F));
-		tasks.addTask(3, new EntityAITempt(this, 0.25F, Item.wheat.itemID, false));
-		tasks.addTask(4, new EntityAIFollowParent(this, 0.25F));
-		tasks.addTask(5, new EntityAIWander(this, 0.2F));
+		tasks.addTask(1, new EntityAIPanic(this, 2.0D));
+		tasks.addTask(2, new EntityAIMate(this, 1.0D));
+		tasks.addTask(3, new EntityAITempt(this, 1.25D, Item.wheat.itemID, false));
+		tasks.addTask(4, new EntityAIFollowParent(this, 1.25D));
+		tasks.addTask(5, new EntityAIWander(this, 1.0D));
 		tasks.addTask(6, new EntityAIWatchClosest(this, EntityPlayer.class, 6.0F));
 		tasks.addTask(7, new EntityAILookIdle(this));
 	}
@@ -44,6 +43,13 @@
 		}
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(10.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.20000000298023224D);
+	}
+	
 	@Override protected String getDeathSound()
 	{
 		return "mob.cow.hurt";
@@ -64,11 +70,6 @@
 		return "mob.cow.say";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 10;
-	}
-	
 	@Override protected float getSoundVolume()
 	{
 		return 0.4F;
@@ -77,9 +78,9 @@
 	@Override public boolean interact(EntityPlayer par1EntityPlayer)
 	{
 		ItemStack var2 = par1EntityPlayer.inventory.getCurrentItem();
-		if(var2 != null && var2.itemID == Item.bucketEmpty.itemID)
+		if(var2 != null && var2.itemID == Item.bucketEmpty.itemID && !par1EntityPlayer.capabilities.isCreativeMode)
 		{
-			if(--var2.stackSize <= 0)
+			if(var2.stackSize-- == 1)
 			{
 				par1EntityPlayer.inventory.setInventorySlotContents(par1EntityPlayer.inventory.currentItem, new ItemStack(Item.bucketMilk));
 			} else if(!par1EntityPlayer.inventory.addItemStackToInventory(new ItemStack(Item.bucketMilk)))
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityCreature.java b/RMCClient/minecraft/net/minecraft/src/EntityCreature.java
index e9de797..d8df018 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityCreature.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityCreature.java
@@ -1,15 +1,23 @@
 package net.minecraft.src;
 
+import java.util.UUID;
+
 public abstract class EntityCreature extends EntityLiving
 {
+	public static final UUID field_110179_h = UUID.fromString("E199AD21-BA8A-4C53-8D13-6182D5C69D3A");
+	public static final AttributeModifier field_110181_i = new AttributeModifier(field_110179_h, "Fleeing speed bonus", 2.0D, 2).func_111168_a(false);
 	private PathEntity pathToEntity;
 	protected Entity entityToAttack;
-	protected boolean hasAttacked = false;
-	protected int fleeingTick = 0;
+	protected boolean hasAttacked;
+	protected int fleeingTick;
+	private ChunkCoordinates homePosition = new ChunkCoordinates(0, 0, 0);
+	private float maximumHomeDistance = -1.0F;
+	private EntityAIBase field_110178_bs = new EntityAIMoveTowardsRestriction(this, 1.0D);
+	private boolean field_110180_bt;
 	
-	public EntityCreature(World par1World)
+	public EntityCreature(World p_i1602_1_)
 	{
-		super(par1World);
+		super(p_i1602_1_);
 	}
 	
 	protected void attackEntity(Entity par1Entity, float par2)
@@ -19,6 +27,95 @@
 	protected Entity findPlayerToAttack()
 	{
 		return null;
+	}
+	
+	@Override protected void func_110159_bB()
+	{
+		super.func_110159_bB();
+		if(func_110167_bD() && func_110166_bE() != null && func_110166_bE().worldObj == worldObj)
+		{
+			Entity var1 = func_110166_bE();
+			func_110171_b((int) var1.posX, (int) var1.posY, (int) var1.posZ, 5);
+			float var2 = getDistanceToEntity(var1);
+			if(this instanceof EntityTameable && ((EntityTameable) this).isSitting())
+			{
+				if(var2 > 10.0F)
+				{
+					func_110160_i(true, true);
+				}
+				return;
+			}
+			if(!field_110180_bt)
+			{
+				tasks.addTask(2, field_110178_bs);
+				getNavigator().setAvoidsWater(false);
+				field_110180_bt = true;
+			}
+			func_142017_o(var2);
+			if(var2 > 4.0F)
+			{
+				getNavigator().tryMoveToEntityLiving(var1, 1.0D);
+			}
+			if(var2 > 6.0F)
+			{
+				double var3 = (var1.posX - posX) / var2;
+				double var5 = (var1.posY - posY) / var2;
+				double var7 = (var1.posZ - posZ) / var2;
+				motionX += var3 * Math.abs(var3) * 0.4D;
+				motionY += var5 * Math.abs(var5) * 0.4D;
+				motionZ += var7 * Math.abs(var7) * 0.4D;
+			}
+			if(var2 > 10.0F)
+			{
+				func_110160_i(true, true);
+			}
+		} else if(!func_110167_bD() && field_110180_bt)
+		{
+			field_110180_bt = false;
+			tasks.removeTask(field_110178_bs);
+			getNavigator().setAvoidsWater(true);
+			func_110177_bN();
+		}
+	}
+	
+	public void func_110171_b(int p_110171_1_, int p_110171_2_, int p_110171_3_, int p_110171_4_)
+	{
+		homePosition.set(p_110171_1_, p_110171_2_, p_110171_3_);
+		maximumHomeDistance = p_110171_4_;
+	}
+	
+	public ChunkCoordinates func_110172_bL()
+	{
+		return homePosition;
+	}
+	
+	public boolean func_110173_bK()
+	{
+		return func_110176_b(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ));
+	}
+	
+	public float func_110174_bM()
+	{
+		return maximumHomeDistance;
+	}
+	
+	public boolean func_110175_bO()
+	{
+		return maximumHomeDistance != -1.0F;
+	}
+	
+	public boolean func_110176_b(int p_110176_1_, int p_110176_2_, int p_110176_3_)
+	{
+		return maximumHomeDistance == -1.0F ? true : homePosition.getDistanceSquared(p_110176_1_, p_110176_2_, p_110176_3_) < maximumHomeDistance * maximumHomeDistance;
+	}
+	
+	public void func_110177_bN()
+	{
+		maximumHomeDistance = -1.0F;
+	}
+	
+	protected void func_142017_o(float p_142017_1_)
+	{
 	}
 	
 	public float getBlockPathWeight(int par1, int par2, int par3)
@@ -37,16 +134,6 @@
 	public Entity getEntityToAttack()
 	{
 		return entityToAttack;
-	}
-	
-	@Override public float getSpeedModifier()
-	{
-		float var1 = super.getSpeedModifier();
-		if(fleeingTick > 0 && !isAIEnabled())
-		{
-			var1 *= 2.0F;
-		}
-		return var1;
 	}
 	
 	public boolean hasPath()
@@ -72,18 +159,19 @@
 	@Override protected void updateEntityActionState()
 	{
 		worldObj.theProfiler.startSection("ai");
-		if(fleeingTick > 0)
+		if(fleeingTick > 0 && --fleeingTick == 0)
 		{
-			--fleeingTick;
+			AttributeInstance var1 = func_110148_a(SharedMonsterAttributes.field_111263_d);
+			var1.func_111124_b(field_110181_i);
 		}
 		hasAttacked = isMovementCeased();
-		float var1 = 16.0F;
+		float var21 = 16.0F;
 		if(entityToAttack == null)
 		{
 			entityToAttack = findPlayerToAttack();
 			if(entityToAttack != null)
 			{
-				pathToEntity = worldObj.getPathEntityToEntity(this, entityToAttack, var1, true, false, false, true);
+				pathToEntity = worldObj.getPathEntityToEntity(this, entityToAttack, var21, true, false, false, true);
 			}
 		} else if(entityToAttack.isEntityAlive())
 		{
@@ -99,12 +187,12 @@
 		worldObj.theProfiler.endSection();
 		if(!hasAttacked && entityToAttack != null && (pathToEntity == null || rand.nextInt(20) == 0))
 		{
-			pathToEntity = worldObj.getPathEntityToEntity(this, entityToAttack, var1, true, false, false, true);
+			pathToEntity = worldObj.getPathEntityToEntity(this, entityToAttack, var21, true, false, false, true);
 		} else if(!hasAttacked && (pathToEntity == null && rand.nextInt(180) == 0 || rand.nextInt(120) == 0 || fleeingTick > 0) && entityAge < 100)
 		{
 			updateWanderPath();
 		}
-		int var21 = MathHelper.floor_double(boundingBox.minY + 0.5D);
+		int var22 = MathHelper.floor_double(boundingBox.minY + 0.5D);
 		boolean var3 = isInWater();
 		boolean var4 = handleLavaMovement();
 		rotationPitch = 0.0F;
@@ -130,10 +218,10 @@
 			{
 				double var8 = var5.xCoord - posX;
 				double var10 = var5.zCoord - posZ;
-				double var12 = var5.yCoord - var21;
+				double var12 = var5.yCoord - var22;
 				float var14 = (float) (Math.atan2(var10, var8) * 180.0D / Math.PI) - 90.0F;
 				float var15 = MathHelper.wrapAngleTo180_float(var14 - rotationYaw);
-				moveForward = moveSpeed;
+				moveForward = (float) func_110148_a(SharedMonsterAttributes.field_111263_d).func_111126_e();
 				if(var15 > 30.0F)
 				{
 					var15 = 30.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityCreeper.java b/RMCClient/minecraft/net/minecraft/src/EntityCreeper.java
index 9a171e6..fa566e7 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityCreeper.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityCreeper.java
@@ -7,18 +7,17 @@
 	private int fuseTime = 30;
 	private int explosionRadius = 3;
 	
-	public EntityCreeper(World par1World)
+	public EntityCreeper(World p_i1733_1_)
 	{
-		super(par1World);
-		texture = "/mob/creeper.png";
+		super(p_i1733_1_);
 		tasks.addTask(1, new EntityAISwimming(this));
 		tasks.addTask(2, new EntityAICreeperSwell(this));
-		tasks.addTask(3, new EntityAIAvoidEntity(this, EntityOcelot.class, 6.0F, 0.25F, 0.3F));
-		tasks.addTask(4, new EntityAIAttackOnCollide(this, 0.25F, false));
-		tasks.addTask(5, new EntityAIWander(this, 0.2F));
+		tasks.addTask(3, new EntityAIAvoidEntity(this, EntityOcelot.class, 6.0F, 1.0D, 1.2D));
+		tasks.addTask(4, new EntityAIAttackOnCollide(this, 1.0D, false));
+		tasks.addTask(5, new EntityAIWander(this, 0.8D));
 		tasks.addTask(6, new EntityAIWatchClosest(this, EntityPlayer.class, 8.0F));
 		tasks.addTask(6, new EntityAILookIdle(this));
-		targetTasks.addTask(1, new EntityAINearestAttackableTarget(this, EntityPlayer.class, 16.0F, 0, true));
+		targetTasks.addTask(1, new EntityAINearestAttackableTarget(this, EntityPlayer.class, 0, true));
 		targetTasks.addTask(2, new EntityAIHurtByTarget(this, false));
 	}
 	
@@ -44,9 +43,15 @@
 		}
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.25D);
+	}
+	
 	@Override public int func_82143_as()
 	{
-		return getAttackTarget() == null ? 3 : 3 + health - 1;
+		return getAttackTarget() == null ? 3 : 3 + (int) (func_110143_aJ() - 1.0F);
 	}
 	
 	public float getCreeperFlashIntensity(float par1)
@@ -72,11 +77,6 @@
 	@Override protected String getHurtSound()
 	{
 		return "mob.creeper.say";
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 20;
 	}
 	
 	public boolean getPowered()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityCrit2FX.java b/RMCClient/minecraft/net/minecraft/src/EntityCrit2FX.java
index 96f4b12..52b5247 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityCrit2FX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityCrit2FX.java
@@ -7,19 +7,17 @@
 	private int maximumLife;
 	private String particleName;
 	
-	public EntityCrit2FX(World par1World, Entity par2Entity)
+	public EntityCrit2FX(World p_i1199_1_, Entity p_i1199_2_)
 	{
-		this(par1World, par2Entity, "crit");
+		this(p_i1199_1_, p_i1199_2_, "crit");
 	}
 	
-	public EntityCrit2FX(World par1World, Entity par2Entity, String par3Str)
+	public EntityCrit2FX(World p_i1200_1_, Entity p_i1200_2_, String p_i1200_3_)
 	{
-		super(par1World, par2Entity.posX, par2Entity.boundingBox.minY + par2Entity.height / 2.0F, par2Entity.posZ, par2Entity.motionX, par2Entity.motionY, par2Entity.motionZ);
-		currentLife = 0;
-		maximumLife = 0;
-		theEntity = par2Entity;
+		super(p_i1200_1_, p_i1200_2_.posX, p_i1200_2_.boundingBox.minY + p_i1200_2_.height / 2.0F, p_i1200_2_.posZ, p_i1200_2_.motionX, p_i1200_2_.motionY, p_i1200_2_.motionZ);
+		theEntity = p_i1200_2_;
 		maximumLife = 3;
-		particleName = par3Str;
+		particleName = p_i1200_3_;
 		onUpdate();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityCritFX.java b/RMCClient/minecraft/net/minecraft/src/EntityCritFX.java
index 4e8bc90..e7952e9 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityCritFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityCritFX.java
@@ -4,26 +4,26 @@
 {
 	float field_70561_a;
 	
-	public EntityCritFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityCritFX(World p_i1201_1_, double p_i1201_2_, double p_i1201_4_, double p_i1201_6_, double p_i1201_8_, double p_i1201_10_, double p_i1201_12_)
 	{
-		this(par1World, par2, par4, par6, par8, par10, par12, 1.0F);
+		this(p_i1201_1_, p_i1201_2_, p_i1201_4_, p_i1201_6_, p_i1201_8_, p_i1201_10_, p_i1201_12_, 1.0F);
 	}
 	
-	public EntityCritFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, float par14)
+	public EntityCritFX(World p_i1202_1_, double p_i1202_2_, double p_i1202_4_, double p_i1202_6_, double p_i1202_8_, double p_i1202_10_, double p_i1202_12_, float p_i1202_14_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		super(p_i1202_1_, p_i1202_2_, p_i1202_4_, p_i1202_6_, 0.0D, 0.0D, 0.0D);
 		motionX *= 0.10000000149011612D;
 		motionY *= 0.10000000149011612D;
 		motionZ *= 0.10000000149011612D;
-		motionX += par8 * 0.4D;
-		motionY += par10 * 0.4D;
-		motionZ += par12 * 0.4D;
+		motionX += p_i1202_8_ * 0.4D;
+		motionY += p_i1202_10_ * 0.4D;
+		motionZ += p_i1202_12_ * 0.4D;
 		particleRed = particleGreen = particleBlue = (float) (Math.random() * 0.30000001192092896D + 0.6000000238418579D);
 		particleScale *= 0.75F;
-		particleScale *= par14;
+		particleScale *= p_i1202_14_;
 		field_70561_a = particleScale;
 		particleMaxAge = (int) (6.0D / (Math.random() * 0.8D + 0.6D));
-		particleMaxAge = (int) (particleMaxAge * par14);
+		particleMaxAge = (int) (particleMaxAge * p_i1202_14_);
 		noClip = false;
 		setParticleTextureIndex(65);
 		onUpdate();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityDamageSource.java b/RMCClient/minecraft/net/minecraft/src/EntityDamageSource.java
index a057e2a..49c15dd 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityDamageSource.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityDamageSource.java
@@ -4,18 +4,18 @@
 {
 	protected Entity damageSourceEntity;
 	
-	public EntityDamageSource(String par1Str, Entity par2Entity)
+	public EntityDamageSource(String p_i1567_1_, Entity p_i1567_2_)
 	{
-		super(par1Str);
-		damageSourceEntity = par2Entity;
+		super(p_i1567_1_);
+		damageSourceEntity = p_i1567_2_;
 	}
 	
-	@Override public String getDeathMessage(EntityLiving par1EntityLiving)
+	@Override public ChatMessageComponent getDeathMessage(EntityLivingBase par1EntityLiving)
 	{
-		ItemStack var2 = damageSourceEntity instanceof EntityLiving ? ((EntityLiving) damageSourceEntity).getHeldItem() : null;
+		ItemStack var2 = damageSourceEntity instanceof EntityLivingBase ? ((EntityLivingBase) damageSourceEntity).getHeldItem() : null;
 		String var3 = "death.attack." + damageType;
 		String var4 = var3 + ".item";
-		return var2 != null && var2.hasDisplayName() && StatCollector.func_94522_b(var4) ? StatCollector.translateToLocalFormatted(var4, new Object[] { par1EntityLiving.getTranslatedEntityName(), damageSourceEntity.getTranslatedEntityName(), var2.getDisplayName() }) : StatCollector.translateToLocalFormatted(var3, new Object[] { par1EntityLiving.getTranslatedEntityName(), damageSourceEntity.getTranslatedEntityName() });
+		return var2 != null && var2.hasDisplayName() && StatCollector.func_94522_b(var4) ? ChatMessageComponent.func_111082_b(var4, new Object[] { par1EntityLiving.getTranslatedEntityName(), damageSourceEntity.getTranslatedEntityName(), var2.getDisplayName() }) : ChatMessageComponent.func_111082_b(var3, new Object[] { par1EntityLiving.getTranslatedEntityName(), damageSourceEntity.getTranslatedEntityName() });
 	}
 	
 	@Override public Entity getEntity()
@@ -25,6 +25,6 @@
 	
 	@Override public boolean isDifficultyScaled()
 	{
-		return damageSourceEntity != null && damageSourceEntity instanceof EntityLiving && !(damageSourceEntity instanceof EntityPlayer);
+		return damageSourceEntity != null && damageSourceEntity instanceof EntityLivingBase && !(damageSourceEntity instanceof EntityPlayer);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityDamageSourceIndirect.java b/RMCClient/minecraft/net/minecraft/src/EntityDamageSourceIndirect.java
index 8e9e200..b990dc7 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityDamageSourceIndirect.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityDamageSourceIndirect.java
@@ -4,19 +4,19 @@
 {
 	private Entity indirectEntity;
 	
-	public EntityDamageSourceIndirect(String par1Str, Entity par2Entity, Entity par3Entity)
+	public EntityDamageSourceIndirect(String p_i1568_1_, Entity p_i1568_2_, Entity p_i1568_3_)
 	{
-		super(par1Str, par2Entity);
-		indirectEntity = par3Entity;
+		super(p_i1568_1_, p_i1568_2_);
+		indirectEntity = p_i1568_3_;
 	}
 	
-	@Override public String getDeathMessage(EntityLiving par1EntityLiving)
+	@Override public ChatMessageComponent getDeathMessage(EntityLivingBase par1EntityLiving)
 	{
 		String var2 = indirectEntity == null ? damageSourceEntity.getTranslatedEntityName() : indirectEntity.getTranslatedEntityName();
-		ItemStack var3 = indirectEntity instanceof EntityLiving ? ((EntityLiving) indirectEntity).getHeldItem() : null;
+		ItemStack var3 = indirectEntity instanceof EntityLivingBase ? ((EntityLivingBase) indirectEntity).getHeldItem() : null;
 		String var4 = "death.attack." + damageType;
 		String var5 = var4 + ".item";
-		return var3 != null && var3.hasDisplayName() && StatCollector.func_94522_b(var5) ? StatCollector.translateToLocalFormatted(var5, new Object[] { par1EntityLiving.getTranslatedEntityName(), var2, var3.getDisplayName() }) : StatCollector.translateToLocalFormatted(var4, new Object[] { par1EntityLiving.getTranslatedEntityName(), var2 });
+		return var3 != null && var3.hasDisplayName() && StatCollector.func_94522_b(var5) ? ChatMessageComponent.func_111082_b(var5, new Object[] { par1EntityLiving.getTranslatedEntityName(), var2, var3.getDisplayName() }) : ChatMessageComponent.func_111082_b(var4, new Object[] { par1EntityLiving.getTranslatedEntityName(), var2 });
 	}
 	
 	@Override public Entity getEntity()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityDiggingFX.java b/RMCClient/minecraft/net/minecraft/src/EntityDiggingFX.java
index 3088233..5dfbf3d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityDiggingFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityDiggingFX.java
@@ -4,12 +4,12 @@
 {
 	private Block blockInstance;
 	
-	public EntityDiggingFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, Block par14Block, int par15, int par16, RenderEngine par17RenderEngine)
+	public EntityDiggingFX(World p_i1234_1_, double p_i1234_2_, double p_i1234_4_, double p_i1234_6_, double p_i1234_8_, double p_i1234_10_, double p_i1234_12_, Block p_i1234_14_, int p_i1234_15_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
-		blockInstance = par14Block;
-		setParticleIcon(par17RenderEngine, par14Block.getIcon(0, par16));
-		particleGravity = par14Block.blockParticleGravity;
+		super(p_i1234_1_, p_i1234_2_, p_i1234_4_, p_i1234_6_, p_i1234_8_, p_i1234_10_, p_i1234_12_);
+		blockInstance = p_i1234_14_;
+		func_110125_a(p_i1234_14_.getIcon(0, p_i1234_15_));
+		particleGravity = p_i1234_14_.blockParticleGravity;
 		particleRed = particleGreen = particleBlue = 0.6F;
 		particleScale /= 2.0F;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityDragon.java b/RMCClient/minecraft/net/minecraft/src/EntityDragon.java
index e50dd86..3659d33 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityDragon.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityDragon.java
@@ -3,7 +3,7 @@
 import java.util.Iterator;
 import java.util.List;
 
-public class EntityDragon extends EntityLiving implements IBossDisplayData, IEntityMultiPart
+public class EntityDragon extends EntityLiving implements IBossDisplayData, IEntityMultiPart, IMob
 {
 	public double targetX;
 	public double targetY;
@@ -18,20 +18,19 @@
 	public EntityDragonPart dragonPartTail3;
 	public EntityDragonPart dragonPartWing1;
 	public EntityDragonPart dragonPartWing2;
-	public float prevAnimTime = 0.0F;
-	public float animTime = 0.0F;
-	public boolean forceNewTarget = false;
-	public boolean slowed = false;
+	public float prevAnimTime;
+	public float animTime;
+	public boolean forceNewTarget;
+	public boolean slowed;
 	private Entity target;
-	public int deathTicks = 0;
-	public EntityEnderCrystal healingEnderCrystal = null;
+	public int deathTicks;
+	public EntityEnderCrystal healingEnderCrystal;
 	
-	public EntityDragon(World par1World)
+	public EntityDragon(World p_i1700_1_)
 	{
-		super(par1World);
+		super(p_i1700_1_);
 		dragonPartArray = new EntityDragonPart[] { dragonPartHead = new EntityDragonPart(this, "head", 6.0F, 6.0F), dragonPartBody = new EntityDragonPart(this, "body", 8.0F, 8.0F), dragonPartTail1 = new EntityDragonPart(this, "tail", 4.0F, 4.0F), dragonPartTail2 = new EntityDragonPart(this, "tail", 4.0F, 4.0F), dragonPartTail3 = new EntityDragonPart(this, "tail", 4.0F, 4.0F), dragonPartWing1 = new EntityDragonPart(this, "wing", 4.0F, 4.0F), dragonPartWing2 = new EntityDragonPart(this, "wing", 4.0F, 4.0F) };
-		setEntityHealth(getMaxHealth());
-		texture = "/mob/enderdragon/ender.png";
+		setEntityHealth(func_110138_aP());
 		setSize(16.0F, 8.0F);
 		noClip = true;
 		isImmuneToFire = true;
@@ -44,23 +43,23 @@
 		for(int var2 = 0; var2 < par1List.size(); ++var2)
 		{
 			Entity var3 = (Entity) par1List.get(var2);
-			if(var3 instanceof EntityLiving)
+			if(var3 instanceof EntityLivingBase)
 			{
-				var3.attackEntityFrom(DamageSource.causeMobDamage(this), 10);
+				var3.attackEntityFrom(DamageSource.causeMobDamage(this), 10.0F);
 			}
 		}
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		return false;
 	}
 	
-	@Override public boolean attackEntityFromPart(EntityDragonPart par1EntityDragonPart, DamageSource par2DamageSource, int par3)
+	@Override public boolean attackEntityFromPart(EntityDragonPart par1EntityDragonPart, DamageSource par2DamageSource, float par3)
 	{
 		if(par1EntityDragonPart != dragonPartHead)
 		{
-			par3 = par3 / 4 + 1;
+			par3 = par3 / 4.0F + 1.0F;
 		}
 		float var4 = rotationYaw * (float) Math.PI / 180.0F;
 		float var5 = MathHelper.sin(var4);
@@ -89,7 +88,7 @@
 		while(var6.hasNext())
 		{
 			Entity var7 = (Entity) var6.next();
-			if(var7 instanceof EntityLiving)
+			if(var7 instanceof EntityLivingBase)
 			{
 				double var8 = var7.posX - var2;
 				double var10 = var7.posZ - var4;
@@ -194,7 +193,12 @@
 	@Override protected void entityInit()
 	{
 		super.entityInit();
-		dataWatcher.addObject(16, new Integer(getMaxHealth()));
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(200.0D);
 	}
 	
 	@Override public World func_82194_d()
@@ -202,14 +206,9 @@
 		return worldObj;
 	}
 	
-	protected boolean func_82195_e(DamageSource par1DamageSource, int par2)
+	protected boolean func_82195_e(DamageSource par1DamageSource, float par2)
 	{
 		return super.attackEntityFrom(par1DamageSource, par2);
-	}
-	
-	@Override public int getBossHealth()
-	{
-		return dataWatcher.getWatchableObjectInt(16);
 	}
 	
 	@Override protected String getHurtSound()
@@ -222,14 +221,9 @@
 		return "mob.enderdragon.growl";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 200;
-	}
-	
 	public double[] getMovementOffsets(int par1, float par2)
 	{
-		if(health <= 0)
+		if(func_110143_aJ() <= 0.0F)
 		{
 			par2 = 0.0F;
 		}
@@ -306,10 +300,7 @@
 	{
 		float var1;
 		float var2;
-		if(!worldObj.isRemote)
-		{
-			dataWatcher.updateObject(16, Integer.valueOf(health));
-		} else
+		if(worldObj.isRemote)
 		{
 			var1 = MathHelper.cos(animTime * (float) Math.PI * 2.0F);
 			var2 = MathHelper.cos(prevAnimTime * (float) Math.PI * 2.0F);
@@ -320,7 +311,7 @@
 		}
 		prevAnimTime = animTime;
 		float var3;
-		if(health <= 0)
+		if(func_110143_aJ() <= 0.0F)
 		{
 			var1 = (rand.nextFloat() - 0.5F) * 8.0F;
 			var2 = (rand.nextFloat() - 0.5F) * 4.0F;
@@ -364,7 +355,7 @@
 				{
 					var26 = posX + (newPosX - posX) / newPosRotationIncrements;
 					var4 = posY + (newPosY - posY) / newPosRotationIncrements;
-					var6 = posZ + (newPosZ - posZ) / newPosRotationIncrements;
+					var6 = posZ + (field_110152_bk - posZ) / newPosRotationIncrements;
 					var8 = MathHelper.wrapAngleTo180_double(newRotationYaw - rotationYaw);
 					rotationYaw = (float) (rotationYaw + var8 / newPosRotationIncrements);
 					rotationPitch = (float) (rotationPitch + (newRotationPitch - rotationPitch) / newPosRotationIncrements);
@@ -559,12 +550,12 @@
 			{
 				if(!worldObj.isRemote)
 				{
-					attackEntityFromPart(dragonPartHead, DamageSource.setExplosionSource((Explosion) null), 10);
+					attackEntityFromPart(dragonPartHead, DamageSource.setExplosionSource((Explosion) null), 10.0F);
 				}
 				healingEnderCrystal = null;
-			} else if(ticksExisted % 10 == 0 && getHealth() < getMaxHealth())
+			} else if(ticksExisted % 10 == 0 && func_110143_aJ() < func_110138_aP())
 			{
-				setEntityHealth(getHealth() + 1);
+				setEntityHealth(func_110143_aJ() + 1.0F);
 			}
 		}
 		if(rand.nextInt(10) == 0)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityDragonPart.java b/RMCClient/minecraft/net/minecraft/src/EntityDragonPart.java
index 7d41df3..402a5c0 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityDragonPart.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityDragonPart.java
@@ -5,15 +5,15 @@
 	public final IEntityMultiPart entityDragonObj;
 	public final String name;
 	
-	public EntityDragonPart(IEntityMultiPart par1, String par2, float par3, float par4)
+	public EntityDragonPart(IEntityMultiPart p_i1697_1_, String p_i1697_2_, float p_i1697_3_, float p_i1697_4_)
 	{
-		super(par1.func_82194_d());
-		setSize(par3, par4);
-		entityDragonObj = par1;
-		name = par2;
+		super(p_i1697_1_.func_82194_d());
+		setSize(p_i1697_3_, p_i1697_4_);
+		entityDragonObj = p_i1697_1_;
+		name = p_i1697_2_;
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		return isEntityInvulnerable() ? false : entityDragonObj.attackEntityFromPart(this, par1DamageSource, par2);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityDropParticleFX.java b/RMCClient/minecraft/net/minecraft/src/EntityDropParticleFX.java
index 7585a9c..c0d8dee 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityDropParticleFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityDropParticleFX.java
@@ -5,11 +5,11 @@
 	private Material materialType;
 	private int bobTimer;
 	
-	public EntityDropParticleFX(World par1World, double par2, double par4, double par6, Material par8Material)
+	public EntityDropParticleFX(World p_i1203_1_, double p_i1203_2_, double p_i1203_4_, double p_i1203_6_, Material p_i1203_8_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		super(p_i1203_1_, p_i1203_2_, p_i1203_4_, p_i1203_6_, 0.0D, 0.0D, 0.0D);
 		motionX = motionY = motionZ = 0.0D;
-		if(par8Material == Material.water)
+		if(p_i1203_8_ == Material.water)
 		{
 			particleRed = 0.0F;
 			particleGreen = 0.0F;
@@ -23,7 +23,7 @@
 		setParticleTextureIndex(113);
 		setSize(0.01F, 0.01F);
 		particleGravity = 0.06F;
-		materialType = par8Material;
+		materialType = p_i1203_8_;
 		bobTimer = 40;
 		particleMaxAge = (int) (64.0D / (Math.random() * 0.8D + 0.2D));
 		motionX = motionY = motionZ = 0.0D;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityEgg.java b/RMCClient/minecraft/net/minecraft/src/EntityEgg.java
index 45f5df8..b2f3340 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityEgg.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityEgg.java
@@ -2,26 +2,26 @@
 
 public class EntityEgg extends EntityThrowable
 {
-	public EntityEgg(World par1World)
+	public EntityEgg(World p_i1779_1_)
 	{
-		super(par1World);
+		super(p_i1779_1_);
 	}
 	
-	public EntityEgg(World par1World, double par2, double par4, double par6)
+	public EntityEgg(World p_i1781_1_, double p_i1781_2_, double p_i1781_4_, double p_i1781_6_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1781_1_, p_i1781_2_, p_i1781_4_, p_i1781_6_);
 	}
 	
-	public EntityEgg(World par1World, EntityLiving par2EntityLiving)
+	public EntityEgg(World p_i1780_1_, EntityLivingBase p_i1780_2_)
 	{
-		super(par1World, par2EntityLiving);
+		super(p_i1780_1_, p_i1780_2_);
 	}
 	
 	@Override protected void onImpact(MovingObjectPosition par1MovingObjectPosition)
 	{
 		if(par1MovingObjectPosition.entityHit != null)
 		{
-			par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, getThrower()), 0);
+			par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, getThrower()), 0.0F);
 		}
 		if(!worldObj.isRemote && rand.nextInt(8) == 0)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityEggInfo.java b/RMCClient/minecraft/net/minecraft/src/EntityEggInfo.java
index 707a620..3ea7314 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityEggInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityEggInfo.java
@@ -6,10 +6,10 @@
 	public int primaryColor;
 	public int secondaryColor;
 	
-	public EntityEggInfo(int par1, int par2, int par3)
+	public EntityEggInfo(int p_i1583_1_, int p_i1583_2_, int p_i1583_3_)
 	{
-		spawnedID = par1;
-		primaryColor = par2;
-		secondaryColor = par3;
+		spawnedID = p_i1583_1_;
+		primaryColor = p_i1583_2_;
+		secondaryColor = p_i1583_3_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityEnchantmentTableParticleFX.java b/RMCClient/minecraft/net/minecraft/src/EntityEnchantmentTableParticleFX.java
index 05620e7..d130100 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityEnchantmentTableParticleFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityEnchantmentTableParticleFX.java
@@ -7,15 +7,15 @@
 	private double field_70567_ar;
 	private double field_70566_as;
 	
-	public EntityEnchantmentTableParticleFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityEnchantmentTableParticleFX(World p_i1204_1_, double p_i1204_2_, double p_i1204_4_, double p_i1204_6_, double p_i1204_8_, double p_i1204_10_, double p_i1204_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
-		motionX = par8;
-		motionY = par10;
-		motionZ = par12;
-		field_70568_aq = posX = par2;
-		field_70567_ar = posY = par4;
-		field_70566_as = posZ = par6;
+		super(p_i1204_1_, p_i1204_2_, p_i1204_4_, p_i1204_6_, p_i1204_8_, p_i1204_10_, p_i1204_12_);
+		motionX = p_i1204_8_;
+		motionY = p_i1204_10_;
+		motionZ = p_i1204_12_;
+		field_70568_aq = posX = p_i1204_2_;
+		field_70567_ar = posY = p_i1204_4_;
+		field_70566_as = posZ = p_i1204_6_;
 		float var14 = rand.nextFloat() * 0.6F + 0.4F;
 		field_70565_a = particleScale = rand.nextFloat() * 0.5F + 0.2F;
 		particleRed = particleGreen = particleBlue = 1.0F * var14;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityEnderCrystal.java b/RMCClient/minecraft/net/minecraft/src/EntityEnderCrystal.java
index 0263f89..d4c0214 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityEnderCrystal.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityEnderCrystal.java
@@ -5,10 +5,9 @@
 	public int innerRotation;
 	public int health;
 	
-	public EntityEnderCrystal(World par1World)
+	public EntityEnderCrystal(World p_i1698_1_)
 	{
-		super(par1World);
-		innerRotation = 0;
+		super(p_i1698_1_);
 		preventEntitySpawning = true;
 		setSize(2.0F, 2.0F);
 		yOffset = height / 2.0F;
@@ -16,13 +15,13 @@
 		innerRotation = rand.nextInt(100000);
 	}
 	
-	public EntityEnderCrystal(World par1World, double par2, double par4, double par6)
+	public EntityEnderCrystal(World p_i1699_1_, double p_i1699_2_, double p_i1699_4_, double p_i1699_6_)
 	{
-		this(par1World);
-		setPosition(par2, par4, par6);
+		this(p_i1699_1_);
+		setPosition(p_i1699_2_, p_i1699_4_, p_i1699_6_);
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityEnderEye.java b/RMCClient/minecraft/net/minecraft/src/EntityEnderEye.java
index 1aa9a40..a4ebbd6 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityEnderEye.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityEnderEye.java
@@ -2,25 +2,24 @@
 
 public class EntityEnderEye extends Entity
 {
-	public int field_70226_a = 0;
 	private double targetX;
 	private double targetY;
 	private double targetZ;
 	private int despawnTimer;
 	private boolean shatterOrDrop;
 	
-	public EntityEnderEye(World par1World)
+	public EntityEnderEye(World p_i1757_1_)
 	{
-		super(par1World);
+		super(p_i1757_1_);
 		setSize(0.25F, 0.25F);
 	}
 	
-	public EntityEnderEye(World par1World, double par2, double par4, double par6)
+	public EntityEnderEye(World p_i1758_1_, double p_i1758_2_, double p_i1758_4_, double p_i1758_6_)
 	{
-		super(par1World);
+		super(p_i1758_1_);
 		despawnTimer = 0;
 		setSize(0.25F, 0.25F);
-		setPosition(par2, par4, par6);
+		setPosition(p_i1758_2_, p_i1758_4_, p_i1758_6_);
 		yOffset = 0.0F;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityEnderPearl.java b/RMCClient/minecraft/net/minecraft/src/EntityEnderPearl.java
index 603a8b4..905cb8a 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityEnderPearl.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityEnderPearl.java
@@ -2,26 +2,26 @@
 
 public class EntityEnderPearl extends EntityThrowable
 {
-	public EntityEnderPearl(World par1World)
+	public EntityEnderPearl(World p_i1782_1_)
 	{
-		super(par1World);
+		super(p_i1782_1_);
 	}
 	
-	public EntityEnderPearl(World par1World, double par2, double par4, double par6)
+	public EntityEnderPearl(World p_i1784_1_, double p_i1784_2_, double p_i1784_4_, double p_i1784_6_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1784_1_, p_i1784_2_, p_i1784_4_, p_i1784_6_);
 	}
 	
-	public EntityEnderPearl(World par1World, EntityLiving par2EntityLiving)
+	public EntityEnderPearl(World p_i1783_1_, EntityLivingBase p_i1783_2_)
 	{
-		super(par1World, par2EntityLiving);
+		super(p_i1783_1_, p_i1783_2_);
 	}
 	
 	@Override protected void onImpact(MovingObjectPosition par1MovingObjectPosition)
 	{
 		if(par1MovingObjectPosition.entityHit != null)
 		{
-			par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, getThrower()), 0);
+			par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, getThrower()), 0.0F);
 		}
 		for(int var2 = 0; var2 < 32; ++var2)
 		{
@@ -34,9 +34,13 @@
 				EntityPlayerMP var3 = (EntityPlayerMP) getThrower();
 				if(!var3.playerNetServerHandler.connectionClosed && var3.worldObj == worldObj)
 				{
+					if(getThrower().isRiding())
+					{
+						getThrower().mountEntity((Entity) null);
+					}
 					getThrower().setPositionAndUpdate(posX, posY, posZ);
 					getThrower().fallDistance = 0.0F;
-					getThrower().attackEntityFrom(DamageSource.fall, 5);
+					getThrower().attackEntityFrom(DamageSource.fall, 5.0F);
 				}
 			}
 			setDead();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityEnderman.java b/RMCClient/minecraft/net/minecraft/src/EntityEnderman.java
index 2d31aba..e1f15c2 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityEnderman.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityEnderman.java
@@ -1,22 +1,25 @@
 package net.minecraft.src;
 
+import java.util.UUID;
+
 public class EntityEnderman extends EntityMob
 {
+	private static final UUID field_110192_bp = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
+	private static final AttributeModifier field_110193_bq = new AttributeModifier(field_110192_bp, "Attacking speed boost", 6.199999809265137D, 0).func_111168_a(false);
 	private static boolean[] carriableBlocks = new boolean[256];
-	private int teleportDelay = 0;
-	private int field_70826_g = 0;
+	private int teleportDelay;
+	private int field_70826_g;
+	private Entity field_110194_bu;
 	private boolean field_104003_g;
 	
-	public EntityEnderman(World par1World)
+	public EntityEnderman(World p_i1734_1_)
 	{
-		super(par1World);
-		texture = "/mob/enderman.png";
-		moveSpeed = 0.2F;
+		super(p_i1734_1_);
 		setSize(0.6F, 2.9F);
 		stepHeight = 1.0F;
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -85,9 +88,12 @@
 		return null;
 	}
 	
-	@Override public int getAttackStrength(Entity par1Entity)
+	@Override protected void func_110147_ax()
 	{
-		return 7;
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(40.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.30000001192092896D);
+		func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(7.0D);
 	}
 	
 	public int getCarried()
@@ -120,11 +126,6 @@
 		return isScreaming() ? "mob.endermen.scream" : "mob.endermen.idle";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 40;
-	}
-	
 	public boolean isScreaming()
 	{
 		return dataWatcher.getWatchableObjectByte(18) > 0;
@@ -134,10 +135,19 @@
 	{
 		if(isWet())
 		{
-			attackEntityFrom(DamageSource.drown, 1);
+			attackEntityFrom(DamageSource.drown, 1.0F);
 		}
-		moveSpeed = entityToAttack != null ? 6.5F : 0.3F;
-		int var1;
+		if(field_110194_bu != entityToAttack)
+		{
+			AttributeInstance var1 = func_110148_a(SharedMonsterAttributes.field_111263_d);
+			var1.func_111124_b(field_110193_bq);
+			if(entityToAttack != null)
+			{
+				var1.func_111121_a(field_110193_bq);
+			}
+		}
+		field_110194_bu = entityToAttack;
+		int var6;
 		if(!worldObj.isRemote && worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"))
 		{
 			int var2;
@@ -147,39 +157,39 @@
 			{
 				if(rand.nextInt(20) == 0)
 				{
-					var1 = MathHelper.floor_double(posX - 2.0D + rand.nextDouble() * 4.0D);
+					var6 = MathHelper.floor_double(posX - 2.0D + rand.nextDouble() * 4.0D);
 					var2 = MathHelper.floor_double(posY + rand.nextDouble() * 3.0D);
 					var3 = MathHelper.floor_double(posZ - 2.0D + rand.nextDouble() * 4.0D);
-					var4 = worldObj.getBlockId(var1, var2, var3);
+					var4 = worldObj.getBlockId(var6, var2, var3);
 					if(carriableBlocks[var4])
 					{
-						setCarried(worldObj.getBlockId(var1, var2, var3));
-						setCarryingData(worldObj.getBlockMetadata(var1, var2, var3));
-						worldObj.setBlock(var1, var2, var3, 0);
+						setCarried(worldObj.getBlockId(var6, var2, var3));
+						setCarryingData(worldObj.getBlockMetadata(var6, var2, var3));
+						worldObj.setBlock(var6, var2, var3, 0);
 					}
 				}
 			} else if(rand.nextInt(2000) == 0)
 			{
-				var1 = MathHelper.floor_double(posX - 1.0D + rand.nextDouble() * 2.0D);
+				var6 = MathHelper.floor_double(posX - 1.0D + rand.nextDouble() * 2.0D);
 				var2 = MathHelper.floor_double(posY + rand.nextDouble() * 2.0D);
 				var3 = MathHelper.floor_double(posZ - 1.0D + rand.nextDouble() * 2.0D);
-				var4 = worldObj.getBlockId(var1, var2, var3);
-				int var5 = worldObj.getBlockId(var1, var2 - 1, var3);
+				var4 = worldObj.getBlockId(var6, var2, var3);
+				int var5 = worldObj.getBlockId(var6, var2 - 1, var3);
 				if(var4 == 0 && var5 > 0 && Block.blocksList[var5].renderAsNormalBlock())
 				{
-					worldObj.setBlock(var1, var2, var3, getCarried(), getCarryingData(), 3);
+					worldObj.setBlock(var6, var2, var3, getCarried(), getCarryingData(), 3);
 					setCarried(0);
 				}
 			}
 		}
-		for(var1 = 0; var1 < 2; ++var1)
+		for(var6 = 0; var6 < 2; ++var6)
 		{
 			worldObj.spawnParticle("portal", posX + (rand.nextDouble() - 0.5D) * width, posY + rand.nextDouble() * height - 0.25D, posZ + (rand.nextDouble() - 0.5D) * width, (rand.nextDouble() - 0.5D) * 2.0D, -rand.nextDouble(), (rand.nextDouble() - 0.5D) * 2.0D);
 		}
 		if(worldObj.isDaytime() && !worldObj.isRemote)
 		{
-			float var6 = getBrightness(1.0F);
-			if(var6 > 0.5F && worldObj.canBlockSeeTheSky(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ)) && rand.nextFloat() * 30.0F < (var6 - 0.4F) * 2.0F)
+			float var7 = getBrightness(1.0F);
+			if(var7 > 0.5F && worldObj.canBlockSeeTheSky(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ)) && rand.nextFloat() * 30.0F < (var7 - 0.4F) * 2.0F)
 			{
 				entityToAttack = null;
 				setScreaming(false);
@@ -209,8 +219,6 @@
 			{
 				if(entityToAttack instanceof EntityPlayer && shouldAttackPlayer((EntityPlayer) entityToAttack))
 				{
-					moveStrafing = moveForward = 0.0F;
-					moveSpeed = 0.0F;
 					if(entityToAttack.getDistanceSqToEntity(this) < 16.0D)
 					{
 						teleportRandomly();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityExpBottle.java b/RMCClient/minecraft/net/minecraft/src/EntityExpBottle.java
index e79a74e..bc9279b 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityExpBottle.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityExpBottle.java
@@ -2,19 +2,19 @@
 
 public class EntityExpBottle extends EntityThrowable
 {
-	public EntityExpBottle(World par1World)
+	public EntityExpBottle(World p_i1785_1_)
 	{
-		super(par1World);
+		super(p_i1785_1_);
 	}
 	
-	public EntityExpBottle(World par1World, double par2, double par4, double par6)
+	public EntityExpBottle(World p_i1787_1_, double p_i1787_2_, double p_i1787_4_, double p_i1787_6_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1787_1_, p_i1787_2_, p_i1787_4_, p_i1787_6_);
 	}
 	
-	public EntityExpBottle(World par1World, EntityLiving par2EntityLiving)
+	public EntityExpBottle(World p_i1786_1_, EntityLivingBase p_i1786_2_)
 	{
-		super(par1World, par2EntityLiving);
+		super(p_i1786_1_, p_i1786_2_);
 	}
 	
 	@Override protected float func_70182_d()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityExplodeFX.java b/RMCClient/minecraft/net/minecraft/src/EntityExplodeFX.java
index 7265f30..8025b99 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityExplodeFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityExplodeFX.java
@@ -2,12 +2,12 @@
 
 public class EntityExplodeFX extends EntityFX
 {
-	public EntityExplodeFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityExplodeFX(World p_i1205_1_, double p_i1205_2_, double p_i1205_4_, double p_i1205_6_, double p_i1205_8_, double p_i1205_10_, double p_i1205_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
-		motionX = par8 + (float) (Math.random() * 2.0D - 1.0D) * 0.05F;
-		motionY = par10 + (float) (Math.random() * 2.0D - 1.0D) * 0.05F;
-		motionZ = par12 + (float) (Math.random() * 2.0D - 1.0D) * 0.05F;
+		super(p_i1205_1_, p_i1205_2_, p_i1205_4_, p_i1205_6_, p_i1205_8_, p_i1205_10_, p_i1205_12_);
+		motionX = p_i1205_8_ + (float) (Math.random() * 2.0D - 1.0D) * 0.05F;
+		motionY = p_i1205_10_ + (float) (Math.random() * 2.0D - 1.0D) * 0.05F;
+		motionZ = p_i1205_12_ + (float) (Math.random() * 2.0D - 1.0D) * 0.05F;
 		particleRed = particleGreen = particleBlue = rand.nextFloat() * 0.3F + 0.7F;
 		particleScale = rand.nextFloat() * rand.nextFloat() * 6.0F + 1.0F;
 		particleMaxAge = (int) (16.0D / (rand.nextFloat() * 0.8D + 0.2D)) + 2;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFX.java b/RMCClient/minecraft/net/minecraft/src/EntityFX.java
index 4335f1e..cd3ac61 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFX.java
@@ -19,19 +19,16 @@
 	public static double interpPosY;
 	public static double interpPosZ;
 	
-	protected EntityFX(World par1World, double par2, double par4, double par6)
+	protected EntityFX(World p_i1218_1_, double p_i1218_2_, double p_i1218_4_, double p_i1218_6_)
 	{
-		super(par1World);
-		particleAge = 0;
-		particleMaxAge = 0;
+		super(p_i1218_1_);
 		particleAlpha = 1.0F;
-		particleIcon = null;
 		setSize(0.2F, 0.2F);
 		yOffset = height / 2.0F;
-		setPosition(par2, par4, par6);
-		lastTickPosX = par2;
-		lastTickPosY = par4;
-		lastTickPosZ = par6;
+		setPosition(p_i1218_2_, p_i1218_4_, p_i1218_6_);
+		lastTickPosX = p_i1218_2_;
+		lastTickPosY = p_i1218_4_;
+		lastTickPosZ = p_i1218_6_;
 		particleRed = particleGreen = particleBlue = 1.0F;
 		particleTextureJitterX = rand.nextFloat() * 3.0F;
 		particleTextureJitterY = rand.nextFloat() * 3.0F;
@@ -40,12 +37,12 @@
 		particleAge = 0;
 	}
 	
-	public EntityFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityFX(World p_i1219_1_, double p_i1219_2_, double p_i1219_4_, double p_i1219_6_, double p_i1219_8_, double p_i1219_10_, double p_i1219_12_)
 	{
-		this(par1World, par2, par4, par6);
-		motionX = par8 + (float) (Math.random() * 2.0D - 1.0D) * 0.4F;
-		motionY = par10 + (float) (Math.random() * 2.0D - 1.0D) * 0.4F;
-		motionZ = par12 + (float) (Math.random() * 2.0D - 1.0D) * 0.4F;
+		this(p_i1219_1_, p_i1219_2_, p_i1219_4_, p_i1219_6_);
+		motionX = p_i1219_8_ + (float) (Math.random() * 2.0D - 1.0D) * 0.4F;
+		motionY = p_i1219_10_ + (float) (Math.random() * 2.0D - 1.0D) * 0.4F;
+		motionZ = p_i1219_12_ + (float) (Math.random() * 2.0D - 1.0D) * 0.4F;
 		float var14 = (float) (Math.random() + Math.random() + 1.0D) * 0.15F;
 		float var15 = MathHelper.sqrt_double(motionX * motionX + motionY * motionY + motionZ * motionZ);
 		motionX = motionX / var15 * var14 * 0.4000000059604645D;
@@ -65,6 +62,18 @@
 	
 	@Override protected void entityInit()
 	{
+	}
+	
+	public void func_110125_a(Icon p_110125_1_)
+	{
+		if(getFXLayer() == 1)
+		{
+			particleIcon = p_110125_1_;
+		} else
+		{
+			if(getFXLayer() != 2) throw new RuntimeException("Invalid call to Particle.setTex, use coordinate methods");
+			particleIcon = p_110125_1_;
+		}
 	}
 	
 	public float getBlueColorF()
@@ -160,18 +169,6 @@
 	public void setAlphaF(float par1)
 	{
 		particleAlpha = par1;
-	}
-	
-	public void setParticleIcon(RenderEngine par1RenderEngine, Icon par2Icon)
-	{
-		if(getFXLayer() == 1)
-		{
-			particleIcon = par2Icon;
-		} else
-		{
-			if(getFXLayer() != 2) throw new RuntimeException("Invalid call to Particle.setTex, use coordinate methods");
-			particleIcon = par2Icon;
-		}
 	}
 	
 	public void setParticleTextureIndex(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFallingSand.java b/RMCClient/minecraft/net/minecraft/src/EntityFallingSand.java
index bf21f61..3cea04a 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFallingSand.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFallingSand.java
@@ -15,45 +15,37 @@
 	private float fallHurtAmount;
 	public NBTTagCompound fallingBlockTileEntityData;
 	
-	public EntityFallingSand(World par1World)
+	public EntityFallingSand(World p_i1706_1_)
 	{
-		super(par1World);
-		fallTime = 0;
+		super(p_i1706_1_);
 		shouldDropItem = true;
-		isBreakingAnvil = false;
-		isAnvil = false;
 		fallHurtMax = 40;
 		fallHurtAmount = 2.0F;
-		fallingBlockTileEntityData = null;
 	}
 	
-	public EntityFallingSand(World par1World, double par2, double par4, double par6, int par8)
+	public EntityFallingSand(World p_i1707_1_, double p_i1707_2_, double p_i1707_4_, double p_i1707_6_, int p_i1707_8_)
 	{
-		this(par1World, par2, par4, par6, par8, 0);
+		this(p_i1707_1_, p_i1707_2_, p_i1707_4_, p_i1707_6_, p_i1707_8_, 0);
 	}
 	
-	public EntityFallingSand(World par1World, double par2, double par4, double par6, int par8, int par9)
+	public EntityFallingSand(World p_i1708_1_, double p_i1708_2_, double p_i1708_4_, double p_i1708_6_, int p_i1708_8_, int p_i1708_9_)
 	{
-		super(par1World);
-		fallTime = 0;
+		super(p_i1708_1_);
 		shouldDropItem = true;
-		isBreakingAnvil = false;
-		isAnvil = false;
 		fallHurtMax = 40;
 		fallHurtAmount = 2.0F;
-		fallingBlockTileEntityData = null;
-		blockID = par8;
-		metadata = par9;
+		blockID = p_i1708_8_;
+		metadata = p_i1708_9_;
 		preventEntitySpawning = true;
 		setSize(0.98F, 0.98F);
 		yOffset = height / 2.0F;
-		setPosition(par2, par4, par6);
+		setPosition(p_i1708_2_, p_i1708_4_, p_i1708_6_);
 		motionX = 0.0D;
 		motionY = 0.0D;
 		motionZ = 0.0D;
-		prevPosX = par2;
-		prevPosY = par4;
-		prevPosZ = par6;
+		prevPosX = p_i1708_2_;
+		prevPosY = p_i1708_4_;
+		prevPosZ = p_i1708_6_;
 	}
 	
 	@Override public boolean canBeCollidedWith()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFireball.java b/RMCClient/minecraft/net/minecraft/src/EntityFireball.java
index 8d0e90c..a291bf6 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFireball.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFireball.java
@@ -7,52 +7,52 @@
 	private int xTile = -1;
 	private int yTile = -1;
 	private int zTile = -1;
-	private int inTile = 0;
-	private boolean inGround = false;
-	public EntityLiving shootingEntity;
+	private int inTile;
+	private boolean inGround;
+	public EntityLivingBase shootingEntity;
 	private int ticksAlive;
-	private int ticksInAir = 0;
+	private int ticksInAir;
 	public double accelerationX;
 	public double accelerationY;
 	public double accelerationZ;
 	
-	public EntityFireball(World par1World)
+	public EntityFireball(World p_i1759_1_)
 	{
-		super(par1World);
+		super(p_i1759_1_);
 		setSize(1.0F, 1.0F);
 	}
 	
-	public EntityFireball(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityFireball(World p_i1760_1_, double p_i1760_2_, double p_i1760_4_, double p_i1760_6_, double p_i1760_8_, double p_i1760_10_, double p_i1760_12_)
 	{
-		super(par1World);
+		super(p_i1760_1_);
 		setSize(1.0F, 1.0F);
-		setLocationAndAngles(par2, par4, par6, rotationYaw, rotationPitch);
-		setPosition(par2, par4, par6);
-		double var14 = MathHelper.sqrt_double(par8 * par8 + par10 * par10 + par12 * par12);
-		accelerationX = par8 / var14 * 0.1D;
-		accelerationY = par10 / var14 * 0.1D;
-		accelerationZ = par12 / var14 * 0.1D;
+		setLocationAndAngles(p_i1760_2_, p_i1760_4_, p_i1760_6_, rotationYaw, rotationPitch);
+		setPosition(p_i1760_2_, p_i1760_4_, p_i1760_6_);
+		double var14 = MathHelper.sqrt_double(p_i1760_8_ * p_i1760_8_ + p_i1760_10_ * p_i1760_10_ + p_i1760_12_ * p_i1760_12_);
+		accelerationX = p_i1760_8_ / var14 * 0.1D;
+		accelerationY = p_i1760_10_ / var14 * 0.1D;
+		accelerationZ = p_i1760_12_ / var14 * 0.1D;
 	}
 	
-	public EntityFireball(World par1World, EntityLiving par2EntityLiving, double par3, double par5, double par7)
+	public EntityFireball(World p_i1761_1_, EntityLivingBase p_i1761_2_, double p_i1761_3_, double p_i1761_5_, double p_i1761_7_)
 	{
-		super(par1World);
-		shootingEntity = par2EntityLiving;
+		super(p_i1761_1_);
+		shootingEntity = p_i1761_2_;
 		setSize(1.0F, 1.0F);
-		setLocationAndAngles(par2EntityLiving.posX, par2EntityLiving.posY, par2EntityLiving.posZ, par2EntityLiving.rotationYaw, par2EntityLiving.rotationPitch);
+		setLocationAndAngles(p_i1761_2_.posX, p_i1761_2_.posY, p_i1761_2_.posZ, p_i1761_2_.rotationYaw, p_i1761_2_.rotationPitch);
 		setPosition(posX, posY, posZ);
 		yOffset = 0.0F;
 		motionX = motionY = motionZ = 0.0D;
-		par3 += rand.nextGaussian() * 0.4D;
-		par5 += rand.nextGaussian() * 0.4D;
-		par7 += rand.nextGaussian() * 0.4D;
-		double var9 = MathHelper.sqrt_double(par3 * par3 + par5 * par5 + par7 * par7);
-		accelerationX = par3 / var9 * 0.1D;
-		accelerationY = par5 / var9 * 0.1D;
-		accelerationZ = par7 / var9 * 0.1D;
+		p_i1761_3_ += rand.nextGaussian() * 0.4D;
+		p_i1761_5_ += rand.nextGaussian() * 0.4D;
+		p_i1761_7_ += rand.nextGaussian() * 0.4D;
+		double var9 = MathHelper.sqrt_double(p_i1761_3_ * p_i1761_3_ + p_i1761_5_ * p_i1761_5_ + p_i1761_7_ * p_i1761_7_);
+		accelerationX = p_i1761_3_ / var9 * 0.1D;
+		accelerationY = p_i1761_5_ / var9 * 0.1D;
+		accelerationZ = p_i1761_7_ / var9 * 0.1D;
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -70,9 +70,9 @@
 					accelerationY = motionY * 0.1D;
 					accelerationZ = motionZ * 0.1D;
 				}
-				if(par1DamageSource.getEntity() instanceof EntityLiving)
+				if(par1DamageSource.getEntity() instanceof EntityLivingBase)
 				{
-					shootingEntity = (EntityLiving) par1DamageSource.getEntity();
+					shootingEntity = (EntityLivingBase) par1DamageSource.getEntity();
 				}
 				return true;
 			} else return false;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFireworkOverlayFX.java b/RMCClient/minecraft/net/minecraft/src/EntityFireworkOverlayFX.java
index 1cef477..d4ec258 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFireworkOverlayFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFireworkOverlayFX.java
@@ -2,9 +2,9 @@
 
 public class EntityFireworkOverlayFX extends EntityFX
 {
-	protected EntityFireworkOverlayFX(World par1World, double par2, double par4, double par6)
+	protected EntityFireworkOverlayFX(World p_i1206_1_, double p_i1206_2_, double p_i1206_4_, double p_i1206_6_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1206_1_, p_i1206_2_, p_i1206_4_, p_i1206_6_);
 		particleMaxAge = 4;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFireworkRocket.java b/RMCClient/minecraft/net/minecraft/src/EntityFireworkRocket.java
index 774fa4e..322ae01 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFireworkRocket.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFireworkRocket.java
@@ -5,24 +5,24 @@
 	private int fireworkAge;
 	private int lifetime;
 	
-	public EntityFireworkRocket(World par1World)
+	public EntityFireworkRocket(World p_i1762_1_)
 	{
-		super(par1World);
+		super(p_i1762_1_);
 		setSize(0.25F, 0.25F);
 	}
 	
-	public EntityFireworkRocket(World par1World, double par2, double par4, double par6, ItemStack par8ItemStack)
+	public EntityFireworkRocket(World p_i1763_1_, double p_i1763_2_, double p_i1763_4_, double p_i1763_6_, ItemStack p_i1763_8_)
 	{
-		super(par1World);
+		super(p_i1763_1_);
 		fireworkAge = 0;
 		setSize(0.25F, 0.25F);
-		setPosition(par2, par4, par6);
+		setPosition(p_i1763_2_, p_i1763_4_, p_i1763_6_);
 		yOffset = 0.0F;
 		int var9 = 1;
-		if(par8ItemStack != null && par8ItemStack.hasTagCompound())
+		if(p_i1763_8_ != null && p_i1763_8_.hasTagCompound())
 		{
-			dataWatcher.updateObject(8, par8ItemStack);
-			NBTTagCompound var10 = par8ItemStack.getTagCompound();
+			dataWatcher.updateObject(8, p_i1763_8_);
+			NBTTagCompound var10 = p_i1763_8_.getTagCompound();
 			NBTTagCompound var11 = var10.getCompoundTag("Fireworks");
 			if(var11 != null)
 			{
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFireworkSparkFX.java b/RMCClient/minecraft/net/minecraft/src/EntityFireworkSparkFX.java
index 9525370..0483bf7 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFireworkSparkFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFireworkSparkFX.java
@@ -11,13 +11,13 @@
 	private float field_92052_aC;
 	private boolean field_92053_aD;
 	
-	public EntityFireworkSparkFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, EffectRenderer par14EffectRenderer)
+	public EntityFireworkSparkFX(World p_i1207_1_, double p_i1207_2_, double p_i1207_4_, double p_i1207_6_, double p_i1207_8_, double p_i1207_10_, double p_i1207_12_, EffectRenderer p_i1207_14_)
 	{
-		super(par1World, par2, par4, par6);
-		motionX = par8;
-		motionY = par10;
-		motionZ = par12;
-		field_92047_az = par14EffectRenderer;
+		super(p_i1207_1_, p_i1207_2_, p_i1207_4_, p_i1207_6_);
+		motionX = p_i1207_8_;
+		motionY = p_i1207_10_;
+		motionZ = p_i1207_12_;
+		field_92047_az = p_i1207_14_;
 		particleScale *= 0.75F;
 		particleMaxAge = 48 + rand.nextInt(12);
 		noClip = false;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFireworkStarterFX.java b/RMCClient/minecraft/net/minecraft/src/EntityFireworkStarterFX.java
index ce5d5aa..38793c8 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFireworkStarterFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFireworkStarterFX.java
@@ -4,22 +4,22 @@
 
 public class EntityFireworkStarterFX extends EntityFX
 {
-	private int field_92042_ax = 0;
+	private int field_92042_ax;
 	private final EffectRenderer field_92040_ay;
 	private NBTTagList fireworkExplosions;
 	boolean field_92041_a;
 	
-	public EntityFireworkStarterFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, EffectRenderer par14EffectRenderer, NBTTagCompound par15NBTTagCompound)
+	public EntityFireworkStarterFX(World p_i1208_1_, double p_i1208_2_, double p_i1208_4_, double p_i1208_6_, double p_i1208_8_, double p_i1208_10_, double p_i1208_12_, EffectRenderer p_i1208_14_, NBTTagCompound p_i1208_15_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
-		motionX = par8;
-		motionY = par10;
-		motionZ = par12;
-		field_92040_ay = par14EffectRenderer;
+		super(p_i1208_1_, p_i1208_2_, p_i1208_4_, p_i1208_6_, 0.0D, 0.0D, 0.0D);
+		motionX = p_i1208_8_;
+		motionY = p_i1208_10_;
+		motionZ = p_i1208_12_;
+		field_92040_ay = p_i1208_14_;
 		particleMaxAge = 8;
-		if(par15NBTTagCompound != null)
+		if(p_i1208_15_ != null)
 		{
-			fireworkExplosions = par15NBTTagCompound.getTagList("Explosions");
+			fireworkExplosions = p_i1208_15_.getTagList("Explosions");
 			if(fireworkExplosions.tagCount() == 0)
 			{
 				fireworkExplosions = null;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFishHook.java b/RMCClient/minecraft/net/minecraft/src/EntityFishHook.java
index 24864c3..c639a73 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFishHook.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFishHook.java
@@ -25,48 +25,36 @@
 	private double velocityY;
 	private double velocityZ;
 	
-	public EntityFishHook(World par1World)
+	public EntityFishHook(World p_i1764_1_)
 	{
-		super(par1World);
+		super(p_i1764_1_);
 		xTile = -1;
 		yTile = -1;
 		zTile = -1;
-		inTile = 0;
-		inGround = false;
-		shake = 0;
-		ticksInAir = 0;
-		ticksCatchable = 0;
-		bobber = null;
 		setSize(0.25F, 0.25F);
 		ignoreFrustumCheck = true;
 	}
 	
-	public EntityFishHook(World par1World, double par2, double par4, double par6, EntityPlayer par8EntityPlayer)
+	public EntityFishHook(World p_i1765_1_, double p_i1765_2_, double p_i1765_4_, double p_i1765_6_, EntityPlayer p_i1765_8_)
 	{
-		this(par1World);
-		setPosition(par2, par4, par6);
+		this(p_i1765_1_);
+		setPosition(p_i1765_2_, p_i1765_4_, p_i1765_6_);
 		ignoreFrustumCheck = true;
-		angler = par8EntityPlayer;
-		par8EntityPlayer.fishEntity = this;
+		angler = p_i1765_8_;
+		p_i1765_8_.fishEntity = this;
 	}
 	
-	public EntityFishHook(World par1World, EntityPlayer par2EntityPlayer)
+	public EntityFishHook(World p_i1766_1_, EntityPlayer p_i1766_2_)
 	{
-		super(par1World);
+		super(p_i1766_1_);
 		xTile = -1;
 		yTile = -1;
 		zTile = -1;
-		inTile = 0;
-		inGround = false;
-		shake = 0;
-		ticksInAir = 0;
-		ticksCatchable = 0;
-		bobber = null;
 		ignoreFrustumCheck = true;
-		angler = par2EntityPlayer;
+		angler = p_i1766_2_;
 		angler.fishEntity = this;
 		setSize(0.25F, 0.25F);
-		setLocationAndAngles(par2EntityPlayer.posX, par2EntityPlayer.posY + 1.62D - par2EntityPlayer.yOffset, par2EntityPlayer.posZ, par2EntityPlayer.rotationYaw, par2EntityPlayer.rotationPitch);
+		setLocationAndAngles(p_i1766_2_.posX, p_i1766_2_.posY + 1.62D - p_i1766_2_.yOffset, p_i1766_2_.posZ, p_i1766_2_.rotationYaw, p_i1766_2_.rotationPitch);
 		posX -= MathHelper.cos(rotationYaw / 180.0F * (float) Math.PI) * 0.16F;
 		posY -= 0.10000000149011612D;
 		posZ -= MathHelper.sin(rotationYaw / 180.0F * (float) Math.PI) * 0.16F;
@@ -262,7 +250,7 @@
 			{
 				if(var3.entityHit != null)
 				{
-					if(var3.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, angler), 0))
+					if(var3.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, angler), 0.0F))
 					{
 						bobber = var3.entityHit;
 					}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFlameFX.java b/RMCClient/minecraft/net/minecraft/src/EntityFlameFX.java
index 6c5e5d1..0f510a6 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFlameFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFlameFX.java
@@ -4,15 +4,15 @@
 {
 	private float flameScale;
 	
-	public EntityFlameFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityFlameFX(World p_i1209_1_, double p_i1209_2_, double p_i1209_4_, double p_i1209_6_, double p_i1209_8_, double p_i1209_10_, double p_i1209_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
-		motionX = motionX * 0.009999999776482582D + par8;
-		motionY = motionY * 0.009999999776482582D + par10;
-		motionZ = motionZ * 0.009999999776482582D + par12;
-		double var10000 = par2 + (rand.nextFloat() - rand.nextFloat()) * 0.05F;
-		var10000 = par4 + (rand.nextFloat() - rand.nextFloat()) * 0.05F;
-		var10000 = par6 + (rand.nextFloat() - rand.nextFloat()) * 0.05F;
+		super(p_i1209_1_, p_i1209_2_, p_i1209_4_, p_i1209_6_, p_i1209_8_, p_i1209_10_, p_i1209_12_);
+		motionX = motionX * 0.009999999776482582D + p_i1209_8_;
+		motionY = motionY * 0.009999999776482582D + p_i1209_10_;
+		motionZ = motionZ * 0.009999999776482582D + p_i1209_12_;
+		double var10000 = p_i1209_2_ + (rand.nextFloat() - rand.nextFloat()) * 0.05F;
+		var10000 = p_i1209_4_ + (rand.nextFloat() - rand.nextFloat()) * 0.05F;
+		var10000 = p_i1209_6_ + (rand.nextFloat() - rand.nextFloat()) * 0.05F;
 		flameScale = particleScale;
 		particleRed = particleGreen = particleBlue = 1.0F;
 		particleMaxAge = (int) (8.0D / (Math.random() * 0.8D + 0.2D)) + 4;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFlying.java b/RMCClient/minecraft/net/minecraft/src/EntityFlying.java
index 0845d1c..c2c8647 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFlying.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFlying.java
@@ -2,9 +2,9 @@
 
 public abstract class EntityFlying extends EntityLiving
 {
-	public EntityFlying(World par1World)
+	public EntityFlying(World p_i1587_1_)
 	{
-		super(par1World);
+		super(p_i1587_1_);
 	}
 	
 	@Override protected void fall(float par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityFootStepFX.java b/RMCClient/minecraft/net/minecraft/src/EntityFootStepFX.java
index 1155d77..9cf1cec 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityFootStepFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityFootStepFX.java
@@ -4,14 +4,15 @@
 
 public class EntityFootStepFX extends EntityFX
 {
-	private int field_70576_a = 0;
-	private int field_70578_aq = 0;
-	private RenderEngine currentFootSteps;
+	private static final ResourceLocation field_110126_a = new ResourceLocation("textures/particle/footprint.png");
+	private int field_70576_a;
+	private int field_70578_aq;
+	private TextureManager currentFootSteps;
 	
-	public EntityFootStepFX(RenderEngine par1RenderEngine, World par2World, double par3, double par5, double par7)
+	public EntityFootStepFX(TextureManager p_i1210_1_, World p_i1210_2_, double p_i1210_3_, double p_i1210_5_, double p_i1210_7_)
 	{
-		super(par2World, par3, par5, par7, 0.0D, 0.0D, 0.0D);
-		currentFootSteps = par1RenderEngine;
+		super(p_i1210_2_, p_i1210_3_, p_i1210_5_, p_i1210_7_, 0.0D, 0.0D, 0.0D);
+		currentFootSteps = p_i1210_1_;
 		motionX = motionY = motionZ = 0.0D;
 		field_70578_aq = 200;
 	}
@@ -46,7 +47,7 @@
 		float var12 = (float) (posY - interpPosY);
 		float var13 = (float) (posZ - interpPosZ);
 		float var14 = worldObj.getLightBrightness(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ));
-		currentFootSteps.bindTexture("/misc/footprint.png");
+		currentFootSteps.func_110577_a(field_110126_a);
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 		par1Tessellator.startDrawingQuads();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityGhast.java b/RMCClient/minecraft/net/minecraft/src/EntityGhast.java
index a5b1123..e993eae 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityGhast.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityGhast.java
@@ -2,31 +2,30 @@
 
 public class EntityGhast extends EntityFlying implements IMob
 {
-	public int courseChangeCooldown = 0;
+	public int courseChangeCooldown;
 	public double waypointX;
 	public double waypointY;
 	public double waypointZ;
-	private Entity targetedEntity = null;
-	private int aggroCooldown = 0;
-	public int prevAttackCounter = 0;
-	public int attackCounter = 0;
+	private Entity targetedEntity;
+	private int aggroCooldown;
+	public int prevAttackCounter;
+	public int attackCounter;
 	private int explosionStrength = 1;
 	
-	public EntityGhast(World par1World)
+	public EntityGhast(World p_i1735_1_)
 	{
-		super(par1World);
-		texture = "/mob/ghast.png";
+		super(p_i1735_1_);
 		setSize(4.0F, 4.0F);
 		isImmuneToFire = true;
 		experienceValue = 5;
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else if("fireball".equals(par1DamageSource.getDamageType()) && par1DamageSource.getEntity() instanceof EntityPlayer)
 		{
-			super.attackEntityFrom(par1DamageSource, 1000);
+			super.attackEntityFrom(par1DamageSource, 1000.0F);
 			((EntityPlayer) par1DamageSource.getEntity()).triggerAchievement(AchievementList.ghast);
 			return true;
 		} else return super.attackEntityFrom(par1DamageSource, par2);
@@ -51,6 +50,17 @@
 	{
 		super.entityInit();
 		dataWatcher.addObject(16, Byte.valueOf((byte) 0));
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(10.0D);
+	}
+	
+	public boolean func_110182_bF()
+	{
+		return dataWatcher.getWatchableObjectByte(16) != 0;
 	}
 	
 	@Override public boolean getCanSpawnHere()
@@ -78,11 +88,6 @@
 		return "mob.ghast.moan";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 10;
-	}
-	
 	@Override public int getMaxSpawnedInChunk()
 	{
 		return 1;
@@ -105,13 +110,6 @@
 			if(!worldObj.getCollidingBoundingBoxes(this, var15).isEmpty()) return false;
 		}
 		return true;
-	}
-	
-	@Override public void onUpdate()
-	{
-		super.onUpdate();
-		byte var1 = dataWatcher.getWatchableObjectByte(16);
-		texture = var1 == 1 ? "/mob/ghast_fire.png" : "/mob/ghast.png";
 	}
 	
 	@Override public void readEntityFromNBT(NBTTagCompound par1NBTTagCompound)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityGiantZombie.java b/RMCClient/minecraft/net/minecraft/src/EntityGiantZombie.java
index 5a77bc2..b82ee60 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityGiantZombie.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityGiantZombie.java
@@ -2,27 +2,23 @@
 
 public class EntityGiantZombie extends EntityMob
 {
-	public EntityGiantZombie(World par1World)
+	public EntityGiantZombie(World p_i1736_1_)
 	{
-		super(par1World);
-		texture = "/mob/zombie.png";
-		moveSpeed = 0.5F;
+		super(p_i1736_1_);
 		yOffset *= 6.0F;
 		setSize(width * 6.0F, height * 6.0F);
 	}
 	
-	@Override public int getAttackStrength(Entity par1Entity)
+	@Override protected void func_110147_ax()
 	{
-		return 50;
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(100.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.5D);
+		func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(50.0D);
 	}
 	
 	@Override public float getBlockPathWeight(int par1, int par2, int par3)
 	{
 		return worldObj.getLightBrightness(par1, par2, par3) - 0.5F;
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 100;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityGolem.java b/RMCClient/minecraft/net/minecraft/src/EntityGolem.java
index 3b8c7ad..ee4c75e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityGolem.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityGolem.java
@@ -2,9 +2,9 @@
 
 public abstract class EntityGolem extends EntityCreature implements IAnimals
 {
-	public EntityGolem(World par1World)
+	public EntityGolem(World p_i1686_1_)
 	{
-		super(par1World);
+		super(p_i1686_1_);
 	}
 	
 	@Override protected boolean canDespawn()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityHanging.java b/RMCClient/minecraft/net/minecraft/src/EntityHanging.java
index b7923cd..c06498f 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityHanging.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityHanging.java
@@ -11,21 +11,19 @@
 	public int yPosition;
 	public int zPosition;
 	
-	public EntityHanging(World par1World)
+	public EntityHanging(World p_i1588_1_)
 	{
-		super(par1World);
-		tickCounter1 = 0;
-		hangingDirection = 0;
+		super(p_i1588_1_);
 		yOffset = 0.0F;
 		setSize(0.5F, 0.5F);
 	}
 	
-	public EntityHanging(World par1World, int par2, int par3, int par4, int par5)
+	public EntityHanging(World p_i1589_1_, int p_i1589_2_, int p_i1589_3_, int p_i1589_4_, int p_i1589_5_)
 	{
-		this(par1World);
-		xPosition = par2;
-		yPosition = par3;
-		zPosition = par4;
+		this(p_i1589_1_);
+		xPosition = p_i1589_2_;
+		yPosition = p_i1589_3_;
+		zPosition = p_i1589_4_;
 	}
 	
 	@Override public void addVelocity(double par1, double par3, double par5)
@@ -33,11 +31,11 @@
 		if(!worldObj.isRemote && !isDead && par1 * par1 + par3 * par3 + par5 * par5 > 0.0D)
 		{
 			setDead();
-			dropItemStack();
+			func_110128_b((Entity) null);
 		}
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -46,13 +44,7 @@
 			{
 				setDead();
 				setBeenAttacked();
-				EntityPlayer var3 = null;
-				if(par1DamageSource.getEntity() instanceof EntityPlayer)
-				{
-					var3 = (EntityPlayer) par1DamageSource.getEntity();
-				}
-				if(var3 != null && var3.capabilities.isCreativeMode) return true;
-				dropItemStack();
+				func_110128_b(par1DamageSource.getEntity());
 			}
 			return true;
 		}
@@ -63,10 +55,15 @@
 		return true;
 	}
 	
-	public abstract void dropItemStack();
-	
 	@Override protected void entityInit()
 	{
+	}
+	
+	public abstract void func_110128_b(Entity var1);
+	
+	@Override protected boolean func_142008_O()
+	{
+		return false;
 	}
 	
 	private float func_70517_b(int par1)
@@ -80,7 +77,7 @@
 	
 	@Override public boolean func_85031_j(Entity par1Entity)
 	{
-		return par1Entity instanceof EntityPlayer ? attackEntityFrom(DamageSource.causePlayerDamage((EntityPlayer) par1Entity), 0) : false;
+		return par1Entity instanceof EntityPlayer ? attackEntityFrom(DamageSource.causePlayerDamage((EntityPlayer) par1Entity), 0.0F) : false;
 	}
 	
 	@Override public void moveEntity(double par1, double par3, double par5)
@@ -88,19 +85,22 @@
 		if(!worldObj.isRemote && !isDead && par1 * par1 + par3 * par3 + par5 * par5 > 0.0D)
 		{
 			setDead();
-			dropItemStack();
+			func_110128_b((Entity) null);
 		}
 	}
 	
 	@Override public void onUpdate()
 	{
+		prevPosX = posX;
+		prevPosY = posY;
+		prevPosZ = posZ;
 		if(tickCounter1++ == 100 && !worldObj.isRemote)
 		{
 			tickCounter1 = 0;
 			if(!isDead && !onValidSurface())
 			{
 				setDead();
-				dropItemStack();
+				func_110128_b((Entity) null);
 			}
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityHeartFX.java b/RMCClient/minecraft/net/minecraft/src/EntityHeartFX.java
index 6c16bad..186032c 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityHeartFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityHeartFX.java
@@ -4,20 +4,20 @@
 {
 	float particleScaleOverTime;
 	
-	public EntityHeartFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityHeartFX(World p_i1211_1_, double p_i1211_2_, double p_i1211_4_, double p_i1211_6_, double p_i1211_8_, double p_i1211_10_, double p_i1211_12_)
 	{
-		this(par1World, par2, par4, par6, par8, par10, par12, 2.0F);
+		this(p_i1211_1_, p_i1211_2_, p_i1211_4_, p_i1211_6_, p_i1211_8_, p_i1211_10_, p_i1211_12_, 2.0F);
 	}
 	
-	public EntityHeartFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, float par14)
+	public EntityHeartFX(World p_i1212_1_, double p_i1212_2_, double p_i1212_4_, double p_i1212_6_, double p_i1212_8_, double p_i1212_10_, double p_i1212_12_, float p_i1212_14_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		super(p_i1212_1_, p_i1212_2_, p_i1212_4_, p_i1212_6_, 0.0D, 0.0D, 0.0D);
 		motionX *= 0.009999999776482582D;
 		motionY *= 0.009999999776482582D;
 		motionZ *= 0.009999999776482582D;
 		motionY += 0.1D;
 		particleScale *= 0.75F;
-		particleScale *= par14;
+		particleScale *= p_i1212_14_;
 		particleScaleOverTime = particleScale;
 		particleMaxAge = 16;
 		noClip = false;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityHorse.java b/RMCClient/minecraft/net/minecraft/src/EntityHorse.java
new file mode 100644
index 0000000..24d777d
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityHorse.java
@@ -0,0 +1,1400 @@
+package net.minecraft.src;
+
+import java.util.Iterator;
+import java.util.List;
+
+public class EntityHorse extends EntityAnimal implements IInvBasic
+{
+	private static final IEntitySelector field_110276_bu = new EntityHorseBredSelector();
+	private static final Attribute field_110271_bv = new RangedAttribute("horse.jumpStrength", 0.7D, 0.0D, 2.0D).func_111117_a("Jump Strength").func_111112_a(true);
+	private static final String[] field_110270_bw = new String[] { null, "textures/entity/horse/armor/horse_armor_iron.png", "textures/entity/horse/armor/horse_armor_gold.png", "textures/entity/horse/armor/horse_armor_diamond.png" };
+	private static final String[] field_110273_bx = new String[] { "", "meo", "goo", "dio" };
+	private static final int[] field_110272_by = new int[] { 0, 5, 7, 11 };
+	private static final String[] field_110268_bz = new String[] { "textures/entity/horse/horse_white.png", "textures/entity/horse/horse_creamy.png", "textures/entity/horse/horse_chestnut.png", "textures/entity/horse/horse_brown.png", "textures/entity/horse/horse_black.png", "textures/entity/horse/horse_gray.png", "textures/entity/horse/horse_darkbrown.png" };
+	private static final String[] field_110269_bA = new String[] { "hwh", "hcr", "hch", "hbr", "hbl", "hgr", "hdb" };
+	private static final String[] field_110291_bB = new String[] { null, "textures/entity/horse/horse_markings_white.png", "textures/entity/horse/horse_markings_whitefield.png", "textures/entity/horse/horse_markings_whitedots.png", "textures/entity/horse/horse_markings_blackdots.png" };
+	private static final String[] field_110292_bC = new String[] { "", "wo_", "wmo", "wdo", "bdo" };
+	private int field_110289_bD;
+	private int field_110290_bE;
+	private int field_110295_bF;
+	public int field_110278_bp;
+	public int field_110279_bq;
+	protected boolean field_110275_br;
+	private AnimalChest field_110296_bG;
+	private boolean field_110293_bH;
+	protected int field_110274_bs;
+	protected float field_110277_bt;
+	private boolean field_110294_bI;
+	private float field_110283_bJ;
+	private float field_110284_bK;
+	private float field_110281_bL;
+	private float field_110282_bM;
+	private float field_110287_bN;
+	private float field_110288_bO;
+	private int field_110285_bP;
+	private String field_110286_bQ;
+	private String[] field_110280_bR = new String[3];
+	
+	public EntityHorse(World p_i1685_1_)
+	{
+		super(p_i1685_1_);
+		setSize(1.4F, 1.6F);
+		isImmuneToFire = false;
+		func_110207_m(false);
+		getNavigator().setAvoidsWater(true);
+		tasks.addTask(0, new EntityAISwimming(this));
+		tasks.addTask(1, new EntityAIPanic(this, 1.2D));
+		tasks.addTask(1, new EntityAIRunAroundLikeCrazy(this, 1.2D));
+		tasks.addTask(2, new EntityAIMate(this, 1.0D));
+		tasks.addTask(4, new EntityAIFollowParent(this, 1.0D));
+		tasks.addTask(6, new EntityAIWander(this, 0.7D));
+		tasks.addTask(7, new EntityAIWatchClosest(this, EntityPlayer.class, 6.0F));
+		tasks.addTask(8, new EntityAILookIdle(this));
+		func_110226_cD();
+	}
+	
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
+	{
+		Entity var3 = par1DamageSource.getEntity();
+		return riddenByEntity != null && riddenByEntity.equals(var3) ? false : super.attackEntityFrom(par1DamageSource, par2);
+	}
+	
+	@Override public boolean canBePushed()
+	{
+		return riddenByEntity == null;
+	}
+	
+	@Override public boolean canMateWith(EntityAnimal par1EntityAnimal)
+	{
+		if(par1EntityAnimal == this) return false;
+		else if(par1EntityAnimal.getClass() != this.getClass()) return false;
+		else
+		{
+			EntityHorse var2 = (EntityHorse) par1EntityAnimal;
+			if(func_110200_cJ() && var2.func_110200_cJ())
+			{
+				int var3 = func_110265_bP();
+				int var4 = var2.func_110265_bP();
+				return var3 == var4 || var3 == 0 && var4 == 1 || var3 == 1 && var4 == 0;
+			} else return false;
+		}
+	}
+	
+	@Override public EntityAgeable createChild(EntityAgeable par1EntityAgeable)
+	{
+		EntityHorse var2 = (EntityHorse) par1EntityAgeable;
+		EntityHorse var3 = new EntityHorse(worldObj);
+		int var4 = func_110265_bP();
+		int var5 = var2.func_110265_bP();
+		int var6 = 0;
+		if(var4 == var5)
+		{
+			var6 = var4;
+		} else if(var4 == 0 && var5 == 1 || var4 == 1 && var5 == 0)
+		{
+			var6 = 2;
+		}
+		if(var6 == 0)
+		{
+			int var8 = rand.nextInt(9);
+			int var7;
+			if(var8 < 4)
+			{
+				var7 = func_110202_bQ() & 255;
+			} else if(var8 < 8)
+			{
+				var7 = var2.func_110202_bQ() & 255;
+			} else
+			{
+				var7 = rand.nextInt(7);
+			}
+			int var9 = rand.nextInt(5);
+			if(var9 < 4)
+			{
+				var7 |= func_110202_bQ() & 65280;
+			} else if(var9 < 8)
+			{
+				var7 |= var2.func_110202_bQ() & 65280;
+			} else
+			{
+				var7 |= rand.nextInt(5) << 8 & 65280;
+			}
+			var3.func_110235_q(var7);
+		}
+		var3.func_110214_p(var6);
+		double var14 = func_110148_a(SharedMonsterAttributes.field_111267_a).func_111125_b() + par1EntityAgeable.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111125_b() + func_110267_cL();
+		var3.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(var14 / 3.0D);
+		double var13 = func_110148_a(field_110271_bv).func_111125_b() + par1EntityAgeable.func_110148_a(field_110271_bv).func_111125_b() + func_110245_cM();
+		var3.func_110148_a(field_110271_bv).func_111128_a(var13 / 3.0D);
+		double var11 = func_110148_a(SharedMonsterAttributes.field_111263_d).func_111125_b() + par1EntityAgeable.func_110148_a(SharedMonsterAttributes.field_111263_d).func_111125_b() + func_110203_cN();
+		var3.func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(var11 / 3.0D);
+		return var3;
+	}
+	
+	@Override protected void entityInit()
+	{
+		super.entityInit();
+		dataWatcher.addObject(16, Integer.valueOf(0));
+		dataWatcher.addObject(19, Byte.valueOf((byte) 0));
+		dataWatcher.addObject(20, Integer.valueOf(0));
+		dataWatcher.addObject(21, String.valueOf(""));
+		dataWatcher.addObject(22, Integer.valueOf(0));
+	}
+	
+	@Override protected void fall(float par1)
+	{
+		if(par1 > 1.0F)
+		{
+			playSound("mob.horse.land", 0.4F, 1.0F);
+		}
+		int var2 = MathHelper.ceiling_float_int(par1 * 0.5F - 3.0F);
+		if(var2 > 0)
+		{
+			attackEntityFrom(DamageSource.fall, var2);
+			if(riddenByEntity != null)
+			{
+				riddenByEntity.attackEntityFrom(DamageSource.fall, var2);
+			}
+			int var3 = worldObj.getBlockId(MathHelper.floor_double(posX), MathHelper.floor_double(posY - 0.2D - prevRotationYaw), MathHelper.floor_double(posZ));
+			if(var3 > 0)
+			{
+				StepSound var4 = Block.blocksList[var3].stepSound;
+				worldObj.playSoundAtEntity(this, var4.getStepSound(), var4.getVolume() * 0.5F, var4.getPitch() * 0.75F);
+			}
+		}
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110140_aT().func_111150_b(field_110271_bv);
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(53.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.22499999403953552D);
+	}
+	
+	@Override public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
+	{
+		Object p_110161_1_1 = super.func_110161_a(p_110161_1_);
+		boolean var2 = false;
+		int var3 = 0;
+		int var7;
+		if(p_110161_1_1 instanceof EntityHorseGroupData)
+		{
+			var7 = ((EntityHorseGroupData) p_110161_1_1).field_111107_a;
+			var3 = ((EntityHorseGroupData) p_110161_1_1).field_111106_b & 255 | rand.nextInt(5) << 8;
+		} else
+		{
+			if(rand.nextInt(10) == 0)
+			{
+				var7 = 1;
+			} else
+			{
+				int var4 = rand.nextInt(7);
+				int var5 = rand.nextInt(5);
+				var7 = 0;
+				var3 = var4 | var5 << 8;
+			}
+			p_110161_1_1 = new EntityHorseGroupData(var7, var3);
+		}
+		func_110214_p(var7);
+		func_110235_q(var3);
+		if(rand.nextInt(5) == 0)
+		{
+			setGrowingAge(-24000);
+		}
+		if(var7 != 4 && var7 != 3)
+		{
+			func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(func_110267_cL());
+			if(var7 == 0)
+			{
+				func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(func_110203_cN());
+			} else
+			{
+				func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.17499999701976776D);
+			}
+		} else
+		{
+			func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(15.0D);
+			func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.20000000298023224D);
+		}
+		if(var7 != 2 && var7 != 1)
+		{
+			func_110148_a(field_110271_bv).func_111128_a(func_110245_cM());
+		} else
+		{
+			func_110148_a(field_110271_bv).func_111128_a(0.5D);
+		}
+		setEntityHealth(func_110138_aP());
+		return (EntityLivingData) p_110161_1_1;
+	}
+	
+	@Override public boolean func_110164_bC()
+	{
+		return !func_110256_cu() && super.func_110164_bC();
+	}
+	
+	public int func_110198_t(int p_110198_1_)
+	{
+		int var2 = MathHelper.clamp_int(func_110252_cg() + p_110198_1_, 0, func_110218_cm());
+		func_110238_s(var2);
+		return var2;
+	}
+	
+	public void func_110199_f(EntityPlayer p_110199_1_)
+	{
+		if(!worldObj.isRemote && (riddenByEntity == null || riddenByEntity == p_110199_1_) && func_110248_bS())
+		{
+			field_110296_bG.func_110133_a(getEntityName());
+			p_110199_1_.func_110298_a(this, field_110296_bG);
+		}
+	}
+	
+	private boolean func_110200_cJ()
+	{
+		return riddenByEntity == null && ridingEntity == null && func_110248_bS() && func_110228_bR() && !func_110222_cv() && func_110143_aJ() >= func_110138_aP();
+	}
+	
+	public float func_110201_q(float p_110201_1_)
+	{
+		return field_110288_bO + (field_110287_bN - field_110288_bO) * p_110201_1_;
+	}
+	
+	public int func_110202_bQ()
+	{
+		return dataWatcher.getWatchableObjectInt(20);
+	}
+	
+	private double func_110203_cN()
+	{
+		return (0.44999998807907104D + rand.nextDouble() * 0.3D + rand.nextDouble() * 0.3D + rand.nextDouble() * 0.3D) * 0.25D;
+	}
+	
+	public boolean func_110204_cc()
+	{
+		return func_110233_w(32);
+	}
+	
+	public boolean func_110205_ce()
+	{
+		return func_110233_w(16);
+	}
+	
+	public void func_110206_u(int p_110206_1_)
+	{
+		if(func_110257_ck())
+		{
+			if(p_110206_1_ < 0)
+			{
+				p_110206_1_ = 0;
+			} else
+			{
+				field_110294_bI = true;
+				func_110220_cK();
+			}
+			if(p_110206_1_ >= 90)
+			{
+				field_110277_bt = 1.0F;
+			} else
+			{
+				field_110277_bt = 0.4F + 0.4F * p_110206_1_ / 90.0F;
+			}
+		}
+	}
+	
+	public void func_110207_m(boolean p_110207_1_)
+	{
+		func_110208_b(8, p_110207_1_);
+	}
+	
+	private void func_110208_b(int p_110208_1_, boolean p_110208_2_)
+	{
+		int var3 = dataWatcher.getWatchableObjectInt(16);
+		if(p_110208_2_)
+		{
+			dataWatcher.updateObject(16, Integer.valueOf(var3 | p_110208_1_));
+		} else
+		{
+			dataWatcher.updateObject(16, Integer.valueOf(var3 & ~p_110208_1_));
+		}
+	}
+	
+	public boolean func_110209_cd()
+	{
+		return func_110233_w(64);
+	}
+	
+	private void func_110210_cH()
+	{
+		field_110278_bp = 1;
+	}
+	
+	public String[] func_110212_cp()
+	{
+		if(field_110286_bQ == null)
+		{
+			func_110247_cG();
+		}
+		return field_110280_bR;
+	}
+	
+	public void func_110213_b(String p_110213_1_)
+	{
+		dataWatcher.updateObject(21, p_110213_1_);
+	}
+	
+	public void func_110214_p(int p_110214_1_)
+	{
+		dataWatcher.updateObject(19, Byte.valueOf((byte) p_110214_1_));
+		func_110230_cF();
+	}
+	
+	public double func_110215_cj()
+	{
+		return func_110148_a(field_110271_bv).func_111126_e();
+	}
+	
+	protected void func_110216_r(boolean p_110216_1_)
+	{
+		String var2 = p_110216_1_ ? "heart" : "smoke";
+		for(int var3 = 0; var3 < 7; ++var3)
+		{
+			double var4 = rand.nextGaussian() * 0.02D;
+			double var6 = rand.nextGaussian() * 0.02D;
+			double var8 = rand.nextGaussian() * 0.02D;
+			worldObj.spawnParticle(var2, posX + rand.nextFloat() * width * 2.0F - width, posY + 0.5D + rand.nextFloat() * height, posZ + rand.nextFloat() * width * 2.0F - width, var4, var6, var8);
+		}
+	}
+	
+	protected String func_110217_cl()
+	{
+		func_110249_cI();
+		func_110220_cK();
+		int var1 = func_110265_bP();
+		return var1 != 3 && var1 != 4 ? var1 != 1 && var1 != 2 ? "mob.horse.angry" : "mob.horse.donkey.angry" : null;
+	}
+	
+	public int func_110218_cm()
+	{
+		return 100;
+	}
+	
+	public void func_110219_q(boolean p_110219_1_)
+	{
+		if(p_110219_1_)
+		{
+			func_110227_p(false);
+		}
+		func_110208_b(64, p_110219_1_);
+	}
+	
+	private void func_110220_cK()
+	{
+		if(!worldObj.isRemote)
+		{
+			field_110295_bF = 1;
+			func_110219_q(true);
+		}
+	}
+	
+	public void func_110221_n(boolean p_110221_1_)
+	{
+		field_110293_bH = p_110221_1_;
+	}
+	
+	public boolean func_110222_cv()
+	{
+		return func_110256_cu() || func_110265_bP() == 2;
+	}
+	
+	public float func_110223_p(float p_110223_1_)
+	{
+		return field_110282_bM + (field_110281_bL - field_110282_bM) * p_110223_1_;
+	}
+	
+	public void func_110224_ci()
+	{
+		if(!worldObj.isRemote && func_110261_ca())
+		{
+			dropItem(Block.chest.blockID, 1);
+			func_110207_m(false);
+		}
+	}
+	
+	private int func_110225_cC()
+	{
+		int var1 = func_110265_bP();
+		return func_110261_ca() && (var1 == 1 || var1 == 2) ? 17 : 2;
+	}
+	
+	private void func_110226_cD()
+	{
+		AnimalChest var1 = field_110296_bG;
+		field_110296_bG = new AnimalChest("HorseChest", func_110225_cC());
+		field_110296_bG.func_110133_a(getEntityName());
+		if(var1 != null)
+		{
+			var1.func_110132_b(this);
+			int var2 = Math.min(var1.getSizeInventory(), field_110296_bG.getSizeInventory());
+			for(int var3 = 0; var3 < var2; ++var3)
+			{
+				ItemStack var4 = var1.getStackInSlot(var3);
+				if(var4 != null)
+				{
+					field_110296_bG.setInventorySlotContents(var3, var4.copy());
+				}
+			}
+			var1 = null;
+		}
+		field_110296_bG.func_110134_a(this);
+		func_110232_cE();
+	}
+	
+	public void func_110227_p(boolean p_110227_1_)
+	{
+		setEating(p_110227_1_);
+	}
+	
+	public boolean func_110228_bR()
+	{
+		return !isChild();
+	}
+	
+	public boolean func_110229_cs()
+	{
+		int var1 = func_110265_bP();
+		return var1 == 2 || var1 == 1;
+	}
+	
+	private void func_110230_cF()
+	{
+		field_110286_bQ = null;
+	}
+	
+	public void func_110231_cz()
+	{
+		func_110220_cK();
+		String var1 = func_110217_cl();
+		if(var1 != null)
+		{
+			playSound(var1, getSoundVolume(), getSoundPitch());
+		}
+	}
+	
+	private void func_110232_cE()
+	{
+		if(!worldObj.isRemote)
+		{
+			func_110251_o(field_110296_bG.getStackInSlot(0) != null);
+			if(func_110259_cr())
+			{
+				func_110236_r(func_110260_d(field_110296_bG.getStackInSlot(1)));
+			}
+		}
+	}
+	
+	private boolean func_110233_w(int p_110233_1_)
+	{
+		return (dataWatcher.getWatchableObjectInt(16) & p_110233_1_) != 0;
+	}
+	
+	public void func_110234_j(boolean p_110234_1_)
+	{
+		func_110208_b(2, p_110234_1_);
+	}
+	
+	public void func_110235_q(int p_110235_1_)
+	{
+		dataWatcher.updateObject(20, Integer.valueOf(p_110235_1_));
+		func_110230_cF();
+	}
+	
+	public void func_110236_r(int p_110236_1_)
+	{
+		dataWatcher.updateObject(22, Integer.valueOf(p_110236_1_));
+		func_110230_cF();
+	}
+	
+	private void func_110237_h(EntityPlayer p_110237_1_)
+	{
+		p_110237_1_.rotationYaw = rotationYaw;
+		p_110237_1_.rotationPitch = rotationPitch;
+		func_110227_p(false);
+		func_110219_q(false);
+		if(!worldObj.isRemote)
+		{
+			p_110237_1_.mountEntity(this);
+		}
+	}
+	
+	public void func_110238_s(int p_110238_1_)
+	{
+		field_110274_bs = p_110238_1_;
+	}
+	
+	public boolean func_110239_cn()
+	{
+		return func_110265_bP() == 0 || func_110241_cb() > 0;
+	}
+	
+	private void func_110240_a(Entity p_110240_1_, AnimalChest p_110240_2_)
+	{
+		if(p_110240_2_ != null && !worldObj.isRemote)
+		{
+			for(int var3 = 0; var3 < p_110240_2_.getSizeInventory(); ++var3)
+			{
+				ItemStack var4 = p_110240_2_.getStackInSlot(var3);
+				if(var4 != null)
+				{
+					entityDropItem(var4, 0.0F);
+				}
+			}
+		}
+	}
+	
+	public int func_110241_cb()
+	{
+		return dataWatcher.getWatchableObjectInt(22);
+	}
+	
+	public void func_110242_l(boolean p_110242_1_)
+	{
+		func_110208_b(16, p_110242_1_);
+	}
+	
+	public boolean func_110243_cf()
+	{
+		return field_110293_bH;
+	}
+	
+	public void func_110244_cA()
+	{
+		func_110240_a(this, field_110296_bG);
+		func_110224_ci();
+	}
+	
+	private double func_110245_cM()
+	{
+		return 0.4000000059604645D + rand.nextDouble() * 0.2D + rand.nextDouble() * 0.2D + rand.nextDouble() * 0.2D;
+	}
+	
+	public boolean func_110246_bZ()
+	{
+		return field_110275_br;
+	}
+	
+	private void func_110247_cG()
+	{
+		field_110286_bQ = "horse/";
+		field_110280_bR[0] = null;
+		field_110280_bR[1] = null;
+		field_110280_bR[2] = null;
+		int var1 = func_110265_bP();
+		int var2 = func_110202_bQ();
+		int var3;
+		if(var1 == 0)
+		{
+			var3 = var2 & 255;
+			int var4 = (var2 & 65280) >> 8;
+			field_110280_bR[0] = field_110268_bz[var3];
+			field_110286_bQ = field_110286_bQ + field_110269_bA[var3];
+			field_110280_bR[1] = field_110291_bB[var4];
+			field_110286_bQ = field_110286_bQ + field_110292_bC[var4];
+		} else
+		{
+			field_110280_bR[0] = "";
+			field_110286_bQ = field_110286_bQ + "_" + var1 + "_";
+		}
+		var3 = func_110241_cb();
+		field_110280_bR[2] = field_110270_bw[var3];
+		field_110286_bQ = field_110286_bQ + field_110273_bx[var3];
+	}
+	
+	public boolean func_110248_bS()
+	{
+		return func_110233_w(2);
+	}
+	
+	private void func_110249_cI()
+	{
+		if(!worldObj.isRemote)
+		{
+			field_110290_bE = 1;
+			func_110208_b(128, true);
+		}
+	}
+	
+	protected EntityHorse func_110250_a(Entity p_110250_1_, double p_110250_2_)
+	{
+		double var4 = Double.MAX_VALUE;
+		Entity var6 = null;
+		List var7 = worldObj.getEntitiesWithinAABBExcludingEntity(p_110250_1_, p_110250_1_.boundingBox.addCoord(p_110250_2_, p_110250_2_, p_110250_2_), field_110276_bu);
+		Iterator var8 = var7.iterator();
+		while(var8.hasNext())
+		{
+			Entity var9 = (Entity) var8.next();
+			double var10 = var9.getDistanceSq(p_110250_1_.posX, p_110250_1_.posY, p_110250_1_.posZ);
+			if(var10 < var4)
+			{
+				var6 = var9;
+				var4 = var10;
+			}
+		}
+		return (EntityHorse) var6;
+	}
+	
+	public void func_110251_o(boolean p_110251_1_)
+	{
+		func_110208_b(4, p_110251_1_);
+	}
+	
+	public int func_110252_cg()
+	{
+		return field_110274_bs;
+	}
+	
+	public boolean func_110253_bW()
+	{
+		return func_110228_bR();
+	}
+	
+	public float func_110254_bY()
+	{
+		int var1 = getGrowingAge();
+		return var1 >= 0 ? 1.0F : 0.5F + (-24000 - var1) / -24000.0F * 0.5F;
+	}
+	
+	public void func_110255_k(boolean p_110255_1_)
+	{
+		field_110275_br = p_110255_1_;
+	}
+	
+	public boolean func_110256_cu()
+	{
+		int var1 = func_110265_bP();
+		return var1 == 3 || var1 == 4;
+	}
+	
+	public boolean func_110257_ck()
+	{
+		return func_110233_w(4);
+	}
+	
+	public float func_110258_o(float p_110258_1_)
+	{
+		return field_110284_bK + (field_110283_bJ - field_110284_bK) * p_110258_1_;
+	}
+	
+	public boolean func_110259_cr()
+	{
+		return func_110265_bP() == 0;
+	}
+	
+	public int func_110260_d(ItemStack p_110260_1_)
+	{
+		return p_110260_1_ == null ? 0 : p_110260_1_.itemID == Item.field_111215_ce.itemID ? 1 : p_110260_1_.itemID == Item.field_111216_cf.itemID ? 2 : p_110260_1_.itemID == Item.field_111213_cg.itemID ? 3 : 0;
+	}
+	
+	public boolean func_110261_ca()
+	{
+		return func_110233_w(8);
+	}
+	
+	public boolean func_110262_ch()
+	{
+		int var1 = MathHelper.floor_double(posX);
+		int var2 = MathHelper.floor_double(posZ);
+		worldObj.getBiomeGenForCoords(var1, var2);
+		return true;
+	}
+	
+	public boolean func_110263_g(EntityPlayer p_110263_1_)
+	{
+		func_110213_b(p_110263_1_.getCommandSenderName());
+		func_110234_j(true);
+		return true;
+	}
+	
+	public String func_110264_co()
+	{
+		if(field_110286_bQ == null)
+		{
+			func_110247_cG();
+		}
+		return field_110286_bQ;
+	}
+	
+	public int func_110265_bP()
+	{
+		return dataWatcher.getWatchableObjectByte(19);
+	}
+	
+	private void func_110266_cB()
+	{
+		func_110249_cI();
+		worldObj.playSoundAtEntity(this, "eating", 1.0F, 1.0F + (rand.nextFloat() - rand.nextFloat()) * 0.2F);
+	}
+	
+	private float func_110267_cL()
+	{
+		return 15.0F + rand.nextInt(8) + rand.nextInt(9);
+	}
+	
+	@Override protected void func_142017_o(float p_142017_1_)
+	{
+		if(p_142017_1_ > 6.0F && func_110204_cc())
+		{
+			func_110227_p(false);
+		}
+	}
+	
+	public String func_142019_cb()
+	{
+		return dataWatcher.getWatchableObjectString(21);
+	}
+	
+	@Override public void func_98054_a(boolean par1)
+	{
+		if(par1)
+		{
+			func_98055_j(func_110254_bY());
+		} else
+		{
+			func_98055_j(1.0F);
+		}
+	}
+	
+	@Override public boolean getCanSpawnHere()
+	{
+		func_110262_ch();
+		return super.getCanSpawnHere();
+	}
+	
+	@Override protected String getDeathSound()
+	{
+		func_110249_cI();
+		int var1 = func_110265_bP();
+		return var1 == 3 ? "mob.horse.zombie.death" : var1 == 4 ? "mob.horse.skeleton.death" : var1 != 1 && var1 != 2 ? "mob.horse.death" : "mob.horse.donkey.death";
+	}
+	
+	@Override protected int getDropItemId()
+	{
+		boolean var1 = rand.nextInt(4) == 0;
+		int var2 = func_110265_bP();
+		return var2 == 4 ? Item.bone.itemID : var2 == 3 ? var1 ? 0 : Item.rottenFlesh.itemID : Item.leather.itemID;
+	}
+	
+	@Override public String getEntityName()
+	{
+		if(func_94056_bM()) return func_94057_bL();
+		else
+		{
+			int var1 = func_110265_bP();
+			switch(var1)
+			{
+				case 0:
+				default:
+					return StatCollector.translateToLocal("entity.horse.name");
+				case 1:
+					return StatCollector.translateToLocal("entity.donkey.name");
+				case 2:
+					return StatCollector.translateToLocal("entity.mule.name");
+				case 3:
+					return StatCollector.translateToLocal("entity.zombiehorse.name");
+				case 4:
+					return StatCollector.translateToLocal("entity.skeletonhorse.name");
+			}
+		}
+	}
+	
+	@Override protected String getHurtSound()
+	{
+		func_110249_cI();
+		if(rand.nextInt(3) == 0)
+		{
+			func_110220_cK();
+		}
+		int var1 = func_110265_bP();
+		return var1 == 3 ? "mob.horse.zombie.hit" : var1 == 4 ? "mob.horse.skeleton.hit" : var1 != 1 && var1 != 2 ? "mob.horse.hit" : "mob.horse.donkey.hit";
+	}
+	
+	@Override protected String getLivingSound()
+	{
+		func_110249_cI();
+		if(rand.nextInt(10) == 0 && !isMovementBlocked())
+		{
+			func_110220_cK();
+		}
+		int var1 = func_110265_bP();
+		return var1 == 3 ? "mob.horse.zombie.idle" : var1 == 4 ? "mob.horse.skeleton.idle" : var1 != 1 && var1 != 2 ? "mob.horse.idle" : "mob.horse.donkey.idle";
+	}
+	
+	@Override public int getMaxSpawnedInChunk()
+	{
+		return 6;
+	}
+	
+	@Override protected float getSoundVolume()
+	{
+		return 0.8F;
+	}
+	
+	@Override public int getTalkInterval()
+	{
+		return 400;
+	}
+	
+	@Override public int getTotalArmorValue()
+	{
+		return field_110272_by[func_110241_cb()];
+	}
+	
+	@Override public void handleHealthUpdate(byte par1)
+	{
+		if(par1 == 7)
+		{
+			func_110216_r(true);
+		} else if(par1 == 6)
+		{
+			func_110216_r(false);
+		} else
+		{
+			super.handleHealthUpdate(par1);
+		}
+	}
+	
+	@Override public boolean interact(EntityPlayer par1EntityPlayer)
+	{
+		ItemStack var2 = par1EntityPlayer.inventory.getCurrentItem();
+		if(var2 != null && var2.itemID == Item.monsterPlacer.itemID) return super.interact(par1EntityPlayer);
+		else if(!func_110248_bS() && func_110256_cu()) return false;
+		else if(func_110248_bS() && func_110228_bR() && par1EntityPlayer.isSneaking())
+		{
+			func_110199_f(par1EntityPlayer);
+			return true;
+		} else if(func_110253_bW() && riddenByEntity != null) return super.interact(par1EntityPlayer);
+		else
+		{
+			if(var2 != null)
+			{
+				boolean var3 = false;
+				if(func_110259_cr())
+				{
+					byte var4 = -1;
+					if(var2.itemID == Item.field_111215_ce.itemID)
+					{
+						var4 = 1;
+					} else if(var2.itemID == Item.field_111216_cf.itemID)
+					{
+						var4 = 2;
+					} else if(var2.itemID == Item.field_111213_cg.itemID)
+					{
+						var4 = 3;
+					}
+					if(var4 >= 0)
+					{
+						if(!func_110248_bS())
+						{
+							func_110231_cz();
+							return true;
+						}
+						func_110199_f(par1EntityPlayer);
+						return true;
+					}
+				}
+				if(!var3 && !func_110256_cu())
+				{
+					float var7 = 0.0F;
+					short var5 = 0;
+					byte var6 = 0;
+					if(var2.itemID == Item.wheat.itemID)
+					{
+						var7 = 2.0F;
+						var5 = 60;
+						var6 = 3;
+					} else if(var2.itemID == Item.sugar.itemID)
+					{
+						var7 = 1.0F;
+						var5 = 30;
+						var6 = 3;
+					} else if(var2.itemID == Item.bread.itemID)
+					{
+						var7 = 7.0F;
+						var5 = 180;
+						var6 = 3;
+					} else if(var2.itemID == Block.field_111038_cB.blockID)
+					{
+						var7 = 20.0F;
+						var5 = 180;
+					} else if(var2.itemID == Item.appleRed.itemID)
+					{
+						var7 = 3.0F;
+						var5 = 60;
+						var6 = 3;
+					} else if(var2.itemID == Item.goldenCarrot.itemID)
+					{
+						var7 = 4.0F;
+						var5 = 60;
+						var6 = 5;
+						if(func_110248_bS() && getGrowingAge() == 0)
+						{
+							var3 = true;
+							func_110196_bT();
+						}
+					} else if(var2.itemID == Item.appleGold.itemID)
+					{
+						var7 = 10.0F;
+						var5 = 240;
+						var6 = 10;
+						if(func_110248_bS() && getGrowingAge() == 0)
+						{
+							var3 = true;
+							func_110196_bT();
+						}
+					}
+					if(func_110143_aJ() < func_110138_aP() && var7 > 0.0F)
+					{
+						heal(var7);
+						var3 = true;
+					}
+					if(!func_110228_bR() && var5 > 0)
+					{
+						func_110195_a(var5);
+						var3 = true;
+					}
+					if(var6 > 0 && (var3 || !func_110248_bS()) && var6 < func_110218_cm())
+					{
+						var3 = true;
+						func_110198_t(var6);
+					}
+					if(var3)
+					{
+						func_110266_cB();
+					}
+				}
+				if(!func_110248_bS() && !var3)
+				{
+					if(var2 != null && var2.func_111282_a(par1EntityPlayer, this)) return true;
+					func_110231_cz();
+					return true;
+				}
+				if(!var3 && func_110229_cs() && !func_110261_ca() && var2.itemID == Block.chest.blockID)
+				{
+					func_110207_m(true);
+					playSound("mob.chickenplop", 1.0F, (rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.0F);
+					var3 = true;
+					func_110226_cD();
+				}
+				if(!var3 && func_110253_bW() && !func_110257_ck() && var2.itemID == Item.saddle.itemID)
+				{
+					func_110199_f(par1EntityPlayer);
+					return true;
+				}
+				if(var3)
+				{
+					if(!par1EntityPlayer.capabilities.isCreativeMode && --var2.stackSize == 0)
+					{
+						par1EntityPlayer.inventory.setInventorySlotContents(par1EntityPlayer.inventory.currentItem, (ItemStack) null);
+					}
+					return true;
+				}
+			}
+			if(func_110253_bW() && riddenByEntity == null)
+			{
+				if(var2 != null && var2.func_111282_a(par1EntityPlayer, this)) return true;
+				else
+				{
+					func_110237_h(par1EntityPlayer);
+					return true;
+				}
+			} else return super.interact(par1EntityPlayer);
+		}
+	}
+	
+	@Override protected boolean isAIEnabled()
+	{
+		return true;
+	}
+	
+	@Override public boolean isBreedingItem(ItemStack par1ItemStack)
+	{
+		return false;
+	}
+	
+	@Override protected boolean isMovementBlocked()
+	{
+		return riddenByEntity != null && func_110257_ck() ? true : func_110204_cc() || func_110209_cd();
+	}
+	
+	@Override public boolean isOnLadder()
+	{
+		return false;
+	}
+	
+	@Override public void moveEntityWithHeading(float par1, float par2)
+	{
+		if(riddenByEntity != null && func_110257_ck())
+		{
+			prevRotationYaw = rotationYaw = riddenByEntity.rotationYaw;
+			rotationPitch = riddenByEntity.rotationPitch * 0.5F;
+			setRotation(rotationYaw, rotationPitch);
+			rotationYawHead = renderYawOffset = rotationYaw;
+			par1 = ((EntityLivingBase) riddenByEntity).moveStrafing * 0.5F;
+			par2 = ((EntityLivingBase) riddenByEntity).moveForward;
+			if(par2 <= 0.0F)
+			{
+				par2 *= 0.25F;
+				field_110285_bP = 0;
+			}
+			if(onGround && field_110277_bt == 0.0F && func_110209_cd() && !field_110294_bI)
+			{
+				par1 = 0.0F;
+				par2 = 0.0F;
+			}
+			if(field_110277_bt > 0.0F && !func_110246_bZ() && onGround)
+			{
+				motionY = func_110215_cj() * field_110277_bt;
+				if(this.isPotionActive(Potion.jump))
+				{
+					motionY += (getActivePotionEffect(Potion.jump).getAmplifier() + 1) * 0.1F;
+				}
+				func_110255_k(true);
+				isAirBorne = true;
+				if(par2 > 0.0F)
+				{
+					float var3 = MathHelper.sin(rotationYaw * (float) Math.PI / 180.0F);
+					float var4 = MathHelper.cos(rotationYaw * (float) Math.PI / 180.0F);
+					motionX += -0.4F * var3 * field_110277_bt;
+					motionZ += 0.4F * var4 * field_110277_bt;
+					playSound("mob.horse.jump", 0.4F, 1.0F);
+				}
+				field_110277_bt = 0.0F;
+			}
+			stepHeight = 1.0F;
+			jumpMovementFactor = getAIMoveSpeed() * 0.1F;
+			if(!worldObj.isRemote)
+			{
+				setAIMoveSpeed((float) func_110148_a(SharedMonsterAttributes.field_111263_d).func_111126_e());
+				super.moveEntityWithHeading(par1, par2);
+			}
+			if(onGround)
+			{
+				field_110277_bt = 0.0F;
+				func_110255_k(false);
+			}
+			prevLimbYaw = limbYaw;
+			double var8 = posX - prevPosX;
+			double var5 = posZ - prevPosZ;
+			float var7 = MathHelper.sqrt_double(var8 * var8 + var5 * var5) * 4.0F;
+			if(var7 > 1.0F)
+			{
+				var7 = 1.0F;
+			}
+			limbYaw += (var7 - limbYaw) * 0.4F;
+			limbSwing += limbYaw;
+		} else
+		{
+			stepHeight = 0.5F;
+			jumpMovementFactor = 0.02F;
+			super.moveEntityWithHeading(par1, par2);
+		}
+	}
+	
+	@Override public void onDeath(DamageSource par1DamageSource)
+	{
+		super.onDeath(par1DamageSource);
+		if(!worldObj.isRemote)
+		{
+			func_110244_cA();
+		}
+	}
+	
+	@Override public void onInventoryChanged(InventoryBasic p_76316_1_)
+	{
+		int var2 = func_110241_cb();
+		boolean var3 = func_110257_ck();
+		func_110232_cE();
+		if(ticksExisted > 20)
+		{
+			if(var2 == 0 && var2 != func_110241_cb())
+			{
+				playSound("mob.horse.armor", 0.5F, 1.0F);
+			}
+			if(!var3 && func_110257_ck())
+			{
+				playSound("mob.horse.leather", 0.5F, 1.0F);
+			}
+		}
+	}
+	
+	@Override public void onLivingUpdate()
+	{
+		if(rand.nextInt(200) == 0)
+		{
+			func_110210_cH();
+		}
+		super.onLivingUpdate();
+		if(!worldObj.isRemote)
+		{
+			if(rand.nextInt(900) == 0 && deathTime == 0)
+			{
+				heal(1.0F);
+			}
+			if(!func_110204_cc() && riddenByEntity == null && rand.nextInt(300) == 0 && worldObj.getBlockId(MathHelper.floor_double(posX), MathHelper.floor_double(posY) - 1, MathHelper.floor_double(posZ)) == Block.grass.blockID)
+			{
+				func_110227_p(true);
+			}
+			if(func_110204_cc() && ++field_110289_bD > 50)
+			{
+				field_110289_bD = 0;
+				func_110227_p(false);
+			}
+			if(func_110205_ce() && !func_110228_bR() && !func_110204_cc())
+			{
+				EntityHorse var1 = func_110250_a(this, 16.0D);
+				if(var1 != null && getDistanceSqToEntity(var1) > 4.0D)
+				{
+					PathEntity var2 = worldObj.getPathEntityToEntity(this, var1, 16.0F, true, false, false, true);
+					setPathToEntity(var2);
+				}
+			}
+		}
+	}
+	
+	@Override public void onUpdate()
+	{
+		super.onUpdate();
+		if(worldObj.isRemote && dataWatcher.hasChanges())
+		{
+			dataWatcher.func_111144_e();
+			func_110230_cF();
+		}
+		if(field_110290_bE > 0 && ++field_110290_bE > 30)
+		{
+			field_110290_bE = 0;
+			func_110208_b(128, false);
+		}
+		if(!worldObj.isRemote && field_110295_bF > 0 && ++field_110295_bF > 20)
+		{
+			field_110295_bF = 0;
+			func_110219_q(false);
+		}
+		if(field_110278_bp > 0 && ++field_110278_bp > 8)
+		{
+			field_110278_bp = 0;
+		}
+		if(field_110279_bq > 0)
+		{
+			++field_110279_bq;
+			if(field_110279_bq > 300)
+			{
+				field_110279_bq = 0;
+			}
+		}
+		field_110284_bK = field_110283_bJ;
+		if(func_110204_cc())
+		{
+			field_110283_bJ += (1.0F - field_110283_bJ) * 0.4F + 0.05F;
+			if(field_110283_bJ > 1.0F)
+			{
+				field_110283_bJ = 1.0F;
+			}
+		} else
+		{
+			field_110283_bJ += (0.0F - field_110283_bJ) * 0.4F - 0.05F;
+			if(field_110283_bJ < 0.0F)
+			{
+				field_110283_bJ = 0.0F;
+			}
+		}
+		field_110282_bM = field_110281_bL;
+		if(func_110209_cd())
+		{
+			field_110284_bK = field_110283_bJ = 0.0F;
+			field_110281_bL += (1.0F - field_110281_bL) * 0.4F + 0.05F;
+			if(field_110281_bL > 1.0F)
+			{
+				field_110281_bL = 1.0F;
+			}
+		} else
+		{
+			field_110294_bI = false;
+			field_110281_bL += (0.8F * field_110281_bL * field_110281_bL * field_110281_bL - field_110281_bL) * 0.6F - 0.05F;
+			if(field_110281_bL < 0.0F)
+			{
+				field_110281_bL = 0.0F;
+			}
+		}
+		field_110288_bO = field_110287_bN;
+		if(func_110233_w(128))
+		{
+			field_110287_bN += (1.0F - field_110287_bN) * 0.7F + 0.05F;
+			if(field_110287_bN > 1.0F)
+			{
+				field_110287_bN = 1.0F;
+			}
+		} else
+		{
+			field_110287_bN += (0.0F - field_110287_bN) * 0.7F - 0.05F;
+			if(field_110287_bN < 0.0F)
+			{
+				field_110287_bN = 0.0F;
+			}
+		}
+	}
+	
+	@Override protected void playStepSound(int par1, int par2, int par3, int par4)
+	{
+		StepSound var5 = Block.blocksList[par4].stepSound;
+		if(worldObj.getBlockId(par1, par2 + 1, par3) == Block.snow.blockID)
+		{
+			var5 = Block.snow.stepSound;
+		}
+		if(!Block.blocksList[par4].blockMaterial.isLiquid())
+		{
+			int var6 = func_110265_bP();
+			if(riddenByEntity != null && var6 != 1 && var6 != 2)
+			{
+				++field_110285_bP;
+				if(field_110285_bP > 5 && field_110285_bP % 3 == 0)
+				{
+					playSound("mob.horse.gallop", var5.getVolume() * 0.15F, var5.getPitch());
+					if(var6 == 0 && rand.nextInt(10) == 0)
+					{
+						playSound("mob.horse.breathe", var5.getVolume() * 0.6F, var5.getPitch());
+					}
+				} else if(field_110285_bP <= 5)
+				{
+					playSound("mob.horse.wood", var5.getVolume() * 0.15F, var5.getPitch());
+				}
+			} else if(var5 == Block.soundWoodFootstep)
+			{
+				playSound("mob.horse.soft", var5.getVolume() * 0.15F, var5.getPitch());
+			} else
+			{
+				playSound("mob.horse.wood", var5.getVolume() * 0.15F, var5.getPitch());
+			}
+		}
+	}
+	
+	@Override public void readEntityFromNBT(NBTTagCompound par1NBTTagCompound)
+	{
+		super.readEntityFromNBT(par1NBTTagCompound);
+		func_110227_p(par1NBTTagCompound.getBoolean("EatingHaystack"));
+		func_110242_l(par1NBTTagCompound.getBoolean("Bred"));
+		func_110207_m(par1NBTTagCompound.getBoolean("ChestedHorse"));
+		func_110221_n(par1NBTTagCompound.getBoolean("HasReproduced"));
+		func_110214_p(par1NBTTagCompound.getInteger("Type"));
+		func_110235_q(par1NBTTagCompound.getInteger("Variant"));
+		func_110238_s(par1NBTTagCompound.getInteger("Temper"));
+		func_110234_j(par1NBTTagCompound.getBoolean("Tame"));
+		if(par1NBTTagCompound.hasKey("OwnerName"))
+		{
+			func_110213_b(par1NBTTagCompound.getString("OwnerName"));
+		}
+		AttributeInstance var2 = func_110140_aT().func_111152_a("Speed");
+		if(var2 != null)
+		{
+			func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(var2.func_111125_b() * 0.25D);
+		}
+		if(func_110261_ca())
+		{
+			NBTTagList var3 = par1NBTTagCompound.getTagList("Items");
+			func_110226_cD();
+			for(int var4 = 0; var4 < var3.tagCount(); ++var4)
+			{
+				NBTTagCompound var5 = (NBTTagCompound) var3.tagAt(var4);
+				int var6 = var5.getByte("Slot") & 255;
+				if(var6 >= 2 && var6 < field_110296_bG.getSizeInventory())
+				{
+					field_110296_bG.setInventorySlotContents(var6, ItemStack.loadItemStackFromNBT(var5));
+				}
+			}
+		}
+		ItemStack var7;
+		if(par1NBTTagCompound.hasKey("ArmorItem"))
+		{
+			var7 = ItemStack.loadItemStackFromNBT(par1NBTTagCompound.getCompoundTag("ArmorItem"));
+			if(var7 != null && func_110211_v(var7.itemID))
+			{
+				field_110296_bG.setInventorySlotContents(1, var7);
+			}
+		}
+		if(par1NBTTagCompound.hasKey("SaddleItem"))
+		{
+			var7 = ItemStack.loadItemStackFromNBT(par1NBTTagCompound.getCompoundTag("SaddleItem"));
+			if(var7 != null && var7.itemID == Item.saddle.itemID)
+			{
+				field_110296_bG.setInventorySlotContents(0, var7);
+			}
+		} else if(par1NBTTagCompound.getBoolean("Saddle"))
+		{
+			field_110296_bG.setInventorySlotContents(0, new ItemStack(Item.saddle));
+		}
+		func_110232_cE();
+	}
+	
+	@Override public void setEating(boolean par1)
+	{
+		func_110208_b(32, par1);
+	}
+	
+	@Override public void updateRiderPosition()
+	{
+		super.updateRiderPosition();
+		if(field_110282_bM > 0.0F)
+		{
+			float var1 = MathHelper.sin(renderYawOffset * (float) Math.PI / 180.0F);
+			float var2 = MathHelper.cos(renderYawOffset * (float) Math.PI / 180.0F);
+			float var3 = 0.7F * field_110282_bM;
+			float var4 = 0.15F * field_110282_bM;
+			riddenByEntity.setPosition(posX + var3 * var1, posY + getMountedYOffset() + riddenByEntity.getYOffset() + var4, posZ - var3 * var2);
+			if(riddenByEntity instanceof EntityLivingBase)
+			{
+				((EntityLivingBase) riddenByEntity).renderYawOffset = renderYawOffset;
+			}
+		}
+	}
+	
+	@Override public void writeEntityToNBT(NBTTagCompound par1NBTTagCompound)
+	{
+		super.writeEntityToNBT(par1NBTTagCompound);
+		par1NBTTagCompound.setBoolean("EatingHaystack", func_110204_cc());
+		par1NBTTagCompound.setBoolean("ChestedHorse", func_110261_ca());
+		par1NBTTagCompound.setBoolean("HasReproduced", func_110243_cf());
+		par1NBTTagCompound.setBoolean("Bred", func_110205_ce());
+		par1NBTTagCompound.setInteger("Type", func_110265_bP());
+		par1NBTTagCompound.setInteger("Variant", func_110202_bQ());
+		par1NBTTagCompound.setInteger("Temper", func_110252_cg());
+		par1NBTTagCompound.setBoolean("Tame", func_110248_bS());
+		par1NBTTagCompound.setString("OwnerName", func_142019_cb());
+		if(func_110261_ca())
+		{
+			NBTTagList var2 = new NBTTagList();
+			for(int var3 = 2; var3 < field_110296_bG.getSizeInventory(); ++var3)
+			{
+				ItemStack var4 = field_110296_bG.getStackInSlot(var3);
+				if(var4 != null)
+				{
+					NBTTagCompound var5 = new NBTTagCompound();
+					var5.setByte("Slot", (byte) var3);
+					var4.writeToNBT(var5);
+					var2.appendTag(var5);
+				}
+			}
+			par1NBTTagCompound.setTag("Items", var2);
+		}
+		if(field_110296_bG.getStackInSlot(1) != null)
+		{
+			par1NBTTagCompound.setTag("ArmorItem", field_110296_bG.getStackInSlot(1).writeToNBT(new NBTTagCompound("ArmorItem")));
+		}
+		if(field_110296_bG.getStackInSlot(0) != null)
+		{
+			par1NBTTagCompound.setTag("SaddleItem", field_110296_bG.getStackInSlot(0).writeToNBT(new NBTTagCompound("SaddleItem")));
+		}
+	}
+	
+	public static boolean func_110211_v(int p_110211_0_)
+	{
+		return p_110211_0_ == Item.field_111215_ce.itemID || p_110211_0_ == Item.field_111216_cf.itemID || p_110211_0_ == Item.field_111213_cg.itemID;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityHorseBredSelector.java b/RMCClient/minecraft/net/minecraft/src/EntityHorseBredSelector.java
new file mode 100644
index 0000000..a7b6dce
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityHorseBredSelector.java
@@ -0,0 +1,9 @@
+package net.minecraft.src;
+
+final class EntityHorseBredSelector implements IEntitySelector
+{
+	@Override public boolean isEntityApplicable(Entity par1Entity)
+	{
+		return par1Entity instanceof EntityHorse && ((EntityHorse) par1Entity).func_110205_ce();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityHorseGroupData.java b/RMCClient/minecraft/net/minecraft/src/EntityHorseGroupData.java
new file mode 100644
index 0000000..d0a3e89
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityHorseGroupData.java
@@ -0,0 +1,13 @@
+package net.minecraft.src;
+
+public class EntityHorseGroupData implements EntityLivingData
+{
+	public int field_111107_a;
+	public int field_111106_b;
+	
+	public EntityHorseGroupData(int p_i1684_1_, int p_i1684_2_)
+	{
+		field_111107_a = p_i1684_1_;
+		field_111106_b = p_i1684_2_;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityHugeExplodeFX.java b/RMCClient/minecraft/net/minecraft/src/EntityHugeExplodeFX.java
index a80840a..16f0b5a 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityHugeExplodeFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityHugeExplodeFX.java
@@ -2,13 +2,12 @@
 
 public class EntityHugeExplodeFX extends EntityFX
 {
-	private int timeSinceStart = 0;
-	private int maximumTime = 0;
+	private int timeSinceStart;
+	private int maximumTime = 8;
 	
-	public EntityHugeExplodeFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityHugeExplodeFX(World p_i1214_1_, double p_i1214_2_, double p_i1214_4_, double p_i1214_6_, double p_i1214_8_, double p_i1214_10_, double p_i1214_12_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
-		maximumTime = 8;
+		super(p_i1214_1_, p_i1214_2_, p_i1214_4_, p_i1214_6_, 0.0D, 0.0D, 0.0D);
 	}
 	
 	@Override public int getFXLayer()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityIronGolem.java b/RMCClient/minecraft/net/minecraft/src/EntityIronGolem.java
index 3a974e7..3ea5296 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityIronGolem.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityIronGolem.java
@@ -2,28 +2,27 @@
 
 public class EntityIronGolem extends EntityGolem
 {
-	private int homeCheckTimer = 0;
-	Village villageObj = null;
+	private int homeCheckTimer;
+	Village villageObj;
 	private int attackTimer;
 	private int holdRoseTick;
 	
-	public EntityIronGolem(World par1World)
+	public EntityIronGolem(World p_i1694_1_)
 	{
-		super(par1World);
-		texture = "/mob/villager_golem.png";
+		super(p_i1694_1_);
 		setSize(1.4F, 2.9F);
 		getNavigator().setAvoidsWater(true);
-		tasks.addTask(1, new EntityAIAttackOnCollide(this, 0.25F, true));
-		tasks.addTask(2, new EntityAIMoveTowardsTarget(this, 0.22F, 32.0F));
-		tasks.addTask(3, new EntityAIMoveThroughVillage(this, 0.16F, true));
-		tasks.addTask(4, new EntityAIMoveTwardsRestriction(this, 0.16F));
+		tasks.addTask(1, new EntityAIAttackOnCollide(this, 1.0D, true));
+		tasks.addTask(2, new EntityAIMoveTowardsTarget(this, 0.9D, 32.0F));
+		tasks.addTask(3, new EntityAIMoveThroughVillage(this, 0.6D, true));
+		tasks.addTask(4, new EntityAIMoveTowardsRestriction(this, 1.0D));
 		tasks.addTask(5, new EntityAILookAtVillager(this));
-		tasks.addTask(6, new EntityAIWander(this, 0.16F));
+		tasks.addTask(6, new EntityAIWander(this, 0.6D));
 		tasks.addTask(7, new EntityAIWatchClosest(this, EntityPlayer.class, 6.0F));
 		tasks.addTask(8, new EntityAILookIdle(this));
 		targetTasks.addTask(1, new EntityAIDefendVillage(this));
 		targetTasks.addTask(2, new EntityAIHurtByTarget(this, false));
-		targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityLiving.class, 16.0F, 0, false, true, IMob.mobSelector));
+		targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityLiving.class, 0, false, true, IMob.mobSelector));
 	}
 	
 	@Override public boolean attackEntityAsMob(Entity par1Entity)
@@ -48,7 +47,7 @@
 	{
 		if(par1Entity instanceof IMob && getRNG().nextInt(20) == 0)
 		{
-			setAttackTarget((EntityLiving) par1Entity);
+			setAttackTarget((EntityLivingBase) par1Entity);
 		}
 		super.collideWithEntity(par1Entity);
 	}
@@ -79,6 +78,13 @@
 		dataWatcher.addObject(16, Byte.valueOf((byte) 0));
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(100.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.25D);
+	}
+	
 	public int getAttackTimer()
 	{
 		return attackTimer;
@@ -102,11 +108,6 @@
 	@Override protected String getLivingSound()
 	{
 		return "none";
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 100;
 	}
 	
 	public Village getVillage()
@@ -209,11 +210,11 @@
 			villageObj = worldObj.villageCollectionObj.findNearestVillage(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ), 32);
 			if(villageObj == null)
 			{
-				detachHome();
+				func_110177_bN();
 			} else
 			{
 				ChunkCoordinates var1 = villageObj.getCenter();
-				setHomeArea(var1.posX, var1.posY, var1.posZ, (int) (villageObj.getVillageRadius() * 0.6F));
+				func_110171_b(var1.posX, var1.posY, var1.posZ, (int) (villageObj.getVillageRadius() * 0.6F));
 			}
 		}
 		super.updateAITick();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityItem.java b/RMCClient/minecraft/net/minecraft/src/EntityItem.java
index 6804d64..7b62c7b 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityItem.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityItem.java
@@ -9,45 +9,43 @@
 	private int health;
 	public float hoverStart;
 	
-	public EntityItem(World par1World)
+	public EntityItem(World p_i1711_1_)
 	{
-		super(par1World);
-		age = 0;
+		super(p_i1711_1_);
 		health = 5;
 		hoverStart = (float) (Math.random() * Math.PI * 2.0D);
 		setSize(0.25F, 0.25F);
 		yOffset = height / 2.0F;
 	}
 	
-	public EntityItem(World par1World, double par2, double par4, double par6)
+	public EntityItem(World p_i1709_1_, double p_i1709_2_, double p_i1709_4_, double p_i1709_6_)
 	{
-		super(par1World);
-		age = 0;
+		super(p_i1709_1_);
 		health = 5;
 		hoverStart = (float) (Math.random() * Math.PI * 2.0D);
 		setSize(0.25F, 0.25F);
 		yOffset = height / 2.0F;
-		setPosition(par2, par4, par6);
+		setPosition(p_i1709_2_, p_i1709_4_, p_i1709_6_);
 		rotationYaw = (float) (Math.random() * 360.0D);
 		motionX = (float) (Math.random() * 0.20000000298023224D - 0.10000000149011612D);
 		motionY = 0.20000000298023224D;
 		motionZ = (float) (Math.random() * 0.20000000298023224D - 0.10000000149011612D);
 	}
 	
-	public EntityItem(World par1World, double par2, double par4, double par6, ItemStack par8ItemStack)
+	public EntityItem(World p_i1710_1_, double p_i1710_2_, double p_i1710_4_, double p_i1710_6_, ItemStack p_i1710_8_)
 	{
-		this(par1World, par2, par4, par6);
-		setEntityItemStack(par8ItemStack);
+		this(p_i1710_1_, p_i1710_2_, p_i1710_4_, p_i1710_6_);
+		setEntityItemStack(p_i1710_8_);
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else if(getEntityItem() != null && getEntityItem().itemID == Item.netherStar.itemID && par1DamageSource.isExplosion()) return false;
 		else
 		{
 			setBeenAttacked();
-			health -= par2;
+			health = (int) (health - par2);
 			if(health <= 0)
 			{
 				setDead();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityItemFrame.java b/RMCClient/minecraft/net/minecraft/src/EntityItemFrame.java
index 1dd017f..708b4f1 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityItemFrame.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityItemFrame.java
@@ -4,33 +4,75 @@
 {
 	private float itemDropChance = 1.0F;
 	
-	public EntityItemFrame(World par1World)
+	public EntityItemFrame(World p_i1590_1_)
 	{
-		super(par1World);
+		super(p_i1590_1_);
 	}
 	
-	public EntityItemFrame(World par1World, int par2, int par3, int par4, int par5)
+	public EntityItemFrame(World p_i1591_1_, int p_i1591_2_, int p_i1591_3_, int p_i1591_4_, int p_i1591_5_)
 	{
-		super(par1World, par2, par3, par4, par5);
-		setDirection(par5);
-	}
-	
-	@Override public void dropItemStack()
-	{
-		entityDropItem(new ItemStack(Item.itemFrame), 0.0F);
-		ItemStack var1 = getDisplayedItem();
-		if(var1 != null && rand.nextFloat() < itemDropChance)
-		{
-			var1 = var1.copy();
-			var1.setItemFrame((EntityItemFrame) null);
-			entityDropItem(var1, 0.0F);
-		}
+		super(p_i1591_1_, p_i1591_2_, p_i1591_3_, p_i1591_4_, p_i1591_5_);
+		setDirection(p_i1591_5_);
 	}
 	
 	@Override protected void entityInit()
 	{
 		getDataWatcher().addObjectByDataType(2, 5);
 		getDataWatcher().addObject(3, Byte.valueOf((byte) 0));
+	}
+	
+	@Override public void func_110128_b(Entity p_110128_1_)
+	{
+		ItemStack var2 = getDisplayedItem();
+		if(p_110128_1_ instanceof EntityPlayer)
+		{
+			EntityPlayer var3 = (EntityPlayer) p_110128_1_;
+			if(var3.capabilities.isCreativeMode)
+			{
+				func_110131_b(var2);
+				return;
+			}
+		}
+		entityDropItem(new ItemStack(Item.itemFrame), 0.0F);
+		if(var2 != null && rand.nextFloat() < itemDropChance)
+		{
+			var2 = var2.copy();
+			func_110131_b(var2);
+			entityDropItem(var2, 0.0F);
+		}
+	}
+	
+	private void func_110131_b(ItemStack p_110131_1_)
+	{
+		if(p_110131_1_ != null)
+		{
+			if(p_110131_1_.itemID == Item.map.itemID)
+			{
+				MapData var2 = ((ItemMap) p_110131_1_.getItem()).getMapData(p_110131_1_, worldObj);
+				var2.playersVisibleOnMap.remove("frame-" + entityId);
+			}
+			p_110131_1_.setItemFrame((EntityItemFrame) null);
+		}
+	}
+	
+	@Override public boolean func_130002_c(EntityPlayer p_130002_1_)
+	{
+		if(getDisplayedItem() == null)
+		{
+			ItemStack var2 = p_130002_1_.getHeldItem();
+			if(var2 != null && !worldObj.isRemote)
+			{
+				setDisplayedItem(var2);
+				if(!p_130002_1_.capabilities.isCreativeMode && --var2.stackSize <= 0)
+				{
+					p_130002_1_.inventory.setInventorySlotContents(p_130002_1_.inventory.currentItem, (ItemStack) null);
+				}
+			}
+		} else if(!worldObj.isRemote)
+		{
+			setItemRotation(getRotation() + 1);
+		}
+		return true;
 	}
 	
 	@Override public int func_82329_d()
@@ -51,26 +93,6 @@
 	public int getRotation()
 	{
 		return getDataWatcher().getWatchableObjectByte(3);
-	}
-	
-	@Override public boolean interact(EntityPlayer par1EntityPlayer)
-	{
-		if(getDisplayedItem() == null)
-		{
-			ItemStack var2 = par1EntityPlayer.getHeldItem();
-			if(var2 != null && !worldObj.isRemote)
-			{
-				setDisplayedItem(var2);
-				if(!par1EntityPlayer.capabilities.isCreativeMode && --var2.stackSize <= 0)
-				{
-					par1EntityPlayer.inventory.setInventorySlotContents(par1EntityPlayer.inventory.currentItem, (ItemStack) null);
-				}
-			}
-		} else if(!worldObj.isRemote)
-		{
-			setItemRotation(getRotation() + 1);
-		}
-		return true;
 	}
 	
 	@Override public boolean isInRangeToRenderDist(double par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityJumpHelper.java b/RMCClient/minecraft/net/minecraft/src/EntityJumpHelper.java
index c7d62c8..61d7c27 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityJumpHelper.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityJumpHelper.java
@@ -3,11 +3,11 @@
 public class EntityJumpHelper
 {
 	private EntityLiving entity;
-	private boolean isJumping = false;
+	private boolean isJumping;
 	
-	public EntityJumpHelper(EntityLiving par1EntityLiving)
+	public EntityJumpHelper(EntityLiving p_i1612_1_)
 	{
-		entity = par1EntityLiving;
+		entity = p_i1612_1_;
 	}
 	
 	public void doJump()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityLargeExplodeFX.java b/RMCClient/minecraft/net/minecraft/src/EntityLargeExplodeFX.java
index dfe9ac5..d28c3d3 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityLargeExplodeFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityLargeExplodeFX.java
@@ -4,18 +4,19 @@
 
 public class EntityLargeExplodeFX extends EntityFX
 {
-	private int field_70581_a = 0;
-	private int field_70584_aq = 0;
-	private RenderEngine theRenderEngine;
+	private static final ResourceLocation field_110127_a = new ResourceLocation("textures/entity/explosion.png");
+	private int field_70581_a;
+	private int field_70584_aq;
+	private TextureManager theRenderEngine;
 	private float field_70582_as;
 	
-	public EntityLargeExplodeFX(RenderEngine par1RenderEngine, World par2World, double par3, double par5, double par7, double par9, double par11, double par13)
+	public EntityLargeExplodeFX(TextureManager p_i1213_1_, World p_i1213_2_, double p_i1213_3_, double p_i1213_5_, double p_i1213_7_, double p_i1213_9_, double p_i1213_11_, double p_i1213_13_)
 	{
-		super(par2World, par3, par5, par7, 0.0D, 0.0D, 0.0D);
-		theRenderEngine = par1RenderEngine;
+		super(p_i1213_2_, p_i1213_3_, p_i1213_5_, p_i1213_7_, 0.0D, 0.0D, 0.0D);
+		theRenderEngine = p_i1213_1_;
 		field_70584_aq = 6 + rand.nextInt(4);
 		particleRed = particleGreen = particleBlue = rand.nextFloat() * 0.6F + 0.4F;
-		field_70582_as = 1.0F - (float) par9 * 0.5F;
+		field_70582_as = 1.0F - (float) p_i1213_9_ * 0.5F;
 	}
 	
 	@Override public int getBrightnessForRender(float par1)
@@ -45,7 +46,7 @@
 		int var8 = (int) ((field_70581_a + par2) * 15.0F / field_70584_aq);
 		if(var8 <= 15)
 		{
-			theRenderEngine.bindTexture("/misc/explosion.png");
+			theRenderEngine.func_110577_a(field_110127_a);
 			float var9 = var8 % 4 / 4.0F;
 			float var10 = var9 + 0.24975F;
 			float var11 = var8 / 4 / 4.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityLargeFireball.java b/RMCClient/minecraft/net/minecraft/src/EntityLargeFireball.java
index 6c7b923..68cdf58 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityLargeFireball.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityLargeFireball.java
@@ -4,19 +4,19 @@
 {
 	public int field_92057_e = 1;
 	
-	public EntityLargeFireball(World par1World)
+	public EntityLargeFireball(World p_i1767_1_)
 	{
-		super(par1World);
+		super(p_i1767_1_);
 	}
 	
-	public EntityLargeFireball(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityLargeFireball(World p_i1768_1_, double p_i1768_2_, double p_i1768_4_, double p_i1768_6_, double p_i1768_8_, double p_i1768_10_, double p_i1768_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
+		super(p_i1768_1_, p_i1768_2_, p_i1768_4_, p_i1768_6_, p_i1768_8_, p_i1768_10_, p_i1768_12_);
 	}
 	
-	public EntityLargeFireball(World par1World, EntityLiving par2EntityLiving, double par3, double par5, double par7)
+	public EntityLargeFireball(World p_i1769_1_, EntityLivingBase p_i1769_2_, double p_i1769_3_, double p_i1769_5_, double p_i1769_7_)
 	{
-		super(par1World, par2EntityLiving, par3, par5, par7);
+		super(p_i1769_1_, p_i1769_2_, p_i1769_3_, p_i1769_5_, p_i1769_7_);
 	}
 	
 	@Override protected void onImpact(MovingObjectPosition par1MovingObjectPosition)
@@ -25,7 +25,7 @@
 		{
 			if(par1MovingObjectPosition.entityHit != null)
 			{
-				par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeFireballDamage(this, shootingEntity), 6);
+				par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeFireballDamage(this, shootingEntity), 6.0F);
 			}
 			worldObj.newExplosion((Entity) null, posX, posY, posZ, field_92057_e, true, worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
 			setDead();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityLavaFX.java b/RMCClient/minecraft/net/minecraft/src/EntityLavaFX.java
index 067c8aa..0d6d7f7 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityLavaFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityLavaFX.java
@@ -4,9 +4,9 @@
 {
 	private float lavaParticleScale;
 	
-	public EntityLavaFX(World par1World, double par2, double par4, double par6)
+	public EntityLavaFX(World p_i1215_1_, double p_i1215_2_, double p_i1215_4_, double p_i1215_6_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		super(p_i1215_1_, p_i1215_2_, p_i1215_4_, p_i1215_6_, 0.0D, 0.0D, 0.0D);
 		motionX *= 0.800000011920929D;
 		motionY *= 0.800000011920929D;
 		motionZ *= 0.800000011920929D;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityLeashKnot.java b/RMCClient/minecraft/net/minecraft/src/EntityLeashKnot.java
new file mode 100644
index 0000000..3e09fa6
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityLeashKnot.java
@@ -0,0 +1,139 @@
+package net.minecraft.src;
+
+import java.util.Iterator;
+import java.util.List;
+
+public class EntityLeashKnot extends EntityHanging
+{
+	public EntityLeashKnot(World p_i1592_1_)
+	{
+		super(p_i1592_1_);
+	}
+	
+	public EntityLeashKnot(World p_i1593_1_, int p_i1593_2_, int p_i1593_3_, int p_i1593_4_)
+	{
+		super(p_i1593_1_, p_i1593_2_, p_i1593_3_, p_i1593_4_, 0);
+		setPosition(p_i1593_2_ + 0.5D, p_i1593_3_ + 0.5D, p_i1593_4_ + 0.5D);
+	}
+	
+	@Override public boolean addEntityID(NBTTagCompound par1NBTTagCompound)
+	{
+		return false;
+	}
+	
+	@Override protected void entityInit()
+	{
+		super.entityInit();
+	}
+	
+	@Override public void func_110128_b(Entity p_110128_1_)
+	{
+	}
+	
+	@Override public boolean func_130002_c(EntityPlayer p_130002_1_)
+	{
+		ItemStack var2 = p_130002_1_.getHeldItem();
+		boolean var3 = false;
+		double var4;
+		List var6;
+		Iterator var7;
+		EntityLiving var8;
+		if(var2 != null && var2.itemID == Item.field_111214_ch.itemID && !worldObj.isRemote)
+		{
+			var4 = 7.0D;
+			var6 = worldObj.getEntitiesWithinAABB(EntityLiving.class, AxisAlignedBB.getAABBPool().getAABB(posX - var4, posY - var4, posZ - var4, posX + var4, posY + var4, posZ + var4));
+			if(var6 != null)
+			{
+				var7 = var6.iterator();
+				while(var7.hasNext())
+				{
+					var8 = (EntityLiving) var7.next();
+					if(var8.func_110167_bD() && var8.func_110166_bE() == p_130002_1_)
+					{
+						var8.func_110162_b(this, true);
+						var3 = true;
+					}
+				}
+			}
+		}
+		if(!worldObj.isRemote && !var3)
+		{
+			setDead();
+			if(p_130002_1_.capabilities.isCreativeMode)
+			{
+				var4 = 7.0D;
+				var6 = worldObj.getEntitiesWithinAABB(EntityLiving.class, AxisAlignedBB.getAABBPool().getAABB(posX - var4, posY - var4, posZ - var4, posX + var4, posY + var4, posZ + var4));
+				if(var6 != null)
+				{
+					var7 = var6.iterator();
+					while(var7.hasNext())
+					{
+						var8 = (EntityLiving) var7.next();
+						if(var8.func_110167_bD() && var8.func_110166_bE() == this)
+						{
+							var8.func_110160_i(true, false);
+						}
+					}
+				}
+			}
+		}
+		return true;
+	}
+	
+	@Override public int func_82329_d()
+	{
+		return 9;
+	}
+	
+	@Override public int func_82330_g()
+	{
+		return 9;
+	}
+	
+	@Override public boolean isInRangeToRenderDist(double par1)
+	{
+		return par1 < 1024.0D;
+	}
+	
+	@Override public boolean onValidSurface()
+	{
+		int var1 = worldObj.getBlockId(xPosition, yPosition, zPosition);
+		return Block.blocksList[var1] != null && Block.blocksList[var1].getRenderType() == 11;
+	}
+	
+	@Override public void readEntityFromNBT(NBTTagCompound par1NBTTagCompound)
+	{
+	}
+	
+	@Override public void setDirection(int par1)
+	{
+	}
+	
+	@Override public void writeEntityToNBT(NBTTagCompound par1NBTTagCompound)
+	{
+	}
+	
+	public static EntityLeashKnot func_110129_a(World p_110129_0_, int p_110129_1_, int p_110129_2_, int p_110129_3_)
+	{
+		EntityLeashKnot var4 = new EntityLeashKnot(p_110129_0_, p_110129_1_, p_110129_2_, p_110129_3_);
+		var4.field_98038_p = true;
+		p_110129_0_.spawnEntityInWorld(var4);
+		return var4;
+	}
+	
+	public static EntityLeashKnot func_110130_b(World p_110130_0_, int p_110130_1_, int p_110130_2_, int p_110130_3_)
+	{
+		List var4 = p_110130_0_.getEntitiesWithinAABB(EntityLeashKnot.class, AxisAlignedBB.getAABBPool().getAABB(p_110130_1_ - 1.0D, p_110130_2_ - 1.0D, p_110130_3_ - 1.0D, p_110130_1_ + 1.0D, p_110130_2_ + 1.0D, p_110130_3_ + 1.0D));
+		Object var5 = null;
+		if(var4 != null)
+		{
+			Iterator var6 = var4.iterator();
+			while(var6.hasNext())
+			{
+				EntityLeashKnot var7 = (EntityLeashKnot) var6.next();
+				if(var7.xPosition == p_110130_1_ && var7.yPosition == p_110130_2_ && var7.zPosition == p_110130_3_) return var7;
+			}
+		}
+		return null;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityLightningBolt.java b/RMCClient/minecraft/net/minecraft/src/EntityLightningBolt.java
index 6a08dde..add90aa 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityLightningBolt.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityLightningBolt.java
@@ -5,33 +5,33 @@
 public class EntityLightningBolt extends EntityWeatherEffect
 {
 	private int lightningState;
-	public long boltVertex = 0L;
+	public long boltVertex;
 	private int boltLivingTime;
 	
-	public EntityLightningBolt(World par1World, double par2, double par4, double par6)
+	public EntityLightningBolt(World p_i1703_1_, double p_i1703_2_, double p_i1703_4_, double p_i1703_6_)
 	{
-		super(par1World);
-		setLocationAndAngles(par2, par4, par6, 0.0F, 0.0F);
+		super(p_i1703_1_);
+		setLocationAndAngles(p_i1703_2_, p_i1703_4_, p_i1703_6_, 0.0F, 0.0F);
 		lightningState = 2;
 		boltVertex = rand.nextLong();
 		boltLivingTime = rand.nextInt(3) + 1;
-		if(!par1World.isRemote && par1World.difficultySetting >= 2 && par1World.doChunksNearChunkExist(MathHelper.floor_double(par2), MathHelper.floor_double(par4), MathHelper.floor_double(par6), 10))
+		if(!p_i1703_1_.isRemote && p_i1703_1_.getGameRules().getGameRuleBooleanValue("doFireTick") && p_i1703_1_.difficultySetting >= 2 && p_i1703_1_.doChunksNearChunkExist(MathHelper.floor_double(p_i1703_2_), MathHelper.floor_double(p_i1703_4_), MathHelper.floor_double(p_i1703_6_), 10))
 		{
-			int var8 = MathHelper.floor_double(par2);
-			int var9 = MathHelper.floor_double(par4);
-			int var10 = MathHelper.floor_double(par6);
-			if(par1World.getBlockId(var8, var9, var10) == 0 && Block.fire.canPlaceBlockAt(par1World, var8, var9, var10))
+			int var8 = MathHelper.floor_double(p_i1703_2_);
+			int var9 = MathHelper.floor_double(p_i1703_4_);
+			int var10 = MathHelper.floor_double(p_i1703_6_);
+			if(p_i1703_1_.getBlockId(var8, var9, var10) == 0 && Block.fire.canPlaceBlockAt(p_i1703_1_, var8, var9, var10))
 			{
-				par1World.setBlock(var8, var9, var10, Block.fire.blockID);
+				p_i1703_1_.setBlock(var8, var9, var10, Block.fire.blockID);
 			}
 			for(var8 = 0; var8 < 4; ++var8)
 			{
-				var9 = MathHelper.floor_double(par2) + rand.nextInt(3) - 1;
-				var10 = MathHelper.floor_double(par4) + rand.nextInt(3) - 1;
-				int var11 = MathHelper.floor_double(par6) + rand.nextInt(3) - 1;
-				if(par1World.getBlockId(var9, var10, var11) == 0 && Block.fire.canPlaceBlockAt(par1World, var9, var10, var11))
+				var9 = MathHelper.floor_double(p_i1703_2_) + rand.nextInt(3) - 1;
+				var10 = MathHelper.floor_double(p_i1703_4_) + rand.nextInt(3) - 1;
+				int var11 = MathHelper.floor_double(p_i1703_6_) + rand.nextInt(3) - 1;
+				if(p_i1703_1_.getBlockId(var9, var10, var11) == 0 && Block.fire.canPlaceBlockAt(p_i1703_1_, var9, var10, var11))
 				{
-					par1World.setBlock(var9, var10, var11, Block.fire.blockID);
+					p_i1703_1_.setBlock(var9, var10, var11, Block.fire.blockID);
 				}
 			}
 		}
@@ -65,7 +65,7 @@
 				--boltLivingTime;
 				lightningState = 1;
 				boltVertex = rand.nextLong();
-				if(!worldObj.isRemote && worldObj.doChunksNearChunkExist(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ), 10))
+				if(!worldObj.isRemote && worldObj.getGameRules().getGameRuleBooleanValue("doFireTick") && worldObj.doChunksNearChunkExist(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ), 10))
 				{
 					int var1 = MathHelper.floor_double(posX);
 					int var2 = MathHelper.floor_double(posY);
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityList.java b/RMCClient/minecraft/net/minecraft/src/EntityList.java
index 966fefb..e034dd1 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityList.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityList.java
@@ -131,6 +131,7 @@
 	{
 		addMapping(EntityItem.class, "Item", 1);
 		addMapping(EntityXPOrb.class, "XPOrb", 2);
+		addMapping(EntityLeashKnot.class, "LeashKnot", 8);
 		addMapping(EntityPainting.class, "Painting", 9);
 		addMapping(EntityArrow.class, "Arrow", 10);
 		addMapping(EntitySnowball.class, "Snowball", 11);
@@ -181,6 +182,7 @@
 		addMapping(EntitySnowman.class, "SnowMan", 97);
 		addMapping(EntityOcelot.class, "Ozelot", 98, 15720061, 5653556);
 		addMapping(EntityIronGolem.class, "VillagerGolem", 99);
+		addMapping(EntityHorse.class, "EntityHorse", 100, 12623485, 15656192);
 		addMapping(EntityVillager.class, "Villager", 120, 5651507, 12422002);
 		addMapping(EntityEnderCrystal.class, "EnderCrystal", 200);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityLiving.java b/RMCClient/minecraft/net/minecraft/src/EntityLiving.java
index 1f37dea..2d4591b 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityLiving.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityLiving.java
@@ -1,67 +1,13 @@
 package net.minecraft.src;
 
-import java.util.Collection;
-import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
-import java.util.Random;
+import java.util.UUID;
 
-public abstract class EntityLiving extends Entity
+public abstract class EntityLiving extends EntityLivingBase
 {
-	private static final float[] enchantmentProbability = new float[] { 0.0F, 0.0F, 0.1F, 0.2F };
-	private static final float[] armorEnchantmentProbability = new float[] { 0.0F, 0.0F, 0.25F, 0.5F };
-	private static final float[] armorProbability = new float[] { 0.0F, 0.0F, 0.05F, 0.07F };
-	public static final float[] pickUpLootProability = new float[] { 0.0F, 0.1F, 0.15F, 0.45F };
-	public int maxHurtResistantTime = 20;
-	public float field_70769_ao;
-	public float field_70770_ap;
-	public float renderYawOffset = 0.0F;
-	public float prevRenderYawOffset = 0.0F;
-	public float rotationYawHead = 0.0F;
-	public float prevRotationYawHead = 0.0F;
-	protected float field_70768_au;
-	protected float field_70766_av;
-	protected float field_70764_aw;
-	protected float field_70763_ax;
-	protected boolean field_70753_ay = true;
-	protected String texture = "/mob/char.png";
-	protected boolean field_70740_aA = true;
-	protected float field_70741_aB = 0.0F;
-	protected String entityType = null;
-	protected float field_70743_aD = 1.0F;
-	protected int scoreValue = 0;
-	protected float field_70745_aF = 0.0F;
-	public float landMovementFactor = 0.1F;
-	public float jumpMovementFactor = 0.02F;
-	public float prevSwingProgress;
-	public float swingProgress;
-	protected int health = getMaxHealth();
-	public int prevHealth;
-	protected int carryoverDamage;
 	public int livingSoundTime;
-	public int hurtTime;
-	public int maxHurtTime;
-	public float attackedAtYaw = 0.0F;
-	public int deathTime = 0;
-	public int attackTime = 0;
-	public float prevCameraPitch;
-	public float cameraPitch;
-	protected boolean dead = false;
 	protected int experienceValue;
-	public int field_70731_aW = -1;
-	public float field_70730_aX = (float) (Math.random() * 0.8999999761581421D + 0.10000000149011612D);
-	public float prevLimbYaw;
-	public float limbYaw;
-	public float limbSwing;
-	protected EntityPlayer attackingPlayer = null;
-	protected int recentlyHit = 0;
-	private EntityLiving entityLivingToAttack = null;
-	private int revengeTimer = 0;
-	private EntityLiving lastAttackingEntity = null;
-	public int arrowHitTimer = 0;
-	protected HashMap activePotionsMap = new HashMap();
-	private boolean potionsNeedUpdate = true;
-	private int field_70748_f;
 	private EntityLookHelper lookHelper;
 	private EntityMoveHelper moveHelper;
 	private EntityJumpHelper jumpHelper;
@@ -69,81 +15,39 @@
 	private PathNavigate navigator;
 	protected final EntityAITasks tasks;
 	protected final EntityAITasks targetTasks;
-	private EntityLiving attackTarget;
+	private EntityLivingBase attackTarget;
 	private EntitySenses senses;
-	private float AIMoveSpeed;
-	private ChunkCoordinates homePosition = new ChunkCoordinates(0, 0, 0);
-	private float maximumHomeDistance = -1.0F;
 	private ItemStack[] equipment = new ItemStack[5];
 	protected float[] equipmentDropChances = new float[5];
-	private ItemStack[] previousEquipment = new ItemStack[5];
-	public boolean isSwingInProgress = false;
-	public int swingProgressInt = 0;
-	private boolean canPickUpLoot = false;
-	private boolean persistenceRequired = false;
-	protected final CombatTracker field_94063_bt = new CombatTracker(this);
-	protected int newPosRotationIncrements;
-	protected double newPosX;
-	protected double newPosY;
-	protected double newPosZ;
-	protected double newRotationYaw;
-	protected double newRotationPitch;
-	float field_70706_bo = 0.0F;
-	protected int lastDamage = 0;
-	protected int entityAge = 0;
-	protected float moveStrafing;
-	protected float moveForward;
-	protected float randomYawVelocity;
-	protected boolean isJumping = false;
-	protected float defaultPitch = 0.0F;
-	protected float moveSpeed = 0.7F;
-	private int jumpTicks = 0;
+	private boolean canPickUpLoot;
+	private boolean persistenceRequired;
+	protected float defaultPitch;
 	private Entity currentTarget;
-	protected int numTicksToChaseTarget = 0;
+	protected int numTicksToChaseTarget;
+	private boolean field_110169_bv;
+	private Entity field_110168_bw;
+	private NBTTagCompound field_110170_bx;
 	
-	public EntityLiving(World par1World)
+	public EntityLiving(World p_i1595_1_)
 	{
-		super(par1World);
-		preventEntitySpawning = true;
-		tasks = new EntityAITasks(par1World != null && par1World.theProfiler != null ? par1World.theProfiler : null);
-		targetTasks = new EntityAITasks(par1World != null && par1World.theProfiler != null ? par1World.theProfiler : null);
+		super(p_i1595_1_);
+		tasks = new EntityAITasks(p_i1595_1_ != null && p_i1595_1_.theProfiler != null ? p_i1595_1_.theProfiler : null);
+		targetTasks = new EntityAITasks(p_i1595_1_ != null && p_i1595_1_.theProfiler != null ? p_i1595_1_.theProfiler : null);
 		lookHelper = new EntityLookHelper(this);
 		moveHelper = new EntityMoveHelper(this);
 		jumpHelper = new EntityJumpHelper(this);
 		bodyHelper = new EntityBodyHelper(this);
-		navigator = new PathNavigate(this, par1World, func_96121_ay());
+		navigator = new PathNavigate(this, p_i1595_1_);
 		senses = new EntitySenses(this);
-		field_70770_ap = (float) (Math.random() + 1.0D) * 0.01F;
-		setPosition(posX, posY, posZ);
-		field_70769_ao = (float) Math.random() * 12398.0F;
-		rotationYaw = (float) (Math.random() * Math.PI * 2.0D);
-		rotationYawHead = rotationYaw;
 		for(int var2 = 0; var2 < equipmentDropChances.length; ++var2)
 		{
 			equipmentDropChances[var2] = 0.085F;
-		}
-		stepHeight = 0.5F;
-	}
-	
-	public void addPotionEffect(PotionEffect par1PotionEffect)
-	{
-		if(isPotionApplicable(par1PotionEffect))
-		{
-			if(activePotionsMap.containsKey(Integer.valueOf(par1PotionEffect.getPotionID())))
-			{
-				((PotionEffect) activePotionsMap.get(Integer.valueOf(par1PotionEffect.getPotionID()))).combine(par1PotionEffect);
-				onChangedPotionEffect((PotionEffect) activePotionsMap.get(Integer.valueOf(par1PotionEffect.getPotionID())));
-			} else
-			{
-				activePotionsMap.put(Integer.valueOf(par1PotionEffect.getPotionID()), par1PotionEffect);
-				onNewPotionEffect(par1PotionEffect);
-			}
 		}
 	}
 	
 	protected void addRandomArmor()
 	{
-		if(rand.nextFloat() < armorProbability[worldObj.difficultySetting])
+		if(rand.nextFloat() < 0.15F * worldObj.func_110746_b(posX, posY, posZ))
 		{
 			int var1 = rand.nextInt(2);
 			float var2 = worldObj.difficultySetting == 3 ? 0.1F : 0.25F;
@@ -161,7 +65,7 @@
 			}
 			for(int var3 = 3; var3 >= 0; --var3)
 			{
-				ItemStack var4 = getCurrentArmor(var3);
+				ItemStack var4 = func_130225_q(var3);
 				if(var3 < 3 && rand.nextFloat() < var2)
 				{
 					break;
@@ -178,170 +82,12 @@
 		}
 	}
 	
-	protected int applyArmorCalculations(DamageSource par1DamageSource, int par2)
-	{
-		if(!par1DamageSource.isUnblockable())
-		{
-			int var3 = 25 - getTotalArmorValue();
-			int var4 = par2 * var3 + carryoverDamage;
-			damageArmor(par2);
-			par2 = var4 / 25;
-			carryoverDamage = var4 % 25;
-		}
-		return par2;
-	}
-	
-	protected int applyPotionDamageCalculations(DamageSource par1DamageSource, int par2)
-	{
-		int var3;
-		int var4;
-		int var5;
-		if(this.isPotionActive(Potion.resistance))
-		{
-			var3 = (getActivePotionEffect(Potion.resistance).getAmplifier() + 1) * 5;
-			var4 = 25 - var3;
-			var5 = par2 * var4 + carryoverDamage;
-			par2 = var5 / 25;
-			carryoverDamage = var5 % 25;
-		}
-		if(par2 <= 0) return 0;
-		else
-		{
-			var3 = EnchantmentHelper.getEnchantmentModifierDamage(getLastActiveItems(), par1DamageSource);
-			if(var3 > 20)
-			{
-				var3 = 20;
-			}
-			if(var3 > 0 && var3 <= 20)
-			{
-				var4 = 25 - var3;
-				var5 = par2 * var4 + carryoverDamage;
-				par2 = var5 / 25;
-				carryoverDamage = var5 % 25;
-			}
-			return par2;
-		}
-	}
-	
-	public boolean attackEntityAsMob(Entity par1Entity)
-	{
-		setLastAttackingEntity(par1Entity);
-		return false;
-	}
-	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
-	{
-		if(isEntityInvulnerable()) return false;
-		else if(worldObj.isRemote) return false;
-		else
-		{
-			entityAge = 0;
-			if(health <= 0) return false;
-			else if(par1DamageSource.isFireDamage() && this.isPotionActive(Potion.fireResistance)) return false;
-			else
-			{
-				if((par1DamageSource == DamageSource.anvil || par1DamageSource == DamageSource.fallingBlock) && getCurrentItemOrArmor(4) != null)
-				{
-					getCurrentItemOrArmor(4).damageItem(par2 * 4 + rand.nextInt(par2 * 2), this);
-					par2 = (int) (par2 * 0.75F);
-				}
-				limbYaw = 1.5F;
-				boolean var3 = true;
-				if(hurtResistantTime > maxHurtResistantTime / 2.0F)
-				{
-					if(par2 <= lastDamage) return false;
-					damageEntity(par1DamageSource, par2 - lastDamage);
-					lastDamage = par2;
-					var3 = false;
-				} else
-				{
-					lastDamage = par2;
-					prevHealth = health;
-					hurtResistantTime = maxHurtResistantTime;
-					damageEntity(par1DamageSource, par2);
-					hurtTime = maxHurtTime = 10;
-				}
-				attackedAtYaw = 0.0F;
-				Entity var4 = par1DamageSource.getEntity();
-				if(var4 != null)
-				{
-					if(var4 instanceof EntityLiving)
-					{
-						setRevengeTarget((EntityLiving) var4);
-					}
-					if(var4 instanceof EntityPlayer)
-					{
-						recentlyHit = 100;
-						attackingPlayer = (EntityPlayer) var4;
-					} else if(var4 instanceof EntityWolf)
-					{
-						EntityWolf var5 = (EntityWolf) var4;
-						if(var5.isTamed())
-						{
-							recentlyHit = 100;
-							attackingPlayer = null;
-						}
-					}
-				}
-				if(var3)
-				{
-					worldObj.setEntityState(this, (byte) 2);
-					if(par1DamageSource != DamageSource.drown)
-					{
-						setBeenAttacked();
-					}
-					if(var4 != null)
-					{
-						double var9 = var4.posX - posX;
-						double var7;
-						for(var7 = var4.posZ - posZ; var9 * var9 + var7 * var7 < 1.0E-4D; var7 = (Math.random() - Math.random()) * 0.01D)
-						{
-							var9 = (Math.random() - Math.random()) * 0.01D;
-						}
-						attackedAtYaw = (float) (Math.atan2(var7, var9) * 180.0D / Math.PI) - rotationYaw;
-						knockBack(var4, par2, var9, var7);
-					} else
-					{
-						attackedAtYaw = (int) (Math.random() * 2.0D) * 180;
-					}
-				}
-				if(health <= 0)
-				{
-					if(var3)
-					{
-						playSound(getDeathSound(), getSoundVolume(), getSoundPitch());
-					}
-					onDeath(par1DamageSource);
-				} else if(var3)
-				{
-					playSound(getHurtSound(), getSoundVolume(), getSoundPitch());
-				}
-				return true;
-			}
-		}
-	}
-	
 	public boolean canAttackClass(Class par1Class)
 	{
 		return EntityCreeper.class != par1Class && EntityGhast.class != par1Class;
 	}
 	
-	@Override public boolean canBeCollidedWith()
-	{
-		return !isDead;
-	}
-	
-	@Override public boolean canBePushed()
-	{
-		return !isDead;
-	}
-	
 	public boolean canBeSteered()
-	{
-		return false;
-	}
-	
-	public boolean canBreatheUnderwater()
 	{
 		return false;
 	}
@@ -351,61 +97,17 @@
 		return true;
 	}
 	
-	public boolean canEntityBeSeen(Entity par1Entity)
-	{
-		return worldObj.rayTraceBlocks(worldObj.getWorldVec3Pool().getVecFromPool(posX, posY + getEyeHeight(), posZ), worldObj.getWorldVec3Pool().getVecFromPool(par1Entity.posX, par1Entity.posY + par1Entity.getEyeHeight(), par1Entity.posZ)) == null;
-	}
-	
 	public boolean canPickUpLoot()
 	{
 		return canPickUpLoot;
 	}
 	
-	public void clearActivePotions()
-	{
-		Iterator var1 = activePotionsMap.keySet().iterator();
-		while(var1.hasNext())
-		{
-			Integer var2 = (Integer) var1.next();
-			PotionEffect var3 = (PotionEffect) activePotionsMap.get(var2);
-			if(!worldObj.isRemote)
-			{
-				var1.remove();
-				onFinishedPotionEffect(var3);
-			}
-		}
-	}
-	
-	protected void collideWithEntity(Entity par1Entity)
-	{
-		par1Entity.applyEntityCollision(this);
-	}
-	
-	protected void damageArmor(int par1)
-	{
-	}
-	
-	protected void damageEntity(DamageSource par1DamageSource, int par2)
-	{
-		if(!isEntityInvulnerable())
-		{
-			par2 = applyArmorCalculations(par1DamageSource, par2);
-			par2 = applyPotionDamageCalculations(par1DamageSource, par2);
-			int var3 = getHealth();
-			health -= par2;
-			field_94063_bt.func_94547_a(par1DamageSource, var3, par2);
-		}
-	}
-	
-	protected int decreaseAirSupply(int par1)
-	{
-		int var2 = EnchantmentHelper.getRespiration(this);
-		return var2 > 0 && rand.nextInt(var2 + 1) > 0 ? par1 : par1 - 1;
-	}
-	
 	protected void despawnEntity()
 	{
-		if(!persistenceRequired)
+		if(persistenceRequired)
+		{
+			entityAge = 0;
+		} else
 		{
 			EntityPlayer var1 = worldObj.getClosestPlayerToEntity(this, -1.0D);
 			if(var1 != null)
@@ -429,12 +131,7 @@
 		}
 	}
 	
-	public void detachHome()
-	{
-		maximumHomeDistance = -1.0F;
-	}
-	
-	protected void dropEquipment(boolean par1, int par2)
+	@Override protected void dropEquipment(boolean par1, int par2)
 	{
 		for(int var3 = 0; var3 < getLastActiveItems().length; ++var3)
 		{
@@ -461,7 +158,7 @@
 		}
 	}
 	
-	protected void dropFewItems(boolean par1, int par2)
+	@Override protected void dropFewItems(boolean par1, int par2)
 	{
 		int var3 = getDropItemId();
 		if(var3 > 0)
@@ -478,21 +175,15 @@
 		}
 	}
 	
-	protected void dropRareDrop(int par1)
-	{
-	}
-	
 	public void eatGrassBonus()
 	{
 	}
 	
 	@Override protected void entityInit()
 	{
-		dataWatcher.addObject(8, Integer.valueOf(field_70748_f));
-		dataWatcher.addObject(9, Byte.valueOf((byte) 0));
-		dataWatcher.addObject(10, Byte.valueOf((byte) 0));
-		dataWatcher.addObject(6, Byte.valueOf((byte) 0));
-		dataWatcher.addObject(5, "");
+		super.entityInit();
+		dataWatcher.addObject(11, Byte.valueOf((byte) 0));
+		dataWatcher.addObject(10, "");
 	}
 	
 	public void faceEntity(Entity par1Entity, float par2, float par3)
@@ -500,9 +191,9 @@
 		double var4 = par1Entity.posX - posX;
 		double var8 = par1Entity.posZ - posZ;
 		double var6;
-		if(par1Entity instanceof EntityLiving)
+		if(par1Entity instanceof EntityLivingBase)
 		{
-			EntityLiving var10 = (EntityLiving) par1Entity;
+			EntityLivingBase var10 = (EntityLivingBase) par1Entity;
 			var6 = var10.posY + var10.getEyeHeight() - (posY + getEyeHeight());
 		} else
 		{
@@ -515,32 +206,162 @@
 		rotationYaw = updateRotation(rotationYaw, var12, par2);
 	}
 	
-	@Override protected void fall(float par1)
+	public boolean func_104002_bU()
 	{
-		super.fall(par1);
-		int var2 = MathHelper.ceiling_float_int(par1 - 3.0F);
-		if(var2 > 0)
+		return persistenceRequired;
+	}
+	
+	@Override protected float func_110146_f(float p_110146_1_, float p_110146_2_)
+	{
+		if(isAIEnabled())
 		{
-			if(var2 > 4)
+			bodyHelper.func_75664_a();
+			return p_110146_2_;
+		} else return super.func_110146_f(p_110146_1_, p_110146_2_);
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111265_b).func_111128_a(16.0D);
+	}
+	
+	protected void func_110159_bB()
+	{
+		if(field_110170_bx != null)
+		{
+			func_110165_bF();
+		}
+		if(field_110169_bv)
+		{
+			if(field_110168_bw == null || field_110168_bw.isDead)
 			{
-				playSound("damage.fallbig", 1.0F, 1.0F);
-			} else
-			{
-				playSound("damage.fallsmall", 1.0F, 1.0F);
-			}
-			attackEntityFrom(DamageSource.fall, var2);
-			int var3 = worldObj.getBlockId(MathHelper.floor_double(posX), MathHelper.floor_double(posY - 0.20000000298023224D - yOffset), MathHelper.floor_double(posZ));
-			if(var3 > 0)
-			{
-				StepSound var4 = Block.blocksList[var3].stepSound;
-				playSound(var4.getStepSound(), var4.getVolume() * 0.5F, var4.getPitch() * 0.75F);
+				func_110160_i(true, true);
 			}
 		}
 	}
 	
-	public boolean func_104002_bU()
+	public void func_110160_i(boolean p_110160_1_, boolean p_110160_2_)
 	{
-		return persistenceRequired;
+		if(field_110169_bv)
+		{
+			field_110169_bv = false;
+			field_110168_bw = null;
+			if(!worldObj.isRemote && p_110160_2_)
+			{
+				dropItem(Item.field_111214_ch.itemID, 1);
+			}
+			if(!worldObj.isRemote && p_110160_1_ && worldObj instanceof WorldServer)
+			{
+				((WorldServer) worldObj).getEntityTracker().sendPacketToAllPlayersTrackingEntity(this, new Packet39AttachEntity(1, this, (Entity) null));
+			}
+		}
+	}
+	
+	public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
+	{
+		func_110148_a(SharedMonsterAttributes.field_111265_b).func_111121_a(new AttributeModifier("Random spawn bonus", rand.nextGaussian() * 0.05D, 1));
+		return p_110161_1_;
+	}
+	
+	public void func_110162_b(Entity p_110162_1_, boolean p_110162_2_)
+	{
+		field_110169_bv = true;
+		field_110168_bw = p_110162_1_;
+		if(!worldObj.isRemote && p_110162_2_ && worldObj instanceof WorldServer)
+		{
+			((WorldServer) worldObj).getEntityTracker().sendPacketToAllPlayersTrackingEntity(this, new Packet39AttachEntity(1, this, field_110168_bw));
+		}
+	}
+	
+	public void func_110163_bv()
+	{
+		persistenceRequired = true;
+	}
+	
+	public boolean func_110164_bC()
+	{
+		return !func_110167_bD() && !(this instanceof IMob);
+	}
+	
+	private void func_110165_bF()
+	{
+		if(field_110169_bv && field_110170_bx != null)
+		{
+			if(field_110170_bx.hasKey("UUIDMost") && field_110170_bx.hasKey("UUIDLeast"))
+			{
+				UUID var5 = new UUID(field_110170_bx.getLong("UUIDMost"), field_110170_bx.getLong("UUIDLeast"));
+				List var6 = worldObj.getEntitiesWithinAABB(EntityLivingBase.class, boundingBox.expand(10.0D, 10.0D, 10.0D));
+				Iterator var7 = var6.iterator();
+				while(var7.hasNext())
+				{
+					EntityLivingBase var8 = (EntityLivingBase) var7.next();
+					if(var8.func_110124_au().equals(var5))
+					{
+						field_110168_bw = var8;
+						break;
+					}
+				}
+			} else if(field_110170_bx.hasKey("X") && field_110170_bx.hasKey("Y") && field_110170_bx.hasKey("Z"))
+			{
+				int var1 = field_110170_bx.getInteger("X");
+				int var2 = field_110170_bx.getInteger("Y");
+				int var3 = field_110170_bx.getInteger("Z");
+				EntityLeashKnot var4 = EntityLeashKnot.func_110130_b(worldObj, var1, var2, var3);
+				if(var4 == null)
+				{
+					var4 = EntityLeashKnot.func_110129_a(worldObj, var1, var2, var3);
+				}
+				field_110168_bw = var4;
+			} else
+			{
+				func_110160_i(false, true);
+			}
+		}
+		field_110170_bx = null;
+	}
+	
+	public Entity func_110166_bE()
+	{
+		return field_110168_bw;
+	}
+	
+	public boolean func_110167_bD()
+	{
+		return field_110169_bv;
+	}
+	
+	@Override public final boolean func_130002_c(EntityPlayer p_130002_1_)
+	{
+		if(func_110167_bD() && func_110166_bE() == p_130002_1_)
+		{
+			func_110160_i(true, !p_130002_1_.capabilities.isCreativeMode);
+			return true;
+		} else
+		{
+			ItemStack var2 = p_130002_1_.inventory.getCurrentItem();
+			if(var2 != null && var2.itemID == Item.field_111214_ch.itemID && func_110164_bC())
+			{
+				if(!(this instanceof EntityTameable) || !((EntityTameable) this).isTamed())
+				{
+					func_110162_b(p_130002_1_, true);
+					--var2.stackSize;
+					return true;
+				}
+				if(p_130002_1_.getCommandSenderName().equalsIgnoreCase(((EntityTameable) this).getOwnerName()))
+				{
+					func_110162_b(p_130002_1_, true);
+					--var2.stackSize;
+					return true;
+				}
+			}
+			return interact(p_130002_1_) ? true : super.func_130002_c(p_130002_1_);
+		}
+	}
+	
+	public ItemStack func_130225_q(int var1)
+	{
+		return equipment[var1 + 1];
 	}
 	
 	@Override public int func_82143_as()
@@ -548,7 +369,7 @@
 		if(getAttackTarget() == null) return 3;
 		else
 		{
-			int var1 = (int) (health - getMaxHealth() * 0.33F);
+			int var1 = (int) (func_110143_aJ() - func_110138_aP() * 0.33F);
 			var1 -= (3 - worldObj.difficultySetting) * 4;
 			if(var1 < 0)
 			{
@@ -560,69 +381,49 @@
 	
 	protected void func_82162_bC()
 	{
-		if(getHeldItem() != null && rand.nextFloat() < enchantmentProbability[worldObj.difficultySetting])
+		float var1 = worldObj.func_110746_b(posX, posY, posZ);
+		if(getHeldItem() != null && rand.nextFloat() < 0.25F * var1)
 		{
-			EnchantmentHelper.addRandomEnchantment(rand, getHeldItem(), 5 + worldObj.difficultySetting * rand.nextInt(6));
+			EnchantmentHelper.addRandomEnchantment(rand, getHeldItem(), (int) (5.0F + var1 * rand.nextInt(18)));
 		}
-		for(int var1 = 0; var1 < 4; ++var1)
+		for(int var2 = 0; var2 < 4; ++var2)
 		{
-			ItemStack var2 = getCurrentArmor(var1);
-			if(var2 != null && rand.nextFloat() < armorEnchantmentProbability[worldObj.difficultySetting])
+			ItemStack var3 = func_130225_q(var2);
+			if(var3 != null && rand.nextFloat() < 0.5F * var1)
 			{
-				EnchantmentHelper.addRandomEnchantment(rand, var2, 5 + worldObj.difficultySetting * rand.nextInt(6));
-			}
-		}
-	}
-	
-	protected void func_85033_bc()
-	{
-		List var1 = worldObj.getEntitiesWithinAABBExcludingEntity(this, boundingBox.expand(0.20000000298023224D, 0.0D, 0.20000000298023224D));
-		if(var1 != null && !var1.isEmpty())
-		{
-			for(int var2 = 0; var2 < var1.size(); ++var2)
-			{
-				Entity var3 = (Entity) var1.get(var2);
-				if(var3.canBePushed())
-				{
-					collideWithEntity(var3);
-				}
+				EnchantmentHelper.addRandomEnchantment(rand, var3, (int) (5.0F + var1 * rand.nextInt(18)));
 			}
 		}
 	}
 	
 	public boolean func_94056_bM()
 	{
-		return dataWatcher.getWatchableObjectString(5).length() > 0;
+		return dataWatcher.getWatchableObjectString(10).length() > 0;
 	}
 	
 	public String func_94057_bL()
 	{
-		return dataWatcher.getWatchableObjectString(5);
+		return dataWatcher.getWatchableObjectString(10);
 	}
 	
 	public void func_94058_c(String par1Str)
 	{
-		dataWatcher.updateObject(5, par1Str);
+		dataWatcher.updateObject(10, par1Str);
 	}
 	
-	public boolean func_94059_bO()
+	@Override public boolean func_94059_bO()
 	{
 		return func_94062_bN();
 	}
 	
-	public EntityLiving func_94060_bK()
-	{
-		return field_94063_bt.func_94550_c() != null ? field_94063_bt.func_94550_c() : attackingPlayer != null ? attackingPlayer : entityLivingToAttack != null ? entityLivingToAttack : null;
-	}
-	
 	public void func_94061_f(boolean par1)
 	{
-		dataWatcher.updateObject(6, Byte.valueOf((byte) (par1 ? 1 : 0)));
+		dataWatcher.updateObject(11, Byte.valueOf((byte) (par1 ? 1 : 0)));
 	}
 	
 	public boolean func_94062_bN()
 	{
-		return dataWatcher.getWatchableObjectByte(6) == 1;
+		return dataWatcher.getWatchableObjectByte(11) == 1;
 	}
 	
 	public void func_96120_a(int par1, float par2)
@@ -630,47 +431,7 @@
 		equipmentDropChances[par1] = par2;
 	}
 	
-	protected int func_96121_ay()
-	{
-		return 16;
-	}
-	
-	public PotionEffect getActivePotionEffect(Potion par1Potion)
-	{
-		return (PotionEffect) activePotionsMap.get(Integer.valueOf(par1Potion.id));
-	}
-	
-	public Collection getActivePotionEffects()
-	{
-		return activePotionsMap.values();
-	}
-	
-	public int getAge()
-	{
-		return entityAge;
-	}
-	
-	public float getAIMoveSpeed()
-	{
-		return AIMoveSpeed;
-	}
-	
-	public EntityLiving getAITarget()
-	{
-		return entityLivingToAttack;
-	}
-	
-	private int getArmSwingAnimationEnd()
-	{
-		return this.isPotionActive(Potion.digSpeed) ? 6 - (1 + getActivePotionEffect(Potion.digSpeed).getAmplifier()) * 1 : this.isPotionActive(Potion.digSlowdown) ? 6 + (1 + getActivePotionEffect(Potion.digSlowdown).getAmplifier()) * 2 : 6;
-	}
-	
-	public final int getArrowCountInEntity()
-	{
-		return dataWatcher.getWatchableObjectByte(10);
-	}
-	
-	public EntityLiving getAttackTarget()
+	public EntityLivingBase getAttackTarget()
 	{
 		return attackTarget;
 	}
@@ -680,24 +441,9 @@
 		return worldObj.checkNoEntityCollision(boundingBox) && worldObj.getCollidingBoundingBoxes(this, boundingBox).isEmpty() && !worldObj.isAnyLiquid(boundingBox);
 	}
 	
-	public EnumCreatureAttribute getCreatureAttribute()
-	{
-		return EnumCreatureAttribute.UNDEFINED;
-	}
-	
-	public ItemStack getCurrentArmor(int par1)
-	{
-		return equipment[par1 + 1];
-	}
-	
-	public ItemStack getCurrentItemOrArmor(int par1)
+	@Override public ItemStack getCurrentItemOrArmor(int par1)
 	{
 		return equipment[par1];
-	}
-	
-	protected String getDeathSound()
-	{
-		return "damage.hit";
 	}
 	
 	protected int getDropItemId()
@@ -715,7 +461,7 @@
 		return senses;
 	}
 	
-	protected int getExperiencePoints(EntityPlayer par1EntityPlayer)
+	@Override protected int getExperiencePoints(EntityPlayer par1EntityPlayer)
 	{
 		if(experienceValue > 0)
 		{
@@ -732,34 +478,9 @@
 		} else return experienceValue;
 	}
 	
-	@Override public float getEyeHeight()
-	{
-		return height * 0.85F;
-	}
-	
-	public int getHealth()
-	{
-		return health;
-	}
-	
-	public ItemStack getHeldItem()
+	@Override public ItemStack getHeldItem()
 	{
 		return equipment[0];
-	}
-	
-	public ChunkCoordinates getHomePosition()
-	{
-		return homePosition;
-	}
-	
-	protected String getHurtSound()
-	{
-		return "damage.hit";
-	}
-	
-	public Icon getItemIcon(ItemStack par1ItemStack, int par2)
-	{
-		return par1ItemStack.getIconIndex();
 	}
 	
 	public EntityJumpHelper getJumpHelper()
@@ -772,56 +493,14 @@
 		return equipment;
 	}
 	
-	public EntityLiving getLastAttackingEntity()
-	{
-		return lastAttackingEntity;
-	}
-	
 	protected String getLivingSound()
 	{
 		return null;
 	}
 	
-	public Vec3 getLook(float par1)
-	{
-		float var2;
-		float var3;
-		float var4;
-		float var5;
-		if(par1 == 1.0F)
-		{
-			var2 = MathHelper.cos(-rotationYaw * 0.017453292F - (float) Math.PI);
-			var3 = MathHelper.sin(-rotationYaw * 0.017453292F - (float) Math.PI);
-			var4 = -MathHelper.cos(-rotationPitch * 0.017453292F);
-			var5 = MathHelper.sin(-rotationPitch * 0.017453292F);
-			return worldObj.getWorldVec3Pool().getVecFromPool(var3 * var4, var5, var2 * var4);
-		} else
-		{
-			var2 = prevRotationPitch + (rotationPitch - prevRotationPitch) * par1;
-			var3 = prevRotationYaw + (rotationYaw - prevRotationYaw) * par1;
-			var4 = MathHelper.cos(-var3 * 0.017453292F - (float) Math.PI);
-			var5 = MathHelper.sin(-var3 * 0.017453292F - (float) Math.PI);
-			float var6 = -MathHelper.cos(-var2 * 0.017453292F);
-			float var7 = MathHelper.sin(-var2 * 0.017453292F);
-			return worldObj.getWorldVec3Pool().getVecFromPool(var5 * var6, var7, var4 * var6);
-		}
-	}
-	
 	public EntityLookHelper getLookHelper()
 	{
 		return lookHelper;
-	}
-	
-	@Override public Vec3 getLookVec()
-	{
-		return getLook(1.0F);
-	}
-	
-	public abstract int getMaxHealth();
-	
-	public float getMaximumHomeDistance()
-	{
-		return maximumHomeDistance;
 	}
 	
 	public int getMaxSpawnedInChunk()
@@ -839,69 +518,9 @@
 		return navigator;
 	}
 	
-	public Vec3 getPosition(float par1)
-	{
-		if(par1 == 1.0F) return worldObj.getWorldVec3Pool().getVecFromPool(posX, posY, posZ);
-		else
-		{
-			double var2 = prevPosX + (posX - prevPosX) * par1;
-			double var4 = prevPosY + (posY - prevPosY) * par1;
-			double var6 = prevPosZ + (posZ - prevPosZ) * par1;
-			return worldObj.getWorldVec3Pool().getVecFromPool(var2, var4, var6);
-		}
-	}
-	
 	public float getRenderSizeModifier()
 	{
 		return 1.0F;
-	}
-	
-	public Random getRNG()
-	{
-		return rand;
-	}
-	
-	@Override public float getRotationYawHead()
-	{
-		return rotationYawHead;
-	}
-	
-	protected float getSoundPitch()
-	{
-		return isChild() ? (rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.5F : (rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.0F;
-	}
-	
-	protected float getSoundVolume()
-	{
-		return 1.0F;
-	}
-	
-	public float getSpeedModifier()
-	{
-		float var1 = 1.0F;
-		if(this.isPotionActive(Potion.moveSpeed))
-		{
-			var1 *= 1.0F + 0.2F * (getActivePotionEffect(Potion.moveSpeed).getAmplifier() + 1);
-		}
-		if(this.isPotionActive(Potion.moveSlowdown))
-		{
-			var1 *= 1.0F - 0.15F * (getActivePotionEffect(Potion.moveSlowdown).getAmplifier() + 1);
-		}
-		if(var1 < 0.0F)
-		{
-			var1 = 0.0F;
-		}
-		return var1;
-	}
-	
-	public float getSwingProgress(float par1)
-	{
-		float var2 = swingProgress - prevSwingProgress;
-		if(var2 < 0.0F)
-		{
-			++var2;
-		}
-		return prevSwingProgress + var2 * par1;
 	}
 	
 	public int getTalkInterval()
@@ -909,402 +528,23 @@
 		return 80;
 	}
 	
-	@Override public String getTexture()
-	{
-		return texture;
-	}
-	
-	public int getTotalArmorValue()
-	{
-		int var1 = 0;
-		ItemStack[] var2 = getLastActiveItems();
-		int var3 = var2.length;
-		for(int var4 = 0; var4 < var3; ++var4)
-		{
-			ItemStack var5 = var2[var4];
-			if(var5 != null && var5.getItem() instanceof ItemArmor)
-			{
-				int var6 = ((ItemArmor) var5.getItem()).damageReduceAmount;
-				var1 += var6;
-			}
-		}
-		return var1;
-	}
-	
 	public int getVerticalFaceSpeed()
 	{
 		return 40;
 	}
 	
-	@Override public void handleHealthUpdate(byte par1)
-	{
-		if(par1 == 2)
-		{
-			limbYaw = 1.5F;
-			hurtResistantTime = maxHurtResistantTime;
-			hurtTime = maxHurtTime = 10;
-			attackedAtYaw = 0.0F;
-			playSound(getHurtSound(), getSoundVolume(), (rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.0F);
-			attackEntityFrom(DamageSource.generic, 0);
-		} else if(par1 == 3)
-		{
-			playSound(getDeathSound(), getSoundVolume(), (rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.0F);
-			health = 0;
-			onDeath(DamageSource.generic);
-		} else
-		{
-			super.handleHealthUpdate(par1);
-		}
-	}
-	
-	public boolean hasHome()
-	{
-		return maximumHomeDistance != -1.0F;
-	}
-	
-	public void heal(int par1)
-	{
-		if(health > 0)
-		{
-			setEntityHealth(getHealth() + par1);
-			if(health > getMaxHealth())
-			{
-				setEntityHealth(getMaxHealth());
-			}
-			hurtResistantTime = maxHurtResistantTime / 2;
-		}
-	}
-	
-	public void initCreature()
-	{
-	}
-	
-	protected boolean isAIEnabled()
+	protected boolean interact(EntityPlayer par1EntityPlayer)
 	{
 		return false;
 	}
 	
-	public boolean isBlocking()
+	@Override protected boolean isAIEnabled()
 	{
 		return false;
-	}
-	
-	public boolean isChild()
-	{
-		return false;
-	}
-	
-	protected boolean isClientWorld()
-	{
-		return !worldObj.isRemote;
-	}
-	
-	@Override public boolean isEntityAlive()
-	{
-		return !isDead && health > 0;
-	}
-	
-	public boolean isEntityUndead()
-	{
-		return getCreatureAttribute() == EnumCreatureAttribute.UNDEAD;
-	}
-	
-	protected boolean isMovementBlocked()
-	{
-		return health <= 0;
-	}
-	
-	public boolean isOnLadder()
-	{
-		int var1 = MathHelper.floor_double(posX);
-		int var2 = MathHelper.floor_double(boundingBox.minY);
-		int var3 = MathHelper.floor_double(posZ);
-		int var4 = worldObj.getBlockId(var1, var2, var3);
-		return var4 == Block.ladder.blockID || var4 == Block.vine.blockID;
-	}
-	
-	protected boolean isPlayer()
-	{
-		return false;
-	}
-	
-	public boolean isPlayerSleeping()
-	{
-		return false;
-	}
-	
-	public boolean isPotionActive(int par1)
-	{
-		return activePotionsMap.containsKey(Integer.valueOf(par1));
-	}
-	
-	public boolean isPotionActive(Potion par1Potion)
-	{
-		return activePotionsMap.containsKey(Integer.valueOf(par1Potion.id));
-	}
-	
-	public boolean isPotionApplicable(PotionEffect par1PotionEffect)
-	{
-		if(getCreatureAttribute() == EnumCreatureAttribute.UNDEAD)
-		{
-			int var2 = par1PotionEffect.getPotionID();
-			if(var2 == Potion.regeneration.id || var2 == Potion.poison.id) return false;
-		}
-		return true;
-	}
-	
-	public boolean isWithinHomeDistance(int par1, int par2, int par3)
-	{
-		return maximumHomeDistance == -1.0F ? true : homePosition.getDistanceSquared(par1, par2, par3) < maximumHomeDistance * maximumHomeDistance;
-	}
-	
-	public boolean isWithinHomeDistanceCurrentPosition()
-	{
-		return isWithinHomeDistance(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ));
-	}
-	
-	protected void jump()
-	{
-		motionY = 0.41999998688697815D;
-		if(this.isPotionActive(Potion.jump))
-		{
-			motionY += (getActivePotionEffect(Potion.jump).getAmplifier() + 1) * 0.1F;
-		}
-		if(isSprinting())
-		{
-			float var1 = rotationYaw * 0.017453292F;
-			motionX -= MathHelper.sin(var1) * 0.2F;
-			motionZ += MathHelper.cos(var1) * 0.2F;
-		}
-		isAirBorne = true;
-	}
-	
-	@Override protected void kill()
-	{
-		attackEntityFrom(DamageSource.outOfWorld, 4);
-	}
-	
-	public void knockBack(Entity par1Entity, int par2, double par3, double par5)
-	{
-		isAirBorne = true;
-		float var7 = MathHelper.sqrt_double(par3 * par3 + par5 * par5);
-		float var8 = 0.4F;
-		motionX /= 2.0D;
-		motionY /= 2.0D;
-		motionZ /= 2.0D;
-		motionX -= par3 / var7 * var8;
-		motionY += var8;
-		motionZ -= par5 / var7 * var8;
-		if(motionY > 0.4000000059604645D)
-		{
-			motionY = 0.4000000059604645D;
-		}
-	}
-	
-	public void moveEntityWithHeading(float par1, float par2)
-	{
-		double var9;
-		if(isInWater() && (!(this instanceof EntityPlayer) || !((EntityPlayer) this).capabilities.isFlying))
-		{
-			var9 = posY;
-			moveFlying(par1, par2, isAIEnabled() ? 0.04F : 0.02F);
-			moveEntity(motionX, motionY, motionZ);
-			motionX *= 0.800000011920929D;
-			motionY *= 0.800000011920929D;
-			motionZ *= 0.800000011920929D;
-			motionY -= 0.02D;
-			if(isCollidedHorizontally && isOffsetPositionInLiquid(motionX, motionY + 0.6000000238418579D - posY + var9, motionZ))
-			{
-				motionY = 0.30000001192092896D;
-			}
-		} else if(handleLavaMovement() && (!(this instanceof EntityPlayer) || !((EntityPlayer) this).capabilities.isFlying))
-		{
-			var9 = posY;
-			moveFlying(par1, par2, 0.02F);
-			moveEntity(motionX, motionY, motionZ);
-			motionX *= 0.5D;
-			motionY *= 0.5D;
-			motionZ *= 0.5D;
-			motionY -= 0.02D;
-			if(isCollidedHorizontally && isOffsetPositionInLiquid(motionX, motionY + 0.6000000238418579D - posY + var9, motionZ))
-			{
-				motionY = 0.30000001192092896D;
-			}
-		} else
-		{
-			float var3 = 0.91F;
-			if(onGround)
-			{
-				var3 = 0.54600006F;
-				int var4 = worldObj.getBlockId(MathHelper.floor_double(posX), MathHelper.floor_double(boundingBox.minY) - 1, MathHelper.floor_double(posZ));
-				if(var4 > 0)
-				{
-					var3 = Block.blocksList[var4].slipperiness * 0.91F;
-				}
-			}
-			float var8 = 0.16277136F / (var3 * var3 * var3);
-			float var5;
-			if(onGround)
-			{
-				if(isAIEnabled())
-				{
-					var5 = getAIMoveSpeed();
-				} else
-				{
-					var5 = landMovementFactor;
-				}
-				var5 *= var8;
-			} else
-			{
-				var5 = jumpMovementFactor;
-			}
-			moveFlying(par1, par2, var5);
-			var3 = 0.91F;
-			if(onGround)
-			{
-				var3 = 0.54600006F;
-				int var6 = worldObj.getBlockId(MathHelper.floor_double(posX), MathHelper.floor_double(boundingBox.minY) - 1, MathHelper.floor_double(posZ));
-				if(var6 > 0)
-				{
-					var3 = Block.blocksList[var6].slipperiness * 0.91F;
-				}
-			}
-			if(isOnLadder())
-			{
-				float var10 = 0.15F;
-				if(motionX < -var10)
-				{
-					motionX = -var10;
-				}
-				if(motionX > var10)
-				{
-					motionX = var10;
-				}
-				if(motionZ < -var10)
-				{
-					motionZ = -var10;
-				}
-				if(motionZ > var10)
-				{
-					motionZ = var10;
-				}
-				fallDistance = 0.0F;
-				if(motionY < -0.15D)
-				{
-					motionY = -0.15D;
-				}
-				boolean var7 = isSneaking() && this instanceof EntityPlayer;
-				if(var7 && motionY < 0.0D)
-				{
-					motionY = 0.0D;
-				}
-			}
-			moveEntity(motionX, motionY, motionZ);
-			if(isCollidedHorizontally && isOnLadder())
-			{
-				motionY = 0.2D;
-			}
-			if(worldObj.isRemote && (!worldObj.blockExists((int) posX, 0, (int) posZ) || !worldObj.getChunkFromBlockCoords((int) posX, (int) posZ).isChunkLoaded))
-			{
-				if(posY > 0.0D)
-				{
-					motionY = -0.1D;
-				} else
-				{
-					motionY = 0.0D;
-				}
-			} else
-			{
-				motionY -= 0.08D;
-			}
-			motionY *= 0.9800000190734863D;
-			motionX *= var3;
-			motionZ *= var3;
-		}
-		prevLimbYaw = limbYaw;
-		var9 = posX - prevPosX;
-		double var12 = posZ - prevPosZ;
-		float var11 = MathHelper.sqrt_double(var9 * var9 + var12 * var12) * 4.0F;
-		if(var11 > 1.0F)
-		{
-			var11 = 1.0F;
-		}
-		limbYaw += (var11 - limbYaw) * 0.4F;
-		limbSwing += limbYaw;
-	}
-	
-	protected void onChangedPotionEffect(PotionEffect par1PotionEffect)
-	{
-		potionsNeedUpdate = true;
-	}
-	
-	public void onDeath(DamageSource par1DamageSource)
-	{
-		Entity var2 = par1DamageSource.getEntity();
-		EntityLiving var3 = func_94060_bK();
-		if(scoreValue >= 0 && var3 != null)
-		{
-			var3.addToPlayerScore(this, scoreValue);
-		}
-		if(var2 != null)
-		{
-			var2.onKillEntity(this);
-		}
-		dead = true;
-		if(!worldObj.isRemote)
-		{
-			int var4 = 0;
-			if(var2 instanceof EntityPlayer)
-			{
-				var4 = EnchantmentHelper.getLootingModifier((EntityLiving) var2);
-			}
-			if(!isChild() && worldObj.getGameRules().getGameRuleBooleanValue("doMobLoot"))
-			{
-				dropFewItems(recentlyHit > 0, var4);
-				dropEquipment(recentlyHit > 0, var4);
-				if(recentlyHit > 0)
-				{
-					int var5 = rand.nextInt(200) - var4;
-					if(var5 < 5)
-					{
-						dropRareDrop(var5 <= 0 ? 1 : 0);
-					}
-				}
-			}
-		}
-		worldObj.setEntityState(this, (byte) 3);
-	}
-	
-	protected void onDeathUpdate()
-	{
-		++deathTime;
-		if(deathTime == 20)
-		{
-			int var1;
-			if(!worldObj.isRemote && (recentlyHit > 0 || isPlayer()) && !isChild() && worldObj.getGameRules().getGameRuleBooleanValue("doMobLoot"))
-			{
-				var1 = getExperiencePoints(attackingPlayer);
-				while(var1 > 0)
-				{
-					int var2 = EntityXPOrb.getXPSplit(var1);
-					var1 -= var2;
-					worldObj.spawnEntityInWorld(new EntityXPOrb(worldObj, posX, posY, posZ, var2));
-				}
-			}
-			setDead();
-			for(var1 = 0; var1 < 20; ++var1)
-			{
-				double var8 = rand.nextGaussian() * 0.02D;
-				double var4 = rand.nextGaussian() * 0.02D;
-				double var6 = rand.nextGaussian() * 0.02D;
-				worldObj.spawnParticle("explode", posX + rand.nextFloat() * width * 2.0F - width, posY + rand.nextFloat() * height, posZ + rand.nextFloat() * width * 2.0F - width, var8, var4, var6);
-			}
-		}
 	}
 	
 	@Override public void onEntityUpdate()
 	{
-		prevSwingProgress = swingProgress;
 		super.onEntityUpdate();
 		worldObj.theProfiler.startSection("mobBaseTick");
 		if(isEntityAlive() && rand.nextInt(1000) < livingSoundTime++)
@@ -1312,270 +552,80 @@
 			livingSoundTime = -getTalkInterval();
 			playLivingSound();
 		}
-		if(isEntityAlive() && isEntityInsideOpaqueBlock())
-		{
-			attackEntityFrom(DamageSource.inWall, 1);
-		}
-		if(isImmuneToFire() || worldObj.isRemote)
-		{
-			extinguish();
-		}
-		boolean var1 = this instanceof EntityPlayer && ((EntityPlayer) this).capabilities.disableDamage;
-		if(isEntityAlive() && isInsideOfMaterial(Material.water) && !canBreatheUnderwater() && !activePotionsMap.containsKey(Integer.valueOf(Potion.waterBreathing.id)) && !var1)
-		{
-			setAir(decreaseAirSupply(getAir()));
-			if(getAir() == -20)
-			{
-				setAir(0);
-				for(int var2 = 0; var2 < 8; ++var2)
-				{
-					float var3 = rand.nextFloat() - rand.nextFloat();
-					float var4 = rand.nextFloat() - rand.nextFloat();
-					float var5 = rand.nextFloat() - rand.nextFloat();
-					worldObj.spawnParticle("bubble", posX + var3, posY + var4, posZ + var5, motionX, motionY, motionZ);
-				}
-				attackEntityFrom(DamageSource.drown, 2);
-			}
-			extinguish();
-		} else
-		{
-			setAir(300);
-		}
-		prevCameraPitch = cameraPitch;
-		if(attackTime > 0)
-		{
-			--attackTime;
-		}
-		if(hurtTime > 0)
-		{
-			--hurtTime;
-		}
-		if(hurtResistantTime > 0)
-		{
-			--hurtResistantTime;
-		}
-		if(health <= 0)
-		{
-			onDeathUpdate();
-		}
-		if(recentlyHit > 0)
-		{
-			--recentlyHit;
-		} else
-		{
-			attackingPlayer = null;
-		}
-		if(lastAttackingEntity != null && !lastAttackingEntity.isEntityAlive())
-		{
-			lastAttackingEntity = null;
-		}
-		if(entityLivingToAttack != null)
-		{
-			if(!entityLivingToAttack.isEntityAlive())
-			{
-				setRevengeTarget((EntityLiving) null);
-			} else if(revengeTimer > 0)
-			{
-				--revengeTimer;
-			} else
-			{
-				setRevengeTarget((EntityLiving) null);
-			}
-		}
-		updatePotionEffects();
-		field_70763_ax = field_70764_aw;
-		prevRenderYawOffset = renderYawOffset;
-		prevRotationYawHead = rotationYawHead;
-		prevRotationYaw = rotationYaw;
-		prevRotationPitch = rotationPitch;
 		worldObj.theProfiler.endSection();
 	}
 	
-	protected void onFinishedPotionEffect(PotionEffect par1PotionEffect)
+	@Override public void onLivingUpdate()
 	{
-		potionsNeedUpdate = true;
-	}
-	
-	public void onItemPickup(Entity par1Entity, int par2)
-	{
-		if(!par1Entity.isDead && !worldObj.isRemote)
-		{
-			EntityTracker var3 = ((WorldServer) worldObj).getEntityTracker();
-			if(par1Entity instanceof EntityItem)
-			{
-				var3.sendPacketToAllPlayersTrackingEntity(par1Entity, new Packet22Collect(par1Entity.entityId, entityId));
-			}
-			if(par1Entity instanceof EntityArrow)
-			{
-				var3.sendPacketToAllPlayersTrackingEntity(par1Entity, new Packet22Collect(par1Entity.entityId, entityId));
-			}
-			if(par1Entity instanceof EntityXPOrb)
-			{
-				var3.sendPacketToAllPlayersTrackingEntity(par1Entity, new Packet22Collect(par1Entity.entityId, entityId));
-			}
-		}
-	}
-	
-	public void onLivingUpdate()
-	{
-		if(jumpTicks > 0)
-		{
-			--jumpTicks;
-		}
-		if(newPosRotationIncrements > 0)
-		{
-			double var1 = posX + (newPosX - posX) / newPosRotationIncrements;
-			double var3 = posY + (newPosY - posY) / newPosRotationIncrements;
-			double var5 = posZ + (newPosZ - posZ) / newPosRotationIncrements;
-			double var7 = MathHelper.wrapAngleTo180_double(newRotationYaw - rotationYaw);
-			rotationYaw = (float) (rotationYaw + var7 / newPosRotationIncrements);
-			rotationPitch = (float) (rotationPitch + (newRotationPitch - rotationPitch) / newPosRotationIncrements);
-			--newPosRotationIncrements;
-			setPosition(var1, var3, var5);
-			setRotation(rotationYaw, rotationPitch);
-		} else if(!isClientWorld())
-		{
-			motionX *= 0.98D;
-			motionY *= 0.98D;
-			motionZ *= 0.98D;
-		}
-		if(Math.abs(motionX) < 0.005D)
-		{
-			motionX = 0.0D;
-		}
-		if(Math.abs(motionY) < 0.005D)
-		{
-			motionY = 0.0D;
-		}
-		if(Math.abs(motionZ) < 0.005D)
-		{
-			motionZ = 0.0D;
-		}
-		worldObj.theProfiler.startSection("ai");
-		if(isMovementBlocked())
-		{
-			isJumping = false;
-			moveStrafing = 0.0F;
-			moveForward = 0.0F;
-			randomYawVelocity = 0.0F;
-		} else if(isClientWorld())
-		{
-			if(isAIEnabled())
-			{
-				worldObj.theProfiler.startSection("newAi");
-				updateAITasks();
-				worldObj.theProfiler.endSection();
-			} else
-			{
-				worldObj.theProfiler.startSection("oldAi");
-				updateEntityActionState();
-				worldObj.theProfiler.endSection();
-				rotationYawHead = rotationYaw;
-			}
-		}
-		worldObj.theProfiler.endSection();
-		worldObj.theProfiler.startSection("jump");
-		if(isJumping)
-		{
-			if(!isInWater() && !handleLavaMovement())
-			{
-				if(onGround && jumpTicks == 0)
-				{
-					jump();
-					jumpTicks = 10;
-				}
-			} else
-			{
-				motionY += 0.03999999910593033D;
-			}
-		} else
-		{
-			jumpTicks = 0;
-		}
-		worldObj.theProfiler.endSection();
-		worldObj.theProfiler.startSection("travel");
-		moveStrafing *= 0.98F;
-		moveForward *= 0.98F;
-		randomYawVelocity *= 0.9F;
-		float var11 = landMovementFactor;
-		landMovementFactor *= getSpeedModifier();
-		moveEntityWithHeading(moveStrafing, moveForward);
-		landMovementFactor = var11;
-		worldObj.theProfiler.endSection();
-		worldObj.theProfiler.startSection("push");
-		if(!worldObj.isRemote)
-		{
-			func_85033_bc();
-		}
-		worldObj.theProfiler.endSection();
+		super.onLivingUpdate();
 		worldObj.theProfiler.startSection("looting");
 		if(!worldObj.isRemote && canPickUpLoot() && !dead && worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"))
 		{
-			List var2 = worldObj.getEntitiesWithinAABB(EntityItem.class, boundingBox.expand(1.0D, 0.0D, 1.0D));
-			Iterator var12 = var2.iterator();
-			while(var12.hasNext())
+			List var1 = worldObj.getEntitiesWithinAABB(EntityItem.class, boundingBox.expand(1.0D, 0.0D, 1.0D));
+			Iterator var2 = var1.iterator();
+			while(var2.hasNext())
 			{
-				EntityItem var4 = (EntityItem) var12.next();
-				if(!var4.isDead && var4.getEntityItem() != null)
+				EntityItem var3 = (EntityItem) var2.next();
+				if(!var3.isDead && var3.getEntityItem() != null)
 				{
-					ItemStack var13 = var4.getEntityItem();
-					int var6 = getArmorPosition(var13);
-					if(var6 > -1)
+					ItemStack var4 = var3.getEntityItem();
+					int var5 = getArmorPosition(var4);
+					if(var5 > -1)
 					{
-						boolean var14 = true;
-						ItemStack var8 = getCurrentItemOrArmor(var6);
-						if(var8 != null)
+						boolean var6 = true;
+						ItemStack var7 = getCurrentItemOrArmor(var5);
+						if(var7 != null)
 						{
-							if(var6 == 0)
+							if(var5 == 0)
 							{
-								if(var13.getItem() instanceof ItemSword && !(var8.getItem() instanceof ItemSword))
+								if(var4.getItem() instanceof ItemSword && !(var7.getItem() instanceof ItemSword))
 								{
-									var14 = true;
-								} else if(var13.getItem() instanceof ItemSword && var8.getItem() instanceof ItemSword)
+									var6 = true;
+								} else if(var4.getItem() instanceof ItemSword && var7.getItem() instanceof ItemSword)
 								{
-									ItemSword var9 = (ItemSword) var13.getItem();
-									ItemSword var10 = (ItemSword) var8.getItem();
-									if(var9.func_82803_g() == var10.func_82803_g())
+									ItemSword var8 = (ItemSword) var4.getItem();
+									ItemSword var9 = (ItemSword) var7.getItem();
+									if(var8.func_82803_g() == var9.func_82803_g())
 									{
-										var14 = var13.getItemDamage() > var8.getItemDamage() || var13.hasTagCompound() && !var8.hasTagCompound();
+										var6 = var4.getItemDamage() > var7.getItemDamage() || var4.hasTagCompound() && !var7.hasTagCompound();
 									} else
 									{
-										var14 = var9.func_82803_g() > var10.func_82803_g();
+										var6 = var8.func_82803_g() > var9.func_82803_g();
 									}
 								} else
 								{
-									var14 = false;
+									var6 = false;
 								}
-							} else if(var13.getItem() instanceof ItemArmor && !(var8.getItem() instanceof ItemArmor))
+							} else if(var4.getItem() instanceof ItemArmor && !(var7.getItem() instanceof ItemArmor))
 							{
-								var14 = true;
-							} else if(var13.getItem() instanceof ItemArmor && var8.getItem() instanceof ItemArmor)
+								var6 = true;
+							} else if(var4.getItem() instanceof ItemArmor && var7.getItem() instanceof ItemArmor)
 							{
-								ItemArmor var15 = (ItemArmor) var13.getItem();
-								ItemArmor var16 = (ItemArmor) var8.getItem();
-								if(var15.damageReduceAmount == var16.damageReduceAmount)
+								ItemArmor var10 = (ItemArmor) var4.getItem();
+								ItemArmor var11 = (ItemArmor) var7.getItem();
+								if(var10.damageReduceAmount == var11.damageReduceAmount)
 								{
-									var14 = var13.getItemDamage() > var8.getItemDamage() || var13.hasTagCompound() && !var8.hasTagCompound();
+									var6 = var4.getItemDamage() > var7.getItemDamage() || var4.hasTagCompound() && !var7.hasTagCompound();
 								} else
 								{
-									var14 = var15.damageReduceAmount > var16.damageReduceAmount;
+									var6 = var10.damageReduceAmount > var11.damageReduceAmount;
 								}
 							} else
 							{
-								var14 = false;
+								var6 = false;
 							}
 						}
-						if(var14)
+						if(var6)
 						{
-							if(var8 != null && rand.nextFloat() - 0.1F < equipmentDropChances[var6])
+							if(var7 != null && rand.nextFloat() - 0.1F < equipmentDropChances[var5])
 							{
-								entityDropItem(var8, 0.0F);
+								entityDropItem(var7, 0.0F);
 							}
-							setCurrentItemOrArmor(var6, var13);
-							equipmentDropChances[var6] = 2.0F;
+							setCurrentItemOrArmor(var5, var4);
+							equipmentDropChances[var5] = 2.0F;
 							persistenceRequired = true;
-							onItemPickup(var4, 1);
-							var4.setDead();
+							onItemPickup(var3, 1);
+							var3.setDead();
 						}
 					}
 				}
@@ -1584,133 +634,13 @@
 		worldObj.theProfiler.endSection();
 	}
 	
-	protected void onNewPotionEffect(PotionEffect par1PotionEffect)
-	{
-		potionsNeedUpdate = true;
-	}
-	
 	@Override public void onUpdate()
 	{
 		super.onUpdate();
 		if(!worldObj.isRemote)
 		{
-			int var1;
-			for(var1 = 0; var1 < 5; ++var1)
-			{
-				ItemStack var2 = getCurrentItemOrArmor(var1);
-				if(!ItemStack.areItemStacksEqual(var2, previousEquipment[var1]))
-				{
-					((WorldServer) worldObj).getEntityTracker().sendPacketToAllPlayersTrackingEntity(this, new Packet5PlayerInventory(entityId, var1, var2));
-					previousEquipment[var1] = var2 == null ? null : var2.copy();
-				}
-			}
-			var1 = getArrowCountInEntity();
-			if(var1 > 0)
-			{
-				if(arrowHitTimer <= 0)
-				{
-					arrowHitTimer = 20 * (30 - var1);
-				}
-				--arrowHitTimer;
-				if(arrowHitTimer <= 0)
-				{
-					setArrowCountInEntity(var1 - 1);
-				}
-			}
+			func_110159_bB();
 		}
-		onLivingUpdate();
-		double var12 = posX - prevPosX;
-		double var3 = posZ - prevPosZ;
-		float var5 = (float) (var12 * var12 + var3 * var3);
-		float var6 = renderYawOffset;
-		float var7 = 0.0F;
-		field_70768_au = field_70766_av;
-		float var8 = 0.0F;
-		if(var5 > 0.0025000002F)
-		{
-			var8 = 1.0F;
-			var7 = (float) Math.sqrt(var5) * 3.0F;
-			var6 = (float) Math.atan2(var3, var12) * 180.0F / (float) Math.PI - 90.0F;
-		}
-		if(swingProgress > 0.0F)
-		{
-			var6 = rotationYaw;
-		}
-		if(!onGround)
-		{
-			var8 = 0.0F;
-		}
-		field_70766_av += (var8 - field_70766_av) * 0.3F;
-		worldObj.theProfiler.startSection("headTurn");
-		if(isAIEnabled())
-		{
-			bodyHelper.func_75664_a();
-		} else
-		{
-			float var9 = MathHelper.wrapAngleTo180_float(var6 - renderYawOffset);
-			renderYawOffset += var9 * 0.3F;
-			float var10 = MathHelper.wrapAngleTo180_float(rotationYaw - renderYawOffset);
-			boolean var11 = var10 < -90.0F || var10 >= 90.0F;
-			if(var10 < -75.0F)
-			{
-				var10 = -75.0F;
-			}
-			if(var10 >= 75.0F)
-			{
-				var10 = 75.0F;
-			}
-			renderYawOffset = rotationYaw - var10;
-			if(var10 * var10 > 2500.0F)
-			{
-				renderYawOffset += var10 * 0.2F;
-			}
-			if(var11)
-			{
-				var7 *= -1.0F;
-			}
-		}
-		worldObj.theProfiler.endSection();
-		worldObj.theProfiler.startSection("rangeChecks");
-		while(rotationYaw - prevRotationYaw < -180.0F)
-		{
-			prevRotationYaw -= 360.0F;
-		}
-		while(rotationYaw - prevRotationYaw >= 180.0F)
-		{
-			prevRotationYaw += 360.0F;
-		}
-		while(renderYawOffset - prevRenderYawOffset < -180.0F)
-		{
-			prevRenderYawOffset -= 360.0F;
-		}
-		while(renderYawOffset - prevRenderYawOffset >= 180.0F)
-		{
-			prevRenderYawOffset += 360.0F;
-		}
-		while(rotationPitch - prevRotationPitch < -180.0F)
-		{
-			prevRotationPitch -= 360.0F;
-		}
-		while(rotationPitch - prevRotationPitch >= 180.0F)
-		{
-			prevRotationPitch += 360.0F;
-		}
-		while(rotationYawHead - prevRotationYawHead < -180.0F)
-		{
-			prevRotationYawHead -= 360.0F;
-		}
-		while(rotationYawHead - prevRotationYawHead >= 180.0F)
-		{
-			prevRotationYawHead += 360.0F;
-		}
-		worldObj.theProfiler.endSection();
-		field_70764_aw += var7;
-	}
-	
-	@Override public void performHurtAnimation()
-	{
-		hurtTime = maxHurtTime = 10;
-		attackedAtYaw = 0.0F;
 	}
 	
 	public void playLivingSound()
@@ -1722,24 +652,9 @@
 		}
 	}
 	
-	public MovingObjectPosition rayTrace(double par1, float par3)
-	{
-		Vec3 var4 = getPosition(par3);
-		Vec3 var5 = getLook(par3);
-		Vec3 var6 = var4.addVector(var5.xCoord * par1, var5.yCoord * par1, var5.zCoord * par1);
-		return worldObj.rayTraceBlocks(var4, var6);
-	}
-	
 	@Override public void readEntityFromNBT(NBTTagCompound par1NBTTagCompound)
 	{
-		health = par1NBTTagCompound.getShort("Health");
-		if(!par1NBTTagCompound.hasKey("Health"))
-		{
-			health = getMaxHealth();
-		}
-		hurtTime = par1NBTTagCompound.getShort("HurtTime");
-		deathTime = par1NBTTagCompound.getShort("DeathTime");
-		attackTime = par1NBTTagCompound.getShort("AttackTime");
+		super.readEntityFromNBT(par1NBTTagCompound);
 		setCanPickUpLoot(par1NBTTagCompound.getBoolean("CanPickUpLoot"));
 		persistenceRequired = par1NBTTagCompound.getBoolean("PersistenceRequired");
 		if(par1NBTTagCompound.hasKey("CustomName") && par1NBTTagCompound.getString("CustomName").length() > 0)
@@ -1757,16 +672,6 @@
 				equipment[var3] = ItemStack.loadItemStackFromNBT((NBTTagCompound) var2.tagAt(var3));
 			}
 		}
-		if(par1NBTTagCompound.hasKey("ActiveEffects"))
-		{
-			var2 = par1NBTTagCompound.getTagList("ActiveEffects");
-			for(var3 = 0; var3 < var2.tagCount(); ++var3)
-			{
-				NBTTagCompound var4 = (NBTTagCompound) var2.tagAt(var3);
-				PotionEffect var5 = PotionEffect.readCustomPotionEffectFromNBT(var4);
-				activePotionsMap.put(Integer.valueOf(var5.getPotionID()), var5);
-			}
-		}
 		if(par1NBTTagCompound.hasKey("DropChances"))
 		{
 			var2 = par1NBTTagCompound.getTagList("DropChances");
@@ -1775,50 +680,20 @@
 				equipmentDropChances[var3] = ((NBTTagFloat) var2.tagAt(var3)).data;
 			}
 		}
-	}
-	
-	public void removePotionEffect(int par1)
-	{
-		PotionEffect var2 = (PotionEffect) activePotionsMap.remove(Integer.valueOf(par1));
-		if(var2 != null)
+		field_110169_bv = par1NBTTagCompound.getBoolean("Leashed");
+		if(field_110169_bv && par1NBTTagCompound.hasKey("Leash"))
 		{
-			onFinishedPotionEffect(var2);
+			field_110170_bx = par1NBTTagCompound.getCompoundTag("Leash");
 		}
 	}
 	
-	public void removePotionEffectClient(int par1)
+	@Override public void setAIMoveSpeed(float par1)
 	{
-		activePotionsMap.remove(Integer.valueOf(par1));
-	}
-	
-	public void renderBrokenItemStack(ItemStack par1ItemStack)
-	{
-		playSound("random.break", 0.8F, 0.8F + worldObj.rand.nextFloat() * 0.4F);
-		for(int var2 = 0; var2 < 5; ++var2)
-		{
-			Vec3 var3 = worldObj.getWorldVec3Pool().getVecFromPool((rand.nextFloat() - 0.5D) * 0.1D, Math.random() * 0.1D + 0.1D, 0.0D);
-			var3.rotateAroundX(-rotationPitch * (float) Math.PI / 180.0F);
-			var3.rotateAroundY(-rotationYaw * (float) Math.PI / 180.0F);
-			Vec3 var4 = worldObj.getWorldVec3Pool().getVecFromPool((rand.nextFloat() - 0.5D) * 0.3D, -rand.nextFloat() * 0.6D - 0.3D, 0.6D);
-			var4.rotateAroundX(-rotationPitch * (float) Math.PI / 180.0F);
-			var4.rotateAroundY(-rotationYaw * (float) Math.PI / 180.0F);
-			var4 = var4.addVector(posX, posY + getEyeHeight(), posZ);
-			worldObj.spawnParticle("iconcrack_" + par1ItemStack.getItem().itemID, var4.xCoord, var4.yCoord, var4.zCoord, var3.xCoord, var3.yCoord + 0.05D, var3.zCoord);
-		}
-	}
-	
-	public void setAIMoveSpeed(float par1)
-	{
-		AIMoveSpeed = par1;
+		super.setAIMoveSpeed(par1);
 		setMoveForward(par1);
 	}
 	
-	public final void setArrowCountInEntity(int par1)
-	{
-		dataWatcher.updateObject(10, Byte.valueOf((byte) par1));
-	}
-	
-	public void setAttackTarget(EntityLiving par1EntityLiving)
+	public void setAttackTarget(EntityLivingBase par1EntityLiving)
 	{
 		attackTarget = par1EntityLiving;
 	}
@@ -1833,64 +708,9 @@
 		equipment[par1] = par2ItemStack;
 	}
 	
-	public void setEntityHealth(int par1)
-	{
-		health = par1;
-		if(par1 > getMaxHealth())
-		{
-			par1 = getMaxHealth();
-		}
-	}
-	
-	public void setHomeArea(int par1, int par2, int par3, int par4)
-	{
-		homePosition.set(par1, par2, par3);
-		maximumHomeDistance = par4;
-	}
-	
-	public void setJumping(boolean par1)
-	{
-		isJumping = par1;
-	}
-	
-	public void setLastAttackingEntity(Entity par1Entity)
-	{
-		if(par1Entity instanceof EntityLiving)
-		{
-			lastAttackingEntity = (EntityLiving) par1Entity;
-		}
-	}
-	
 	public void setMoveForward(float par1)
 	{
 		moveForward = par1;
-	}
-	
-	@Override public void setPositionAndRotation2(double par1, double par3, double par5, float par7, float par8, int par9)
-	{
-		yOffset = 0.0F;
-		newPosX = par1;
-		newPosY = par3;
-		newPosZ = par5;
-		newRotationYaw = par7;
-		newRotationPitch = par8;
-		newPosRotationIncrements = par9;
-	}
-	
-	public void setPositionAndUpdate(double par1, double par3, double par5)
-	{
-		setLocationAndAngles(par1, par3, par5, rotationYaw, rotationPitch);
-	}
-	
-	public void setRevengeTarget(EntityLiving par1EntityLiving)
-	{
-		entityLivingToAttack = par1EntityLiving;
-		revengeTimer = entityLivingToAttack != null ? 100 : 0;
-	}
-	
-	@Override public void setRotationYawHead(float par1)
-	{
-		rotationYawHead = par1;
 	}
 	
 	public void spawnExplosionParticle()
@@ -1905,20 +725,7 @@
 		}
 	}
 	
-	public void swingItem()
-	{
-		if(!isSwingInProgress || swingProgressInt >= getArmSwingAnimationEnd() / 2 || swingProgressInt < 0)
-		{
-			swingProgressInt = -1;
-			isSwingInProgress = true;
-			if(worldObj instanceof WorldServer)
-			{
-				((WorldServer) worldObj).getEntityTracker().sendPacketToAllPlayersTrackingEntity(this, new Packet18Animation(this, 1));
-			}
-		}
-	}
-	
-	protected void updateAITasks()
+	@Override protected void updateAITasks()
 	{
 		++entityAge;
 		worldObj.theProfiler.startSection("checkDespawn");
@@ -1950,34 +757,12 @@
 		worldObj.theProfiler.endSection();
 	}
 	
-	protected void updateAITick()
+	@Override protected void updateEntityActionState()
 	{
-	}
-	
-	protected void updateArmSwingProgress()
-	{
-		int var1 = getArmSwingAnimationEnd();
-		if(isSwingInProgress)
-		{
-			++swingProgressInt;
-			if(swingProgressInt >= var1)
-			{
-				swingProgressInt = 0;
-				isSwingInProgress = false;
-			}
-		} else
-		{
-			swingProgressInt = 0;
-		}
-		swingProgress = (float) swingProgressInt / (float) var1;
-	}
-	
-	protected void updateEntityActionState()
-	{
-		++entityAge;
-		despawnEntity();
+		super.updateEntityActionState();
 		moveStrafing = 0.0F;
 		moveForward = 0.0F;
+		despawnEntity();
 		float var1 = 8.0F;
 		if(rand.nextFloat() < 0.02F)
 		{
@@ -2015,121 +800,6 @@
 		}
 	}
 	
-	@Override protected void updateFallState(double par1, boolean par3)
-	{
-		if(!isInWater())
-		{
-			handleWaterMovement();
-		}
-		if(par3 && fallDistance > 0.0F)
-		{
-			int var4 = MathHelper.floor_double(posX);
-			int var5 = MathHelper.floor_double(posY - 0.20000000298023224D - yOffset);
-			int var6 = MathHelper.floor_double(posZ);
-			int var7 = worldObj.getBlockId(var4, var5, var6);
-			if(var7 == 0)
-			{
-				int var8 = worldObj.blockGetRenderType(var4, var5 - 1, var6);
-				if(var8 == 11 || var8 == 32 || var8 == 21)
-				{
-					var7 = worldObj.getBlockId(var4, var5 - 1, var6);
-				}
-			}
-			if(var7 > 0)
-			{
-				Block.blocksList[var7].onFallenUpon(worldObj, var4, var5, var6, this, fallDistance);
-			}
-		}
-		super.updateFallState(par1, par3);
-	}
-	
-	protected void updatePotionEffects()
-	{
-		Iterator var1 = activePotionsMap.keySet().iterator();
-		while(var1.hasNext())
-		{
-			Integer var2 = (Integer) var1.next();
-			PotionEffect var3 = (PotionEffect) activePotionsMap.get(var2);
-			try
-			{
-				if(!var3.onUpdate(this))
-				{
-					if(!worldObj.isRemote)
-					{
-						var1.remove();
-						onFinishedPotionEffect(var3);
-					}
-				} else if(var3.getDuration() % 600 == 0)
-				{
-					onChangedPotionEffect(var3);
-				}
-			} catch(Throwable var11)
-			{
-				CrashReport var5 = CrashReport.makeCrashReport(var11, "Ticking mob effect instance");
-				CrashReportCategory var6 = var5.makeCategory("Mob effect being ticked");
-				var6.addCrashSectionCallable("Effect Name", new CallableEffectName(this, var3));
-				var6.addCrashSectionCallable("Effect ID", new CallableEffectID(this, var3));
-				var6.addCrashSectionCallable("Effect Duration", new CallableEffectDuration(this, var3));
-				var6.addCrashSectionCallable("Effect Amplifier", new CallableEffectAmplifier(this, var3));
-				var6.addCrashSectionCallable("Effect is Splash", new CallableEffectIsSplash(this, var3));
-				var6.addCrashSectionCallable("Effect is Ambient", new CallableEffectIsAmbient(this, var3));
-				throw new ReportedException(var5);
-			}
-		}
-		int var12;
-		if(potionsNeedUpdate)
-		{
-			if(!worldObj.isRemote)
-			{
-				if(activePotionsMap.isEmpty())
-				{
-					dataWatcher.updateObject(9, Byte.valueOf((byte) 0));
-					dataWatcher.updateObject(8, Integer.valueOf(0));
-					setInvisible(false);
-				} else
-				{
-					var12 = PotionHelper.calcPotionLiquidColor(activePotionsMap.values());
-					dataWatcher.updateObject(9, Byte.valueOf((byte) (PotionHelper.func_82817_b(activePotionsMap.values()) ? 1 : 0)));
-					dataWatcher.updateObject(8, Integer.valueOf(var12));
-					setInvisible(this.isPotionActive(Potion.invisibility.id));
-				}
-			}
-			potionsNeedUpdate = false;
-		}
-		var12 = dataWatcher.getWatchableObjectInt(8);
-		boolean var13 = dataWatcher.getWatchableObjectByte(9) > 0;
-		if(var12 > 0)
-		{
-			boolean var4 = false;
-			if(!isInvisible())
-			{
-				var4 = rand.nextBoolean();
-			} else
-			{
-				var4 = rand.nextInt(15) == 0;
-			}
-			if(var13)
-			{
-				var4 &= rand.nextInt(5) == 0;
-			}
-			if(var4 && var12 > 0)
-			{
-				double var14 = (var12 >> 16 & 255) / 255.0D;
-				double var7 = (var12 >> 8 & 255) / 255.0D;
-				double var9 = (var12 >> 0 & 255) / 255.0D;
-				worldObj.spawnParticle(var13 ? "mobSpellAmbient" : "mobSpell", posX + (rand.nextDouble() - 0.5D) * width, posY + rand.nextDouble() * height - yOffset, posZ + (rand.nextDouble() - 0.5D) * width, var14, var7, var9);
-			}
-		}
-	}
-	
-	@Override public void updateRidden()
-	{
-		super.updateRidden();
-		field_70768_au = field_70766_av;
-		field_70766_av = 0.0F;
-		fallDistance = 0.0F;
-	}
-	
 	private float updateRotation(float par1, float par2, float par3)
 	{
 		float var4 = MathHelper.wrapAngleTo180_float(par2 - par1);
@@ -2146,20 +816,14 @@
 	
 	@Override public void writeEntityToNBT(NBTTagCompound par1NBTTagCompound)
 	{
-		if(health < -32768)
-		{
-			health = -32768;
-		}
-		par1NBTTagCompound.setShort("Health", (short) health);
-		par1NBTTagCompound.setShort("HurtTime", (short) hurtTime);
-		par1NBTTagCompound.setShort("DeathTime", (short) deathTime);
-		par1NBTTagCompound.setShort("AttackTime", (short) attackTime);
+		super.writeEntityToNBT(par1NBTTagCompound);
 		par1NBTTagCompound.setBoolean("CanPickUpLoot", canPickUpLoot());
 		par1NBTTagCompound.setBoolean("PersistenceRequired", persistenceRequired);
 		NBTTagList var2 = new NBTTagList();
+		NBTTagCompound var4;
 		for(ItemStack element : equipment)
 		{
-			NBTTagCompound var4 = new NBTTagCompound();
+			var4 = new NBTTagCompound();
 			if(element != null)
 			{
 				element.writeToNBT(var4);
@@ -2167,26 +831,31 @@
 			var2.appendTag(var4);
 		}
 		par1NBTTagCompound.setTag("Equipment", var2);
-		NBTTagList var6;
-		if(!activePotionsMap.isEmpty())
+		NBTTagList var6 = new NBTTagList();
+		for(int var7 = 0; var7 < equipmentDropChances.length; ++var7)
 		{
-			var6 = new NBTTagList();
-			Iterator var7 = activePotionsMap.values().iterator();
-			while(var7.hasNext())
-			{
-				PotionEffect var5 = (PotionEffect) var7.next();
-				var6.appendTag(var5.writeCustomPotionEffectToNBT(new NBTTagCompound()));
-			}
-			par1NBTTagCompound.setTag("ActiveEffects", var6);
-		}
-		var6 = new NBTTagList();
-		for(int var8 = 0; var8 < equipmentDropChances.length; ++var8)
-		{
-			var6.appendTag(new NBTTagFloat(var8 + "", equipmentDropChances[var8]));
+			var6.appendTag(new NBTTagFloat(var7 + "", equipmentDropChances[var7]));
 		}
 		par1NBTTagCompound.setTag("DropChances", var6);
 		par1NBTTagCompound.setString("CustomName", func_94057_bL());
 		par1NBTTagCompound.setBoolean("CustomNameVisible", func_94062_bN());
+		par1NBTTagCompound.setBoolean("Leashed", field_110169_bv);
+		if(field_110168_bw != null)
+		{
+			var4 = new NBTTagCompound("Leash");
+			if(field_110168_bw instanceof EntityLivingBase)
+			{
+				var4.setLong("UUIDMost", field_110168_bw.func_110124_au().getMostSignificantBits());
+				var4.setLong("UUIDLeast", field_110168_bw.func_110124_au().getLeastSignificantBits());
+			} else if(field_110168_bw instanceof EntityHanging)
+			{
+				EntityHanging var5 = (EntityHanging) field_110168_bw;
+				var4.setInteger("X", var5.xPosition);
+				var4.setInteger("Y", var5.yPosition);
+				var4.setInteger("Z", var5.zPosition);
+			}
+			par1NBTTagCompound.setTag("Leash", var4);
+		}
 	}
 	
 	public static Item getArmorItemForSlot(int par0, int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityLivingBase.java b/RMCClient/minecraft/net/minecraft/src/EntityLivingBase.java
new file mode 100644
index 0000000..01807ab
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityLivingBase.java
@@ -0,0 +1,1691 @@
+package net.minecraft.src;
+
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Random;
+import java.util.UUID;
+
+public abstract class EntityLivingBase extends Entity
+{
+	private static final UUID field_110156_b = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
+	private static final AttributeModifier field_110157_c = new AttributeModifier(field_110156_b, "Sprinting speed boost", 0.30000001192092896D, 2).func_111168_a(false);
+	private BaseAttributeMap field_110155_d;
+	private final CombatTracker field_94063_bt = new CombatTracker(this);
+	private final HashMap activePotionsMap = new HashMap();
+	private final ItemStack[] previousEquipment = new ItemStack[5];
+	public boolean isSwingInProgress;
+	public int field_110158_av;
+	public int arrowHitTimer;
+	public float prevHealth;
+	public int hurtTime;
+	public int maxHurtTime;
+	public float attackedAtYaw;
+	public int deathTime;
+	public int attackTime;
+	public float prevSwingProgress;
+	public float swingProgress;
+	public float prevLimbYaw;
+	public float limbYaw;
+	public float limbSwing;
+	public int maxHurtResistantTime = 20;
+	public float prevCameraPitch;
+	public float cameraPitch;
+	public float field_70769_ao;
+	public float field_70770_ap;
+	public float renderYawOffset;
+	public float prevRenderYawOffset;
+	public float rotationYawHead;
+	public float prevRotationYawHead;
+	public float jumpMovementFactor = 0.02F;
+	protected EntityPlayer attackingPlayer;
+	protected int recentlyHit;
+	protected boolean dead;
+	protected int entityAge;
+	protected float field_70768_au;
+	protected float field_110154_aX;
+	protected float field_70764_aw;
+	protected float field_70763_ax;
+	protected float field_70741_aB;
+	protected int scoreValue;
+	protected float field_110153_bc;
+	protected boolean isJumping;
+	public float moveStrafing;
+	public float moveForward;
+	protected float randomYawVelocity;
+	protected int newPosRotationIncrements;
+	protected double newPosX;
+	protected double newPosY;
+	protected double field_110152_bk;
+	protected double newRotationYaw;
+	protected double newRotationPitch;
+	private boolean potionsNeedUpdate = true;
+	private EntityLivingBase entityLivingToAttack;
+	private int revengeTimer;
+	private EntityLivingBase field_110150_bn;
+	private int field_142016_bo;
+	private float landMovementFactor;
+	private int jumpTicks;
+	private float field_110151_bq;
+	
+	public EntityLivingBase(World p_i1594_1_)
+	{
+		super(p_i1594_1_);
+		func_110147_ax();
+		setEntityHealth(func_110138_aP());
+		preventEntitySpawning = true;
+		field_70770_ap = (float) (Math.random() + 1.0D) * 0.01F;
+		setPosition(posX, posY, posZ);
+		field_70769_ao = (float) Math.random() * 12398.0F;
+		rotationYaw = (float) (Math.random() * Math.PI * 2.0D);
+		rotationYawHead = rotationYaw;
+		stepHeight = 0.5F;
+	}
+	
+	public void addPotionEffect(PotionEffect par1PotionEffect)
+	{
+		if(isPotionApplicable(par1PotionEffect))
+		{
+			if(activePotionsMap.containsKey(Integer.valueOf(par1PotionEffect.getPotionID())))
+			{
+				((PotionEffect) activePotionsMap.get(Integer.valueOf(par1PotionEffect.getPotionID()))).combine(par1PotionEffect);
+				onChangedPotionEffect((PotionEffect) activePotionsMap.get(Integer.valueOf(par1PotionEffect.getPotionID())), true);
+			} else
+			{
+				activePotionsMap.put(Integer.valueOf(par1PotionEffect.getPotionID()), par1PotionEffect);
+				onNewPotionEffect(par1PotionEffect);
+			}
+		}
+	}
+	
+	protected float applyArmorCalculations(DamageSource par1DamageSource, float par2)
+	{
+		if(!par1DamageSource.isUnblockable())
+		{
+			int var3 = 25 - getTotalArmorValue();
+			float var4 = par2 * var3;
+			damageArmor(par2);
+			par2 = var4 / 25.0F;
+		}
+		return par2;
+	}
+	
+	protected float applyPotionDamageCalculations(DamageSource par1DamageSource, float par2)
+	{
+		if(this instanceof EntityZombie)
+		{
+			par2 = par2;
+		}
+		int var3;
+		int var4;
+		float var5;
+		if(this.isPotionActive(Potion.resistance) && par1DamageSource != DamageSource.outOfWorld)
+		{
+			var3 = (getActivePotionEffect(Potion.resistance).getAmplifier() + 1) * 5;
+			var4 = 25 - var3;
+			var5 = par2 * var4;
+			par2 = var5 / 25.0F;
+		}
+		if(par2 <= 0.0F) return 0.0F;
+		else
+		{
+			var3 = EnchantmentHelper.getEnchantmentModifierDamage(getLastActiveItems(), par1DamageSource);
+			if(var3 > 20)
+			{
+				var3 = 20;
+			}
+			if(var3 > 0 && var3 <= 20)
+			{
+				var4 = 25 - var3;
+				var5 = par2 * var4;
+				par2 = var5 / 25.0F;
+			}
+			return par2;
+		}
+	}
+	
+	public boolean attackEntityAsMob(Entity par1Entity)
+	{
+		func_130011_c(par1Entity);
+		return false;
+	}
+	
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
+	{
+		if(isEntityInvulnerable()) return false;
+		else if(worldObj.isRemote) return false;
+		else
+		{
+			entityAge = 0;
+			if(func_110143_aJ() <= 0.0F) return false;
+			else if(par1DamageSource.isFireDamage() && this.isPotionActive(Potion.fireResistance)) return false;
+			else
+			{
+				if((par1DamageSource == DamageSource.anvil || par1DamageSource == DamageSource.fallingBlock) && getCurrentItemOrArmor(4) != null)
+				{
+					getCurrentItemOrArmor(4).damageItem((int) (par2 * 4.0F + rand.nextFloat() * par2 * 2.0F), this);
+					par2 *= 0.75F;
+				}
+				limbYaw = 1.5F;
+				boolean var3 = true;
+				if(hurtResistantTime > maxHurtResistantTime / 2.0F)
+				{
+					if(par2 <= field_110153_bc) return false;
+					damageEntity(par1DamageSource, par2 - field_110153_bc);
+					field_110153_bc = par2;
+					var3 = false;
+				} else
+				{
+					field_110153_bc = par2;
+					prevHealth = func_110143_aJ();
+					hurtResistantTime = maxHurtResistantTime;
+					damageEntity(par1DamageSource, par2);
+					hurtTime = maxHurtTime = 10;
+				}
+				attackedAtYaw = 0.0F;
+				Entity var4 = par1DamageSource.getEntity();
+				if(var4 != null)
+				{
+					if(var4 instanceof EntityLivingBase)
+					{
+						setRevengeTarget((EntityLivingBase) var4);
+					}
+					if(var4 instanceof EntityPlayer)
+					{
+						recentlyHit = 100;
+						attackingPlayer = (EntityPlayer) var4;
+					} else if(var4 instanceof EntityWolf)
+					{
+						EntityWolf var5 = (EntityWolf) var4;
+						if(var5.isTamed())
+						{
+							recentlyHit = 100;
+							attackingPlayer = null;
+						}
+					}
+				}
+				if(var3)
+				{
+					worldObj.setEntityState(this, (byte) 2);
+					if(par1DamageSource != DamageSource.drown)
+					{
+						setBeenAttacked();
+					}
+					if(var4 != null)
+					{
+						double var9 = var4.posX - posX;
+						double var7;
+						for(var7 = var4.posZ - posZ; var9 * var9 + var7 * var7 < 1.0E-4D; var7 = (Math.random() - Math.random()) * 0.01D)
+						{
+							var9 = (Math.random() - Math.random()) * 0.01D;
+						}
+						attackedAtYaw = (float) (Math.atan2(var7, var9) * 180.0D / Math.PI) - rotationYaw;
+						knockBack(var4, par2, var9, var7);
+					} else
+					{
+						attackedAtYaw = (int) (Math.random() * 2.0D) * 180;
+					}
+				}
+				if(func_110143_aJ() <= 0.0F)
+				{
+					if(var3)
+					{
+						playSound(getDeathSound(), getSoundVolume(), getSoundPitch());
+					}
+					onDeath(par1DamageSource);
+				} else if(var3)
+				{
+					playSound(getHurtSound(), getSoundVolume(), getSoundPitch());
+				}
+				return true;
+			}
+		}
+	}
+	
+	@Override public boolean canBeCollidedWith()
+	{
+		return !isDead;
+	}
+	
+	@Override public boolean canBePushed()
+	{
+		return !isDead;
+	}
+	
+	public boolean canBreatheUnderwater()
+	{
+		return false;
+	}
+	
+	public boolean canEntityBeSeen(Entity par1Entity)
+	{
+		return worldObj.rayTraceBlocks(worldObj.getWorldVec3Pool().getVecFromPool(posX, posY + getEyeHeight(), posZ), worldObj.getWorldVec3Pool().getVecFromPool(par1Entity.posX, par1Entity.posY + par1Entity.getEyeHeight(), par1Entity.posZ)) == null;
+	}
+	
+	public void clearActivePotions()
+	{
+		Iterator var1 = activePotionsMap.keySet().iterator();
+		while(var1.hasNext())
+		{
+			Integer var2 = (Integer) var1.next();
+			PotionEffect var3 = (PotionEffect) activePotionsMap.get(var2);
+			if(!worldObj.isRemote)
+			{
+				var1.remove();
+				onFinishedPotionEffect(var3);
+			}
+		}
+	}
+	
+	protected void collideWithEntity(Entity par1Entity)
+	{
+		par1Entity.applyEntityCollision(this);
+	}
+	
+	protected void damageArmor(float par1)
+	{
+	}
+	
+	protected void damageEntity(DamageSource par1DamageSource, float par2)
+	{
+		if(!isEntityInvulnerable())
+		{
+			par2 = applyArmorCalculations(par1DamageSource, par2);
+			par2 = applyPotionDamageCalculations(par1DamageSource, par2);
+			float var3 = par2;
+			par2 = Math.max(par2 - func_110139_bj(), 0.0F);
+			func_110149_m(func_110139_bj() - (var3 - par2));
+			if(par2 != 0.0F)
+			{
+				float var4 = func_110143_aJ();
+				setEntityHealth(var4 - par2);
+				func_110142_aN().func_94547_a(par1DamageSource, var4, par2);
+				func_110149_m(func_110139_bj() - par2);
+			}
+		}
+	}
+	
+	protected int decreaseAirSupply(int par1)
+	{
+		int var2 = EnchantmentHelper.getRespiration(this);
+		return var2 > 0 && rand.nextInt(var2 + 1) > 0 ? par1 : par1 - 1;
+	}
+	
+	protected void dropEquipment(boolean par1, int par2)
+	{
+	}
+	
+	protected void dropFewItems(boolean par1, int par2)
+	{
+	}
+	
+	protected void dropRareDrop(int par1)
+	{
+	}
+	
+	@Override protected void entityInit()
+	{
+		dataWatcher.addObject(7, Integer.valueOf(0));
+		dataWatcher.addObject(8, Byte.valueOf((byte) 0));
+		dataWatcher.addObject(9, Byte.valueOf((byte) 0));
+		dataWatcher.addObject(6, Float.valueOf(1.0F));
+	}
+	
+	@Override protected void fall(float par1)
+	{
+		super.fall(par1);
+		PotionEffect var2 = getActivePotionEffect(Potion.jump);
+		float var3 = var2 != null ? (float) (var2.getAmplifier() + 1) : 0.0F;
+		int var4 = MathHelper.ceiling_float_int(par1 - 3.0F - var3);
+		if(var4 > 0)
+		{
+			if(var4 > 4)
+			{
+				playSound("damage.fallbig", 1.0F, 1.0F);
+			} else
+			{
+				playSound("damage.fallsmall", 1.0F, 1.0F);
+			}
+			attackEntityFrom(DamageSource.fall, var4);
+			int var5 = worldObj.getBlockId(MathHelper.floor_double(posX), MathHelper.floor_double(posY - 0.20000000298023224D - yOffset), MathHelper.floor_double(posZ));
+			if(var5 > 0)
+			{
+				StepSound var6 = Block.blocksList[var5].stepSound;
+				playSound(var6.getStepSound(), var6.getVolume() * 0.5F, var6.getPitch() * 0.75F);
+			}
+		}
+	}
+	
+	public final float func_110138_aP()
+	{
+		return (float) func_110148_a(SharedMonsterAttributes.field_111267_a).func_111126_e();
+	}
+	
+	public float func_110139_bj()
+	{
+		return field_110151_bq;
+	}
+	
+	public BaseAttributeMap func_110140_aT()
+	{
+		if(field_110155_d == null)
+		{
+			field_110155_d = new ServersideAttributeMap();
+		}
+		return field_110155_d;
+	}
+	
+	public CombatTracker func_110142_aN()
+	{
+		return field_94063_bt;
+	}
+	
+	public final float func_110143_aJ()
+	{
+		return dataWatcher.func_111145_d(6);
+	}
+	
+	public EntityLivingBase func_110144_aD()
+	{
+		return field_110150_bn;
+	}
+	
+	public void func_110145_l(Entity p_110145_1_)
+	{
+		double var3 = p_110145_1_.posX;
+		double var5 = p_110145_1_.boundingBox.minY + p_110145_1_.height;
+		double var7 = p_110145_1_.posZ;
+		for(double var9 = -1.5D; var9 < 2.0D; ++var9)
+		{
+			for(double var11 = -1.5D; var11 < 2.0D; ++var11)
+			{
+				if(var9 != 0.0D || var11 != 0.0D)
+				{
+					int var13 = (int) (posX + var9);
+					int var14 = (int) (posZ + var11);
+					AxisAlignedBB var2 = boundingBox.getOffsetBoundingBox(var9, 1.0D, var11);
+					if(worldObj.getCollidingBlockBounds(var2).isEmpty())
+					{
+						if(worldObj.doesBlockHaveSolidTopSurface(var13, (int) posY, var14))
+						{
+							setPositionAndUpdate(posX + var9, posY + 1.0D, posZ + var11);
+							return;
+						}
+						if(worldObj.doesBlockHaveSolidTopSurface(var13, (int) posY - 1, var14) || worldObj.getBlockMaterial(var13, (int) posY - 1, var14) == Material.water)
+						{
+							var3 = posX + var9;
+							var5 = posY + 1.0D;
+							var7 = posZ + var11;
+						}
+					}
+				}
+			}
+		}
+		setPositionAndUpdate(var3, var5, var7);
+	}
+	
+	protected float func_110146_f(float p_110146_1_, float p_110146_2_)
+	{
+		float var3 = MathHelper.wrapAngleTo180_float(p_110146_1_ - renderYawOffset);
+		renderYawOffset += var3 * 0.3F;
+		float var4 = MathHelper.wrapAngleTo180_float(rotationYaw - renderYawOffset);
+		boolean var5 = var4 < -90.0F || var4 >= 90.0F;
+		if(var4 < -75.0F)
+		{
+			var4 = -75.0F;
+		}
+		if(var4 >= 75.0F)
+		{
+			var4 = 75.0F;
+		}
+		renderYawOffset = rotationYaw - var4;
+		if(var4 * var4 > 2500.0F)
+		{
+			renderYawOffset += var4 * 0.2F;
+		}
+		if(var5)
+		{
+			p_110146_2_ *= -1.0F;
+		}
+		return p_110146_2_;
+	}
+	
+	protected void func_110147_ax()
+	{
+		func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111267_a);
+		func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111266_c);
+		func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111263_d);
+		if(!isAIEnabled())
+		{
+			func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.10000000149011612D);
+		}
+	}
+	
+	public AttributeInstance func_110148_a(Attribute p_110148_1_)
+	{
+		return func_110140_aT().func_111151_a(p_110148_1_);
+	}
+	
+	public void func_110149_m(float p_110149_1_)
+	{
+		if(p_110149_1_ < 0.0F)
+		{
+			p_110149_1_ = 0.0F;
+		}
+		field_110151_bq = p_110149_1_;
+	}
+	
+	public void func_130011_c(Entity p_130011_1_)
+	{
+		if(p_130011_1_ instanceof EntityLivingBase)
+		{
+			field_110150_bn = (EntityLivingBase) p_130011_1_;
+		} else
+		{
+			field_110150_bn = null;
+		}
+		field_142016_bo = ticksExisted;
+	}
+	
+	public boolean func_142012_a(Team p_142012_1_)
+	{
+		return getTeam() != null ? getTeam().func_142054_a(p_142012_1_) : false;
+	}
+	
+	public int func_142013_aG()
+	{
+		return field_142016_bo;
+	}
+	
+	public boolean func_142014_c(EntityLivingBase p_142014_1_)
+	{
+		return func_142012_a(p_142014_1_.getTeam());
+	}
+	
+	public int func_142015_aE()
+	{
+		return revengeTimer;
+	}
+	
+	protected void func_85033_bc()
+	{
+		List var1 = worldObj.getEntitiesWithinAABBExcludingEntity(this, boundingBox.expand(0.20000000298023224D, 0.0D, 0.20000000298023224D));
+		if(var1 != null && !var1.isEmpty())
+		{
+			for(int var2 = 0; var2 < var1.size(); ++var2)
+			{
+				Entity var3 = (Entity) var1.get(var2);
+				if(var3.canBePushed())
+				{
+					collideWithEntity(var3);
+				}
+			}
+		}
+	}
+	
+	public boolean func_94059_bO()
+	{
+		return false;
+	}
+	
+	public EntityLivingBase func_94060_bK()
+	{
+		return field_94063_bt.func_94550_c() != null ? field_94063_bt.func_94550_c() : attackingPlayer != null ? attackingPlayer : entityLivingToAttack != null ? entityLivingToAttack : null;
+	}
+	
+	public PotionEffect getActivePotionEffect(Potion par1Potion)
+	{
+		return (PotionEffect) activePotionsMap.get(Integer.valueOf(par1Potion.id));
+	}
+	
+	public Collection getActivePotionEffects()
+	{
+		return activePotionsMap.values();
+	}
+	
+	public int getAge()
+	{
+		return entityAge;
+	}
+	
+	public float getAIMoveSpeed()
+	{
+		return isAIEnabled() ? landMovementFactor : 0.1F;
+	}
+	
+	public EntityLivingBase getAITarget()
+	{
+		return entityLivingToAttack;
+	}
+	
+	private int getArmSwingAnimationEnd()
+	{
+		return this.isPotionActive(Potion.digSpeed) ? 6 - (1 + getActivePotionEffect(Potion.digSpeed).getAmplifier()) * 1 : this.isPotionActive(Potion.digSlowdown) ? 6 + (1 + getActivePotionEffect(Potion.digSlowdown).getAmplifier()) * 2 : 6;
+	}
+	
+	public final int getArrowCountInEntity()
+	{
+		return dataWatcher.getWatchableObjectByte(9);
+	}
+	
+	public EnumCreatureAttribute getCreatureAttribute()
+	{
+		return EnumCreatureAttribute.UNDEFINED;
+	}
+	
+	public abstract ItemStack getCurrentItemOrArmor(int var1);
+	
+	protected String getDeathSound()
+	{
+		return "damage.hit";
+	}
+	
+	protected int getExperiencePoints(EntityPlayer par1EntityPlayer)
+	{
+		return 0;
+	}
+	
+	@Override public float getEyeHeight()
+	{
+		return height * 0.85F;
+	}
+	
+	public abstract ItemStack getHeldItem();
+	
+	protected String getHurtSound()
+	{
+		return "damage.hit";
+	}
+	
+	public Icon getItemIcon(ItemStack par1ItemStack, int par2)
+	{
+		return par1ItemStack.getIconIndex();
+	}
+	
+	@Override public abstract ItemStack[] getLastActiveItems();
+	
+	public Vec3 getLook(float par1)
+	{
+		float var2;
+		float var3;
+		float var4;
+		float var5;
+		if(par1 == 1.0F)
+		{
+			var2 = MathHelper.cos(-rotationYaw * 0.017453292F - (float) Math.PI);
+			var3 = MathHelper.sin(-rotationYaw * 0.017453292F - (float) Math.PI);
+			var4 = -MathHelper.cos(-rotationPitch * 0.017453292F);
+			var5 = MathHelper.sin(-rotationPitch * 0.017453292F);
+			return worldObj.getWorldVec3Pool().getVecFromPool(var3 * var4, var5, var2 * var4);
+		} else
+		{
+			var2 = prevRotationPitch + (rotationPitch - prevRotationPitch) * par1;
+			var3 = prevRotationYaw + (rotationYaw - prevRotationYaw) * par1;
+			var4 = MathHelper.cos(-var3 * 0.017453292F - (float) Math.PI);
+			var5 = MathHelper.sin(-var3 * 0.017453292F - (float) Math.PI);
+			float var6 = -MathHelper.cos(-var2 * 0.017453292F);
+			float var7 = MathHelper.sin(-var2 * 0.017453292F);
+			return worldObj.getWorldVec3Pool().getVecFromPool(var5 * var6, var7, var4 * var6);
+		}
+	}
+	
+	@Override public Vec3 getLookVec()
+	{
+		return getLook(1.0F);
+	}
+	
+	public Vec3 getPosition(float par1)
+	{
+		if(par1 == 1.0F) return worldObj.getWorldVec3Pool().getVecFromPool(posX, posY, posZ);
+		else
+		{
+			double var2 = prevPosX + (posX - prevPosX) * par1;
+			double var4 = prevPosY + (posY - prevPosY) * par1;
+			double var6 = prevPosZ + (posZ - prevPosZ) * par1;
+			return worldObj.getWorldVec3Pool().getVecFromPool(var2, var4, var6);
+		}
+	}
+	
+	public Random getRNG()
+	{
+		return rand;
+	}
+	
+	@Override public float getRotationYawHead()
+	{
+		return rotationYawHead;
+	}
+	
+	protected float getSoundPitch()
+	{
+		return isChild() ? (rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.5F : (rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.0F;
+	}
+	
+	protected float getSoundVolume()
+	{
+		return 1.0F;
+	}
+	
+	public float getSwingProgress(float par1)
+	{
+		float var2 = swingProgress - prevSwingProgress;
+		if(var2 < 0.0F)
+		{
+			++var2;
+		}
+		return prevSwingProgress + var2 * par1;
+	}
+	
+	public Team getTeam()
+	{
+		return null;
+	}
+	
+	public int getTotalArmorValue()
+	{
+		int var1 = 0;
+		ItemStack[] var2 = getLastActiveItems();
+		int var3 = var2.length;
+		for(int var4 = 0; var4 < var3; ++var4)
+		{
+			ItemStack var5 = var2[var4];
+			if(var5 != null && var5.getItem() instanceof ItemArmor)
+			{
+				int var6 = ((ItemArmor) var5.getItem()).damageReduceAmount;
+				var1 += var6;
+			}
+		}
+		return var1;
+	}
+	
+	@Override public void handleHealthUpdate(byte par1)
+	{
+		if(par1 == 2)
+		{
+			limbYaw = 1.5F;
+			hurtResistantTime = maxHurtResistantTime;
+			hurtTime = maxHurtTime = 10;
+			attackedAtYaw = 0.0F;
+			playSound(getHurtSound(), getSoundVolume(), (rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.0F);
+			attackEntityFrom(DamageSource.generic, 0.0F);
+		} else if(par1 == 3)
+		{
+			playSound(getDeathSound(), getSoundVolume(), (rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.0F);
+			setEntityHealth(0.0F);
+			onDeath(DamageSource.generic);
+		} else
+		{
+			super.handleHealthUpdate(par1);
+		}
+	}
+	
+	public void heal(float par1)
+	{
+		float var2 = func_110143_aJ();
+		if(var2 > 0.0F)
+		{
+			setEntityHealth(var2 + par1);
+		}
+	}
+	
+	protected boolean isAIEnabled()
+	{
+		return false;
+	}
+	
+	public boolean isChild()
+	{
+		return false;
+	}
+	
+	public boolean isClientWorld()
+	{
+		return !worldObj.isRemote;
+	}
+	
+	@Override public boolean isEntityAlive()
+	{
+		return !isDead && func_110143_aJ() > 0.0F;
+	}
+	
+	public boolean isEntityUndead()
+	{
+		return getCreatureAttribute() == EnumCreatureAttribute.UNDEAD;
+	}
+	
+	protected boolean isMovementBlocked()
+	{
+		return func_110143_aJ() <= 0.0F;
+	}
+	
+	public boolean isOnLadder()
+	{
+		int var1 = MathHelper.floor_double(posX);
+		int var2 = MathHelper.floor_double(boundingBox.minY);
+		int var3 = MathHelper.floor_double(posZ);
+		int var4 = worldObj.getBlockId(var1, var2, var3);
+		return var4 == Block.ladder.blockID || var4 == Block.vine.blockID;
+	}
+	
+	protected boolean isPlayer()
+	{
+		return false;
+	}
+	
+	public boolean isPlayerSleeping()
+	{
+		return false;
+	}
+	
+	public boolean isPotionActive(int par1)
+	{
+		return activePotionsMap.containsKey(Integer.valueOf(par1));
+	}
+	
+	public boolean isPotionActive(Potion par1Potion)
+	{
+		return activePotionsMap.containsKey(Integer.valueOf(par1Potion.id));
+	}
+	
+	public boolean isPotionApplicable(PotionEffect par1PotionEffect)
+	{
+		if(getCreatureAttribute() == EnumCreatureAttribute.UNDEAD)
+		{
+			int var2 = par1PotionEffect.getPotionID();
+			if(var2 == Potion.regeneration.id || var2 == Potion.poison.id) return false;
+		}
+		return true;
+	}
+	
+	protected void jump()
+	{
+		motionY = 0.41999998688697815D;
+		if(this.isPotionActive(Potion.jump))
+		{
+			motionY += (getActivePotionEffect(Potion.jump).getAmplifier() + 1) * 0.1F;
+		}
+		if(isSprinting())
+		{
+			float var1 = rotationYaw * 0.017453292F;
+			motionX -= MathHelper.sin(var1) * 0.2F;
+			motionZ += MathHelper.cos(var1) * 0.2F;
+		}
+		isAirBorne = true;
+	}
+	
+	@Override protected void kill()
+	{
+		attackEntityFrom(DamageSource.outOfWorld, 4.0F);
+	}
+	
+	public void knockBack(Entity par1Entity, float par2, double par3, double par5)
+	{
+		if(rand.nextDouble() >= func_110148_a(SharedMonsterAttributes.field_111266_c).func_111126_e())
+		{
+			isAirBorne = true;
+			float var7 = MathHelper.sqrt_double(par3 * par3 + par5 * par5);
+			float var8 = 0.4F;
+			motionX /= 2.0D;
+			motionY /= 2.0D;
+			motionZ /= 2.0D;
+			motionX -= par3 / var7 * var8;
+			motionY += var8;
+			motionZ -= par5 / var7 * var8;
+			if(motionY > 0.4000000059604645D)
+			{
+				motionY = 0.4000000059604645D;
+			}
+		}
+	}
+	
+	public void moveEntityWithHeading(float par1, float par2)
+	{
+		double var10;
+		if(isInWater() && (!(this instanceof EntityPlayer) || !((EntityPlayer) this).capabilities.isFlying))
+		{
+			var10 = posY;
+			moveFlying(par1, par2, isAIEnabled() ? 0.04F : 0.02F);
+			moveEntity(motionX, motionY, motionZ);
+			motionX *= 0.800000011920929D;
+			motionY *= 0.800000011920929D;
+			motionZ *= 0.800000011920929D;
+			motionY -= 0.02D;
+			if(isCollidedHorizontally && isOffsetPositionInLiquid(motionX, motionY + 0.6000000238418579D - posY + var10, motionZ))
+			{
+				motionY = 0.30000001192092896D;
+			}
+		} else if(handleLavaMovement() && (!(this instanceof EntityPlayer) || !((EntityPlayer) this).capabilities.isFlying))
+		{
+			var10 = posY;
+			moveFlying(par1, par2, 0.02F);
+			moveEntity(motionX, motionY, motionZ);
+			motionX *= 0.5D;
+			motionY *= 0.5D;
+			motionZ *= 0.5D;
+			motionY -= 0.02D;
+			if(isCollidedHorizontally && isOffsetPositionInLiquid(motionX, motionY + 0.6000000238418579D - posY + var10, motionZ))
+			{
+				motionY = 0.30000001192092896D;
+			}
+		} else
+		{
+			float var3 = 0.91F;
+			if(onGround)
+			{
+				var3 = 0.54600006F;
+				int var4 = worldObj.getBlockId(MathHelper.floor_double(posX), MathHelper.floor_double(boundingBox.minY) - 1, MathHelper.floor_double(posZ));
+				if(var4 > 0)
+				{
+					var3 = Block.blocksList[var4].slipperiness * 0.91F;
+				}
+			}
+			float var8 = 0.16277136F / (var3 * var3 * var3);
+			float var5;
+			if(onGround)
+			{
+				var5 = getAIMoveSpeed() * var8;
+			} else
+			{
+				var5 = jumpMovementFactor;
+			}
+			moveFlying(par1, par2, var5);
+			var3 = 0.91F;
+			if(onGround)
+			{
+				var3 = 0.54600006F;
+				int var6 = worldObj.getBlockId(MathHelper.floor_double(posX), MathHelper.floor_double(boundingBox.minY) - 1, MathHelper.floor_double(posZ));
+				if(var6 > 0)
+				{
+					var3 = Block.blocksList[var6].slipperiness * 0.91F;
+				}
+			}
+			if(isOnLadder())
+			{
+				float var11 = 0.15F;
+				if(motionX < -var11)
+				{
+					motionX = -var11;
+				}
+				if(motionX > var11)
+				{
+					motionX = var11;
+				}
+				if(motionZ < -var11)
+				{
+					motionZ = -var11;
+				}
+				if(motionZ > var11)
+				{
+					motionZ = var11;
+				}
+				fallDistance = 0.0F;
+				if(motionY < -0.15D)
+				{
+					motionY = -0.15D;
+				}
+				boolean var7 = isSneaking() && this instanceof EntityPlayer;
+				if(var7 && motionY < 0.0D)
+				{
+					motionY = 0.0D;
+				}
+			}
+			moveEntity(motionX, motionY, motionZ);
+			if(isCollidedHorizontally && isOnLadder())
+			{
+				motionY = 0.2D;
+			}
+			if(worldObj.isRemote && (!worldObj.blockExists((int) posX, 0, (int) posZ) || !worldObj.getChunkFromBlockCoords((int) posX, (int) posZ).isChunkLoaded))
+			{
+				if(posY > 0.0D)
+				{
+					motionY = -0.1D;
+				} else
+				{
+					motionY = 0.0D;
+				}
+			} else
+			{
+				motionY -= 0.08D;
+			}
+			motionY *= 0.9800000190734863D;
+			motionX *= var3;
+			motionZ *= var3;
+		}
+		prevLimbYaw = limbYaw;
+		var10 = posX - prevPosX;
+		double var9 = posZ - prevPosZ;
+		float var12 = MathHelper.sqrt_double(var10 * var10 + var9 * var9) * 4.0F;
+		if(var12 > 1.0F)
+		{
+			var12 = 1.0F;
+		}
+		limbYaw += (var12 - limbYaw) * 0.4F;
+		limbSwing += limbYaw;
+	}
+	
+	protected void onChangedPotionEffect(PotionEffect par1PotionEffect, boolean p_70695_2_)
+	{
+		potionsNeedUpdate = true;
+		if(p_70695_2_ && !worldObj.isRemote)
+		{
+			Potion.potionTypes[par1PotionEffect.getPotionID()].func_111187_a(this, func_110140_aT(), par1PotionEffect.getAmplifier());
+			Potion.potionTypes[par1PotionEffect.getPotionID()].func_111185_a(this, func_110140_aT(), par1PotionEffect.getAmplifier());
+		}
+	}
+	
+	public void onDeath(DamageSource par1DamageSource)
+	{
+		Entity var2 = par1DamageSource.getEntity();
+		EntityLivingBase var3 = func_94060_bK();
+		if(scoreValue >= 0 && var3 != null)
+		{
+			var3.addToPlayerScore(this, scoreValue);
+		}
+		if(var2 != null)
+		{
+			var2.onKillEntity(this);
+		}
+		dead = true;
+		if(!worldObj.isRemote)
+		{
+			int var4 = 0;
+			if(var2 instanceof EntityPlayer)
+			{
+				var4 = EnchantmentHelper.getLootingModifier((EntityLivingBase) var2);
+			}
+			if(!isChild() && worldObj.getGameRules().getGameRuleBooleanValue("doMobLoot"))
+			{
+				dropFewItems(recentlyHit > 0, var4);
+				dropEquipment(recentlyHit > 0, var4);
+				if(recentlyHit > 0)
+				{
+					int var5 = rand.nextInt(200) - var4;
+					if(var5 < 5)
+					{
+						dropRareDrop(var5 <= 0 ? 1 : 0);
+					}
+				}
+			}
+		}
+		worldObj.setEntityState(this, (byte) 3);
+	}
+	
+	protected void onDeathUpdate()
+	{
+		++deathTime;
+		if(deathTime == 20)
+		{
+			int var1;
+			if(!worldObj.isRemote && (recentlyHit > 0 || isPlayer()) && !isChild() && worldObj.getGameRules().getGameRuleBooleanValue("doMobLoot"))
+			{
+				var1 = getExperiencePoints(attackingPlayer);
+				while(var1 > 0)
+				{
+					int var2 = EntityXPOrb.getXPSplit(var1);
+					var1 -= var2;
+					worldObj.spawnEntityInWorld(new EntityXPOrb(worldObj, posX, posY, posZ, var2));
+				}
+			}
+			setDead();
+			for(var1 = 0; var1 < 20; ++var1)
+			{
+				double var8 = rand.nextGaussian() * 0.02D;
+				double var4 = rand.nextGaussian() * 0.02D;
+				double var6 = rand.nextGaussian() * 0.02D;
+				worldObj.spawnParticle("explode", posX + rand.nextFloat() * width * 2.0F - width, posY + rand.nextFloat() * height, posZ + rand.nextFloat() * width * 2.0F - width, var8, var4, var6);
+			}
+		}
+	}
+	
+	@Override public void onEntityUpdate()
+	{
+		prevSwingProgress = swingProgress;
+		super.onEntityUpdate();
+		worldObj.theProfiler.startSection("livingEntityBaseTick");
+		if(isEntityAlive() && isEntityInsideOpaqueBlock())
+		{
+			attackEntityFrom(DamageSource.inWall, 1.0F);
+		}
+		if(isImmuneToFire() || worldObj.isRemote)
+		{
+			extinguish();
+		}
+		boolean var1 = this instanceof EntityPlayer && ((EntityPlayer) this).capabilities.disableDamage;
+		if(isEntityAlive() && isInsideOfMaterial(Material.water))
+		{
+			if(!canBreatheUnderwater() && !this.isPotionActive(Potion.waterBreathing.id) && !var1)
+			{
+				setAir(decreaseAirSupply(getAir()));
+				if(getAir() == -20)
+				{
+					setAir(0);
+					for(int var2 = 0; var2 < 8; ++var2)
+					{
+						float var3 = rand.nextFloat() - rand.nextFloat();
+						float var4 = rand.nextFloat() - rand.nextFloat();
+						float var5 = rand.nextFloat() - rand.nextFloat();
+						worldObj.spawnParticle("bubble", posX + var3, posY + var4, posZ + var5, motionX, motionY, motionZ);
+					}
+					attackEntityFrom(DamageSource.drown, 2.0F);
+				}
+			}
+			extinguish();
+			if(!worldObj.isRemote && isRiding() && ridingEntity instanceof EntityLivingBase)
+			{
+				mountEntity((Entity) null);
+			}
+		} else
+		{
+			setAir(300);
+		}
+		prevCameraPitch = cameraPitch;
+		if(attackTime > 0)
+		{
+			--attackTime;
+		}
+		if(hurtTime > 0)
+		{
+			--hurtTime;
+		}
+		if(hurtResistantTime > 0)
+		{
+			--hurtResistantTime;
+		}
+		if(func_110143_aJ() <= 0.0F)
+		{
+			onDeathUpdate();
+		}
+		if(recentlyHit > 0)
+		{
+			--recentlyHit;
+		} else
+		{
+			attackingPlayer = null;
+		}
+		if(field_110150_bn != null && !field_110150_bn.isEntityAlive())
+		{
+			field_110150_bn = null;
+		}
+		if(entityLivingToAttack != null && !entityLivingToAttack.isEntityAlive())
+		{
+			setRevengeTarget((EntityLivingBase) null);
+		}
+		updatePotionEffects();
+		field_70763_ax = field_70764_aw;
+		prevRenderYawOffset = renderYawOffset;
+		prevRotationYawHead = rotationYawHead;
+		prevRotationYaw = rotationYaw;
+		prevRotationPitch = rotationPitch;
+		worldObj.theProfiler.endSection();
+	}
+	
+	protected void onFinishedPotionEffect(PotionEffect par1PotionEffect)
+	{
+		potionsNeedUpdate = true;
+		if(!worldObj.isRemote)
+		{
+			Potion.potionTypes[par1PotionEffect.getPotionID()].func_111187_a(this, func_110140_aT(), par1PotionEffect.getAmplifier());
+		}
+	}
+	
+	public void onItemPickup(Entity par1Entity, int par2)
+	{
+		if(!par1Entity.isDead && !worldObj.isRemote)
+		{
+			EntityTracker var3 = ((WorldServer) worldObj).getEntityTracker();
+			if(par1Entity instanceof EntityItem)
+			{
+				var3.sendPacketToAllPlayersTrackingEntity(par1Entity, new Packet22Collect(par1Entity.entityId, entityId));
+			}
+			if(par1Entity instanceof EntityArrow)
+			{
+				var3.sendPacketToAllPlayersTrackingEntity(par1Entity, new Packet22Collect(par1Entity.entityId, entityId));
+			}
+			if(par1Entity instanceof EntityXPOrb)
+			{
+				var3.sendPacketToAllPlayersTrackingEntity(par1Entity, new Packet22Collect(par1Entity.entityId, entityId));
+			}
+		}
+	}
+	
+	public void onLivingUpdate()
+	{
+		if(jumpTicks > 0)
+		{
+			--jumpTicks;
+		}
+		if(newPosRotationIncrements > 0)
+		{
+			double var1 = posX + (newPosX - posX) / newPosRotationIncrements;
+			double var3 = posY + (newPosY - posY) / newPosRotationIncrements;
+			double var5 = posZ + (field_110152_bk - posZ) / newPosRotationIncrements;
+			double var7 = MathHelper.wrapAngleTo180_double(newRotationYaw - rotationYaw);
+			rotationYaw = (float) (rotationYaw + var7 / newPosRotationIncrements);
+			rotationPitch = (float) (rotationPitch + (newRotationPitch - rotationPitch) / newPosRotationIncrements);
+			--newPosRotationIncrements;
+			setPosition(var1, var3, var5);
+			setRotation(rotationYaw, rotationPitch);
+		} else if(!isClientWorld())
+		{
+			motionX *= 0.98D;
+			motionY *= 0.98D;
+			motionZ *= 0.98D;
+		}
+		if(Math.abs(motionX) < 0.005D)
+		{
+			motionX = 0.0D;
+		}
+		if(Math.abs(motionY) < 0.005D)
+		{
+			motionY = 0.0D;
+		}
+		if(Math.abs(motionZ) < 0.005D)
+		{
+			motionZ = 0.0D;
+		}
+		worldObj.theProfiler.startSection("ai");
+		if(isMovementBlocked())
+		{
+			isJumping = false;
+			moveStrafing = 0.0F;
+			moveForward = 0.0F;
+			randomYawVelocity = 0.0F;
+		} else if(isClientWorld())
+		{
+			if(isAIEnabled())
+			{
+				worldObj.theProfiler.startSection("newAi");
+				updateAITasks();
+				worldObj.theProfiler.endSection();
+			} else
+			{
+				worldObj.theProfiler.startSection("oldAi");
+				updateEntityActionState();
+				worldObj.theProfiler.endSection();
+				rotationYawHead = rotationYaw;
+			}
+		}
+		worldObj.theProfiler.endSection();
+		worldObj.theProfiler.startSection("jump");
+		if(isJumping)
+		{
+			if(!isInWater() && !handleLavaMovement())
+			{
+				if(onGround && jumpTicks == 0)
+				{
+					jump();
+					jumpTicks = 10;
+				}
+			} else
+			{
+				motionY += 0.03999999910593033D;
+			}
+		} else
+		{
+			jumpTicks = 0;
+		}
+		worldObj.theProfiler.endSection();
+		worldObj.theProfiler.startSection("travel");
+		moveStrafing *= 0.98F;
+		moveForward *= 0.98F;
+		randomYawVelocity *= 0.9F;
+		moveEntityWithHeading(moveStrafing, moveForward);
+		worldObj.theProfiler.endSection();
+		worldObj.theProfiler.startSection("push");
+		if(!worldObj.isRemote)
+		{
+			func_85033_bc();
+		}
+		worldObj.theProfiler.endSection();
+	}
+	
+	protected void onNewPotionEffect(PotionEffect par1PotionEffect)
+	{
+		potionsNeedUpdate = true;
+		if(!worldObj.isRemote)
+		{
+			Potion.potionTypes[par1PotionEffect.getPotionID()].func_111185_a(this, func_110140_aT(), par1PotionEffect.getAmplifier());
+		}
+	}
+	
+	@Override public void onUpdate()
+	{
+		super.onUpdate();
+		if(!worldObj.isRemote)
+		{
+			int var1 = getArrowCountInEntity();
+			if(var1 > 0)
+			{
+				if(arrowHitTimer <= 0)
+				{
+					arrowHitTimer = 20 * (30 - var1);
+				}
+				--arrowHitTimer;
+				if(arrowHitTimer <= 0)
+				{
+					setArrowCountInEntity(var1 - 1);
+				}
+			}
+			for(int var2 = 0; var2 < 5; ++var2)
+			{
+				ItemStack var3 = previousEquipment[var2];
+				ItemStack var4 = getCurrentItemOrArmor(var2);
+				if(!ItemStack.areItemStacksEqual(var4, var3))
+				{
+					((WorldServer) worldObj).getEntityTracker().sendPacketToAllPlayersTrackingEntity(this, new Packet5PlayerInventory(entityId, var2, var4));
+					if(var3 != null)
+					{
+						field_110155_d.func_111148_a(var3.func_111283_C());
+					}
+					if(var4 != null)
+					{
+						field_110155_d.func_111147_b(var4.func_111283_C());
+					}
+					previousEquipment[var2] = var4 == null ? null : var4.copy();
+				}
+			}
+		}
+		onLivingUpdate();
+		double var9 = posX - prevPosX;
+		double var10 = posZ - prevPosZ;
+		float var5 = (float) (var9 * var9 + var10 * var10);
+		float var6 = renderYawOffset;
+		float var7 = 0.0F;
+		field_70768_au = field_110154_aX;
+		float var8 = 0.0F;
+		if(var5 > 0.0025000002F)
+		{
+			var8 = 1.0F;
+			var7 = (float) Math.sqrt(var5) * 3.0F;
+			var6 = (float) Math.atan2(var10, var9) * 180.0F / (float) Math.PI - 90.0F;
+		}
+		if(swingProgress > 0.0F)
+		{
+			var6 = rotationYaw;
+		}
+		if(!onGround)
+		{
+			var8 = 0.0F;
+		}
+		field_110154_aX += (var8 - field_110154_aX) * 0.3F;
+		worldObj.theProfiler.startSection("headTurn");
+		var7 = func_110146_f(var6, var7);
+		worldObj.theProfiler.endSection();
+		worldObj.theProfiler.startSection("rangeChecks");
+		while(rotationYaw - prevRotationYaw < -180.0F)
+		{
+			prevRotationYaw -= 360.0F;
+		}
+		while(rotationYaw - prevRotationYaw >= 180.0F)
+		{
+			prevRotationYaw += 360.0F;
+		}
+		while(renderYawOffset - prevRenderYawOffset < -180.0F)
+		{
+			prevRenderYawOffset -= 360.0F;
+		}
+		while(renderYawOffset - prevRenderYawOffset >= 180.0F)
+		{
+			prevRenderYawOffset += 360.0F;
+		}
+		while(rotationPitch - prevRotationPitch < -180.0F)
+		{
+			prevRotationPitch -= 360.0F;
+		}
+		while(rotationPitch - prevRotationPitch >= 180.0F)
+		{
+			prevRotationPitch += 360.0F;
+		}
+		while(rotationYawHead - prevRotationYawHead < -180.0F)
+		{
+			prevRotationYawHead -= 360.0F;
+		}
+		while(rotationYawHead - prevRotationYawHead >= 180.0F)
+		{
+			prevRotationYawHead += 360.0F;
+		}
+		worldObj.theProfiler.endSection();
+		field_70764_aw += var7;
+	}
+	
+	@Override public void performHurtAnimation()
+	{
+		hurtTime = maxHurtTime = 10;
+		attackedAtYaw = 0.0F;
+	}
+	
+	public MovingObjectPosition rayTrace(double par1, float par3)
+	{
+		Vec3 var4 = getPosition(par3);
+		Vec3 var5 = getLook(par3);
+		Vec3 var6 = var4.addVector(var5.xCoord * par1, var5.yCoord * par1, var5.zCoord * par1);
+		return worldObj.rayTraceBlocks(var4, var6);
+	}
+	
+	@Override public void readEntityFromNBT(NBTTagCompound par1NBTTagCompound)
+	{
+		func_110149_m(par1NBTTagCompound.getFloat("AbsorptionAmount"));
+		if(par1NBTTagCompound.hasKey("Attributes") && worldObj != null && !worldObj.isRemote)
+		{
+			SharedMonsterAttributes.func_111260_a(func_110140_aT(), par1NBTTagCompound.getTagList("Attributes"), worldObj == null ? null : worldObj.getWorldLogAgent());
+		}
+		if(par1NBTTagCompound.hasKey("ActiveEffects"))
+		{
+			NBTTagList var2 = par1NBTTagCompound.getTagList("ActiveEffects");
+			for(int var3 = 0; var3 < var2.tagCount(); ++var3)
+			{
+				NBTTagCompound var4 = (NBTTagCompound) var2.tagAt(var3);
+				PotionEffect var5 = PotionEffect.readCustomPotionEffectFromNBT(var4);
+				activePotionsMap.put(Integer.valueOf(var5.getPotionID()), var5);
+			}
+		}
+		if(par1NBTTagCompound.hasKey("HealF"))
+		{
+			setEntityHealth(par1NBTTagCompound.getFloat("HealF"));
+		} else
+		{
+			NBTBase var6 = par1NBTTagCompound.getTag("Health");
+			if(var6 == null)
+			{
+				setEntityHealth(func_110138_aP());
+			} else if(var6.getId() == 5)
+			{
+				setEntityHealth(((NBTTagFloat) var6).data);
+			} else if(var6.getId() == 2)
+			{
+				setEntityHealth(((NBTTagShort) var6).data);
+			}
+		}
+		hurtTime = par1NBTTagCompound.getShort("HurtTime");
+		deathTime = par1NBTTagCompound.getShort("DeathTime");
+		attackTime = par1NBTTagCompound.getShort("AttackTime");
+	}
+	
+	public void removePotionEffect(int par1)
+	{
+		PotionEffect var2 = (PotionEffect) activePotionsMap.remove(Integer.valueOf(par1));
+		if(var2 != null)
+		{
+			onFinishedPotionEffect(var2);
+		}
+	}
+	
+	public void removePotionEffectClient(int par1)
+	{
+		activePotionsMap.remove(Integer.valueOf(par1));
+	}
+	
+	public void renderBrokenItemStack(ItemStack par1ItemStack)
+	{
+		playSound("random.break", 0.8F, 0.8F + worldObj.rand.nextFloat() * 0.4F);
+		for(int var2 = 0; var2 < 5; ++var2)
+		{
+			Vec3 var3 = worldObj.getWorldVec3Pool().getVecFromPool((rand.nextFloat() - 0.5D) * 0.1D, Math.random() * 0.1D + 0.1D, 0.0D);
+			var3.rotateAroundX(-rotationPitch * (float) Math.PI / 180.0F);
+			var3.rotateAroundY(-rotationYaw * (float) Math.PI / 180.0F);
+			Vec3 var4 = worldObj.getWorldVec3Pool().getVecFromPool((rand.nextFloat() - 0.5D) * 0.3D, -rand.nextFloat() * 0.6D - 0.3D, 0.6D);
+			var4.rotateAroundX(-rotationPitch * (float) Math.PI / 180.0F);
+			var4.rotateAroundY(-rotationYaw * (float) Math.PI / 180.0F);
+			var4 = var4.addVector(posX, posY + getEyeHeight(), posZ);
+			worldObj.spawnParticle("iconcrack_" + par1ItemStack.getItem().itemID, var4.xCoord, var4.yCoord, var4.zCoord, var3.xCoord, var3.yCoord + 0.05D, var3.zCoord);
+		}
+	}
+	
+	public void setAIMoveSpeed(float par1)
+	{
+		landMovementFactor = par1;
+	}
+	
+	public final void setArrowCountInEntity(int par1)
+	{
+		dataWatcher.updateObject(9, Byte.valueOf((byte) par1));
+	}
+	
+	@Override protected void setBeenAttacked()
+	{
+		velocityChanged = rand.nextDouble() >= func_110148_a(SharedMonsterAttributes.field_111266_c).func_111126_e();
+	}
+	
+	@Override public abstract void setCurrentItemOrArmor(int var1, ItemStack var2);
+	
+	public void setEntityHealth(float par1)
+	{
+		dataWatcher.updateObject(6, Float.valueOf(MathHelper.clamp_float(par1, 0.0F, func_110138_aP())));
+	}
+	
+	public void setJumping(boolean par1)
+	{
+		isJumping = par1;
+	}
+	
+	@Override public void setPositionAndRotation2(double par1, double par3, double par5, float par7, float par8, int par9)
+	{
+		yOffset = 0.0F;
+		newPosX = par1;
+		newPosY = par3;
+		field_110152_bk = par5;
+		newRotationYaw = par7;
+		newRotationPitch = par8;
+		newPosRotationIncrements = par9;
+	}
+	
+	public void setPositionAndUpdate(double par1, double par3, double par5)
+	{
+		setLocationAndAngles(par1, par3, par5, rotationYaw, rotationPitch);
+	}
+	
+	public void setRevengeTarget(EntityLivingBase par1EntityLiving)
+	{
+		entityLivingToAttack = par1EntityLiving;
+		revengeTimer = ticksExisted;
+	}
+	
+	@Override public void setRotationYawHead(float par1)
+	{
+		rotationYawHead = par1;
+	}
+	
+	@Override public void setSprinting(boolean par1)
+	{
+		super.setSprinting(par1);
+		AttributeInstance var2 = func_110148_a(SharedMonsterAttributes.field_111263_d);
+		if(var2.func_111127_a(field_110156_b) != null)
+		{
+			var2.func_111124_b(field_110157_c);
+		}
+		if(par1)
+		{
+			var2.func_111121_a(field_110157_c);
+		}
+	}
+	
+	public void swingItem()
+	{
+		if(!isSwingInProgress || field_110158_av >= getArmSwingAnimationEnd() / 2 || field_110158_av < 0)
+		{
+			field_110158_av = -1;
+			isSwingInProgress = true;
+			if(worldObj instanceof WorldServer)
+			{
+				((WorldServer) worldObj).getEntityTracker().sendPacketToAllPlayersTrackingEntity(this, new Packet18Animation(this, 1));
+			}
+		}
+	}
+	
+	protected void updateAITasks()
+	{
+	}
+	
+	protected void updateAITick()
+	{
+	}
+	
+	protected void updateArmSwingProgress()
+	{
+		int var1 = getArmSwingAnimationEnd();
+		if(isSwingInProgress)
+		{
+			++field_110158_av;
+			if(field_110158_av >= var1)
+			{
+				field_110158_av = 0;
+				isSwingInProgress = false;
+			}
+		} else
+		{
+			field_110158_av = 0;
+		}
+		swingProgress = (float) field_110158_av / (float) var1;
+	}
+	
+	protected void updateEntityActionState()
+	{
+		++entityAge;
+	}
+	
+	@Override protected void updateFallState(double par1, boolean par3)
+	{
+		if(!isInWater())
+		{
+			handleWaterMovement();
+		}
+		if(par3 && fallDistance > 0.0F)
+		{
+			int var4 = MathHelper.floor_double(posX);
+			int var5 = MathHelper.floor_double(posY - 0.20000000298023224D - yOffset);
+			int var6 = MathHelper.floor_double(posZ);
+			int var7 = worldObj.getBlockId(var4, var5, var6);
+			if(var7 == 0)
+			{
+				int var8 = worldObj.blockGetRenderType(var4, var5 - 1, var6);
+				if(var8 == 11 || var8 == 32 || var8 == 21)
+				{
+					var7 = worldObj.getBlockId(var4, var5 - 1, var6);
+				}
+			}
+			if(var7 > 0)
+			{
+				Block.blocksList[var7].onFallenUpon(worldObj, var4, var5, var6, this, fallDistance);
+			}
+		}
+		super.updateFallState(par1, par3);
+	}
+	
+	protected void updatePotionEffects()
+	{
+		Iterator var1 = activePotionsMap.keySet().iterator();
+		while(var1.hasNext())
+		{
+			Integer var2 = (Integer) var1.next();
+			PotionEffect var3 = (PotionEffect) activePotionsMap.get(var2);
+			if(!var3.onUpdate(this))
+			{
+				if(!worldObj.isRemote)
+				{
+					var1.remove();
+					onFinishedPotionEffect(var3);
+				}
+			} else if(var3.getDuration() % 600 == 0)
+			{
+				onChangedPotionEffect(var3, false);
+			}
+		}
+		int var11;
+		if(potionsNeedUpdate)
+		{
+			if(!worldObj.isRemote)
+			{
+				if(activePotionsMap.isEmpty())
+				{
+					dataWatcher.updateObject(8, Byte.valueOf((byte) 0));
+					dataWatcher.updateObject(7, Integer.valueOf(0));
+					setInvisible(false);
+				} else
+				{
+					var11 = PotionHelper.calcPotionLiquidColor(activePotionsMap.values());
+					dataWatcher.updateObject(8, Byte.valueOf((byte) (PotionHelper.func_82817_b(activePotionsMap.values()) ? 1 : 0)));
+					dataWatcher.updateObject(7, Integer.valueOf(var11));
+					setInvisible(this.isPotionActive(Potion.invisibility.id));
+				}
+			}
+			potionsNeedUpdate = false;
+		}
+		var11 = dataWatcher.getWatchableObjectInt(7);
+		boolean var12 = dataWatcher.getWatchableObjectByte(8) > 0;
+		if(var11 > 0)
+		{
+			boolean var4 = false;
+			if(!isInvisible())
+			{
+				var4 = rand.nextBoolean();
+			} else
+			{
+				var4 = rand.nextInt(15) == 0;
+			}
+			if(var12)
+			{
+				var4 &= rand.nextInt(5) == 0;
+			}
+			if(var4 && var11 > 0)
+			{
+				double var5 = (var11 >> 16 & 255) / 255.0D;
+				double var7 = (var11 >> 8 & 255) / 255.0D;
+				double var9 = (var11 >> 0 & 255) / 255.0D;
+				worldObj.spawnParticle(var12 ? "mobSpellAmbient" : "mobSpell", posX + (rand.nextDouble() - 0.5D) * width, posY + rand.nextDouble() * height - yOffset, posZ + (rand.nextDouble() - 0.5D) * width, var5, var7, var9);
+			}
+		}
+	}
+	
+	@Override public void updateRidden()
+	{
+		super.updateRidden();
+		field_70768_au = field_110154_aX;
+		field_110154_aX = 0.0F;
+		fallDistance = 0.0F;
+	}
+	
+	@Override public void writeEntityToNBT(NBTTagCompound par1NBTTagCompound)
+	{
+		par1NBTTagCompound.setFloat("HealF", func_110143_aJ());
+		par1NBTTagCompound.setShort("Health", (short) (int) Math.ceil(func_110143_aJ()));
+		par1NBTTagCompound.setShort("HurtTime", (short) hurtTime);
+		par1NBTTagCompound.setShort("DeathTime", (short) deathTime);
+		par1NBTTagCompound.setShort("AttackTime", (short) attackTime);
+		par1NBTTagCompound.setFloat("AbsorptionAmount", func_110139_bj());
+		ItemStack[] var2 = getLastActiveItems();
+		int var3 = var2.length;
+		int var4;
+		ItemStack var5;
+		for(var4 = 0; var4 < var3; ++var4)
+		{
+			var5 = var2[var4];
+			if(var5 != null)
+			{
+				field_110155_d.func_111148_a(var5.func_111283_C());
+			}
+		}
+		par1NBTTagCompound.setTag("Attributes", SharedMonsterAttributes.func_111257_a(func_110140_aT()));
+		var2 = getLastActiveItems();
+		var3 = var2.length;
+		for(var4 = 0; var4 < var3; ++var4)
+		{
+			var5 = var2[var4];
+			if(var5 != null)
+			{
+				field_110155_d.func_111147_b(var5.func_111283_C());
+			}
+		}
+		if(!activePotionsMap.isEmpty())
+		{
+			NBTTagList var6 = new NBTTagList();
+			Iterator var7 = activePotionsMap.values().iterator();
+			while(var7.hasNext())
+			{
+				PotionEffect var8 = (PotionEffect) var7.next();
+				var6.appendTag(var8.writeCustomPotionEffectToNBT(new NBTTagCompound()));
+			}
+			par1NBTTagCompound.setTag("ActiveEffects", var6);
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityLivingData.java b/RMCClient/minecraft/net/minecraft/src/EntityLivingData.java
new file mode 100644
index 0000000..232ee20
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityLivingData.java
@@ -0,0 +1,5 @@
+package net.minecraft.src;
+
+public interface EntityLivingData
+{
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityLookHelper.java b/RMCClient/minecraft/net/minecraft/src/EntityLookHelper.java
index 9e37d3b..bd24b16 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityLookHelper.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityLookHelper.java
@@ -5,14 +5,14 @@
 	private EntityLiving entity;
 	private float deltaLookYaw;
 	private float deltaLookPitch;
-	private boolean isLooking = false;
+	private boolean isLooking;
 	private double posX;
 	private double posY;
 	private double posZ;
 	
-	public EntityLookHelper(EntityLiving par1EntityLiving)
+	public EntityLookHelper(EntityLiving p_i1613_1_)
 	{
-		entity = par1EntityLiving;
+		entity = p_i1613_1_;
 	}
 	
 	public void onUpdateLook()
@@ -60,7 +60,7 @@
 	public void setLookPositionWithEntity(Entity par1Entity, float par2, float par3)
 	{
 		posX = par1Entity.posX;
-		if(par1Entity instanceof EntityLiving)
+		if(par1Entity instanceof EntityLivingBase)
 		{
 			posY = par1Entity.posY + par1Entity.getEyeHeight();
 		} else
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMagmaCube.java b/RMCClient/minecraft/net/minecraft/src/EntityMagmaCube.java
index b9ef971..ffef991 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMagmaCube.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMagmaCube.java
@@ -2,12 +2,10 @@
 
 public class EntityMagmaCube extends EntitySlime
 {
-	public EntityMagmaCube(World par1World)
+	public EntityMagmaCube(World p_i1737_1_)
 	{
-		super(par1World);
-		texture = "/mob/lava.png";
+		super(p_i1737_1_);
 		isImmuneToFire = true;
-		landMovementFactor = 0.2F;
 	}
 	
 	@Override protected boolean canDamagePlayer()
@@ -41,6 +39,12 @@
 	{
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.20000000298023224D);
+	}
+	
 	@Override protected void func_70808_l()
 	{
 		field_70813_a *= 0.9F;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMinecart.java b/RMCClient/minecraft/net/minecraft/src/EntityMinecart.java
index ed3ff1b..f5dd25e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMinecart.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMinecart.java
@@ -20,26 +20,25 @@
 	private double velocityY;
 	private double velocityZ;
 	
-	public EntityMinecart(World par1World)
+	public EntityMinecart(World p_i1712_1_)
 	{
-		super(par1World);
-		isInReverse = false;
+		super(p_i1712_1_);
 		preventEntitySpawning = true;
 		setSize(0.98F, 0.7F);
 		yOffset = height / 2.0F;
-		field_82344_g = par1World != null ? par1World.func_82735_a(this) : null;
+		field_82344_g = p_i1712_1_ != null ? p_i1712_1_.func_82735_a(this) : null;
 	}
 	
-	public EntityMinecart(World par1World, double par2, double par4, double par6)
+	public EntityMinecart(World p_i1713_1_, double p_i1713_2_, double p_i1713_4_, double p_i1713_6_)
 	{
-		this(par1World);
-		setPosition(par2, par4 + yOffset, par6);
+		this(p_i1713_1_);
+		setPosition(p_i1713_2_, p_i1713_4_, p_i1713_6_);
 		motionX = 0.0D;
 		motionY = 0.0D;
 		motionZ = 0.0D;
-		prevPosX = par2;
-		prevPosY = par4;
-		prevPosZ = par6;
+		prevPosX = p_i1713_2_;
+		prevPosY = p_i1713_4_;
+		prevPosZ = p_i1713_6_;
 	}
 	
 	protected void applyDrag()
@@ -63,7 +62,7 @@
 		{
 			if(par1Entity != riddenByEntity)
 			{
-				if(par1Entity instanceof EntityLiving && !(par1Entity instanceof EntityPlayer) && !(par1Entity instanceof EntityIronGolem) && getMinecartType() == 0 && motionX * motionX + motionZ * motionZ > 0.01D && riddenByEntity == null && par1Entity.ridingEntity == null)
+				if(par1Entity instanceof EntityLivingBase && !(par1Entity instanceof EntityPlayer) && !(par1Entity instanceof EntityIronGolem) && getMinecartType() == 0 && motionX * motionX + motionZ * motionZ > 0.01D && riddenByEntity == null && par1Entity.ridingEntity == null)
 				{
 					par1Entity.mountEntity(this);
 				}
@@ -133,7 +132,7 @@
 		}
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(!worldObj.isRemote && !isDead)
 		{
@@ -143,9 +142,9 @@
 				setRollingDirection(-getRollingDirection());
 				setRollingAmplitude(10);
 				setBeenAttacked();
-				setDamage(getDamage() + par2 * 10);
+				setDamage(getDamage() + par2 * 10.0F);
 				boolean var3 = par1DamageSource.getEntity() instanceof EntityPlayer && ((EntityPlayer) par1DamageSource.getEntity()).capabilities.isCreativeMode;
-				if(var3 || getDamage() > 40)
+				if(var3 || getDamage() > 40.0F)
 				{
 					if(riddenByEntity != null)
 					{
@@ -183,7 +182,7 @@
 	{
 		dataWatcher.addObject(17, new Integer(0));
 		dataWatcher.addObject(18, new Integer(1));
-		dataWatcher.addObject(19, new Integer(0));
+		dataWatcher.addObject(19, new Float(0.0F));
 		dataWatcher.addObject(20, new Integer(0));
 		dataWatcher.addObject(21, new Integer(6));
 		dataWatcher.addObject(22, Byte.valueOf((byte) 0));
@@ -346,9 +345,9 @@
 		return par1Entity.canBePushed() ? par1Entity.boundingBox : null;
 	}
 	
-	public int getDamage()
+	public float getDamage()
 	{
-		return dataWatcher.getWatchableObjectInt(19);
+		return dataWatcher.func_111145_d(19);
 	}
 	
 	public Block getDefaultDisplayTile()
@@ -448,9 +447,9 @@
 		{
 			setRollingAmplitude(getRollingAmplitude() - 1);
 		}
-		if(getDamage() > 0)
+		if(getDamage() > 0.0F)
 		{
-			setDamage(getDamage() - 1);
+			setDamage(getDamage() - 1.0F);
 		}
 		if(posY < -64.0D)
 		{
@@ -591,7 +590,7 @@
 	{
 		setRollingDirection(-getRollingDirection());
 		setRollingAmplitude(10);
-		setDamage(getDamage() + getDamage() * 10);
+		setDamage(getDamage() + getDamage() * 10.0F);
 	}
 	
 	@Override protected void readEntityFromNBT(NBTTagCompound par1NBTTagCompound)
@@ -608,9 +607,9 @@
 		}
 	}
 	
-	public void setDamage(int par1)
+	public void setDamage(float par1)
 	{
-		dataWatcher.updateObject(19, Integer.valueOf(par1));
+		dataWatcher.updateObject(19, Float.valueOf(par1));
 	}
 	
 	@Override public void setDead()
@@ -732,15 +731,22 @@
 		motionZ = var22 * var16 / var18;
 		double var24;
 		double var26;
-		if(riddenByEntity != null)
+		double var28;
+		double var30;
+		if(riddenByEntity != null && riddenByEntity instanceof EntityLivingBase)
 		{
-			var24 = riddenByEntity.motionX * riddenByEntity.motionX + riddenByEntity.motionZ * riddenByEntity.motionZ;
-			var26 = motionX * motionX + motionZ * motionZ;
-			if(var24 > 1.0E-4D && var26 < 0.01D)
+			var24 = ((EntityLivingBase) riddenByEntity).moveForward;
+			if(var24 > 0.0D)
 			{
-				motionX += riddenByEntity.motionX * 0.1D;
-				motionZ += riddenByEntity.motionZ * 0.1D;
-				var12 = false;
+				var26 = -Math.sin(riddenByEntity.rotationYaw * (float) Math.PI / 180.0F);
+				var28 = Math.cos(riddenByEntity.rotationYaw * (float) Math.PI / 180.0F);
+				var30 = motionX * motionX + motionZ * motionZ;
+				if(var30 < 0.01D)
+				{
+					motionX += var26 * 0.1D;
+					motionZ += var28 * 0.1D;
+					var12 = false;
+				}
 			}
 		}
 		if(var12)
@@ -760,8 +766,8 @@
 		}
 		var24 = 0.0D;
 		var26 = par1 + 0.5D + var13[0][0] * 0.5D;
-		double var28 = par3 + 0.5D + var13[0][2] * 0.5D;
-		double var30 = par1 + 0.5D + var13[1][0] * 0.5D;
+		var28 = par3 + 0.5D + var13[0][2] * 0.5D;
+		var30 = par1 + 0.5D + var13[1][0] * 0.5D;
 		double var32 = par3 + 0.5D + var13[1][2] * 0.5D;
 		var14 = var30 - var26;
 		var16 = var32 - var28;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMinecartChest.java b/RMCClient/minecraft/net/minecraft/src/EntityMinecartChest.java
index d3aee97..6a25e7b 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMinecartChest.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMinecartChest.java
@@ -2,14 +2,14 @@
 
 public class EntityMinecartChest extends EntityMinecartContainer
 {
-	public EntityMinecartChest(World par1World)
+	public EntityMinecartChest(World p_i1714_1_)
 	{
-		super(par1World);
+		super(p_i1714_1_);
 	}
 	
-	public EntityMinecartChest(World par1, double par2, double par4, double par6)
+	public EntityMinecartChest(World p_i1715_1_, double p_i1715_2_, double p_i1715_4_, double p_i1715_6_)
 	{
-		super(par1, par2, par4, par6);
+		super(p_i1715_1_, p_i1715_2_, p_i1715_4_, p_i1715_6_);
 	}
 	
 	@Override public Block getDefaultDisplayTile()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMinecartContainer.java b/RMCClient/minecraft/net/minecraft/src/EntityMinecartContainer.java
index 50ff309..dcdbd91 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMinecartContainer.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMinecartContainer.java
@@ -5,14 +5,14 @@
 	private ItemStack[] minecartContainerItems = new ItemStack[36];
 	private boolean dropContentsWhenDead = true;
 	
-	public EntityMinecartContainer(World par1World)
+	public EntityMinecartContainer(World p_i1716_1_)
 	{
-		super(par1World);
+		super(p_i1716_1_);
 	}
 	
-	public EntityMinecartContainer(World par1World, double par2, double par4, double par6)
+	public EntityMinecartContainer(World p_i1717_1_, double p_i1717_2_, double p_i1717_4_, double p_i1717_6_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1717_1_, p_i1717_2_, p_i1717_4_, p_i1717_6_);
 	}
 	
 	@Override protected void applyDrag()
@@ -50,6 +50,15 @@
 		} else return null;
 	}
 	
+	@Override public boolean func_130002_c(EntityPlayer p_130002_1_)
+	{
+		if(!worldObj.isRemote)
+		{
+			p_130002_1_.displayGUIChest(this);
+		}
+		return true;
+	}
+	
 	@Override public int getInventoryStackLimit()
 	{
 		return 64;
@@ -73,15 +82,6 @@
 			minecartContainerItems[par1] = null;
 			return var2;
 		} else return null;
-	}
-	
-	@Override public boolean interact(EntityPlayer par1EntityPlayer)
-	{
-		if(!worldObj.isRemote)
-		{
-			par1EntityPlayer.displayGUIChest(this);
-		}
-		return true;
 	}
 	
 	@Override public boolean isStackValidForSlot(int par1, ItemStack par2ItemStack)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMinecartEmpty.java b/RMCClient/minecraft/net/minecraft/src/EntityMinecartEmpty.java
index 1cd88f5..2e77554 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMinecartEmpty.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMinecartEmpty.java
@@ -2,32 +2,32 @@
 
 public class EntityMinecartEmpty extends EntityMinecart
 {
-	public EntityMinecartEmpty(World par1World)
+	public EntityMinecartEmpty(World p_i1722_1_)
 	{
-		super(par1World);
+		super(p_i1722_1_);
 	}
 	
-	public EntityMinecartEmpty(World par1, double par2, double par4, double par6)
+	public EntityMinecartEmpty(World p_i1723_1_, double p_i1723_2_, double p_i1723_4_, double p_i1723_6_)
 	{
-		super(par1, par2, par4, par6);
+		super(p_i1723_1_, p_i1723_2_, p_i1723_4_, p_i1723_6_);
+	}
+	
+	@Override public boolean func_130002_c(EntityPlayer p_130002_1_)
+	{
+		if(riddenByEntity != null && riddenByEntity instanceof EntityPlayer && riddenByEntity != p_130002_1_) return true;
+		else if(riddenByEntity != null && riddenByEntity != p_130002_1_) return false;
+		else
+		{
+			if(!worldObj.isRemote)
+			{
+				p_130002_1_.mountEntity(this);
+			}
+			return true;
+		}
 	}
 	
 	@Override public int getMinecartType()
 	{
 		return 0;
-	}
-	
-	@Override public boolean interact(EntityPlayer par1EntityPlayer)
-	{
-		if(riddenByEntity != null && riddenByEntity instanceof EntityPlayer && riddenByEntity != par1EntityPlayer) return true;
-		else if(riddenByEntity != null && riddenByEntity != par1EntityPlayer) return false;
-		else
-		{
-			if(!worldObj.isRemote)
-			{
-				par1EntityPlayer.mountEntity(this);
-			}
-			return true;
-		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMinecartFurnace.java b/RMCClient/minecraft/net/minecraft/src/EntityMinecartFurnace.java
index 6954192..e493c0b 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMinecartFurnace.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMinecartFurnace.java
@@ -2,18 +2,18 @@
 
 public class EntityMinecartFurnace extends EntityMinecart
 {
-	private int fuel = 0;
+	private int fuel;
 	public double pushX;
 	public double pushZ;
 	
-	public EntityMinecartFurnace(World par1World)
+	public EntityMinecartFurnace(World p_i1718_1_)
 	{
-		super(par1World);
+		super(p_i1718_1_);
 	}
 	
-	public EntityMinecartFurnace(World par1World, double par2, double par4, double par6)
+	public EntityMinecartFurnace(World p_i1719_1_, double p_i1719_2_, double p_i1719_4_, double p_i1719_6_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1719_1_, p_i1719_2_, p_i1719_4_, p_i1719_6_);
 	}
 	
 	@Override protected void applyDrag()
@@ -45,6 +45,22 @@
 		dataWatcher.addObject(16, new Byte((byte) 0));
 	}
 	
+	@Override public boolean func_130002_c(EntityPlayer p_130002_1_)
+	{
+		ItemStack var2 = p_130002_1_.inventory.getCurrentItem();
+		if(var2 != null && var2.itemID == Item.coal.itemID)
+		{
+			if(!p_130002_1_.capabilities.isCreativeMode && --var2.stackSize == 0)
+			{
+				p_130002_1_.inventory.setInventorySlotContents(p_130002_1_.inventory.currentItem, (ItemStack) null);
+			}
+			fuel += 3600;
+		}
+		pushX = posX - p_130002_1_.posX;
+		pushZ = posZ - p_130002_1_.posZ;
+		return true;
+	}
+	
 	@Override public Block getDefaultDisplayTile()
 	{
 		return Block.furnaceBurning;
@@ -58,22 +74,6 @@
 	@Override public int getMinecartType()
 	{
 		return 2;
-	}
-	
-	@Override public boolean interact(EntityPlayer par1EntityPlayer)
-	{
-		ItemStack var2 = par1EntityPlayer.inventory.getCurrentItem();
-		if(var2 != null && var2.itemID == Item.coal.itemID)
-		{
-			if(--var2.stackSize == 0)
-			{
-				par1EntityPlayer.inventory.setInventorySlotContents(par1EntityPlayer.inventory.currentItem, (ItemStack) null);
-			}
-			fuel += 3600;
-		}
-		pushX = posX - par1EntityPlayer.posX;
-		pushZ = posZ - par1EntityPlayer.posZ;
-		return true;
 	}
 	
 	protected boolean isMinecartPowered()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMinecartHopper.java b/RMCClient/minecraft/net/minecraft/src/EntityMinecartHopper.java
index 9cf7eba..1ae8907 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMinecartHopper.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMinecartHopper.java
@@ -7,19 +7,28 @@
 	private boolean isBlocked = true;
 	private int transferTicker = -1;
 	
-	public EntityMinecartHopper(World par1World)
+	public EntityMinecartHopper(World p_i1720_1_)
 	{
-		super(par1World);
+		super(p_i1720_1_);
 	}
 	
-	public EntityMinecartHopper(World par1World, double par2, double par4, double par6)
+	public EntityMinecartHopper(World p_i1721_1_, double p_i1721_2_, double p_i1721_4_, double p_i1721_6_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1721_1_, p_i1721_2_, p_i1721_4_, p_i1721_6_);
 	}
 	
 	public boolean canTransfer()
 	{
 		return transferTicker > 0;
+	}
+	
+	@Override public boolean func_130002_c(EntityPlayer p_130002_1_)
+	{
+		if(!worldObj.isRemote)
+		{
+			p_130002_1_.displayGUIHopperMinecart(this);
+		}
+		return true;
 	}
 	
 	public boolean func_96112_aD()
@@ -79,15 +88,6 @@
 	@Override public double getZPos()
 	{
 		return posZ;
-	}
-	
-	@Override public boolean interact(EntityPlayer par1EntityPlayer)
-	{
-		if(!worldObj.isRemote)
-		{
-			par1EntityPlayer.displayGUIHopperMinecart(this);
-		}
-		return true;
 	}
 	
 	@Override public void killMinecart(DamageSource par1DamageSource)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMinecartMobSpawner.java b/RMCClient/minecraft/net/minecraft/src/EntityMinecartMobSpawner.java
index 77707be..b6d78fb 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMinecartMobSpawner.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMinecartMobSpawner.java
@@ -4,14 +4,14 @@
 {
 	private final MobSpawnerBaseLogic mobSpawnerLogic = new EntityMinecartMobSpawnerLogic(this);
 	
-	public EntityMinecartMobSpawner(World par1World)
+	public EntityMinecartMobSpawner(World p_i1725_1_)
 	{
-		super(par1World);
+		super(p_i1725_1_);
 	}
 	
-	public EntityMinecartMobSpawner(World par1World, double par2, double par4, double par6)
+	public EntityMinecartMobSpawner(World p_i1726_1_, double p_i1726_2_, double p_i1726_4_, double p_i1726_6_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1726_1_, p_i1726_2_, p_i1726_4_, p_i1726_6_);
 	}
 	
 	public MobSpawnerBaseLogic func_98039_d()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMinecartMobSpawnerLogic.java b/RMCClient/minecraft/net/minecraft/src/EntityMinecartMobSpawnerLogic.java
index 9c7bf68..4fc5b40 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMinecartMobSpawnerLogic.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMinecartMobSpawnerLogic.java
@@ -4,9 +4,9 @@
 {
 	final EntityMinecartMobSpawner spawnerMinecart;
 	
-	EntityMinecartMobSpawnerLogic(EntityMinecartMobSpawner par1EntityMinecartMobSpawner)
+	EntityMinecartMobSpawnerLogic(EntityMinecartMobSpawner p_i1724_1_)
 	{
-		spawnerMinecart = par1EntityMinecartMobSpawner;
+		spawnerMinecart = p_i1724_1_;
 	}
 	
 	@Override public void func_98267_a(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMinecartTNT.java b/RMCClient/minecraft/net/minecraft/src/EntityMinecartTNT.java
index 3717b32..95a37c7 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMinecartTNT.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMinecartTNT.java
@@ -4,14 +4,14 @@
 {
 	private int minecartTNTFuse = -1;
 	
-	public EntityMinecartTNT(World par1)
+	public EntityMinecartTNT(World p_i1727_1_)
 	{
-		super(par1);
+		super(p_i1727_1_);
 	}
 	
-	public EntityMinecartTNT(World par1, double par2, double par4, double par6)
+	public EntityMinecartTNT(World p_i1728_1_, double p_i1728_2_, double p_i1728_4_, double p_i1728_6_)
 	{
-		super(par1, par2, par4, par6);
+		super(p_i1728_1_, p_i1728_2_, p_i1728_4_, p_i1728_6_);
 	}
 	
 	protected void explodeCart(double par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMob.java b/RMCClient/minecraft/net/minecraft/src/EntityMob.java
index ef74398..339e336 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMob.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMob.java
@@ -2,9 +2,9 @@
 
 public abstract class EntityMob extends EntityCreature implements IMob
 {
-	public EntityMob(World par1World)
+	public EntityMob(World p_i1738_1_)
 	{
-		super(par1World);
+		super(p_i1738_1_);
 		experienceValue = 5;
 	}
 	
@@ -19,20 +19,12 @@
 	
 	@Override public boolean attackEntityAsMob(Entity par1Entity)
 	{
-		int var2 = getAttackStrength(par1Entity);
-		if(this.isPotionActive(Potion.damageBoost))
-		{
-			var2 += 3 << getActivePotionEffect(Potion.damageBoost).getAmplifier();
-		}
-		if(this.isPotionActive(Potion.weakness))
-		{
-			var2 -= 2 << getActivePotionEffect(Potion.weakness).getAmplifier();
-		}
+		float var2 = (float) func_110148_a(SharedMonsterAttributes.field_111264_e).func_111126_e();
 		int var3 = 0;
-		if(par1Entity instanceof EntityLiving)
+		if(par1Entity instanceof EntityLivingBase)
 		{
-			var2 += EnchantmentHelper.getEnchantmentModifierLiving(this, (EntityLiving) par1Entity);
-			var3 += EnchantmentHelper.getKnockbackModifier(this, (EntityLiving) par1Entity);
+			var2 += EnchantmentHelper.getEnchantmentModifierLiving(this, (EntityLivingBase) par1Entity);
+			var3 += EnchantmentHelper.getKnockbackModifier(this, (EntityLivingBase) par1Entity);
 		}
 		boolean var4 = par1Entity.attackEntityFrom(DamageSource.causeMobDamage(this), var2);
 		if(var4)
@@ -48,15 +40,15 @@
 			{
 				par1Entity.setFire(var5 * 4);
 			}
-			if(par1Entity instanceof EntityLiving)
+			if(par1Entity instanceof EntityLivingBase)
 			{
-				EnchantmentThorns.func_92096_a(this, (EntityLiving) par1Entity, rand);
+				EnchantmentThorns.func_92096_a(this, (EntityLivingBase) par1Entity, rand);
 			}
 		}
 		return var4;
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else if(super.attackEntityFrom(par1DamageSource, par2))
@@ -79,9 +71,10 @@
 		return var1 != null && canEntityBeSeen(var1) ? var1 : null;
 	}
 	
-	public int getAttackStrength(Entity par1Entity)
+	@Override protected void func_110147_ax()
 	{
-		return 2;
+		super.func_110147_ax();
+		func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111264_e);
 	}
 	
 	@Override public float getBlockPathWeight(int par1, int par2, int par3)
@@ -91,7 +84,7 @@
 	
 	@Override public boolean getCanSpawnHere()
 	{
-		return isValidLightLevel() && super.getCanSpawnHere();
+		return worldObj.difficultySetting > 0 && isValidLightLevel() && super.getCanSpawnHere();
 	}
 	
 	protected boolean isValidLightLevel()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMooshroom.java b/RMCClient/minecraft/net/minecraft/src/EntityMooshroom.java
index 74d933d..71750b7 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMooshroom.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMooshroom.java
@@ -2,10 +2,9 @@
 
 public class EntityMooshroom extends EntityCow
 {
-	public EntityMooshroom(World par1World)
+	public EntityMooshroom(World p_i1687_1_)
 	{
-		super(par1World);
-		texture = "/mob/redcow.png";
+		super(p_i1687_1_);
 		setSize(0.9F, 1.3F);
 	}
 	
@@ -43,7 +42,7 @@
 			{
 				EntityCow var3 = new EntityCow(worldObj);
 				var3.setLocationAndAngles(posX, posY, posZ, rotationYaw, rotationPitch);
-				var3.setEntityHealth(getHealth());
+				var3.setEntityHealth(func_110143_aJ());
 				var3.renderYawOffset = renderYawOffset;
 				worldObj.spawnEntityInWorld(var3);
 				for(int var4 = 0; var4 < 5; ++var4)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityMoveHelper.java b/RMCClient/minecraft/net/minecraft/src/EntityMoveHelper.java
index c134064..c0d5a05 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityMoveHelper.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityMoveHelper.java
@@ -6,18 +6,18 @@
 	private double posX;
 	private double posY;
 	private double posZ;
-	private float speed;
-	private boolean update = false;
+	private double speed;
+	private boolean update;
 	
-	public EntityMoveHelper(EntityLiving par1EntityLiving)
+	public EntityMoveHelper(EntityLiving p_i1614_1_)
 	{
-		entity = par1EntityLiving;
-		posX = par1EntityLiving.posX;
-		posY = par1EntityLiving.posY;
-		posZ = par1EntityLiving.posZ;
+		entity = p_i1614_1_;
+		posX = p_i1614_1_.posX;
+		posY = p_i1614_1_.posY;
+		posZ = p_i1614_1_.posZ;
 	}
 	
-	public float getSpeed()
+	public double getSpeed()
 	{
 		return speed;
 	}
@@ -56,7 +56,7 @@
 			{
 				float var10 = (float) (Math.atan2(var4, var2) * 180.0D / Math.PI) - 90.0F;
 				entity.rotationYaw = limitAngle(entity.rotationYaw, var10, 30.0F);
-				entity.setAIMoveSpeed(speed * entity.getSpeedModifier());
+				entity.setAIMoveSpeed((float) (speed * entity.func_110148_a(SharedMonsterAttributes.field_111263_d).func_111126_e()));
 				if(var6 > 0.0D && var2 * var2 + var4 * var4 < 1.0D)
 				{
 					entity.getJumpHelper().setJumping();
@@ -65,7 +65,7 @@
 		}
 	}
 	
-	public void setMoveTo(double par1, double par3, double par5, float par7)
+	public void setMoveTo(double par1, double par3, double par5, double par7)
 	{
 		posX = par1;
 		posY = par3;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityNoteFX.java b/RMCClient/minecraft/net/minecraft/src/EntityNoteFX.java
index 156904f..b060be0 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityNoteFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityNoteFX.java
@@ -4,23 +4,23 @@
 {
 	float noteParticleScale;
 	
-	public EntityNoteFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityNoteFX(World p_i1216_1_, double p_i1216_2_, double p_i1216_4_, double p_i1216_6_, double p_i1216_8_, double p_i1216_10_, double p_i1216_12_)
 	{
-		this(par1World, par2, par4, par6, par8, par10, par12, 2.0F);
+		this(p_i1216_1_, p_i1216_2_, p_i1216_4_, p_i1216_6_, p_i1216_8_, p_i1216_10_, p_i1216_12_, 2.0F);
 	}
 	
-	public EntityNoteFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, float par14)
+	public EntityNoteFX(World p_i1217_1_, double p_i1217_2_, double p_i1217_4_, double p_i1217_6_, double p_i1217_8_, double p_i1217_10_, double p_i1217_12_, float p_i1217_14_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		super(p_i1217_1_, p_i1217_2_, p_i1217_4_, p_i1217_6_, 0.0D, 0.0D, 0.0D);
 		motionX *= 0.009999999776482582D;
 		motionY *= 0.009999999776482582D;
 		motionZ *= 0.009999999776482582D;
 		motionY += 0.2D;
-		particleRed = MathHelper.sin(((float) par8 + 0.0F) * (float) Math.PI * 2.0F) * 0.65F + 0.35F;
-		particleGreen = MathHelper.sin(((float) par8 + 0.33333334F) * (float) Math.PI * 2.0F) * 0.65F + 0.35F;
-		particleBlue = MathHelper.sin(((float) par8 + 0.6666667F) * (float) Math.PI * 2.0F) * 0.65F + 0.35F;
+		particleRed = MathHelper.sin(((float) p_i1217_8_ + 0.0F) * (float) Math.PI * 2.0F) * 0.65F + 0.35F;
+		particleGreen = MathHelper.sin(((float) p_i1217_8_ + 0.33333334F) * (float) Math.PI * 2.0F) * 0.65F + 0.35F;
+		particleBlue = MathHelper.sin(((float) p_i1217_8_ + 0.6666667F) * (float) Math.PI * 2.0F) * 0.65F + 0.35F;
 		particleScale *= 0.75F;
-		particleScale *= par14;
+		particleScale *= p_i1217_14_;
 		noteParticleScale = particleScale;
 		particleMaxAge = 6;
 		noClip = false;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityOcelot.java b/RMCClient/minecraft/net/minecraft/src/EntityOcelot.java
index 021ba9c..5d87344 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityOcelot.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityOcelot.java
@@ -4,32 +4,31 @@
 {
 	private EntityAITempt aiTempt;
 	
-	public EntityOcelot(World par1World)
+	public EntityOcelot(World p_i1688_1_)
 	{
-		super(par1World);
-		texture = "/mob/ozelot.png";
+		super(p_i1688_1_);
 		setSize(0.6F, 0.8F);
 		getNavigator().setAvoidsWater(true);
 		tasks.addTask(1, new EntityAISwimming(this));
 		tasks.addTask(2, aiSit);
-		tasks.addTask(3, aiTempt = new EntityAITempt(this, 0.18F, Item.fishRaw.itemID, true));
-		tasks.addTask(4, new EntityAIAvoidEntity(this, EntityPlayer.class, 16.0F, 0.23F, 0.4F));
-		tasks.addTask(5, new EntityAIFollowOwner(this, 0.3F, 10.0F, 5.0F));
-		tasks.addTask(6, new EntityAIOcelotSit(this, 0.4F));
+		tasks.addTask(3, aiTempt = new EntityAITempt(this, 0.6D, Item.fishRaw.itemID, true));
+		tasks.addTask(4, new EntityAIAvoidEntity(this, EntityPlayer.class, 16.0F, 0.8D, 1.33D));
+		tasks.addTask(5, new EntityAIFollowOwner(this, 1.0D, 10.0F, 5.0F));
+		tasks.addTask(6, new EntityAIOcelotSit(this, 1.33D));
 		tasks.addTask(7, new EntityAILeapAtTarget(this, 0.3F));
 		tasks.addTask(8, new EntityAIOcelotAttack(this));
-		tasks.addTask(9, new EntityAIMate(this, 0.23F));
-		tasks.addTask(10, new EntityAIWander(this, 0.23F));
+		tasks.addTask(9, new EntityAIMate(this, 0.8D));
+		tasks.addTask(10, new EntityAIWander(this, 0.8D));
 		tasks.addTask(11, new EntityAIWatchClosest(this, EntityPlayer.class, 10.0F));
-		targetTasks.addTask(1, new EntityAITargetNonTamed(this, EntityChicken.class, 14.0F, 750, false));
+		targetTasks.addTask(1, new EntityAITargetNonTamed(this, EntityChicken.class, 750, false));
 	}
 	
 	@Override public boolean attackEntityAsMob(Entity par1Entity)
 	{
-		return par1Entity.attackEntityFrom(DamageSource.causeMobDamage(this), 3);
+		return par1Entity.attackEntityFrom(DamageSource.causeMobDamage(this), 3.0F);
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -41,7 +40,7 @@
 	
 	@Override protected boolean canDespawn()
 	{
-		return !isTamed();
+		return !isTamed() && ticksExisted > 2400;
 	}
 	
 	@Override public boolean canMateWith(EntityAnimal par1EntityAnimal)
@@ -73,6 +72,29 @@
 	
 	@Override protected void fall(float par1)
 	{
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(10.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.30000001192092896D);
+	}
+	
+	@Override public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
+	{
+		p_110161_1_ = super.func_110161_a(p_110161_1_);
+		if(worldObj.rand.nextInt(7) == 0)
+		{
+			for(int var2 = 0; var2 < 2; ++var2)
+			{
+				EntityOcelot var3 = new EntityOcelot(worldObj);
+				var3.setLocationAndAngles(posX, posY, posZ, rotationYaw, 0.0F);
+				var3.setGrowingAge(-24000);
+				worldObj.spawnEntityInWorld(var3);
+			}
+		}
+		return p_110161_1_;
 	}
 	
 	@Override public boolean getCanSpawnHere()
@@ -118,11 +140,6 @@
 		return isTamed() ? isInLove() ? "mob.cat.purr" : rand.nextInt(4) == 0 ? "mob.cat.purreow" : "mob.cat.meow" : "";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 10;
-	}
-	
 	@Override protected float getSoundVolume()
 	{
 		return 0.4F;
@@ -133,43 +150,12 @@
 		return dataWatcher.getWatchableObjectByte(18);
 	}
 	
-	@Override public String getTexture()
-	{
-		switch(getTameSkin())
-		{
-			case 0:
-				return "/mob/ozelot.png";
-			case 1:
-				return "/mob/cat_black.png";
-			case 2:
-				return "/mob/cat_red.png";
-			case 3:
-				return "/mob/cat_siamese.png";
-			default:
-				return super.getTexture();
-		}
-	}
-	
-	@Override public void initCreature()
-	{
-		if(worldObj.rand.nextInt(7) == 0)
-		{
-			for(int var1 = 0; var1 < 2; ++var1)
-			{
-				EntityOcelot var2 = new EntityOcelot(worldObj);
-				var2.setLocationAndAngles(posX, posY, posZ, rotationYaw, 0.0F);
-				var2.setGrowingAge(-24000);
-				worldObj.spawnEntityInWorld(var2);
-			}
-		}
-	}
-	
 	@Override public boolean interact(EntityPlayer par1EntityPlayer)
 	{
 		ItemStack var2 = par1EntityPlayer.inventory.getCurrentItem();
 		if(isTamed())
 		{
-			if(par1EntityPlayer.username.equalsIgnoreCase(getOwnerName()) && !worldObj.isRemote && !isBreedingItem(var2))
+			if(par1EntityPlayer.getCommandSenderName().equalsIgnoreCase(getOwnerName()) && !worldObj.isRemote && !isBreedingItem(var2))
 			{
 				aiSit.setSitting(!isSitting());
 			}
@@ -189,7 +175,7 @@
 				{
 					setTamed(true);
 					setTameSkin(1 + worldObj.rand.nextInt(3));
-					setOwner(par1EntityPlayer.username);
+					setOwner(par1EntityPlayer.getCommandSenderName());
 					playTameEffect(true);
 					aiSit.setSitting(true);
 					worldObj.setEntityState(this, (byte) 7);
@@ -241,12 +227,12 @@
 	{
 		if(getMoveHelper().isUpdating())
 		{
-			float var1 = getMoveHelper().getSpeed();
-			if(var1 == 0.18F)
+			double var1 = getMoveHelper().getSpeed();
+			if(var1 == 0.6D)
 			{
 				setSneaking(true);
 				setSprinting(false);
-			} else if(var1 == 0.4F)
+			} else if(var1 == 1.33D)
 			{
 				setSneaking(false);
 				setSprinting(true);
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityOtherPlayerMP.java b/RMCClient/minecraft/net/minecraft/src/EntityOtherPlayerMP.java
index 08f9df2..a4a7dae 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityOtherPlayerMP.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityOtherPlayerMP.java
@@ -2,9 +2,9 @@
 
 import net.minecraft.client.Minecraft;
 
-public class EntityOtherPlayerMP extends EntityPlayer
+public class EntityOtherPlayerMP extends AbstractClientPlayer
 {
-	private boolean isItemInUse = false;
+	private boolean isItemInUse;
 	private int otherPlayerMPPosRotationIncrements;
 	private double otherPlayerMPX;
 	private double otherPlayerMPY;
@@ -12,22 +12,17 @@
 	private double otherPlayerMPYaw;
 	private double otherPlayerMPPitch;
 	
-	public EntityOtherPlayerMP(World par1World, String par2Str)
+	public EntityOtherPlayerMP(World p_i1239_1_, String p_i1239_2_)
 	{
-		super(par1World);
-		username = par2Str;
+		super(p_i1239_1_, p_i1239_2_);
 		yOffset = 0.0F;
 		stepHeight = 0.0F;
-		if(par2Str != null && par2Str.length() > 0)
-		{
-			skinUrl = "http://skins.minecraft.net/MinecraftSkins/" + StringUtils.stripControlCodes(par2Str) + ".png";
-		}
 		noClip = true;
 		field_71082_cx = 0.25F;
 		renderDistanceWeight = 10.0D;
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		return true;
 	}
@@ -82,11 +77,11 @@
 		{
 			var9 = 0.1F;
 		}
-		if(!onGround || getHealth() <= 0)
+		if(!onGround || func_110143_aJ() <= 0.0F)
 		{
 			var9 = 0.0F;
 		}
-		if(onGround || getHealth() <= 0)
+		if(onGround || func_110143_aJ() <= 0.0F)
 		{
 			var2 = 0.0F;
 		}
@@ -125,9 +120,9 @@
 		yOffset = 0.0F;
 	}
 	
-	@Override public void sendChatToPlayer(String par1Str)
+	@Override public void sendChatToPlayer(ChatMessageComponent par1Str)
 	{
-		Minecraft.getMinecraft().ingameGUI.getChatGUI().printChatMessage(par1Str);
+		Minecraft.getMinecraft().ingameGUI.getChatGUI().printChatMessage(par1Str.func_111068_a(true));
 	}
 	
 	@Override public void setCurrentItemOrArmor(int par1, ItemStack par2ItemStack)
@@ -149,10 +144,5 @@
 		otherPlayerMPYaw = par7;
 		otherPlayerMPPitch = par8;
 		otherPlayerMPPosRotationIncrements = par9;
-	}
-	
-	@Override public void updateCloak()
-	{
-		cloakUrl = "http://skins.minecraft.net/MinecraftCloaks/" + StringUtils.stripControlCodes(username) + ".png";
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityOwnable.java b/RMCClient/minecraft/net/minecraft/src/EntityOwnable.java
new file mode 100644
index 0000000..c5262d1
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityOwnable.java
@@ -0,0 +1,8 @@
+package net.minecraft.src;
+
+public interface EntityOwnable
+{
+	Entity getOwner();
+	
+	String getOwnerName();
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityPainting.java b/RMCClient/minecraft/net/minecraft/src/EntityPainting.java
index 57a37dd..add4a48 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityPainting.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityPainting.java
@@ -6,14 +6,14 @@
 {
 	public EnumArt art;
 	
-	public EntityPainting(World par1World)
+	public EntityPainting(World p_i1599_1_)
 	{
-		super(par1World);
+		super(p_i1599_1_);
 	}
 	
-	public EntityPainting(World par1World, int par2, int par3, int par4, int par5)
+	public EntityPainting(World p_i1600_1_, int p_i1600_2_, int p_i1600_3_, int p_i1600_4_, int p_i1600_5_)
 	{
-		super(par1World, par2, par3, par4, par5);
+		super(p_i1600_1_, p_i1600_2_, p_i1600_3_, p_i1600_4_, p_i1600_5_);
 		ArrayList var6 = new ArrayList();
 		EnumArt[] var7 = EnumArt.values();
 		int var8 = var7.length;
@@ -21,7 +21,7 @@
 		{
 			EnumArt var10 = var7[var9];
 			art = var10;
-			setDirection(par5);
+			setDirection(p_i1600_5_);
 			if(onValidSurface())
 			{
 				var6.add(var10);
@@ -31,28 +31,33 @@
 		{
 			art = (EnumArt) var6.get(rand.nextInt(var6.size()));
 		}
-		setDirection(par5);
+		setDirection(p_i1600_5_);
 	}
 	
-	public EntityPainting(World par1World, int par2, int par3, int par4, int par5, String par6Str)
+	public EntityPainting(World p_i1601_1_, int p_i1601_2_, int p_i1601_3_, int p_i1601_4_, int p_i1601_5_, String p_i1601_6_)
 	{
-		this(par1World, par2, par3, par4, par5);
+		this(p_i1601_1_, p_i1601_2_, p_i1601_3_, p_i1601_4_, p_i1601_5_);
 		EnumArt[] var7 = EnumArt.values();
 		int var8 = var7.length;
 		for(int var9 = 0; var9 < var8; ++var9)
 		{
 			EnumArt var10 = var7[var9];
-			if(var10.title.equals(par6Str))
+			if(var10.title.equals(p_i1601_6_))
 			{
 				art = var10;
 				break;
 			}
 		}
-		setDirection(par5);
+		setDirection(p_i1601_5_);
 	}
 	
-	@Override public void dropItemStack()
+	@Override public void func_110128_b(Entity p_110128_1_)
 	{
+		if(p_110128_1_ instanceof EntityPlayer)
+		{
+			EntityPlayer var2 = (EntityPlayer) p_110128_1_;
+			if(var2.capabilities.isCreativeMode) return;
+		}
 		entityDropItem(new ItemStack(Item.painting), 0.0F);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityPickupFX.java b/RMCClient/minecraft/net/minecraft/src/EntityPickupFX.java
index 77d020e..a791453 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityPickupFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityPickupFX.java
@@ -6,17 +6,17 @@
 {
 	private Entity entityToPickUp;
 	private Entity entityPickingUp;
-	private int age = 0;
-	private int maxAge = 0;
+	private int age;
+	private int maxAge;
 	private float yOffs;
 	
-	public EntityPickupFX(World par1World, Entity par2Entity, Entity par3Entity, float par4)
+	public EntityPickupFX(World p_i1233_1_, Entity p_i1233_2_, Entity p_i1233_3_, float p_i1233_4_)
 	{
-		super(par1World, par2Entity.posX, par2Entity.posY, par2Entity.posZ, par2Entity.motionX, par2Entity.motionY, par2Entity.motionZ);
-		entityToPickUp = par2Entity;
-		entityPickingUp = par3Entity;
+		super(p_i1233_1_, p_i1233_2_.posX, p_i1233_2_.posY, p_i1233_2_.posZ, p_i1233_2_.motionX, p_i1233_2_.motionY, p_i1233_2_.motionZ);
+		entityToPickUp = p_i1233_2_;
+		entityPickingUp = p_i1233_3_;
 		maxAge = 3;
-		yOffs = par4;
+		yOffs = p_i1233_4_;
 	}
 	
 	@Override public int getFXLayer()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityPig.java b/RMCClient/minecraft/net/minecraft/src/EntityPig.java
index db48a88..864e661 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityPig.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityPig.java
@@ -4,21 +4,19 @@
 {
 	private final EntityAIControlledByPlayer aiControlledByPlayer;
 	
-	public EntityPig(World par1World)
+	public EntityPig(World p_i1689_1_)
 	{
-		super(par1World);
-		texture = "/mob/pig.png";
+		super(p_i1689_1_);
 		setSize(0.9F, 0.9F);
 		getNavigator().setAvoidsWater(true);
-		float var2 = 0.25F;
 		tasks.addTask(0, new EntityAISwimming(this));
-		tasks.addTask(1, new EntityAIPanic(this, 0.38F));
-		tasks.addTask(2, aiControlledByPlayer = new EntityAIControlledByPlayer(this, 0.34F));
-		tasks.addTask(3, new EntityAIMate(this, var2));
-		tasks.addTask(4, new EntityAITempt(this, 0.3F, Item.carrotOnAStick.itemID, false));
-		tasks.addTask(4, new EntityAITempt(this, 0.3F, Item.carrot.itemID, false));
-		tasks.addTask(5, new EntityAIFollowParent(this, 0.28F));
-		tasks.addTask(6, new EntityAIWander(this, var2));
+		tasks.addTask(1, new EntityAIPanic(this, 1.25D));
+		tasks.addTask(2, aiControlledByPlayer = new EntityAIControlledByPlayer(this, 0.3F));
+		tasks.addTask(3, new EntityAIMate(this, 1.0D));
+		tasks.addTask(4, new EntityAITempt(this, 1.2D, Item.carrotOnAStick.itemID, false));
+		tasks.addTask(4, new EntityAITempt(this, 1.2D, Item.carrot.itemID, false));
+		tasks.addTask(5, new EntityAIFollowParent(this, 1.1D));
+		tasks.addTask(6, new EntityAIWander(this, 1.0D));
 		tasks.addTask(7, new EntityAIWatchClosest(this, EntityPlayer.class, 6.0F));
 		tasks.addTask(8, new EntityAILookIdle(this));
 	}
@@ -68,6 +66,13 @@
 		}
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(10.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.25D);
+	}
+	
 	public EntityAIControlledByPlayer getAIControlledByPlayer()
 	{
 		return aiControlledByPlayer;
@@ -91,11 +96,6 @@
 	@Override protected String getLivingSound()
 	{
 		return "mob.pig.say";
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 10;
 	}
 	
 	public boolean getSaddled()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityPigZombie.java b/RMCClient/minecraft/net/minecraft/src/EntityPigZombie.java
index 6eb2681..6ec83cf 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityPigZombie.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityPigZombie.java
@@ -1,17 +1,19 @@
 package net.minecraft.src;
 
 import java.util.List;
+import java.util.UUID;
 
 public class EntityPigZombie extends EntityZombie
 {
-	private int angerLevel = 0;
-	private int randomSoundDelay = 0;
+	private static final UUID field_110189_bq = UUID.fromString("49455A49-7EC5-45BA-B886-3B90B23A1718");
+	private static final AttributeModifier field_110190_br = new AttributeModifier(field_110189_bq, "Attacking speed boost", 0.45D, 0).func_111168_a(false);
+	private int angerLevel;
+	private int randomSoundDelay;
+	private Entity field_110191_bu;
 	
-	public EntityPigZombie(World par1World)
+	public EntityPigZombie(World p_i1739_1_)
 	{
-		super(par1World);
-		texture = "/mob/pigzombie.png";
-		moveSpeed = 0.5F;
+		super(p_i1739_1_);
 		isImmuneToFire = true;
 	}
 	
@@ -20,7 +22,7 @@
 		setCurrentItemOrArmor(0, new ItemStack(Item.swordGold));
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -76,15 +78,19 @@
 		return angerLevel == 0 ? null : super.findPlayerToAttack();
 	}
 	
-	@Override public int getAttackStrength(Entity par1Entity)
+	@Override protected void func_110147_ax()
 	{
-		ItemStack var2 = getHeldItem();
-		int var3 = 5;
-		if(var2 != null)
-		{
-			var3 += var2.getDamageVsEntity(this);
-		}
-		return var3;
+		super.func_110147_ax();
+		func_110148_a(field_110186_bp).func_111128_a(0.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.5D);
+		func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(5.0D);
+	}
+	
+	@Override public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
+	{
+		super.func_110161_a(p_110161_1_);
+		setVillager(false);
+		return p_110161_1_;
 	}
 	
 	@Override public boolean getCanSpawnHere()
@@ -112,17 +118,6 @@
 		return "mob.zombiepig.zpig";
 	}
 	
-	@Override public String getTexture()
-	{
-		return "/mob/pigzombie.png";
-	}
-	
-	@Override public void initCreature()
-	{
-		super.initCreature();
-		setVillager(false);
-	}
-	
 	@Override public boolean interact(EntityPlayer par1EntityPlayer)
 	{
 		return false;
@@ -135,7 +130,16 @@
 	
 	@Override public void onUpdate()
 	{
-		moveSpeed = entityToAttack != null ? 0.95F : 0.5F;
+		if(field_110191_bu != entityToAttack && !worldObj.isRemote)
+		{
+			AttributeInstance var1 = func_110148_a(SharedMonsterAttributes.field_111263_d);
+			var1.func_111124_b(field_110190_br);
+			if(entityToAttack != null)
+			{
+				var1.func_111121_a(field_110190_br);
+			}
+		}
+		field_110191_bu = entityToAttack;
 		if(randomSoundDelay > 0 && --randomSoundDelay == 0)
 		{
 			playSound("mob.zombiepig.zpigangry", getSoundVolume() * 2.0F, ((rand.nextFloat() - rand.nextFloat()) * 0.2F + 1.0F) * 1.8F);
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityPlayer.java b/RMCClient/minecraft/net/minecraft/src/EntityPlayer.java
index 72591e1..a70f699 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityPlayer.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityPlayer.java
@@ -4,19 +4,18 @@
 import java.util.Iterator;
 import java.util.List;
 
-public abstract class EntityPlayer extends EntityLiving implements ICommandSender
+public abstract class EntityPlayer extends EntityLivingBase implements ICommandSender
 {
 	public InventoryPlayer inventory = new InventoryPlayer(this);
 	private InventoryEnderChest theInventoryEnderChest = new InventoryEnderChest();
 	public Container inventoryContainer;
 	public Container openContainer;
 	protected FoodStats foodStats = new FoodStats();
-	protected int flyToggleTimer = 0;
-	public byte field_71098_bD = 0;
+	protected int flyToggleTimer;
 	public float prevCameraYaw;
 	public float cameraYaw;
-	public String username;
-	public int xpCooldown = 0;
+	protected final String username;
+	public int xpCooldown;
 	public double field_71091_bM;
 	public double field_71096_bN;
 	public double field_71097_bO;
@@ -40,21 +39,20 @@
 	private int itemInUseCount;
 	protected float speedOnGround = 0.1F;
 	protected float speedInAir = 0.02F;
-	private int field_82249_h = 0;
-	public EntityFishHook fishEntity = null;
+	private int field_82249_h;
+	public EntityFishHook fishEntity;
 	
-	public EntityPlayer(World par1World)
+	public EntityPlayer(World p_i1752_1_, String p_i1752_2_)
 	{
-		super(par1World);
-		inventoryContainer = new ContainerPlayer(inventory, !par1World.isRemote, this);
+		super(p_i1752_1_);
+		username = p_i1752_2_;
+		inventoryContainer = new ContainerPlayer(inventory, !p_i1752_1_.isRemote, this);
 		openContainer = inventoryContainer;
 		yOffset = 1.62F;
-		ChunkCoordinates var2 = par1World.getSpawnPoint();
-		setLocationAndAngles(var2.posX + 0.5D, var2.posY + 1, var2.posZ + 0.5D, 0.0F, 0.0F);
-		entityType = "humanoid";
+		ChunkCoordinates var3 = p_i1752_1_.getSpawnPoint();
+		setLocationAndAngles(var3.posX + 0.5D, var3.posY + 1, var3.posZ + 0.5D, 0.0F, 0.0F);
 		field_70741_aB = 180.0F;
 		fireResistance = 20;
-		texture = "/mob/char.png";
 	}
 	
 	public void addChatMessage(String par1Str)
@@ -185,10 +183,6 @@
 		}
 	}
 	
-	@Override protected void addRandomArmor()
-	{
-	}
-	
 	public void addScore(int par1)
 	{
 		int var2 = getScore();
@@ -220,40 +214,14 @@
 		}
 	}
 	
-	protected void alertWolves(EntityLiving par1EntityLiving, boolean par2)
-	{
-		if(!(par1EntityLiving instanceof EntityCreeper) && !(par1EntityLiving instanceof EntityGhast))
-		{
-			if(par1EntityLiving instanceof EntityWolf)
-			{
-				EntityWolf var3 = (EntityWolf) par1EntityLiving;
-				if(var3.isTamed() && username.equals(var3.getOwnerName())) return;
-			}
-			if(!(par1EntityLiving instanceof EntityPlayer) || func_96122_a((EntityPlayer) par1EntityLiving))
-			{
-				List var6 = worldObj.getEntitiesWithinAABB(EntityWolf.class, AxisAlignedBB.getAABBPool().getAABB(posX, posY, posZ, posX + 1.0D, posY + 1.0D, posZ + 1.0D).expand(16.0D, 4.0D, 16.0D));
-				Iterator var4 = var6.iterator();
-				while(var4.hasNext())
-				{
-					EntityWolf var5 = (EntityWolf) var4.next();
-					if(var5.isTamed() && var5.getEntityToAttack() == null && username.equals(var5.getOwnerName()) && (!par2 || !var5.isSitting()))
-					{
-						var5.setSitting(false);
-						var5.setTarget(par1EntityLiving);
-					}
-				}
-			}
-		}
-	}
-	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else if(capabilities.disableDamage && !par1DamageSource.canHarmInCreative()) return false;
 		else
 		{
 			entityAge = 0;
-			if(getHealth() <= 0) return false;
+			if(func_110143_aJ() <= 0.0F) return false;
 			else
 			{
 				if(isPlayerSleeping() && !worldObj.isRemote)
@@ -264,18 +232,18 @@
 				{
 					if(worldObj.difficultySetting == 0)
 					{
-						par2 = 0;
+						par2 = 0.0F;
 					}
 					if(worldObj.difficultySetting == 1)
 					{
-						par2 = par2 / 2 + 1;
+						par2 = par2 / 2.0F + 1.0F;
 					}
 					if(worldObj.difficultySetting == 3)
 					{
-						par2 = par2 * 3 / 2;
+						par2 = par2 * 3.0F / 2.0F;
 					}
 				}
-				if(par2 == 0) return false;
+				if(par2 == 0.0F) return false;
 				else
 				{
 					Entity var3 = par1DamageSource.getEntity();
@@ -283,11 +251,7 @@
 					{
 						var3 = ((EntityArrow) var3).shootingEntity;
 					}
-					if(var3 instanceof EntityLiving)
-					{
-						alertWolves((EntityLiving) var3, false);
-					}
-					addStat(StatList.damageTakenStat, par2);
+					addStat(StatList.damageTakenStat, Math.round(par2 * 10.0F));
 					return super.attackEntityFrom(par1DamageSource, par2);
 				}
 			}
@@ -300,37 +264,29 @@
 		{
 			if(!par1Entity.func_85031_j(this))
 			{
-				int var2 = inventory.getDamageVsEntity(par1Entity);
-				if(this.isPotionActive(Potion.damageBoost))
-				{
-					var2 += 3 << getActivePotionEffect(Potion.damageBoost).getAmplifier();
-				}
-				if(this.isPotionActive(Potion.weakness))
-				{
-					var2 -= 2 << getActivePotionEffect(Potion.weakness).getAmplifier();
-				}
+				float var2 = (float) func_110148_a(SharedMonsterAttributes.field_111264_e).func_111126_e();
 				int var3 = 0;
-				int var4 = 0;
-				if(par1Entity instanceof EntityLiving)
+				float var4 = 0.0F;
+				if(par1Entity instanceof EntityLivingBase)
 				{
-					var4 = EnchantmentHelper.getEnchantmentModifierLiving(this, (EntityLiving) par1Entity);
-					var3 += EnchantmentHelper.getKnockbackModifier(this, (EntityLiving) par1Entity);
+					var4 = EnchantmentHelper.getEnchantmentModifierLiving(this, (EntityLivingBase) par1Entity);
+					var3 += EnchantmentHelper.getKnockbackModifier(this, (EntityLivingBase) par1Entity);
 				}
 				if(isSprinting())
 				{
 					++var3;
 				}
-				if(var2 > 0 || var4 > 0)
+				if(var2 > 0.0F || var4 > 0.0F)
 				{
-					boolean var5 = fallDistance > 0.0F && !onGround && !isOnLadder() && !isInWater() && !this.isPotionActive(Potion.blindness) && ridingEntity == null && par1Entity instanceof EntityLiving;
-					if(var5 && var2 > 0)
+					boolean var5 = fallDistance > 0.0F && !onGround && !isOnLadder() && !isInWater() && !this.isPotionActive(Potion.blindness) && ridingEntity == null && par1Entity instanceof EntityLivingBase;
+					if(var5 && var2 > 0.0F)
 					{
-						var2 += rand.nextInt(var2 / 2 + 2);
+						var2 *= 1.5F;
 					}
 					var2 += var4;
 					boolean var6 = false;
 					int var7 = EnchantmentHelper.getFireAspectModifier(this);
-					if(par1Entity instanceof EntityLiving && var7 > 0 && !par1Entity.isBurning())
+					if(par1Entity instanceof EntityLivingBase && var7 > 0 && !par1Entity.isBurning())
 					{
 						var6 = true;
 						par1Entity.setFire(1);
@@ -349,18 +305,18 @@
 						{
 							onCriticalHit(par1Entity);
 						}
-						if(var4 > 0)
+						if(var4 > 0.0F)
 						{
 							onEnchantmentCritical(par1Entity);
 						}
-						if(var2 >= 18)
+						if(var2 >= 18.0F)
 						{
 							triggerAchievement(AchievementList.overkill);
 						}
-						setLastAttackingEntity(par1Entity);
-						if(par1Entity instanceof EntityLiving)
+						func_130011_c(par1Entity);
+						if(par1Entity instanceof EntityLivingBase)
 						{
-							EnchantmentThorns.func_92096_a(this, (EntityLiving) par1Entity, rand);
+							EnchantmentThorns.func_92096_a(this, (EntityLivingBase) par1Entity, rand);
 						}
 					}
 					ItemStack var9 = getCurrentEquippedItem();
@@ -368,26 +324,22 @@
 					if(par1Entity instanceof EntityDragonPart)
 					{
 						IEntityMultiPart var11 = ((EntityDragonPart) par1Entity).entityDragonObj;
-						if(var11 != null && var11 instanceof EntityLiving)
+						if(var11 != null && var11 instanceof EntityLivingBase)
 						{
 							var10 = var11;
 						}
 					}
-					if(var9 != null && var10 instanceof EntityLiving)
+					if(var9 != null && var10 instanceof EntityLivingBase)
 					{
-						var9.hitEntity((EntityLiving) var10, this);
+						var9.hitEntity((EntityLivingBase) var10, this);
 						if(var9.stackSize <= 0)
 						{
 							destroyCurrentEquippedItem();
 						}
 					}
-					if(par1Entity instanceof EntityLiving)
+					if(par1Entity instanceof EntityLivingBase)
 					{
-						if(par1Entity.isEntityAlive())
-						{
-							alertWolves((EntityLiving) par1Entity, true);
-						}
-						addStat(StatList.damageDealtStat, var2);
+						addStat(StatList.damageDealtStat, Math.round(var2 * 10.0F));
 						if(var7 > 0 && var8)
 						{
 							par1Entity.setFire(var7 * 4);
@@ -432,11 +384,6 @@
 		return inventory.canHarvestBlock(par1Block);
 	}
 	
-	@Override public boolean canPickUpLoot()
-	{
-		return false;
-	}
-	
 	public boolean canPlayerEdit(int par1, int par2, int par3, int par4, ItemStack par5ItemStack)
 	{
 		return capabilities.allowEdit ? true : par5ItemStack != null ? par5ItemStack.func_82835_x() : false;
@@ -462,7 +409,7 @@
 		if(par2)
 		{
 			inventory.copyInventory(par1EntityPlayer.inventory);
-			health = par1EntityPlayer.health;
+			setEntityHealth(par1EntityPlayer.func_110143_aJ());
 			foodStats = par1EntityPlayer.foodStats;
 			experienceLevel = par1EntityPlayer.experienceLevel;
 			experienceTotal = par1EntityPlayer.experienceTotal;
@@ -490,25 +437,31 @@
 		par1Entity.onCollideWithPlayer(this);
 	}
 	
-	@Override protected void damageArmor(int par1)
+	@Override protected void damageArmor(float par1)
 	{
 		inventory.damageArmor(par1);
 	}
 	
-	@Override protected void damageEntity(DamageSource par1DamageSource, int par2)
+	@Override protected void damageEntity(DamageSource par1DamageSource, float par2)
 	{
 		if(!isEntityInvulnerable())
 		{
-			if(!par1DamageSource.isUnblockable() && isBlocking())
+			if(!par1DamageSource.isUnblockable() && isBlocking() && par2 > 0.0F)
 			{
-				par2 = 1 + par2 >> 1;
+				par2 = (1.0F + par2) * 0.5F;
 			}
 			par2 = applyArmorCalculations(par1DamageSource, par2);
 			par2 = applyPotionDamageCalculations(par1DamageSource, par2);
-			addExhaustion(par1DamageSource.getHungerDamage());
-			int var3 = getHealth();
-			setEntityHealth(getHealth() - par2);
-			field_94063_bt.func_94547_a(par1DamageSource, var3, par2);
+			float var3 = par2;
+			par2 = Math.max(par2 - func_110139_bj(), 0.0F);
+			func_110149_m(func_110139_bj() - (var3 - par2));
+			if(par2 != 0.0F)
+			{
+				addExhaustion(par1DamageSource.getHungerDamage());
+				float var4 = func_110143_aJ();
+				setEntityHealth(func_110143_aJ() - par2);
+				func_110142_aN().func_94547_a(par1DamageSource, var4, par2);
+			}
 		}
 	}
 	
@@ -582,6 +535,7 @@
 	public EntityItem dropPlayerItemWithRandomChoice(ItemStack par1ItemStack, boolean par2)
 	{
 		if(par1ItemStack == null) return null;
+		else if(par1ItemStack.stackSize == 0) return null;
 		else
 		{
 			EntityItem var3 = new EntityItem(worldObj, posX, posY - 0.30000001192092896D + getEyeHeight(), posZ, par1ItemStack);
@@ -618,7 +572,7 @@
 	{
 		super.entityInit();
 		dataWatcher.addObject(16, Byte.valueOf((byte) 0));
-		dataWatcher.addObject(17, Byte.valueOf((byte) 0));
+		dataWatcher.addObject(17, Float.valueOf(0.0F));
 		dataWatcher.addObject(18, Integer.valueOf(0));
 	}
 	
@@ -632,6 +586,35 @@
 			}
 			super.fall(par1);
 		}
+	}
+	
+	@Override public float func_110139_bj()
+	{
+		return getDataWatcher().func_111145_d(17);
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111264_e).func_111128_a(1.0D);
+	}
+	
+	@Override public void func_110149_m(float p_110149_1_)
+	{
+		if(p_110149_1_ < 0.0F)
+		{
+			p_110149_1_ = 0.0F;
+		}
+		getDataWatcher().updateObject(17, Float.valueOf(p_110149_1_));
+	}
+	
+	public void func_110298_a(EntityHorse p_110298_1_, IInventory p_110298_2_)
+	{
+	}
+	
+	@Override public World func_130014_f_()
+	{
+		return worldObj;
 	}
 	
 	private void func_71013_b(int par1)
@@ -652,15 +635,6 @@
 			case 3:
 				field_71079_bU = -1.8F;
 		}
-	}
-	
-	public boolean func_71066_bF()
-	{
-		return false;
-	}
-	
-	@Override protected void func_82162_bC()
-	{
 	}
 	
 	public float func_82243_bO()
@@ -684,11 +658,6 @@
 		return true;
 	}
 	
-	@Override public boolean func_94062_bN()
-	{
-		return super.func_94062_bN();
-	}
-	
 	@Override public boolean func_96092_aw()
 	{
 		return !capabilities.isFlying;
@@ -696,9 +665,9 @@
 	
 	public boolean func_96122_a(EntityPlayer par1EntityPlayer)
 	{
-		ScorePlayerTeam var2 = getTeam();
-		ScorePlayerTeam var3 = par1EntityPlayer.getTeam();
-		return var2 != var3 ? true : var2 != null ? var2.func_96665_g() : true;
+		Team var2 = getTeam();
+		Team var3 = par1EntityPlayer.getTeam();
+		return var2 == null ? true : !var2.func_142054_a(var3) ? true : var2.func_96665_g();
 	}
 	
 	@Override public boolean func_98034_c(EntityPlayer par1EntityPlayer)
@@ -706,9 +675,14 @@
 		if(!isInvisible()) return false;
 		else
 		{
-			ScorePlayerTeam var2 = getTeam();
+			Team var2 = getTeam();
 			return var2 == null || par1EntityPlayer == null || par1EntityPlayer.getTeam() != var2 || !var2.func_98297_h();
 		}
+	}
+	
+	@Override public float getAIMoveSpeed()
+	{
+		return (float) func_110148_a(SharedMonsterAttributes.field_111263_d).func_111126_e();
 	}
 	
 	public ChunkCoordinates getBedLocation()
@@ -742,7 +716,7 @@
 		return username;
 	}
 	
-	@Override public ItemStack getCurrentArmor(int par1)
+	public ItemStack getCurrentArmor(int par1)
 	{
 		return inventory.armorItemInSlot(par1);
 	}
@@ -880,11 +854,6 @@
 		return inventory.armorInventory;
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 20;
-	}
-	
 	@Override public int getMaxInPortalTime()
 	{
 		return capabilities.disableDamage ? 0 : 80;
@@ -905,7 +874,7 @@
 		return sleepTimer;
 	}
 	
-	public ScorePlayerTeam getTeam()
+	@Override public Team getTeam()
 	{
 		return getWorldScoreboard().getPlayersTeam(username);
 	}
@@ -918,11 +887,6 @@
 	@Override public String getTranslatedEntityName()
 	{
 		return ScorePlayerTeam.func_96667_a(getTeam(), username);
-	}
-	
-	public StringTranslate getTranslator()
-	{
-		return StringTranslate.getInstance();
 	}
 	
 	public Scoreboard getWorldScoreboard()
@@ -948,17 +912,17 @@
 	
 	public boolean interactWith(Entity par1Entity)
 	{
-		if(par1Entity.interact(this)) return true;
-		else
+		ItemStack var2 = getCurrentEquippedItem();
+		ItemStack var3 = var2 != null ? var2.copy() : null;
+		if(!par1Entity.func_130002_c(this))
 		{
-			ItemStack var2 = getCurrentEquippedItem();
-			if(var2 != null && par1Entity instanceof EntityLiving)
+			if(var2 != null && par1Entity instanceof EntityLivingBase)
 			{
 				if(capabilities.isCreativeMode)
 				{
-					var2 = var2.copy();
+					var2 = var3;
 				}
-				if(var2.interactWith((EntityLiving) par1Entity))
+				if(var2.func_111282_a(this, (EntityLivingBase) par1Entity))
 				{
 					if(var2.stackSize <= 0 && !capabilities.isCreativeMode)
 					{
@@ -968,10 +932,23 @@
 				}
 			}
 			return false;
+		} else
+		{
+			if(var2 != null && var2 == getCurrentEquippedItem())
+			{
+				if(var2.stackSize <= 0 && !capabilities.isCreativeMode)
+				{
+					destroyCurrentEquippedItem();
+				} else if(var2.stackSize < var3.stackSize && capabilities.isCreativeMode)
+				{
+					var2.stackSize = var3.stackSize;
+				}
+			}
+			return true;
 		}
 	}
 	
-	@Override public boolean isBlocking()
+	public boolean isBlocking()
 	{
 		return isUsingItem() && Item.itemsList[itemInUse.itemID].getItemUseAction(itemInUse) == EnumAction.block;
 	}
@@ -988,7 +965,7 @@
 	
 	@Override protected boolean isMovementBlocked()
 	{
-		return getHealth() <= 0 || isPlayerSleeping();
+		return func_110143_aJ() <= 0.0F || isPlayerSleeping();
 	}
 	
 	@Override protected boolean isPlayer()
@@ -1036,9 +1013,12 @@
 	
 	@Override public void mountEntity(Entity par1Entity)
 	{
-		if(ridingEntity == par1Entity)
+		if(ridingEntity != null && par1Entity == null)
 		{
-			unmountEntity(par1Entity);
+			if(!worldObj.isRemote)
+			{
+				func_110145_l(ridingEntity);
+			}
 			if(ridingEntity != null)
 			{
 				ridingEntity.riddenByEntity = null;
@@ -1123,7 +1103,7 @@
 		}
 	}
 	
-	@Override public void onKillEntity(EntityLiving par1EntityLiving)
+	@Override public void onKillEntity(EntityLivingBase par1EntityLiving)
 	{
 		if(par1EntityLiving instanceof IMob)
 		{
@@ -1137,47 +1117,59 @@
 		{
 			--flyToggleTimer;
 		}
-		if(worldObj.difficultySetting == 0 && getHealth() < getMaxHealth() && ticksExisted % 20 * 12 == 0)
+		if(worldObj.difficultySetting == 0 && func_110143_aJ() < func_110138_aP() && worldObj.getGameRules().getGameRuleBooleanValue("naturalRegeneration") && ticksExisted % 20 * 12 == 0)
 		{
-			heal(1);
+			heal(1.0F);
 		}
 		inventory.decrementAnimations();
 		prevCameraYaw = cameraYaw;
 		super.onLivingUpdate();
-		landMovementFactor = capabilities.getWalkSpeed();
+		AttributeInstance var1 = func_110148_a(SharedMonsterAttributes.field_111263_d);
+		if(!worldObj.isRemote)
+		{
+			var1.func_111128_a(capabilities.getWalkSpeed());
+		}
 		jumpMovementFactor = speedInAir;
 		if(isSprinting())
 		{
-			landMovementFactor = (float) (landMovementFactor + capabilities.getWalkSpeed() * 0.3D);
 			jumpMovementFactor = (float) (jumpMovementFactor + speedInAir * 0.3D);
 		}
-		float var1 = MathHelper.sqrt_double(motionX * motionX + motionZ * motionZ);
-		float var2 = (float) Math.atan(-motionY * 0.20000000298023224D) * 15.0F;
-		if(var1 > 0.1F)
+		setAIMoveSpeed((float) var1.func_111126_e());
+		float var2 = MathHelper.sqrt_double(motionX * motionX + motionZ * motionZ);
+		float var3 = (float) Math.atan(-motionY * 0.20000000298023224D) * 15.0F;
+		if(var2 > 0.1F)
 		{
-			var1 = 0.1F;
+			var2 = 0.1F;
 		}
-		if(!onGround || getHealth() <= 0)
-		{
-			var1 = 0.0F;
-		}
-		if(onGround || getHealth() <= 0)
+		if(!onGround || func_110143_aJ() <= 0.0F)
 		{
 			var2 = 0.0F;
 		}
-		cameraYaw += (var1 - cameraYaw) * 0.4F;
-		cameraPitch += (var2 - cameraPitch) * 0.8F;
-		if(getHealth() > 0)
+		if(onGround || func_110143_aJ() <= 0.0F)
 		{
-			List var3 = worldObj.getEntitiesWithinAABBExcludingEntity(this, boundingBox.expand(1.0D, 0.5D, 1.0D));
-			if(var3 != null)
+			var3 = 0.0F;
+		}
+		cameraYaw += (var2 - cameraYaw) * 0.4F;
+		cameraPitch += (var3 - cameraPitch) * 0.8F;
+		if(func_110143_aJ() > 0.0F)
+		{
+			AxisAlignedBB var4 = null;
+			if(ridingEntity != null && !ridingEntity.isDead)
 			{
-				for(int var4 = 0; var4 < var3.size(); ++var4)
+				var4 = boundingBox.func_111270_a(ridingEntity.boundingBox).expand(1.0D, 0.0D, 1.0D);
+			} else
+			{
+				var4 = boundingBox.expand(1.0D, 0.5D, 1.0D);
+			}
+			List var5 = worldObj.getEntitiesWithinAABBExcludingEntity(this, var4);
+			if(var5 != null)
+			{
+				for(int var6 = 0; var6 < var5.size(); ++var6)
 				{
-					Entity var5 = (Entity) var3.get(var4);
-					if(!var5.isDead)
+					Entity var7 = (Entity) var5.get(var6);
+					if(!var7.isDead)
 					{
-						collideWithPlayer(var5);
+						collideWithPlayer(var7);
 					}
 				}
 			}
@@ -1298,7 +1290,7 @@
 		yOffset = 1.62F;
 		setSize(0.6F, 1.8F);
 		super.preparePlayerToSpawn();
-		setEntityHealth(getMaxHealth());
+		setEntityHealth(func_110138_aP());
 		deathTime = 0;
 	}
 	
@@ -1418,7 +1410,7 @@
 	
 	public boolean shouldHeal()
 	{
-		return getHealth() > 0 && getHealth() < getMaxHealth();
+		return func_110143_aJ() > 0.0F && func_110143_aJ() < func_110138_aP();
 	}
 	
 	public EnumStatus sleepInBedAt(int par1, int par2, int par3)
@@ -1433,6 +1425,10 @@
 			double var6 = 5.0D;
 			List var8 = worldObj.getEntitiesWithinAABB(EntityMob.class, AxisAlignedBB.getAABBPool().getAABB(par1 - var4, par2 - var6, par3 - var4, par1 + var4, par2 + var6, par3 + var4));
 			if(!var8.isEmpty()) return EnumStatus.NOT_SAFE;
+		}
+		if(isRiding())
+		{
+			mountEntity((Entity) null);
 		}
 		setSize(0.2F, 0.2F);
 		yOffset = 0.2F;
@@ -1482,11 +1478,6 @@
 		clearItemInUse();
 	}
 	
-	@Override public String translateString(String par1Str, Object ... par2ArrayOfObj)
-	{
-		return getTranslator().translateKeyFormat(par1Str, par2ArrayOfObj);
-	}
-	
 	public void triggerAchievement(StatBase par1StatBase)
 	{
 		addStat(par1StatBase, 1);
@@ -1494,6 +1485,7 @@
 	
 	@Override protected void updateEntityActionState()
 	{
+		super.updateEntityActionState();
 		updateArmSwingProgress();
 	}
 	
@@ -1522,20 +1514,27 @@
 	
 	@Override public void updateRidden()
 	{
-		double var1 = posX;
-		double var3 = posY;
-		double var5 = posZ;
-		float var7 = rotationYaw;
-		float var8 = rotationPitch;
-		super.updateRidden();
-		prevCameraYaw = cameraYaw;
-		cameraYaw = 0.0F;
-		addMountedMovementStat(posX - var1, posY - var3, posZ - var5);
-		if(ridingEntity instanceof EntityPig)
+		if(!worldObj.isRemote && isSneaking())
 		{
-			rotationPitch = var8;
-			rotationYaw = var7;
-			renderYawOffset = ((EntityPig) ridingEntity).renderYawOffset;
+			mountEntity((Entity) null);
+			setSneaking(false);
+		} else
+		{
+			double var1 = posX;
+			double var3 = posY;
+			double var5 = posZ;
+			float var7 = rotationYaw;
+			float var8 = rotationPitch;
+			super.updateRidden();
+			prevCameraYaw = cameraYaw;
+			cameraYaw = 0.0F;
+			addMountedMovementStat(posX - var1, posY - var3, posZ - var5);
+			if(ridingEntity instanceof EntityPig)
+			{
+				rotationPitch = var8;
+				rotationYaw = var7;
+				renderYawOffset = ((EntityPig) ridingEntity).renderYawOffset;
+			}
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityPlayerMP.java b/RMCClient/minecraft/net/minecraft/src/EntityPlayerMP.java
index e4f80d3..ad09988 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityPlayerMP.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityPlayerMP.java
@@ -14,7 +14,7 @@
 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting
 {
-	private StringTranslate translator = new StringTranslate("en_US");
+	private String translator = "en_US";
 	public NetServerHandler playerNetServerHandler;
 	public MinecraftServer mcServer;
 	public ItemInWorldManager theItemInWorldManager;
@@ -22,42 +22,42 @@
 	public double managedPosZ;
 	public final List loadedChunks = new LinkedList();
 	public final List destroyedItemsNetCache = new LinkedList();
-	private int lastHealth = -99999999;
+	private float field_130068_bO = Float.MIN_VALUE;
+	private float lastHealth = -1.0E8F;
 	private int lastFoodLevel = -99999999;
 	private boolean wasHungry = true;
 	private int lastExperience = -99999999;
 	private int initialInvulnerability = 60;
-	private int renderDistance = 0;
-	private int chatVisibility = 0;
+	private int renderDistance;
+	private int chatVisibility;
 	private boolean chatColours = true;
-	private int currentWindowId = 0;
+	private int currentWindowId;
 	public boolean playerInventoryBeingManipulated;
 	public int ping;
-	public boolean playerConqueredTheEnd = false;
+	public boolean playerConqueredTheEnd;
 	
-	public EntityPlayerMP(MinecraftServer par1MinecraftServer, World par2World, String par3Str, ItemInWorldManager par4ItemInWorldManager)
+	public EntityPlayerMP(MinecraftServer p_i1523_1_, World p_i1523_2_, String p_i1523_3_, ItemInWorldManager p_i1523_4_)
 	{
-		super(par2World);
-		par4ItemInWorldManager.thisPlayerMP = this;
-		theItemInWorldManager = par4ItemInWorldManager;
-		renderDistance = par1MinecraftServer.getConfigurationManager().getViewDistance();
-		ChunkCoordinates var5 = par2World.getSpawnPoint();
+		super(p_i1523_2_, p_i1523_3_);
+		p_i1523_4_.thisPlayerMP = this;
+		theItemInWorldManager = p_i1523_4_;
+		renderDistance = p_i1523_1_.getConfigurationManager().getViewDistance();
+		ChunkCoordinates var5 = p_i1523_2_.getSpawnPoint();
 		int var6 = var5.posX;
 		int var7 = var5.posZ;
 		int var8 = var5.posY;
-		if(!par2World.provider.hasNoSky && par2World.getWorldInfo().getGameType() != EnumGameType.ADVENTURE)
+		if(!p_i1523_2_.provider.hasNoSky && p_i1523_2_.getWorldInfo().getGameType() != EnumGameType.ADVENTURE)
 		{
-			int var9 = Math.max(5, par1MinecraftServer.getSpawnProtectionSize() - 6);
+			int var9 = Math.max(5, p_i1523_1_.getSpawnProtectionSize() - 6);
 			var6 += rand.nextInt(var9 * 2) - var9;
 			var7 += rand.nextInt(var9 * 2) - var9;
-			var8 = par2World.getTopSolidOrLiquidBlock(var6, var7);
+			var8 = p_i1523_2_.getTopSolidOrLiquidBlock(var6, var7);
 		}
-		mcServer = par1MinecraftServer;
+		mcServer = p_i1523_1_;
 		stepHeight = 0.0F;
-		username = par3Str;
 		yOffset = 0.0F;
 		setLocationAndAngles(var6 + 0.5D, var8, var7 + 0.5D, 0.0F, 0.0F);
-		while(!par2World.getCollidingBoundingBoxes(this, boundingBox).isEmpty())
+		while(!p_i1523_2_.getCollidingBoundingBoxes(this, boundingBox).isEmpty())
 		{
 			setPosition(posX, posY + 1.0D, posZ);
 		}
@@ -65,9 +65,7 @@
 	
 	@Override public void addChatMessage(String par1Str)
 	{
-		StringTranslate var2 = StringTranslate.getInstance();
-		String var3 = var2.translateKey(par1Str);
-		playerNetServerHandler.sendPacketToPlayer(new Packet3Chat(var3));
+		playerNetServerHandler.sendPacketToPlayer(new Packet3Chat(ChatMessageComponent.func_111077_e(par1Str)));
 	}
 	
 	@Override public void addExperienceLevel(int par1)
@@ -87,17 +85,12 @@
 		{
 			if(!par1StatBase.isIndependent)
 			{
-				while(par2 > 100)
-				{
-					playerNetServerHandler.sendPacketToPlayer(new Packet200Statistic(par1StatBase.statId, 100));
-					par2 -= 100;
-				}
 				playerNetServerHandler.sendPacketToPlayer(new Packet200Statistic(par1StatBase.statId, par2));
 			}
 		}
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -123,14 +116,14 @@
 	
 	@Override public boolean canCommandSenderUseCommand(int par1, String par2Str)
 	{
-		return "seed".equals(par2Str) && !mcServer.isDedicatedServer() ? true : !"tell".equals(par2Str) && !"help".equals(par2Str) && !"me".equals(par2Str) ? mcServer.getConfigurationManager().areCommandsAllowed(username) : true;
+		return "seed".equals(par2Str) && !mcServer.isDedicatedServer() ? true : !"tell".equals(par2Str) && !"help".equals(par2Str) && !"me".equals(par2Str) ? mcServer.getConfigurationManager().areCommandsAllowed(username) ? mcServer.func_110455_j() >= par1 : false : true;
 	}
 	
 	@Override public void clonePlayer(EntityPlayer par1EntityPlayer, boolean par2)
 	{
 		super.clonePlayer(par1EntityPlayer, par2);
 		lastExperience = -1;
-		lastHealth = -1;
+		lastHealth = -1.0F;
 		lastFoodLevel = -1;
 		destroyedItemsNetCache.addAll(((EntityPlayerMP) par1EntityPlayer).destroyedItemsNetCache);
 	}
@@ -194,6 +187,15 @@
 		openContainer = new ContainerDispenser(inventory, par1TileEntityDispenser);
 		openContainer.windowId = currentWindowId;
 		openContainer.addCraftingToCrafters(this);
+	}
+	
+	@Override public void displayGUIEditSign(TileEntity par1TileEntity)
+	{
+		if(par1TileEntity instanceof TileEntitySign)
+		{
+			((TileEntitySign) par1TileEntity).func_142010_a(this);
+			playerNetServerHandler.sendPacketToPlayer(new Packet133TileEditorOpen(0, par1TileEntity.xCoord, par1TileEntity.yCoord, par1TileEntity.zCoord));
+		}
 	}
 	
 	@Override public void displayGUIEnchantment(int par1, int par2, int par3, String par4Str)
@@ -266,6 +268,36 @@
 		openContainer.addCraftingToCrafters(this);
 	}
 	
+	@Override public void func_110298_a(EntityHorse p_110298_1_, IInventory p_110298_2_)
+	{
+		if(openContainer != inventoryContainer)
+		{
+			closeScreen();
+		}
+		incrementWindowID();
+		playerNetServerHandler.sendPacketToPlayer(new Packet100OpenWindow(currentWindowId, 11, p_110298_2_.getInvName(), p_110298_2_.getSizeInventory(), p_110298_2_.isInvNameLocalized(), p_110298_1_.entityId));
+		openContainer = new ContainerHorseInventory(inventory, p_110298_2_, p_110298_1_);
+		openContainer.windowId = currentWindowId;
+		openContainer.addCraftingToCrafters(this);
+	}
+	
+	public void func_110430_a(float p_110430_1_, float p_110430_2_, boolean p_110430_3_, boolean p_110430_4_)
+	{
+		if(ridingEntity != null)
+		{
+			if(p_110430_1_ >= -1.0F && p_110430_1_ <= 1.0F)
+			{
+				moveStrafing = p_110430_1_;
+			}
+			if(p_110430_2_ >= -1.0F && p_110430_2_ <= 1.0F)
+			{
+				moveForward = p_110430_2_;
+			}
+			isJumping = p_110430_3_;
+			setSneaking(p_110430_4_);
+		}
+	}
+	
 	@Override public boolean func_96122_a(EntityPlayer par1EntityPlayer)
 	{
 		return !mcServer.isPVPEnabled() ? false : super.func_96122_a(par1EntityPlayer);
@@ -299,11 +331,6 @@
 		return (WorldServer) worldObj;
 	}
 	
-	@Override public StringTranslate getTranslator()
-	{
-		return translator;
-	}
-	
 	private void incrementWindowID()
 	{
 		currentWindowId = currentWindowId % 100 + 1;
@@ -312,7 +339,7 @@
 	@Override public void mountEntity(Entity par1Entity)
 	{
 		super.mountEntity(par1Entity);
-		playerNetServerHandler.sendPacketToPlayer(new Packet39AttachEntity(this, ridingEntity));
+		playerNetServerHandler.sendPacketToPlayer(new Packet39AttachEntity(0, this, ridingEntity));
 		playerNetServerHandler.setPlayerLocation(posX, posY, posZ, rotationYaw, rotationPitch);
 	}
 	
@@ -328,9 +355,9 @@
 		}
 	}
 	
-	@Override protected void onChangedPotionEffect(PotionEffect par1PotionEffect)
+	@Override protected void onChangedPotionEffect(PotionEffect par1PotionEffect, boolean p_70695_2_)
 	{
-		super.onChangedPotionEffect(par1PotionEffect);
+		super.onChangedPotionEffect(par1PotionEffect, p_70695_2_);
 		playerNetServerHandler.sendPacketToPlayer(new Packet41EntityEffect(entityId, par1PotionEffect));
 	}
 	
@@ -341,7 +368,7 @@
 	
 	@Override public void onDeath(DamageSource par1DamageSource)
 	{
-		mcServer.getConfigurationManager().sendChatMsg(field_94063_bt.func_94546_b());
+		mcServer.getConfigurationManager().sendChatMsg(func_110142_aN().func_94546_b());
 		if(!worldObj.getGameRules().getGameRuleBooleanValue("keepInventory"))
 		{
 			inventory.dropAllItems();
@@ -354,11 +381,12 @@
 			Score var5 = getWorldScoreboard().func_96529_a(getEntityName(), var4);
 			var5.func_96648_a();
 		}
-		EntityLiving var6 = func_94060_bK();
+		EntityLivingBase var6 = func_94060_bK();
 		if(var6 != null)
 		{
 			var6.addToPlayerScore(this, scoreValue);
 		}
+		addStat(StatList.deathsStat, 1);
 	}
 	
 	@Override public void onEnchantmentCritical(Entity par1Entity)
@@ -395,6 +423,11 @@
 		theItemInWorldManager.updateBlockRemoving();
 		--initialInvulnerability;
 		openContainer.detectAndSendChanges();
+		if(!worldObj.isRemote && !openContainer.canInteractWith(this))
+		{
+			closeScreen();
+			openContainer = inventoryContainer;
+		}
 		while(!destroyedItemsNetCache.isEmpty())
 		{
 			int var1 = Math.min(destroyedItemsNetCache.size(), 127);
@@ -449,22 +482,33 @@
 			super.onUpdate();
 			for(int var1 = 0; var1 < inventory.getSizeInventory(); ++var1)
 			{
-				ItemStack var5 = inventory.getStackInSlot(var1);
-				if(var5 != null && Item.itemsList[var5.itemID].isMap() && playerNetServerHandler.packetSize() <= 5)
+				ItemStack var6 = inventory.getStackInSlot(var1);
+				if(var6 != null && Item.itemsList[var6.itemID].isMap() && playerNetServerHandler.packetSize() <= 5)
 				{
-					Packet var6 = ((ItemMapBase) Item.itemsList[var5.itemID]).createMapDataPacket(var5, worldObj, this);
-					if(var6 != null)
+					Packet var8 = ((ItemMapBase) Item.itemsList[var6.itemID]).createMapDataPacket(var6, worldObj, this);
+					if(var8 != null)
 					{
-						playerNetServerHandler.sendPacketToPlayer(var6);
+						playerNetServerHandler.sendPacketToPlayer(var8);
 					}
 				}
 			}
-			if(getHealth() != lastHealth || lastFoodLevel != foodStats.getFoodLevel() || foodStats.getSaturationLevel() == 0.0F != wasHungry)
+			if(func_110143_aJ() != lastHealth || lastFoodLevel != foodStats.getFoodLevel() || foodStats.getSaturationLevel() == 0.0F != wasHungry)
 			{
-				playerNetServerHandler.sendPacketToPlayer(new Packet8UpdateHealth(getHealth(), foodStats.getFoodLevel(), foodStats.getSaturationLevel()));
-				lastHealth = getHealth();
+				playerNetServerHandler.sendPacketToPlayer(new Packet8UpdateHealth(func_110143_aJ(), foodStats.getFoodLevel(), foodStats.getSaturationLevel()));
+				lastHealth = func_110143_aJ();
 				lastFoodLevel = foodStats.getFoodLevel();
 				wasHungry = foodStats.getSaturationLevel() == 0.0F;
+			}
+			if(func_110143_aJ() + func_110139_bj() != field_130068_bO)
+			{
+				field_130068_bO = func_110143_aJ() + func_110139_bj();
+				Collection var5 = getWorldScoreboard().func_96520_a(ScoreObjectiveCriteria.field_96638_f);
+				Iterator var7 = var5.iterator();
+				while(var7.hasNext())
+				{
+					ScoreObjective var9 = (ScoreObjective) var7.next();
+					getWorldScoreboard().func_96529_a(getEntityName(), var9).func_96651_a(Arrays.asList(new EntityPlayer[] { this }));
+				}
 			}
 			if(experienceTotal != lastExperience)
 			{
@@ -506,7 +550,7 @@
 		yOffset = 0.0F;
 	}
 	
-	@Override public void sendChatToPlayer(String par1Str)
+	@Override public void sendChatToPlayer(ChatMessageComponent par1Str)
 	{
 		playerNetServerHandler.sendPacketToPlayer(new Packet3Chat(par1Str));
 	}
@@ -558,18 +602,6 @@
 		}
 	}
 	
-	@Override public void setEntityHealth(int par1)
-	{
-		super.setEntityHealth(par1);
-		Collection var2 = getWorldScoreboard().func_96520_a(ScoreObjectiveCriteria.field_96638_f);
-		Iterator var3 = var2.iterator();
-		while(var3.hasNext())
-		{
-			ScoreObjective var4 = (ScoreObjective) var3.next();
-			getWorldScoreboard().func_96529_a(getEntityName(), var4).func_96651_a(Arrays.asList(new EntityPlayer[] { this }));
-		}
-	}
-	
 	@Override public void setGameType(EnumGameType par1EnumGameType)
 	{
 		theItemInWorldManager.setGameType(par1EnumGameType);
@@ -587,7 +619,7 @@
 	
 	public void setPlayerHealthUpdated()
 	{
-		lastHealth = -99999999;
+		lastHealth = -1.0E8F;
 	}
 	
 	@Override public void setPositionAndUpdate(double par1, double par3, double par5)
@@ -618,7 +650,7 @@
 			playerNetServerHandler.sendPacketToPlayer(new Packet70GameEvent(4, 0));
 		} else
 		{
-			if(dimension == 1 && par1 == 0)
+			if(dimension == 0 && par1 == 1)
 			{
 				triggerAchievement(AchievementList.theEnd);
 				ChunkCoordinates var2 = mcServer.worldServerForDimension(par1).getEntrancePortalLocation();
@@ -633,17 +665,14 @@
 			}
 			mcServer.getConfigurationManager().transferPlayerToDimension(this, par1);
 			lastExperience = -1;
-			lastHealth = -1;
+			lastHealth = -1.0F;
 			lastFoodLevel = -1;
 		}
 	}
 	
 	public void updateClientInfo(Packet204ClientInfo par1Packet204ClientInfo)
 	{
-		if(translator.getLanguageList().containsKey(par1Packet204ClientInfo.getLanguage()))
-		{
-			translator.setLanguage(par1Packet204ClientInfo.getLanguage(), false);
-		}
+		translator = par1Packet204ClientInfo.getLanguage();
 		int var2 = 256 >> par1Packet204ClientInfo.getRenderDistance();
 		if(var2 > 3 && var2 < 15)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityPlayerSP.java b/RMCClient/minecraft/net/minecraft/src/EntityPlayerSP.java
index 8529734..f001d10 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityPlayerSP.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityPlayerSP.java
@@ -2,32 +2,29 @@
 
 import net.minecraft.client.Minecraft;
 
-public class EntityPlayerSP extends EntityPlayer
+public class EntityPlayerSP extends AbstractClientPlayer
 {
 	public MovementInput movementInput;
 	protected Minecraft mc;
-	protected int sprintToggleTimer = 0;
-	public int sprintingTicksLeft = 0;
+	protected int sprintToggleTimer;
+	public int sprintingTicksLeft;
 	public float renderArmYaw;
 	public float renderArmPitch;
 	public float prevRenderArmYaw;
 	public float prevRenderArmPitch;
+	private int field_110320_a;
+	private float field_110321_bQ;
 	private MouseFilter field_71162_ch = new MouseFilter();
 	private MouseFilter field_71160_ci = new MouseFilter();
 	private MouseFilter field_71161_cj = new MouseFilter();
 	public float timeInPortal;
 	public float prevTimeInPortal;
 	
-	public EntityPlayerSP(Minecraft par1Minecraft, World par2World, Session par3Session, int par4)
+	public EntityPlayerSP(Minecraft p_i1238_1_, World p_i1238_2_, Session p_i1238_3_, int p_i1238_4_)
 	{
-		super(par2World);
-		mc = par1Minecraft;
-		dimension = par4;
-		if(par3Session != null && par3Session.username != null && par3Session.username.length() > 0)
-		{
-			skinUrl = "http://skins.minecraft.net/MinecraftSkins/" + StringUtils.stripControlCodes(par3Session.username) + ".png";
-		}
-		username = par3Session.username;
+		super(p_i1238_2_, p_i1238_3_.func_111285_a());
+		mc = p_i1238_1_;
+		dimension = p_i1238_4_;
 	}
 	
 	@Override public void addChatMessage(String par1Str)
@@ -146,6 +143,25 @@
 		mc.displayGuiScreen(new GuiCrafting(inventory, worldObj, par1, par2, par3));
 	}
 	
+	@Override public void func_110298_a(EntityHorse p_110298_1_, IInventory p_110298_2_)
+	{
+		mc.displayGuiScreen(new GuiScreenHorseInventory(inventory, p_110298_2_, p_110298_1_));
+	}
+	
+	public boolean func_110317_t()
+	{
+		return ridingEntity != null && ridingEntity instanceof EntityHorse;
+	}
+	
+	protected void func_110318_g()
+	{
+	}
+	
+	public float func_110319_bJ()
+	{
+		return field_110321_bQ;
+	}
+	
 	public float getFOVMultiplier()
 	{
 		float var1 = 1.0F;
@@ -153,19 +169,20 @@
 		{
 			var1 *= 1.1F;
 		}
-		var1 *= (landMovementFactor * getSpeedModifier() / speedOnGround + 1.0F) / 2.0F;
+		AttributeInstance var2 = func_110148_a(SharedMonsterAttributes.field_111263_d);
+		var1 = (float) (var1 * ((var2.func_111126_e() / capabilities.getWalkSpeed() + 1.0D) / 2.0D));
 		if(isUsingItem() && getItemInUse().itemID == Item.bow.itemID)
 		{
-			int var2 = getItemInUseDuration();
-			float var3 = var2 / 20.0F;
-			if(var3 > 1.0F)
+			int var3 = getItemInUseDuration();
+			float var4 = var3 / 20.0F;
+			if(var4 > 1.0F)
 			{
-				var3 = 1.0F;
+				var4 = 1.0F;
 			} else
 			{
-				var3 *= var3;
+				var4 *= var4;
 			}
-			var1 *= 1.0F - var3 * 0.15F;
+			var1 *= 1.0F - var4 * 0.15F;
 		}
 		return var1;
 	}
@@ -185,7 +202,7 @@
 		return worldObj.isBlockNormalCube(par1, par2, par3);
 	}
 	
-	@Override protected boolean isClientWorld()
+	@Override public boolean isClientWorld()
 	{
 		return true;
 	}
@@ -193,11 +210,6 @@
 	@Override public boolean isSneaking()
 	{
 		return movementInput.sneak && !sleeping;
-	}
-	
-	@Override public void moveEntity(double par1, double par3, double par5)
-	{
-		super.moveEntity(par1, par3, par5);
 	}
 	
 	@Override public void onCriticalHit(Entity par1Entity)
@@ -287,7 +299,7 @@
 			float var2 = 0.8F;
 			boolean var3 = movementInput.moveForward >= var2;
 			movementInput.updatePlayerMoveState();
-			if(isUsingItem())
+			if(isUsingItem() && !isRiding())
 			{
 				movementInput.moveStrafe *= 0.2F;
 				movementInput.moveForward *= 0.2F;
@@ -343,6 +355,39 @@
 				{
 					motionY += 0.15D;
 				}
+			}
+			if(func_110317_t())
+			{
+				if(field_110320_a < 0)
+				{
+					++field_110320_a;
+					if(field_110320_a == 0)
+					{
+						field_110321_bQ = 0.0F;
+					}
+				}
+				if(var1 && !movementInput.jump)
+				{
+					field_110320_a = -10;
+					func_110318_g();
+				} else if(!var1 && movementInput.jump)
+				{
+					field_110320_a = 0;
+					field_110321_bQ = 0.0F;
+				} else if(var1)
+				{
+					++field_110320_a;
+					if(field_110320_a < 10)
+					{
+						field_110321_bQ = field_110320_a * 0.1F;
+					} else
+					{
+						field_110321_bQ = 0.8F + 2.0F / (field_110320_a - 9) * 0.1F;
+					}
+				}
+			} else
+			{
+				field_110321_bQ = 0.0F;
 			}
 			super.onLivingUpdate();
 			if(onGround && capabilities.isFlying)
@@ -414,25 +459,25 @@
 		return false;
 	}
 	
-	@Override public void sendChatToPlayer(String par1Str)
+	@Override public void sendChatToPlayer(ChatMessageComponent par1Str)
 	{
-		mc.ingameGUI.getChatGUI().printChatMessage(par1Str);
+		mc.ingameGUI.getChatGUI().printChatMessage(par1Str.func_111068_a(true));
 	}
 	
-	public void setHealth(int par1)
+	public void setHealth(float par1)
 	{
-		int var2 = getHealth() - par1;
-		if(var2 <= 0)
+		float var2 = func_110143_aJ() - par1;
+		if(var2 <= 0.0F)
 		{
 			setEntityHealth(par1);
-			if(var2 < 0)
+			if(var2 < 0.0F)
 			{
 				hurtResistantTime = maxHurtResistantTime / 2;
 			}
 		} else
 		{
-			lastDamage = var2;
-			setEntityHealth(getHealth());
+			field_110153_bc = var2;
+			setEntityHealth(func_110143_aJ());
 			hurtResistantTime = maxHurtResistantTime;
 			damageEntity(DamageSource.generic, var2);
 			hurtTime = maxHurtTime = 10;
@@ -450,11 +495,6 @@
 		experience = par1;
 		experienceTotal = par2;
 		experienceLevel = par3;
-	}
-	
-	@Override public void updateCloak()
-	{
-		cloakUrl = "http://skins.minecraft.net/MinecraftCloaks/" + StringUtils.stripControlCodes(username) + ".png";
 	}
 	
 	@Override public void updateEntityActionState()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityPortalFX.java b/RMCClient/minecraft/net/minecraft/src/EntityPortalFX.java
index 7e29c9c..6ea782c 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityPortalFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityPortalFX.java
@@ -7,15 +7,15 @@
 	private double portalPosY;
 	private double portalPosZ;
 	
-	public EntityPortalFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityPortalFX(World p_i1222_1_, double p_i1222_2_, double p_i1222_4_, double p_i1222_6_, double p_i1222_8_, double p_i1222_10_, double p_i1222_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
-		motionX = par8;
-		motionY = par10;
-		motionZ = par12;
-		portalPosX = posX = par2;
-		portalPosY = posY = par4;
-		portalPosZ = posZ = par6;
+		super(p_i1222_1_, p_i1222_2_, p_i1222_4_, p_i1222_6_, p_i1222_8_, p_i1222_10_, p_i1222_12_);
+		motionX = p_i1222_8_;
+		motionY = p_i1222_10_;
+		motionZ = p_i1222_12_;
+		portalPosX = posX = p_i1222_2_;
+		portalPosY = posY = p_i1222_4_;
+		portalPosZ = posZ = p_i1222_6_;
 		float var14 = rand.nextFloat() * 0.6F + 0.4F;
 		portalParticleScale = particleScale = rand.nextFloat() * 0.2F + 0.5F;
 		particleRed = particleGreen = particleBlue = 1.0F * var14;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityPotion.java b/RMCClient/minecraft/net/minecraft/src/EntityPotion.java
index 6ea2fd8..fcdb9d1 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityPotion.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityPotion.java
@@ -7,31 +7,31 @@
 {
 	private ItemStack potionDamage;
 	
-	public EntityPotion(World par1World)
+	public EntityPotion(World p_i1788_1_)
 	{
-		super(par1World);
+		super(p_i1788_1_);
 	}
 	
-	public EntityPotion(World par1World, double par2, double par4, double par6, int par8)
+	public EntityPotion(World p_i1791_1_, double p_i1791_2_, double p_i1791_4_, double p_i1791_6_, int p_i1791_8_)
 	{
-		this(par1World, par2, par4, par6, new ItemStack(Item.potion, 1, par8));
+		this(p_i1791_1_, p_i1791_2_, p_i1791_4_, p_i1791_6_, new ItemStack(Item.potion, 1, p_i1791_8_));
 	}
 	
-	public EntityPotion(World par1World, double par2, double par4, double par6, ItemStack par8ItemStack)
+	public EntityPotion(World p_i1792_1_, double p_i1792_2_, double p_i1792_4_, double p_i1792_6_, ItemStack p_i1792_8_)
 	{
-		super(par1World, par2, par4, par6);
-		potionDamage = par8ItemStack;
+		super(p_i1792_1_, p_i1792_2_, p_i1792_4_, p_i1792_6_);
+		potionDamage = p_i1792_8_;
 	}
 	
-	public EntityPotion(World par1World, EntityLiving par2EntityLiving, int par3)
+	public EntityPotion(World p_i1789_1_, EntityLivingBase p_i1789_2_, int p_i1789_3_)
 	{
-		this(par1World, par2EntityLiving, new ItemStack(Item.potion, 1, par3));
+		this(p_i1789_1_, p_i1789_2_, new ItemStack(Item.potion, 1, p_i1789_3_));
 	}
 	
-	public EntityPotion(World par1World, EntityLiving par2EntityLiving, ItemStack par3ItemStack)
+	public EntityPotion(World p_i1790_1_, EntityLivingBase p_i1790_2_, ItemStack p_i1790_3_)
 	{
-		super(par1World, par2EntityLiving);
-		potionDamage = par3ItemStack;
+		super(p_i1790_1_, p_i1790_2_);
+		potionDamage = p_i1790_3_;
 	}
 	
 	@Override protected float func_70182_d()
@@ -66,13 +66,13 @@
 			if(var2 != null && !var2.isEmpty())
 			{
 				AxisAlignedBB var3 = boundingBox.expand(4.0D, 2.0D, 4.0D);
-				List var4 = worldObj.getEntitiesWithinAABB(EntityLiving.class, var3);
+				List var4 = worldObj.getEntitiesWithinAABB(EntityLivingBase.class, var3);
 				if(var4 != null && !var4.isEmpty())
 				{
 					Iterator var5 = var4.iterator();
 					while(var5.hasNext())
 					{
-						EntityLiving var6 = (EntityLiving) var5.next();
+						EntityLivingBase var6 = (EntityLivingBase) var5.next();
 						double var7 = getDistanceSqToEntity(var6);
 						if(var7 < 16.0D)
 						{
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityRainFX.java b/RMCClient/minecraft/net/minecraft/src/EntityRainFX.java
index 8962246..a4fc381 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityRainFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityRainFX.java
@@ -2,9 +2,9 @@
 
 public class EntityRainFX extends EntityFX
 {
-	public EntityRainFX(World par1World, double par2, double par4, double par6)
+	public EntityRainFX(World p_i1235_1_, double p_i1235_2_, double p_i1235_4_, double p_i1235_6_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		super(p_i1235_1_, p_i1235_2_, p_i1235_4_, p_i1235_6_, 0.0D, 0.0D, 0.0D);
 		motionX *= 0.30000001192092896D;
 		motionY = (float) Math.random() * 0.2F + 0.1F;
 		motionZ *= 0.30000001192092896D;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityReddustFX.java b/RMCClient/minecraft/net/minecraft/src/EntityReddustFX.java
index 9ca0723..e57b8aa 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityReddustFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityReddustFX.java
@@ -4,30 +4,30 @@
 {
 	float reddustParticleScale;
 	
-	public EntityReddustFX(World par1World, double par2, double par4, double par6, float par8, float par9, float par10)
+	public EntityReddustFX(World p_i1223_1_, double p_i1223_2_, double p_i1223_4_, double p_i1223_6_, float p_i1223_8_, float p_i1223_9_, float p_i1223_10_)
 	{
-		this(par1World, par2, par4, par6, 1.0F, par8, par9, par10);
+		this(p_i1223_1_, p_i1223_2_, p_i1223_4_, p_i1223_6_, 1.0F, p_i1223_8_, p_i1223_9_, p_i1223_10_);
 	}
 	
-	public EntityReddustFX(World par1World, double par2, double par4, double par6, float par8, float par9, float par10, float par11)
+	public EntityReddustFX(World p_i1224_1_, double p_i1224_2_, double p_i1224_4_, double p_i1224_6_, float p_i1224_8_, float p_i1224_9_, float p_i1224_10_, float p_i1224_11_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		super(p_i1224_1_, p_i1224_2_, p_i1224_4_, p_i1224_6_, 0.0D, 0.0D, 0.0D);
 		motionX *= 0.10000000149011612D;
 		motionY *= 0.10000000149011612D;
 		motionZ *= 0.10000000149011612D;
-		if(par9 == 0.0F)
+		if(p_i1224_9_ == 0.0F)
 		{
-			par9 = 1.0F;
+			p_i1224_9_ = 1.0F;
 		}
 		float var12 = (float) Math.random() * 0.4F + 0.6F;
-		particleRed = ((float) (Math.random() * 0.20000000298023224D) + 0.8F) * par9 * var12;
-		particleGreen = ((float) (Math.random() * 0.20000000298023224D) + 0.8F) * par10 * var12;
-		particleBlue = ((float) (Math.random() * 0.20000000298023224D) + 0.8F) * par11 * var12;
+		particleRed = ((float) (Math.random() * 0.20000000298023224D) + 0.8F) * p_i1224_9_ * var12;
+		particleGreen = ((float) (Math.random() * 0.20000000298023224D) + 0.8F) * p_i1224_10_ * var12;
+		particleBlue = ((float) (Math.random() * 0.20000000298023224D) + 0.8F) * p_i1224_11_ * var12;
 		particleScale *= 0.75F;
-		particleScale *= par8;
+		particleScale *= p_i1224_8_;
 		reddustParticleScale = particleScale;
 		particleMaxAge = (int) (8.0D / (Math.random() * 0.8D + 0.2D));
-		particleMaxAge = (int) (particleMaxAge * par8);
+		particleMaxAge = (int) (particleMaxAge * p_i1224_8_);
 		noClip = false;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityRenderer.java b/RMCClient/minecraft/net/minecraft/src/EntityRenderer.java
index e5da88a..f3be7bd 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityRenderer.java
@@ -1,6 +1,5 @@
 package net.minecraft.src;
 
-import java.awt.image.BufferedImage;
 import java.nio.FloatBuffer;
 import java.util.List;
 import java.util.Random;
@@ -11,17 +10,19 @@
 import org.lwjgl.opengl.Display;
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GLContext;
-import org.lwjgl.util.glu.GLU;
+import org.lwjgl.util.glu.Project;
 
 public class EntityRenderer
 {
-	public static boolean anaglyphEnable = false;
+	private static final ResourceLocation field_110924_q = new ResourceLocation("textures/environment/rain.png");
+	private static final ResourceLocation field_110923_r = new ResourceLocation("textures/environment/snow.png");
+	public static boolean anaglyphEnable;
 	public static int anaglyphField;
 	private Minecraft mc;
-	private float farPlaneDistance = 0.0F;
+	private float farPlaneDistance;
 	public ItemRenderer itemRenderer;
 	private int rendererUpdateCount;
-	private Entity pointedEntity = null;
+	private Entity pointedEntity;
 	private MouseFilter mouseFilterXAxis = new MouseFilter();
 	private MouseFilter mouseFilterYAxis = new MouseFilter();
 	private MouseFilter mouseFilterDummy1 = new MouseFilter();
@@ -30,43 +31,42 @@
 	private MouseFilter mouseFilterDummy4 = new MouseFilter();
 	private float thirdPersonDistance = 4.0F;
 	private float thirdPersonDistanceTemp = 4.0F;
-	private float debugCamYaw = 0.0F;
-	private float prevDebugCamYaw = 0.0F;
-	private float debugCamPitch = 0.0F;
-	private float prevDebugCamPitch = 0.0F;
+	private float debugCamYaw;
+	private float prevDebugCamYaw;
+	private float debugCamPitch;
+	private float prevDebugCamPitch;
 	private float smoothCamYaw;
 	private float smoothCamPitch;
 	private float smoothCamFilterX;
 	private float smoothCamFilterY;
 	private float smoothCamPartialTicks;
-	private float debugCamFOV = 0.0F;
-	private float prevDebugCamFOV = 0.0F;
-	private float camRoll = 0.0F;
-	private float prevCamRoll = 0.0F;
-	public int lightmapTexture;
-	private int[] lightmapColors;
+	private float debugCamFOV;
+	private float prevDebugCamFOV;
+	private float camRoll;
+	private float prevCamRoll;
+	private final DynamicTexture lightmapTexture;
+	private final int[] lightmapColors;
+	private final ResourceLocation field_110922_T;
 	private float fovModifierHand;
 	private float fovModifierHandPrev;
 	private float fovMultiplierTemp;
 	private float field_82831_U;
 	private float field_82832_V;
-	private boolean cloudFog = false;
+	private boolean cloudFog;
 	private double cameraZoom = 1.0D;
-	private double cameraYaw = 0.0D;
-	private double cameraPitch = 0.0D;
+	private double cameraYaw;
+	private double cameraPitch;
 	private long prevFrameTime = Minecraft.getSystemTime();
-	private long renderEndNanoTime = 0L;
-	private boolean lightmapUpdateNeeded = false;
-	float torchFlickerX = 0.0F;
-	float torchFlickerDX = 0.0F;
-	float torchFlickerY = 0.0F;
-	float torchFlickerDY = 0.0F;
+	private long renderEndNanoTime;
+	private boolean lightmapUpdateNeeded;
+	float torchFlickerX;
+	float torchFlickerDX;
+	float torchFlickerY;
+	float torchFlickerDY;
 	private Random random = new Random();
-	private int rainSoundCounter = 0;
+	private int rainSoundCounter;
 	float[] rainXCoords;
 	float[] rainYCoords;
-	volatile int field_78523_k = 0;
-	volatile int field_78520_l = 0;
 	FloatBuffer fogColorBuffer = GLAllocation.createDirectFloatBuffer(16);
 	float fogColorRed;
 	float fogColorGreen;
@@ -75,12 +75,13 @@
 	private float fogColor1;
 	public int debugViewDirection;
 	
-	public EntityRenderer(Minecraft par1Minecraft)
+	public EntityRenderer(Minecraft p_i1246_1_)
 	{
-		mc = par1Minecraft;
-		itemRenderer = new ItemRenderer(par1Minecraft);
-		lightmapTexture = par1Minecraft.renderEngine.allocateAndSetupTexture(new BufferedImage(16, 16, 1));
-		lightmapColors = new int[256];
+		mc = p_i1246_1_;
+		itemRenderer = new ItemRenderer(p_i1246_1_);
+		lightmapTexture = new DynamicTexture(16, 16);
+		field_110922_T = p_i1246_1_.func_110434_K().func_110578_a("lightMap", lightmapTexture);
+		lightmapColors = lightmapTexture.func_110565_c();
 	}
 	
 	private void addRainParticles()
@@ -93,7 +94,7 @@
 		if(var1 != 0.0F)
 		{
 			random.setSeed(rendererUpdateCount * 312987231L);
-			EntityLiving var2 = mc.renderViewEntity;
+			EntityLivingBase var2 = mc.renderViewEntity;
 			WorldClient var3 = mc.theWorld;
 			int var4 = MathHelper.floor_double(var2.posX);
 			int var5 = MathHelper.floor_double(var2.posY);
@@ -171,7 +172,7 @@
 		GL11.glScalef(var3, var3, var3);
 		GL11.glTranslatef(8.0F, 8.0F, 8.0F);
 		GL11.glMatrixMode(GL11.GL_MODELVIEW);
-		GL11.glBindTexture(GL11.GL_TEXTURE_2D, lightmapTexture);
+		mc.func_110434_K().func_110577_a(field_110922_T);
 		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_LINEAR);
 		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_LINEAR);
 		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_LINEAR);
@@ -180,7 +181,6 @@
 		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, GL11.GL_CLAMP);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
-		mc.renderEngine.resetBoundTexture();
 		OpenGlHelper.setActiveTexture(OpenGlHelper.defaultTexUnit);
 	}
 	
@@ -196,7 +196,7 @@
 				var4 += mc.gameSettings.fovSetting * 40.0F;
 				var4 *= fovModifierHandPrev + (fovModifierHand - fovModifierHandPrev) * par1;
 			}
-			if(var3.getHealth() <= 0)
+			if(var3.func_110143_aJ() <= 0.0F)
 			{
 				float var5 = var3.deathTime + par1;
 				var4 /= (1.0F - 500.0F / (var5 + 500.0F)) * 2.0F + 1.0F;
@@ -263,8 +263,17 @@
 							double var18 = var6.distanceTo(var17.hitVec);
 							if(var18 < var11 || var11 == 0.0D)
 							{
-								pointedEntity = var14;
-								var11 = var18;
+								if(var14 == mc.renderViewEntity.ridingEntity)
+								{
+									if(var11 == 0.0D)
+									{
+										pointedEntity = var14;
+									}
+								} else
+								{
+									pointedEntity = var14;
+									var11 = var18;
+								}
 							}
 						}
 					}
@@ -272,9 +281,9 @@
 				if(pointedEntity != null && (var11 < var4 || mc.objectMouseOver == null))
 				{
 					mc.objectMouseOver = new MovingObjectPosition(pointedEntity);
-					if(pointedEntity instanceof EntityLiving)
+					if(pointedEntity instanceof EntityLivingBase)
 					{
-						mc.pointedEntityLiving = (EntityLiving) pointedEntity;
+						mc.pointedEntityLiving = (EntityLivingBase) pointedEntity;
 					}
 				}
 			}
@@ -289,10 +298,10 @@
 	
 	private void hurtCameraEffect(float par1)
 	{
-		EntityLiving var2 = mc.renderViewEntity;
+		EntityLivingBase var2 = mc.renderViewEntity;
 		float var3 = var2.hurtTime - par1;
 		float var4;
-		if(var2.getHealth() <= 0)
+		if(var2.func_110143_aJ() <= 0.0F)
 		{
 			var4 = var2.deathTime + par1;
 			GL11.glRotatef(40.0F - 8000.0F / (var4 + 200.0F), 0.0F, 0.0F, 1.0F);
@@ -310,7 +319,7 @@
 	
 	private void orientCamera(float par1)
 	{
-		EntityLiving var2 = mc.renderViewEntity;
+		EntityLivingBase var2 = mc.renderViewEntity;
 		float var3 = var2.yOffset - 1.62F;
 		double var4 = var2.prevPosX + (var2.posX - var2.prevPosX) * par1;
 		double var6 = var2.prevPosY + (var2.posY - var2.prevPosY) * par1 - var3;
@@ -430,7 +439,7 @@
 				GL11.glTranslatef((float) cameraYaw, (float) -cameraPitch, 0.0F);
 				GL11.glScaled(cameraZoom, cameraZoom, 1.0D);
 			}
-			GLU.gluPerspective(getFOVModifier(par1, false), (float) mc.displayWidth / (float) mc.displayHeight, 0.05F, farPlaneDistance * 2.0F);
+			Project.gluPerspective(getFOVModifier(par1, false), (float) mc.displayWidth / (float) mc.displayHeight, 0.05F, farPlaneDistance * 2.0F);
 			if(mc.playerController.enableEverythingIsScrewedUpMode())
 			{
 				float var4 = 0.6666667F;
@@ -489,7 +498,7 @@
 					}
 				}
 			}
-			EntityLiving var41 = mc.renderViewEntity;
+			EntityLivingBase var41 = mc.renderViewEntity;
 			WorldClient var42 = mc.theWorld;
 			int var43 = MathHelper.floor_double(var41.posX);
 			int var44 = MathHelper.floor_double(var41.posY);
@@ -500,7 +509,7 @@
 			GL11.glEnable(GL11.GL_BLEND);
 			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 			GL11.glAlphaFunc(GL11.GL_GREATER, 0.01F);
-			mc.renderEngine.bindTexture("/environment/snow.png");
+			mc.func_110434_K().func_110577_a(field_110923_r);
 			double var9 = var41.lastTickPosX + (var41.posX - var41.lastTickPosX) * par1;
 			double var11 = var41.lastTickPosY + (var41.posY - var41.lastTickPosY) * par1;
 			double var13 = var41.lastTickPosZ + (var41.posZ - var41.lastTickPosZ) * par1;
@@ -561,7 +570,7 @@
 										var8.draw();
 									}
 									var18 = 0;
-									mc.renderEngine.bindTexture("/environment/rain.png");
+									mc.func_110434_K().func_110577_a(field_110924_q);
 									var8.startDrawingQuads();
 								}
 								var32 = ((rendererUpdateCount + var21 * var21 * 3121 + var21 * 45238971 + var20 * var20 * 418711 + var20 * 13761 & 31) + par1) / 32.0F * (3.0F + random.nextFloat());
@@ -586,7 +595,7 @@
 										var8.draw();
 									}
 									var18 = 1;
-									mc.renderEngine.bindTexture("/environment/snow.png");
+									mc.func_110434_K().func_110577_a(new ResourceLocation("textures/environment/snow.png"));
 									var8.startDrawingQuads();
 								}
 								var32 = ((rendererUpdateCount & 511) + par1) / 512.0F;
@@ -635,7 +644,7 @@
 		}
 		mc.mcProfiler.endStartSection("pick");
 		getMouseOver(par1);
-		EntityLiving var4 = mc.renderViewEntity;
+		EntityLivingBase var4 = mc.renderViewEntity;
 		RenderGlobal var5 = mc.renderGlobal;
 		EffectRenderer var6 = mc.effectRenderer;
 		double var7 = var4.lastTickPosX + (var4.posX - var4.lastTickPosX) * par1;
@@ -700,7 +709,7 @@
 			mc.mcProfiler.endStartSection("prepareterrain");
 			setupFog(0, par1);
 			GL11.glEnable(GL11.GL_FOG);
-			mc.renderEngine.bindTexture("/terrain.png");
+			mc.func_110434_K().func_110577_a(TextureMap.field_110575_b);
 			RenderHelper.disableStandardItemLighting();
 			mc.mcProfiler.endStartSection("terrain");
 			var5.sortAndRender(var4, 0, par1);
@@ -724,8 +733,7 @@
 					var17 = (EntityPlayer) var4;
 					GL11.glDisable(GL11.GL_ALPHA_TEST);
 					mc.mcProfiler.endStartSection("outline");
-					var5.drawBlockBreaking(var17, mc.objectMouseOver, 0, var17.inventory.getCurrentItem(), par1);
-					var5.drawSelectionBox(var17, mc.objectMouseOver, 0, var17.inventory.getCurrentItem(), par1);
+					var5.drawSelectionBox(var17, mc.objectMouseOver, 0, par1);
 					GL11.glEnable(GL11.GL_ALPHA_TEST);
 				}
 			}
@@ -736,7 +744,7 @@
 			setupFog(0, par1);
 			GL11.glEnable(GL11.GL_BLEND);
 			GL11.glDisable(GL11.GL_CULL_FACE);
-			mc.renderEngine.bindTexture("/terrain.png");
+			mc.func_110434_K().func_110577_a(TextureMap.field_110575_b);
 			if(mc.gameSettings.fancyGraphics)
 			{
 				mc.mcProfiler.endStartSection("water");
@@ -777,8 +785,7 @@
 				var17 = (EntityPlayer) var4;
 				GL11.glDisable(GL11.GL_ALPHA_TEST);
 				mc.mcProfiler.endStartSection("outline");
-				var5.drawBlockBreaking(var17, mc.objectMouseOver, 0, var17.inventory.getCurrentItem(), par1);
-				var5.drawSelectionBox(var17, mc.objectMouseOver, 0, var17.inventory.getCurrentItem(), par1);
+				var5.drawSelectionBox(var17, mc.objectMouseOver, 0, par1);
 				GL11.glEnable(GL11.GL_ALPHA_TEST);
 			}
 			mc.mcProfiler.endStartSection("destroyProgress");
@@ -832,7 +839,7 @@
 			GL11.glTranslatef((float) cameraYaw, (float) -cameraPitch, 0.0F);
 			GL11.glScaled(cameraZoom, cameraZoom, 1.0D);
 		}
-		GLU.gluPerspective(getFOVModifier(par1, true), (float) mc.displayWidth / (float) mc.displayHeight, 0.05F, farPlaneDistance * 2.0F);
+		Project.gluPerspective(getFOVModifier(par1, true), (float) mc.displayWidth / (float) mc.displayHeight, 0.05F, farPlaneDistance * 2.0F);
 		float var4;
 		if(mc.playerController.enableEverythingIsScrewedUpMode())
 		{
@@ -893,7 +900,7 @@
 	
 	private void setupFog(int par1, float par2)
 	{
-		EntityLiving var3 = mc.renderViewEntity;
+		EntityLivingBase var3 = mc.renderViewEntity;
 		boolean var4 = false;
 		if(var3 instanceof EntityPlayer)
 		{
@@ -939,101 +946,66 @@
 				{
 					GL11.glFogi(34138, 34139);
 				}
-			} else
+			} else if(cloudFog)
 			{
-				float var8;
-				float var9;
-				float var10;
-				float var11;
-				float var12;
-				if(cloudFog)
+				GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_EXP);
+				GL11.glFogf(GL11.GL_FOG_DENSITY, 0.1F);
+			} else if(var5 > 0 && Block.blocksList[var5].blockMaterial == Material.water)
+			{
+				GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_EXP);
+				if(var3.isPotionActive(Potion.waterBreathing))
 				{
-					GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_EXP);
-					GL11.glFogf(GL11.GL_FOG_DENSITY, 0.1F);
-					var6 = 1.0F;
-					var12 = 1.0F;
-					var8 = 1.0F;
-					if(mc.gameSettings.anaglyph)
-					{
-						var9 = (var6 * 30.0F + var12 * 59.0F + var8 * 11.0F) / 100.0F;
-						var10 = (var6 * 30.0F + var12 * 70.0F) / 100.0F;
-						var11 = (var6 * 30.0F + var8 * 70.0F) / 100.0F;
-					}
-				} else if(var5 > 0 && Block.blocksList[var5].blockMaterial == Material.water)
-				{
-					GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_EXP);
-					if(var3.isPotionActive(Potion.waterBreathing))
-					{
-						GL11.glFogf(GL11.GL_FOG_DENSITY, 0.05F);
-					} else
-					{
-						GL11.glFogf(GL11.GL_FOG_DENSITY, 0.1F);
-					}
-					var6 = 0.4F;
-					var12 = 0.4F;
-					var8 = 0.9F;
-					if(mc.gameSettings.anaglyph)
-					{
-						var9 = (var6 * 30.0F + var12 * 59.0F + var8 * 11.0F) / 100.0F;
-						var10 = (var6 * 30.0F + var12 * 70.0F) / 100.0F;
-						var11 = (var6 * 30.0F + var8 * 70.0F) / 100.0F;
-					}
-				} else if(var5 > 0 && Block.blocksList[var5].blockMaterial == Material.lava)
-				{
-					GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_EXP);
-					GL11.glFogf(GL11.GL_FOG_DENSITY, 2.0F);
-					var6 = 0.4F;
-					var12 = 0.3F;
-					var8 = 0.3F;
-					if(mc.gameSettings.anaglyph)
-					{
-						var9 = (var6 * 30.0F + var12 * 59.0F + var8 * 11.0F) / 100.0F;
-						var10 = (var6 * 30.0F + var12 * 70.0F) / 100.0F;
-						var11 = (var6 * 30.0F + var8 * 70.0F) / 100.0F;
-					}
+					GL11.glFogf(GL11.GL_FOG_DENSITY, 0.05F);
 				} else
 				{
-					var6 = farPlaneDistance;
-					if(mc.theWorld.provider.getWorldHasVoidParticles() && !var4)
+					GL11.glFogf(GL11.GL_FOG_DENSITY, 0.1F - EnchantmentHelper.getRespiration(var3) * 0.03F);
+				}
+			} else if(var5 > 0 && Block.blocksList[var5].blockMaterial == Material.lava)
+			{
+				GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_EXP);
+				GL11.glFogf(GL11.GL_FOG_DENSITY, 2.0F);
+			} else
+			{
+				var6 = farPlaneDistance;
+				if(mc.theWorld.provider.getWorldHasVoidParticles() && !var4)
+				{
+					double var10 = ((var3.getBrightnessForRender(par2) & 15728640) >> 20) / 16.0D + (var3.lastTickPosY + (var3.posY - var3.lastTickPosY) * par2 + 4.0D) / 32.0D;
+					if(var10 < 1.0D)
 					{
-						double var13 = ((var3.getBrightnessForRender(par2) & 15728640) >> 20) / 16.0D + (var3.lastTickPosY + (var3.posY - var3.lastTickPosY) * par2 + 4.0D) / 32.0D;
-						if(var13 < 1.0D)
+						if(var10 < 0.0D)
 						{
-							if(var13 < 0.0D)
-							{
-								var13 = 0.0D;
-							}
-							var13 *= var13;
-							var9 = 100.0F * (float) var13;
-							if(var9 < 5.0F)
-							{
-								var9 = 5.0F;
-							}
-							if(var6 > var9)
-							{
-								var6 = var9;
-							}
+							var10 = 0.0D;
+						}
+						var10 *= var10;
+						float var9 = 100.0F * (float) var10;
+						if(var9 < 5.0F)
+						{
+							var9 = 5.0F;
+						}
+						if(var6 > var9)
+						{
+							var6 = var9;
 						}
 					}
-					GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_LINEAR);
-					if(par1 < 0)
-					{
-						GL11.glFogf(GL11.GL_FOG_START, 0.0F);
-						GL11.glFogf(GL11.GL_FOG_END, var6 * 0.8F);
-					} else
-					{
-						GL11.glFogf(GL11.GL_FOG_START, var6 * 0.25F);
-						GL11.glFogf(GL11.GL_FOG_END, var6);
-					}
-					if(GLContext.getCapabilities().GL_NV_fog_distance)
-					{
-						GL11.glFogi(34138, 34139);
-					}
-					if(mc.theWorld.provider.doesXZShowFog((int) var3.posX, (int) var3.posZ))
-					{
-						GL11.glFogf(GL11.GL_FOG_START, var6 * 0.05F);
-						GL11.glFogf(GL11.GL_FOG_END, Math.min(var6, 192.0F) * 0.5F);
-					}
+				}
+				GL11.glFogi(GL11.GL_FOG_MODE, GL11.GL_LINEAR);
+				if(par1 < 0)
+				{
+					GL11.glFogf(GL11.GL_FOG_START, 0.0F);
+					GL11.glFogf(GL11.GL_FOG_END, var6 * 0.8F);
+				} else
+				{
+					GL11.glFogf(GL11.GL_FOG_START, var6 * 0.25F);
+					GL11.glFogf(GL11.GL_FOG_END, var6);
+				}
+				if(GLContext.getCapabilities().GL_NV_fog_distance)
+				{
+					GL11.glFogi(34138, 34139);
+				}
+				if(mc.theWorld.provider.doesXZShowFog((int) var3.posX, (int) var3.posZ))
+				{
+					GL11.glFogf(GL11.GL_FOG_START, var6 * 0.05F);
+					GL11.glFogf(GL11.GL_FOG_END, Math.min(var6, 192.0F) * 0.5F);
 				}
 			}
 			GL11.glEnable(GL11.GL_COLOR_MATERIAL);
@@ -1167,10 +1139,6 @@
 					var11.addCrashSectionCallable("Screen size", new CallableScreenSize(this, var13));
 					throw new ReportedException(var10);
 				}
-				if(mc.currentScreen != null && mc.currentScreen.guiParticles != null)
-				{
-					mc.currentScreen.guiParticles.draw(par1);
-				}
 			}
 		}
 	}
@@ -1178,7 +1146,7 @@
 	private void updateFogColor(float par1)
 	{
 		WorldClient var2 = mc.theWorld;
-		EntityLiving var3 = mc.renderViewEntity;
+		EntityLivingBase var3 = mc.renderViewEntity;
 		float var4 = 1.0F / (4 - mc.gameSettings.renderDistance);
 		var4 = 1.0F - (float) Math.pow(var4, 0.25D);
 		Vec3 var5 = var2.getSkyColor(mc.renderViewEntity, par1);
@@ -1232,6 +1200,7 @@
 			fogColorBlue *= var20;
 		}
 		int var21 = ActiveRenderInfo.getBlockIdAtEntityViewpoint(mc.theWorld, var3, par1);
+		float var22;
 		if(cloudFog)
 		{
 			Vec3 var13 = var2.getCloudColour(par1);
@@ -1240,16 +1209,17 @@
 			fogColorBlue = (float) var13.zCoord;
 		} else if(var21 != 0 && Block.blocksList[var21].blockMaterial == Material.water)
 		{
-			fogColorRed = 0.02F;
-			fogColorGreen = 0.02F;
-			fogColorBlue = 0.2F;
+			var22 = EnchantmentHelper.getRespiration(var3) * 0.2F;
+			fogColorRed = 0.02F + var22;
+			fogColorGreen = 0.02F + var22;
+			fogColorBlue = 0.2F + var22;
 		} else if(var21 != 0 && Block.blocksList[var21].blockMaterial == Material.lava)
 		{
 			fogColorRed = 0.6F;
 			fogColorGreen = 0.1F;
 			fogColorBlue = 0.0F;
 		}
-		float var22 = fogColor2 + (fogColor1 - fogColor2) * par1;
+		var22 = fogColor2 + (fogColor1 - fogColor2) * par1;
 		fogColorRed *= var22;
 		fogColorGreen *= var22;
 		fogColorBlue *= var22;
@@ -1439,7 +1409,8 @@
 				int var23 = (int) (var15 * 255.0F);
 				lightmapColors[var3] = var20 << 24 | var21 << 16 | var22 << 8 | var23;
 			}
-			mc.renderEngine.createTextureFromBytes(lightmapColors, 16, 16, lightmapTexture);
+			lightmapTexture.func_110564_a();
+			lightmapUpdateNeeded = false;
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySelectorArmoredMob.java b/RMCClient/minecraft/net/minecraft/src/EntitySelectorArmoredMob.java
index 14f9a20..698f5bf 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySelectorArmoredMob.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySelectorArmoredMob.java
@@ -4,19 +4,19 @@
 {
 	private final ItemStack field_96567_c;
 	
-	public EntitySelectorArmoredMob(ItemStack par1ItemStack)
+	public EntitySelectorArmoredMob(ItemStack p_i1584_1_)
 	{
-		field_96567_c = par1ItemStack;
+		field_96567_c = p_i1584_1_;
 	}
 	
 	@Override public boolean isEntityApplicable(Entity par1Entity)
 	{
 		if(!par1Entity.isEntityAlive()) return false;
-		else if(!(par1Entity instanceof EntityLiving)) return false;
+		else if(!(par1Entity instanceof EntityLivingBase)) return false;
 		else
 		{
-			EntityLiving var2 = (EntityLiving) par1Entity;
-			return var2.getCurrentItemOrArmor(EntityLiving.getArmorPosition(field_96567_c)) != null ? false : var2.canPickUpLoot() || var2 instanceof EntityPlayer;
+			EntityLivingBase var2 = (EntityLivingBase) par1Entity;
+			return var2.getCurrentItemOrArmor(EntityLiving.getArmorPosition(field_96567_c)) != null ? false : var2 instanceof EntityLiving ? ((EntityLiving) var2).canPickUpLoot() : var2 instanceof EntityPlayer;
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySenses.java b/RMCClient/minecraft/net/minecraft/src/EntitySenses.java
index a15f3e6..85f8cdc 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySenses.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySenses.java
@@ -9,9 +9,9 @@
 	List seenEntities = new ArrayList();
 	List unseenEntities = new ArrayList();
 	
-	public EntitySenses(EntityLiving par1EntityLiving)
+	public EntitySenses(EntityLiving p_i1672_1_)
 	{
-		entityObj = par1EntityLiving;
+		entityObj = p_i1672_1_;
 	}
 	
 	public boolean canSee(Entity par1Entity)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySheep.java b/RMCClient/minecraft/net/minecraft/src/EntitySheep.java
index 41bbe31..80af91d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySheep.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySheep.java
@@ -9,20 +9,18 @@
 	private int sheepTimer;
 	private EntityAIEatGrass aiEatGrass = new EntityAIEatGrass(this);
 	
-	public EntitySheep(World par1World)
+	public EntitySheep(World p_i1691_1_)
 	{
-		super(par1World);
-		texture = "/mob/sheep.png";
+		super(p_i1691_1_);
 		setSize(0.9F, 1.3F);
-		float var2 = 0.23F;
 		getNavigator().setAvoidsWater(true);
 		tasks.addTask(0, new EntityAISwimming(this));
-		tasks.addTask(1, new EntityAIPanic(this, 0.38F));
-		tasks.addTask(2, new EntityAIMate(this, var2));
-		tasks.addTask(3, new EntityAITempt(this, 0.25F, Item.wheat.itemID, false));
-		tasks.addTask(4, new EntityAIFollowParent(this, 0.25F));
+		tasks.addTask(1, new EntityAIPanic(this, 1.25D));
+		tasks.addTask(2, new EntityAIMate(this, 1.0D));
+		tasks.addTask(3, new EntityAITempt(this, 1.1D, Item.wheat.itemID, false));
+		tasks.addTask(4, new EntityAIFollowParent(this, 1.1D));
 		tasks.addTask(5, aiEatGrass);
-		tasks.addTask(6, new EntityAIWander(this, var2));
+		tasks.addTask(6, new EntityAIWander(this, 1.0D));
 		tasks.addTask(7, new EntityAIWatchClosest(this, EntityPlayer.class, 6.0F));
 		tasks.addTask(8, new EntityAILookIdle(this));
 		field_90016_e.setInventorySlotContents(0, new ItemStack(Item.dyePowder, 1, 0));
@@ -47,12 +45,7 @@
 		setSheared(false);
 		if(isChild())
 		{
-			int var1 = getGrowingAge() + 1200;
-			if(var1 > 0)
-			{
-				var1 = 0;
-			}
-			setGrowingAge(var1);
+			func_110195_a(60);
 		}
 	}
 	
@@ -60,6 +53,20 @@
 	{
 		super.entityInit();
 		dataWatcher.addObject(16, new Byte((byte) 0));
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(8.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.23000000417232513D);
+	}
+	
+	@Override public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
+	{
+		p_110161_1_ = super.func_110161_a(p_110161_1_);
+		setFleeceColor(getRandomFleeceColor(worldObj.rand));
+		return p_110161_1_;
 	}
 	
 	public float func_70890_k(float par1)
@@ -133,11 +140,6 @@
 		return "mob.sheep.say";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 8;
-	}
-	
 	public boolean getSheared()
 	{
 		return (dataWatcher.getWatchableObjectByte(16) & 16) != 0;
@@ -152,11 +154,6 @@
 		{
 			super.handleHealthUpdate(par1);
 		}
-	}
-	
-	@Override public void initCreature()
-	{
-		setFleeceColor(getRandomFleeceColor(worldObj.rand));
 	}
 	
 	@Override public boolean interact(EntityPlayer par1EntityPlayer)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySilverfish.java b/RMCClient/minecraft/net/minecraft/src/EntitySilverfish.java
index eaff5d0..15f1b7d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySilverfish.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySilverfish.java
@@ -4,12 +4,10 @@
 {
 	private int allySummonCooldown;
 	
-	public EntitySilverfish(World par1World)
+	public EntitySilverfish(World p_i1740_1_)
 	{
-		super(par1World);
-		texture = "/mob/silverfish.png";
+		super(p_i1740_1_);
 		setSize(0.3F, 0.7F);
-		moveSpeed = 0.6F;
 	}
 	
 	@Override protected void attackEntity(Entity par1Entity, float par2)
@@ -21,7 +19,7 @@
 		}
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -45,9 +43,12 @@
 		return worldObj.getClosestVulnerablePlayerToEntity(this, var1);
 	}
 	
-	@Override public int getAttackStrength(Entity par1Entity)
+	@Override protected void func_110147_ax()
 	{
-		return 1;
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(8.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.6000000238418579D);
+		func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(1.0D);
 	}
 	
 	@Override public float getBlockPathWeight(int par1, int par2, int par3)
@@ -87,11 +88,6 @@
 	@Override protected String getLivingSound()
 	{
 		return "mob.silverfish.say";
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 8;
 	}
 	
 	@Override protected boolean isValidLightLevel()
@@ -137,7 +133,23 @@
 								int var8 = worldObj.getBlockId(var1 + var6, var2 + var5, var3 + var7);
 								if(var8 == Block.silverfish.blockID)
 								{
-									worldObj.destroyBlock(var1 + var6, var2 + var5, var3 + var7, false);
+									if(!worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"))
+									{
+										int var9 = worldObj.getBlockMetadata(var1 + var6, var2 + var5, var3 + var7);
+										Block var10 = Block.stone;
+										if(var9 == 1)
+										{
+											var10 = Block.cobblestone;
+										}
+										if(var9 == 2)
+										{
+											var10 = Block.stoneBrick;
+										}
+										worldObj.setBlock(var1 + var6, var2 + var5, var3 + var7, var10.blockID, 0, 3);
+									} else
+									{
+										worldObj.destroyBlock(var1 + var6, var2 + var5, var3 + var7, false);
+									}
 									Block.silverfish.onBlockDestroyedByPlayer(worldObj, var1 + var6, var2 + var5, var3 + var7, 0);
 									if(rand.nextBoolean())
 									{
@@ -155,11 +167,11 @@
 				var1 = MathHelper.floor_double(posX);
 				var2 = MathHelper.floor_double(posY + 0.5D);
 				var3 = MathHelper.floor_double(posZ);
-				int var9 = rand.nextInt(6);
-				var5 = worldObj.getBlockId(var1 + Facing.offsetsXForSide[var9], var2 + Facing.offsetsYForSide[var9], var3 + Facing.offsetsZForSide[var9]);
+				int var11 = rand.nextInt(6);
+				var5 = worldObj.getBlockId(var1 + Facing.offsetsXForSide[var11], var2 + Facing.offsetsYForSide[var11], var3 + Facing.offsetsZForSide[var11]);
 				if(BlockSilverfish.getPosingIdByMetadata(var5))
 				{
-					worldObj.setBlock(var1 + Facing.offsetsXForSide[var9], var2 + Facing.offsetsYForSide[var9], var3 + Facing.offsetsZForSide[var9], Block.silverfish.blockID, BlockSilverfish.getMetadataForBlockType(var5), 3);
+					worldObj.setBlock(var1 + Facing.offsetsXForSide[var11], var2 + Facing.offsetsYForSide[var11], var3 + Facing.offsetsZForSide[var11], Block.silverfish.blockID, BlockSilverfish.getMetadataForBlockType(var5), 3);
 					spawnExplosionParticle();
 					setDead();
 				} else
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySkeleton.java b/RMCClient/minecraft/net/minecraft/src/EntitySkeleton.java
index 33ec58f..93b784d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySkeleton.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySkeleton.java
@@ -4,23 +4,21 @@
 
 public class EntitySkeleton extends EntityMob implements IRangedAttackMob
 {
-	private EntityAIArrowAttack aiArrowAttack = new EntityAIArrowAttack(this, 0.25F, 20, 60, 15.0F);
-	private EntityAIAttackOnCollide aiAttackOnCollide = new EntityAIAttackOnCollide(this, EntityPlayer.class, 0.31F, false);
+	private EntityAIArrowAttack aiArrowAttack = new EntityAIArrowAttack(this, 1.0D, 20, 60, 15.0F);
+	private EntityAIAttackOnCollide aiAttackOnCollide = new EntityAIAttackOnCollide(this, EntityPlayer.class, 1.2D, false);
 	
-	public EntitySkeleton(World par1World)
+	public EntitySkeleton(World p_i1741_1_)
 	{
-		super(par1World);
-		texture = "/mob/skeleton.png";
-		moveSpeed = 0.25F;
+		super(p_i1741_1_);
 		tasks.addTask(1, new EntityAISwimming(this));
 		tasks.addTask(2, new EntityAIRestrictSun(this));
-		tasks.addTask(3, new EntityAIFleeSun(this, moveSpeed));
-		tasks.addTask(5, new EntityAIWander(this, moveSpeed));
+		tasks.addTask(3, new EntityAIFleeSun(this, 1.0D));
+		tasks.addTask(5, new EntityAIWander(this, 1.0D));
 		tasks.addTask(6, new EntityAIWatchClosest(this, EntityPlayer.class, 8.0F));
 		tasks.addTask(6, new EntityAILookIdle(this));
 		targetTasks.addTask(1, new EntityAIHurtByTarget(this, false));
-		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, 16.0F, 0, true));
-		if(par1World != null && !par1World.isRemote)
+		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, 0, true));
+		if(p_i1741_1_ != null && !p_i1741_1_.isRemote)
 		{
 			setCombatTask();
 		}
@@ -36,15 +34,15 @@
 	{
 		if(super.attackEntityAsMob(par1Entity))
 		{
-			if(getSkeletonType() == 1 && par1Entity instanceof EntityLiving)
+			if(getSkeletonType() == 1 && par1Entity instanceof EntityLivingBase)
 			{
-				((EntityLiving) par1Entity).addPotionEffect(new PotionEffect(Potion.wither.id, 200));
+				((EntityLivingBase) par1Entity).addPotionEffect(new PotionEffect(Potion.wither.id, 200));
 			}
 			return true;
 		} else return false;
 	}
 	
-	@Override public void attackEntityWithRangedAttack(EntityLiving par1EntityLiving, float par2)
+	@Override public void attackEntityWithRangedAttack(EntityLivingBase par1EntityLiving, float par2)
 	{
 		EntityArrow var3 = new EntityArrow(worldObj, this, par1EntityLiving, 1.6F, 14 - worldObj.difficultySetting * 4);
 		int var4 = EnchantmentHelper.getEnchantmentLevel(Enchantment.power.effectId, getHeldItem());
@@ -106,18 +104,38 @@
 		dataWatcher.addObject(13, new Byte((byte) 0));
 	}
 	
-	@Override public int getAttackStrength(Entity par1Entity)
+	@Override protected void func_110147_ax()
 	{
-		if(getSkeletonType() == 1)
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.25D);
+	}
+	
+	@Override public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
+	{
+		p_110161_1_ = super.func_110161_a(p_110161_1_);
+		if(worldObj.provider instanceof WorldProviderHell && getRNG().nextInt(5) > 0)
 		{
-			ItemStack var2 = getHeldItem();
-			int var3 = 4;
-			if(var2 != null)
+			tasks.addTask(4, aiAttackOnCollide);
+			setSkeletonType(1);
+			setCurrentItemOrArmor(0, new ItemStack(Item.swordStone));
+			func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(4.0D);
+		} else
+		{
+			tasks.addTask(4, aiArrowAttack);
+			addRandomArmor();
+			func_82162_bC();
+		}
+		setCanPickUpLoot(rand.nextFloat() < 0.55F * worldObj.func_110746_b(posX, posY, posZ));
+		if(getCurrentItemOrArmor(4) == null)
+		{
+			Calendar var2 = worldObj.getCurrentDate();
+			if(var2.get(2) + 1 == 10 && var2.get(5) == 31 && rand.nextFloat() < 0.25F)
 			{
-				var3 += var2.getDamageVsEntity(this);
+				setCurrentItemOrArmor(4, new ItemStack(rand.nextFloat() < 0.1F ? Block.pumpkinLantern : Block.pumpkin));
+				equipmentDropChances[4] = 0.0F;
 			}
-			return var3;
-		} else return super.getAttackStrength(par1Entity);
+		}
+		return p_110161_1_;
 	}
 	
 	@Override public EnumCreatureAttribute getCreatureAttribute()
@@ -145,44 +163,14 @@
 		return "mob.skeleton.say";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 20;
-	}
-	
 	public int getSkeletonType()
 	{
 		return dataWatcher.getWatchableObjectByte(13);
 	}
 	
-	@Override public String getTexture()
+	@Override public double getYOffset()
 	{
-		return getSkeletonType() == 1 ? "/mob/skeleton_wither.png" : super.getTexture();
-	}
-	
-	@Override public void initCreature()
-	{
-		if(worldObj.provider instanceof WorldProviderHell && getRNG().nextInt(5) > 0)
-		{
-			tasks.addTask(4, aiAttackOnCollide);
-			setSkeletonType(1);
-			setCurrentItemOrArmor(0, new ItemStack(Item.swordStone));
-		} else
-		{
-			tasks.addTask(4, aiArrowAttack);
-			addRandomArmor();
-			func_82162_bC();
-		}
-		setCanPickUpLoot(rand.nextFloat() < pickUpLootProability[worldObj.difficultySetting]);
-		if(getCurrentItemOrArmor(4) == null)
-		{
-			Calendar var1 = worldObj.getCurrentDate();
-			if(var1.get(2) + 1 == 10 && var1.get(5) == 31 && rand.nextFloat() < 0.25F)
-			{
-				setCurrentItemOrArmor(4, new ItemStack(rand.nextFloat() < 0.1F ? Block.pumpkinLantern : Block.pumpkin));
-				equipmentDropChances[4] = 0.0F;
-			}
-		}
+		return super.getYOffset() - 0.5D;
 	}
 	
 	@Override public boolean isAIEnabled()
@@ -292,6 +280,16 @@
 		}
 	}
 	
+	@Override public void updateRidden()
+	{
+		super.updateRidden();
+		if(ridingEntity instanceof EntityCreature)
+		{
+			EntityCreature var1 = (EntityCreature) ridingEntity;
+			renderYawOffset = var1.renderYawOffset;
+		}
+	}
+	
 	@Override public void writeEntityToNBT(NBTTagCompound par1NBTTagCompound)
 	{
 		super.writeEntityToNBT(par1NBTTagCompound);
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySlime.java b/RMCClient/minecraft/net/minecraft/src/EntitySlime.java
index bac2265..5ac8737 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySlime.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySlime.java
@@ -2,16 +2,14 @@
 
 public class EntitySlime extends EntityLiving implements IMob
 {
-	private static final float[] spawnChances = new float[] { 1.0F, 0.75F, 0.5F, 0.25F, 0.0F, 0.25F, 0.5F, 0.75F };
 	public float field_70813_a;
 	public float field_70811_b;
 	public float field_70812_c;
-	private int slimeJumpDelay = 0;
+	private int slimeJumpDelay;
 	
-	public EntitySlime(World par1World)
+	public EntitySlime(World p_i1742_1_)
 	{
-		super(par1World);
-		texture = "/mob/slime.png";
+		super(p_i1742_1_);
 		int var2 = 1 << rand.nextInt(3);
 		yOffset = 0.0F;
 		slimeJumpDelay = rand.nextInt(20) + 10;
@@ -53,7 +51,7 @@
 			if(getSlimeSize() == 1 || worldObj.difficultySetting > 0)
 			{
 				BiomeGenBase var2 = worldObj.getBiomeGenForCoords(MathHelper.floor_double(posX), MathHelper.floor_double(posZ));
-				if(var2 == BiomeGenBase.swampland && posY > 50.0D && posY < 70.0D && rand.nextFloat() < 0.5F && rand.nextFloat() < spawnChances[worldObj.getMoonPhase()] && worldObj.getBlockLightValue(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ)) <= rand.nextInt(8)) return super.getCanSpawnHere();
+				if(var2 == BiomeGenBase.swampland && posY > 50.0D && posY < 70.0D && rand.nextFloat() < 0.5F && rand.nextFloat() < worldObj.func_130001_d() && worldObj.getBlockLightValue(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ)) <= rand.nextInt(8)) return super.getCanSpawnHere();
 				if(rand.nextInt(10) == 0 && var1.getRandomWithSeed(987234911L).nextInt(10) == 0 && posY < 40.0D) return super.getCanSpawnHere();
 			}
 			return false;
@@ -83,12 +81,6 @@
 	protected String getJumpSound()
 	{
 		return "mob.slime." + (getSlimeSize() > 1 ? "big" : "small");
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		int var1 = getSlimeSize();
-		return var1 * var1;
 	}
 	
 	protected String getSlimeParticle()
@@ -181,7 +173,7 @@
 	@Override public void setDead()
 	{
 		int var1 = getSlimeSize();
-		if(!worldObj.isRemote && var1 > 1 && getHealth() <= 0)
+		if(!worldObj.isRemote && var1 > 1 && func_110143_aJ() <= 0.0F)
 		{
 			int var2 = 2 + rand.nextInt(3);
 			for(int var3 = 0; var3 < var2; ++var3)
@@ -202,7 +194,8 @@
 		dataWatcher.updateObject(16, new Byte((byte) par1));
 		setSize(0.6F * par1, 0.6F * par1);
 		setPosition(posX, posY, posZ);
-		setEntityHealth(getMaxHealth());
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(par1 * par1);
+		setEntityHealth(func_110138_aP());
 		experienceValue = par1;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySmallFireball.java b/RMCClient/minecraft/net/minecraft/src/EntitySmallFireball.java
index b02d17d..997cff6 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySmallFireball.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySmallFireball.java
@@ -2,25 +2,25 @@
 
 public class EntitySmallFireball extends EntityFireball
 {
-	public EntitySmallFireball(World par1World)
+	public EntitySmallFireball(World p_i1770_1_)
 	{
-		super(par1World);
+		super(p_i1770_1_);
 		setSize(0.3125F, 0.3125F);
 	}
 	
-	public EntitySmallFireball(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntitySmallFireball(World p_i1772_1_, double p_i1772_2_, double p_i1772_4_, double p_i1772_6_, double p_i1772_8_, double p_i1772_10_, double p_i1772_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
+		super(p_i1772_1_, p_i1772_2_, p_i1772_4_, p_i1772_6_, p_i1772_8_, p_i1772_10_, p_i1772_12_);
 		setSize(0.3125F, 0.3125F);
 	}
 	
-	public EntitySmallFireball(World par1World, EntityLiving par2EntityLiving, double par3, double par5, double par7)
+	public EntitySmallFireball(World p_i1771_1_, EntityLivingBase p_i1771_2_, double p_i1771_3_, double p_i1771_5_, double p_i1771_7_)
 	{
-		super(par1World, par2EntityLiving, par3, par5, par7);
+		super(p_i1771_1_, p_i1771_2_, p_i1771_3_, p_i1771_5_, p_i1771_7_);
 		setSize(0.3125F, 0.3125F);
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		return false;
 	}
@@ -36,7 +36,7 @@
 		{
 			if(par1MovingObjectPosition.entityHit != null)
 			{
-				if(!par1MovingObjectPosition.entityHit.isImmuneToFire() && par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeFireballDamage(this, shootingEntity), 5))
+				if(!par1MovingObjectPosition.entityHit.isImmuneToFire() && par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeFireballDamage(this, shootingEntity), 5.0F))
 				{
 					par1MovingObjectPosition.entityHit.setFire(5);
 				}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySmokeFX.java b/RMCClient/minecraft/net/minecraft/src/EntitySmokeFX.java
index a50a09c..b871e86 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySmokeFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySmokeFX.java
@@ -4,26 +4,26 @@
 {
 	float smokeParticleScale;
 	
-	public EntitySmokeFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntitySmokeFX(World p_i1225_1_, double p_i1225_2_, double p_i1225_4_, double p_i1225_6_, double p_i1225_8_, double p_i1225_10_, double p_i1225_12_)
 	{
-		this(par1World, par2, par4, par6, par8, par10, par12, 1.0F);
+		this(p_i1225_1_, p_i1225_2_, p_i1225_4_, p_i1225_6_, p_i1225_8_, p_i1225_10_, p_i1225_12_, 1.0F);
 	}
 	
-	public EntitySmokeFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, float par14)
+	public EntitySmokeFX(World p_i1226_1_, double p_i1226_2_, double p_i1226_4_, double p_i1226_6_, double p_i1226_8_, double p_i1226_10_, double p_i1226_12_, float p_i1226_14_)
 	{
-		super(par1World, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+		super(p_i1226_1_, p_i1226_2_, p_i1226_4_, p_i1226_6_, 0.0D, 0.0D, 0.0D);
 		motionX *= 0.10000000149011612D;
 		motionY *= 0.10000000149011612D;
 		motionZ *= 0.10000000149011612D;
-		motionX += par8;
-		motionY += par10;
-		motionZ += par12;
+		motionX += p_i1226_8_;
+		motionY += p_i1226_10_;
+		motionZ += p_i1226_12_;
 		particleRed = particleGreen = particleBlue = (float) (Math.random() * 0.30000001192092896D);
 		particleScale *= 0.75F;
-		particleScale *= par14;
+		particleScale *= p_i1226_14_;
 		smokeParticleScale = particleScale;
 		particleMaxAge = (int) (8.0D / (Math.random() * 0.8D + 0.2D));
-		particleMaxAge = (int) (particleMaxAge * par14);
+		particleMaxAge = (int) (particleMaxAge * p_i1226_14_);
 		noClip = false;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySnowShovelFX.java b/RMCClient/minecraft/net/minecraft/src/EntitySnowShovelFX.java
index d589d8e..e2ae7fe 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySnowShovelFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySnowShovelFX.java
@@ -4,26 +4,26 @@
 {
 	float snowDigParticleScale;
 	
-	public EntitySnowShovelFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntitySnowShovelFX(World p_i1227_1_, double p_i1227_2_, double p_i1227_4_, double p_i1227_6_, double p_i1227_8_, double p_i1227_10_, double p_i1227_12_)
 	{
-		this(par1World, par2, par4, par6, par8, par10, par12, 1.0F);
+		this(p_i1227_1_, p_i1227_2_, p_i1227_4_, p_i1227_6_, p_i1227_8_, p_i1227_10_, p_i1227_12_, 1.0F);
 	}
 	
-	public EntitySnowShovelFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, float par14)
+	public EntitySnowShovelFX(World p_i1228_1_, double p_i1228_2_, double p_i1228_4_, double p_i1228_6_, double p_i1228_8_, double p_i1228_10_, double p_i1228_12_, float p_i1228_14_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
+		super(p_i1228_1_, p_i1228_2_, p_i1228_4_, p_i1228_6_, p_i1228_8_, p_i1228_10_, p_i1228_12_);
 		motionX *= 0.10000000149011612D;
 		motionY *= 0.10000000149011612D;
 		motionZ *= 0.10000000149011612D;
-		motionX += par8;
-		motionY += par10;
-		motionZ += par12;
+		motionX += p_i1228_8_;
+		motionY += p_i1228_10_;
+		motionZ += p_i1228_12_;
 		particleRed = particleGreen = particleBlue = 1.0F - (float) (Math.random() * 0.30000001192092896D);
 		particleScale *= 0.75F;
-		particleScale *= par14;
+		particleScale *= p_i1228_14_;
 		snowDigParticleScale = particleScale;
 		particleMaxAge = (int) (8.0D / (Math.random() * 0.8D + 0.2D));
-		particleMaxAge = (int) (particleMaxAge * par14);
+		particleMaxAge = (int) (particleMaxAge * p_i1228_14_);
 		noClip = false;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySnowball.java b/RMCClient/minecraft/net/minecraft/src/EntitySnowball.java
index a7d0179..f8d1fc9 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySnowball.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySnowball.java
@@ -2,19 +2,19 @@
 
 public class EntitySnowball extends EntityThrowable
 {
-	public EntitySnowball(World par1World)
+	public EntitySnowball(World p_i1773_1_)
 	{
-		super(par1World);
+		super(p_i1773_1_);
 	}
 	
-	public EntitySnowball(World par1World, double par2, double par4, double par6)
+	public EntitySnowball(World p_i1775_1_, double p_i1775_2_, double p_i1775_4_, double p_i1775_6_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1775_1_, p_i1775_2_, p_i1775_4_, p_i1775_6_);
 	}
 	
-	public EntitySnowball(World par1World, EntityLiving par2EntityLiving)
+	public EntitySnowball(World p_i1774_1_, EntityLivingBase p_i1774_2_)
 	{
-		super(par1World, par2EntityLiving);
+		super(p_i1774_1_, p_i1774_2_);
 	}
 	
 	@Override protected void onImpact(MovingObjectPosition par1MovingObjectPosition)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySnowman.java b/RMCClient/minecraft/net/minecraft/src/EntitySnowman.java
index a81a4e0..4fcffd1 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySnowman.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySnowman.java
@@ -2,20 +2,19 @@
 
 public class EntitySnowman extends EntityGolem implements IRangedAttackMob
 {
-	public EntitySnowman(World par1World)
+	public EntitySnowman(World p_i1692_1_)
 	{
-		super(par1World);
-		texture = "/mob/snowman.png";
+		super(p_i1692_1_);
 		setSize(0.4F, 1.8F);
 		getNavigator().setAvoidsWater(true);
-		tasks.addTask(1, new EntityAIArrowAttack(this, 0.25F, 20, 10.0F));
-		tasks.addTask(2, new EntityAIWander(this, 0.2F));
+		tasks.addTask(1, new EntityAIArrowAttack(this, 1.25D, 20, 10.0F));
+		tasks.addTask(2, new EntityAIWander(this, 1.0D));
 		tasks.addTask(3, new EntityAIWatchClosest(this, EntityPlayer.class, 6.0F));
 		tasks.addTask(4, new EntityAILookIdle(this));
-		targetTasks.addTask(1, new EntityAINearestAttackableTarget(this, EntityLiving.class, 16.0F, 0, true, false, IMob.mobSelector));
+		targetTasks.addTask(1, new EntityAINearestAttackableTarget(this, EntityLiving.class, 0, true, false, IMob.mobSelector));
 	}
 	
-	@Override public void attackEntityWithRangedAttack(EntityLiving par1EntityLiving, float par2)
+	@Override public void attackEntityWithRangedAttack(EntityLivingBase par1EntityLiving, float par2)
 	{
 		EntitySnowball var3 = new EntitySnowball(worldObj, this);
 		double var4 = par1EntityLiving.posX - posX;
@@ -36,14 +35,16 @@
 		}
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(4.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.20000000298023224D);
+	}
+	
 	@Override protected int getDropItemId()
 	{
 		return Item.snowball.itemID;
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 4;
 	}
 	
 	@Override public boolean isAIEnabled()
@@ -56,13 +57,13 @@
 		super.onLivingUpdate();
 		if(isWet())
 		{
-			attackEntityFrom(DamageSource.drown, 1);
+			attackEntityFrom(DamageSource.drown, 1.0F);
 		}
 		int var1 = MathHelper.floor_double(posX);
 		int var2 = MathHelper.floor_double(posZ);
 		if(worldObj.getBiomeGenForCoords(var1, var2).getFloatTemperature() > 1.0F)
 		{
-			attackEntityFrom(DamageSource.onFire, 1);
+			attackEntityFrom(DamageSource.onFire, 1.0F);
 		}
 		for(var1 = 0; var1 < 4; ++var1)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySorter.java b/RMCClient/minecraft/net/minecraft/src/EntitySorter.java
index 213ee31..aa73752 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySorter.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySorter.java
@@ -8,11 +8,11 @@
 	private double entityPosY;
 	private double entityPosZ;
 	
-	public EntitySorter(Entity par1Entity)
+	public EntitySorter(Entity p_i1242_1_)
 	{
-		entityPosX = -par1Entity.posX;
-		entityPosY = -par1Entity.posY;
-		entityPosZ = -par1Entity.posZ;
+		entityPosX = -p_i1242_1_.posX;
+		entityPosY = -p_i1242_1_.posY;
+		entityPosZ = -p_i1242_1_.posZ;
 	}
 	
 	@Override public int compare(Object par1Obj, Object par2Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySpellParticleFX.java b/RMCClient/minecraft/net/minecraft/src/EntitySpellParticleFX.java
index d1d74bd..0ae673d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySpellParticleFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySpellParticleFX.java
@@ -4,11 +4,11 @@
 {
 	private int baseSpellTextureIndex = 128;
 	
-	public EntitySpellParticleFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntitySpellParticleFX(World p_i1229_1_, double p_i1229_2_, double p_i1229_4_, double p_i1229_6_, double p_i1229_8_, double p_i1229_10_, double p_i1229_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
+		super(p_i1229_1_, p_i1229_2_, p_i1229_4_, p_i1229_6_, p_i1229_8_, p_i1229_10_, p_i1229_12_);
 		motionY *= 0.20000000298023224D;
-		if(par8 == 0.0D && par12 == 0.0D)
+		if(p_i1229_8_ == 0.0D && p_i1229_12_ == 0.0D)
 		{
 			motionX *= 0.10000000149011612D;
 			motionZ *= 0.10000000149011612D;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySpider.java b/RMCClient/minecraft/net/minecraft/src/EntitySpider.java
index a2b8b19..959bbda 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySpider.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySpider.java
@@ -2,12 +2,10 @@
 
 public class EntitySpider extends EntityMob
 {
-	public EntitySpider(World par1World)
+	public EntitySpider(World p_i1743_1_)
 	{
-		super(par1World);
-		texture = "/mob/spider.png";
+		super(p_i1743_1_);
 		setSize(1.4F, 0.9F);
-		moveSpeed = 0.8F;
 	}
 	
 	@Override protected void attackEntity(Entity par1Entity, float par2)
@@ -61,6 +59,43 @@
 		} else return null;
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(16.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.800000011920929D);
+	}
+	
+	@Override public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
+	{
+		Object p_110161_1_1 = super.func_110161_a(p_110161_1_);
+		if(worldObj.rand.nextInt(100) == 0)
+		{
+			EntitySkeleton var2 = new EntitySkeleton(worldObj);
+			var2.setLocationAndAngles(posX, posY, posZ, rotationYaw, 0.0F);
+			var2.func_110161_a((EntityLivingData) null);
+			worldObj.spawnEntityInWorld(var2);
+			var2.mountEntity(this);
+		}
+		if(p_110161_1_1 == null)
+		{
+			p_110161_1_1 = new SpiderEffectsGroupData();
+			if(worldObj.difficultySetting > 2 && worldObj.rand.nextFloat() < 0.1F * worldObj.func_110746_b(posX, posY, posZ))
+			{
+				((SpiderEffectsGroupData) p_110161_1_1).func_111104_a(worldObj.rand);
+			}
+		}
+		if(p_110161_1_1 instanceof SpiderEffectsGroupData)
+		{
+			int var4 = ((SpiderEffectsGroupData) p_110161_1_1).field_111105_a;
+			if(var4 > 0 && Potion.potionTypes[var4] != null)
+			{
+				addPotionEffect(new PotionEffect(var4, Integer.MAX_VALUE));
+			}
+		}
+		return (EntityLivingData) p_110161_1_1;
+	}
+	
 	@Override public EnumCreatureAttribute getCreatureAttribute()
 	{
 		return EnumCreatureAttribute.ARTHROPOD;
@@ -84,28 +119,6 @@
 	@Override protected String getLivingSound()
 	{
 		return "mob.spider.say";
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 16;
-	}
-	
-	@Override public double getMountedYOffset()
-	{
-		return height * 0.75D - 0.5D;
-	}
-	
-	@Override public void initCreature()
-	{
-		if(worldObj.rand.nextInt(100) == 0)
-		{
-			EntitySkeleton var1 = new EntitySkeleton(worldObj);
-			var1.setLocationAndAngles(posX, posY, posZ, rotationYaw, 0.0F);
-			var1.initCreature();
-			worldObj.spawnEntityInWorld(var1);
-			var1.mountEntity(this);
-		}
 	}
 	
 	public boolean isBesideClimbableBlock()
@@ -152,10 +165,5 @@
 	
 	@Override public void setInWeb()
 	{
-	}
-	
-	public float spiderScaleAmount()
-	{
-		return 1.0F;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySplashFX.java b/RMCClient/minecraft/net/minecraft/src/EntitySplashFX.java
index 89a4b49..fdaad48 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySplashFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySplashFX.java
@@ -2,16 +2,16 @@
 
 public class EntitySplashFX extends EntityRainFX
 {
-	public EntitySplashFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntitySplashFX(World p_i1230_1_, double p_i1230_2_, double p_i1230_4_, double p_i1230_6_, double p_i1230_8_, double p_i1230_10_, double p_i1230_12_)
 	{
-		super(par1World, par2, par4, par6);
+		super(p_i1230_1_, p_i1230_2_, p_i1230_4_, p_i1230_6_);
 		particleGravity = 0.04F;
 		nextTextureIndexX();
-		if(par10 == 0.0D && (par8 != 0.0D || par12 != 0.0D))
+		if(p_i1230_10_ == 0.0D && (p_i1230_8_ != 0.0D || p_i1230_12_ != 0.0D))
 		{
-			motionX = par8;
-			motionY = par10 + 0.1D;
-			motionZ = par12;
+			motionX = p_i1230_8_;
+			motionY = p_i1230_10_ + 0.1D;
+			motionZ = p_i1230_12_;
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySquid.java b/RMCClient/minecraft/net/minecraft/src/EntitySquid.java
index e4c07ea..84f2051 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySquid.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySquid.java
@@ -2,27 +2,31 @@
 
 public class EntitySquid extends EntityWaterMob
 {
-	public float squidPitch = 0.0F;
-	public float prevSquidPitch = 0.0F;
-	public float squidYaw = 0.0F;
-	public float prevSquidYaw = 0.0F;
-	public float field_70867_h = 0.0F;
-	public float field_70868_i = 0.0F;
-	public float tentacleAngle = 0.0F;
-	public float prevTentacleAngle = 0.0F;
-	private float randomMotionSpeed = 0.0F;
-	private float field_70864_bA = 0.0F;
-	private float field_70871_bB = 0.0F;
-	private float randomMotionVecX = 0.0F;
-	private float randomMotionVecY = 0.0F;
-	private float randomMotionVecZ = 0.0F;
+	public float squidPitch;
+	public float prevSquidPitch;
+	public float squidYaw;
+	public float prevSquidYaw;
+	public float field_70867_h;
+	public float field_70868_i;
+	public float tentacleAngle;
+	public float prevTentacleAngle;
+	private float randomMotionSpeed;
+	private float field_70864_bA;
+	private float field_70871_bB;
+	private float randomMotionVecX;
+	private float randomMotionVecY;
+	private float randomMotionVecZ;
 	
-	public EntitySquid(World par1World)
+	public EntitySquid(World p_i1693_1_)
 	{
-		super(par1World);
-		texture = "/mob/squid.png";
+		super(p_i1693_1_);
 		setSize(0.95F, 0.95F);
 		field_70864_bA = 1.0F / (rand.nextFloat() + 1.0F) * 0.2F;
+	}
+	
+	@Override protected boolean canTriggerWalking()
+	{
+		return false;
 	}
 	
 	@Override protected void dropFewItems(boolean par1, int par2)
@@ -32,6 +36,12 @@
 		{
 			entityDropItem(new ItemStack(Item.dyePowder, 1, 0), 0.0F);
 		}
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(10.0D);
 	}
 	
 	@Override public boolean getCanSpawnHere()
@@ -57,11 +67,6 @@
 	@Override protected String getLivingSound()
 	{
 		return null;
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 10;
 	}
 	
 	@Override protected float getSoundVolume()
diff --git a/RMCClient/minecraft/net/minecraft/src/EntitySuspendFX.java b/RMCClient/minecraft/net/minecraft/src/EntitySuspendFX.java
index eee4c4d..a3a69c5 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntitySuspendFX.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntitySuspendFX.java
@@ -2,18 +2,18 @@
 
 public class EntitySuspendFX extends EntityFX
 {
-	public EntitySuspendFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntitySuspendFX(World p_i1231_1_, double p_i1231_2_, double p_i1231_4_, double p_i1231_6_, double p_i1231_8_, double p_i1231_10_, double p_i1231_12_)
 	{
-		super(par1World, par2, par4 - 0.125D, par6, par8, par10, par12);
+		super(p_i1231_1_, p_i1231_2_, p_i1231_4_ - 0.125D, p_i1231_6_, p_i1231_8_, p_i1231_10_, p_i1231_12_);
 		particleRed = 0.4F;
 		particleGreen = 0.4F;
 		particleBlue = 0.7F;
 		setParticleTextureIndex(0);
 		setSize(0.01F, 0.01F);
 		particleScale *= rand.nextFloat() * 0.6F + 0.2F;
-		motionX = par8 * 0.0D;
-		motionY = par10 * 0.0D;
-		motionZ = par12 * 0.0D;
+		motionX = p_i1231_8_ * 0.0D;
+		motionY = p_i1231_10_ * 0.0D;
+		motionZ = p_i1231_12_ * 0.0D;
 		particleMaxAge = (int) (16.0D / (Math.random() * 0.8D + 0.2D));
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityTNTPrimed.java b/RMCClient/minecraft/net/minecraft/src/EntityTNTPrimed.java
index 396bc37..da5bf68 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityTNTPrimed.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityTNTPrimed.java
@@ -3,30 +3,29 @@
 public class EntityTNTPrimed extends Entity
 {
 	public int fuse;
-	private EntityLiving tntPlacedBy;
+	private EntityLivingBase tntPlacedBy;
 	
-	public EntityTNTPrimed(World par1World)
+	public EntityTNTPrimed(World p_i1729_1_)
 	{
-		super(par1World);
-		fuse = 0;
+		super(p_i1729_1_);
 		preventEntitySpawning = true;
 		setSize(0.98F, 0.98F);
 		yOffset = height / 2.0F;
 	}
 	
-	public EntityTNTPrimed(World par1World, double par2, double par4, double par6, EntityLiving par8EntityLiving)
+	public EntityTNTPrimed(World p_i1730_1_, double p_i1730_2_, double p_i1730_4_, double p_i1730_6_, EntityLivingBase p_i1730_8_)
 	{
-		this(par1World);
-		setPosition(par2, par4, par6);
+		this(p_i1730_1_);
+		setPosition(p_i1730_2_, p_i1730_4_, p_i1730_6_);
 		float var9 = (float) (Math.random() * Math.PI * 2.0D);
 		motionX = -((float) Math.sin(var9)) * 0.02F;
 		motionY = 0.20000000298023224D;
 		motionZ = -((float) Math.cos(var9)) * 0.02F;
 		fuse = 80;
-		prevPosX = par2;
-		prevPosY = par4;
-		prevPosZ = par6;
-		tntPlacedBy = par8EntityLiving;
+		prevPosX = p_i1730_2_;
+		prevPosY = p_i1730_4_;
+		prevPosZ = p_i1730_6_;
+		tntPlacedBy = p_i1730_8_;
 	}
 	
 	@Override public boolean canBeCollidedWith()
@@ -54,7 +53,7 @@
 		return 0.0F;
 	}
 	
-	public EntityLiving getTntPlacedBy()
+	public EntityLivingBase getTntPlacedBy()
 	{
 		return tntPlacedBy;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityTameable.java b/RMCClient/minecraft/net/minecraft/src/EntityTameable.java
index dca5bee..4317a46 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityTameable.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityTameable.java
@@ -1,12 +1,12 @@
 package net.minecraft.src;
 
-public abstract class EntityTameable extends EntityAnimal
+public abstract class EntityTameable extends EntityAnimal implements EntityOwnable
 {
 	protected EntityAISit aiSit = new EntityAISit(this);
 	
-	public EntityTameable(World par1World)
+	public EntityTameable(World p_i1604_1_)
 	{
-		super(par1World);
+		super(p_i1604_1_);
 	}
 	
 	@Override protected void entityInit()
@@ -16,21 +16,52 @@
 		dataWatcher.addObject(17, "");
 	}
 	
+	public EntityLivingBase func_130012_q()
+	{
+		return worldObj.getPlayerEntityByName(getOwnerName());
+	}
+	
+	@Override public boolean func_142014_c(EntityLivingBase p_142014_1_)
+	{
+		if(isTamed())
+		{
+			EntityLivingBase var2 = func_130012_q();
+			if(p_142014_1_ == var2) return true;
+			if(var2 != null) return var2.func_142014_c(p_142014_1_);
+		}
+		return super.func_142014_c(p_142014_1_);
+	}
+	
+	public boolean func_142018_a(EntityLivingBase p_142018_1_, EntityLivingBase p_142018_2_)
+	{
+		return true;
+	}
+	
 	public EntityAISit func_70907_r()
 	{
 		return aiSit;
 	}
 	
-	public EntityLiving getOwner()
+	@Override public Entity getOwner()
 	{
-		return worldObj.getPlayerEntityByName(getOwnerName());
+		return func_130012_q();
 	}
 	
-	public String getOwnerName()
+	@Override public String getOwnerName()
 	{
 		return dataWatcher.getWatchableObjectString(17);
 	}
 	
+	@Override public Team getTeam()
+	{
+		if(isTamed())
+		{
+			EntityLivingBase var1 = func_130012_q();
+			if(var1 != null) return var1.getTeam();
+		}
+		return super.getTeam();
+	}
+	
 	@Override public void handleHealthUpdate(byte par1)
 	{
 		if(par1 == 7)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityThrowable.java b/RMCClient/minecraft/net/minecraft/src/EntityThrowable.java
index 80df079..dd1476e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityThrowable.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityThrowable.java
@@ -7,35 +7,35 @@
 	private int xTile = -1;
 	private int yTile = -1;
 	private int zTile = -1;
-	private int inTile = 0;
-	protected boolean inGround = false;
-	public int throwableShake = 0;
-	private EntityLiving thrower;
-	private String throwerName = null;
+	private int inTile;
+	protected boolean inGround;
+	public int throwableShake;
+	private EntityLivingBase thrower;
+	private String throwerName;
 	private int ticksInGround;
-	private int ticksInAir = 0;
+	private int ticksInAir;
 	
-	public EntityThrowable(World par1World)
+	public EntityThrowable(World p_i1776_1_)
 	{
-		super(par1World);
+		super(p_i1776_1_);
 		setSize(0.25F, 0.25F);
 	}
 	
-	public EntityThrowable(World par1World, double par2, double par4, double par6)
+	public EntityThrowable(World p_i1778_1_, double p_i1778_2_, double p_i1778_4_, double p_i1778_6_)
 	{
-		super(par1World);
+		super(p_i1778_1_);
 		ticksInGround = 0;
 		setSize(0.25F, 0.25F);
-		setPosition(par2, par4, par6);
+		setPosition(p_i1778_2_, p_i1778_4_, p_i1778_6_);
 		yOffset = 0.0F;
 	}
 	
-	public EntityThrowable(World par1World, EntityLiving par2EntityLiving)
+	public EntityThrowable(World p_i1777_1_, EntityLivingBase p_i1777_2_)
 	{
-		super(par1World);
-		thrower = par2EntityLiving;
+		super(p_i1777_1_);
+		thrower = p_i1777_2_;
 		setSize(0.25F, 0.25F);
-		setLocationAndAngles(par2EntityLiving.posX, par2EntityLiving.posY + par2EntityLiving.getEyeHeight(), par2EntityLiving.posZ, par2EntityLiving.rotationYaw, par2EntityLiving.rotationPitch);
+		setLocationAndAngles(p_i1777_2_.posX, p_i1777_2_.posY + p_i1777_2_.getEyeHeight(), p_i1777_2_.posZ, p_i1777_2_.rotationYaw, p_i1777_2_.rotationPitch);
 		posX -= MathHelper.cos(rotationYaw / 180.0F * (float) Math.PI) * 0.16F;
 		posY -= 0.10000000149011612D;
 		posZ -= MathHelper.sin(rotationYaw / 180.0F * (float) Math.PI) * 0.16F;
@@ -72,7 +72,7 @@
 		return 0.0F;
 	}
 	
-	public EntityLiving getThrower()
+	public EntityLivingBase getThrower()
 	{
 		if(thrower == null && throwerName != null && throwerName.length() > 0)
 		{
@@ -136,7 +136,7 @@
 			Entity var4 = null;
 			List var5 = worldObj.getEntitiesWithinAABBExcludingEntity(this, boundingBox.addCoord(motionX, motionY, motionZ).expand(1.0D, 1.0D, 1.0D));
 			double var6 = 0.0D;
-			EntityLiving var8 = getThrower();
+			EntityLivingBase var8 = getThrower();
 			for(int var9 = 0; var9 < var5.size(); ++var9)
 			{
 				Entity var10 = (Entity) var5.get(var9);
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityTracker.java b/RMCClient/minecraft/net/minecraft/src/EntityTracker.java
index 5bc4c2c..e2aeffc 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityTracker.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityTracker.java
@@ -12,10 +12,10 @@
 	private IntHashMap trackedEntityIDs = new IntHashMap();
 	private int entityViewDistance;
 	
-	public EntityTracker(WorldServer par1WorldServer)
+	public EntityTracker(WorldServer p_i1516_1_)
 	{
-		theWorld = par1WorldServer;
-		entityViewDistance = par1WorldServer.getMinecraftServer().getConfigurationManager().getEntityViewDistance();
+		theWorld = p_i1516_1_;
+		entityViewDistance = p_i1516_1_.getMinecraftServer().getConfigurationManager().getEntityViewDistance();
 	}
 	
 	public void addEntityToTracker(Entity par1Entity)
@@ -96,7 +96,7 @@
 		} else if(par1Entity instanceof EntityFallingSand)
 		{
 			this.addEntityToTracker(par1Entity, 160, 20, true);
-		} else if(par1Entity instanceof EntityPainting)
+		} else if(par1Entity instanceof EntityHanging)
 		{
 			this.addEntityToTracker(par1Entity, 160, Integer.MAX_VALUE, false);
 		} else if(par1Entity instanceof EntityXPOrb)
@@ -105,9 +105,6 @@
 		} else if(par1Entity instanceof EntityEnderCrystal)
 		{
 			this.addEntityToTracker(par1Entity, 256, Integer.MAX_VALUE, false);
-		} else if(par1Entity instanceof EntityItemFrame)
-		{
-			this.addEntityToTracker(par1Entity, 160, Integer.MAX_VALUE, false);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityTrackerEntry.java b/RMCClient/minecraft/net/minecraft/src/EntityTrackerEntry.java
index 2ef2225..81c0a18 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityTrackerEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityTrackerEntry.java
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.Collection;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
@@ -19,35 +20,54 @@
 	public double motionX;
 	public double motionY;
 	public double motionZ;
-	public int ticks = 0;
+	public int ticks;
 	private double posX;
 	private double posY;
 	private double posZ;
-	private boolean isDataInitialized = false;
+	private boolean isDataInitialized;
 	private boolean sendVelocityUpdates;
-	private int ticksSinceLastForcedTeleport = 0;
+	private int ticksSinceLastForcedTeleport;
 	private Entity field_85178_v;
-	private boolean ridingEntity = false;
-	public boolean playerEntitiesUpdated = false;
+	private boolean ridingEntity;
+	public boolean playerEntitiesUpdated;
 	public Set trackingPlayers = new HashSet();
 	
-	public EntityTrackerEntry(Entity par1Entity, int par2, int par3, boolean par4)
+	public EntityTrackerEntry(Entity p_i1525_1_, int p_i1525_2_, int p_i1525_3_, boolean p_i1525_4_)
 	{
-		myEntity = par1Entity;
-		blocksDistanceThreshold = par2;
-		updateFrequency = par3;
-		sendVelocityUpdates = par4;
-		lastScaledXPosition = MathHelper.floor_double(par1Entity.posX * 32.0D);
-		lastScaledYPosition = MathHelper.floor_double(par1Entity.posY * 32.0D);
-		lastScaledZPosition = MathHelper.floor_double(par1Entity.posZ * 32.0D);
-		lastYaw = MathHelper.floor_float(par1Entity.rotationYaw * 256.0F / 360.0F);
-		lastPitch = MathHelper.floor_float(par1Entity.rotationPitch * 256.0F / 360.0F);
-		lastHeadMotion = MathHelper.floor_float(par1Entity.getRotationYawHead() * 256.0F / 360.0F);
+		myEntity = p_i1525_1_;
+		blocksDistanceThreshold = p_i1525_2_;
+		updateFrequency = p_i1525_3_;
+		sendVelocityUpdates = p_i1525_4_;
+		lastScaledXPosition = MathHelper.floor_double(p_i1525_1_.posX * 32.0D);
+		lastScaledYPosition = MathHelper.floor_double(p_i1525_1_.posY * 32.0D);
+		lastScaledZPosition = MathHelper.floor_double(p_i1525_1_.posZ * 32.0D);
+		lastYaw = MathHelper.floor_float(p_i1525_1_.rotationYaw * 256.0F / 360.0F);
+		lastPitch = MathHelper.floor_float(p_i1525_1_.rotationPitch * 256.0F / 360.0F);
+		lastHeadMotion = MathHelper.floor_float(p_i1525_1_.getRotationYawHead() * 256.0F / 360.0F);
 	}
 	
 	@Override public boolean equals(Object par1Obj)
 	{
 		return par1Obj instanceof EntityTrackerEntry ? ((EntityTrackerEntry) par1Obj).myEntity.entityId == myEntity.entityId : false;
+	}
+	
+	private void func_111190_b()
+	{
+		DataWatcher var1 = myEntity.getDataWatcher();
+		if(var1.hasChanges())
+		{
+			sendPacketToAllAssociatedPlayers(new Packet40EntityMetadata(myEntity.entityId, var1, false));
+		}
+		if(myEntity instanceof EntityLivingBase)
+		{
+			ServersideAttributeMap var2 = (ServersideAttributeMap) ((EntityLivingBase) myEntity).func_110140_aT();
+			Set var3 = var2.func_111161_b();
+			if(!var3.isEmpty())
+			{
+				sendPacketToAllAssociatedPlayers(new Packet44UpdateAttributes(myEntity.entityId, var3));
+			}
+			var3.clear();
+		}
 	}
 	
 	private Packet getPacketForThisEntity()
@@ -60,19 +80,19 @@
 		else if(myEntity instanceof EntityPlayerMP) return new Packet20NamedEntitySpawn((EntityPlayer) myEntity);
 		else if(myEntity instanceof EntityMinecart)
 		{
-			EntityMinecart var8 = (EntityMinecart) myEntity;
-			return new Packet23VehicleSpawn(myEntity, 10, var8.getMinecartType());
+			EntityMinecart var9 = (EntityMinecart) myEntity;
+			return new Packet23VehicleSpawn(myEntity, 10, var9.getMinecartType());
 		} else if(myEntity instanceof EntityBoat) return new Packet23VehicleSpawn(myEntity, 1);
 		else if(!(myEntity instanceof IAnimals) && !(myEntity instanceof EntityDragon))
 		{
 			if(myEntity instanceof EntityFishHook)
 			{
-				EntityPlayer var7 = ((EntityFishHook) myEntity).angler;
-				return new Packet23VehicleSpawn(myEntity, 90, var7 != null ? var7.entityId : myEntity.entityId);
+				EntityPlayer var8 = ((EntityFishHook) myEntity).angler;
+				return new Packet23VehicleSpawn(myEntity, 90, var8 != null ? var8.entityId : myEntity.entityId);
 			} else if(myEntity instanceof EntityArrow)
 			{
-				Entity var6 = ((EntityArrow) myEntity).shootingEntity;
-				return new Packet23VehicleSpawn(myEntity, 60, var6 != null ? var6.entityId : myEntity.entityId);
+				Entity var7 = ((EntityArrow) myEntity).shootingEntity;
+				return new Packet23VehicleSpawn(myEntity, 60, var7 != null ? var7.entityId : myEntity.entityId);
 			} else if(myEntity instanceof EntitySnowball) return new Packet23VehicleSpawn(myEntity, 61);
 			else if(myEntity instanceof EntityPotion) return new Packet23VehicleSpawn(myEntity, 73, ((EntityPotion) myEntity).getPotionDamage());
 			else if(myEntity instanceof EntityExpBottle) return new Packet23VehicleSpawn(myEntity, 75);
@@ -84,7 +104,7 @@
 				Packet23VehicleSpawn var2;
 				if(myEntity instanceof EntityFireball)
 				{
-					EntityFireball var5 = (EntityFireball) myEntity;
+					EntityFireball var6 = (EntityFireball) myEntity;
 					var2 = null;
 					byte var3 = 63;
 					if(myEntity instanceof EntitySmallFireball)
@@ -94,29 +114,37 @@
 					{
 						var3 = 66;
 					}
-					if(var5.shootingEntity != null)
+					if(var6.shootingEntity != null)
 					{
 						var2 = new Packet23VehicleSpawn(myEntity, var3, ((EntityFireball) myEntity).shootingEntity.entityId);
 					} else
 					{
 						var2 = new Packet23VehicleSpawn(myEntity, var3, 0);
 					}
-					var2.speedX = (int) (var5.accelerationX * 8000.0D);
-					var2.speedY = (int) (var5.accelerationY * 8000.0D);
-					var2.speedZ = (int) (var5.accelerationZ * 8000.0D);
+					var2.speedX = (int) (var6.accelerationX * 8000.0D);
+					var2.speedY = (int) (var6.accelerationY * 8000.0D);
+					var2.speedZ = (int) (var6.accelerationZ * 8000.0D);
 					return var2;
 				} else if(myEntity instanceof EntityEgg) return new Packet23VehicleSpawn(myEntity, 62);
 				else if(myEntity instanceof EntityTNTPrimed) return new Packet23VehicleSpawn(myEntity, 50);
 				else if(myEntity instanceof EntityEnderCrystal) return new Packet23VehicleSpawn(myEntity, 51);
 				else if(myEntity instanceof EntityFallingSand)
 				{
-					EntityFallingSand var4 = (EntityFallingSand) myEntity;
-					return new Packet23VehicleSpawn(myEntity, 70, var4.blockID | var4.metadata << 16);
+					EntityFallingSand var5 = (EntityFallingSand) myEntity;
+					return new Packet23VehicleSpawn(myEntity, 70, var5.blockID | var5.metadata << 16);
 				} else if(myEntity instanceof EntityPainting) return new Packet25EntityPainting((EntityPainting) myEntity);
 				else if(myEntity instanceof EntityItemFrame)
 				{
-					EntityItemFrame var1 = (EntityItemFrame) myEntity;
-					var2 = new Packet23VehicleSpawn(myEntity, 71, var1.hangingDirection);
+					EntityItemFrame var4 = (EntityItemFrame) myEntity;
+					var2 = new Packet23VehicleSpawn(myEntity, 71, var4.hangingDirection);
+					var2.xPosition = MathHelper.floor_float(var4.xPosition * 32);
+					var2.yPosition = MathHelper.floor_float(var4.yPosition * 32);
+					var2.zPosition = MathHelper.floor_float(var4.zPosition * 32);
+					return var2;
+				} else if(myEntity instanceof EntityLeashKnot)
+				{
+					EntityLeashKnot var1 = (EntityLeashKnot) myEntity;
+					var2 = new Packet23VehicleSpawn(myEntity, 77);
 					var2.xPosition = MathHelper.floor_float(var1.xPosition * 32);
 					var2.yPosition = MathHelper.floor_float(var1.yPosition * 32);
 					var2.zPosition = MathHelper.floor_float(var1.zPosition * 32);
@@ -127,7 +155,7 @@
 		} else
 		{
 			lastHeadMotion = MathHelper.floor_float(myEntity.getRotationYawHead() * 256.0F / 360.0F);
-			return new Packet24MobSpawn((EntityLiving) myEntity);
+			return new Packet24MobSpawn((EntityLivingBase) myEntity);
 		}
 	}
 	
@@ -192,7 +220,7 @@
 		if(field_85178_v != myEntity.ridingEntity || myEntity.ridingEntity != null && ticks % 60 == 0)
 		{
 			field_85178_v = myEntity.ridingEntity;
-			sendPacketToAllTrackingPlayers(new Packet39AttachEntity(myEntity, myEntity.ridingEntity));
+			sendPacketToAllTrackingPlayers(new Packet39AttachEntity(0, myEntity, myEntity.ridingEntity));
 		}
 		if(myEntity instanceof EntityItemFrame && ticks % 10 == 0)
 		{
@@ -201,27 +229,23 @@
 			if(var24 != null && var24.getItem() instanceof ItemMap)
 			{
 				MapData var26 = Item.map.getMapData(var24, myEntity.worldObj);
-				Iterator var29 = par1List.iterator();
-				while(var29.hasNext())
+				Iterator var27 = par1List.iterator();
+				while(var27.hasNext())
 				{
-					EntityPlayer var30 = (EntityPlayer) var29.next();
-					EntityPlayerMP var31 = (EntityPlayerMP) var30;
-					var26.updateVisiblePlayers(var31, var24);
-					if(var31.playerNetServerHandler.packetSize() <= 5)
+					EntityPlayer var28 = (EntityPlayer) var27.next();
+					EntityPlayerMP var29 = (EntityPlayerMP) var28;
+					var26.updateVisiblePlayers(var29, var24);
+					if(var29.playerNetServerHandler.packetSize() <= 5)
 					{
-						Packet var32 = Item.map.createMapDataPacket(var24, myEntity.worldObj, var31);
-						if(var32 != null)
+						Packet var30 = Item.map.createMapDataPacket(var24, myEntity.worldObj, var29);
+						if(var30 != null)
 						{
-							var31.playerNetServerHandler.sendPacketToPlayer(var32);
+							var29.playerNetServerHandler.sendPacketToPlayer(var30);
 						}
 					}
 				}
 			}
-			DataWatcher var28 = myEntity.getDataWatcher();
-			if(var28.hasChanges())
-			{
-				sendPacketToAllAssociatedPlayers(new Packet40EntityMetadata(myEntity.entityId, var28, false));
-			}
+			func_111190_b();
 		} else if(ticks % updateFrequency == 0 || myEntity.isAirBorne || myEntity.getDataWatcher().hasChanges())
 		{
 			int var2;
@@ -279,11 +303,7 @@
 				{
 					sendPacketToAllTrackingPlayers((Packet) var10);
 				}
-				DataWatcher var33 = myEntity.getDataWatcher();
-				if(var33.hasChanges())
-				{
-					sendPacketToAllAssociatedPlayers(new Packet40EntityMetadata(myEntity.entityId, var33, false));
-				}
+				func_111190_b();
 				if(var11)
 				{
 					lastScaledXPosition = var2;
@@ -310,11 +330,7 @@
 				lastScaledXPosition = myEntity.myEntitySize.multiplyBy32AndRound(myEntity.posX);
 				lastScaledYPosition = MathHelper.floor_double(myEntity.posY * 32.0D);
 				lastScaledZPosition = myEntity.myEntitySize.multiplyBy32AndRound(myEntity.posZ);
-				DataWatcher var27 = myEntity.getDataWatcher();
-				if(var27.hasChanges())
-				{
-					sendPacketToAllAssociatedPlayers(new Packet40EntityMetadata(myEntity.entityId, var27, false));
-				}
+				func_111190_b();
 				ridingEntity = true;
 			}
 			var2 = MathHelper.floor_float(myEntity.getRotationYawHead() * 256.0F / 360.0F);
@@ -369,6 +385,15 @@
 					{
 						par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet40EntityMetadata(myEntity.entityId, myEntity.getDataWatcher(), true));
 					}
+					if(myEntity instanceof EntityLivingBase)
+					{
+						ServersideAttributeMap var7 = (ServersideAttributeMap) ((EntityLivingBase) myEntity).func_110140_aT();
+						Collection var8 = var7.func_111160_c();
+						if(!var8.isEmpty())
+						{
+							par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet44UpdateAttributes(myEntity.entityId, var8));
+						}
+					}
 					motionX = myEntity.motionX;
 					motionY = myEntity.motionY;
 					motionZ = myEntity.motionZ;
@@ -378,16 +403,20 @@
 					}
 					if(myEntity.ridingEntity != null)
 					{
-						par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet39AttachEntity(myEntity, myEntity.ridingEntity));
+						par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet39AttachEntity(0, myEntity, myEntity.ridingEntity));
 					}
-					if(myEntity instanceof EntityLiving)
+					if(myEntity instanceof EntityLiving && ((EntityLiving) myEntity).func_110166_bE() != null)
 					{
-						for(int var7 = 0; var7 < 5; ++var7)
+						par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet39AttachEntity(1, myEntity, ((EntityLiving) myEntity).func_110166_bE()));
+					}
+					if(myEntity instanceof EntityLivingBase)
+					{
+						for(int var10 = 0; var10 < 5; ++var10)
 						{
-							ItemStack var8 = ((EntityLiving) myEntity).getCurrentItemOrArmor(var7);
-							if(var8 != null)
+							ItemStack var13 = ((EntityLivingBase) myEntity).getCurrentItemOrArmor(var10);
+							if(var13 != null)
 							{
-								par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet5PlayerInventory(myEntity.entityId, var7, var8));
+								par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet5PlayerInventory(myEntity.entityId, var10, var13));
 							}
 						}
 					}
@@ -399,10 +428,10 @@
 							par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet17Sleep(myEntity, 0, MathHelper.floor_double(myEntity.posX), MathHelper.floor_double(myEntity.posY), MathHelper.floor_double(myEntity.posZ)));
 						}
 					}
-					if(myEntity instanceof EntityLiving)
+					if(myEntity instanceof EntityLivingBase)
 					{
-						EntityLiving var10 = (EntityLiving) myEntity;
-						Iterator var12 = var10.getActivePotionEffects().iterator();
+						EntityLivingBase var14 = (EntityLivingBase) myEntity;
+						Iterator var12 = var14.getActivePotionEffects().iterator();
 						while(var12.hasNext())
 						{
 							PotionEffect var9 = (PotionEffect) var12.next();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityVillager.java b/RMCClient/minecraft/net/minecraft/src/EntityVillager.java
index fd4690f..f3d289a 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityVillager.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityVillager.java
@@ -6,7 +6,7 @@
 import java.util.Map;
 import java.util.Random;
 
-public class EntityVillager extends EntityAgeable implements INpc, IMerchant
+public class EntityVillager extends EntityAgeable implements IMerchant, INpc
 {
 	private int randomTickDivider;
 	private boolean isMating;
@@ -23,38 +23,32 @@
 	private static final Map villagerStockList = new HashMap();
 	private static final Map blacksmithSellingList = new HashMap();
 	
-	public EntityVillager(World par1World)
+	public EntityVillager(World p_i1747_1_)
 	{
-		this(par1World, 0);
+		this(p_i1747_1_, 0);
 	}
 	
-	public EntityVillager(World par1World, int par2)
+	public EntityVillager(World p_i1748_1_, int p_i1748_2_)
 	{
-		super(par1World);
-		randomTickDivider = 0;
-		isMating = false;
-		isPlaying = false;
-		villageObj = null;
-		setProfession(par2);
-		texture = "/mob/villager/villager.png";
-		moveSpeed = 0.5F;
+		super(p_i1748_1_);
+		setProfession(p_i1748_2_);
 		setSize(0.6F, 1.8F);
 		getNavigator().setBreakDoors(true);
 		getNavigator().setAvoidsWater(true);
 		tasks.addTask(0, new EntityAISwimming(this));
-		tasks.addTask(1, new EntityAIAvoidEntity(this, EntityZombie.class, 8.0F, 0.3F, 0.35F));
+		tasks.addTask(1, new EntityAIAvoidEntity(this, EntityZombie.class, 8.0F, 0.6D, 0.6D));
 		tasks.addTask(1, new EntityAITradePlayer(this));
 		tasks.addTask(1, new EntityAILookAtTradePlayer(this));
 		tasks.addTask(2, new EntityAIMoveIndoors(this));
 		tasks.addTask(3, new EntityAIRestrictOpenDoor(this));
 		tasks.addTask(4, new EntityAIOpenDoor(this, true));
-		tasks.addTask(5, new EntityAIMoveTwardsRestriction(this, 0.3F));
+		tasks.addTask(5, new EntityAIMoveTowardsRestriction(this, 0.6D));
 		tasks.addTask(6, new EntityAIVillagerMate(this));
 		tasks.addTask(7, new EntityAIFollowGolem(this));
-		tasks.addTask(8, new EntityAIPlay(this, 0.32F));
+		tasks.addTask(8, new EntityAIPlay(this, 0.32D));
 		tasks.addTask(9, new EntityAIWatchClosest2(this, EntityPlayer.class, 3.0F, 1.0F));
 		tasks.addTask(9, new EntityAIWatchClosest2(this, EntityVillager.class, 5.0F, 0.02F));
-		tasks.addTask(9, new EntityAIWander(this, 0.3F));
+		tasks.addTask(9, new EntityAIWander(this, 0.6D));
 		tasks.addTask(10, new EntityAIWatchClosest(this, EntityLiving.class, 8.0F));
 	}
 	
@@ -200,6 +194,39 @@
 		dataWatcher.addObject(16, Integer.valueOf(0));
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.5D);
+	}
+	
+	@Override public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
+	{
+		p_110161_1_ = super.func_110161_a(p_110161_1_);
+		setProfession(worldObj.rand.nextInt(5));
+		return p_110161_1_;
+	}
+	
+	@Override public boolean func_110164_bC()
+	{
+		return false;
+	}
+	
+	@Override public void func_110297_a_(ItemStack p_110297_1_)
+	{
+		if(!worldObj.isRemote && livingSoundTime > -getTalkInterval() + 20)
+		{
+			livingSoundTime = -getTalkInterval();
+			if(p_110297_1_ != null)
+			{
+				playSound("mob.villager.yes", getSoundVolume(), getSoundPitch());
+			} else
+			{
+				playSound("mob.villager.no", getSoundVolume(), getSoundPitch());
+			}
+		}
+	}
+	
 	public void func_82187_q()
 	{
 		field_82190_bM = true;
@@ -214,7 +241,7 @@
 	public EntityVillager func_90012_b(EntityAgeable par1EntityAgeable)
 	{
 		EntityVillager var2 = new EntityVillager(worldObj);
-		var2.initCreature();
+		var2.func_110161_a((EntityLivingData) null);
 		return var2;
 	}
 	
@@ -236,22 +263,17 @@
 	
 	@Override protected String getDeathSound()
 	{
-		return "mob.villager.defaultdeath";
+		return "mob.villager.death";
 	}
 	
 	@Override protected String getHurtSound()
 	{
-		return "mob.villager.defaulthurt";
+		return "mob.villager.hit";
 	}
 	
 	@Override protected String getLivingSound()
 	{
-		return "mob.villager.default";
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 20;
+		return isTrading() ? "mob.villager.haggle" : "mob.villager.idle";
 	}
 	
 	public int getProfession()
@@ -266,25 +288,6 @@
 			addDefaultEquipmentAndRecipies(1);
 		}
 		return buyingList;
-	}
-	
-	@Override public String getTexture()
-	{
-		switch(getProfession())
-		{
-			case 0:
-				return "/mob/villager/farmer.png";
-			case 1:
-				return "/mob/villager/librarian.png";
-			case 2:
-				return "/mob/villager/priest.png";
-			case 3:
-				return "/mob/villager/smith.png";
-			case 4:
-				return "/mob/villager/butcher.png";
-			default:
-				return super.getTexture();
-		}
 	}
 	
 	@Override public void handleHealthUpdate(byte par1)
@@ -302,11 +305,6 @@
 		{
 			super.handleHealthUpdate(par1);
 		}
-	}
-	
-	@Override public void initCreature()
-	{
-		setProfession(worldObj.rand.nextInt(5));
 	}
 	
 	@Override public boolean interact(EntityPlayer par1EntityPlayer)
@@ -406,7 +404,7 @@
 	{
 	}
 	
-	@Override public void setRevengeTarget(EntityLiving par1EntityLiving)
+	@Override public void setRevengeTarget(EntityLivingBase par1EntityLiving)
 	{
 		super.setRevengeTarget(par1EntityLiving);
 		if(villageObj != null && par1EntityLiving != null)
@@ -437,11 +435,11 @@
 			villageObj = worldObj.villageCollectionObj.findNearestVillage(MathHelper.floor_double(posX), MathHelper.floor_double(posY), MathHelper.floor_double(posZ), 32);
 			if(villageObj == null)
 			{
-				detachHome();
+				func_110177_bN();
 			} else
 			{
 				ChunkCoordinates var1 = villageObj.getCenter();
-				setHomeArea(var1.posX, var1.posY, var1.posZ, (int) (villageObj.getVillageRadius() * 0.6F));
+				func_110171_b(var1.posX, var1.posY, var1.posZ, (int) (villageObj.getVillageRadius() * 0.6F));
 				if(field_82190_bM)
 				{
 					field_82190_bM = false;
@@ -485,6 +483,8 @@
 	@Override public void useRecipe(MerchantRecipe par1MerchantRecipe)
 	{
 		par1MerchantRecipe.incrementToolUses();
+		livingSoundTime = -getTalkInterval();
+		playSound("mob.villager.yes", getSoundVolume(), getSoundPitch());
 		if(par1MerchantRecipe.hasSameIDsAs((MerchantRecipe) buyingList.get(buyingList.size() - 1)))
 		{
 			timeUntilReset = 40;
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityWaterMob.java b/RMCClient/minecraft/net/minecraft/src/EntityWaterMob.java
index 64048b0..69f4a98 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityWaterMob.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityWaterMob.java
@@ -2,9 +2,9 @@
 
 public abstract class EntityWaterMob extends EntityCreature implements IAnimals
 {
-	public EntityWaterMob(World par1World)
+	public EntityWaterMob(World p_i1695_1_)
 	{
-		super(par1World);
+		super(p_i1695_1_);
 	}
 	
 	@Override public boolean canBreatheUnderwater()
@@ -36,14 +36,14 @@
 	{
 		int var1 = getAir();
 		super.onEntityUpdate();
-		if(isEntityAlive() && !isInsideOfMaterial(Material.water))
+		if(isEntityAlive() && !isInWater())
 		{
 			--var1;
 			setAir(var1);
 			if(getAir() == -20)
 			{
 				setAir(0);
-				attackEntityFrom(DamageSource.drown, 2);
+				attackEntityFrom(DamageSource.drown, 2.0F);
 			}
 		} else
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityWeatherEffect.java b/RMCClient/minecraft/net/minecraft/src/EntityWeatherEffect.java
index 5374b0d..20a785f 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityWeatherEffect.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityWeatherEffect.java
@@ -2,8 +2,8 @@
 
 public abstract class EntityWeatherEffect extends Entity
 {
-	public EntityWeatherEffect(World par1World)
+	public EntityWeatherEffect(World p_i1702_1_)
 	{
-		super(par1World);
+		super(p_i1702_1_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityWitch.java b/RMCClient/minecraft/net/minecraft/src/EntityWitch.java
index 317cbd1..4f45f82 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityWitch.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityWitch.java
@@ -2,41 +2,42 @@
 
 import java.util.Iterator;
 import java.util.List;
+import java.util.UUID;
 
 public class EntityWitch extends EntityMob implements IRangedAttackMob
 {
+	private static final UUID field_110184_bp = UUID.fromString("5CD17E52-A79A-43D3-A529-90FDE04B181E");
+	private static final AttributeModifier field_110185_bq = new AttributeModifier(field_110184_bp, "Drinking speed penalty", -0.25D, 0).func_111168_a(false);
 	private static final int[] witchDrops = new int[] { Item.lightStoneDust.itemID, Item.sugar.itemID, Item.redstone.itemID, Item.spiderEye.itemID, Item.glassBottle.itemID, Item.gunpowder.itemID, Item.stick.itemID, Item.stick.itemID };
-	private int witchAttackTimer = 0;
+	private int witchAttackTimer;
 	
-	public EntityWitch(World par1World)
+	public EntityWitch(World p_i1744_1_)
 	{
-		super(par1World);
-		texture = "/mob/villager/witch.png";
-		moveSpeed = 0.25F;
+		super(p_i1744_1_);
 		tasks.addTask(1, new EntityAISwimming(this));
-		tasks.addTask(2, new EntityAIArrowAttack(this, moveSpeed, 60, 10.0F));
-		tasks.addTask(2, new EntityAIWander(this, moveSpeed));
+		tasks.addTask(2, new EntityAIArrowAttack(this, 1.0D, 60, 10.0F));
+		tasks.addTask(2, new EntityAIWander(this, 1.0D));
 		tasks.addTask(3, new EntityAIWatchClosest(this, EntityPlayer.class, 8.0F));
 		tasks.addTask(3, new EntityAILookIdle(this));
 		targetTasks.addTask(1, new EntityAIHurtByTarget(this, false));
-		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, 16.0F, 0, true));
+		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, 0, true));
 	}
 	
-	@Override protected int applyPotionDamageCalculations(DamageSource par1DamageSource, int par2)
+	@Override protected float applyPotionDamageCalculations(DamageSource par1DamageSource, float par2)
 	{
 		par2 = super.applyPotionDamageCalculations(par1DamageSource, par2);
 		if(par1DamageSource.getEntity() == this)
 		{
-			par2 = 0;
+			par2 = 0.0F;
 		}
 		if(par1DamageSource.isMagicDamage())
 		{
-			par2 = (int) (par2 * 0.15D);
+			par2 = (float) (par2 * 0.15D);
 		}
 		return par2;
 	}
 	
-	@Override public void attackEntityWithRangedAttack(EntityLiving par1EntityLiving, float par2)
+	@Override public void attackEntityWithRangedAttack(EntityLivingBase par1EntityLiving, float par2)
 	{
 		if(!getAggressive())
 		{
@@ -49,7 +50,7 @@
 			if(var10 >= 8.0F && !par1EntityLiving.isPotionActive(Potion.moveSlowdown))
 			{
 				var3.setPotionDamage(32698);
-			} else if(par1EntityLiving.getHealth() >= 8 && !par1EntityLiving.isPotionActive(Potion.poison))
+			} else if(par1EntityLiving.func_110143_aJ() >= 8.0F && !par1EntityLiving.isPotionActive(Potion.poison))
 			{
 				var3.setPotionDamage(32660);
 			} else if(var10 <= 3.0F && !par1EntityLiving.isPotionActive(Potion.weakness) && rand.nextFloat() < 0.25F)
@@ -85,6 +86,13 @@
 		getDataWatcher().addObject(21, Byte.valueOf((byte) 0));
 	}
 	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(26.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.25D);
+	}
+	
 	public boolean getAggressive()
 	{
 		return getDataWatcher().getWatchableObjectByte(21) == 1;
@@ -103,21 +111,6 @@
 	@Override protected String getLivingSound()
 	{
 		return "mob.witch.idle";
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return 26;
-	}
-	
-	@Override public float getSpeedModifier()
-	{
-		float var1 = super.getSpeedModifier();
-		if(getAggressive())
-		{
-			var1 *= 0.75F;
-		}
-		return var1;
 	}
 	
 	@Override public void handleHealthUpdate(byte par1)
@@ -163,6 +156,7 @@
 							}
 						}
 					}
+					func_110148_a(SharedMonsterAttributes.field_111263_d).func_111124_b(field_110185_bq);
 				}
 			} else
 			{
@@ -170,7 +164,7 @@
 				if(rand.nextFloat() < 0.15F && isBurning() && !this.isPotionActive(Potion.fireResistance))
 				{
 					var5 = 16307;
-				} else if(rand.nextFloat() < 0.05F && health < getMaxHealth())
+				} else if(rand.nextFloat() < 0.05F && func_110143_aJ() < func_110138_aP())
 				{
 					var5 = 16341;
 				} else if(rand.nextFloat() < 0.25F && getAttackTarget() != null && !this.isPotionActive(Potion.moveSpeed) && getAttackTarget().getDistanceSqToEntity(this) > 121.0D)
@@ -185,6 +179,9 @@
 					setCurrentItemOrArmor(0, new ItemStack(Item.potion, 1, var5));
 					witchAttackTimer = getHeldItem().getMaxItemUseDuration();
 					setAggressive(true);
+					AttributeInstance var6 = func_110148_a(SharedMonsterAttributes.field_111263_d);
+					var6.func_111124_b(field_110185_bq);
+					var6.func_111121_a(field_110185_bq);
 				}
 			}
 			if(rand.nextFloat() < 7.5E-4F)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityWither.java b/RMCClient/minecraft/net/minecraft/src/EntityWither.java
index 5cb4005..9aa1e64 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityWither.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityWither.java
@@ -13,22 +13,20 @@
 	private int field_82222_j;
 	private static final IEntitySelector attackEntitySelector = new EntityWitherAttackFilter();
 	
-	public EntityWither(World par1World)
+	public EntityWither(World p_i1701_1_)
 	{
-		super(par1World);
-		setEntityHealth(getMaxHealth());
-		texture = "/mob/wither.png";
+		super(p_i1701_1_);
+		setEntityHealth(func_110138_aP());
 		setSize(0.9F, 4.0F);
 		isImmuneToFire = true;
-		moveSpeed = 0.6F;
 		getNavigator().setCanSwim(true);
 		tasks.addTask(0, new EntityAISwimming(this));
-		tasks.addTask(2, new EntityAIArrowAttack(this, moveSpeed, 40, 20.0F));
-		tasks.addTask(5, new EntityAIWander(this, moveSpeed));
+		tasks.addTask(2, new EntityAIArrowAttack(this, 1.0D, 40, 20.0F));
+		tasks.addTask(5, new EntityAIWander(this, 1.0D));
 		tasks.addTask(6, new EntityAIWatchClosest(this, EntityPlayer.class, 8.0F));
 		tasks.addTask(7, new EntityAILookIdle(this));
 		targetTasks.addTask(1, new EntityAIHurtByTarget(this, false));
-		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityLiving.class, 30.0F, 0, false, false, attackEntitySelector));
+		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityLiving.class, 0, false, false, attackEntitySelector));
 		experienceValue = 50;
 	}
 	
@@ -36,7 +34,7 @@
 	{
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else if(par1DamageSource == DamageSource.drown) return false;
@@ -50,7 +48,7 @@
 				if(var3 instanceof EntityArrow) return false;
 			}
 			var3 = par1DamageSource.getEntity();
-			if(var3 != null && !(var3 instanceof EntityPlayer) && var3 instanceof EntityLiving && ((EntityLiving) var3).getCreatureAttribute() == getCreatureAttribute()) return false;
+			if(var3 != null && !(var3 instanceof EntityPlayer) && var3 instanceof EntityLivingBase && ((EntityLivingBase) var3).getCreatureAttribute() == getCreatureAttribute()) return false;
 			else
 			{
 				if(field_82222_j <= 0)
@@ -66,7 +64,7 @@
 		}
 	}
 	
-	@Override public void attackEntityWithRangedAttack(EntityLiving par1EntityLiving, float par2)
+	@Override public void attackEntityWithRangedAttack(EntityLivingBase par1EntityLiving, float par2)
 	{
 		func_82216_a(0, par1EntityLiving);
 	}
@@ -89,7 +87,6 @@
 	@Override protected void entityInit()
 	{
 		super.entityInit();
-		dataWatcher.addObject(16, new Integer(100));
 		dataWatcher.addObject(17, new Integer(0));
 		dataWatcher.addObject(18, new Integer(0));
 		dataWatcher.addObject(19, new Integer(0));
@@ -98,6 +95,14 @@
 	
 	@Override protected void fall(float par1)
 	{
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(300.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.6000000238418579D);
+		func_110148_a(SharedMonsterAttributes.field_111265_b).func_111128_a(40.0D);
 	}
 	
 	private float func_82204_b(float par1, float par2, float par3)
@@ -117,7 +122,7 @@
 	public void func_82206_m()
 	{
 		func_82215_s(220);
-		setEntityHealth(getMaxHealth() / 3);
+		setEntityHealth(func_110138_aP() / 3.0F);
 	}
 	
 	public float func_82207_a(int par1)
@@ -192,14 +197,9 @@
 		dataWatcher.updateObject(20, Integer.valueOf(par1));
 	}
 	
-	private void func_82216_a(int par1, EntityLiving par2EntityLiving)
+	private void func_82216_a(int par1, EntityLivingBase par2EntityLiving)
 	{
 		func_82209_a(par1, par2EntityLiving.posX, par2EntityLiving.posY + par2EntityLiving.getEyeHeight() * 0.5D, par2EntityLiving.posZ, par1 == 0 && rand.nextFloat() < 0.001F);
-	}
-	
-	@Override public int getBossHealth()
-	{
-		return dataWatcher.getWatchableObjectInt(16);
 	}
 	
 	@Override public int getBrightnessForRender(float par1)
@@ -227,20 +227,9 @@
 		return "mob.wither.idle";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 300;
-	}
-	
 	@Override public float getShadowSize()
 	{
 		return height / 8.0F;
-	}
-	
-	@Override public String getTexture()
-	{
-		int var1 = func_82212_n();
-		return var1 > 0 && (var1 > 80 || var1 / 5 % 2 != 1) ? "/mob/wither_invul.png" : "/mob/wither.png";
 	}
 	
 	@Override public int getTotalArmorValue()
@@ -260,7 +249,7 @@
 	
 	public boolean isArmored()
 	{
-		return getBossHealth() <= getMaxHealth() / 2;
+		return func_110143_aJ() <= func_110138_aP() / 2.0F;
 	}
 	
 	@Override public void mountEntity(Entity par1Entity)
@@ -270,10 +259,6 @@
 	
 	@Override public void onLivingUpdate()
 	{
-		if(!worldObj.isRemote)
-		{
-			dataWatcher.updateObject(16, Integer.valueOf(health));
-		}
 		motionY *= 0.6000000238418579D;
 		double var4;
 		double var6;
@@ -365,7 +350,6 @@
 	{
 		super.readEntityFromNBT(par1NBTTagCompound);
 		func_82215_s(par1NBTTagCompound.getInteger("Invul"));
-		dataWatcher.updateObject(16, Integer.valueOf(health));
 	}
 	
 	@Override public void setInWeb()
@@ -386,7 +370,7 @@
 			func_82215_s(var1);
 			if(ticksExisted % 10 == 0)
 			{
-				heal(10);
+				heal(10.0F);
 			}
 		} else
 		{
@@ -419,7 +403,7 @@
 						Entity var14 = worldObj.getEntityByID(var12);
 						if(var14 != null && var14.isEntityAlive() && getDistanceSqToEntity(var14) <= 900.0D && canEntityBeSeen(var14))
 						{
-							func_82216_a(var1 + 1, (EntityLiving) var14);
+							func_82216_a(var1 + 1, (EntityLivingBase) var14);
 							field_82223_h[var1 - 1] = ticksExisted + 40 + rand.nextInt(20);
 							field_82224_i[var1 - 1] = 0;
 						} else
@@ -428,10 +412,10 @@
 						}
 					} else
 					{
-						List var13 = worldObj.selectEntitiesWithinAABB(EntityLiving.class, boundingBox.expand(20.0D, 8.0D, 20.0D), attackEntitySelector);
+						List var13 = worldObj.selectEntitiesWithinAABB(EntityLivingBase.class, boundingBox.expand(20.0D, 8.0D, 20.0D), attackEntitySelector);
 						for(int var16 = 0; var16 < 10 && !var13.isEmpty(); ++var16)
 						{
-							EntityLiving var5 = (EntityLiving) var13.get(rand.nextInt(var13.size()));
+							EntityLivingBase var5 = (EntityLivingBase) var13.get(rand.nextInt(var13.size()));
 							if(var5 != this && var5.isEntityAlive() && canEntityBeSeen(var5))
 							{
 								if(var5 instanceof EntityPlayer)
@@ -492,7 +476,7 @@
 			}
 			if(ticksExisted % 20 == 0)
 			{
-				heal(1);
+				heal(1.0F);
 			}
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityWitherAttackFilter.java b/RMCClient/minecraft/net/minecraft/src/EntityWitherAttackFilter.java
index 9dd56e6..40c15b0 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityWitherAttackFilter.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityWitherAttackFilter.java
@@ -4,6 +4,6 @@
 {
 	@Override public boolean isEntityApplicable(Entity par1Entity)
 	{
-		return par1Entity instanceof EntityLiving && ((EntityLiving) par1Entity).getCreatureAttribute() != EnumCreatureAttribute.UNDEAD;
+		return par1Entity instanceof EntityLivingBase && ((EntityLivingBase) par1Entity).getCreatureAttribute() != EnumCreatureAttribute.UNDEAD;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityWitherSkull.java b/RMCClient/minecraft/net/minecraft/src/EntityWitherSkull.java
index 4abaaa5..f0d8458 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityWitherSkull.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityWitherSkull.java
@@ -2,25 +2,25 @@
 
 public class EntityWitherSkull extends EntityFireball
 {
-	public EntityWitherSkull(World par1World)
+	public EntityWitherSkull(World p_i1793_1_)
 	{
-		super(par1World);
+		super(p_i1793_1_);
 		setSize(0.3125F, 0.3125F);
 	}
 	
-	public EntityWitherSkull(World par1World, double par2, double par4, double par6, double par8, double par10, double par12)
+	public EntityWitherSkull(World p_i1795_1_, double p_i1795_2_, double p_i1795_4_, double p_i1795_6_, double p_i1795_8_, double p_i1795_10_, double p_i1795_12_)
 	{
-		super(par1World, par2, par4, par6, par8, par10, par12);
+		super(p_i1795_1_, p_i1795_2_, p_i1795_4_, p_i1795_6_, p_i1795_8_, p_i1795_10_, p_i1795_12_);
 		setSize(0.3125F, 0.3125F);
 	}
 	
-	public EntityWitherSkull(World par1World, EntityLiving par2EntityLiving, double par3, double par5, double par7)
+	public EntityWitherSkull(World p_i1794_1_, EntityLivingBase p_i1794_2_, double p_i1794_3_, double p_i1794_5_, double p_i1794_7_)
 	{
-		super(par1World, par2EntityLiving, par3, par5, par7);
+		super(p_i1794_1_, p_i1794_2_, p_i1794_3_, p_i1794_5_, p_i1794_7_);
 		setSize(0.3125F, 0.3125F);
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		return false;
 	}
@@ -68,15 +68,15 @@
 			{
 				if(shootingEntity != null)
 				{
-					if(par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeMobDamage(shootingEntity), 8) && !par1MovingObjectPosition.entityHit.isEntityAlive())
+					if(par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.causeMobDamage(shootingEntity), 8.0F) && !par1MovingObjectPosition.entityHit.isEntityAlive())
 					{
-						shootingEntity.heal(5);
+						shootingEntity.heal(5.0F);
 					}
 				} else
 				{
-					par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.magic, 5);
+					par1MovingObjectPosition.entityHit.attackEntityFrom(DamageSource.magic, 5.0F);
 				}
-				if(par1MovingObjectPosition.entityHit instanceof EntityLiving)
+				if(par1MovingObjectPosition.entityHit instanceof EntityLivingBase)
 				{
 					byte var2 = 0;
 					if(worldObj.difficultySetting > 1)
@@ -91,7 +91,7 @@
 					}
 					if(var2 > 0)
 					{
-						((EntityLiving) par1MovingObjectPosition.entityHit).addPotionEffect(new PotionEffect(Potion.wither.id, 20 * var2, 1));
+						((EntityLivingBase) par1MovingObjectPosition.entityHit).addPotionEffect(new PotionEffect(Potion.wither.id, 20 * var2, 1));
 					}
 				}
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityWolf.java b/RMCClient/minecraft/net/minecraft/src/EntityWolf.java
index 1ed436b..9de760f 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityWolf.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityWolf.java
@@ -9,27 +9,26 @@
 	private float timeWolfIsShaking;
 	private float prevTimeWolfIsShaking;
 	
-	public EntityWolf(World par1World)
+	public EntityWolf(World p_i1696_1_)
 	{
-		super(par1World);
-		texture = "/mob/wolf.png";
+		super(p_i1696_1_);
 		setSize(0.6F, 0.8F);
-		moveSpeed = 0.3F;
 		getNavigator().setAvoidsWater(true);
 		tasks.addTask(1, new EntityAISwimming(this));
 		tasks.addTask(2, aiSit);
 		tasks.addTask(3, new EntityAILeapAtTarget(this, 0.4F));
-		tasks.addTask(4, new EntityAIAttackOnCollide(this, moveSpeed, true));
-		tasks.addTask(5, new EntityAIFollowOwner(this, moveSpeed, 10.0F, 2.0F));
-		tasks.addTask(6, new EntityAIMate(this, moveSpeed));
-		tasks.addTask(7, new EntityAIWander(this, moveSpeed));
+		tasks.addTask(4, new EntityAIAttackOnCollide(this, 1.0D, true));
+		tasks.addTask(5, new EntityAIFollowOwner(this, 1.0D, 10.0F, 2.0F));
+		tasks.addTask(6, new EntityAIMate(this, 1.0D));
+		tasks.addTask(7, new EntityAIWander(this, 1.0D));
 		tasks.addTask(8, new EntityAIBeg(this, 8.0F));
 		tasks.addTask(9, new EntityAIWatchClosest(this, EntityPlayer.class, 8.0F));
 		tasks.addTask(9, new EntityAILookIdle(this));
 		targetTasks.addTask(1, new EntityAIOwnerHurtByTarget(this));
 		targetTasks.addTask(2, new EntityAIOwnerHurtTarget(this));
 		targetTasks.addTask(3, new EntityAIHurtByTarget(this, true));
-		targetTasks.addTask(4, new EntityAITargetNonTamed(this, EntitySheep.class, 16.0F, 200, false));
+		targetTasks.addTask(4, new EntityAITargetNonTamed(this, EntitySheep.class, 200, false));
+		setTamed(false);
 	}
 	
 	@Override public boolean attackEntityAsMob(Entity par1Entity)
@@ -38,7 +37,7 @@
 		return par1Entity.attackEntityFrom(DamageSource.causeMobDamage(this), var2);
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
@@ -47,7 +46,7 @@
 			aiSit.setSitting(false);
 			if(var3 != null && !(var3 instanceof EntityPlayer) && !(var3 instanceof EntityArrow))
 			{
-				par2 = (par2 + 1) / 2;
+				par2 = (par2 + 1.0F) / 2.0F;
 			}
 			return super.attackEntityFrom(par1DamageSource, par2);
 		}
@@ -55,7 +54,7 @@
 	
 	@Override protected boolean canDespawn()
 	{
-		return isAngry() && !isTamed();
+		return !isTamed() && ticksExisted > 2400;
 	}
 	
 	@Override public boolean canMateWith(EntityAnimal par1EntityAnimal)
@@ -78,14 +77,39 @@
 	@Override protected void entityInit()
 	{
 		super.entityInit();
-		dataWatcher.addObject(18, new Integer(getHealth()));
+		dataWatcher.addObject(18, new Float(func_110143_aJ()));
 		dataWatcher.addObject(19, new Byte((byte) 0));
-		dataWatcher.addObject(20, new Byte((byte) BlockCloth.getBlockFromDye(1)));
+		dataWatcher.addObject(20, new Byte((byte) BlockColored.getBlockFromDye(1)));
+	}
+	
+	@Override protected void func_110147_ax()
+	{
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.30000001192092896D);
+		if(isTamed())
+		{
+			func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(20.0D);
+		} else
+		{
+			func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(8.0D);
+		}
+	}
+	
+	@Override public boolean func_142018_a(EntityLivingBase p_142018_1_, EntityLivingBase p_142018_2_)
+	{
+		if(!(p_142018_1_ instanceof EntityCreeper) && !(p_142018_1_ instanceof EntityGhast))
+		{
+			if(p_142018_1_ instanceof EntityWolf)
+			{
+				EntityWolf var3 = (EntityWolf) p_142018_1_;
+				if(var3.isTamed() && var3.func_130012_q() == p_142018_2_) return false;
+			}
+			return p_142018_1_ instanceof EntityPlayer && p_142018_2_ instanceof EntityPlayer && !((EntityPlayer) p_142018_2_).func_96122_a((EntityPlayer) p_142018_1_) ? false : !(p_142018_1_ instanceof EntityHorse) || !((EntityHorse) p_142018_1_).func_110248_bS();
+		} else return false;
 	}
 	
 	public void func_70918_i(boolean par1)
 	{
-		byte var2 = dataWatcher.getWatchableObjectByte(19);
 		if(par1)
 		{
 			dataWatcher.updateObject(19, Byte.valueOf((byte) 1));
@@ -132,12 +156,7 @@
 	
 	@Override protected String getLivingSound()
 	{
-		return isAngry() ? "mob.wolf.growl" : rand.nextInt(3) == 0 ? isTamed() && dataWatcher.getWatchableObjectInt(18) < 10 ? "mob.wolf.whine" : "mob.wolf.panting" : "mob.wolf.bark";
-	}
-	
-	@Override public int getMaxHealth()
-	{
-		return isTamed() ? 20 : 8;
+		return isAngry() ? "mob.wolf.growl" : rand.nextInt(3) == 0 ? isTamed() && dataWatcher.func_111145_d(18) < 10.0F ? "mob.wolf.whine" : "mob.wolf.panting" : "mob.wolf.bark";
 	}
 	
 	@Override public int getMaxSpawnedInChunk()
@@ -170,12 +189,7 @@
 	
 	public float getTailRotation()
 	{
-		return isAngry() ? 1.5393804F : isTamed() ? (0.55F - (20 - dataWatcher.getWatchableObjectInt(18)) * 0.02F) * (float) Math.PI : (float) Math.PI / 5F;
-	}
-	
-	@Override public String getTexture()
-	{
-		return isTamed() ? "/mob/wolf_tame.png" : isAngry() ? "/mob/wolf_angry.png" : super.getTexture();
+		return isAngry() ? 1.5393804F : isTamed() ? (0.55F - (20.0F - dataWatcher.func_111145_d(18)) * 0.02F) * (float) Math.PI : (float) Math.PI / 5F;
 	}
 	
 	@Override public int getVerticalFaceSpeed()
@@ -211,7 +225,7 @@
 				if(Item.itemsList[var2.itemID] instanceof ItemFood)
 				{
 					ItemFood var3 = (ItemFood) Item.itemsList[var2.itemID];
-					if(var3.isWolfsFavoriteMeat() && dataWatcher.getWatchableObjectInt(18) < 20)
+					if(var3.isWolfsFavoriteMeat() && dataWatcher.func_111145_d(18) < 20.0F)
 					{
 						if(!par1EntityPlayer.capabilities.isCreativeMode)
 						{
@@ -226,7 +240,7 @@
 					}
 				} else if(var2.itemID == Item.dyePowder.itemID)
 				{
-					int var4 = BlockCloth.getBlockFromDye(var2.getItemDamage());
+					int var4 = BlockColored.getBlockFromDye(var2.getItemDamage());
 					if(var4 != getCollarColor())
 					{
 						setCollarColor(var4);
@@ -238,11 +252,13 @@
 					}
 				}
 			}
-			if(par1EntityPlayer.username.equalsIgnoreCase(getOwnerName()) && !worldObj.isRemote && !isBreedingItem(var2))
+			if(par1EntityPlayer.getCommandSenderName().equalsIgnoreCase(getOwnerName()) && !worldObj.isRemote && !isBreedingItem(var2))
 			{
 				aiSit.setSitting(!isSitting());
 				isJumping = false;
 				setPathToEntity((PathEntity) null);
+				setTarget((Entity) null);
+				setAttackTarget((EntityLivingBase) null);
 			}
 		} else if(var2 != null && var2.itemID == Item.bone.itemID && !isAngry())
 		{
@@ -260,10 +276,10 @@
 				{
 					setTamed(true);
 					setPathToEntity((PathEntity) null);
-					setAttackTarget((EntityLiving) null);
+					setAttackTarget((EntityLivingBase) null);
 					aiSit.setSitting(true);
-					setEntityHealth(20);
-					setOwner(par1EntityPlayer.username);
+					setEntityHealth(20.0F);
+					setOwner(par1EntityPlayer.getCommandSenderName());
 					playTameEffect(true);
 					worldObj.setEntityState(this, (byte) 7);
 				} else
@@ -381,10 +397,13 @@
 		}
 	}
 	
-	@Override public void setAttackTarget(EntityLiving par1EntityLiving)
+	@Override public void setAttackTarget(EntityLivingBase par1EntityLiving)
 	{
 		super.setAttackTarget(par1EntityLiving);
-		if(par1EntityLiving instanceof EntityPlayer)
+		if(par1EntityLiving == null)
+		{
+			setAngry(false);
+		} else if(!isTamed())
 		{
 			setAngry(true);
 		}
@@ -393,6 +412,18 @@
 	public void setCollarColor(int par1)
 	{
 		dataWatcher.updateObject(20, Byte.valueOf((byte) (par1 & 15)));
+	}
+	
+	@Override public void setTamed(boolean par1)
+	{
+		super.setTamed(par1);
+		if(par1)
+		{
+			func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(20.0D);
+		} else
+		{
+			func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(8.0D);
+		}
 	}
 	
 	public EntityWolf spawnBabyAnimal(EntityAgeable par1EntityAgeable)
@@ -409,7 +440,7 @@
 	
 	@Override protected void updateAITick()
 	{
-		dataWatcher.updateObject(18, Integer.valueOf(getHealth()));
+		dataWatcher.updateObject(18, Float.valueOf(func_110143_aJ()));
 	}
 	
 	@Override public void writeEntityToNBT(NBTTagCompound par1NBTTagCompound)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityXPOrb.java b/RMCClient/minecraft/net/minecraft/src/EntityXPOrb.java
index 2393e81..02ece1f 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityXPOrb.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityXPOrb.java
@@ -3,40 +3,40 @@
 public class EntityXPOrb extends Entity
 {
 	public int xpColor;
-	public int xpOrbAge = 0;
+	public int xpOrbAge;
 	public int field_70532_c;
 	private int xpOrbHealth = 5;
 	private int xpValue;
 	private EntityPlayer closestPlayer;
 	private int xpTargetColor;
 	
-	public EntityXPOrb(World par1World)
+	public EntityXPOrb(World p_i1586_1_)
 	{
-		super(par1World);
+		super(p_i1586_1_);
 		setSize(0.25F, 0.25F);
 		yOffset = height / 2.0F;
 	}
 	
-	public EntityXPOrb(World par1World, double par2, double par4, double par6, int par8)
+	public EntityXPOrb(World p_i1585_1_, double p_i1585_2_, double p_i1585_4_, double p_i1585_6_, int p_i1585_8_)
 	{
-		super(par1World);
+		super(p_i1585_1_);
 		setSize(0.5F, 0.5F);
 		yOffset = height / 2.0F;
-		setPosition(par2, par4, par6);
+		setPosition(p_i1585_2_, p_i1585_4_, p_i1585_6_);
 		rotationYaw = (float) (Math.random() * 360.0D);
 		motionX = (float) (Math.random() * 0.20000000298023224D - 0.10000000149011612D) * 2.0F;
 		motionY = (float) (Math.random() * 0.2D) * 2.0F;
 		motionZ = (float) (Math.random() * 0.20000000298023224D - 0.10000000149011612D) * 2.0F;
-		xpValue = par8;
+		xpValue = p_i1585_8_;
 	}
 	
-	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
 	{
 		if(isEntityInvulnerable()) return false;
 		else
 		{
 			setBeenAttacked();
-			xpOrbHealth -= par2;
+			xpOrbHealth = (int) (xpOrbHealth - par2);
 			if(xpOrbHealth <= 0)
 			{
 				setDead();
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityZombie.java b/RMCClient/minecraft/net/minecraft/src/EntityZombie.java
index 91568c5..b6850d2 100644
--- a/RMCClient/minecraft/net/minecraft/src/EntityZombie.java
+++ b/RMCClient/minecraft/net/minecraft/src/EntityZombie.java
@@ -1,29 +1,31 @@
 package net.minecraft.src;
 
 import java.util.Calendar;
+import java.util.UUID;
 
 public class EntityZombie extends EntityMob
 {
-	private int conversionTime = 0;
+	protected static final Attribute field_110186_bp = new RangedAttribute("zombie.spawnReinforcements", 0.0D, 0.0D, 1.0D).func_111117_a("Spawn Reinforcements Chance");
+	private static final UUID field_110187_bq = UUID.fromString("B9766B59-9566-4402-BC1F-2EE2A276D836");
+	private static final AttributeModifier field_110188_br = new AttributeModifier(field_110187_bq, "Baby speed boost", 0.5D, 1);
+	private int conversionTime;
 	
-	public EntityZombie(World par1World)
+	public EntityZombie(World p_i1745_1_)
 	{
-		super(par1World);
-		texture = "/mob/zombie.png";
-		moveSpeed = 0.23F;
+		super(p_i1745_1_);
 		getNavigator().setBreakDoors(true);
 		tasks.addTask(0, new EntityAISwimming(this));
 		tasks.addTask(1, new EntityAIBreakDoor(this));
-		tasks.addTask(2, new EntityAIAttackOnCollide(this, EntityPlayer.class, moveSpeed, false));
-		tasks.addTask(3, new EntityAIAttackOnCollide(this, EntityVillager.class, moveSpeed, true));
-		tasks.addTask(4, new EntityAIMoveTwardsRestriction(this, moveSpeed));
-		tasks.addTask(5, new EntityAIMoveThroughVillage(this, moveSpeed, false));
-		tasks.addTask(6, new EntityAIWander(this, moveSpeed));
+		tasks.addTask(2, new EntityAIAttackOnCollide(this, EntityPlayer.class, 1.0D, false));
+		tasks.addTask(3, new EntityAIAttackOnCollide(this, EntityVillager.class, 1.0D, true));
+		tasks.addTask(4, new EntityAIMoveTowardsRestriction(this, 1.0D));
+		tasks.addTask(5, new EntityAIMoveThroughVillage(this, 1.0D, false));
+		tasks.addTask(6, new EntityAIWander(this, 1.0D));
 		tasks.addTask(7, new EntityAIWatchClosest(this, EntityPlayer.class, 8.0F));
 		tasks.addTask(7, new EntityAILookIdle(this));
 		targetTasks.addTask(1, new EntityAIHurtByTarget(this, true));
-		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, 16.0F, 0, true));
-		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityVillager.class, 16.0F, 0, false));
+		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, 0, true));
+		targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityVillager.class, 0, false));
 	}
 	
 	@Override protected void addRandomArmor()
@@ -52,11 +54,60 @@
 		return var2;
 	}
 	
+	@Override public boolean attackEntityFrom(DamageSource par1DamageSource, float par2)
+	{
+		if(!super.attackEntityFrom(par1DamageSource, par2)) return false;
+		else
+		{
+			EntityLivingBase var3 = getAttackTarget();
+			if(var3 == null && getEntityToAttack() instanceof EntityLivingBase)
+			{
+				var3 = (EntityLivingBase) getEntityToAttack();
+			}
+			if(var3 == null && par1DamageSource.getEntity() instanceof EntityLivingBase)
+			{
+				var3 = (EntityLivingBase) par1DamageSource.getEntity();
+			}
+			if(var3 != null && worldObj.difficultySetting >= 3 && rand.nextFloat() < func_110148_a(field_110186_bp).func_111126_e())
+			{
+				int var4 = MathHelper.floor_double(posX);
+				int var5 = MathHelper.floor_double(posY);
+				int var6 = MathHelper.floor_double(posZ);
+				EntityZombie var7 = new EntityZombie(worldObj);
+				for(int var8 = 0; var8 < 50; ++var8)
+				{
+					int var9 = var4 + MathHelper.getRandomIntegerInRange(rand, 7, 40) * MathHelper.getRandomIntegerInRange(rand, -1, 1);
+					int var10 = var5 + MathHelper.getRandomIntegerInRange(rand, 7, 40) * MathHelper.getRandomIntegerInRange(rand, -1, 1);
+					int var11 = var6 + MathHelper.getRandomIntegerInRange(rand, 7, 40) * MathHelper.getRandomIntegerInRange(rand, -1, 1);
+					if(worldObj.doesBlockHaveSolidTopSurface(var9, var10 - 1, var11) && worldObj.getBlockLightValue(var9, var10, var11) < 10)
+					{
+						var7.setPosition(var9, var10, var11);
+						if(worldObj.checkNoEntityCollision(var7.boundingBox) && worldObj.getCollidingBoundingBoxes(var7, var7.boundingBox).isEmpty() && !worldObj.isAnyLiquid(var7.boundingBox))
+						{
+							worldObj.spawnEntityInWorld(var7);
+							var7.setAttackTarget(var3);
+							var7.func_110161_a((EntityLivingData) null);
+							func_110148_a(field_110186_bp).func_111121_a(new AttributeModifier("Zombie reinforcement caller charge", -0.05000000074505806D, 0));
+							var7.func_110148_a(field_110186_bp).func_111121_a(new AttributeModifier("Zombie reinforcement callee charge", -0.05000000074505806D, 0));
+							break;
+						}
+					}
+				}
+			}
+			return true;
+		}
+	}
+	
+	@Override protected boolean canDespawn()
+	{
+		return !isConverting();
+	}
+	
 	protected void convertToVillager()
 	{
 		EntityVillager var1 = new EntityVillager(worldObj);
 		var1.func_82149_j(this);
-		var1.initCreature();
+		var1.func_110161_a((EntityLivingData) null);
 		var1.func_82187_q();
 		if(isChild())
 		{
@@ -91,21 +142,55 @@
 		getDataWatcher().addObject(14, Byte.valueOf((byte) 0));
 	}
 	
-	@Override protected int func_96121_ay()
+	@Override protected void func_110147_ax()
 	{
-		return 40;
+		super.func_110147_ax();
+		func_110148_a(SharedMonsterAttributes.field_111265_b).func_111128_a(40.0D);
+		func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.23000000417232513D);
+		func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(3.0D);
+		func_110140_aT().func_111150_b(field_110186_bp).func_111128_a(rand.nextDouble() * 0.10000000149011612D);
 	}
 	
-	@Override public int getAttackStrength(Entity par1Entity)
+	@Override public EntityLivingData func_110161_a(EntityLivingData p_110161_1_)
 	{
-		ItemStack var2 = getHeldItem();
-		float var3 = (float) (getMaxHealth() - getHealth()) / (float) getMaxHealth();
-		int var4 = 3 + MathHelper.floor_float(var3 * 4.0F);
-		if(var2 != null)
+		Object p_110161_1_1 = super.func_110161_a(p_110161_1_);
+		float var2 = worldObj.func_110746_b(posX, posY, posZ);
+		setCanPickUpLoot(rand.nextFloat() < 0.55F * var2);
+		if(p_110161_1_1 == null)
 		{
-			var4 += var2.getDamageVsEntity(this);
+			p_110161_1_1 = new EntityZombieGroupData(this, worldObj.rand.nextFloat() < 0.05F, worldObj.rand.nextFloat() < 0.05F, (EntityZombieINNER1) null);
 		}
-		return var4;
+		if(p_110161_1_1 instanceof EntityZombieGroupData)
+		{
+			EntityZombieGroupData var3 = (EntityZombieGroupData) p_110161_1_1;
+			if(var3.field_142046_b)
+			{
+				setVillager(true);
+			}
+			if(var3.field_142048_a)
+			{
+				setChild(true);
+			}
+		}
+		addRandomArmor();
+		func_82162_bC();
+		if(getCurrentItemOrArmor(4) == null)
+		{
+			Calendar var5 = worldObj.getCurrentDate();
+			if(var5.get(2) + 1 == 10 && var5.get(5) == 31 && rand.nextFloat() < 0.25F)
+			{
+				setCurrentItemOrArmor(4, new ItemStack(rand.nextFloat() < 0.1F ? Block.pumpkinLantern : Block.pumpkin));
+				equipmentDropChances[4] = 0.0F;
+			}
+		}
+		func_110148_a(SharedMonsterAttributes.field_111266_c).func_111121_a(new AttributeModifier("Random spawn bonus", rand.nextDouble() * 0.05000000074505806D, 0));
+		func_110148_a(SharedMonsterAttributes.field_111265_b).func_111121_a(new AttributeModifier("Random zombie-spawn bonus", rand.nextDouble() * 1.5D, 2));
+		if(rand.nextFloat() < var2 * 0.05F)
+		{
+			func_110148_a(field_110186_bp).func_111121_a(new AttributeModifier("Leader zombie bonus", rand.nextDouble() * 0.25D + 0.5D, 0));
+			func_110148_a(SharedMonsterAttributes.field_111267_a).func_111121_a(new AttributeModifier("Leader zombie bonus", rand.nextDouble() * 3.0D + 1.0D, 2));
+		}
+		return (EntityLivingData) p_110161_1_1;
 	}
 	
 	protected int getConversionTimeBoost()
@@ -161,21 +246,6 @@
 		return "mob.zombie.say";
 	}
 	
-	@Override public int getMaxHealth()
-	{
-		return 20;
-	}
-	
-	@Override public float getSpeedModifier()
-	{
-		return super.getSpeedModifier() * (isChild() ? 1.5F : 1.0F);
-	}
-	
-	@Override public String getTexture()
-	{
-		return isVillager() ? "/mob/zombie_villager.png" : "/mob/zombie.png";
-	}
-	
 	@Override public int getTotalArmorValue()
 	{
 		int var1 = super.getTotalArmorValue() + 2;
@@ -194,26 +264,6 @@
 		} else
 		{
 			super.handleHealthUpdate(par1);
-		}
-	}
-	
-	@Override public void initCreature()
-	{
-		setCanPickUpLoot(rand.nextFloat() < pickUpLootProability[worldObj.difficultySetting]);
-		if(worldObj.rand.nextFloat() < 0.05F)
-		{
-			setVillager(true);
-		}
-		addRandomArmor();
-		func_82162_bC();
-		if(getCurrentItemOrArmor(4) == null)
-		{
-			Calendar var1 = worldObj.getCurrentDate();
-			if(var1.get(2) + 1 == 10 && var1.get(5) == 31 && rand.nextFloat() < 0.25F)
-			{
-				setCurrentItemOrArmor(4, new ItemStack(rand.nextFloat() < 0.1F ? Block.pumpkinLantern : Block.pumpkin));
-				equipmentDropChances[4] = 0.0F;
-			}
 		}
 	}
 	
@@ -258,7 +308,7 @@
 		return getDataWatcher().getWatchableObjectByte(13) == 1;
 	}
 	
-	@Override public void onKillEntity(EntityLiving par1EntityLiving)
+	@Override public void onKillEntity(EntityLivingBase par1EntityLiving)
 	{
 		super.onKillEntity(par1EntityLiving);
 		if(worldObj.difficultySetting >= 2 && par1EntityLiving instanceof EntityVillager)
@@ -267,7 +317,7 @@
 			EntityZombie var2 = new EntityZombie(worldObj);
 			var2.func_82149_j(par1EntityLiving);
 			worldObj.removeEntity(par1EntityLiving);
-			var2.initCreature();
+			var2.func_110161_a((EntityLivingData) null);
 			var2.setVillager(true);
 			if(par1EntityLiving.isChild())
 			{
@@ -347,7 +397,16 @@
 	
 	public void setChild(boolean par1)
 	{
-		getDataWatcher().updateObject(12, Byte.valueOf((byte) 1));
+		getDataWatcher().updateObject(12, Byte.valueOf((byte) (par1 ? 1 : 0)));
+		if(worldObj != null && !worldObj.isRemote)
+		{
+			AttributeInstance var2 = func_110148_a(SharedMonsterAttributes.field_111263_d);
+			var2.func_111124_b(field_110188_br);
+			if(par1)
+			{
+				var2.func_111121_a(field_110188_br);
+			}
+		}
 	}
 	
 	public void setVillager(boolean par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityZombieGroupData.java b/RMCClient/minecraft/net/minecraft/src/EntityZombieGroupData.java
new file mode 100644
index 0000000..0d27306
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityZombieGroupData.java
@@ -0,0 +1,22 @@
+package net.minecraft.src;
+
+class EntityZombieGroupData implements EntityLivingData
+{
+	public boolean field_142048_a;
+	public boolean field_142046_b;
+	final EntityZombie field_142047_c;
+	
+	private EntityZombieGroupData(EntityZombie p_i2348_1_, boolean p_i2348_2_, boolean p_i2348_3_)
+	{
+		field_142047_c = p_i2348_1_;
+		field_142048_a = false;
+		field_142046_b = false;
+		field_142048_a = p_i2348_2_;
+		field_142046_b = p_i2348_3_;
+	}
+	
+	EntityZombieGroupData(EntityZombie p_i2349_1_, boolean p_i2349_2_, boolean p_i2349_3_, EntityZombieINNER1 p_i2349_4_)
+	{
+		this(p_i2349_1_, p_i2349_2_, p_i2349_3_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EntityZombieINNER1.java b/RMCClient/minecraft/net/minecraft/src/EntityZombieINNER1.java
new file mode 100644
index 0000000..7830a22
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/EntityZombieINNER1.java
@@ -0,0 +1,5 @@
+package net.minecraft.src;
+
+class EntityZombieINNER1
+{
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumArmorMaterial.java b/RMCClient/minecraft/net/minecraft/src/EnumArmorMaterial.java
index 75965ed..ddcef7f 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumArmorMaterial.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumArmorMaterial.java
@@ -7,11 +7,11 @@
 	private int[] damageReductionAmountArray;
 	private int enchantability;
 	
-	private EnumArmorMaterial(int par3, int[] par4ArrayOfInteger, int par5)
+	private EnumArmorMaterial(int p_i1827_3_, int[] p_i1827_4_, int p_i1827_5_)
 	{
-		maxDamageFactor = par3;
-		damageReductionAmountArray = par4ArrayOfInteger;
-		enchantability = par5;
+		maxDamageFactor = p_i1827_3_;
+		damageReductionAmountArray = p_i1827_4_;
+		enchantability = p_i1827_5_;
 	}
 	
 	public int getArmorCraftingMaterial()
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumArt.java b/RMCClient/minecraft/net/minecraft/src/EnumArt.java
index 7438565..993ce84 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumArt.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumArt.java
@@ -10,12 +10,12 @@
 	public final int offsetX;
 	public final int offsetY;
 	
-	private EnumArt(String par3Str, int par4, int par5, int par6, int par7)
+	private EnumArt(String p_i1598_3_, int p_i1598_4_, int p_i1598_5_, int p_i1598_6_, int p_i1598_7_)
 	{
-		title = par3Str;
-		sizeX = par4;
-		sizeY = par5;
-		offsetX = par6;
-		offsetY = par7;
+		title = p_i1598_3_;
+		sizeX = p_i1598_4_;
+		sizeY = p_i1598_5_;
+		offsetX = p_i1598_6_;
+		offsetY = p_i1598_7_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumChatFormatting.java b/RMCClient/minecraft/net/minecraft/src/EnumChatFormatting.java
index b6e5fa7..ffdb0db 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumChatFormatting.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumChatFormatting.java
@@ -16,16 +16,16 @@
 	private final boolean field_96303_A;
 	private final String field_96304_B;
 	
-	private EnumChatFormatting(char par3)
+	private EnumChatFormatting(char p_i1336_3_)
 	{
-		this(par3, false);
+		this(p_i1336_3_, false);
 	}
 	
-	private EnumChatFormatting(char par3, boolean par4)
+	private EnumChatFormatting(char p_i1337_3_, boolean p_i1337_4_)
 	{
-		field_96329_z = par3;
-		field_96303_A = par4;
-		field_96304_B = "\u00a7" + par3;
+		field_96329_z = p_i1337_3_;
+		field_96303_A = p_i1337_4_;
+		field_96304_B = "\u00a7" + p_i1337_3_;
 	}
 	
 	public String func_96297_d()
@@ -53,6 +53,11 @@
 		return field_96304_B;
 	}
 	
+	public static String func_110646_a(String p_110646_0_)
+	{
+		return p_110646_0_ == null ? null : field_96330_y.matcher(p_110646_0_).replaceAll("");
+	}
+	
 	public static Collection func_96296_a(boolean par0, boolean par1)
 	{
 		ArrayList var2 = new ArrayList();
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumCreatureType.java b/RMCClient/minecraft/net/minecraft/src/EnumCreatureType.java
index ef7221c..74e9c0a 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumCreatureType.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumCreatureType.java
@@ -9,13 +9,13 @@
 	private final boolean isPeacefulCreature;
 	private final boolean isAnimal;
 	
-	private EnumCreatureType(Class par3Class, int par4, Material par5Material, boolean par6, boolean par7)
+	private EnumCreatureType(Class p_i1596_3_, int p_i1596_4_, Material p_i1596_5_, boolean p_i1596_6_, boolean p_i1596_7_)
 	{
-		creatureClass = par3Class;
-		maxNumberOfCreature = par4;
-		creatureMaterial = par5Material;
-		isPeacefulCreature = par6;
-		isAnimal = par7;
+		creatureClass = p_i1596_3_;
+		maxNumberOfCreature = p_i1596_4_;
+		creatureMaterial = p_i1596_5_;
+		isPeacefulCreature = p_i1596_6_;
+		isAnimal = p_i1596_7_;
 	}
 	
 	public boolean getAnimal()
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumFacing.java b/RMCClient/minecraft/net/minecraft/src/EnumFacing.java
index 2783b5b..525e24f 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumFacing.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumFacing.java
@@ -10,13 +10,13 @@
 	private final int frontOffsetZ;
 	private static final EnumFacing[] faceList = new EnumFacing[6];
 	
-	private EnumFacing(int par3, int par4, int par5, int par6, int par7)
+	private EnumFacing(int p_i1367_3_, int p_i1367_4_, int p_i1367_5_, int p_i1367_6_, int p_i1367_7_)
 	{
-		order_a = par3;
-		order_b = par4;
-		frontOffsetX = par5;
-		frontOffsetY = par6;
-		frontOffsetZ = par7;
+		order_a = p_i1367_3_;
+		order_b = p_i1367_4_;
+		frontOffsetX = p_i1367_5_;
+		frontOffsetY = p_i1367_6_;
+		frontOffsetZ = p_i1367_7_;
 	}
 	
 	public int getFrontOffsetX()
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumGameType.java b/RMCClient/minecraft/net/minecraft/src/EnumGameType.java
index b8a6b27..911890e 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumGameType.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumGameType.java
@@ -6,10 +6,10 @@
 	int id;
 	String name;
 	
-	private EnumGameType(int par3, String par4Str)
+	private EnumGameType(int p_i1956_3_, String p_i1956_4_)
 	{
-		id = par3;
-		name = par4Str;
+		id = p_i1956_3_;
+		name = p_i1956_4_;
 	}
 	
 	public void configurePlayerCapabilities(PlayerCapabilities par1PlayerCapabilities)
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumOSHelper.java b/RMCClient/minecraft/net/minecraft/src/EnumOSHelper.java
deleted file mode 100644
index d0f2202..0000000
--- a/RMCClient/minecraft/net/minecraft/src/EnumOSHelper.java
+++ /dev/null
@@ -1,37 +0,0 @@
-package net.minecraft.src;
-
-public class EnumOSHelper
-{
-	public static final int[] field_90049_a = new int[EnumOS.values().length];
-	static
-	{
-		try
-		{
-			field_90049_a[EnumOS.LINUX.ordinal()] = 1;
-		} catch(NoSuchFieldError var4)
-		{
-			;
-		}
-		try
-		{
-			field_90049_a[EnumOS.SOLARIS.ordinal()] = 2;
-		} catch(NoSuchFieldError var3)
-		{
-			;
-		}
-		try
-		{
-			field_90049_a[EnumOS.WINDOWS.ordinal()] = 3;
-		} catch(NoSuchFieldError var2)
-		{
-			;
-		}
-		try
-		{
-			field_90049_a[EnumOS.MACOS.ordinal()] = 4;
-		} catch(NoSuchFieldError var1)
-		{
-			;
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumOptions.java b/RMCClient/minecraft/net/minecraft/src/EnumOptions.java
index 3308a73..d58d1ef 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumOptions.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumOptions.java
@@ -7,11 +7,11 @@
 	private final boolean enumBoolean;
 	private final String enumString;
 	
-	private EnumOptions(String par3Str, boolean par4, boolean par5)
+	private EnumOptions(String p_i1015_3_, boolean p_i1015_4_, boolean p_i1015_5_)
 	{
-		enumString = par3Str;
-		enumFloat = par4;
-		enumBoolean = par5;
+		enumString = p_i1015_3_;
+		enumFloat = p_i1015_4_;
+		enumBoolean = p_i1015_5_;
 	}
 	
 	public boolean getEnumBoolean()
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumRarity.java b/RMCClient/minecraft/net/minecraft/src/EnumRarity.java
index 5b8390f..f04e592 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumRarity.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumRarity.java
@@ -6,9 +6,9 @@
 	public final int rarityColor;
 	public final String rarityName;
 	
-	private EnumRarity(int par3, String par4Str)
+	private EnumRarity(int p_i1893_3_, String p_i1893_4_)
 	{
-		rarityColor = par3;
-		rarityName = par4Str;
+		rarityColor = p_i1893_3_;
+		rarityName = p_i1893_4_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumSkyBlock.java b/RMCClient/minecraft/net/minecraft/src/EnumSkyBlock.java
index 4fec688..900130d 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumSkyBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumSkyBlock.java
@@ -5,8 +5,8 @@
 	Sky(15), Block(0);
 	public final int defaultLightValue;
 	
-	private EnumSkyBlock(int par3)
+	private EnumSkyBlock(int p_i1961_3_)
 	{
-		defaultLightValue = par3;
+		defaultLightValue = p_i1961_3_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/EnumToolMaterial.java b/RMCClient/minecraft/net/minecraft/src/EnumToolMaterial.java
index 46a0c8c..4208548 100644
--- a/RMCClient/minecraft/net/minecraft/src/EnumToolMaterial.java
+++ b/RMCClient/minecraft/net/minecraft/src/EnumToolMaterial.java
@@ -2,23 +2,23 @@
 
 public enum EnumToolMaterial
 {
-	WOOD(0, 59, 2.0F, 0, 15), STONE(1, 131, 4.0F, 1, 5), IRON(2, 250, 6.0F, 2, 14), EMERALD(3, 1561, 8.0F, 3, 10), GOLD(0, 32, 12.0F, 0, 22);
+	WOOD(0, 59, 2.0F, 0.0F, 15), STONE(1, 131, 4.0F, 1.0F, 5), IRON(2, 250, 6.0F, 2.0F, 14), EMERALD(3, 1561, 8.0F, 3.0F, 10), GOLD(0, 32, 12.0F, 0.0F, 22);
 	private final int harvestLevel;
 	private final int maxUses;
 	private final float efficiencyOnProperMaterial;
-	private final int damageVsEntity;
+	private final float damageVsEntity;
 	private final int enchantability;
 	
-	private EnumToolMaterial(int par3, int par4, float par5, int par6, int par7)
+	private EnumToolMaterial(int p_i1874_3_, int p_i1874_4_, float p_i1874_5_, float p_i1874_6_, int p_i1874_7_)
 	{
-		harvestLevel = par3;
-		maxUses = par4;
-		efficiencyOnProperMaterial = par5;
-		damageVsEntity = par6;
-		enchantability = par7;
+		harvestLevel = p_i1874_3_;
+		maxUses = p_i1874_4_;
+		efficiencyOnProperMaterial = p_i1874_5_;
+		damageVsEntity = p_i1874_6_;
+		enchantability = p_i1874_7_;
 	}
 	
-	public int getDamageVsEntity()
+	public float getDamageVsEntity()
 	{
 		return damageVsEntity;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ExceptionMcoHttp.java b/RMCClient/minecraft/net/minecraft/src/ExceptionMcoHttp.java
index d7e34c2..0097f78 100644
--- a/RMCClient/minecraft/net/minecraft/src/ExceptionMcoHttp.java
+++ b/RMCClient/minecraft/net/minecraft/src/ExceptionMcoHttp.java
@@ -4,8 +4,8 @@
 {
 	private static final long serialVersionUID = 1L;
 	
-	public ExceptionMcoHttp(String par1Str, Exception par2Exception)
+	public ExceptionMcoHttp(String p_i1139_1_, Exception p_i1139_2_)
 	{
-		super(par1Str, par2Exception);
+		super(p_i1139_1_, p_i1139_2_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ExceptionMcoService.java b/RMCClient/minecraft/net/minecraft/src/ExceptionMcoService.java
index 71bd196..593fd2d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ExceptionMcoService.java
+++ b/RMCClient/minecraft/net/minecraft/src/ExceptionMcoService.java
@@ -5,11 +5,18 @@
 	private static final long serialVersionUID = 1L;
 	public final int field_96392_a;
 	public final String field_96391_b;
+	public final int field_130097_c;
 	
-	public ExceptionMcoService(int par1, String par2Str)
+	public ExceptionMcoService(int p_i1145_1_, String p_i1145_2_, int p_i1145_3_)
 	{
-		super(par2Str);
-		field_96392_a = par1;
-		field_96391_b = par2Str;
+		super(p_i1145_2_);
+		field_96392_a = p_i1145_1_;
+		field_96391_b = p_i1145_2_;
+		field_130097_c = p_i1145_3_;
+	}
+	
+	@Override public String toString()
+	{
+		return field_130097_c != -1 ? "Realms ( ErrorCode: " + field_130097_c + " )" : "Realms: " + field_96391_b;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ExceptionRetryCall.java b/RMCClient/minecraft/net/minecraft/src/ExceptionRetryCall.java
index 8aa1822..adf6eef 100644
--- a/RMCClient/minecraft/net/minecraft/src/ExceptionRetryCall.java
+++ b/RMCClient/minecraft/net/minecraft/src/ExceptionRetryCall.java
@@ -5,9 +5,9 @@
 	private static final long serialVersionUID = 1L;
 	public final int field_96393_c;
 	
-	public ExceptionRetryCall(int par1)
+	public ExceptionRetryCall(int p_i1146_1_)
 	{
-		super(503, "Retry operation");
-		field_96393_c = par1;
+		super(503, "Retry operation", -1);
+		field_96393_c = p_i1146_1_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Explosion.java b/RMCClient/minecraft/net/minecraft/src/Explosion.java
index 9e53776..2bc6f3e 100644
--- a/RMCClient/minecraft/net/minecraft/src/Explosion.java
+++ b/RMCClient/minecraft/net/minecraft/src/Explosion.java
@@ -10,7 +10,7 @@
 
 public class Explosion
 {
-	public boolean isFlaming = false;
+	public boolean isFlaming;
 	public boolean isSmoking = true;
 	private int field_77289_h = 16;
 	private Random explosionRNG = new Random();
@@ -23,14 +23,14 @@
 	public List affectedBlockPositions = new ArrayList();
 	private Map field_77288_k = new HashMap();
 	
-	public Explosion(World par1World, Entity par2Entity, double par3, double par5, double par7, float par9)
+	public Explosion(World p_i1948_1_, Entity p_i1948_2_, double p_i1948_3_, double p_i1948_5_, double p_i1948_7_, float p_i1948_9_)
 	{
-		worldObj = par1World;
-		exploder = par2Entity;
-		explosionSize = par9;
-		explosionX = par3;
-		explosionY = par5;
-		explosionZ = par7;
+		worldObj = p_i1948_1_;
+		exploder = p_i1948_2_;
+		explosionSize = p_i1948_9_;
+		explosionX = p_i1948_3_;
+		explosionY = p_i1948_5_;
+		explosionZ = p_i1948_7_;
 	}
 	
 	public void doExplosionA()
@@ -210,8 +210,8 @@
 		return field_77288_k;
 	}
 	
-	public EntityLiving func_94613_c()
+	public EntityLivingBase func_94613_c()
 	{
-		return exploder == null ? null : exploder instanceof EntityTNTPrimed ? ((EntityTNTPrimed) exploder).getTntPlacedBy() : exploder instanceof EntityLiving ? (EntityLiving) exploder : null;
+		return exploder == null ? null : exploder instanceof EntityTNTPrimed ? ((EntityTNTPrimed) exploder).getTntPlacedBy() : exploder instanceof EntityLivingBase ? (EntityLivingBase) exploder : null;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ExtendedBlockStorage.java b/RMCClient/minecraft/net/minecraft/src/ExtendedBlockStorage.java
index e8d2012..9839adb 100644
--- a/RMCClient/minecraft/net/minecraft/src/ExtendedBlockStorage.java
+++ b/RMCClient/minecraft/net/minecraft/src/ExtendedBlockStorage.java
@@ -11,13 +11,13 @@
 	private NibbleArray blocklightArray;
 	private NibbleArray skylightArray;
 	
-	public ExtendedBlockStorage(int par1, boolean par2)
+	public ExtendedBlockStorage(int p_i1997_1_, boolean p_i1997_2_)
 	{
-		yBase = par1;
+		yBase = p_i1997_1_;
 		blockLSBArray = new byte[4096];
 		blockMetadataArray = new NibbleArray(blockLSBArray.length, 4);
 		blocklightArray = new NibbleArray(blockLSBArray.length, 4);
-		if(par2)
+		if(p_i1997_2_)
 		{
 			skylightArray = new NibbleArray(blockLSBArray.length, 4);
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/FallbackResourceManager.java b/RMCClient/minecraft/net/minecraft/src/FallbackResourceManager.java
new file mode 100644
index 0000000..452684e
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/FallbackResourceManager.java
@@ -0,0 +1,77 @@
+package net.minecraft.src;
+
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Set;
+
+public class FallbackResourceManager implements ResourceManager
+{
+	protected final List field_110540_a = new ArrayList();
+	private final MetadataSerializer field_110539_b;
+	
+	public FallbackResourceManager(MetadataSerializer p_i1289_1_)
+	{
+		field_110539_b = p_i1289_1_;
+	}
+	
+	@Override public Resource func_110536_a(ResourceLocation p_110536_1_) throws IOException
+	{
+		ResourcePack var2 = null;
+		ResourceLocation var3 = func_110537_b(p_110536_1_);
+		for(int var4 = field_110540_a.size() - 1; var4 >= 0; --var4)
+		{
+			ResourcePack var5 = (ResourcePack) field_110540_a.get(var4);
+			if(var2 == null && var5.func_110589_b(var3))
+			{
+				var2 = var5;
+			}
+			if(var5.func_110589_b(p_110536_1_))
+			{
+				InputStream var6 = null;
+				if(var2 != null)
+				{
+					var6 = var2.func_110590_a(var3);
+				}
+				return new SimpleResource(p_110536_1_, var5.func_110590_a(p_110536_1_), var6, field_110539_b);
+			}
+		}
+		throw new FileNotFoundException(p_110536_1_.toString());
+	}
+	
+	public void func_110538_a(ResourcePack p_110538_1_)
+	{
+		field_110540_a.add(p_110538_1_);
+	}
+	
+	@Override public Set func_135055_a()
+	{
+		return null;
+	}
+	
+	@Override public List func_135056_b(ResourceLocation p_135056_1_) throws IOException
+	{
+		ArrayList var2 = Lists.newArrayList();
+		ResourceLocation var3 = func_110537_b(p_135056_1_);
+		Iterator var4 = field_110540_a.iterator();
+		while(var4.hasNext())
+		{
+			ResourcePack var5 = (ResourcePack) var4.next();
+			if(var5.func_110589_b(p_135056_1_))
+			{
+				InputStream var6 = var5.func_110589_b(var3) ? var5.func_110590_a(var3) : null;
+				var2.add(new SimpleResource(p_135056_1_, var5.func_110590_a(p_135056_1_), var6, field_110539_b));
+			}
+		}
+		if(var2.isEmpty()) throw new FileNotFoundException(p_135056_1_.toString());
+		else return var2;
+	}
+	
+	static ResourceLocation func_110537_b(ResourceLocation p_110537_0_)
+	{
+		return new ResourceLocation(p_110537_0_.func_110624_b(), p_110537_0_.func_110623_a() + ".mcmeta");
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/FileResourcePack.java b/RMCClient/minecraft/net/minecraft/src/FileResourcePack.java
new file mode 100644
index 0000000..146e84a
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/FileResourcePack.java
@@ -0,0 +1,112 @@
+package net.minecraft.src;
+
+import java.io.Closeable;
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Enumeration;
+import java.util.HashSet;
+import java.util.Set;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
+
+public class FileResourcePack extends AbstractResourcePack implements Closeable
+{
+	public static final Splitter field_110601_c = Splitter.on('/').omitEmptyStrings().limit(3);
+	private ZipFile field_110600_d;
+	
+	public FileResourcePack(File p_i1290_1_)
+	{
+		super(p_i1290_1_);
+	}
+	
+	@Override public void close()
+	{
+		if(field_110600_d != null)
+		{
+			try
+			{
+				field_110600_d.close();
+			} catch(Exception ex)
+			{
+			}
+			field_110600_d = null;
+		}
+	}
+	
+	@Override protected void finalize()
+	{
+		close();
+		try
+		{
+			super.finalize();
+		} catch(Throwable t)
+		{
+		}
+	}
+	
+	@Override public Set func_110587_b()
+	{
+		ZipFile var1;
+		try
+		{
+			var1 = func_110599_c();
+		} catch(IOException var8)
+		{
+			return Collections.emptySet();
+		}
+		Enumeration var2 = var1.entries();
+		HashSet var3 = Sets.newHashSet();
+		while(var2.hasMoreElements())
+		{
+			ZipEntry var4 = (ZipEntry) var2.nextElement();
+			String var5 = var4.getName();
+			if(var5.startsWith("assets/"))
+			{
+				ArrayList var6 = Lists.newArrayList(field_110601_c.split(var5));
+				if(var6.size() > 1)
+				{
+					String var7 = (String) var6.get(1);
+					if(!var7.equals(var7.toLowerCase()))
+					{
+						func_110594_c(var7);
+					} else
+					{
+						var3.add(var7);
+					}
+				}
+			}
+		}
+		return var3;
+	}
+	
+	@Override protected InputStream func_110591_a(String p_110591_1_) throws IOException
+	{
+		ZipFile var2 = func_110599_c();
+		ZipEntry var3 = var2.getEntry(p_110591_1_);
+		if(var3 == null) throw new ResourcePackFileNotFoundException(field_110597_b, p_110591_1_);
+		else return var2.getInputStream(var3);
+	}
+	
+	@Override public boolean func_110593_b(String p_110593_1_)
+	{
+		try
+		{
+			return func_110599_c().getEntry(p_110593_1_) != null;
+		} catch(IOException var3)
+		{
+			return false;
+		}
+	}
+	
+	private ZipFile func_110599_c() throws IOException
+	{
+		if(field_110600_d == null)
+		{
+			field_110600_d = new ZipFile(field_110597_b);
+		}
+		return field_110600_d;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/FlatGeneratorInfo.java b/RMCClient/minecraft/net/minecraft/src/FlatGeneratorInfo.java
index 5de12d9..e0e07ba 100644
--- a/RMCClient/minecraft/net/minecraft/src/FlatGeneratorInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/FlatGeneratorInfo.java
@@ -11,7 +11,7 @@
 {
 	private final List flatLayers = new ArrayList();
 	private final Map worldFeatures = new HashMap();
-	private int biomeToUse = 0;
+	private int biomeToUse;
 	
 	public void func_82645_d()
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/FlatLayerInfo.java b/RMCClient/minecraft/net/minecraft/src/FlatLayerInfo.java
index a584bdc..baa23b3 100644
--- a/RMCClient/minecraft/net/minecraft/src/FlatLayerInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/FlatLayerInfo.java
@@ -7,20 +7,17 @@
 	private int layerFillBlockMeta;
 	private int layerMinimumY;
 	
-	public FlatLayerInfo(int par1, int par2)
+	public FlatLayerInfo(int p_i2029_1_, int p_i2029_2_)
 	{
 		layerCount = 1;
-		layerFillBlock = 0;
-		layerFillBlockMeta = 0;
-		layerMinimumY = 0;
-		layerCount = par1;
-		layerFillBlock = par2;
+		layerCount = p_i2029_1_;
+		layerFillBlock = p_i2029_2_;
 	}
 	
-	public FlatLayerInfo(int par1, int par2, int par3)
+	public FlatLayerInfo(int p_i2030_1_, int p_i2030_2_, int p_i2030_3_)
 	{
-		this(par1, par2);
-		layerFillBlockMeta = par3;
+		this(p_i2030_1_, p_i2030_2_);
+		layerFillBlockMeta = p_i2030_3_;
 	}
 	
 	public int getFillBlock()
diff --git a/RMCClient/minecraft/net/minecraft/src/FolderResourcePack.java b/RMCClient/minecraft/net/minecraft/src/FolderResourcePack.java
new file mode 100644
index 0000000..b4458ca
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/FolderResourcePack.java
@@ -0,0 +1,51 @@
+package net.minecraft.src;
+
+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.HashSet;
+import java.util.Set;
+
+public class FolderResourcePack extends AbstractResourcePack
+{
+	public FolderResourcePack(File p_i1291_1_)
+	{
+		super(p_i1291_1_);
+	}
+	
+	@Override public Set func_110587_b()
+	{
+		HashSet var1 = Sets.newHashSet();
+		File var2 = new File(field_110597_b, "assets/");
+		if(var2.isDirectory())
+		{
+			File[] var3 = var2.listFiles((java.io.FileFilter) DirectoryFileFilter.DIRECTORY);
+			int var4 = var3.length;
+			for(int var5 = 0; var5 < var4; ++var5)
+			{
+				File var6 = var3[var5];
+				String var7 = func_110595_a(var2, var6);
+				if(!var7.equals(var7.toLowerCase()))
+				{
+					func_110594_c(var7);
+				} else
+				{
+					var1.add(var7.substring(0, var7.length() - 1));
+				}
+			}
+		}
+		return var1;
+	}
+	
+	@Override protected InputStream func_110591_a(String p_110591_1_) throws IOException
+	{
+		return new BufferedInputStream(new FileInputStream(new File(field_110597_b, p_110591_1_)));
+	}
+	
+	@Override protected boolean func_110593_b(String p_110593_1_)
+	{
+		return new File(field_110597_b, p_110593_1_).isFile();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/FoliageColorReloadListener.java b/RMCClient/minecraft/net/minecraft/src/FoliageColorReloadListener.java
new file mode 100644
index 0000000..78a44e9
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/FoliageColorReloadListener.java
@@ -0,0 +1,19 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+
+public class FoliageColorReloadListener implements ResourceManagerReloadListener
+{
+	private static final ResourceLocation field_130079_a = new ResourceLocation("textures/colormap/foliage.png");
+	
+	@Override public void func_110549_a(ResourceManager p_110549_1_)
+	{
+		try
+		{
+			ColorizerFoliage.setFoliageBiomeColorizer(TextureUtil.func_110986_a(p_110549_1_, field_130079_a));
+		} catch(IOException var3)
+		{
+			;
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/FontMetadataSection.java b/RMCClient/minecraft/net/minecraft/src/FontMetadataSection.java
new file mode 100644
index 0000000..551a861
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/FontMetadataSection.java
@@ -0,0 +1,15 @@
+package net.minecraft.src;
+
+public class FontMetadataSection implements MetadataSection
+{
+	private final float[] field_110467_a;
+	private final float[] field_110465_b;
+	private final float[] field_110466_c;
+	
+	public FontMetadataSection(float[] p_i1310_1_, float[] p_i1310_2_, float[] p_i1310_3_)
+	{
+		field_110467_a = p_i1310_1_;
+		field_110465_b = p_i1310_2_;
+		field_110466_c = p_i1310_3_;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/FontMetadataSectionSerializer.java b/RMCClient/minecraft/net/minecraft/src/FontMetadataSectionSerializer.java
new file mode 100644
index 0000000..cd75b2c
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/FontMetadataSectionSerializer.java
@@ -0,0 +1,59 @@
+package net.minecraft.src;
+
+import java.lang.reflect.Type;
+
+public class FontMetadataSectionSerializer extends BaseMetadataSectionSerializer
+{
+	public Object deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_)
+	{
+		return func_110490_a(p_deserialize_1_, p_deserialize_2_, p_deserialize_3_);
+	}
+	
+	@Override public String func_110483_a()
+	{
+		return "font";
+	}
+	
+	public FontMetadataSection func_110490_a(JsonElement p_110490_1_, Type p_110490_2_, JsonDeserializationContext p_110490_3_)
+	{
+		JsonObject var4 = p_110490_1_.getAsJsonObject();
+		float[] var5 = new float[256];
+		float[] var6 = new float[256];
+		float[] var7 = new float[256];
+		float var8 = 1.0F;
+		float var9 = 0.0F;
+		float var10 = 0.0F;
+		if(var4.has("characters"))
+		{
+			if(!var4.get("characters").isJsonObject()) throw new JsonParseException("Invalid font->characters: expected object, was " + var4.get("characters"));
+			JsonObject var11 = var4.getAsJsonObject("characters");
+			if(var11.has("default"))
+			{
+				if(!var11.get("default").isJsonObject()) throw new JsonParseException("Invalid font->characters->default: expected object, was " + var11.get("default"));
+				JsonObject var12 = var11.getAsJsonObject("default");
+				var8 = func_110487_a(var12.get("width"), "characters->default->width", Float.valueOf(var8), 0.0F, 2.14748365E9F);
+				var9 = func_110487_a(var12.get("spacing"), "characters->default->spacing", Float.valueOf(var9), 0.0F, 2.14748365E9F);
+				var10 = func_110487_a(var12.get("left"), "characters->default->left", Float.valueOf(var10), 0.0F, 2.14748365E9F);
+			}
+			for(int var18 = 0; var18 < 256; ++var18)
+			{
+				JsonElement var13 = var11.get(Integer.toString(var18));
+				float var14 = var8;
+				float var15 = var9;
+				float var16 = var10;
+				if(var13 != null)
+				{
+					if(!var13.isJsonObject()) throw new JsonParseException("Invalid font->characters->" + var18 + ": expected object, was " + var13);
+					JsonObject var17 = var13.getAsJsonObject();
+					var14 = func_110487_a(var17.get("width"), "characters->" + var18 + "->width", Float.valueOf(var8), 0.0F, 2.14748365E9F);
+					var15 = func_110487_a(var17.get("spacing"), "characters->" + var18 + "->spacing", Float.valueOf(var9), 0.0F, 2.14748365E9F);
+					var16 = func_110487_a(var17.get("left"), "characters->" + var18 + "->left", Float.valueOf(var10), 0.0F, 2.14748365E9F);
+				}
+				var5[var18] = var14;
+				var6[var18] = var15;
+				var7[var18] = var16;
+			}
+		}
+		return new FontMetadataSection(var5, var7, var6);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/FontRenderer.java b/RMCClient/minecraft/net/minecraft/src/FontRenderer.java
index e80a3d3..3773972 100644
--- a/RMCClient/minecraft/net/minecraft/src/FontRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/FontRenderer.java
@@ -15,15 +15,16 @@
 
 import org.lwjgl.opengl.GL11;
 
-public class FontRenderer
+public class FontRenderer implements ResourceManagerReloadListener
 {
+	private static final ResourceLocation[] field_111274_c = new ResourceLocation[256];
 	private int[] charWidth = new int[256];
 	public int FONT_HEIGHT = 9;
 	public Random fontRandom = new Random();
 	private byte[] glyphWidth = new byte[65536];
 	private int[] colorCode = new int[32];
-	private final String fontTextureName;
-	private final RenderEngine renderEngine;
+	private final ResourceLocation field_111273_g;
+	private final TextureManager renderEngine;
 	private float posX;
 	private float posY;
 	private boolean unicodeFlag;
@@ -33,25 +34,18 @@
 	private float green;
 	private float alpha;
 	private int textColor;
-	private boolean randomStyle = false;
-	private boolean boldStyle = false;
-	private boolean italicStyle = false;
-	private boolean underlineStyle = false;
-	private boolean strikethroughStyle = false;
+	private boolean randomStyle;
+	private boolean boldStyle;
+	private boolean italicStyle;
+	private boolean underlineStyle;
+	private boolean strikethroughStyle;
 	
-	FontRenderer()
+	public FontRenderer(GameSettings p_i1035_1_, ResourceLocation p_i1035_2_, TextureManager p_i1035_3_, boolean p_i1035_4_)
 	{
-		renderEngine = null;
-		fontTextureName = null;
-	}
-	
-	public FontRenderer(GameSettings par1GameSettings, String par2Str, RenderEngine par3RenderEngine, boolean par4)
-	{
-		fontTextureName = par2Str;
-		renderEngine = par3RenderEngine;
-		unicodeFlag = par4;
-		readFontData();
-		par3RenderEngine.bindTexture(par2Str);
+		field_111273_g = p_i1035_2_;
+		renderEngine = p_i1035_3_;
+		unicodeFlag = p_i1035_4_;
+		p_i1035_3_.func_110577_a(field_111273_g);
 		for(int var5 = 0; var5 < 32; ++var5)
 		{
 			int var6 = (var5 >> 3 & 1) * 85;
@@ -62,7 +56,7 @@
 			{
 				var7 += 85;
 			}
-			if(par1GameSettings.anaglyph)
+			if(p_i1035_1_.anaglyph)
 			{
 				int var10 = (var7 * 30 + var8 * 59 + var9 * 11) / 100;
 				int var11 = (var7 * 30 + var8 * 70) / 100;
@@ -79,6 +73,7 @@
 			}
 			colorCode[var5] = (var7 & 255) << 16 | (var8 & 255) << 8 | var9 & 255;
 		}
+		readGlyphSizes();
 	}
 	
 	private String bidiReorder(String par1Str)
@@ -180,6 +175,76 @@
 		return this.drawString(par1Str, par2, par3, par4, true);
 	}
 	
+	@Override public void func_110549_a(ResourceManager p_110549_1_)
+	{
+		func_111272_d();
+	}
+	
+	private ResourceLocation func_111271_a(int p_111271_1_)
+	{
+		if(field_111274_c[p_111271_1_] == null)
+		{
+			field_111274_c[p_111271_1_] = new ResourceLocation(String.format("textures/font/unicode_page_%02x.png", new Object[] { Integer.valueOf(p_111271_1_) }));
+		}
+		return field_111274_c[p_111271_1_];
+	}
+	
+	private void func_111272_d()
+	{
+		BufferedImage var1;
+		try
+		{
+			var1 = ImageIO.read(Minecraft.getMinecraft().func_110442_L().func_110536_a(field_111273_g).func_110527_b());
+		} catch(IOException var17)
+		{
+			throw new RuntimeException(var17);
+		}
+		int var2 = var1.getWidth();
+		int var3 = var1.getHeight();
+		int[] var4 = new int[var2 * var3];
+		var1.getRGB(0, 0, var2, var3, var4, 0, var2);
+		int var5 = var3 / 16;
+		int var6 = var2 / 16;
+		byte var7 = 1;
+		float var8 = 8.0F / var6;
+		int var9 = 0;
+		while(var9 < 256)
+		{
+			int var10 = var9 % 16;
+			int var11 = var9 / 16;
+			if(var9 == 32)
+			{
+				charWidth[var9] = 3 + var7;
+			}
+			int var12 = var6 - 1;
+			while(true)
+			{
+				if(var12 >= 0)
+				{
+					int var13 = var10 * var6 + var12;
+					boolean var14 = true;
+					for(int var15 = 0; var15 < var5 && var14; ++var15)
+					{
+						int var16 = (var11 * var6 + var15) * var2;
+						if((var4[var13 + var16] >> 24 & 255) != 0)
+						{
+							var14 = false;
+						}
+					}
+					if(var14)
+					{
+						--var12;
+						continue;
+					}
+				}
+				++var12;
+				charWidth[var9] = (int) (0.5D + var12 * var8) + var7;
+				++var9;
+				break;
+			}
+		}
+	}
+	
 	public boolean getBidiFlag()
 	{
 		return bidiFlag;
@@ -257,73 +322,14 @@
 	
 	private void loadGlyphTexture(int par1)
 	{
-		String var2 = String.format("/font/glyph_%02X.png", new Object[] { Integer.valueOf(par1) });
-		renderEngine.bindTexture(var2);
-	}
-	
-	public void readFontData()
-	{
-		readGlyphSizes();
-		readFontTexture(fontTextureName);
-	}
-	
-	private void readFontTexture(String par1Str)
-	{
-		BufferedImage var2;
-		try
-		{
-			var2 = ImageIO.read(RenderEngine.class.getResourceAsStream(par1Str));
-		} catch(IOException var15)
-		{
-			throw new RuntimeException(var15);
-		}
-		int var3 = var2.getWidth();
-		int var4 = var2.getHeight();
-		int[] var5 = new int[var3 * var4];
-		var2.getRGB(0, 0, var3, var4, var5, 0, var3);
-		int var6 = 0;
-		while(var6 < 256)
-		{
-			int var7 = var6 % 16;
-			int var8 = var6 / 16;
-			int var9 = 7;
-			while(true)
-			{
-				if(var9 >= 0)
-				{
-					int var10 = var7 * 8 + var9;
-					boolean var11 = true;
-					for(int var12 = 0; var12 < 8 && var11; ++var12)
-					{
-						int var13 = (var8 * 8 + var12) * var3;
-						int var14 = var5[var10 + var13] & 255;
-						if(var14 > 0)
-						{
-							var11 = false;
-						}
-					}
-					if(var11)
-					{
-						--var9;
-						continue;
-					}
-				}
-				if(var6 == 32)
-				{
-					var9 = 2;
-				}
-				charWidth[var6] = var9 + 2;
-				++var6;
-				break;
-			}
-		}
+		renderEngine.func_110577_a(func_111271_a(par1));
 	}
 	
 	private void readGlyphSizes()
 	{
 		try
 		{
-			InputStream var1 = Minecraft.getMinecraft().texturePackList.getSelectedTexturePack().getResourceAsStream("/font/glyph_sizes.bin");
+			InputStream var1 = Minecraft.getMinecraft().func_110442_L().func_110536_a(new ResourceLocation("font/glyph_sizes.bin")).func_110527_b();
 			var1.read(glyphWidth);
 		} catch(IOException var2)
 		{
@@ -341,17 +347,17 @@
 		float var3 = par1 % 16 * 8;
 		float var4 = par1 / 16 * 8;
 		float var5 = par2 ? 1.0F : 0.0F;
-		renderEngine.bindTexture(fontTextureName);
+		renderEngine.func_110577_a(field_111273_g);
 		float var6 = charWidth[par1] - 0.01F;
 		GL11.glBegin(GL11.GL_TRIANGLE_STRIP);
 		GL11.glTexCoord2f(var3 / 128.0F, var4 / 128.0F);
 		GL11.glVertex3f(posX + var5, posY, 0.0F);
 		GL11.glTexCoord2f(var3 / 128.0F, (var4 + 7.99F) / 128.0F);
 		GL11.glVertex3f(posX - var5, posY + 7.99F, 0.0F);
-		GL11.glTexCoord2f((var3 + var6) / 128.0F, var4 / 128.0F);
-		GL11.glVertex3f(posX + var6 + var5, posY, 0.0F);
-		GL11.glTexCoord2f((var3 + var6) / 128.0F, (var4 + 7.99F) / 128.0F);
-		GL11.glVertex3f(posX + var6 - var5, posY + 7.99F, 0.0F);
+		GL11.glTexCoord2f((var3 + var6 - 1.0F) / 128.0F, var4 / 128.0F);
+		GL11.glVertex3f(posX + var6 - 1.0F + var5, posY, 0.0F);
+		GL11.glTexCoord2f((var3 + var6 - 1.0F) / 128.0F, (var4 + 7.99F) / 128.0F);
+		GL11.glVertex3f(posX + var6 - 1.0F - var5, posY + 7.99F, 0.0F);
 		GL11.glEnd();
 		return charWidth[par1];
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/FoodStats.java b/RMCClient/minecraft/net/minecraft/src/FoodStats.java
index d513a7b..b0b16ef 100644
--- a/RMCClient/minecraft/net/minecraft/src/FoodStats.java
+++ b/RMCClient/minecraft/net/minecraft/src/FoodStats.java
@@ -5,7 +5,7 @@
 	private int foodLevel = 20;
 	private float foodSaturationLevel = 5.0F;
 	private float foodExhaustionLevel;
-	private int foodTimer = 0;
+	private int foodTimer;
 	private int prevFoodLevel = 20;
 	
 	public void addExhaustion(float par1)
@@ -59,12 +59,13 @@
 				foodLevel = Math.max(foodLevel - 1, 0);
 			}
 		}
-		if(foodLevel >= 18 && par1EntityPlayer.shouldHeal())
+		if(par1EntityPlayer.worldObj.getGameRules().getGameRuleBooleanValue("naturalRegeneration") && foodLevel >= 18 && par1EntityPlayer.shouldHeal())
 		{
 			++foodTimer;
 			if(foodTimer >= 80)
 			{
-				par1EntityPlayer.heal(1);
+				par1EntityPlayer.heal(1.0F);
+				addExhaustion(3.0F);
 				foodTimer = 0;
 			}
 		} else if(foodLevel <= 0)
@@ -72,9 +73,9 @@
 			++foodTimer;
 			if(foodTimer >= 80)
 			{
-				if(par1EntityPlayer.getHealth() > 10 || var2 >= 3 || par1EntityPlayer.getHealth() > 1 && var2 >= 2)
+				if(par1EntityPlayer.func_110143_aJ() > 10.0F || var2 >= 3 || par1EntityPlayer.func_110143_aJ() > 1.0F && var2 >= 2)
 				{
-					par1EntityPlayer.attackEntityFrom(DamageSource.starve, 1);
+					par1EntityPlayer.attackEntityFrom(DamageSource.starve, 1.0F);
 				}
 				foodTimer = 0;
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/FurnaceRecipes.java b/RMCClient/minecraft/net/minecraft/src/FurnaceRecipes.java
index 9231036..d87180b 100644
--- a/RMCClient/minecraft/net/minecraft/src/FurnaceRecipes.java
+++ b/RMCClient/minecraft/net/minecraft/src/FurnaceRecipes.java
@@ -21,6 +21,7 @@
 		addSmelting(Item.fishRaw.itemID, new ItemStack(Item.fishCooked), 0.35F);
 		addSmelting(Block.cobblestone.blockID, new ItemStack(Block.stone), 0.1F);
 		addSmelting(Item.clay.itemID, new ItemStack(Item.brick), 0.3F);
+		addSmelting(Block.blockClay.blockID, new ItemStack(Block.field_111032_cD), 0.35F);
 		addSmelting(Block.cactus.blockID, new ItemStack(Item.dyePowder, 1, 2), 0.2F);
 		addSmelting(Block.wood.blockID, new ItemStack(Item.coal, 1, 1), 0.15F);
 		addSmelting(Block.oreEmerald.blockID, new ItemStack(Item.emerald), 1.0F);
diff --git a/RMCClient/minecraft/net/minecraft/src/GLAllocation.java b/RMCClient/minecraft/net/minecraft/src/GLAllocation.java
index cc28170..2412dad 100644
--- a/RMCClient/minecraft/net/minecraft/src/GLAllocation.java
+++ b/RMCClient/minecraft/net/minecraft/src/GLAllocation.java
@@ -65,11 +65,4 @@
 		field_74531_a.put(Integer.valueOf(var1), Integer.valueOf(par0));
 		return var1;
 	}
-	
-	public static synchronized int generateTextureNames()
-	{
-		int var0 = GL11.glGenTextures();
-		field_74530_b.add(Integer.valueOf(var0));
-		return var0;
-	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GameRuleValue.java b/RMCClient/minecraft/net/minecraft/src/GameRuleValue.java
index 98946d6..52bc7e4 100644
--- a/RMCClient/minecraft/net/minecraft/src/GameRuleValue.java
+++ b/RMCClient/minecraft/net/minecraft/src/GameRuleValue.java
@@ -7,9 +7,9 @@
 	private int valueInteger;
 	private double valueDouble;
 	
-	public GameRuleValue(String par1Str)
+	public GameRuleValue(String p_i1949_1_)
 	{
-		setValue(par1Str);
+		setValue(p_i1949_1_);
 	}
 	
 	public boolean getGameRuleBooleanValue()
diff --git a/RMCClient/minecraft/net/minecraft/src/GameRules.java b/RMCClient/minecraft/net/minecraft/src/GameRules.java
index 6e8eb9e..23143b2 100644
--- a/RMCClient/minecraft/net/minecraft/src/GameRules.java
+++ b/RMCClient/minecraft/net/minecraft/src/GameRules.java
@@ -17,6 +17,8 @@
 		addGameRule("doMobLoot", "true");
 		addGameRule("doTileDrops", "true");
 		addGameRule("commandBlockOutput", "true");
+		addGameRule("naturalRegeneration", "true");
+		addGameRule("doDaylightCycle", "true");
 	}
 	
 	public void addGameRule(String par1Str, String par2Str)
diff --git a/RMCClient/minecraft/net/minecraft/src/GameSettings.java b/RMCClient/minecraft/net/minecraft/src/GameSettings.java
index ff7152d..61447cd 100644
--- a/RMCClient/minecraft/net/minecraft/src/GameSettings.java
+++ b/RMCClient/minecraft/net/minecraft/src/GameSettings.java
@@ -24,32 +24,32 @@
 	public float musicVolume = 1.0F;
 	public float soundVolume = 1.0F;
 	public float mouseSensitivity = 0.5F;
-	public boolean invertMouse = false;
-	public int renderDistance = 0;
+	public boolean invertMouse;
+	public int renderDistance;
 	public boolean viewBobbing = true;
-	public boolean anaglyph = false;
-	public boolean advancedOpengl = false;
+	public boolean anaglyph;
+	public boolean advancedOpengl;
 	public int limitFramerate = 1;
 	public boolean fancyGraphics = true;
 	public int ambientOcclusion = 2;
 	public boolean clouds = true;
 	public String skin = "Default";
-	public int chatVisibility = 0;
+	public int chatVisibility;
 	public boolean chatColours = true;
 	public boolean chatLinks = true;
 	public boolean chatLinksPrompt = true;
 	public float chatOpacity = 1.0F;
 	public boolean serverTextures = true;
 	public boolean snooperEnabled = true;
-	public boolean fullScreen = false;
+	public boolean fullScreen;
 	public boolean enableVsync = true;
-	public boolean hideServerAddress = false;
-	public boolean advancedItemTooltips = false;
+	public boolean hideServerAddress;
+	public boolean advancedItemTooltips;
 	public boolean pauseOnLostFocus = true;
 	public boolean showCape = true;
-	public boolean touchscreen = false;
-	public int overrideWidth = 0;
-	public int overrideHeight = 0;
+	public boolean touchscreen;
+	public int overrideWidth;
+	public int overrideHeight;
 	public boolean heldItemTooltips = true;
 	public float chatScale = 1.0F;
 	public float chatWidth = 1.0F;
@@ -93,66 +93,57 @@
 	{
 		keyBindings = new KeyBinding[] { keyBindAttack, keyBindUseItem, keyBindForward, keyBindLeft, keyBindBack, keyBindRight, keyBindJump, keyBindSneak, keyBindDrop, keyBindInventory, keyBindChat, keyBindPlayerList, keyBindPickBlock, keyBindCommand };
 		difficulty = 2;
-		hideGUI = false;
-		thirdPersonView = 0;
-		showDebugInfo = false;
-		showDebugProfilerChart = false;
 		lastServer = "";
-		noclip = false;
-		smoothCamera = false;
-		debugCamEnable = false;
 		noclipRate = 1.0F;
 		debugCamRate = 1.0F;
-		fovSetting = 0.0F;
-		gammaSetting = 0.0F;
-		guiScale = 0;
-		particleSetting = 0;
 		language = "en_US";
 	}
 	
-	public GameSettings(Minecraft par1Minecraft, File par2File)
+	public GameSettings(Minecraft p_i1016_1_, File p_i1016_2_)
 	{
 		keyBindings = new KeyBinding[] { keyBindAttack, keyBindUseItem, keyBindForward, keyBindLeft, keyBindBack, keyBindRight, keyBindJump, keyBindSneak, keyBindDrop, keyBindInventory, keyBindChat, keyBindPlayerList, keyBindPickBlock, keyBindCommand };
 		difficulty = 2;
-		hideGUI = false;
-		thirdPersonView = 0;
-		showDebugInfo = false;
-		showDebugProfilerChart = false;
 		lastServer = "";
-		noclip = false;
-		smoothCamera = false;
-		debugCamEnable = false;
 		noclipRate = 1.0F;
 		debugCamRate = 1.0F;
-		fovSetting = 0.0F;
-		gammaSetting = 0.0F;
-		guiScale = 0;
-		particleSetting = 0;
 		language = "en_US";
-		mc = par1Minecraft;
-		optionsFile = new File(par2File, "options.txt");
+		mc = p_i1016_1_;
+		optionsFile = new File(p_i1016_2_, "options.txt");
 		loadOptions();
 	}
 	
 	public String getKeyBinding(EnumOptions par1EnumOptions)
 	{
-		StringTranslate var2 = StringTranslate.getInstance();
-		String var3 = var2.translateKey(par1EnumOptions.getEnumString()) + ": ";
+		String var2 = I18n.func_135053_a(par1EnumOptions.getEnumString()) + ": ";
 		if(par1EnumOptions.getEnumFloat())
 		{
 			float var5 = getOptionFloatValue(par1EnumOptions);
-			return par1EnumOptions == EnumOptions.SENSITIVITY ? var5 == 0.0F ? var3 + var2.translateKey("options.sensitivity.min") : var5 == 1.0F ? var3 + var2.translateKey("options.sensitivity.max") : var3 + (int) (var5 * 200.0F) + "%" : par1EnumOptions == EnumOptions.FOV ? var5 == 0.0F ? var3 + var2.translateKey("options.fov.min") : var5 == 1.0F ? var3 + var2.translateKey("options.fov.max") : var3 + (int) (70.0F + var5 * 40.0F) : par1EnumOptions == EnumOptions.GAMMA ? var5 == 0.0F ? var3 + var2.translateKey("options.gamma.min") : var5 == 1.0F ? var3 + var2.translateKey("options.gamma.max") : var3 + "+" + (int) (var5 * 100.0F) + "%" : par1EnumOptions == EnumOptions.CHAT_OPACITY ? var3 + (int) (var5 * 90.0F + 10.0F) + "%" : par1EnumOptions == EnumOptions.CHAT_HEIGHT_UNFOCUSED ? var3 + GuiNewChat.func_96130_b(var5) + "px" : par1EnumOptions == EnumOptions.CHAT_HEIGHT_FOCUSED ? var3 + GuiNewChat.func_96130_b(var5) + "px" : par1EnumOptions == EnumOptions.CHAT_WIDTH ? var3 + GuiNewChat.func_96128_a(var5) + "px" : var5 == 0.0F ? var3 + var2.translateKey("options.off") : var3 + (int) (var5 * 100.0F) + "%";
+			return par1EnumOptions == EnumOptions.SENSITIVITY ? var5 == 0.0F ? var2 + I18n.func_135053_a("options.sensitivity.min") : var5 == 1.0F ? var2 + I18n.func_135053_a("options.sensitivity.max") : var2 + (int) (var5 * 200.0F) + "%" : par1EnumOptions == EnumOptions.FOV ? var5 == 0.0F ? var2 + I18n.func_135053_a("options.fov.min") : var5 == 1.0F ? var2 + I18n.func_135053_a("options.fov.max") : var2 + (int) (70.0F + var5 * 40.0F) : par1EnumOptions == EnumOptions.GAMMA ? var5 == 0.0F ? var2 + I18n.func_135053_a("options.gamma.min") : var5 == 1.0F ? var2 + I18n.func_135053_a("options.gamma.max") : var2 + "+" + (int) (var5 * 100.0F) + "%" : par1EnumOptions == EnumOptions.CHAT_OPACITY ? var2 + (int) (var5 * 90.0F + 10.0F) + "%" : par1EnumOptions == EnumOptions.CHAT_HEIGHT_UNFOCUSED ? var2 + GuiNewChat.func_96130_b(var5) + "px" : par1EnumOptions == EnumOptions.CHAT_HEIGHT_FOCUSED ? var2 + GuiNewChat.func_96130_b(var5) + "px" : par1EnumOptions == EnumOptions.CHAT_WIDTH ? var2 + GuiNewChat.func_96128_a(var5) + "px" : var5 == 0.0F ? var2 + I18n.func_135053_a("options.off") : var2 + (int) (var5 * 100.0F) + "%";
 		} else if(par1EnumOptions.getEnumBoolean())
 		{
 			boolean var4 = getOptionOrdinalValue(par1EnumOptions);
-			return var4 ? var3 + var2.translateKey("options.on") : var3 + var2.translateKey("options.off");
-		} else return par1EnumOptions == EnumOptions.RENDER_DISTANCE ? var3 + getTranslation(RENDER_DISTANCES, renderDistance) : par1EnumOptions == EnumOptions.DIFFICULTY ? var3 + getTranslation(DIFFICULTIES, difficulty) : par1EnumOptions == EnumOptions.GUI_SCALE ? var3 + getTranslation(GUISCALES, guiScale) : par1EnumOptions == EnumOptions.CHAT_VISIBILITY ? var3 + getTranslation(CHAT_VISIBILITIES, chatVisibility) : par1EnumOptions == EnumOptions.PARTICLES ? var3 + getTranslation(PARTICLES, particleSetting) : par1EnumOptions == EnumOptions.FRAMERATE_LIMIT ? var3 + getTranslation(LIMIT_FRAMERATES, limitFramerate) : par1EnumOptions == EnumOptions.AMBIENT_OCCLUSION ? var3 + getTranslation(AMBIENT_OCCLUSIONS, ambientOcclusion) : par1EnumOptions == EnumOptions.GRAPHICS ? fancyGraphics ? var3 + var2.translateKey("options.graphics.fancy") : var3 + var2.translateKey("options.graphics.fast") : var3;
+			return var4 ? var2 + I18n.func_135053_a("options.on") : var2 + I18n.func_135053_a("options.off");
+		} else if(par1EnumOptions == EnumOptions.RENDER_DISTANCE) return var2 + getTranslation(RENDER_DISTANCES, renderDistance);
+		else if(par1EnumOptions == EnumOptions.DIFFICULTY) return var2 + getTranslation(DIFFICULTIES, difficulty);
+		else if(par1EnumOptions == EnumOptions.GUI_SCALE) return var2 + getTranslation(GUISCALES, guiScale);
+		else if(par1EnumOptions == EnumOptions.CHAT_VISIBILITY) return var2 + getTranslation(CHAT_VISIBILITIES, chatVisibility);
+		else if(par1EnumOptions == EnumOptions.PARTICLES) return var2 + getTranslation(PARTICLES, particleSetting);
+		else if(par1EnumOptions == EnumOptions.FRAMERATE_LIMIT) return var2 + getTranslation(LIMIT_FRAMERATES, limitFramerate);
+		else if(par1EnumOptions == EnumOptions.AMBIENT_OCCLUSION) return var2 + getTranslation(AMBIENT_OCCLUSIONS, ambientOcclusion);
+		else if(par1EnumOptions == EnumOptions.GRAPHICS)
+		{
+			if(fancyGraphics) return var2 + I18n.func_135053_a("options.graphics.fancy");
+			else
+			{
+				String var3 = "options.graphics.fast";
+				return var2 + I18n.func_135053_a("options.graphics.fast");
+			}
+		} else return var2;
 	}
 	
 	public String getKeyBindingDescription(int par1)
 	{
-		StringTranslate var2 = StringTranslate.getInstance();
-		return var2.translateKey(keyBindings[par1].keyDescription);
+		return I18n.func_135053_a(keyBindings[par1].keyDescription);
 	}
 	
 	public String getOptionDisplayString(int par1)
@@ -298,7 +289,7 @@
 					}
 					if(var3[0].equals("lastServer") && var3.length >= 2)
 					{
-						lastServer = var3[1];
+						lastServer = var2.substring(var2.indexOf(58) + 1);
 					}
 					if(var3[0].equals("lang") && var3.length >= 2)
 					{
@@ -572,7 +563,7 @@
 		if(par1EnumOptions == EnumOptions.ANAGLYPH)
 		{
 			anaglyph = !anaglyph;
-			mc.renderEngine.refreshTextures();
+			mc.func_110436_a();
 		}
 		if(par1EnumOptions == EnumOptions.FRAMERATE_LIMIT)
 		{
@@ -647,7 +638,7 @@
 	
 	public static String getKeyDisplayString(int par0)
 	{
-		return par0 < 0 ? StatCollector.translateToLocalFormatted("key.mouseButton", new Object[] { Integer.valueOf(par0 + 101) }) : Keyboard.getKeyName(par0);
+		return par0 < 0 ? I18n.func_135052_a("key.mouseButton", new Object[] { Integer.valueOf(par0 + 101) }) : Keyboard.getKeyName(par0);
 	}
 	
 	private static String getTranslation(String[] par0ArrayOfStr, int par1)
@@ -656,8 +647,7 @@
 		{
 			par1 = 0;
 		}
-		StringTranslate var2 = StringTranslate.getInstance();
-		return var2.translateKey(par0ArrayOfStr[par1]);
+		return I18n.func_135053_a(par0ArrayOfStr[par1]);
 	}
 	
 	public static boolean isKeyDown(KeyBinding par0KeyBinding)
diff --git a/RMCClient/minecraft/net/minecraft/src/GameWindowListener.java b/RMCClient/minecraft/net/minecraft/src/GameWindowListener.java
deleted file mode 100644
index 3094c73..0000000
--- a/RMCClient/minecraft/net/minecraft/src/GameWindowListener.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package net.minecraft.src;
-
-import java.awt.event.WindowAdapter;
-import java.awt.event.WindowEvent;
-
-public final class GameWindowListener extends WindowAdapter
-{
-	@Override public void windowClosing(WindowEvent par1WindowEvent)
-	{
-		System.err.println("Someone is closing me!");
-		System.exit(1);
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayer.java b/RMCClient/minecraft/net/minecraft/src/GenLayer.java
index 2dc4553..63544d4 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayer.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayer.java
@@ -7,15 +7,15 @@
 	private long chunkSeed;
 	private long baseSeed;
 	
-	public GenLayer(long par1)
+	public GenLayer(long p_i2125_1_)
 	{
-		baseSeed = par1;
+		baseSeed = p_i2125_1_;
 		baseSeed *= baseSeed * 6364136223846793005L + 1442695040888963407L;
-		baseSeed += par1;
+		baseSeed += p_i2125_1_;
 		baseSeed *= baseSeed * 6364136223846793005L + 1442695040888963407L;
-		baseSeed += par1;
+		baseSeed += p_i2125_1_;
 		baseSeed *= baseSeed * 6364136223846793005L + 1442695040888963407L;
-		baseSeed += par1;
+		baseSeed += p_i2125_1_;
 	}
 	
 	public abstract int[] getInts(int var1, int var2, int var3, int var4);
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerAddIsland.java b/RMCClient/minecraft/net/minecraft/src/GenLayerAddIsland.java
index 37dfd16..3a2d871 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerAddIsland.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerAddIsland.java
@@ -2,10 +2,10 @@
 
 public class GenLayerAddIsland extends GenLayer
 {
-	public GenLayerAddIsland(long par1, GenLayer par3GenLayer)
+	public GenLayerAddIsland(long p_i2119_1_, GenLayer p_i2119_3_)
 	{
-		super(par1);
-		parent = par3GenLayer;
+		super(p_i2119_1_);
+		parent = p_i2119_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerAddMushroomIsland.java b/RMCClient/minecraft/net/minecraft/src/GenLayerAddMushroomIsland.java
index 197492c..a92e89e 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerAddMushroomIsland.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerAddMushroomIsland.java
@@ -2,10 +2,10 @@
 
 public class GenLayerAddMushroomIsland extends GenLayer
 {
-	public GenLayerAddMushroomIsland(long par1, GenLayer par3GenLayer)
+	public GenLayerAddMushroomIsland(long p_i2120_1_, GenLayer p_i2120_3_)
 	{
-		super(par1);
-		parent = par3GenLayer;
+		super(p_i2120_1_);
+		parent = p_i2120_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerAddSnow.java b/RMCClient/minecraft/net/minecraft/src/GenLayerAddSnow.java
index ead0eca..729c23c 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerAddSnow.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerAddSnow.java
@@ -2,10 +2,10 @@
 
 public class GenLayerAddSnow extends GenLayer
 {
-	public GenLayerAddSnow(long par1, GenLayer par3GenLayer)
+	public GenLayerAddSnow(long p_i2121_1_, GenLayer p_i2121_3_)
 	{
-		super(par1);
-		parent = par3GenLayer;
+		super(p_i2121_1_);
+		parent = p_i2121_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerBiome.java b/RMCClient/minecraft/net/minecraft/src/GenLayerBiome.java
index cc83cea..3a2f826 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerBiome.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerBiome.java
@@ -4,12 +4,12 @@
 {
 	private BiomeGenBase[] allowedBiomes;
 	
-	public GenLayerBiome(long par1, GenLayer par3GenLayer, WorldType par4WorldType)
+	public GenLayerBiome(long p_i2122_1_, GenLayer p_i2122_3_, WorldType p_i2122_4_)
 	{
-		super(par1);
+		super(p_i2122_1_);
 		allowedBiomes = new BiomeGenBase[] { BiomeGenBase.desert, BiomeGenBase.forest, BiomeGenBase.extremeHills, BiomeGenBase.swampland, BiomeGenBase.plains, BiomeGenBase.taiga, BiomeGenBase.jungle };
-		parent = par3GenLayer;
-		if(par4WorldType == WorldType.DEFAULT_1_1)
+		parent = p_i2122_3_;
+		if(p_i2122_4_ == WorldType.DEFAULT_1_1)
 		{
 			allowedBiomes = new BiomeGenBase[] { BiomeGenBase.desert, BiomeGenBase.forest, BiomeGenBase.extremeHills, BiomeGenBase.swampland, BiomeGenBase.plains, BiomeGenBase.taiga };
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerFuzzyZoom.java b/RMCClient/minecraft/net/minecraft/src/GenLayerFuzzyZoom.java
index eebd053..186b874 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerFuzzyZoom.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerFuzzyZoom.java
@@ -2,10 +2,10 @@
 
 public class GenLayerFuzzyZoom extends GenLayer
 {
-	public GenLayerFuzzyZoom(long par1, GenLayer par3GenLayer)
+	public GenLayerFuzzyZoom(long p_i2123_1_, GenLayer p_i2123_3_)
 	{
-		super(par1);
-		super.parent = par3GenLayer;
+		super(p_i2123_1_);
+		super.parent = p_i2123_3_;
 	}
 	
 	protected int choose(int par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerHills.java b/RMCClient/minecraft/net/minecraft/src/GenLayerHills.java
index 49ea1db..78a1b7d 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerHills.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerHills.java
@@ -2,10 +2,10 @@
 
 public class GenLayerHills extends GenLayer
 {
-	public GenLayerHills(long par1, GenLayer par3GenLayer)
+	public GenLayerHills(long p_i2126_1_, GenLayer p_i2126_3_)
 	{
-		super(par1);
-		parent = par3GenLayer;
+		super(p_i2126_1_);
+		parent = p_i2126_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerIsland.java b/RMCClient/minecraft/net/minecraft/src/GenLayerIsland.java
index 091a443..959cdc4 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerIsland.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerIsland.java
@@ -2,9 +2,9 @@
 
 public class GenLayerIsland extends GenLayer
 {
-	public GenLayerIsland(long par1)
+	public GenLayerIsland(long p_i2124_1_)
 	{
-		super(par1);
+		super(p_i2124_1_);
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerRiver.java b/RMCClient/minecraft/net/minecraft/src/GenLayerRiver.java
index e54c900..ffd26d7 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerRiver.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerRiver.java
@@ -2,10 +2,10 @@
 
 public class GenLayerRiver extends GenLayer
 {
-	public GenLayerRiver(long par1, GenLayer par3GenLayer)
+	public GenLayerRiver(long p_i2128_1_, GenLayer p_i2128_3_)
 	{
-		super(par1);
-		super.parent = par3GenLayer;
+		super(p_i2128_1_);
+		super.parent = p_i2128_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerRiverInit.java b/RMCClient/minecraft/net/minecraft/src/GenLayerRiverInit.java
index a6e4457..edb478f 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerRiverInit.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerRiverInit.java
@@ -2,10 +2,10 @@
 
 public class GenLayerRiverInit extends GenLayer
 {
-	public GenLayerRiverInit(long par1, GenLayer par3GenLayer)
+	public GenLayerRiverInit(long p_i2127_1_, GenLayer p_i2127_3_)
 	{
-		super(par1);
-		parent = par3GenLayer;
+		super(p_i2127_1_);
+		parent = p_i2127_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerRiverMix.java b/RMCClient/minecraft/net/minecraft/src/GenLayerRiverMix.java
index 43f8482..5e3fb34 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerRiverMix.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerRiverMix.java
@@ -5,11 +5,11 @@
 	private GenLayer biomePatternGeneratorChain;
 	private GenLayer riverPatternGeneratorChain;
 	
-	public GenLayerRiverMix(long par1, GenLayer par3GenLayer, GenLayer par4GenLayer)
+	public GenLayerRiverMix(long p_i2129_1_, GenLayer p_i2129_3_, GenLayer p_i2129_4_)
 	{
-		super(par1);
-		biomePatternGeneratorChain = par3GenLayer;
-		riverPatternGeneratorChain = par4GenLayer;
+		super(p_i2129_1_);
+		biomePatternGeneratorChain = p_i2129_3_;
+		riverPatternGeneratorChain = p_i2129_4_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerShore.java b/RMCClient/minecraft/net/minecraft/src/GenLayerShore.java
index 6983796..159aa59 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerShore.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerShore.java
@@ -2,10 +2,10 @@
 
 public class GenLayerShore extends GenLayer
 {
-	public GenLayerShore(long par1, GenLayer par3GenLayer)
+	public GenLayerShore(long p_i2130_1_, GenLayer p_i2130_3_)
 	{
-		super(par1);
-		parent = par3GenLayer;
+		super(p_i2130_1_);
+		parent = p_i2130_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerSmooth.java b/RMCClient/minecraft/net/minecraft/src/GenLayerSmooth.java
index 68182d5..b0c5ec2 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerSmooth.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerSmooth.java
@@ -2,10 +2,10 @@
 
 public class GenLayerSmooth extends GenLayer
 {
-	public GenLayerSmooth(long par1, GenLayer par3GenLayer)
+	public GenLayerSmooth(long p_i2131_1_, GenLayer p_i2131_3_)
 	{
-		super(par1);
-		super.parent = par3GenLayer;
+		super(p_i2131_1_);
+		super.parent = p_i2131_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerSwampRivers.java b/RMCClient/minecraft/net/minecraft/src/GenLayerSwampRivers.java
index 7651aa8..38c1277 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerSwampRivers.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerSwampRivers.java
@@ -2,10 +2,10 @@
 
 public class GenLayerSwampRivers extends GenLayer
 {
-	public GenLayerSwampRivers(long par1, GenLayer par3GenLayer)
+	public GenLayerSwampRivers(long p_i2132_1_, GenLayer p_i2132_3_)
 	{
-		super(par1);
-		parent = par3GenLayer;
+		super(p_i2132_1_);
+		parent = p_i2132_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerVoronoiZoom.java b/RMCClient/minecraft/net/minecraft/src/GenLayerVoronoiZoom.java
index 531b935..3d3b41f 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerVoronoiZoom.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerVoronoiZoom.java
@@ -2,10 +2,10 @@
 
 public class GenLayerVoronoiZoom extends GenLayer
 {
-	public GenLayerVoronoiZoom(long par1, GenLayer par3GenLayer)
+	public GenLayerVoronoiZoom(long p_i2133_1_, GenLayer p_i2133_3_)
 	{
-		super(par1);
-		super.parent = par3GenLayer;
+		super(p_i2133_1_);
+		super.parent = p_i2133_3_;
 	}
 	
 	@Override public int[] getInts(int par1, int par2, int par3, int par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GenLayerZoom.java b/RMCClient/minecraft/net/minecraft/src/GenLayerZoom.java
index 9d73c05..e04820d 100644
--- a/RMCClient/minecraft/net/minecraft/src/GenLayerZoom.java
+++ b/RMCClient/minecraft/net/minecraft/src/GenLayerZoom.java
@@ -2,10 +2,10 @@
 
 public class GenLayerZoom extends GenLayer
 {
-	public GenLayerZoom(long par1, GenLayer par3GenLayer)
+	public GenLayerZoom(long p_i2134_1_, GenLayer p_i2134_3_)
 	{
-		super(par1);
-		super.parent = par3GenLayer;
+		super(p_i2134_1_);
+		super.parent = p_i2134_3_;
 	}
 	
 	protected int choose(int par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/GrassColorReloadListener.java b/RMCClient/minecraft/net/minecraft/src/GrassColorReloadListener.java
new file mode 100644
index 0000000..2d2a596
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GrassColorReloadListener.java
@@ -0,0 +1,19 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+
+public class GrassColorReloadListener implements ResourceManagerReloadListener
+{
+	private static final ResourceLocation field_130078_a = new ResourceLocation("textures/colormap/grass.png");
+	
+	@Override public void func_110549_a(ResourceManager p_110549_1_)
+	{
+		try
+		{
+			ColorizerGrass.setGrassBiomeColorizer(TextureUtil.func_110986_a(p_110549_1_, field_130078_a));
+		} catch(IOException var3)
+		{
+			;
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Gui.java b/RMCClient/minecraft/net/minecraft/src/Gui.java
index 8850d43..0b3a020 100644
--- a/RMCClient/minecraft/net/minecraft/src/Gui.java
+++ b/RMCClient/minecraft/net/minecraft/src/Gui.java
@@ -4,7 +4,10 @@
 
 public class Gui
 {
-	protected float zLevel = 0.0F;
+	public static final ResourceLocation field_110325_k = new ResourceLocation("textures/gui/options_background.png");
+	public static final ResourceLocation field_110323_l = new ResourceLocation("textures/gui/container/stats_icons.png");
+	public static final ResourceLocation field_110324_m = new ResourceLocation("textures/gui/icons.png");
+	protected float zLevel;
 	
 	public void drawCenteredString(FontRenderer par1FontRenderer, String par2Str, int par3, int par4, int par5)
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiAchievement.java b/RMCClient/minecraft/net/minecraft/src/GuiAchievement.java
index 60e7ff6..eae1d52 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiAchievement.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiAchievement.java
@@ -7,6 +7,7 @@
 
 public class GuiAchievement extends Gui
 {
+	private static final ResourceLocation field_110331_a = new ResourceLocation("textures/gui/achievement/achievement_background.png");
 	private Minecraft theGame;
 	private int achievementWindowWidth;
 	private int achievementWindowHeight;
@@ -17,15 +18,15 @@
 	private RenderItem itemRender;
 	private boolean haveAchiement;
 	
-	public GuiAchievement(Minecraft par1Minecraft)
+	public GuiAchievement(Minecraft p_i1063_1_)
 	{
-		theGame = par1Minecraft;
+		theGame = p_i1063_1_;
 		itemRender = new RenderItem();
 	}
 	
 	public void queueAchievementInformation(Achievement par1Achievement)
 	{
-		achievementGetLocalText = StatCollector.translateToLocal(par1Achievement.getName());
+		achievementGetLocalText = I18n.func_135053_a(par1Achievement.getName());
 		achievementStatName = par1Achievement.getDescription();
 		achievementTime = Minecraft.getSystemTime() - 2500L;
 		theAchievement = par1Achievement;
@@ -34,8 +35,8 @@
 	
 	public void queueTakenAchievement(Achievement par1Achievement)
 	{
-		achievementGetLocalText = StatCollector.translateToLocal("achievement.get");
-		achievementStatName = StatCollector.translateToLocal(par1Achievement.getName());
+		achievementGetLocalText = I18n.func_135053_a("achievement.get");
+		achievementStatName = I18n.func_135053_a(par1Achievement.getName());
 		achievementTime = Minecraft.getSystemTime();
 		theAchievement = par1Achievement;
 		haveAchiement = false;
@@ -71,7 +72,7 @@
 				int var6 = 0 - (int) (var3 * 36.0D);
 				GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 				GL11.glEnable(GL11.GL_TEXTURE_2D);
-				theGame.renderEngine.bindTexture("/achievement/bg.png");
+				theGame.func_110434_K().func_110577_a(field_110331_a);
 				GL11.glDisable(GL11.GL_LIGHTING);
 				drawTexturedModalRect(var5, var6, 96, 202, 160, 32);
 				if(haveAchiement)
@@ -87,7 +88,7 @@
 				GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 				GL11.glEnable(GL11.GL_COLOR_MATERIAL);
 				GL11.glEnable(GL11.GL_LIGHTING);
-				itemRender.renderItemAndEffectIntoGUI(theGame.fontRenderer, theGame.renderEngine, theAchievement.theItemStack, var5 + 8, var6 + 8);
+				itemRender.renderItemAndEffectIntoGUI(theGame.fontRenderer, theGame.func_110434_K(), theAchievement.theItemStack, var5 + 8, var6 + 8);
 				GL11.glDisable(GL11.GL_LIGHTING);
 				GL11.glDepthMask(true);
 				GL11.glEnable(GL11.GL_DEPTH_TEST);
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiAchievements.java b/RMCClient/minecraft/net/minecraft/src/GuiAchievements.java
index 011a10f..3de68d0 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiAchievements.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiAchievements.java
@@ -14,22 +14,23 @@
 	private static final int guiMapLeft = AchievementList.minDisplayRow * 24 - 112;
 	private static final int guiMapBottom = AchievementList.maxDisplayColumn * 24 - 77;
 	private static final int guiMapRight = AchievementList.maxDisplayRow * 24 - 77;
+	private static final ResourceLocation field_110406_y = new ResourceLocation("textures/gui/achievement/achievement_background.png");
 	protected int achievementsPaneWidth = 256;
 	protected int achievementsPaneHeight = 202;
-	protected int mouseX = 0;
-	protected int mouseY = 0;
+	protected int mouseX;
+	protected int mouseY;
 	protected double field_74117_m;
 	protected double field_74115_n;
 	protected double guiMapX;
 	protected double guiMapY;
 	protected double field_74124_q;
 	protected double field_74123_r;
-	private int isMouseButtonDown = 0;
+	private int isMouseButtonDown;
 	private StatFileWriter statFileWriter;
 	
-	public GuiAchievements(StatFileWriter par1StatFileWriter)
+	public GuiAchievements(StatFileWriter p_i1064_1_)
 	{
-		statFileWriter = par1StatFileWriter;
+		statFileWriter = p_i1064_1_;
 		short var2 = 141;
 		short var3 = 141;
 		field_74117_m = guiMapX = field_74124_q = AchievementList.openInventory.displayColumn * 24 - var2 / 2 - 12;
@@ -142,11 +143,15 @@
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 		GL11.glEnable(GL11.GL_COLOR_MATERIAL);
-		mc.renderEngine.bindTexture("/terrain.png");
 		int var10 = var4 + 288 >> 4;
 		int var11 = var5 + 288 >> 4;
 		int var12 = (var4 + 288) % 16;
 		int var13 = (var5 + 288) % 16;
+		boolean var14 = true;
+		boolean var15 = true;
+		boolean var16 = true;
+		boolean var17 = true;
+		boolean var18 = true;
 		Random var19 = new Random();
 		int var20;
 		int var23;
@@ -189,6 +194,7 @@
 				{
 					var24 = Block.bedrock.getIcon(0, 0);
 				}
+				mc.func_110434_K().func_110577_a(TextureMap.field_110575_b);
 				drawTexturedModelRectFromIcon(var8 + var22 * 16 - var12, var9 + var20 * 16 - var13, var24, 16, 16);
 			}
 		}
@@ -251,7 +257,7 @@
 					var38 = 0.3F;
 					GL11.glColor4f(var38, var38, var38, 1.0F);
 				}
-				mc.renderEngine.bindTexture("/achievement/bg.png");
+				mc.func_110434_K().func_110577_a(field_110406_y);
 				var40 = var8 + var41;
 				var39 = var9 + var25;
 				if(var34.getSpecial())
@@ -269,7 +275,7 @@
 				}
 				GL11.glEnable(GL11.GL_LIGHTING);
 				GL11.glEnable(GL11.GL_CULL_FACE);
-				var32.renderItemAndEffectIntoGUI(mc.fontRenderer, mc.renderEngine, var34.theItemStack, var40 + 3, var39 + 3);
+				var32.renderItemAndEffectIntoGUI(mc.fontRenderer, mc.func_110434_K(), var34.theItemStack, var40 + 3, var39 + 3);
 				GL11.glDisable(GL11.GL_LIGHTING);
 				if(!statFileWriter.canUnlockAchievement(var34))
 				{
@@ -285,7 +291,7 @@
 		GL11.glDisable(GL11.GL_DEPTH_TEST);
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/achievement/bg.png");
+		mc.func_110434_K().func_110577_a(field_110406_y);
 		drawTexturedModalRect(var6, var7, 0, 0, achievementsPaneWidth, achievementsPaneHeight);
 		GL11.glPopMatrix();
 		zLevel = 0.0F;
@@ -295,7 +301,7 @@
 		super.drawScreen(par1, par2, par3);
 		if(var30 != null)
 		{
-			String var33 = StatCollector.translateToLocal(var30.getName());
+			String var33 = I18n.func_135053_a(var30.getName());
 			String var35 = var30.getDescription();
 			var41 = par1 + 12;
 			var25 = par2 - 4;
@@ -311,12 +317,12 @@
 				fontRenderer.drawSplitString(var35, var41, var25 + 12, var40, -6250336);
 				if(statFileWriter.hasAchievementUnlocked(var30))
 				{
-					fontRenderer.drawStringWithShadow(StatCollector.translateToLocal("achievement.taken"), var41, var25 + var39 + 4, -7302913);
+					fontRenderer.drawStringWithShadow(I18n.func_135053_a("achievement.taken"), var41, var25 + var39 + 4, -7302913);
 				}
 			} else
 			{
 				var40 = Math.max(fontRenderer.getStringWidth(var33), 120);
-				String var36 = StatCollector.translateToLocalFormatted("achievement.requires", new Object[] { StatCollector.translateToLocal(var30.parentAchievement.getName()) });
+				String var36 = I18n.func_135052_a("achievement.requires", new Object[] { I18n.func_135053_a(var30.parentAchievement.getName()) });
 				var28 = fontRenderer.splitStringWidth(var36, var40);
 				drawGradientRect(var41 - 3, var25 - 3, var41 + var40 + 3, var25 + var28 + 12 + 3, -1073741824, -1073741824);
 				fontRenderer.drawSplitString(var36, var41, var25 + 12, var40, -9416624);
@@ -331,7 +337,7 @@
 	@Override public void initGui()
 	{
 		buttonList.clear();
-		buttonList.add(new GuiSmallButton(1, width / 2 + 24, height / 2 + 74, 80, 20, StatCollector.translateToLocal("gui.done")));
+		buttonList.add(new GuiSmallButton(1, width / 2 + 24, height / 2 + 74, 80, 20, I18n.func_135053_a("gui.done")));
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiBeacon.java b/RMCClient/minecraft/net/minecraft/src/GuiBeacon.java
index 95f02d0..b6157bd 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiBeacon.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiBeacon.java
@@ -8,14 +8,15 @@
 
 public class GuiBeacon extends GuiContainer
 {
+	private static final ResourceLocation field_110428_t = new ResourceLocation("textures/gui/container/beacon.png");
 	private TileEntityBeacon beacon;
 	private GuiBeaconButtonConfirm beaconConfirmButton;
 	private boolean buttonsNotDrawn;
 	
-	public GuiBeacon(InventoryPlayer par1, TileEntityBeacon par2)
+	public GuiBeacon(InventoryPlayer p_i1078_1_, TileEntityBeacon p_i1078_2_)
 	{
-		super(new ContainerBeacon(par1, par2));
-		beacon = par2;
+		super(new ContainerBeacon(p_i1078_1_, p_i1078_2_));
+		beacon = p_i1078_2_;
 		xSize = 230;
 		ySize = 219;
 	}
@@ -62,23 +63,23 @@
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/beacon.png");
+		mc.func_110434_K().func_110577_a(field_110428_t);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
 		itemRenderer.zLevel = 100.0F;
-		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, new ItemStack(Item.emerald), var4 + 42, var5 + 109);
-		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, new ItemStack(Item.diamond), var4 + 42 + 22, var5 + 109);
-		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, new ItemStack(Item.ingotGold), var4 + 42 + 44, var5 + 109);
-		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, new ItemStack(Item.ingotIron), var4 + 42 + 66, var5 + 109);
+		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), new ItemStack(Item.emerald), var4 + 42, var5 + 109);
+		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), new ItemStack(Item.diamond), var4 + 42 + 22, var5 + 109);
+		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), new ItemStack(Item.ingotGold), var4 + 42 + 44, var5 + 109);
+		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), new ItemStack(Item.ingotIron), var4 + 42 + 66, var5 + 109);
 		itemRenderer.zLevel = 0.0F;
 	}
 	
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
 		RenderHelper.disableStandardItemLighting();
-		drawCenteredString(fontRenderer, StatCollector.translateToLocal("tile.beacon.primary"), 62, 10, 14737632);
-		drawCenteredString(fontRenderer, StatCollector.translateToLocal("tile.beacon.secondary"), 169, 10, 14737632);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("tile.beacon.primary"), 62, 10, 14737632);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("tile.beacon.secondary"), 169, 10, 14737632);
 		Iterator var3 = buttonList.iterator();
 		while(var3.hasNext())
 		{
@@ -161,4 +162,9 @@
 		}
 		beaconConfirmButton.enabled = beacon.getStackInSlot(0) != null && beacon.getPrimaryEffect() > 0;
 	}
+	
+	static ResourceLocation func_110427_g()
+	{
+		return field_110428_t;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiBeaconButton.java b/RMCClient/minecraft/net/minecraft/src/GuiBeaconButton.java
index 1bfb2f5..04e7fd9 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiBeaconButton.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiBeaconButton.java
@@ -6,24 +6,24 @@
 
 class GuiBeaconButton extends GuiButton
 {
-	private final String buttonTexture;
+	private final ResourceLocation buttonTexture;
 	private final int field_82257_l;
 	private final int field_82258_m;
 	private boolean field_82256_n;
 	
-	protected GuiBeaconButton(int par1, int par2, int par3, String par4Str, int par5, int par6)
+	protected GuiBeaconButton(int p_i1077_1_, int p_i1077_2_, int p_i1077_3_, ResourceLocation p_i1077_4_, int p_i1077_5_, int p_i1077_6_)
 	{
-		super(par1, par2, par3, 22, 22, "");
-		buttonTexture = par4Str;
-		field_82257_l = par5;
-		field_82258_m = par6;
+		super(p_i1077_1_, p_i1077_2_, p_i1077_3_, 22, 22, "");
+		buttonTexture = p_i1077_4_;
+		field_82257_l = p_i1077_5_;
+		field_82258_m = p_i1077_6_;
 	}
 	
 	@Override public void drawButton(Minecraft par1Minecraft, int par2, int par3)
 	{
 		if(drawButton)
 		{
-			par1Minecraft.renderEngine.bindTexture("/gui/beacon.png");
+			par1Minecraft.func_110434_K().func_110577_a(GuiBeacon.func_110427_g());
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 			field_82253_i = par2 >= xPosition && par3 >= yPosition && par2 < xPosition + width && par3 < yPosition + height;
 			short var4 = 219;
@@ -39,9 +39,9 @@
 				var5 += width * 3;
 			}
 			drawTexturedModalRect(xPosition, yPosition, var5, var4, width, height);
-			if(!"/gui/beacon.png".equals(buttonTexture))
+			if(!GuiBeacon.func_110427_g().equals(buttonTexture))
 			{
-				par1Minecraft.renderEngine.bindTexture(buttonTexture);
+				par1Minecraft.func_110434_K().func_110577_a(buttonTexture);
 			}
 			drawTexturedModalRect(xPosition + 2, yPosition + 2, field_82257_l, field_82258_m, 18, 18);
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonCancel.java b/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonCancel.java
index 32f3036..df0c0b8 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonCancel.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonCancel.java
@@ -4,14 +4,14 @@
 {
 	final GuiBeacon beaconGui;
 	
-	public GuiBeaconButtonCancel(GuiBeacon par1, int par2, int par3, int par4)
+	public GuiBeaconButtonCancel(GuiBeacon p_i1074_1_, int p_i1074_2_, int p_i1074_3_, int p_i1074_4_)
 	{
-		super(par2, par3, par4, "/gui/beacon.png", 112, 220);
-		beaconGui = par1;
+		super(p_i1074_2_, p_i1074_3_, p_i1074_4_, GuiBeacon.func_110427_g(), 112, 220);
+		beaconGui = p_i1074_1_;
 	}
 	
 	@Override public void func_82251_b(int par1, int par2)
 	{
-		beaconGui.drawCreativeTabHoveringText(StatCollector.translateToLocal("gui.cancel"), par1, par2);
+		beaconGui.drawCreativeTabHoveringText(I18n.func_135053_a("gui.cancel"), par1, par2);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonConfirm.java b/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonConfirm.java
index ca97455..c51baca 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonConfirm.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonConfirm.java
@@ -4,14 +4,14 @@
 {
 	final GuiBeacon beaconGui;
 	
-	public GuiBeaconButtonConfirm(GuiBeacon par1, int par2, int par3, int par4)
+	public GuiBeaconButtonConfirm(GuiBeacon p_i1075_1_, int p_i1075_2_, int p_i1075_3_, int p_i1075_4_)
 	{
-		super(par2, par3, par4, "/gui/beacon.png", 90, 220);
-		beaconGui = par1;
+		super(p_i1075_2_, p_i1075_3_, p_i1075_4_, GuiBeacon.func_110427_g(), 90, 220);
+		beaconGui = p_i1075_1_;
 	}
 	
 	@Override public void func_82251_b(int par1, int par2)
 	{
-		beaconGui.drawCreativeTabHoveringText(StatCollector.translateToLocal("gui.done"), par1, par2);
+		beaconGui.drawCreativeTabHoveringText(I18n.func_135053_a("gui.done"), par1, par2);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonPower.java b/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonPower.java
index 31e1ea2..b73331d 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonPower.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiBeaconButtonPower.java
@@ -6,17 +6,17 @@
 	private final int field_82262_m;
 	final GuiBeacon beaconGui;
 	
-	public GuiBeaconButtonPower(GuiBeacon par1GuiBeacon, int par2, int par3, int par4, int par5, int par6)
+	public GuiBeaconButtonPower(GuiBeacon p_i1076_1_, int p_i1076_2_, int p_i1076_3_, int p_i1076_4_, int p_i1076_5_, int p_i1076_6_)
 	{
-		super(par2, par3, par4, "/gui/inventory.png", 0 + Potion.potionTypes[par5].getStatusIconIndex() % 8 * 18, 198 + Potion.potionTypes[par5].getStatusIconIndex() / 8 * 18);
-		beaconGui = par1GuiBeacon;
-		field_82261_l = par5;
-		field_82262_m = par6;
+		super(p_i1076_2_, p_i1076_3_, p_i1076_4_, GuiContainer.field_110408_a, 0 + Potion.potionTypes[p_i1076_5_].getStatusIconIndex() % 8 * 18, 198 + Potion.potionTypes[p_i1076_5_].getStatusIconIndex() / 8 * 18);
+		beaconGui = p_i1076_1_;
+		field_82261_l = p_i1076_5_;
+		field_82262_m = p_i1076_6_;
 	}
 	
 	@Override public void func_82251_b(int par1, int par2)
 	{
-		String var3 = StatCollector.translateToLocal(Potion.potionTypes[field_82261_l].getName());
+		String var3 = I18n.func_135053_a(Potion.potionTypes[field_82261_l].getName());
 		if(field_82262_m >= 3 && field_82261_l != Potion.regeneration.id)
 		{
 			var3 = var3 + " II";
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiBrewingStand.java b/RMCClient/minecraft/net/minecraft/src/GuiBrewingStand.java
index 7ffb82e..bbc5c70 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiBrewingStand.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiBrewingStand.java
@@ -4,18 +4,19 @@
 
 public class GuiBrewingStand extends GuiContainer
 {
+	private static final ResourceLocation field_110420_t = new ResourceLocation("textures/gui/container/brewing_stand.png");
 	private TileEntityBrewingStand brewingStand;
 	
-	public GuiBrewingStand(InventoryPlayer par1InventoryPlayer, TileEntityBrewingStand par2TileEntityBrewingStand)
+	public GuiBrewingStand(InventoryPlayer p_i1081_1_, TileEntityBrewingStand p_i1081_2_)
 	{
-		super(new ContainerBrewingStand(par1InventoryPlayer, par2TileEntityBrewingStand));
-		brewingStand = par2TileEntityBrewingStand;
+		super(new ContainerBrewingStand(p_i1081_1_, p_i1081_2_));
+		brewingStand = p_i1081_2_;
 	}
 	
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/alchemy.png");
+		mc.func_110434_K().func_110577_a(field_110420_t);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
@@ -60,8 +61,8 @@
 	
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
-		String var3 = brewingStand.isInvNameLocalized() ? brewingStand.getInvName() : StatCollector.translateToLocal(brewingStand.getInvName());
+		String var3 = brewingStand.isInvNameLocalized() ? brewingStand.getInvName() : I18n.func_135053_a(brewingStand.getInvName());
 		fontRenderer.drawString(var3, xSize / 2 - fontRenderer.getStringWidth(var3) / 2, 6, 4210752);
-		fontRenderer.drawString(StatCollector.translateToLocal("container.inventory"), 8, ySize - 96 + 2, 4210752);
+		fontRenderer.drawString(I18n.func_135053_a("container.inventory"), 8, ySize - 96 + 2, 4210752);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiButton.java b/RMCClient/minecraft/net/minecraft/src/GuiButton.java
index a591931..ed2de04 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiButton.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiButton.java
@@ -6,6 +6,7 @@
 
 public class GuiButton extends Gui
 {
+	protected static final ResourceLocation field_110332_a = new ResourceLocation("textures/gui/widgets.png");
 	protected int width;
 	protected int height;
 	public int xPosition;
@@ -16,23 +17,23 @@
 	public boolean drawButton;
 	protected boolean field_82253_i;
 	
-	public GuiButton(int par1, int par2, int par3, int par4, int par5, String par6Str)
+	public GuiButton(int p_i1021_1_, int p_i1021_2_, int p_i1021_3_, int p_i1021_4_, int p_i1021_5_, String p_i1021_6_)
 	{
 		width = 200;
 		height = 20;
 		enabled = true;
 		drawButton = true;
-		id = par1;
-		xPosition = par2;
-		yPosition = par3;
-		width = par4;
-		height = par5;
-		displayString = par6Str;
+		id = p_i1021_1_;
+		xPosition = p_i1021_2_;
+		yPosition = p_i1021_3_;
+		width = p_i1021_4_;
+		height = p_i1021_5_;
+		displayString = p_i1021_6_;
 	}
 	
-	public GuiButton(int par1, int par2, int par3, String par4Str)
+	public GuiButton(int p_i1020_1_, int p_i1020_2_, int p_i1020_3_, String p_i1020_4_)
 	{
-		this(par1, par2, par3, 200, 20, par4Str);
+		this(p_i1020_1_, p_i1020_2_, p_i1020_3_, 200, 20, p_i1020_4_);
 	}
 	
 	public void drawButton(Minecraft par1Minecraft, int par2, int par3)
@@ -40,7 +41,7 @@
 		if(drawButton)
 		{
 			FontRenderer var4 = par1Minecraft.fontRenderer;
-			par1Minecraft.renderEngine.bindTexture("/gui/gui.png");
+			par1Minecraft.func_110434_K().func_110577_a(field_110332_a);
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 			field_82253_i = par2 >= xPosition && par3 >= yPosition && par2 < xPosition + width && par3 < yPosition + height;
 			int var5 = getHoverState(field_82253_i);
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiButtonLanguage.java b/RMCClient/minecraft/net/minecraft/src/GuiButtonLanguage.java
index 4163aba..5f8eb8f 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiButtonLanguage.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiButtonLanguage.java
@@ -6,16 +6,16 @@
 
 public class GuiButtonLanguage extends GuiButton
 {
-	public GuiButtonLanguage(int par1, int par2, int par3)
+	public GuiButtonLanguage(int p_i1041_1_, int p_i1041_2_, int p_i1041_3_)
 	{
-		super(par1, par2, par3, 20, 20, "");
+		super(p_i1041_1_, p_i1041_2_, p_i1041_3_, 20, 20, "");
 	}
 	
 	@Override public void drawButton(Minecraft par1Minecraft, int par2, int par3)
 	{
 		if(drawButton)
 		{
-			par1Minecraft.renderEngine.bindTexture("/gui/gui.png");
+			par1Minecraft.func_110434_K().func_110577_a(GuiButton.field_110332_a);
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 			boolean var4 = par2 >= xPosition && par3 >= yPosition && par2 < xPosition + width && par3 < yPosition + height;
 			int var5 = 106;
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiButtonLink.java b/RMCClient/minecraft/net/minecraft/src/GuiButtonLink.java
index def9353..21aaaf8 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiButtonLink.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiButtonLink.java
@@ -4,9 +4,9 @@
 
 public class GuiButtonLink extends GuiButton
 {
-	public GuiButtonLink(int par1, int par2, int par3, int par4, int par5, String par6Str)
+	public GuiButtonLink(int p_i1044_1_, int p_i1044_2_, int p_i1044_3_, int p_i1044_4_, int p_i1044_5_, String p_i1044_6_)
 	{
-		super(par1, par2, par3, par4, par5, par6Str);
+		super(p_i1044_1_, p_i1044_2_, p_i1044_3_, p_i1044_4_, p_i1044_5_, p_i1044_6_);
 	}
 	
 	public void func_96135_a(String par1Str)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiButtonMerchant.java b/RMCClient/minecraft/net/minecraft/src/GuiButtonMerchant.java
index 6edfeda..c481820 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiButtonMerchant.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiButtonMerchant.java
@@ -8,17 +8,17 @@
 {
 	private final boolean mirrored;
 	
-	public GuiButtonMerchant(int par1, int par2, int par3, boolean par4)
+	public GuiButtonMerchant(int p_i1095_1_, int p_i1095_2_, int p_i1095_3_, boolean p_i1095_4_)
 	{
-		super(par1, par2, par3, 12, 19, "");
-		mirrored = par4;
+		super(p_i1095_1_, p_i1095_2_, p_i1095_3_, 12, 19, "");
+		mirrored = p_i1095_4_;
 	}
 	
 	@Override public void drawButton(Minecraft par1Minecraft, int par2, int par3)
 	{
 		if(drawButton)
 		{
-			par1Minecraft.renderEngine.bindTexture("/gui/trading.png");
+			par1Minecraft.func_110434_K().func_110577_a(GuiMerchant.func_110417_h());
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 			boolean var4 = par2 >= xPosition && par3 >= yPosition && par2 < xPosition + width && par3 < yPosition + height;
 			int var5 = 0;
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiButtonNextPage.java b/RMCClient/minecraft/net/minecraft/src/GuiButtonNextPage.java
index 2488beb..e247fbb 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiButtonNextPage.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiButtonNextPage.java
@@ -8,10 +8,10 @@
 {
 	private final boolean nextPage;
 	
-	public GuiButtonNextPage(int par1, int par2, int par3, boolean par4)
+	public GuiButtonNextPage(int p_i1079_1_, int p_i1079_2_, int p_i1079_3_, boolean p_i1079_4_)
 	{
-		super(par1, par2, par3, 23, 13, "");
-		nextPage = par4;
+		super(p_i1079_1_, p_i1079_2_, p_i1079_3_, 23, 13, "");
+		nextPage = p_i1079_4_;
 	}
 	
 	@Override public void drawButton(Minecraft par1Minecraft, int par2, int par3)
@@ -20,7 +20,7 @@
 		{
 			boolean var4 = par2 >= xPosition && par3 >= yPosition && par2 < xPosition + width && par3 < yPosition + height;
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-			par1Minecraft.renderEngine.bindTexture("/gui/book.png");
+			par1Minecraft.func_110434_K().func_110577_a(GuiScreenBook.func_110404_g());
 			int var5 = 0;
 			int var6 = 192;
 			if(var4)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiChat.java b/RMCClient/minecraft/net/minecraft/src/GuiChat.java
index 5de9f8a..8061ab6 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiChat.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiChat.java
@@ -12,11 +12,11 @@
 {
 	private String field_73898_b = "";
 	private int sentHistoryCursor = -1;
-	private boolean field_73897_d = false;
-	private boolean field_73905_m = false;
-	private int field_73903_n = 0;
+	private boolean field_73897_d;
+	private boolean field_73905_m;
+	private int field_73903_n;
 	private List field_73904_o = new ArrayList();
-	private URI clickedURI = null;
+	private URI clickedURI;
 	protected GuiTextField inputField;
 	private String defaultInputFieldText = "";
 	
@@ -24,9 +24,9 @@
 	{
 	}
 	
-	public GuiChat(String par1Str)
+	public GuiChat(String p_i1024_1_)
 	{
-		defaultInputFieldText = par1Str;
+		defaultInputFieldText = p_i1024_1_;
 	}
 	
 	public void completePlayerName()
@@ -214,7 +214,25 @@
 		if(par2 == 1)
 		{
 			mc.displayGuiScreen((GuiScreen) null);
-		} else if(par2 == 28)
+		} else if(par2 != 28 && par2 != 156)
+		{
+			if(par2 == 200)
+			{
+				getSentHistory(-1);
+			} else if(par2 == 208)
+			{
+				getSentHistory(1);
+			} else if(par2 == 201)
+			{
+				mc.ingameGUI.getChatGUI().scroll(mc.ingameGUI.getChatGUI().func_96127_i() - 1);
+			} else if(par2 == 209)
+			{
+				mc.ingameGUI.getChatGUI().scroll(-mc.ingameGUI.getChatGUI().func_96127_i() + 1);
+			} else
+			{
+				inputField.textboxKeyTyped(par1, par2);
+			}
+		} else
 		{
 			String var3 = inputField.getText().trim();
 			if(var3.length() > 0)
@@ -226,21 +244,6 @@
 				}
 			}
 			mc.displayGuiScreen((GuiScreen) null);
-		} else if(par2 == 200)
-		{
-			getSentHistory(-1);
-		} else if(par2 == 208)
-		{
-			getSentHistory(1);
-		} else if(par2 == 201)
-		{
-			mc.ingameGUI.getChatGUI().scroll(mc.ingameGUI.getChatGUI().func_96127_i() - 1);
-		} else if(par2 == 209)
-		{
-			mc.ingameGUI.getChatGUI().scroll(-mc.ingameGUI.getChatGUI().func_96127_i() + 1);
-		} else
-		{
-			inputField.textboxKeyTyped(par1, par2);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiChest.java b/RMCClient/minecraft/net/minecraft/src/GuiChest.java
index 1de1efd..232c43e 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiChest.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiChest.java
@@ -4,26 +4,27 @@
 
 public class GuiChest extends GuiContainer
 {
+	private static final ResourceLocation field_110421_t = new ResourceLocation("textures/gui/container/generic_54.png");
 	private IInventory upperChestInventory;
 	private IInventory lowerChestInventory;
-	private int inventoryRows = 0;
+	private int inventoryRows;
 	
-	public GuiChest(IInventory par1IInventory, IInventory par2IInventory)
+	public GuiChest(IInventory p_i1083_1_, IInventory p_i1083_2_)
 	{
-		super(new ContainerChest(par1IInventory, par2IInventory));
-		upperChestInventory = par1IInventory;
-		lowerChestInventory = par2IInventory;
+		super(new ContainerChest(p_i1083_1_, p_i1083_2_));
+		upperChestInventory = p_i1083_1_;
+		lowerChestInventory = p_i1083_2_;
 		allowUserInput = false;
 		short var3 = 222;
 		int var4 = var3 - 108;
-		inventoryRows = par2IInventory.getSizeInventory() / 9;
+		inventoryRows = p_i1083_2_.getSizeInventory() / 9;
 		ySize = var4 + inventoryRows * 18;
 	}
 	
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/container.png");
+		mc.func_110434_K().func_110577_a(field_110421_t);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, inventoryRows * 18 + 17);
@@ -32,7 +33,7 @@
 	
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
-		fontRenderer.drawString(lowerChestInventory.isInvNameLocalized() ? lowerChestInventory.getInvName() : StatCollector.translateToLocal(lowerChestInventory.getInvName()), 8, 6, 4210752);
-		fontRenderer.drawString(upperChestInventory.isInvNameLocalized() ? upperChestInventory.getInvName() : StatCollector.translateToLocal(upperChestInventory.getInvName()), 8, ySize - 96 + 2, 4210752);
+		fontRenderer.drawString(lowerChestInventory.isInvNameLocalized() ? lowerChestInventory.getInvName() : I18n.func_135053_a(lowerChestInventory.getInvName()), 8, 6, 4210752);
+		fontRenderer.drawString(upperChestInventory.isInvNameLocalized() ? upperChestInventory.getInvName() : I18n.func_135053_a(upperChestInventory.getInvName()), 8, ySize - 96 + 2, 4210752);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiCommandBlock.java b/RMCClient/minecraft/net/minecraft/src/GuiCommandBlock.java
index 31489d8..c5d609e 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiCommandBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiCommandBlock.java
@@ -12,9 +12,9 @@
 	private GuiButton doneBtn;
 	private GuiButton cancelBtn;
 	
-	public GuiCommandBlock(TileEntityCommandBlock par1)
+	public GuiCommandBlock(TileEntityCommandBlock p_i1082_1_)
 	{
-		commandBlock = par1;
+		commandBlock = p_i1082_1_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -47,24 +47,22 @@
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey("advMode.setCommand"), width / 2, height / 4 - 60 + 20, 16777215);
-		drawString(fontRenderer, var4.translateKey("advMode.command"), width / 2 - 150, 47, 10526880);
-		drawString(fontRenderer, var4.translateKey("advMode.nearestPlayer"), width / 2 - 150, 97, 10526880);
-		drawString(fontRenderer, var4.translateKey("advMode.randomPlayer"), width / 2 - 150, 108, 10526880);
-		drawString(fontRenderer, var4.translateKey("advMode.allPlayers"), width / 2 - 150, 119, 10526880);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("advMode.setCommand"), width / 2, 20, 16777215);
+		drawString(fontRenderer, I18n.func_135053_a("advMode.command"), width / 2 - 150, 47, 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("advMode.nearestPlayer"), width / 2 - 150, 97, 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("advMode.randomPlayer"), width / 2 - 150, 108, 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("advMode.allPlayers"), width / 2 - 150, 119, 10526880);
 		commandTextField.drawTextBox();
 		super.drawScreen(par1, par2, par3);
 	}
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		buttonList.add(doneBtn = new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, var1.translateKey("gui.done")));
-		buttonList.add(cancelBtn = new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.cancel")));
+		buttonList.add(doneBtn = new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, I18n.func_135053_a("gui.done")));
+		buttonList.add(cancelBtn = new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, I18n.func_135053_a("gui.cancel")));
 		commandTextField = new GuiTextField(fontRenderer, width / 2 - 150, 60, 300, 20);
 		commandTextField.setMaxStringLength(32767);
 		commandTextField.setFocused(true);
@@ -76,7 +74,7 @@
 	{
 		commandTextField.textboxKeyTyped(par1, par2);
 		doneBtn.enabled = commandTextField.getText().trim().length() > 0;
-		if(par2 != 28 && par1 != 13)
+		if(par2 != 28 && par2 != 156)
 		{
 			if(par2 == 1)
 			{
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiConfirmOpenLink.java b/RMCClient/minecraft/net/minecraft/src/GuiConfirmOpenLink.java
index ae4b7a7..2f9141f 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiConfirmOpenLink.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiConfirmOpenLink.java
@@ -7,15 +7,14 @@
 	private String field_92028_p;
 	private boolean field_92027_q = true;
 	
-	public GuiConfirmOpenLink(GuiScreen par1GuiScreen, String par2Str, int par3, boolean par4)
+	public GuiConfirmOpenLink(GuiScreen p_i1179_1_, String p_i1179_2_, int p_i1179_3_, boolean p_i1179_4_)
 	{
-		super(par1GuiScreen, StringTranslate.getInstance().translateKey(par4 ? "chat.link.confirmTrusted" : "chat.link.confirm"), par2Str, par3);
-		StringTranslate var5 = StringTranslate.getInstance();
-		buttonText1 = var5.translateKey(par4 ? "chat.link.open" : "gui.yes");
-		buttonText2 = var5.translateKey(par4 ? "gui.cancel" : "gui.no");
-		copyLinkButtonText = var5.translateKey("chat.copy");
-		openLinkWarning = var5.translateKey("chat.link.warning");
-		field_92028_p = par2Str;
+		super(p_i1179_1_, I18n.func_135053_a(p_i1179_4_ ? "chat.link.confirmTrusted" : "chat.link.confirm"), p_i1179_2_, p_i1179_3_);
+		buttonText1 = I18n.func_135053_a(p_i1179_4_ ? "chat.link.open" : "gui.yes");
+		buttonText2 = I18n.func_135053_a(p_i1179_4_ ? "gui.cancel" : "gui.no");
+		copyLinkButtonText = I18n.func_135053_a("chat.copy");
+		openLinkWarning = I18n.func_135053_a("chat.link.warning");
+		field_92028_p = p_i1179_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiConnecting.java b/RMCClient/minecraft/net/minecraft/src/GuiConnecting.java
index 707fa52..ec7046a 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiConnecting.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiConnecting.java
@@ -5,25 +5,25 @@
 public class GuiConnecting extends GuiScreen
 {
 	private NetClientHandler clientHandler;
-	private boolean cancelled = false;
+	private boolean cancelled;
 	private final GuiScreen field_98098_c;
 	
-	public GuiConnecting(GuiScreen par1GuiScreen, Minecraft par2Minecraft, ServerData par3ServerData)
+	public GuiConnecting(GuiScreen p_i1181_1_, Minecraft p_i1181_2_, ServerData p_i1181_3_)
 	{
-		mc = par2Minecraft;
-		field_98098_c = par1GuiScreen;
-		ServerAddress var4 = ServerAddress.func_78860_a(par3ServerData.serverIP);
-		par2Minecraft.loadWorld((WorldClient) null);
-		par2Minecraft.setServerData(par3ServerData);
+		mc = p_i1181_2_;
+		field_98098_c = p_i1181_1_;
+		ServerAddress var4 = ServerAddress.func_78860_a(p_i1181_3_.serverIP);
+		p_i1181_2_.loadWorld((WorldClient) null);
+		p_i1181_2_.setServerData(p_i1181_3_);
 		spawnNewServerThread(var4.getIP(), var4.getPort());
 	}
 	
-	public GuiConnecting(GuiScreen par1GuiScreen, Minecraft par2Minecraft, String par3Str, int par4)
+	public GuiConnecting(GuiScreen p_i1182_1_, Minecraft p_i1182_2_, String p_i1182_3_, int p_i1182_4_)
 	{
-		mc = par2Minecraft;
-		field_98098_c = par1GuiScreen;
-		par2Minecraft.loadWorld((WorldClient) null);
-		spawnNewServerThread(par3Str, par4);
+		mc = p_i1182_2_;
+		field_98098_c = p_i1182_1_;
+		p_i1182_2_.loadWorld((WorldClient) null);
+		spawnNewServerThread(p_i1182_3_, p_i1182_4_);
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -42,14 +42,13 @@
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
 		drawDefaultBackground();
-		StringTranslate var4 = StringTranslate.getInstance();
 		if(clientHandler == null)
 		{
-			drawCenteredString(fontRenderer, var4.translateKey("connect.connecting"), width / 2, height / 2 - 50, 16777215);
+			drawCenteredString(fontRenderer, I18n.func_135053_a("connect.connecting"), width / 2, height / 2 - 50, 16777215);
 			drawCenteredString(fontRenderer, "", width / 2, height / 2 - 10, 16777215);
 		} else
 		{
-			drawCenteredString(fontRenderer, var4.translateKey("connect.authorizing"), width / 2, height / 2 - 50, 16777215);
+			drawCenteredString(fontRenderer, I18n.func_135053_a("connect.authorizing"), width / 2, height / 2 - 50, 16777215);
 			drawCenteredString(fontRenderer, clientHandler.field_72560_a, width / 2, height / 2 - 10, 16777215);
 		}
 		super.drawScreen(par1, par2, par3);
@@ -57,9 +56,8 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		buttonList.clear();
-		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.cancel")));
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120 + 12, I18n.func_135053_a("gui.cancel")));
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiContainer.java b/RMCClient/minecraft/net/minecraft/src/GuiContainer.java
index 53d76da..075564a 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiContainer.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiContainer.java
@@ -14,6 +14,7 @@
 
 public abstract class GuiContainer extends GuiScreen
 {
+	protected static final ResourceLocation field_110408_a = new ResourceLocation("textures/gui/container/inventory.png");
 	protected static RenderItem itemRenderer = new RenderItem();
 	protected int xSize = 176;
 	protected int ySize = 166;
@@ -21,31 +22,31 @@
 	protected int guiLeft;
 	protected int guiTop;
 	private Slot theSlot;
-	private Slot clickedSlot = null;
-	private boolean isRightMouseClick = false;
-	private ItemStack draggedStack = null;
-	private int field_85049_r = 0;
-	private int field_85048_s = 0;
-	private Slot returningStackDestSlot = null;
-	private long returningStackTime = 0L;
-	private ItemStack returningStack = null;
-	private Slot field_92033_y = null;
-	private long field_92032_z = 0L;
+	private Slot clickedSlot;
+	private boolean isRightMouseClick;
+	private ItemStack draggedStack;
+	private int field_85049_r;
+	private int field_85048_s;
+	private Slot returningStackDestSlot;
+	private long returningStackTime;
+	private ItemStack returningStack;
+	private Slot field_92033_y;
+	private long field_92032_z;
 	protected final Set field_94077_p = new HashSet();
 	protected boolean field_94076_q;
-	private int field_94071_C = 0;
-	private int field_94067_D = 0;
-	private boolean field_94068_E = false;
+	private int field_94071_C;
+	private int field_94067_D;
+	private boolean field_94068_E;
 	private int field_94069_F;
-	private long field_94070_G = 0L;
-	private Slot field_94072_H = null;
-	private int field_94073_I = 0;
+	private long field_94070_G;
+	private Slot field_94072_H;
+	private int field_94073_I;
 	private boolean field_94074_J;
-	private ItemStack field_94075_K = null;
+	private ItemStack field_94075_K;
 	
-	public GuiContainer(Container par1Container)
+	public GuiContainer(Container p_i1072_1_)
 	{
-		inventorySlots = par1Container;
+		inventorySlots = p_i1072_1_;
 		field_94068_E = true;
 	}
 	
@@ -86,8 +87,8 @@
 		GL11.glTranslatef(0.0F, 0.0F, 32.0F);
 		zLevel = 200.0F;
 		itemRenderer.zLevel = 200.0F;
-		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, par1ItemStack, par2, par3);
-		itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.renderEngine, par1ItemStack, par2, par3 - (draggedStack == null ? 0 : 8), par4Str);
+		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), par1ItemStack, par2, par3);
+		itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.func_110434_K(), par1ItemStack, par2, par3 - (draggedStack == null ? 0 : 8), par4Str);
 		zLevel = 0.0F;
 		itemRenderer.zLevel = 0.0F;
 	}
@@ -134,7 +135,7 @@
 		{
 			Slot var14 = (Slot) inventorySlots.inventorySlots.get(var13);
 			drawSlotInventory(var14);
-			if(isMouseOverSlot(var14, par1, par2))
+			if(isMouseOverSlot(var14, par1, par2) && var14.func_111238_b())
 			{
 				theSlot = var14;
 				GL11.glDisable(GL11.GL_LIGHTING);
@@ -239,7 +240,7 @@
 			if(var9 != null)
 			{
 				GL11.glDisable(GL11.GL_LIGHTING);
-				mc.renderEngine.bindTexture("/gui/items.png");
+				mc.func_110434_K().func_110577_a(TextureMap.field_110576_c);
 				drawTexturedModelRectFromIcon(var2, var3, var9, 16, 16);
 				GL11.glEnable(GL11.GL_LIGHTING);
 				var6 = true;
@@ -252,8 +253,8 @@
 				drawRect(var2, var3, var2 + 16, var3 + 16, -2130706433);
 			}
 			GL11.glEnable(GL11.GL_DEPTH_TEST);
-			itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, var4, var2, var3);
-			itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.renderEngine, var4, var2, var3, var8);
+			itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), var4, var2, var3);
+			itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.func_110434_K(), var4, var2, var3, var8);
 		}
 		itemRenderer.zLevel = 0.0F;
 		zLevel = 0.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiContainerCreative.java b/RMCClient/minecraft/net/minecraft/src/GuiContainerCreative.java
index ff56312..1426091 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiContainerCreative.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiContainerCreative.java
@@ -3,6 +3,7 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Map;
 
 import org.lwjgl.input.Keyboard;
 import org.lwjgl.input.Mouse;
@@ -11,23 +12,24 @@
 
 public class GuiContainerCreative extends InventoryEffectRenderer
 {
+	private static final ResourceLocation field_110424_t = new ResourceLocation("textures/gui/container/creative_inventory/tabs.png");
 	private static InventoryBasic inventory = new InventoryBasic("tmp", true, 45);
 	private static int selectedTabIndex = CreativeTabs.tabBlock.getTabIndex();
-	private float currentScroll = 0.0F;
-	private boolean isScrolling = false;
+	private float currentScroll;
+	private boolean isScrolling;
 	private boolean wasClicking;
 	private GuiTextField searchField;
 	private List backupContainerSlots;
-	private Slot field_74235_v = null;
-	private boolean field_74234_w = false;
+	private Slot field_74235_v;
+	private boolean field_74234_w;
 	private CreativeCrafting field_82324_x;
 	
-	public GuiContainerCreative(EntityPlayer par1EntityPlayer)
+	public GuiContainerCreative(EntityPlayer p_i1088_1_)
 	{
-		super(new ContainerCreative(par1EntityPlayer));
-		par1EntityPlayer.openContainer = inventorySlots;
+		super(new ContainerCreative(p_i1088_1_));
+		p_i1088_1_.openContainer = inventorySlots;
 		allowUserInput = true;
-		par1EntityPlayer.addStat(AchievementList.openInventory, 1);
+		p_i1088_1_.addStat(AchievementList.openInventory, 1);
 		ySize = 136;
 		xSize = 195;
 	}
@@ -55,20 +57,20 @@
 		for(var7 = 0; var7 < var6; ++var7)
 		{
 			CreativeTabs var8 = var5[var7];
-			mc.renderEngine.bindTexture("/gui/allitems.png");
+			mc.func_110434_K().func_110577_a(field_110424_t);
 			if(var8.getTabIndex() != selectedTabIndex)
 			{
 				renderCreativeTab(var8);
 			}
 		}
-		mc.renderEngine.bindTexture("/gui/creative_inv/" + var4.getBackgroundImageName());
+		mc.func_110434_K().func_110577_a(new ResourceLocation("textures/gui/container/creative_inventory/tab_" + var4.getBackgroundImageName()));
 		drawTexturedModalRect(guiLeft, guiTop, 0, 0, xSize, ySize);
 		searchField.drawTextBox();
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		int var9 = guiLeft + 175;
 		var6 = guiTop + 18;
 		var7 = var6 + 112;
-		mc.renderEngine.bindTexture("/gui/allitems.png");
+		mc.func_110434_K().func_110577_a(field_110424_t);
 		if(var4.shouldHidePlayerInventory())
 		{
 			drawTexturedModalRect(var9, var6 + (int) ((var7 - var6 - 17) * currentScroll), 232 + (needsScrollBars() ? 0 : 12), 0, 12, 15);
@@ -76,7 +78,7 @@
 		renderCreativeTab(var4);
 		if(var4 == CreativeTabs.tabInventory)
 		{
-			GuiInventory.drawPlayerOnGui(mc, guiLeft + 43, guiTop + 45, 20, guiLeft + 43 - par2, guiTop + 45 - 30 - par3);
+			GuiInventory.func_110423_a(guiLeft + 43, guiTop + 45, 20, guiLeft + 43 - par2, guiTop + 45 - 30 - par3, mc.thePlayer);
 		}
 	}
 	
@@ -85,7 +87,53 @@
 		CreativeTabs var3 = CreativeTabs.creativeTabArray[selectedTabIndex];
 		if(var3.drawInForegroundOfTab())
 		{
-			fontRenderer.drawString(var3.getTranslatedTabLabel(), 8, 6, 4210752);
+			fontRenderer.drawString(I18n.func_135053_a(var3.getTranslatedTabLabel()), 8, 6, 4210752);
+		}
+	}
+	
+	@Override protected void drawItemStackTooltip(ItemStack par1ItemStack, int par2, int par3)
+	{
+		if(selectedTabIndex == CreativeTabs.tabAllSearch.getTabIndex())
+		{
+			List var4 = par1ItemStack.getTooltip(mc.thePlayer, mc.gameSettings.advancedItemTooltips);
+			CreativeTabs var5 = par1ItemStack.getItem().getCreativeTab();
+			if(var5 == null && par1ItemStack.itemID == Item.enchantedBook.itemID)
+			{
+				Map var6 = EnchantmentHelper.getEnchantments(par1ItemStack);
+				if(var6.size() == 1)
+				{
+					Enchantment var7 = Enchantment.enchantmentsList[((Integer) var6.keySet().iterator().next()).intValue()];
+					CreativeTabs[] var8 = CreativeTabs.creativeTabArray;
+					int var9 = var8.length;
+					for(int var10 = 0; var10 < var9; ++var10)
+					{
+						CreativeTabs var11 = var8[var10];
+						if(var11.func_111226_a(var7.type))
+						{
+							var5 = var11;
+							break;
+						}
+					}
+				}
+			}
+			if(var5 != null)
+			{
+				var4.add(1, "" + EnumChatFormatting.BOLD + EnumChatFormatting.BLUE + I18n.func_135053_a(var5.getTranslatedTabLabel()));
+			}
+			for(int var12 = 0; var12 < var4.size(); ++var12)
+			{
+				if(var12 == 0)
+				{
+					var4.set(var12, "\u00a7" + Integer.toHexString(par1ItemStack.getRarity().rarityColor) + (String) var4.get(var12));
+				} else
+				{
+					var4.set(var12, EnumChatFormatting.GRAY + (String) var4.get(var12));
+				}
+			}
+			func_102021_a(var4, par2, par3);
+		} else
+		{
+			super.drawItemStackTooltip(par1ItemStack, par2, par3);
 		}
 	}
 	
@@ -133,7 +181,7 @@
 		}
 		if(field_74235_v != null && selectedTabIndex == CreativeTabs.tabInventory.getTabIndex() && isPointInRegion(field_74235_v.xDisplayPosition, field_74235_v.yDisplayPosition, 16, 16, par1, par2))
 		{
-			drawCreativeTabHoveringText(StringTranslate.getInstance().translateKey("inventory.binSlot"), par1, par2);
+			drawCreativeTabHoveringText(I18n.func_135053_a("inventory.binSlot"), par1, par2);
 		}
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		GL11.glDisable(GL11.GL_LIGHTING);
@@ -472,7 +520,7 @@
 		}
 		if(isPointInRegion(var5 + 3, var7 + 3, 23, 27, par2, par3))
 		{
-			drawCreativeTabHoveringText(par1CreativeTabs.getTranslatedTabLabel(), par2, par3);
+			drawCreativeTabHoveringText(I18n.func_135053_a(par1CreativeTabs.getTranslatedTabLabel()), par2, par3);
 			return true;
 		} else return false;
 	}
@@ -515,8 +563,8 @@
 		GL11.glEnable(GL11.GL_LIGHTING);
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 		ItemStack var10 = new ItemStack(par1CreativeTabs.getTabIconItem());
-		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, var10, var7, var8);
-		itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.renderEngine, var10, var7, var8);
+		itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), var10, var7, var8);
+		itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.func_110434_K(), var10, var7, var8);
 		GL11.glDisable(GL11.GL_LIGHTING);
 		itemRenderer.zLevel = 0.0F;
 		zLevel = 0.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiControls.java b/RMCClient/minecraft/net/minecraft/src/GuiControls.java
index 0bbc5e1..965d002 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiControls.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiControls.java
@@ -7,10 +7,10 @@
 	private GameSettings options;
 	private int buttonId = -1;
 	
-	public GuiControls(GuiScreen par1GuiScreen, GameSettings par2GameSettings)
+	public GuiControls(GuiScreen p_i1027_1_, GameSettings p_i1027_2_)
 	{
-		parentScreen = par1GuiScreen;
-		options = par2GameSettings;
+		parentScreen = p_i1027_1_;
+		options = p_i1027_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -75,14 +75,13 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		int var2 = getLeftBorder();
-		for(int var3 = 0; var3 < options.keyBindings.length; ++var3)
+		int var1 = getLeftBorder();
+		for(int var2 = 0; var2 < options.keyBindings.length; ++var2)
 		{
-			buttonList.add(new GuiSmallButton(var3, var2 + var3 % 2 * 160, height / 6 + 24 * (var3 >> 1), 70, 20, options.getOptionDisplayString(var3)));
+			buttonList.add(new GuiSmallButton(var2, var1 + var2 % 2 * 160, height / 6 + 24 * (var2 >> 1), 70, 20, options.getOptionDisplayString(var2)));
 		}
-		buttonList.add(new GuiButton(200, width / 2 - 100, height / 6 + 168, var1.translateKey("gui.done")));
-		screenTitle = var1.translateKey("controls.title");
+		buttonList.add(new GuiButton(200, width / 2 - 100, height / 6 + 168, I18n.func_135053_a("gui.done")));
+		screenTitle = I18n.func_135053_a("controls.title");
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiCrafting.java b/RMCClient/minecraft/net/minecraft/src/GuiCrafting.java
index 84dc615..b4037f2 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiCrafting.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiCrafting.java
@@ -4,15 +4,17 @@
 
 public class GuiCrafting extends GuiContainer
 {
-	public GuiCrafting(InventoryPlayer par1InventoryPlayer, World par2World, int par3, int par4, int par5)
+	private static final ResourceLocation field_110422_t = new ResourceLocation("textures/gui/container/crafting_table.png");
+	
+	public GuiCrafting(InventoryPlayer p_i1084_1_, World p_i1084_2_, int p_i1084_3_, int p_i1084_4_, int p_i1084_5_)
 	{
-		super(new ContainerWorkbench(par1InventoryPlayer, par2World, par3, par4, par5));
+		super(new ContainerWorkbench(p_i1084_1_, p_i1084_2_, p_i1084_3_, p_i1084_4_, p_i1084_5_));
 	}
 	
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/crafting.png");
+		mc.func_110434_K().func_110577_a(field_110422_t);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
@@ -20,7 +22,7 @@
 	
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
-		fontRenderer.drawString(StatCollector.translateToLocal("container.crafting"), 28, 6, 4210752);
-		fontRenderer.drawString(StatCollector.translateToLocal("container.inventory"), 8, ySize - 96 + 2, 4210752);
+		fontRenderer.drawString(I18n.func_135053_a("container.crafting"), 28, 6, 4210752);
+		fontRenderer.drawString(I18n.func_135053_a("container.inventory"), 8, ySize - 96 + 2, 4210752);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiCreateFlatWorld.java b/RMCClient/minecraft/net/minecraft/src/GuiCreateFlatWorld.java
index a1459a3..1371743 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiCreateFlatWorld.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiCreateFlatWorld.java
@@ -13,10 +13,10 @@
 	private GuiButton buttonEditLayer;
 	private GuiButton buttonRemoveLayer;
 	
-	public GuiCreateFlatWorld(GuiCreateWorld par1GuiCreateWorld, String par2Str)
+	public GuiCreateFlatWorld(GuiCreateWorld p_i1029_1_, String p_i1029_2_)
 	{
-		createWorldGui = par1GuiCreateWorld;
-		setFlatGeneratorInfo(par2Str);
+		createWorldGui = p_i1029_1_;
+		setFlatGeneratorInfo(p_i1029_2_);
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -74,16 +74,16 @@
 	@Override public void initGui()
 	{
 		buttonList.clear();
-		customizationTitle = StatCollector.translateToLocal("createWorld.customize.flat.title");
-		layerMaterialLabel = StatCollector.translateToLocal("createWorld.customize.flat.tile");
-		heightLabel = StatCollector.translateToLocal("createWorld.customize.flat.height");
+		customizationTitle = I18n.func_135053_a("createWorld.customize.flat.title");
+		layerMaterialLabel = I18n.func_135053_a("createWorld.customize.flat.tile");
+		heightLabel = I18n.func_135053_a("createWorld.customize.flat.height");
 		createFlatWorldListSlotGui = new GuiCreateFlatWorldListSlot(this);
-		buttonList.add(buttonAddLayer = new GuiButton(2, width / 2 - 154, height - 52, 100, 20, StatCollector.translateToLocal("createWorld.customize.flat.addLayer") + " (NYI)"));
-		buttonList.add(buttonEditLayer = new GuiButton(3, width / 2 - 50, height - 52, 100, 20, StatCollector.translateToLocal("createWorld.customize.flat.editLayer") + " (NYI)"));
-		buttonList.add(buttonRemoveLayer = new GuiButton(4, width / 2 - 155, height - 52, 150, 20, StatCollector.translateToLocal("createWorld.customize.flat.removeLayer")));
-		buttonList.add(new GuiButton(0, width / 2 - 155, height - 28, 150, 20, StatCollector.translateToLocal("gui.done")));
-		buttonList.add(new GuiButton(5, width / 2 + 5, height - 52, 150, 20, StatCollector.translateToLocal("createWorld.customize.presets")));
-		buttonList.add(new GuiButton(1, width / 2 + 5, height - 28, 150, 20, StatCollector.translateToLocal("gui.cancel")));
+		buttonList.add(buttonAddLayer = new GuiButton(2, width / 2 - 154, height - 52, 100, 20, I18n.func_135053_a("createWorld.customize.flat.addLayer") + " (NYI)"));
+		buttonList.add(buttonEditLayer = new GuiButton(3, width / 2 - 50, height - 52, 100, 20, I18n.func_135053_a("createWorld.customize.flat.editLayer") + " (NYI)"));
+		buttonList.add(buttonRemoveLayer = new GuiButton(4, width / 2 - 155, height - 52, 150, 20, I18n.func_135053_a("createWorld.customize.flat.removeLayer")));
+		buttonList.add(new GuiButton(0, width / 2 - 155, height - 28, 150, 20, I18n.func_135053_a("gui.done")));
+		buttonList.add(new GuiButton(5, width / 2 + 5, height - 52, 150, 20, I18n.func_135053_a("createWorld.customize.presets")));
+		buttonList.add(new GuiButton(1, width / 2 + 5, height - 28, 150, 20, I18n.func_135053_a("gui.cancel")));
 		buttonAddLayer.drawButton = buttonEditLayer.drawButton = false;
 		theFlatGeneratorInfo.func_82645_d();
 		func_82270_g();
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiCreateFlatWorldListSlot.java b/RMCClient/minecraft/net/minecraft/src/GuiCreateFlatWorldListSlot.java
index 078a5a7..30c0b36 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiCreateFlatWorldListSlot.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiCreateFlatWorldListSlot.java
@@ -8,10 +8,10 @@
 	public int field_82454_a;
 	final GuiCreateFlatWorld createFlatWorldGui;
 	
-	public GuiCreateFlatWorldListSlot(GuiCreateFlatWorld par1GuiCreateFlatWorld)
+	public GuiCreateFlatWorldListSlot(GuiCreateFlatWorld p_i1028_1_)
 	{
-		super(par1GuiCreateFlatWorld.mc, par1GuiCreateFlatWorld.width, par1GuiCreateFlatWorld.height, 43, par1GuiCreateFlatWorld.height - 60, 24);
-		createFlatWorldGui = par1GuiCreateFlatWorld;
+		super(p_i1028_1_.mc, p_i1028_1_.width, p_i1028_1_.height, 43, p_i1028_1_.height - 60, 24);
+		createFlatWorldGui = p_i1028_1_;
 		field_82454_a = -1;
 	}
 	
@@ -29,13 +29,13 @@
 		String var9;
 		if(par1 == 0)
 		{
-			var9 = StatCollector.translateToLocalFormatted("createWorld.customize.flat.layer.top", new Object[] { Integer.valueOf(var6.getLayerCount()) });
+			var9 = I18n.func_135052_a("createWorld.customize.flat.layer.top", new Object[] { Integer.valueOf(var6.getLayerCount()) });
 		} else if(par1 == GuiCreateFlatWorld.func_82271_a(createFlatWorldGui).getFlatLayers().size() - 1)
 		{
-			var9 = StatCollector.translateToLocalFormatted("createWorld.customize.flat.layer.bottom", new Object[] { Integer.valueOf(var6.getLayerCount()) });
+			var9 = I18n.func_135052_a("createWorld.customize.flat.layer.bottom", new Object[] { Integer.valueOf(var6.getLayerCount()) });
 		} else
 		{
-			var9 = StatCollector.translateToLocalFormatted("createWorld.customize.flat.layer", new Object[] { Integer.valueOf(var6.getLayerCount()) });
+			var9 = I18n.func_135052_a("createWorld.customize.flat.layer", new Object[] { Integer.valueOf(var6.getLayerCount()) });
 		}
 		createFlatWorldGui.fontRenderer.drawString(var9, par2 + 2 + 213 - createFlatWorldGui.fontRenderer.getStringWidth(var9), par3 + 3, 16777215);
 	}
@@ -49,7 +49,11 @@
 	private void func_82450_b(int par1, int par2, int par3, int par4)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		createFlatWorldGui.mc.renderEngine.bindTexture("/gui/slot.png");
+		createFlatWorldGui.mc.func_110434_K().func_110577_a(Gui.field_110323_l);
+		float var5 = 0.0078125F;
+		float var6 = 0.0078125F;
+		boolean var7 = true;
+		boolean var8 = true;
 		Tessellator var9 = Tessellator.instance;
 		var9.startDrawingQuads();
 		var9.addVertexWithUV(par1 + 0, par2 + 18, createFlatWorldGui.zLevel, (par3 + 0) * 0.0078125F, (par4 + 18) * 0.0078125F);
@@ -71,7 +75,7 @@
 		if(par3ItemStack != null)
 		{
 			RenderHelper.enableGUIStandardItemLighting();
-			GuiCreateFlatWorld.getRenderItem().renderItemIntoGUI(createFlatWorldGui.fontRenderer, createFlatWorldGui.mc.renderEngine, par3ItemStack, par1 + 2, par2 + 2);
+			GuiCreateFlatWorld.getRenderItem().renderItemIntoGUI(createFlatWorldGui.fontRenderer, createFlatWorldGui.mc.func_110434_K(), par3ItemStack, par1 + 2, par2 + 2);
 			RenderHelper.disableStandardItemLighting();
 		}
 		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiCreateWorld.java b/RMCClient/minecraft/net/minecraft/src/GuiCreateWorld.java
index 3c000dc..de964f7 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiCreateWorld.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiCreateWorld.java
@@ -12,10 +12,10 @@
 	private String folderName;
 	private String gameMode = "survival";
 	private boolean generateStructures = true;
-	private boolean commandsAllowed = false;
-	private boolean commandsToggled = false;
-	private boolean bonusItems = false;
-	private boolean isHardcore = false;
+	private boolean commandsAllowed;
+	private boolean commandsToggled;
+	private boolean bonusItems;
+	private boolean isHardcore;
 	private boolean createClicked;
 	private boolean moreOptions;
 	private GuiButton buttonGameMode;
@@ -29,15 +29,15 @@
 	private String gameModeDescriptionLine2;
 	private String seed;
 	private String localizedNewWorldText;
-	private int worldTypeId = 0;
+	private int worldTypeId;
 	public String generatorOptionsToUse = "";
 	private static final String[] ILLEGAL_WORLD_NAMES = new String[] { "CON", "COM", "PRN", "AUX", "CLOCK$", "NUL", "COM1", "COM2", "COM3", "COM4", "COM5", "COM6", "COM7", "COM8", "COM9", "LPT1", "LPT2", "LPT3", "LPT4", "LPT5", "LPT6", "LPT7", "LPT8", "LPT9" };
 	
-	public GuiCreateWorld(GuiScreen par1GuiScreen)
+	public GuiCreateWorld(GuiScreen p_i1030_1_)
 	{
-		parentGuiScreen = par1GuiScreen;
+		parentGuiScreen = p_i1030_1_;
 		seed = "";
-		localizedNewWorldText = StatCollector.translateToLocal("selectWorld.newWorld");
+		localizedNewWorldText = I18n.func_135053_a("selectWorld.newWorld");
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -80,6 +80,7 @@
 					var6.enableCommands();
 				}
 				mc.launchIntegratedServer(folderName, textboxWorldName.getText().trim(), var6);
+				mc.statFileWriter.readStat(StatList.createWorldStat, 1);
 			} else if(par1GuiButton.id == 3)
 			{
 				func_82287_i();
@@ -162,20 +163,19 @@
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey("selectWorld.create"), width / 2, 20, 16777215);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("selectWorld.create"), width / 2, 20, 16777215);
 		if(moreOptions)
 		{
-			drawString(fontRenderer, var4.translateKey("selectWorld.enterSeed"), width / 2 - 100, 47, 10526880);
-			drawString(fontRenderer, var4.translateKey("selectWorld.seedInfo"), width / 2 - 100, 85, 10526880);
-			drawString(fontRenderer, var4.translateKey("selectWorld.mapFeatures.info"), width / 2 - 150, 122, 10526880);
-			drawString(fontRenderer, var4.translateKey("selectWorld.allowCommands.info"), width / 2 - 150, 172, 10526880);
+			drawString(fontRenderer, I18n.func_135053_a("selectWorld.enterSeed"), width / 2 - 100, 47, 10526880);
+			drawString(fontRenderer, I18n.func_135053_a("selectWorld.seedInfo"), width / 2 - 100, 85, 10526880);
+			drawString(fontRenderer, I18n.func_135053_a("selectWorld.mapFeatures.info"), width / 2 - 150, 122, 10526880);
+			drawString(fontRenderer, I18n.func_135053_a("selectWorld.allowCommands.info"), width / 2 - 150, 172, 10526880);
 			textboxSeed.drawTextBox();
 		} else
 		{
-			drawString(fontRenderer, var4.translateKey("selectWorld.enterName"), width / 2 - 100, 47, 10526880);
-			drawString(fontRenderer, var4.translateKey("selectWorld.resultFolder") + " " + folderName, width / 2 - 100, 85, 10526880);
+			drawString(fontRenderer, I18n.func_135053_a("selectWorld.enterName"), width / 2 - 100, 47, 10526880);
+			drawString(fontRenderer, I18n.func_135053_a("selectWorld.resultFolder") + " " + folderName, width / 2 - 100, 85, 10526880);
 			textboxWorldName.drawTextBox();
 			drawString(fontRenderer, gameModeDescriptionLine1, width / 2 - 100, 137, 10526880);
 			drawString(fontRenderer, gameModeDescriptionLine2, width / 2 - 100, 149, 10526880);
@@ -185,7 +185,7 @@
 	
 	public void func_82286_a(WorldInfo par1WorldInfo)
 	{
-		localizedNewWorldText = StatCollector.translateToLocalFormatted("selectWorld.newWorld.copyOf", new Object[] { par1WorldInfo.getWorldName() });
+		localizedNewWorldText = I18n.func_135052_a("selectWorld.newWorld.copyOf", new Object[] { par1WorldInfo.getWorldName() });
 		seed = par1WorldInfo.getSeed() + "";
 		worldTypeId = par1WorldInfo.getTerrainType().getWorldTypeID();
 		generatorOptionsToUse = par1WorldInfo.getGeneratorOptions();
@@ -217,36 +217,32 @@
 		buttonWorldType.drawButton = moreOptions;
 		buttonAllowCommands.drawButton = moreOptions;
 		buttonCustomize.drawButton = moreOptions && WorldType.worldTypes[worldTypeId] == WorldType.FLAT;
-		StringTranslate var2;
 		if(moreOptions)
 		{
-			var2 = StringTranslate.getInstance();
-			moreWorldOptions.displayString = var2.translateKey("gui.done");
+			moreWorldOptions.displayString = I18n.func_135053_a("gui.done");
 		} else
 		{
-			var2 = StringTranslate.getInstance();
-			moreWorldOptions.displayString = var2.translateKey("selectWorld.moreWorldOptions");
+			moreWorldOptions.displayString = I18n.func_135053_a("selectWorld.moreWorldOptions");
 		}
 	}
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		buttonList.add(new GuiButton(0, width / 2 - 155, height - 28, 150, 20, var1.translateKey("selectWorld.create")));
-		buttonList.add(new GuiButton(1, width / 2 + 5, height - 28, 150, 20, var1.translateKey("gui.cancel")));
-		buttonList.add(buttonGameMode = new GuiButton(2, width / 2 - 75, 115, 150, 20, var1.translateKey("selectWorld.gameMode")));
-		buttonList.add(moreWorldOptions = new GuiButton(3, width / 2 - 75, 187, 150, 20, var1.translateKey("selectWorld.moreWorldOptions")));
-		buttonList.add(buttonGenerateStructures = new GuiButton(4, width / 2 - 155, 100, 150, 20, var1.translateKey("selectWorld.mapFeatures")));
+		buttonList.add(new GuiButton(0, width / 2 - 155, height - 28, 150, 20, I18n.func_135053_a("selectWorld.create")));
+		buttonList.add(new GuiButton(1, width / 2 + 5, height - 28, 150, 20, I18n.func_135053_a("gui.cancel")));
+		buttonList.add(buttonGameMode = new GuiButton(2, width / 2 - 75, 115, 150, 20, I18n.func_135053_a("selectWorld.gameMode")));
+		buttonList.add(moreWorldOptions = new GuiButton(3, width / 2 - 75, 187, 150, 20, I18n.func_135053_a("selectWorld.moreWorldOptions")));
+		buttonList.add(buttonGenerateStructures = new GuiButton(4, width / 2 - 155, 100, 150, 20, I18n.func_135053_a("selectWorld.mapFeatures")));
 		buttonGenerateStructures.drawButton = false;
-		buttonList.add(buttonBonusItems = new GuiButton(7, width / 2 + 5, 151, 150, 20, var1.translateKey("selectWorld.bonusItems")));
+		buttonList.add(buttonBonusItems = new GuiButton(7, width / 2 + 5, 151, 150, 20, I18n.func_135053_a("selectWorld.bonusItems")));
 		buttonBonusItems.drawButton = false;
-		buttonList.add(buttonWorldType = new GuiButton(5, width / 2 + 5, 100, 150, 20, var1.translateKey("selectWorld.mapType")));
+		buttonList.add(buttonWorldType = new GuiButton(5, width / 2 + 5, 100, 150, 20, I18n.func_135053_a("selectWorld.mapType")));
 		buttonWorldType.drawButton = false;
-		buttonList.add(buttonAllowCommands = new GuiButton(6, width / 2 - 155, 151, 150, 20, var1.translateKey("selectWorld.allowCommands")));
+		buttonList.add(buttonAllowCommands = new GuiButton(6, width / 2 - 155, 151, 150, 20, I18n.func_135053_a("selectWorld.allowCommands")));
 		buttonAllowCommands.drawButton = false;
-		buttonList.add(buttonCustomize = new GuiButton(8, width / 2 + 5, 120, 150, 20, var1.translateKey("selectWorld.customizeType")));
+		buttonList.add(buttonCustomize = new GuiButton(8, width / 2 + 5, 120, 150, 20, I18n.func_135053_a("selectWorld.customizeType")));
 		buttonCustomize.drawButton = false;
 		textboxWorldName = new GuiTextField(fontRenderer, width / 2 - 100, 60, 200, 20);
 		textboxWorldName.setFocused(true);
@@ -269,7 +265,7 @@
 			textboxSeed.textboxKeyTyped(par1, par2);
 			seed = textboxSeed.getText();
 		}
-		if(par1 == 13)
+		if(par2 == 28 || par2 == 156)
 		{
 			actionPerformed((GuiButton) buttonList.get(0));
 		}
@@ -313,34 +309,33 @@
 	
 	private void updateButtonText()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		buttonGameMode.displayString = var1.translateKey("selectWorld.gameMode") + " " + var1.translateKey("selectWorld.gameMode." + gameMode);
-		gameModeDescriptionLine1 = var1.translateKey("selectWorld.gameMode." + gameMode + ".line1");
-		gameModeDescriptionLine2 = var1.translateKey("selectWorld.gameMode." + gameMode + ".line2");
-		buttonGenerateStructures.displayString = var1.translateKey("selectWorld.mapFeatures") + " ";
+		buttonGameMode.displayString = I18n.func_135053_a("selectWorld.gameMode") + " " + I18n.func_135053_a("selectWorld.gameMode." + gameMode);
+		gameModeDescriptionLine1 = I18n.func_135053_a("selectWorld.gameMode." + gameMode + ".line1");
+		gameModeDescriptionLine2 = I18n.func_135053_a("selectWorld.gameMode." + gameMode + ".line2");
+		buttonGenerateStructures.displayString = I18n.func_135053_a("selectWorld.mapFeatures") + " ";
 		if(generateStructures)
 		{
-			buttonGenerateStructures.displayString = buttonGenerateStructures.displayString + var1.translateKey("options.on");
+			buttonGenerateStructures.displayString = buttonGenerateStructures.displayString + I18n.func_135053_a("options.on");
 		} else
 		{
-			buttonGenerateStructures.displayString = buttonGenerateStructures.displayString + var1.translateKey("options.off");
+			buttonGenerateStructures.displayString = buttonGenerateStructures.displayString + I18n.func_135053_a("options.off");
 		}
-		buttonBonusItems.displayString = var1.translateKey("selectWorld.bonusItems") + " ";
+		buttonBonusItems.displayString = I18n.func_135053_a("selectWorld.bonusItems") + " ";
 		if(bonusItems && !isHardcore)
 		{
-			buttonBonusItems.displayString = buttonBonusItems.displayString + var1.translateKey("options.on");
+			buttonBonusItems.displayString = buttonBonusItems.displayString + I18n.func_135053_a("options.on");
 		} else
 		{
-			buttonBonusItems.displayString = buttonBonusItems.displayString + var1.translateKey("options.off");
+			buttonBonusItems.displayString = buttonBonusItems.displayString + I18n.func_135053_a("options.off");
 		}
-		buttonWorldType.displayString = var1.translateKey("selectWorld.mapType") + " " + var1.translateKey(WorldType.worldTypes[worldTypeId].getTranslateName());
-		buttonAllowCommands.displayString = var1.translateKey("selectWorld.allowCommands") + " ";
+		buttonWorldType.displayString = I18n.func_135053_a("selectWorld.mapType") + " " + I18n.func_135053_a(WorldType.worldTypes[worldTypeId].getTranslateName());
+		buttonAllowCommands.displayString = I18n.func_135053_a("selectWorld.allowCommands") + " ";
 		if(commandsAllowed && !isHardcore)
 		{
-			buttonAllowCommands.displayString = buttonAllowCommands.displayString + var1.translateKey("options.on");
+			buttonAllowCommands.displayString = buttonAllowCommands.displayString + I18n.func_135053_a("options.on");
 		} else
 		{
-			buttonAllowCommands.displayString = buttonAllowCommands.displayString + var1.translateKey("options.off");
+			buttonAllowCommands.displayString = buttonAllowCommands.displayString + I18n.func_135053_a("options.off");
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiDisconnected.java b/RMCClient/minecraft/net/minecraft/src/GuiDisconnected.java
index 33fc503..5235322 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiDisconnected.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiDisconnected.java
@@ -11,13 +11,12 @@
 	private List field_74245_d;
 	private final GuiScreen field_98095_n;
 	
-	public GuiDisconnected(GuiScreen par1GuiScreen, String par2Str, String par3Str, Object ... par4ArrayOfObj)
+	public GuiDisconnected(GuiScreen p_i1183_1_, String p_i1183_2_, String p_i1183_3_, Object ... p_i1183_4_)
 	{
-		StringTranslate var5 = StringTranslate.getInstance();
-		field_98095_n = par1GuiScreen;
-		errorMessage = var5.translateKey(par2Str);
-		errorDetail = par3Str;
-		field_74247_c = par4ArrayOfObj;
+		field_98095_n = p_i1183_1_;
+		errorMessage = I18n.func_135053_a(p_i1183_2_);
+		errorDetail = p_i1183_3_;
+		field_74247_c = p_i1183_4_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -46,15 +45,14 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		buttonList.clear();
-		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.toMenu")));
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120 + 12, I18n.func_135053_a("gui.toMenu")));
 		if(field_74247_c != null)
 		{
-			field_74245_d = fontRenderer.listFormattedStringToWidth(var1.translateKeyFormat(errorDetail, field_74247_c), width - 50);
+			field_74245_d = fontRenderer.listFormattedStringToWidth(I18n.func_135052_a(errorDetail, field_74247_c), width - 50);
 		} else
 		{
-			field_74245_d = fontRenderer.listFormattedStringToWidth(var1.translateKey(errorDetail), width - 50);
+			field_74245_d = fontRenderer.listFormattedStringToWidth(I18n.func_135053_a(errorDetail), width - 50);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiDispenser.java b/RMCClient/minecraft/net/minecraft/src/GuiDispenser.java
index bdb7f07..a2efc57 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiDispenser.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiDispenser.java
@@ -4,18 +4,19 @@
 
 public class GuiDispenser extends GuiContainer
 {
+	private static final ResourceLocation field_110419_u = new ResourceLocation("textures/gui/container/dispenser.png");
 	public TileEntityDispenser field_94078_r;
 	
-	public GuiDispenser(InventoryPlayer par1InventoryPlayer, TileEntityDispenser par2TileEntityDispenser)
+	public GuiDispenser(InventoryPlayer p_i1098_1_, TileEntityDispenser p_i1098_2_)
 	{
-		super(new ContainerDispenser(par1InventoryPlayer, par2TileEntityDispenser));
-		field_94078_r = par2TileEntityDispenser;
+		super(new ContainerDispenser(p_i1098_1_, p_i1098_2_));
+		field_94078_r = p_i1098_2_;
 	}
 	
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/trap.png");
+		mc.func_110434_K().func_110577_a(field_110419_u);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
@@ -23,8 +24,8 @@
 	
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
-		String var3 = field_94078_r.isInvNameLocalized() ? field_94078_r.getInvName() : StatCollector.translateToLocal(field_94078_r.getInvName());
+		String var3 = field_94078_r.isInvNameLocalized() ? field_94078_r.getInvName() : I18n.func_135053_a(field_94078_r.getInvName());
 		fontRenderer.drawString(var3, xSize / 2 - fontRenderer.getStringWidth(var3) / 2, 6, 4210752);
-		fontRenderer.drawString(StatCollector.translateToLocal("container.inventory"), 8, ySize - 96 + 2, 4210752);
+		fontRenderer.drawString(I18n.func_135053_a("container.inventory"), 8, ySize - 96 + 2, 4210752);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiDownloadTerrain.java b/RMCClient/minecraft/net/minecraft/src/GuiDownloadTerrain.java
index 56a6cf4..fe30b62 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiDownloadTerrain.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiDownloadTerrain.java
@@ -3,18 +3,17 @@
 public class GuiDownloadTerrain extends GuiScreen
 {
 	private NetClientHandler netHandler;
-	private int updateCounter = 0;
+	private int updateCounter;
 	
-	public GuiDownloadTerrain(NetClientHandler par1NetClientHandler)
+	public GuiDownloadTerrain(NetClientHandler p_i1191_1_)
 	{
-		netHandler = par1NetClientHandler;
+		netHandler = p_i1191_1_;
 	}
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
 		drawBackground(0);
-		StringTranslate var4 = StringTranslate.getInstance();
-		drawCenteredString(fontRenderer, var4.translateKey("multiplayer.downloadingTerrain"), width / 2, height / 2 - 50, 16777215);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("multiplayer.downloadingTerrain"), width / 2, height / 2 - 50, 16777215);
 		super.drawScreen(par1, par2, par3);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiEditSign.java b/RMCClient/minecraft/net/minecraft/src/GuiEditSign.java
index 5bb89d0..57041dd 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiEditSign.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiEditSign.java
@@ -9,12 +9,12 @@
 	protected String screenTitle = "Edit sign message:";
 	private TileEntitySign entitySign;
 	private int updateCounter;
-	private int editLine = 0;
+	private int editLine;
 	private GuiButton doneBtn;
 	
-	public GuiEditSign(TileEntitySign par1TileEntitySign)
+	public GuiEditSign(TileEntitySign p_i1097_1_)
 	{
-		entitySign = par1TileEntitySign;
+		entitySign = p_i1097_1_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -87,7 +87,7 @@
 		{
 			editLine = editLine - 1 & 3;
 		}
-		if(par2 == 208 || par2 == 28)
+		if(par2 == 208 || par2 == 28 || par2 == 156)
 		{
 			editLine = editLine + 1 & 3;
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiEnchantment.java b/RMCClient/minecraft/net/minecraft/src/GuiEnchantment.java
index c5fbac1..6698e6f 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiEnchantment.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiEnchantment.java
@@ -4,11 +4,13 @@
 
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
-import org.lwjgl.util.glu.GLU;
+import org.lwjgl.util.glu.Project;
 
 public class GuiEnchantment extends GuiContainer
 {
-	private static ModelBook bookModel = new ModelBook();
+	private static final ResourceLocation field_110425_B = new ResourceLocation("textures/gui/container/enchanting_table.png");
+	private static final ResourceLocation field_110426_C = new ResourceLocation("textures/entity/enchanting_table_book.png");
+	private static final ModelBook bookModel = new ModelBook();
 	private Random rand = new Random();
 	private ContainerEnchantment containerEnchantment;
 	public int field_74214_o;
@@ -21,17 +23,17 @@
 	ItemStack theItemStack;
 	private String field_94079_C;
 	
-	public GuiEnchantment(InventoryPlayer par1InventoryPlayer, World par2World, int par3, int par4, int par5, String par6Str)
+	public GuiEnchantment(InventoryPlayer p_i1090_1_, World p_i1090_2_, int p_i1090_3_, int p_i1090_4_, int p_i1090_5_, String p_i1090_6_)
 	{
-		super(new ContainerEnchantment(par1InventoryPlayer, par2World, par3, par4, par5));
+		super(new ContainerEnchantment(p_i1090_1_, p_i1090_2_, p_i1090_3_, p_i1090_4_, p_i1090_5_));
 		containerEnchantment = (ContainerEnchantment) inventorySlots;
-		field_94079_C = par6Str;
+		field_94079_C = p_i1090_6_;
 	}
 	
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/enchant.png");
+		mc.func_110434_K().func_110577_a(field_110425_B);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
@@ -42,7 +44,7 @@
 		ScaledResolution var6 = new ScaledResolution(mc.gameSettings, mc.displayWidth, mc.displayHeight);
 		GL11.glViewport((var6.getScaledWidth() - 320) / 2 * var6.getScaleFactor(), (var6.getScaledHeight() - 240) / 2 * var6.getScaleFactor(), 320 * var6.getScaleFactor(), 240 * var6.getScaleFactor());
 		GL11.glTranslatef(-0.34F, 0.23F, 0.0F);
-		GLU.gluPerspective(90.0F, 1.3333334F, 9.0F, 80.0F);
+		Project.gluPerspective(90.0F, 1.3333334F, 9.0F, 80.0F);
 		float var7 = 1.0F;
 		GL11.glMatrixMode(GL11.GL_MODELVIEW);
 		GL11.glLoadIdentity();
@@ -52,7 +54,7 @@
 		float var8 = 5.0F;
 		GL11.glScalef(var8, var8, var8);
 		GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
-		mc.renderEngine.bindTexture("/item/book.png");
+		mc.func_110434_K().func_110577_a(field_110426_C);
 		GL11.glRotatef(20.0F, 1.0F, 0.0F, 0.0F);
 		float var9 = field_74208_u + (field_74209_t - field_74208_u) * par1;
 		GL11.glTranslatef((1.0F - var9) * 0.2F, (1.0F - var9) * 0.1F, (1.0F - var9) * 0.25F);
@@ -89,13 +91,12 @@
 		GL11.glPopMatrix();
 		RenderHelper.disableStandardItemLighting();
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/enchant.png");
 		EnchantmentNameParts.instance.setRandSeed(containerEnchantment.nameSeed);
 		for(int var12 = 0; var12 < 3; ++var12)
 		{
 			String var13 = EnchantmentNameParts.instance.generateRandomEnchantName();
 			zLevel = 0.0F;
-			mc.renderEngine.bindTexture("/gui/enchant.png");
+			mc.func_110434_K().func_110577_a(field_110425_B);
 			int var14 = containerEnchantment.enchantLevels[var12];
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 			if(var14 == 0)
@@ -136,8 +137,8 @@
 	
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
-		fontRenderer.drawString(field_94079_C == null ? StatCollector.translateToLocal("container.enchant") : field_94079_C, 12, 5, 4210752);
-		fontRenderer.drawString(StatCollector.translateToLocal("container.inventory"), 8, ySize - 96 + 2, 4210752);
+		fontRenderer.drawString(field_94079_C == null ? I18n.func_135053_a("container.enchant") : field_94079_C, 12, 5, 4210752);
+		fontRenderer.drawString(I18n.func_135053_a("container.inventory"), 8, ySize - 96 + 2, 4210752);
 	}
 	
 	public void func_74205_h()
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiErrorScreen.java b/RMCClient/minecraft/net/minecraft/src/GuiErrorScreen.java
index 013f7c6..dd9e4e5 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiErrorScreen.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiErrorScreen.java
@@ -5,10 +5,10 @@
 	private String message1;
 	private String message2;
 	
-	public GuiErrorScreen(String par1Str, String par2Str)
+	public GuiErrorScreen(String p_i1034_1_, String p_i1034_2_)
 	{
-		message1 = par1Str;
-		message2 = par2Str;
+		message1 = p_i1034_1_;
+		message2 = p_i1034_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -27,7 +27,7 @@
 	@Override public void initGui()
 	{
 		super.initGui();
-		buttonList.add(new GuiButton(0, width / 2 - 100, 140, StatCollector.translateToLocal("gui.cancel")));
+		buttonList.add(new GuiButton(0, width / 2 - 100, 140, I18n.func_135053_a("gui.cancel")));
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiFlatPresets.java b/RMCClient/minecraft/net/minecraft/src/GuiFlatPresets.java
index 161dbe5..11a2eca 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiFlatPresets.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiFlatPresets.java
@@ -20,9 +20,9 @@
 	private GuiButton theButton;
 	private GuiTextField theTextField;
 	
-	public GuiFlatPresets(GuiCreateFlatWorld par1)
+	public GuiFlatPresets(GuiCreateFlatWorld p_i1049_1_)
 	{
-		createFlatWorldGui = par1;
+		createFlatWorldGui = p_i1049_1_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -63,15 +63,15 @@
 	{
 		buttonList.clear();
 		Keyboard.enableRepeatEvents(true);
-		field_82300_d = StatCollector.translateToLocal("createWorld.customize.presets.title");
-		field_82308_m = StatCollector.translateToLocal("createWorld.customize.presets.share");
-		field_82306_n = StatCollector.translateToLocal("createWorld.customize.presets.list");
+		field_82300_d = I18n.func_135053_a("createWorld.customize.presets.title");
+		field_82308_m = I18n.func_135053_a("createWorld.customize.presets.share");
+		field_82306_n = I18n.func_135053_a("createWorld.customize.presets.list");
 		theTextField = new GuiTextField(fontRenderer, 50, 40, width - 100, 20);
 		theFlatPresetsListSlot = new GuiFlatPresetsListSlot(this);
 		theTextField.setMaxStringLength(1230);
 		theTextField.setText(createFlatWorldGui.getFlatGeneratorInfo());
-		buttonList.add(theButton = new GuiButton(0, width / 2 - 155, height - 28, 150, 20, StatCollector.translateToLocal("createWorld.customize.presets.select")));
-		buttonList.add(new GuiButton(1, width / 2 + 5, height - 28, 150, 20, StatCollector.translateToLocal("gui.cancel")));
+		buttonList.add(theButton = new GuiButton(0, width / 2 - 155, height - 28, 150, 20, I18n.func_135053_a("createWorld.customize.presets.select")));
+		buttonList.add(new GuiButton(1, width / 2 + 5, height - 28, 150, 20, I18n.func_135053_a("gui.cancel")));
 		func_82296_g();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiFlatPresetsItem.java b/RMCClient/minecraft/net/minecraft/src/GuiFlatPresetsItem.java
index a50f2ba..d46da75 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiFlatPresetsItem.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiFlatPresetsItem.java
@@ -6,10 +6,10 @@
 	public String presetName;
 	public String presetData;
 	
-	public GuiFlatPresetsItem(int par1, String par2Str, String par3Str)
+	public GuiFlatPresetsItem(int p_i1047_1_, String p_i1047_2_, String p_i1047_3_)
 	{
-		iconId = par1;
-		presetName = par2Str;
-		presetData = par3Str;
+		iconId = p_i1047_1_;
+		presetName = p_i1047_2_;
+		presetData = p_i1047_3_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiFlatPresetsListSlot.java b/RMCClient/minecraft/net/minecraft/src/GuiFlatPresetsListSlot.java
index d2c5782..6734613 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiFlatPresetsListSlot.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiFlatPresetsListSlot.java
@@ -8,10 +8,10 @@
 	public int field_82459_a;
 	final GuiFlatPresets flatPresetsGui;
 	
-	public GuiFlatPresetsListSlot(GuiFlatPresets par1)
+	public GuiFlatPresetsListSlot(GuiFlatPresets p_i1048_1_)
 	{
-		super(par1.mc, par1.width, par1.height, 80, par1.height - 37, 24);
-		flatPresetsGui = par1;
+		super(p_i1048_1_.mc, p_i1048_1_.width, p_i1048_1_.height, 80, p_i1048_1_.height - 37, 24);
+		flatPresetsGui = p_i1048_1_;
 		field_82459_a = -1;
 	}
 	
@@ -36,7 +36,11 @@
 	private void func_82455_b(int par1, int par2, int par3, int par4)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		flatPresetsGui.mc.renderEngine.bindTexture("/gui/slot.png");
+		flatPresetsGui.mc.func_110434_K().func_110577_a(Gui.field_110323_l);
+		float var5 = 0.0078125F;
+		float var6 = 0.0078125F;
+		boolean var7 = true;
+		boolean var8 = true;
 		Tessellator var9 = Tessellator.instance;
 		var9.startDrawingQuads();
 		var9.addVertexWithUV(par1 + 0, par2 + 18, flatPresetsGui.zLevel, (par3 + 0) * 0.0078125F, (par4 + 18) * 0.0078125F);
@@ -56,7 +60,7 @@
 		func_82456_d(par1 + 1, par2 + 1);
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 		RenderHelper.enableGUIStandardItemLighting();
-		GuiFlatPresets.getPresetIconRenderer().renderItemIntoGUI(flatPresetsGui.fontRenderer, flatPresetsGui.mc.renderEngine, new ItemStack(par3, 1, 0), par1 + 2, par2 + 2);
+		GuiFlatPresets.getPresetIconRenderer().renderItemIntoGUI(flatPresetsGui.fontRenderer, flatPresetsGui.mc.func_110434_K(), new ItemStack(par3, 1, 0), par1 + 2, par2 + 2);
 		RenderHelper.disableStandardItemLighting();
 		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiFurnace.java b/RMCClient/minecraft/net/minecraft/src/GuiFurnace.java
index 48a19a3..11c599f 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiFurnace.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiFurnace.java
@@ -4,18 +4,19 @@
 
 public class GuiFurnace extends GuiContainer
 {
+	private static final ResourceLocation field_110410_t = new ResourceLocation("textures/gui/container/furnace.png");
 	private TileEntityFurnace furnaceInventory;
 	
-	public GuiFurnace(InventoryPlayer par1InventoryPlayer, TileEntityFurnace par2TileEntityFurnace)
+	public GuiFurnace(InventoryPlayer p_i1091_1_, TileEntityFurnace p_i1091_2_)
 	{
-		super(new ContainerFurnace(par1InventoryPlayer, par2TileEntityFurnace));
-		furnaceInventory = par2TileEntityFurnace;
+		super(new ContainerFurnace(p_i1091_1_, p_i1091_2_));
+		furnaceInventory = p_i1091_2_;
 	}
 	
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/furnace.png");
+		mc.func_110434_K().func_110577_a(field_110410_t);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
@@ -31,8 +32,8 @@
 	
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
-		String var3 = furnaceInventory.isInvNameLocalized() ? furnaceInventory.getInvName() : StatCollector.translateToLocal(furnaceInventory.getInvName());
+		String var3 = furnaceInventory.isInvNameLocalized() ? furnaceInventory.getInvName() : I18n.func_135053_a(furnaceInventory.getInvName());
 		fontRenderer.drawString(var3, xSize / 2 - fontRenderer.getStringWidth(var3) / 2, 6, 4210752);
-		fontRenderer.drawString(StatCollector.translateToLocal("container.inventory"), 8, ySize - 96 + 2, 4210752);
+		fontRenderer.drawString(I18n.func_135053_a("container.inventory"), 8, ySize - 96 + 2, 4210752);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiGameOver.java b/RMCClient/minecraft/net/minecraft/src/GuiGameOver.java
index 45ae007..c68dfe2 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiGameOver.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiGameOver.java
@@ -34,14 +34,14 @@
 		GL11.glPushMatrix();
 		GL11.glScalef(2.0F, 2.0F, 2.0F);
 		boolean var4 = mc.theWorld.getWorldInfo().isHardcoreModeEnabled();
-		String var5 = var4 ? StatCollector.translateToLocal("deathScreen.title.hardcore") : StatCollector.translateToLocal("deathScreen.title");
+		String var5 = var4 ? I18n.func_135053_a("deathScreen.title.hardcore") : I18n.func_135053_a("deathScreen.title");
 		drawCenteredString(fontRenderer, var5, width / 2 / 2, 30, 16777215);
 		GL11.glPopMatrix();
 		if(var4)
 		{
-			drawCenteredString(fontRenderer, StatCollector.translateToLocal("deathScreen.hardcoreInfo"), width / 2, 144, 16777215);
+			drawCenteredString(fontRenderer, I18n.func_135053_a("deathScreen.hardcoreInfo"), width / 2, 144, 16777215);
 		}
-		drawCenteredString(fontRenderer, StatCollector.translateToLocal("deathScreen.score") + ": " + EnumChatFormatting.YELLOW + mc.thePlayer.getScore(), width / 2, 100, 16777215);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("deathScreen.score") + ": " + EnumChatFormatting.YELLOW + mc.thePlayer.getScore(), width / 2, 100, 16777215);
 		super.drawScreen(par1, par2, par3);
 	}
 	
@@ -52,16 +52,16 @@
 		{
 			if(mc.isIntegratedServerRunning())
 			{
-				buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 96, StatCollector.translateToLocal("deathScreen.deleteWorld")));
+				buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 96, I18n.func_135053_a("deathScreen.deleteWorld")));
 			} else
 			{
-				buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 96, StatCollector.translateToLocal("deathScreen.leaveServer")));
+				buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 96, I18n.func_135053_a("deathScreen.leaveServer")));
 			}
 		} else
 		{
-			buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 72, StatCollector.translateToLocal("deathScreen.respawn")));
-			buttonList.add(new GuiButton(2, width / 2 - 100, height / 4 + 96, StatCollector.translateToLocal("deathScreen.titleScreen")));
-			if(mc.session == null)
+			buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 72, I18n.func_135053_a("deathScreen.respawn")));
+			buttonList.add(new GuiButton(2, width / 2 - 100, height / 4 + 96, I18n.func_135053_a("deathScreen.titleScreen")));
+			if(mc.func_110432_I() == null)
 			{
 				((GuiButton) buttonList.get(1)).enabled = false;
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiHopper.java b/RMCClient/minecraft/net/minecraft/src/GuiHopper.java
index 0fa080f..aa1979b 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiHopper.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiHopper.java
@@ -4,14 +4,15 @@
 
 public class GuiHopper extends GuiContainer
 {
+	private static final ResourceLocation field_110409_t = new ResourceLocation("textures/gui/container/hopper.png");
 	private IInventory field_94081_r;
 	private IInventory field_94080_s;
 	
-	public GuiHopper(InventoryPlayer par1InventoryPlayer, IInventory par2IInventory)
+	public GuiHopper(InventoryPlayer p_i1092_1_, IInventory p_i1092_2_)
 	{
-		super(new ContainerHopper(par1InventoryPlayer, par2IInventory));
-		field_94081_r = par1InventoryPlayer;
-		field_94080_s = par2IInventory;
+		super(new ContainerHopper(p_i1092_1_, p_i1092_2_));
+		field_94081_r = p_i1092_1_;
+		field_94080_s = p_i1092_2_;
 		allowUserInput = false;
 		ySize = 133;
 	}
@@ -19,7 +20,7 @@
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/hopper.png");
+		mc.func_110434_K().func_110577_a(field_110409_t);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
@@ -27,7 +28,7 @@
 	
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
-		fontRenderer.drawString(field_94080_s.isInvNameLocalized() ? field_94080_s.getInvName() : StatCollector.translateToLocal(field_94080_s.getInvName()), 8, 6, 4210752);
-		fontRenderer.drawString(field_94081_r.isInvNameLocalized() ? field_94081_r.getInvName() : StatCollector.translateToLocal(field_94081_r.getInvName()), 8, ySize - 96 + 2, 4210752);
+		fontRenderer.drawString(field_94080_s.isInvNameLocalized() ? field_94080_s.getInvName() : I18n.func_135053_a(field_94080_s.getInvName()), 8, 6, 4210752);
+		fontRenderer.drawString(field_94081_r.isInvNameLocalized() ? field_94081_r.getInvName() : I18n.func_135053_a(field_94081_r.getInvName()), 8, ySize - 96 + 2, 4210752);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiIngame.java b/RMCClient/minecraft/net/minecraft/src/GuiIngame.java
index 0ee2f7b..6e77996 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiIngame.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiIngame.java
@@ -13,22 +13,288 @@
 
 public class GuiIngame extends Gui
 {
+	private static final ResourceLocation field_110329_b = new ResourceLocation("textures/misc/vignette.png");
+	private static final ResourceLocation field_110330_c = new ResourceLocation("textures/gui/widgets.png");
+	private static final ResourceLocation field_110328_d = new ResourceLocation("textures/misc/pumpkinblur.png");
 	private static final RenderItem itemRenderer = new RenderItem();
 	private final Random rand = new Random();
 	private final Minecraft mc;
 	private final GuiNewChat persistantChatGUI;
-	private int updateCounter = 0;
+	private int updateCounter;
 	private String recordPlaying = "";
-	private int recordPlayingUpFor = 0;
-	private boolean recordIsPlaying = false;
+	private int recordPlayingUpFor;
+	private boolean recordIsPlaying;
 	public float prevVignetteBrightness = 1.0F;
 	private int remainingHighlightTicks;
 	private ItemStack highlightingItemStack;
 	
-	public GuiIngame(Minecraft par1Minecraft)
+	public GuiIngame(Minecraft p_i1036_1_)
 	{
-		mc = par1Minecraft;
-		persistantChatGUI = new GuiNewChat(par1Minecraft);
+		mc = p_i1036_1_;
+		persistantChatGUI = new GuiNewChat(p_i1036_1_);
+	}
+	
+	public void func_110326_a(String p_110326_1_, boolean p_110326_2_)
+	{
+		recordPlaying = p_110326_1_;
+		recordPlayingUpFor = 60;
+		recordIsPlaying = p_110326_2_;
+	}
+	
+	private void func_110327_a(int p_110327_1_, int p_110327_2_)
+	{
+		boolean var3 = mc.thePlayer.hurtResistantTime / 3 % 2 == 1;
+		if(mc.thePlayer.hurtResistantTime < 10)
+		{
+			var3 = false;
+		}
+		int var4 = MathHelper.ceiling_float_int(mc.thePlayer.func_110143_aJ());
+		int var5 = MathHelper.ceiling_float_int(mc.thePlayer.prevHealth);
+		rand.setSeed(updateCounter * 312871);
+		boolean var6 = false;
+		FoodStats var7 = mc.thePlayer.getFoodStats();
+		int var8 = var7.getFoodLevel();
+		int var9 = var7.getPrevFoodLevel();
+		AttributeInstance var10 = mc.thePlayer.func_110148_a(SharedMonsterAttributes.field_111267_a);
+		int var11 = p_110327_1_ / 2 - 91;
+		int var12 = p_110327_1_ / 2 + 91;
+		int var13 = p_110327_2_ - 39;
+		float var14 = (float) var10.func_111126_e();
+		float var15 = mc.thePlayer.func_110139_bj();
+		int var16 = MathHelper.ceiling_float_int((var14 + var15) / 2.0F / 10.0F);
+		int var17 = Math.max(10 - (var16 - 2), 3);
+		int var18 = var13 - (var16 - 1) * var17 - 10;
+		float var19 = var15;
+		int var20 = mc.thePlayer.getTotalArmorValue();
+		int var21 = -1;
+		if(mc.thePlayer.isPotionActive(Potion.regeneration))
+		{
+			var21 = updateCounter % MathHelper.ceiling_float_int(var14 + 5.0F);
+		}
+		mc.mcProfiler.startSection("armor");
+		int var23;
+		int var22;
+		for(var22 = 0; var22 < 10; ++var22)
+		{
+			if(var20 > 0)
+			{
+				var23 = var11 + var22 * 8;
+				if(var22 * 2 + 1 < var20)
+				{
+					drawTexturedModalRect(var23, var18, 34, 9, 9, 9);
+				}
+				if(var22 * 2 + 1 == var20)
+				{
+					drawTexturedModalRect(var23, var18, 25, 9, 9, 9);
+				}
+				if(var22 * 2 + 1 > var20)
+				{
+					drawTexturedModalRect(var23, var18, 16, 9, 9, 9);
+				}
+			}
+		}
+		mc.mcProfiler.endStartSection("health");
+		int var25;
+		int var27;
+		int var26;
+		for(var22 = MathHelper.ceiling_float_int((var14 + var15) / 2.0F) - 1; var22 >= 0; --var22)
+		{
+			var23 = 16;
+			if(mc.thePlayer.isPotionActive(Potion.poison))
+			{
+				var23 += 36;
+			} else if(mc.thePlayer.isPotionActive(Potion.wither))
+			{
+				var23 += 72;
+			}
+			byte var24 = 0;
+			if(var3)
+			{
+				var24 = 1;
+			}
+			var25 = MathHelper.ceiling_float_int((var22 + 1) / 10.0F) - 1;
+			var26 = var11 + var22 % 10 * 8;
+			var27 = var13 - var25 * var17;
+			if(var4 <= 4)
+			{
+				var27 += rand.nextInt(2);
+			}
+			if(var22 == var21)
+			{
+				var27 -= 2;
+			}
+			byte var28 = 0;
+			if(mc.theWorld.getWorldInfo().isHardcoreModeEnabled())
+			{
+				var28 = 5;
+			}
+			drawTexturedModalRect(var26, var27, 16 + var24 * 9, 9 * var28, 9, 9);
+			if(var3)
+			{
+				if(var22 * 2 + 1 < var5)
+				{
+					drawTexturedModalRect(var26, var27, var23 + 54, 9 * var28, 9, 9);
+				}
+				if(var22 * 2 + 1 == var5)
+				{
+					drawTexturedModalRect(var26, var27, var23 + 63, 9 * var28, 9, 9);
+				}
+			}
+			if(var19 > 0.0F)
+			{
+				if(var19 == var15 && var15 % 2.0F == 1.0F)
+				{
+					drawTexturedModalRect(var26, var27, var23 + 153, 9 * var28, 9, 9);
+				} else
+				{
+					drawTexturedModalRect(var26, var27, var23 + 144, 9 * var28, 9, 9);
+				}
+				var19 -= 2.0F;
+			} else
+			{
+				if(var22 * 2 + 1 < var4)
+				{
+					drawTexturedModalRect(var26, var27, var23 + 36, 9 * var28, 9, 9);
+				}
+				if(var22 * 2 + 1 == var4)
+				{
+					drawTexturedModalRect(var26, var27, var23 + 45, 9 * var28, 9, 9);
+				}
+			}
+		}
+		Entity var34 = mc.thePlayer.ridingEntity;
+		int var35;
+		if(var34 == null)
+		{
+			mc.mcProfiler.endStartSection("food");
+			for(var23 = 0; var23 < 10; ++var23)
+			{
+				var35 = var13;
+				var25 = 16;
+				byte var36 = 0;
+				if(mc.thePlayer.isPotionActive(Potion.hunger))
+				{
+					var25 += 36;
+					var36 = 13;
+				}
+				if(mc.thePlayer.getFoodStats().getSaturationLevel() <= 0.0F && updateCounter % (var8 * 3 + 1) == 0)
+				{
+					var35 = var13 + rand.nextInt(3) - 1;
+				}
+				if(var6)
+				{
+					var36 = 1;
+				}
+				var27 = var12 - var23 * 8 - 9;
+				drawTexturedModalRect(var27, var35, 16 + var36 * 9, 27, 9, 9);
+				if(var6)
+				{
+					if(var23 * 2 + 1 < var9)
+					{
+						drawTexturedModalRect(var27, var35, var25 + 54, 27, 9, 9);
+					}
+					if(var23 * 2 + 1 == var9)
+					{
+						drawTexturedModalRect(var27, var35, var25 + 63, 27, 9, 9);
+					}
+				}
+				if(var23 * 2 + 1 < var8)
+				{
+					drawTexturedModalRect(var27, var35, var25 + 36, 27, 9, 9);
+				}
+				if(var23 * 2 + 1 == var8)
+				{
+					drawTexturedModalRect(var27, var35, var25 + 45, 27, 9, 9);
+				}
+			}
+		} else if(var34 instanceof EntityLivingBase)
+		{
+			mc.mcProfiler.endStartSection("mountHealth");
+			EntityLivingBase var38 = (EntityLivingBase) var34;
+			var35 = (int) Math.ceil(var38.func_110143_aJ());
+			float var37 = var38.func_110138_aP();
+			var26 = (int) (var37 + 0.5F) / 2;
+			if(var26 > 30)
+			{
+				var26 = 30;
+			}
+			var27 = var13;
+			for(int var39 = 0; var26 > 0; var39 += 20)
+			{
+				int var29 = Math.min(var26, 10);
+				var26 -= var29;
+				for(int var30 = 0; var30 < var29; ++var30)
+				{
+					byte var31 = 52;
+					byte var32 = 0;
+					if(var6)
+					{
+						var32 = 1;
+					}
+					int var33 = var12 - var30 * 8 - 9;
+					drawTexturedModalRect(var33, var27, var31 + var32 * 9, 9, 9, 9);
+					if(var30 * 2 + 1 + var39 < var35)
+					{
+						drawTexturedModalRect(var33, var27, var31 + 36, 9, 9, 9);
+					}
+					if(var30 * 2 + 1 + var39 == var35)
+					{
+						drawTexturedModalRect(var33, var27, var31 + 45, 9, 9, 9);
+					}
+				}
+				var27 -= 10;
+			}
+		}
+		mc.mcProfiler.endStartSection("air");
+		if(mc.thePlayer.isInsideOfMaterial(Material.water))
+		{
+			var23 = mc.thePlayer.getAir();
+			var35 = MathHelper.ceiling_double_int((var23 - 2) * 10.0D / 300.0D);
+			var25 = MathHelper.ceiling_double_int(var23 * 10.0D / 300.0D) - var35;
+			for(var26 = 0; var26 < var35 + var25; ++var26)
+			{
+				if(var26 < var35)
+				{
+					drawTexturedModalRect(var12 - var26 * 8 - 9, var18, 16, 18, 9, 9);
+				} else
+				{
+					drawTexturedModalRect(var12 - var26 * 8 - 9, var18, 25, 18, 9, 9);
+				}
+			}
+		}
+		mc.mcProfiler.endSection();
+	}
+	
+	private void func_130015_b(float p_130015_1_, int p_130015_2_, int p_130015_3_)
+	{
+		if(p_130015_1_ < 1.0F)
+		{
+			p_130015_1_ *= p_130015_1_;
+			p_130015_1_ *= p_130015_1_;
+			p_130015_1_ = p_130015_1_ * 0.8F + 0.2F;
+		}
+		GL11.glDisable(GL11.GL_ALPHA_TEST);
+		GL11.glDisable(GL11.GL_DEPTH_TEST);
+		GL11.glDepthMask(false);
+		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, p_130015_1_);
+		Icon var4 = Block.portal.getBlockTextureFromSide(1);
+		mc.func_110434_K().func_110577_a(TextureMap.field_110575_b);
+		float var5 = var4.getMinU();
+		float var6 = var4.getMinV();
+		float var7 = var4.getMaxU();
+		float var8 = var4.getMaxV();
+		Tessellator var9 = Tessellator.instance;
+		var9.startDrawingQuads();
+		var9.addVertexWithUV(0.0D, p_130015_3_, -90.0D, var5, var8);
+		var9.addVertexWithUV(p_130015_2_, p_130015_3_, -90.0D, var7, var8);
+		var9.addVertexWithUV(p_130015_2_, 0.0D, -90.0D, var7, var6);
+		var9.addVertexWithUV(0.0D, 0.0D, -90.0D, var5, var6);
+		var9.draw();
+		GL11.glDepthMask(true);
+		GL11.glEnable(GL11.GL_DEPTH_TEST);
+		GL11.glEnable(GL11.GL_ALPHA_TEST);
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 	}
 	
 	private void func_96136_a(ScoreObjective par1ScoreObjective, int par2, int par3, FontRenderer par4FontRenderer)
@@ -105,7 +371,7 @@
 			String var8 = BossStatus.bossName;
 			var1.drawStringWithShadow(var8, var3 / 2 - var1.getStringWidth(var8) / 2, var7 - 10, 16777215);
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-			mc.renderEngine.bindTexture("/gui/icons.png");
+			mc.func_110434_K().func_110577_a(field_110324_m);
 		}
 	}
 	
@@ -134,281 +400,145 @@
 			float var10 = mc.thePlayer.prevTimeInPortal + (mc.thePlayer.timeInPortal - mc.thePlayer.prevTimeInPortal) * par1;
 			if(var10 > 0.0F)
 			{
-				renderPortalOverlay(var10, var6, var7);
+				func_130015_b(var10, var6, var7);
 			}
 		}
-		boolean var11;
+		int var11;
 		int var12;
 		int var13;
-		int var17;
-		int var16;
-		int var18;
-		int var20;
-		int var23;
-		int var22;
-		int var24;
-		byte var27;
-		int var26;
-		int var47;
-		int var50;
 		if(!mc.playerController.enableEverythingIsScrewedUpMode())
 		{
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-			mc.renderEngine.bindTexture("/gui/gui.png");
+			mc.func_110434_K().func_110577_a(field_110330_c);
 			InventoryPlayer var31 = mc.thePlayer.inventory;
 			zLevel = -90.0F;
 			drawTexturedModalRect(var6 / 2 - 91, var7 - 22, 0, 0, 182, 22);
 			drawTexturedModalRect(var6 / 2 - 91 - 1 + var31.currentItem * 20, var7 - 22 - 1, 0, 22, 24, 22);
-			mc.renderEngine.bindTexture("/gui/icons.png");
+			mc.func_110434_K().func_110577_a(field_110324_m);
 			GL11.glEnable(GL11.GL_BLEND);
 			GL11.glBlendFunc(GL11.GL_ONE_MINUS_DST_COLOR, GL11.GL_ONE_MINUS_SRC_COLOR);
 			drawTexturedModalRect(var6 / 2 - 7, var7 / 2 - 7, 0, 0, 16, 16);
 			GL11.glDisable(GL11.GL_BLEND);
-			var11 = mc.thePlayer.hurtResistantTime / 3 % 2 == 1;
-			if(mc.thePlayer.hurtResistantTime < 10)
-			{
-				var11 = false;
-			}
-			var12 = mc.thePlayer.getHealth();
-			var13 = mc.thePlayer.prevHealth;
-			rand.setSeed(updateCounter * 312871);
-			boolean var14 = false;
-			FoodStats var15 = mc.thePlayer.getFoodStats();
-			var16 = var15.getFoodLevel();
-			var17 = var15.getPrevFoodLevel();
 			mc.mcProfiler.startSection("bossHealth");
 			renderBossHealth();
 			mc.mcProfiler.endSection();
-			int var19;
 			if(mc.playerController.shouldDrawHUD())
 			{
-				var18 = var6 / 2 - 91;
-				var19 = var6 / 2 + 91;
-				mc.mcProfiler.startSection("expBar");
-				var20 = mc.thePlayer.xpBarCap();
-				if(var20 > 0)
-				{
-					short var21 = 182;
-					var22 = (int) (mc.thePlayer.experience * (var21 + 1));
-					var23 = var7 - 32 + 3;
-					drawTexturedModalRect(var18, var23, 0, 64, var21, 5);
-					if(var22 > 0)
-					{
-						drawTexturedModalRect(var18, var23, 0, 69, var22, 5);
-					}
-				}
-				var47 = var7 - 39;
-				var22 = var47 - 10;
-				var23 = mc.thePlayer.getTotalArmorValue();
-				var24 = -1;
-				if(mc.thePlayer.isPotionActive(Potion.regeneration))
-				{
-					var24 = updateCounter % 25;
-				}
-				mc.mcProfiler.endStartSection("healthArmor");
-				int var25;
-				int var29;
-				int var28;
-				for(var25 = 0; var25 < 10; ++var25)
-				{
-					if(var23 > 0)
-					{
-						var26 = var18 + var25 * 8;
-						if(var25 * 2 + 1 < var23)
-						{
-							drawTexturedModalRect(var26, var22, 34, 9, 9, 9);
-						}
-						if(var25 * 2 + 1 == var23)
-						{
-							drawTexturedModalRect(var26, var22, 25, 9, 9, 9);
-						}
-						if(var25 * 2 + 1 > var23)
-						{
-							drawTexturedModalRect(var26, var22, 16, 9, 9, 9);
-						}
-					}
-					var26 = 16;
-					if(mc.thePlayer.isPotionActive(Potion.poison))
-					{
-						var26 += 36;
-					} else if(mc.thePlayer.isPotionActive(Potion.wither))
-					{
-						var26 += 72;
-					}
-					var27 = 0;
-					if(var11)
-					{
-						var27 = 1;
-					}
-					var28 = var18 + var25 * 8;
-					var29 = var47;
-					if(var12 <= 4)
-					{
-						var29 = var47 + rand.nextInt(2);
-					}
-					if(var25 == var24)
-					{
-						var29 -= 2;
-					}
-					byte var30 = 0;
-					if(mc.theWorld.getWorldInfo().isHardcoreModeEnabled())
-					{
-						var30 = 5;
-					}
-					drawTexturedModalRect(var28, var29, 16 + var27 * 9, 9 * var30, 9, 9);
-					if(var11)
-					{
-						if(var25 * 2 + 1 < var13)
-						{
-							drawTexturedModalRect(var28, var29, var26 + 54, 9 * var30, 9, 9);
-						}
-						if(var25 * 2 + 1 == var13)
-						{
-							drawTexturedModalRect(var28, var29, var26 + 63, 9 * var30, 9, 9);
-						}
-					}
-					if(var25 * 2 + 1 < var12)
-					{
-						drawTexturedModalRect(var28, var29, var26 + 36, 9 * var30, 9, 9);
-					}
-					if(var25 * 2 + 1 == var12)
-					{
-						drawTexturedModalRect(var28, var29, var26 + 45, 9 * var30, 9, 9);
-					}
-				}
-				mc.mcProfiler.endStartSection("food");
-				for(var25 = 0; var25 < 10; ++var25)
-				{
-					var26 = var47;
-					var50 = 16;
-					byte var51 = 0;
-					if(mc.thePlayer.isPotionActive(Potion.hunger))
-					{
-						var50 += 36;
-						var51 = 13;
-					}
-					if(mc.thePlayer.getFoodStats().getSaturationLevel() <= 0.0F && updateCounter % (var16 * 3 + 1) == 0)
-					{
-						var26 = var47 + rand.nextInt(3) - 1;
-					}
-					if(var14)
-					{
-						var51 = 1;
-					}
-					var29 = var19 - var25 * 8 - 9;
-					drawTexturedModalRect(var29, var26, 16 + var51 * 9, 27, 9, 9);
-					if(var14)
-					{
-						if(var25 * 2 + 1 < var17)
-						{
-							drawTexturedModalRect(var29, var26, var50 + 54, 27, 9, 9);
-						}
-						if(var25 * 2 + 1 == var17)
-						{
-							drawTexturedModalRect(var29, var26, var50 + 63, 27, 9, 9);
-						}
-					}
-					if(var25 * 2 + 1 < var16)
-					{
-						drawTexturedModalRect(var29, var26, var50 + 36, 27, 9, 9);
-					}
-					if(var25 * 2 + 1 == var16)
-					{
-						drawTexturedModalRect(var29, var26, var50 + 45, 27, 9, 9);
-					}
-				}
-				mc.mcProfiler.endStartSection("air");
-				if(mc.thePlayer.isInsideOfMaterial(Material.water))
-				{
-					var25 = mc.thePlayer.getAir();
-					var26 = MathHelper.ceiling_double_int((var25 - 2) * 10.0D / 300.0D);
-					var50 = MathHelper.ceiling_double_int(var25 * 10.0D / 300.0D) - var26;
-					for(var28 = 0; var28 < var26 + var50; ++var28)
-					{
-						if(var28 < var26)
-						{
-							drawTexturedModalRect(var19 - var28 * 8 - 9, var22, 16, 18, 9, 9);
-						} else
-						{
-							drawTexturedModalRect(var19 - var28 * 8 - 9, var22, 25, 18, 9, 9);
-						}
-					}
-				}
-				mc.mcProfiler.endSection();
+				func_110327_a(var6, var7);
 			}
 			GL11.glDisable(GL11.GL_BLEND);
 			mc.mcProfiler.startSection("actionBar");
 			GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 			RenderHelper.enableGUIStandardItemLighting();
-			for(var18 = 0; var18 < 9; ++var18)
+			for(var11 = 0; var11 < 9; ++var11)
 			{
-				var19 = var6 / 2 - 90 + var18 * 20 + 2;
-				var20 = var7 - 16 - 3;
-				renderInventorySlot(var18, var19, var20, par1);
+				var12 = var6 / 2 - 90 + var11 * 20 + 2;
+				var13 = var7 - 16 - 3;
+				renderInventorySlot(var11, var12, var13, par1);
 			}
 			RenderHelper.disableStandardItemLighting();
 			GL11.glDisable(GL12.GL_RESCALE_NORMAL);
 			mc.mcProfiler.endSection();
 		}
-		float var33;
+		int var32;
 		if(mc.thePlayer.getSleepTimer() > 0)
 		{
 			mc.mcProfiler.startSection("sleep");
 			GL11.glDisable(GL11.GL_DEPTH_TEST);
 			GL11.glDisable(GL11.GL_ALPHA_TEST);
-			int var32 = mc.thePlayer.getSleepTimer();
-			var33 = var32 / 100.0F;
-			if(var33 > 1.0F)
+			var32 = mc.thePlayer.getSleepTimer();
+			float var34 = var32 / 100.0F;
+			if(var34 > 1.0F)
 			{
-				var33 = 1.0F - (var32 - 100) / 10.0F;
+				var34 = 1.0F - (var32 - 100) / 10.0F;
 			}
-			var12 = (int) (220.0F * var33) << 24 | 1052704;
+			var12 = (int) (220.0F * var34) << 24 | 1052704;
 			drawRect(0, 0, var6, var7, var12);
 			GL11.glEnable(GL11.GL_ALPHA_TEST);
 			GL11.glEnable(GL11.GL_DEPTH_TEST);
 			mc.mcProfiler.endSection();
 		}
-		int var38;
-		int var37;
-		if(mc.playerController.func_78763_f() && mc.thePlayer.experienceLevel > 0)
+		var32 = 16777215;
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		var11 = var6 / 2 - 91;
+		int var14;
+		int var15;
+		int var17;
+		int var16;
+		float var33;
+		short var37;
+		if(mc.thePlayer.func_110317_t())
 		{
-			mc.mcProfiler.startSection("expLevel");
-			var11 = false;
-			var12 = var11 ? 16777215 : 8453920;
-			String var34 = "" + mc.thePlayer.experienceLevel;
-			var38 = (var6 - var8.getStringWidth(var34)) / 2;
-			var37 = var7 - 31 - 4;
-			var8.drawString(var34, var38 + 1, var37, 0);
-			var8.drawString(var34, var38 - 1, var37, 0);
-			var8.drawString(var34, var38, var37 + 1, 0);
-			var8.drawString(var34, var38, var37 - 1, 0);
-			var8.drawString(var34, var38, var37, var12);
+			mc.mcProfiler.startSection("jumpBar");
+			mc.func_110434_K().func_110577_a(Gui.field_110324_m);
+			var33 = mc.thePlayer.func_110319_bJ();
+			var37 = 182;
+			var14 = (int) (var33 * (var37 + 1));
+			var15 = var7 - 32 + 3;
+			drawTexturedModalRect(var11, var15, 0, 84, var37, 5);
+			if(var14 > 0)
+			{
+				drawTexturedModalRect(var11, var15, 0, 89, var14, 5);
+			}
 			mc.mcProfiler.endSection();
+		} else if(mc.playerController.func_78763_f())
+		{
+			mc.mcProfiler.startSection("expBar");
+			mc.func_110434_K().func_110577_a(Gui.field_110324_m);
+			var12 = mc.thePlayer.xpBarCap();
+			if(var12 > 0)
+			{
+				var37 = 182;
+				var14 = (int) (mc.thePlayer.experience * (var37 + 1));
+				var15 = var7 - 32 + 3;
+				drawTexturedModalRect(var11, var15, 0, 64, var37, 5);
+				if(var14 > 0)
+				{
+					drawTexturedModalRect(var11, var15, 0, 69, var14, 5);
+				}
+			}
+			mc.mcProfiler.endSection();
+			if(mc.thePlayer.experienceLevel > 0)
+			{
+				mc.mcProfiler.startSection("expLevel");
+				boolean var35 = false;
+				var14 = var35 ? 16777215 : 8453920;
+				String var42 = "" + mc.thePlayer.experienceLevel;
+				var16 = (var6 - var8.getStringWidth(var42)) / 2;
+				var17 = var7 - 31 - 4;
+				boolean var18 = false;
+				var8.drawString(var42, var16 + 1, var17, 0);
+				var8.drawString(var42, var16 - 1, var17, 0);
+				var8.drawString(var42, var16, var17 + 1, 0);
+				var8.drawString(var42, var16, var17 - 1, 0);
+				var8.drawString(var42, var16, var17, var14);
+				mc.mcProfiler.endSection();
+			}
 		}
-		String var35;
+		String var36;
 		if(mc.gameSettings.heldItemTooltips)
 		{
 			mc.mcProfiler.startSection("toolHighlight");
 			if(remainingHighlightTicks > 0 && highlightingItemStack != null)
 			{
-				var35 = highlightingItemStack.getDisplayName();
-				var12 = (var6 - var8.getStringWidth(var35)) / 2;
-				var13 = var7 - 59;
+				var36 = highlightingItemStack.getDisplayName();
+				var13 = (var6 - var8.getStringWidth(var36)) / 2;
+				var14 = var7 - 59;
 				if(!mc.playerController.shouldDrawHUD())
 				{
-					var13 += 14;
+					var14 += 14;
 				}
-				var38 = (int) (remainingHighlightTicks * 256.0F / 10.0F);
-				if(var38 > 255)
+				var15 = (int) (remainingHighlightTicks * 256.0F / 10.0F);
+				if(var15 > 255)
 				{
-					var38 = 255;
+					var15 = 255;
 				}
-				if(var38 > 0)
+				if(var15 > 0)
 				{
 					GL11.glPushMatrix();
 					GL11.glEnable(GL11.GL_BLEND);
 					GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-					var8.drawStringWithShadow(var35, var12, var13, 16777215 + (var38 << 24));
+					var8.drawStringWithShadow(var36, var13, var14, 16777215 + (var15 << 24));
 					GL11.glDisable(GL11.GL_BLEND);
 					GL11.glPopMatrix();
 				}
@@ -418,49 +548,53 @@
 		if(mc.isDemo())
 		{
 			mc.mcProfiler.startSection("demo");
-			var35 = "";
+			var36 = "";
 			if(mc.theWorld.getTotalWorldTime() >= 120500L)
 			{
-				var35 = StatCollector.translateToLocal("demo.demoExpired");
+				var36 = I18n.func_135053_a("demo.demoExpired");
 			} else
 			{
-				var35 = String.format(StatCollector.translateToLocal("demo.remainingTime"), new Object[] { StringUtils.ticksToElapsedTime((int) (120500L - mc.theWorld.getTotalWorldTime())) });
+				var36 = I18n.func_135052_a("demo.remainingTime", new Object[] { StringUtils.ticksToElapsedTime((int) (120500L - mc.theWorld.getTotalWorldTime())) });
 			}
-			var12 = var8.getStringWidth(var35);
-			var8.drawStringWithShadow(var35, var6 - var12 - 10, 5, 16777215);
+			var13 = var8.getStringWidth(var36);
+			var8.drawStringWithShadow(var36, var6 - var13 - 10, 5, 16777215);
 			mc.mcProfiler.endSection();
 		}
+		int var21;
+		int var23;
+		int var22;
 		if(mc.gameSettings.showDebugInfo)
 		{
 			mc.mcProfiler.startSection("debug");
 			GL11.glPushMatrix();
-			var8.drawStringWithShadow("Minecraft 1.5.2 (" + mc.debug + ")", 2, 2, 16777215);
+			var8.drawStringWithShadow("Minecraft 1.6.2 (" + mc.debug + ")", 2, 2, 16777215);
 			var8.drawStringWithShadow(mc.debugInfoRenders(), 2, 12, 16777215);
 			var8.drawStringWithShadow(mc.getEntityDebug(), 2, 22, 16777215);
 			var8.drawStringWithShadow(mc.debugInfoEntities(), 2, 32, 16777215);
 			var8.drawStringWithShadow(mc.getWorldProviderName(), 2, 42, 16777215);
-			long var36 = Runtime.getRuntime().maxMemory();
+			long var38 = Runtime.getRuntime().maxMemory();
 			long var40 = Runtime.getRuntime().totalMemory();
-			long var43 = Runtime.getRuntime().freeMemory();
-			long var44 = var40 - var43;
-			String var46 = "Used memory: " + var44 * 100L / var36 + "% (" + var44 / 1024L / 1024L + "MB) of " + var36 / 1024L / 1024L + "MB";
-			drawString(var8, var46, var6 - var8.getStringWidth(var46) - 2, 2, 14737632);
-			var46 = "Allocated memory: " + var40 * 100L / var36 + "% (" + var40 / 1024L / 1024L + "MB)";
-			drawString(var8, var46, var6 - var8.getStringWidth(var46) - 2, 12, 14737632);
-			var47 = MathHelper.floor_double(mc.thePlayer.posX);
-			var22 = MathHelper.floor_double(mc.thePlayer.posY);
-			var23 = MathHelper.floor_double(mc.thePlayer.posZ);
-			drawString(var8, String.format("x: %.5f (%d) // c: %d (%d)", new Object[] { Double.valueOf(mc.thePlayer.posX), Integer.valueOf(var47), Integer.valueOf(var47 >> 4), Integer.valueOf(var47 & 15) }), 2, 64, 14737632);
+			long var39 = Runtime.getRuntime().freeMemory();
+			long var46 = var40 - var39;
+			String var20 = "Used memory: " + var46 * 100L / var38 + "% (" + var46 / 1024L / 1024L + "MB) of " + var38 / 1024L / 1024L + "MB";
+			var21 = 14737632;
+			drawString(var8, var20, var6 - var8.getStringWidth(var20) - 2, 2, 14737632);
+			var20 = "Allocated memory: " + var40 * 100L / var38 + "% (" + var40 / 1024L / 1024L + "MB)";
+			drawString(var8, var20, var6 - var8.getStringWidth(var20) - 2, 12, 14737632);
+			var22 = MathHelper.floor_double(mc.thePlayer.posX);
+			var23 = MathHelper.floor_double(mc.thePlayer.posY);
+			int var24 = MathHelper.floor_double(mc.thePlayer.posZ);
+			drawString(var8, String.format("x: %.5f (%d) // c: %d (%d)", new Object[] { Double.valueOf(mc.thePlayer.posX), Integer.valueOf(var22), Integer.valueOf(var22 >> 4), Integer.valueOf(var22 & 15) }), 2, 64, 14737632);
 			drawString(var8, String.format("y: %.3f (feet pos, %.3f eyes pos)", new Object[] { Double.valueOf(mc.thePlayer.boundingBox.minY), Double.valueOf(mc.thePlayer.posY) }), 2, 72, 14737632);
-			drawString(var8, String.format("z: %.5f (%d) // c: %d (%d)", new Object[] { Double.valueOf(mc.thePlayer.posZ), Integer.valueOf(var23), Integer.valueOf(var23 >> 4), Integer.valueOf(var23 & 15) }), 2, 80, 14737632);
-			var24 = MathHelper.floor_double(mc.thePlayer.rotationYaw * 4.0F / 360.0F + 0.5D) & 3;
-			drawString(var8, "f: " + var24 + " (" + Direction.directions[var24] + ") / " + MathHelper.wrapAngleTo180_float(mc.thePlayer.rotationYaw), 2, 88, 14737632);
-			if(mc.theWorld != null && mc.theWorld.blockExists(var47, var22, var23))
+			drawString(var8, String.format("z: %.5f (%d) // c: %d (%d)", new Object[] { Double.valueOf(mc.thePlayer.posZ), Integer.valueOf(var24), Integer.valueOf(var24 >> 4), Integer.valueOf(var24 & 15) }), 2, 80, 14737632);
+			int var25 = MathHelper.floor_double(mc.thePlayer.rotationYaw * 4.0F / 360.0F + 0.5D) & 3;
+			drawString(var8, "f: " + var25 + " (" + Direction.directions[var25] + ") / " + MathHelper.wrapAngleTo180_float(mc.thePlayer.rotationYaw), 2, 88, 14737632);
+			if(mc.theWorld != null && mc.theWorld.blockExists(var22, var23, var24))
 			{
-				Chunk var52 = mc.theWorld.getChunkFromBlockCoords(var47, var23);
-				drawString(var8, "lc: " + (var52.getTopFilledSegment() + 15) + " b: " + var52.getBiomeGenForWorldCoords(var47 & 15, var23 & 15, mc.theWorld.getWorldChunkManager()).biomeName + " bl: " + var52.getSavedLightValue(EnumSkyBlock.Block, var47 & 15, var22, var23 & 15) + " sl: " + var52.getSavedLightValue(EnumSkyBlock.Sky, var47 & 15, var22, var23 & 15) + " rl: " + var52.getBlockLightValue(var47 & 15, var22, var23 & 15, 0), 2, 96, 14737632);
+				Chunk var26 = mc.theWorld.getChunkFromBlockCoords(var22, var24);
+				drawString(var8, "lc: " + (var26.getTopFilledSegment() + 15) + " b: " + var26.getBiomeGenForWorldCoords(var22 & 15, var24 & 15, mc.theWorld.getWorldChunkManager()).biomeName + " bl: " + var26.getSavedLightValue(EnumSkyBlock.Block, var22 & 15, var23, var24 & 15) + " sl: " + var26.getSavedLightValue(EnumSkyBlock.Sky, var22 & 15, var23, var24 & 15) + " rl: " + var26.getBlockLightValue(var22 & 15, var23, var24 & 15, 0), 2, 96, 14737632);
 			}
-			drawString(var8, String.format("ws: %.3f, fs: %.3f, g: %b, fl: %d", new Object[] { Float.valueOf(mc.thePlayer.capabilities.getWalkSpeed()), Float.valueOf(mc.thePlayer.capabilities.getFlySpeed()), Boolean.valueOf(mc.thePlayer.onGround), Integer.valueOf(mc.theWorld.getHeightValue(var47, var23)) }), 2, 104, 14737632);
+			drawString(var8, String.format("ws: %.3f, fs: %.3f, g: %b, fl: %d", new Object[] { Float.valueOf(mc.thePlayer.capabilities.getWalkSpeed()), Float.valueOf(mc.thePlayer.capabilities.getFlySpeed()), Boolean.valueOf(mc.thePlayer.onGround), Integer.valueOf(mc.theWorld.getHeightValue(var22, var24)) }), 2, 104, 14737632);
 			GL11.glPopMatrix();
 			mc.mcProfiler.endSection();
 		}
@@ -468,32 +602,32 @@
 		{
 			mc.mcProfiler.startSection("overlayMessage");
 			var33 = recordPlayingUpFor - par1;
-			var12 = (int) (var33 * 256.0F / 20.0F);
-			if(var12 > 255)
+			var13 = (int) (var33 * 255.0F / 20.0F);
+			if(var13 > 255)
 			{
-				var12 = 255;
+				var13 = 255;
 			}
-			if(var12 > 0)
+			if(var13 > 8)
 			{
 				GL11.glPushMatrix();
-				GL11.glTranslatef(var6 / 2, var7 - 48, 0.0F);
+				GL11.glTranslatef(var6 / 2, var7 - 68, 0.0F);
 				GL11.glEnable(GL11.GL_BLEND);
 				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-				var13 = 16777215;
+				var14 = 16777215;
 				if(recordIsPlaying)
 				{
-					var13 = Color.HSBtoRGB(var33 / 50.0F, 0.7F, 0.6F) & 16777215;
+					var14 = Color.HSBtoRGB(var33 / 50.0F, 0.7F, 0.6F) & 16777215;
 				}
-				var8.drawString(recordPlaying, -var8.getStringWidth(recordPlaying) / 2, -4, var13 + (var12 << 24));
+				var8.drawString(recordPlaying, -var8.getStringWidth(recordPlaying) / 2, -4, var14 + (var13 << 24 & -16777216));
 				GL11.glDisable(GL11.GL_BLEND);
 				GL11.glPopMatrix();
 			}
 			mc.mcProfiler.endSection();
 		}
-		ScoreObjective var42 = mc.theWorld.getScoreboard().func_96539_a(1);
-		if(var42 != null)
+		ScoreObjective var43 = mc.theWorld.getScoreboard().func_96539_a(1);
+		if(var43 != null)
 		{
-			func_96136_a(var42, var7, var6, var8);
+			func_96136_a(var43, var7, var6, var8);
 		}
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
@@ -504,75 +638,76 @@
 		persistantChatGUI.drawChat(updateCounter);
 		mc.mcProfiler.endSection();
 		GL11.glPopMatrix();
-		var42 = mc.theWorld.getScoreboard().func_96539_a(0);
-		if(mc.gameSettings.keyBindPlayerList.pressed && (!mc.isIntegratedServerRunning() || mc.thePlayer.sendQueue.playerInfoList.size() > 1 || var42 != null))
+		var43 = mc.theWorld.getScoreboard().func_96539_a(0);
+		if(mc.gameSettings.keyBindPlayerList.pressed && (!mc.isIntegratedServerRunning() || mc.thePlayer.sendQueue.playerInfoList.size() > 1 || var43 != null))
 		{
 			mc.mcProfiler.startSection("playerList");
-			NetClientHandler var39 = mc.thePlayer.sendQueue;
-			List var41 = var39.playerInfoList;
-			var38 = var39.currentServerMaxPlayers;
-			var37 = var38;
-			for(var16 = 1; var37 > 20; var37 = (var38 + var16 - 1) / var16)
+			NetClientHandler var41 = mc.thePlayer.sendQueue;
+			List var44 = var41.playerInfoList;
+			var15 = var41.currentServerMaxPlayers;
+			var16 = var15;
+			for(var17 = 1; var16 > 20; var16 = (var15 + var17 - 1) / var17)
 			{
-				++var16;
+				++var17;
 			}
-			var17 = 300 / var16;
-			if(var17 > 150)
+			int var45 = 300 / var17;
+			if(var45 > 150)
 			{
-				var17 = 150;
+				var45 = 150;
 			}
-			var18 = (var6 - var16 * var17) / 2;
-			byte var45 = 10;
-			drawRect(var18 - 1, var45 - 1, var18 + var17 * var16, var45 + 9 * var37, Integer.MIN_VALUE);
-			for(var20 = 0; var20 < var38; ++var20)
+			int var19 = (var6 - var17 * var45) / 2;
+			byte var47 = 10;
+			drawRect(var19 - 1, var47 - 1, var19 + var45 * var17, var47 + 9 * var16, Integer.MIN_VALUE);
+			for(var21 = 0; var21 < var15; ++var21)
 			{
-				var47 = var18 + var20 % var16 * var17;
-				var22 = var45 + var20 / var16 * 9;
-				drawRect(var47, var22, var47 + var17 - 1, var22 + 8, 553648127);
+				var22 = var19 + var21 % var17 * var45;
+				var23 = var47 + var21 / var17 * 9;
+				drawRect(var22, var23, var22 + var45 - 1, var23 + 8, 553648127);
 				GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 				GL11.glEnable(GL11.GL_ALPHA_TEST);
-				if(var20 < var41.size())
+				if(var21 < var44.size())
 				{
-					GuiPlayerInfo var49 = (GuiPlayerInfo) var41.get(var20);
+					GuiPlayerInfo var49 = (GuiPlayerInfo) var44.get(var21);
 					ScorePlayerTeam var48 = mc.theWorld.getScoreboard().getPlayersTeam(var49.name);
-					String var53 = ScorePlayerTeam.func_96667_a(var48, var49.name);
-					var8.drawStringWithShadow(var53, var47, var22, 16777215);
-					if(var42 != null)
+					String var52 = ScorePlayerTeam.func_96667_a(var48, var49.name);
+					var8.drawStringWithShadow(var52, var22, var23, 16777215);
+					if(var43 != null)
 					{
-						var26 = var47 + var8.getStringWidth(var53) + 5;
-						var50 = var47 + var17 - 12 - 5;
-						if(var50 - var26 > 5)
+						int var27 = var22 + var8.getStringWidth(var52) + 5;
+						int var28 = var22 + var45 - 12 - 5;
+						if(var28 - var27 > 5)
 						{
-							Score var56 = var42.getScoreboard().func_96529_a(var49.name, var42);
-							String var57 = EnumChatFormatting.YELLOW + "" + var56.func_96652_c();
-							var8.drawStringWithShadow(var57, var50 - var8.getStringWidth(var57), var22, 16777215);
+							Score var29 = var43.getScoreboard().func_96529_a(var49.name, var43);
+							String var30 = EnumChatFormatting.YELLOW + "" + var29.func_96652_c();
+							var8.drawStringWithShadow(var30, var28 - var8.getStringWidth(var30), var23, 16777215);
 						}
 					}
 					GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-					mc.renderEngine.bindTexture("/gui/icons.png");
-					byte var55 = 0;
-					boolean var54 = false;
+					mc.func_110434_K().func_110577_a(field_110324_m);
+					byte var53 = 0;
+					boolean var51 = false;
+					byte var50;
 					if(var49.responseTime < 0)
 					{
-						var27 = 5;
+						var50 = 5;
 					} else if(var49.responseTime < 150)
 					{
-						var27 = 0;
+						var50 = 0;
 					} else if(var49.responseTime < 300)
 					{
-						var27 = 1;
+						var50 = 1;
 					} else if(var49.responseTime < 600)
 					{
-						var27 = 2;
+						var50 = 2;
 					} else if(var49.responseTime < 1000)
 					{
-						var27 = 3;
+						var50 = 3;
 					} else
 					{
-						var27 = 4;
+						var50 = 4;
 					}
 					zLevel += 100.0F;
-					drawTexturedModalRect(var47 + var17 - 12, var22, 0 + var55 * 10, 176 + var27 * 8, 10, 8);
+					drawTexturedModalRect(var22 + var45 - 12, var23, 0 + var53 * 10, 176 + var50 * 8, 10, 8);
 					zLevel -= 100.0F;
 				}
 			}
@@ -596,45 +731,13 @@
 				GL11.glScalef(1.0F / var7, (var7 + 1.0F) / 2.0F, 1.0F);
 				GL11.glTranslatef(-(par2 + 8), -(par3 + 12), 0.0F);
 			}
-			itemRenderer.renderItemAndEffectIntoGUI(mc.fontRenderer, mc.renderEngine, var5, par2, par3);
+			itemRenderer.renderItemAndEffectIntoGUI(mc.fontRenderer, mc.func_110434_K(), var5, par2, par3);
 			if(var6 > 0.0F)
 			{
 				GL11.glPopMatrix();
 			}
-			itemRenderer.renderItemOverlayIntoGUI(mc.fontRenderer, mc.renderEngine, var5, par2, par3);
+			itemRenderer.renderItemOverlayIntoGUI(mc.fontRenderer, mc.func_110434_K(), var5, par2, par3);
 		}
-	}
-	
-	private void renderPortalOverlay(float par1, int par2, int par3)
-	{
-		if(par1 < 1.0F)
-		{
-			par1 *= par1;
-			par1 *= par1;
-			par1 = par1 * 0.8F + 0.2F;
-		}
-		GL11.glDisable(GL11.GL_ALPHA_TEST);
-		GL11.glDisable(GL11.GL_DEPTH_TEST);
-		GL11.glDepthMask(false);
-		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-		GL11.glColor4f(1.0F, 1.0F, 1.0F, par1);
-		mc.renderEngine.bindTexture("/terrain.png");
-		Icon var4 = Block.portal.getBlockTextureFromSide(1);
-		float var5 = var4.getMinU();
-		float var6 = var4.getMinV();
-		float var7 = var4.getMaxU();
-		float var8 = var4.getMaxV();
-		Tessellator var9 = Tessellator.instance;
-		var9.startDrawingQuads();
-		var9.addVertexWithUV(0.0D, par3, -90.0D, var5, var8);
-		var9.addVertexWithUV(par2, par3, -90.0D, var7, var8);
-		var9.addVertexWithUV(par2, 0.0D, -90.0D, var7, var6);
-		var9.addVertexWithUV(0.0D, 0.0D, -90.0D, var5, var6);
-		var9.draw();
-		GL11.glDepthMask(true);
-		GL11.glEnable(GL11.GL_DEPTH_TEST);
-		GL11.glEnable(GL11.GL_ALPHA_TEST);
-		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 	}
 	
 	private void renderPumpkinBlur(int par1, int par2)
@@ -644,7 +747,7 @@
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		GL11.glDisable(GL11.GL_ALPHA_TEST);
-		mc.renderEngine.bindTexture("%blur%/misc/pumpkinblur.png");
+		mc.func_110434_K().func_110577_a(field_110328_d);
 		Tessellator var3 = Tessellator.instance;
 		var3.startDrawingQuads();
 		var3.addVertexWithUV(0.0D, par2, -90.0D, 0.0D, 1.0D);
@@ -674,7 +777,7 @@
 		GL11.glDepthMask(false);
 		GL11.glBlendFunc(GL11.GL_ZERO, GL11.GL_ONE_MINUS_SRC_COLOR);
 		GL11.glColor4f(prevVignetteBrightness, prevVignetteBrightness, prevVignetteBrightness, 1.0F);
-		mc.renderEngine.bindTexture("%blur%/misc/vignette.png");
+		mc.func_110434_K().func_110577_a(field_110329_b);
 		Tessellator var4 = Tessellator.instance;
 		var4.startDrawingQuads();
 		var4.addVertexWithUV(0.0D, par3, -90.0D, 0.0D, 1.0D);
@@ -690,9 +793,7 @@
 	
 	public void setRecordPlayingMessage(String par1Str)
 	{
-		recordPlaying = "Now playing: " + par1Str;
-		recordPlayingUpFor = 60;
-		recordIsPlaying = true;
+		func_110326_a("Now playing: " + par1Str, true);
 	}
 	
 	public void updateTick()
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiIngameMenu.java b/RMCClient/minecraft/net/minecraft/src/GuiIngameMenu.java
index 325b2d2..a2edba1 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiIngameMenu.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiIngameMenu.java
@@ -2,8 +2,8 @@
 
 public class GuiIngameMenu extends GuiScreen
 {
-	private int updateCounter2 = 0;
-	private int updateCounter = 0;
+	private int updateCounter2;
+	private int updateCounter;
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
 	{
@@ -50,17 +50,18 @@
 		updateCounter2 = 0;
 		buttonList.clear();
 		byte var1 = -16;
-		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + var1, StatCollector.translateToLocal("menu.returnToMenu")));
+		boolean var2 = true;
+		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + var1, I18n.func_135053_a("menu.returnToMenu")));
 		if(!mc.isIntegratedServerRunning())
 		{
-			((GuiButton) buttonList.get(0)).displayString = StatCollector.translateToLocal("menu.disconnect");
+			((GuiButton) buttonList.get(0)).displayString = I18n.func_135053_a("menu.disconnect");
 		}
-		buttonList.add(new GuiButton(4, width / 2 - 100, height / 4 + 24 + var1, StatCollector.translateToLocal("menu.returnToGame")));
-		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + var1, 98, 20, StatCollector.translateToLocal("menu.options")));
+		buttonList.add(new GuiButton(4, width / 2 - 100, height / 4 + 24 + var1, I18n.func_135053_a("menu.returnToGame")));
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + var1, 98, 20, I18n.func_135053_a("menu.options")));
 		GuiButton var3;
-		buttonList.add(var3 = new GuiButton(7, width / 2 + 2, height / 4 + 96 + var1, 98, 20, StatCollector.translateToLocal("menu.shareToLan")));
-		buttonList.add(new GuiButton(5, width / 2 - 100, height / 4 + 48 + var1, 98, 20, StatCollector.translateToLocal("gui.achievements")));
-		buttonList.add(new GuiButton(6, width / 2 + 2, height / 4 + 48 + var1, 98, 20, StatCollector.translateToLocal("gui.stats")));
+		buttonList.add(var3 = new GuiButton(7, width / 2 + 2, height / 4 + 96 + var1, 98, 20, I18n.func_135053_a("menu.shareToLan")));
+		buttonList.add(new GuiButton(5, width / 2 - 100, height / 4 + 48 + var1, 98, 20, I18n.func_135053_a("gui.achievements")));
+		buttonList.add(new GuiButton(6, width / 2 + 2, height / 4 + 48 + var1, 98, 20, I18n.func_135053_a("gui.stats")));
 		var3.enabled = mc.isSingleplayer() && !mc.getIntegratedServer().getPublic();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiInventory.java b/RMCClient/minecraft/net/minecraft/src/GuiInventory.java
index 70f8037..981f7bc 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiInventory.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiInventory.java
@@ -1,7 +1,5 @@
 package net.minecraft.src;
 
-import net.minecraft.client.Minecraft;
-
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
 
@@ -10,11 +8,11 @@
 	private float xSize_lo;
 	private float ySize_lo;
 	
-	public GuiInventory(EntityPlayer par1EntityPlayer)
+	public GuiInventory(EntityPlayer p_i1094_1_)
 	{
-		super(par1EntityPlayer.inventoryContainer);
+		super(p_i1094_1_.inventoryContainer);
 		allowUserInput = true;
-		par1EntityPlayer.addStat(AchievementList.openInventory, 1);
+		p_i1094_1_.addStat(AchievementList.openInventory, 1);
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -32,16 +30,16 @@
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/inventory.png");
+		mc.func_110434_K().func_110577_a(field_110408_a);
 		int var4 = guiLeft;
 		int var5 = guiTop;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
-		drawPlayerOnGui(mc, var4 + 51, var5 + 75, 30, var4 + 51 - xSize_lo, var5 + 75 - 50 - ySize_lo);
+		func_110423_a(var4 + 51, var5 + 75, 30, var4 + 51 - xSize_lo, var5 + 75 - 50 - ySize_lo, mc.thePlayer);
 	}
 	
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
-		fontRenderer.drawString(StatCollector.translateToLocal("container.crafting"), 86, 16, 4210752);
+		fontRenderer.drawString(I18n.func_135053_a("container.crafting"), 86, 16, 4210752);
 	}
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
@@ -71,30 +69,35 @@
 		}
 	}
 	
-	public static void drawPlayerOnGui(Minecraft par0Minecraft, int par1, int par2, int par3, float par4, float par5)
+	public static void func_110423_a(int p_110423_0_, int p_110423_1_, int p_110423_2_, float p_110423_3_, float p_110423_4_, EntityLivingBase p_110423_5_)
 	{
 		GL11.glEnable(GL11.GL_COLOR_MATERIAL);
 		GL11.glPushMatrix();
-		GL11.glTranslatef(par1, par2, 50.0F);
-		GL11.glScalef(-par3, par3, par3);
+		GL11.glTranslatef(p_110423_0_, p_110423_1_, 50.0F);
+		GL11.glScalef(-p_110423_2_, p_110423_2_, p_110423_2_);
 		GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
-		float var6 = par0Minecraft.thePlayer.renderYawOffset;
-		float var7 = par0Minecraft.thePlayer.rotationYaw;
-		float var8 = par0Minecraft.thePlayer.rotationPitch;
+		float var6 = p_110423_5_.renderYawOffset;
+		float var7 = p_110423_5_.rotationYaw;
+		float var8 = p_110423_5_.rotationPitch;
+		float var9 = p_110423_5_.prevRotationYawHead;
+		float var10 = p_110423_5_.rotationYawHead;
 		GL11.glRotatef(135.0F, 0.0F, 1.0F, 0.0F);
 		RenderHelper.enableStandardItemLighting();
 		GL11.glRotatef(-135.0F, 0.0F, 1.0F, 0.0F);
-		GL11.glRotatef(-((float) Math.atan(par5 / 40.0F)) * 20.0F, 1.0F, 0.0F, 0.0F);
-		par0Minecraft.thePlayer.renderYawOffset = (float) Math.atan(par4 / 40.0F) * 20.0F;
-		par0Minecraft.thePlayer.rotationYaw = (float) Math.atan(par4 / 40.0F) * 40.0F;
-		par0Minecraft.thePlayer.rotationPitch = -((float) Math.atan(par5 / 40.0F)) * 20.0F;
-		par0Minecraft.thePlayer.rotationYawHead = par0Minecraft.thePlayer.rotationYaw;
-		GL11.glTranslatef(0.0F, par0Minecraft.thePlayer.yOffset, 0.0F);
+		GL11.glRotatef(-((float) Math.atan(p_110423_4_ / 40.0F)) * 20.0F, 1.0F, 0.0F, 0.0F);
+		p_110423_5_.renderYawOffset = (float) Math.atan(p_110423_3_ / 40.0F) * 20.0F;
+		p_110423_5_.rotationYaw = (float) Math.atan(p_110423_3_ / 40.0F) * 40.0F;
+		p_110423_5_.rotationPitch = -((float) Math.atan(p_110423_4_ / 40.0F)) * 20.0F;
+		p_110423_5_.rotationYawHead = p_110423_5_.rotationYaw;
+		p_110423_5_.prevRotationYawHead = p_110423_5_.rotationYaw;
+		GL11.glTranslatef(0.0F, p_110423_5_.yOffset, 0.0F);
 		RenderManager.instance.playerViewY = 180.0F;
-		RenderManager.instance.renderEntityWithPosYaw(par0Minecraft.thePlayer, 0.0D, 0.0D, 0.0D, 0.0F, 1.0F);
-		par0Minecraft.thePlayer.renderYawOffset = var6;
-		par0Minecraft.thePlayer.rotationYaw = var7;
-		par0Minecraft.thePlayer.rotationPitch = var8;
+		RenderManager.instance.renderEntityWithPosYaw(p_110423_5_, 0.0D, 0.0D, 0.0D, 0.0F, 1.0F);
+		p_110423_5_.renderYawOffset = var6;
+		p_110423_5_.rotationYaw = var7;
+		p_110423_5_.rotationPitch = var8;
+		p_110423_5_.prevRotationYawHead = var9;
+		p_110423_5_.rotationYawHead = var10;
 		GL11.glPopMatrix();
 		RenderHelper.disableStandardItemLighting();
 		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiLanguage.java b/RMCClient/minecraft/net/minecraft/src/GuiLanguage.java
index bea9727..7856f55 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiLanguage.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiLanguage.java
@@ -3,15 +3,16 @@
 public class GuiLanguage extends GuiScreen
 {
 	protected GuiScreen parentGui;
-	private int updateTimer = -1;
 	private GuiSlotLanguage languageList;
 	private final GameSettings theGameSettings;
+	private final LanguageManager field_135014_d;
 	private GuiSmallButton doneButton;
 	
-	public GuiLanguage(GuiScreen par1GuiScreen, GameSettings par2GameSettings)
+	public GuiLanguage(GuiScreen p_i1043_1_, GameSettings p_i1043_2_, LanguageManager p_i1043_3_)
 	{
-		parentGui = par1GuiScreen;
-		theGameSettings = par2GameSettings;
+		parentGui = p_i1043_1_;
+		theGameSettings = p_i1043_2_;
+		field_135014_d = p_i1043_3_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -34,29 +35,21 @@
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
 		languageList.drawScreen(par1, par2, par3);
-		if(updateTimer <= 0)
-		{
-			mc.texturePackList.updateAvaliableTexturePacks();
-			updateTimer += 20;
-		}
-		StringTranslate var4 = StringTranslate.getInstance();
-		drawCenteredString(fontRenderer, var4.translateKey("options.language"), width / 2, 16, 16777215);
-		drawCenteredString(fontRenderer, "(" + var4.translateKey("options.languageWarning") + ")", width / 2, height - 56, 8421504);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("options.language"), width / 2, 16, 16777215);
+		drawCenteredString(fontRenderer, "(" + I18n.func_135053_a("options.languageWarning") + ")", width / 2, height - 56, 8421504);
 		super.drawScreen(par1, par2, par3);
 	}
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		buttonList.add(doneButton = new GuiSmallButton(6, width / 2 - 75, height - 38, var1.translateKey("gui.done")));
+		buttonList.add(doneButton = new GuiSmallButton(6, width / 2 - 75, height - 38, I18n.func_135053_a("gui.done")));
 		languageList = new GuiSlotLanguage(this);
-		languageList.registerScrollButtons(buttonList, 7, 8);
+		languageList.registerScrollButtons(7, 8);
 	}
 	
-	@Override public void updateScreen()
+	static LanguageManager func_135011_a(GuiLanguage p_135011_0_)
 	{
-		super.updateScreen();
-		--updateTimer;
+		return p_135011_0_.field_135014_d;
 	}
 	
 	static GuiSmallButton getDoneButton(GuiLanguage par0GuiLanguage)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiMainMenu.java b/RMCClient/minecraft/net/minecraft/src/GuiMainMenu.java
index 4c1334f..ddc7e34 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiMainMenu.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiMainMenu.java
@@ -1,37 +1,36 @@
 package net.minecraft.src;
 
-import java.awt.image.BufferedImage;
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.net.URI;
-import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Date;
-import java.util.List;
 import java.util.Random;
 
 import net.minecraft.client.Minecraft;
 
 import org.lwjgl.opengl.GL11;
-import org.lwjgl.util.glu.GLU;
+import org.lwjgl.util.glu.Project;
 
 public class GuiMainMenu extends GuiScreen
 {
 	private static final Random rand = new Random();
-	private float updateCounter = 0.0F;
+	private float updateCounter;
 	private String splashText = "missingno";
 	private GuiButton buttonResetDemo;
-	private int panoramaTimer = 0;
-	private int viewportTexture;
+	private int panoramaTimer;
+	private DynamicTexture viewportTexture;
 	private boolean field_96141_q = true;
-	private static boolean field_96140_r = false;
-	private static boolean field_96139_s = false;
+	private static boolean field_96140_r;
+	private static boolean field_96139_s;
 	private final Object field_104025_t = new Object();
 	private String field_92025_p;
 	private String field_104024_v;
-	private static final String[] titlePanoramaPaths = new String[] { "/title/bg/panorama0.png", "/title/bg/panorama1.png", "/title/bg/panorama2.png", "/title/bg/panorama3.png", "/title/bg/panorama4.png", "/title/bg/panorama5.png" };
+	private static final ResourceLocation field_110353_x = new ResourceLocation("texts/splashes.txt");
+	private static final ResourceLocation field_110352_y = new ResourceLocation("textures/gui/title/minecraft.png");
+	private static final ResourceLocation[] titlePanoramaPaths = new ResourceLocation[] { new ResourceLocation("textures/gui/title/background/panorama_0.png"), new ResourceLocation("textures/gui/title/background/panorama_1.png"), new ResourceLocation("textures/gui/title/background/panorama_2.png"), new ResourceLocation("textures/gui/title/background/panorama_3.png"), new ResourceLocation("textures/gui/title/background/panorama_4.png"), new ResourceLocation("textures/gui/title/background/panorama_5.png") };
 	public static final String field_96138_a = "Please click " + EnumChatFormatting.UNDERLINE + "here" + EnumChatFormatting.RESET + " for more information.";
 	private int field_92024_r;
 	private int field_92023_s;
@@ -39,6 +38,8 @@
 	private int field_92021_u;
 	private int field_92020_v;
 	private int field_92019_w;
+	private ResourceLocation field_110351_G;
+	private GuiButton field_130023_H;
 	
 	public GuiMainMenu()
 	{
@@ -47,11 +48,11 @@
 		try
 		{
 			ArrayList var2 = new ArrayList();
-			var1 = new BufferedReader(new InputStreamReader(GuiMainMenu.class.getResourceAsStream("/title/splashes.txt"), Charset.forName("UTF-8")));
+			var1 = new BufferedReader(new InputStreamReader(Minecraft.getMinecraft().func_110442_L().func_110536_a(field_110353_x).func_110527_b(), Charsets.UTF_8));
 			while((var3 = var1.readLine()) != null)
 			{
 				var3 = var3.trim();
-				if(var3.length() > 0)
+				if(!var3.isEmpty())
 				{
 					var2.add(var3);
 				}
@@ -89,10 +90,6 @@
 			field_92025_p = "" + EnumChatFormatting.BOLD + "Notice!" + EnumChatFormatting.RESET + " Java 1.5 compatibility will be dropped in Minecraft 1.6";
 			field_104024_v = "http://tinyurl.com/javappc";
 		}
-		if(field_92025_p.length() == 0)
-		{
-			new Thread(new RunnableTitleScreen(this), "1.6 Update Check Thread").start();
-		}
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -103,7 +100,7 @@
 		}
 		if(par1GuiButton.id == 5)
 		{
-			mc.displayGuiScreen(new GuiLanguage(this, mc.gameSettings));
+			mc.displayGuiScreen(new GuiLanguage(this, mc.gameSettings, mc.func_135016_M()));
 		}
 		if(par1GuiButton.id == 1)
 		{
@@ -113,9 +110,9 @@
 		{
 			mc.displayGuiScreen(new GuiMultiplayer(this));
 		}
-		if(par1GuiButton.id == 3)
+		if(par1GuiButton.id == 14 && field_130023_H.drawButton)
 		{
-			mc.displayGuiScreen(new GuiScreenOnlineServers(this));
+			func_140005_i();
 		}
 		if(par1GuiButton.id == 4)
 		{
@@ -137,22 +134,24 @@
 		}
 	}
 	
-	private void addDemoButtons(int par1, int par2, StringTranslate par3StringTranslate)
+	private void addDemoButtons(int par1, int par2)
 	{
-		buttonList.add(new GuiButton(11, width / 2 - 100, par1, par3StringTranslate.translateKey("menu.playdemo")));
-		buttonList.add(buttonResetDemo = new GuiButton(12, width / 2 - 100, par1 + par2 * 1, par3StringTranslate.translateKey("menu.resetdemo")));
-		ISaveFormat var4 = mc.getSaveLoader();
-		WorldInfo var5 = var4.getWorldInfo("Demo_World");
-		if(var5 == null)
+		buttonList.add(new GuiButton(11, width / 2 - 100, par1, I18n.func_135053_a("menu.playdemo")));
+		buttonList.add(buttonResetDemo = new GuiButton(12, width / 2 - 100, par1 + par2 * 1, I18n.func_135053_a("menu.resetdemo")));
+		ISaveFormat var3 = mc.getSaveLoader();
+		WorldInfo var4 = var3.getWorldInfo("Demo_World");
+		if(var4 == null)
 		{
 			buttonResetDemo.enabled = false;
 		}
 	}
 	
-	private void addSingleplayerMultiplayerButtons(int par1, int par2, StringTranslate par3StringTranslate)
+	private void addSingleplayerMultiplayerButtons(int par1, int par2)
 	{
-		buttonList.add(new GuiButton(1, width / 2 - 100, par1, par3StringTranslate.translateKey("menu.singleplayer")));
-		buttonList.add(new GuiButton(2, width / 2 - 100, par1 + par2 * 1, par3StringTranslate.translateKey("menu.multiplayer")));
+		buttonList.add(new GuiButton(1, width / 2 - 100, par1, I18n.func_135053_a("menu.singleplayer")));
+		buttonList.add(new GuiButton(2, width / 2 - 100, par1 + par2 * 1, I18n.func_135053_a("menu.multiplayer")));
+		buttonList.add(field_130023_H = new GuiButton(14, width / 2 - 100, par1 + par2 * 2, I18n.func_135053_a("menu.online")));
+		field_130023_H.drawButton = false;
 	}
 	
 	@Override public void confirmClicked(boolean par1, int par2)
@@ -192,7 +191,7 @@
 		GL11.glMatrixMode(GL11.GL_PROJECTION);
 		GL11.glPushMatrix();
 		GL11.glLoadIdentity();
-		GLU.gluPerspective(120.0F, 1.0F, 0.05F, 10.0F);
+		Project.gluPerspective(120.0F, 1.0F, 0.05F, 10.0F);
 		GL11.glMatrixMode(GL11.GL_MODELVIEW);
 		GL11.glPushMatrix();
 		GL11.glLoadIdentity();
@@ -236,7 +235,7 @@
 				{
 					GL11.glRotatef(-90.0F, 1.0F, 0.0F, 0.0F);
 				}
-				mc.renderEngine.bindTexture(titlePanoramaPaths[var10]);
+				mc.func_110434_K().func_110577_a(titlePanoramaPaths[var10]);
 				var4.startDrawingQuads();
 				var4.setColorRGBA_I(16777215, 255 / (var6 + 1));
 				float var11 = 0.0F;
@@ -271,7 +270,7 @@
 		byte var7 = 30;
 		drawGradientRect(0, 0, width, height, -2130706433, 16777215);
 		drawGradientRect(0, 0, width, height, 0, Integer.MIN_VALUE);
-		mc.renderEngine.bindTexture("/title/mclogo.png");
+		mc.func_110434_K().func_110577_a(field_110352_y);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		if(updateCounter < 1.0E-4D)
 		{
@@ -294,7 +293,7 @@
 		GL11.glScalef(var8, var8, var8);
 		drawCenteredString(fontRenderer, splashText, 0, -8, 16776960);
 		GL11.glPopMatrix();
-		String var9 = "Minecraft 1.5.2";
+		String var9 = "Minecraft 1.6.2";
 		if(mc.isDemo())
 		{
 			var9 = var9 + " Demo";
@@ -311,29 +310,51 @@
 		super.drawScreen(par1, par2, par3);
 	}
 	
-	private void func_96137_a(StringTranslate par1StringTranslate, int par2, int par3)
+	private void func_130020_g()
 	{
 		if(field_96141_q)
 		{
 			if(!field_96140_r)
 			{
 				field_96140_r = true;
-				new ThreadTitleScreen(this, par1StringTranslate, par2, par3).start();
+				new RunnableTitleScreen(this).start();
 			} else if(field_96139_s)
 			{
-				func_98060_b(par1StringTranslate, par2, par3);
+				func_130022_h();
 			}
 		}
 	}
 	
-	private void func_98060_b(StringTranslate par1StringTranslate, int par2, int par3)
+	private void func_130022_h()
 	{
-		buttonList.add(new GuiButton(3, width / 2 - 100, par2 + par3 * 2, par1StringTranslate.translateKey("menu.online")));
+		field_130023_H.drawButton = true;
+	}
+	
+	private void func_140005_i()
+	{
+		McoClient var1 = new McoClient(mc.func_110432_I());
+		try
+		{
+			if(var1.func_140054_c().booleanValue())
+			{
+				mc.displayGuiScreen(new GuiScreenClientOutdated(this));
+			} else
+			{
+				mc.displayGuiScreen(new GuiScreenOnlineServers(this));
+			}
+		} catch(ExceptionMcoService var3)
+		{
+			mc.getLogAgent().logSevere(var3.toString());
+		} catch(IOException var4)
+		{
+			mc.getLogAgent().logSevere(var4.getLocalizedMessage());
+		}
 	}
 	
 	@Override public void initGui()
 	{
-		viewportTexture = mc.renderEngine.allocateAndSetupTexture(new BufferedImage(256, 256, 2));
+		viewportTexture = new DynamicTexture(256, 256);
+		field_110351_G = mc.func_110434_K().func_110578_a("background", viewportTexture);
 		Calendar var1 = Calendar.getInstance();
 		var1.setTime(new Date());
 		if(var1.get(2) + 1 == 11 && var1.get(5) == 9)
@@ -352,34 +373,28 @@
 		{
 			splashText = "OOoooOOOoooo! Spooky!";
 		}
-		StringTranslate var2 = StringTranslate.getInstance();
-		int var4 = height / 4 + 48;
+		boolean var2 = true;
+		int var3 = height / 4 + 48;
 		if(mc.isDemo())
 		{
-			addDemoButtons(var4, 24, var2);
+			addDemoButtons(var3, 24);
 		} else
 		{
-			addSingleplayerMultiplayerButtons(var4, 24, var2);
+			addSingleplayerMultiplayerButtons(var3, 24);
 		}
-		func_96137_a(var2, var4, 24);
-		if(mc.hideQuitButton)
-		{
-			buttonList.add(new GuiButton(0, width / 2 - 100, var4 + 72, var2.translateKey("menu.options")));
-		} else
-		{
-			buttonList.add(new GuiButton(0, width / 2 - 100, var4 + 72 + 12, 98, 20, var2.translateKey("menu.options")));
-			buttonList.add(new GuiButton(4, width / 2 + 2, var4 + 72 + 12, 98, 20, var2.translateKey("menu.quit")));
-		}
-		buttonList.add(new GuiButtonLanguage(5, width / 2 - 124, var4 + 72 + 12));
-		Object var5 = field_104025_t;
+		func_130020_g();
+		buttonList.add(new GuiButton(0, width / 2 - 100, var3 + 72 + 12, 98, 20, I18n.func_135053_a("menu.options")));
+		buttonList.add(new GuiButton(4, width / 2 + 2, var3 + 72 + 12, 98, 20, I18n.func_135053_a("menu.quit")));
+		buttonList.add(new GuiButtonLanguage(5, width / 2 - 124, var3 + 72 + 12));
+		Object var4 = field_104025_t;
 		synchronized(field_104025_t)
 		{
 			field_92023_s = fontRenderer.getStringWidth(field_92025_p);
 			field_92024_r = fontRenderer.getStringWidth(field_96138_a);
-			int var6 = Math.max(field_92023_s, field_92024_r);
-			field_92022_t = (width - var6) / 2;
+			int var5 = Math.max(field_92023_s, field_92024_r);
+			field_92022_t = (width - var5) / 2;
 			field_92021_u = ((GuiButton) buttonList.get(0)).yPosition - 24;
-			field_92020_v = field_92022_t + var6;
+			field_92020_v = field_92022_t + var5;
 			field_92019_w = field_92021_u + 24;
 		}
 	}
@@ -437,8 +452,7 @@
 	
 	private void rotateAndBlurSkybox(float par1)
 	{
-		GL11.glBindTexture(GL11.GL_TEXTURE_2D, viewportTexture);
-		mc.renderEngine.resetBoundTexture();
+		mc.func_110434_K().func_110577_a(field_110351_G);
 		GL11.glCopyTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, 0, 0, 256, 256);
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
@@ -459,7 +473,6 @@
 		}
 		var2.draw();
 		GL11.glColorMask(true, true, true, true);
-		mc.renderEngine.resetBoundTexture();
 	}
 	
 	@Override public void updateScreen()
@@ -467,104 +480,29 @@
 		++panoramaTimer;
 	}
 	
-	static Object func_104004_a(GuiMainMenu par0GuiMainMenu)
+	static Minecraft func_110348_a(GuiMainMenu p_110348_0_)
 	{
-		return par0GuiMainMenu.field_104025_t;
+		return p_110348_0_.mc;
 	}
 	
-	static String func_104005_a(GuiMainMenu par0GuiMainMenu, String par1Str)
+	static boolean func_110349_a(boolean p_110349_0_)
 	{
-		return par0GuiMainMenu.field_92025_p = par1Str;
+		field_96139_s = p_110349_0_;
+		return p_110349_0_;
 	}
 	
-	static int func_104006_a(GuiMainMenu par0GuiMainMenu, int par1)
+	static Minecraft func_130018_c(GuiMainMenu p_130018_0_)
 	{
-		return par0GuiMainMenu.field_92023_s = par1;
+		return p_130018_0_.mc;
 	}
 	
-	static FontRenderer func_104007_d(GuiMainMenu par0GuiMainMenu)
+	static Minecraft func_130019_d(GuiMainMenu p_130019_0_)
 	{
-		return par0GuiMainMenu.fontRenderer;
+		return p_130019_0_.mc;
 	}
 	
-	static int func_104008_c(GuiMainMenu par0GuiMainMenu, int par1)
+	static void func_130021_b(GuiMainMenu p_130021_0_)
 	{
-		return par0GuiMainMenu.field_92022_t = par1;
-	}
-	
-	static int func_104009_d(GuiMainMenu par0GuiMainMenu, int par1)
-	{
-		return par0GuiMainMenu.field_92021_u = par1;
-	}
-	
-	static int func_104011_e(GuiMainMenu par0GuiMainMenu, int par1)
-	{
-		return par0GuiMainMenu.field_92020_v = par1;
-	}
-	
-	static int func_104012_f(GuiMainMenu par0GuiMainMenu, int par1)
-	{
-		return par0GuiMainMenu.field_92019_w = par1;
-	}
-	
-	static String func_104013_b(GuiMainMenu par0GuiMainMenu, String par1Str)
-	{
-		return par0GuiMainMenu.field_104024_v = par1Str;
-	}
-	
-	static int func_104014_b(GuiMainMenu par0GuiMainMenu, int par1)
-	{
-		return par0GuiMainMenu.field_92024_r = par1;
-	}
-	
-	static int func_104015_f(GuiMainMenu par0GuiMainMenu)
-	{
-		return par0GuiMainMenu.field_92024_r;
-	}
-	
-	static int func_104016_e(GuiMainMenu par0GuiMainMenu)
-	{
-		return par0GuiMainMenu.field_92023_s;
-	}
-	
-	static int func_104018_h(GuiMainMenu par0GuiMainMenu)
-	{
-		return par0GuiMainMenu.field_92022_t;
-	}
-	
-	static List func_104019_g(GuiMainMenu par0GuiMainMenu)
-	{
-		return par0GuiMainMenu.buttonList;
-	}
-	
-	static int func_104020_i(GuiMainMenu par0GuiMainMenu)
-	{
-		return par0GuiMainMenu.field_92021_u;
-	}
-	
-	static FontRenderer func_104022_c(GuiMainMenu par0GuiMainMenu)
-	{
-		return par0GuiMainMenu.fontRenderer;
-	}
-	
-	static String func_104023_b(GuiMainMenu par0GuiMainMenu)
-	{
-		return par0GuiMainMenu.field_92025_p;
-	}
-	
-	static Minecraft func_98058_a(GuiMainMenu par0GuiMainMenu)
-	{
-		return par0GuiMainMenu.mc;
-	}
-	
-	static boolean func_98059_a(boolean par0)
-	{
-		field_96139_s = par0;
-		return par0;
-	}
-	
-	static void func_98061_a(GuiMainMenu par0GuiMainMenu, StringTranslate par1StringTranslate, int par2, int par3)
-	{
-		par0GuiMainMenu.func_98060_b(par1StringTranslate, par2, par3);
+		p_130021_0_.func_130022_h();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiMemoryErrorScreen.java b/RMCClient/minecraft/net/minecraft/src/GuiMemoryErrorScreen.java
index a1e542d..be00ab4 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiMemoryErrorScreen.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiMemoryErrorScreen.java
@@ -31,10 +31,9 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		buttonList.clear();
-		buttonList.add(new GuiSmallButton(0, width / 2 - 155, height / 4 + 120 + 12, var1.translateKey("gui.toMenu")));
-		buttonList.add(new GuiSmallButton(1, width / 2 - 155 + 160, height / 4 + 120 + 12, var1.translateKey("menu.quit")));
+		buttonList.add(new GuiSmallButton(0, width / 2 - 155, height / 4 + 120 + 12, I18n.func_135053_a("gui.toMenu")));
+		buttonList.add(new GuiSmallButton(1, width / 2 - 155 + 160, height / 4 + 120 + 12, I18n.func_135053_a("menu.quit")));
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiMerchant.java b/RMCClient/minecraft/net/minecraft/src/GuiMerchant.java
index 93a402a..8a6674e 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiMerchant.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiMerchant.java
@@ -8,17 +8,18 @@
 
 public class GuiMerchant extends GuiContainer
 {
+	private static final ResourceLocation field_110418_t = new ResourceLocation("textures/gui/container/villager.png");
 	private IMerchant theIMerchant;
 	private GuiButtonMerchant nextRecipeButtonIndex;
 	private GuiButtonMerchant previousRecipeButtonIndex;
-	private int currentRecipeIndex = 0;
+	private int currentRecipeIndex;
 	private String field_94082_v;
 	
-	public GuiMerchant(InventoryPlayer par1, IMerchant par2, World par3World, String par4)
+	public GuiMerchant(InventoryPlayer p_i1096_1_, IMerchant p_i1096_2_, World p_i1096_3_, String p_i1096_4_)
 	{
-		super(new ContainerMerchant(par1, par2, par3World));
-		theIMerchant = par2;
-		field_94082_v = par4 != null && par4.length() >= 1 ? par4 : StatCollector.translateToLocal("entity.Villager.name");
+		super(new ContainerMerchant(p_i1096_1_, p_i1096_2_, p_i1096_3_));
+		theIMerchant = p_i1096_2_;
+		field_94082_v = p_i1096_4_ != null && p_i1096_4_.length() >= 1 ? p_i1096_4_ : I18n.func_135053_a("entity.Villager.name");
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -52,7 +53,7 @@
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/trading.png");
+		mc.func_110434_K().func_110577_a(field_110418_t);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
@@ -63,7 +64,7 @@
 			MerchantRecipe var8 = (MerchantRecipe) var6.get(var7);
 			if(var8.func_82784_g())
 			{
-				mc.renderEngine.bindTexture("/gui/trading.png");
+				mc.func_110434_K().func_110577_a(field_110418_t);
 				GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 				GL11.glDisable(GL11.GL_LIGHTING);
 				drawTexturedModalRect(guiLeft + 83, guiTop + 21, 212, 0, 28, 21);
@@ -75,7 +76,7 @@
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
 		fontRenderer.drawString(field_94082_v, xSize / 2 - fontRenderer.getStringWidth(field_94082_v) / 2, 6, 4210752);
-		fontRenderer.drawString(StatCollector.translateToLocal("container.inventory"), 8, ySize - 96 + 2, 4210752);
+		fontRenderer.drawString(I18n.func_135053_a("container.inventory"), 8, ySize - 96 + 2, 4210752);
 	}
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
@@ -98,15 +99,15 @@
 			GL11.glEnable(GL11.GL_COLOR_MATERIAL);
 			GL11.glEnable(GL11.GL_LIGHTING);
 			itemRenderer.zLevel = 100.0F;
-			itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, var9, var5 + 36, var6 + 24);
-			itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.renderEngine, var9, var5 + 36, var6 + 24);
+			itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), var9, var5 + 36, var6 + 24);
+			itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.func_110434_K(), var9, var5 + 36, var6 + 24);
 			if(var10 != null)
 			{
-				itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, var10, var5 + 62, var6 + 24);
-				itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.renderEngine, var10, var5 + 62, var6 + 24);
+				itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), var10, var5 + 62, var6 + 24);
+				itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.func_110434_K(), var10, var5 + 62, var6 + 24);
 			}
-			itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.renderEngine, var11, var5 + 120, var6 + 24);
-			itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.renderEngine, var11, var5 + 120, var6 + 24);
+			itemRenderer.renderItemAndEffectIntoGUI(fontRenderer, mc.func_110434_K(), var11, var5 + 120, var6 + 24);
+			itemRenderer.renderItemOverlayIntoGUI(fontRenderer, mc.func_110434_K(), var11, var5 + 120, var6 + 24);
 			itemRenderer.zLevel = 0.0F;
 			GL11.glDisable(GL11.GL_LIGHTING);
 			if(isPointInRegion(36, 24, 16, 16, par1, par2))
@@ -152,4 +153,9 @@
 			previousRecipeButtonIndex.enabled = currentRecipeIndex > 0;
 		}
 	}
+	
+	static ResourceLocation func_110417_h()
+	{
+		return field_110418_t;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiMultiplayer.java b/RMCClient/minecraft/net/minecraft/src/GuiMultiplayer.java
index 126f380..4a0f319 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiMultiplayer.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiMultiplayer.java
@@ -12,7 +12,7 @@
 
 public class GuiMultiplayer extends GuiScreen
 {
-	private static int threadsPending = 0;
+	private static int threadsPending;
 	private static Object lock = new Object();
 	private GuiScreen parentScreen;
 	private GuiSlotServer serverSlotContainer;
@@ -21,21 +21,21 @@
 	private GuiButton field_96289_p;
 	private GuiButton buttonSelect;
 	private GuiButton buttonDelete;
-	private boolean deleteClicked = false;
-	private boolean addClicked = false;
-	private boolean editClicked = false;
-	private boolean directClicked = false;
-	private String lagTooltip = null;
-	private ServerData theServerData = null;
+	private boolean deleteClicked;
+	private boolean addClicked;
+	private boolean editClicked;
+	private boolean directClicked;
+	private String lagTooltip;
+	private ServerData theServerData;
 	private LanServerList localNetworkServerList;
 	private ThreadLanServerFind localServerFindThread;
 	private int ticksOpened;
 	private boolean field_74024_A;
 	private List listofLanServers = Collections.emptyList();
 	
-	public GuiMultiplayer(GuiScreen par1GuiScreen)
+	public GuiMultiplayer(GuiScreen p_i1040_1_)
 	{
-		parentScreen = par1GuiScreen;
+		parentScreen = p_i1040_1_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -48,13 +48,12 @@
 				if(var2 != null)
 				{
 					deleteClicked = true;
-					StringTranslate var3 = StringTranslate.getInstance();
-					String var4 = var3.translateKey("selectServer.deleteQuestion");
-					String var5 = "\'" + var2 + "\' " + var3.translateKey("selectServer.deleteWarning");
-					String var6 = var3.translateKey("selectServer.deleteButton");
-					String var7 = var3.translateKey("gui.cancel");
-					GuiYesNo var8 = new GuiYesNo(this, var4, var5, var6, var7, selectedServer);
-					mc.displayGuiScreen(var8);
+					String var3 = I18n.func_135053_a("selectServer.deleteQuestion");
+					String var4 = "\'" + var2 + "\' " + I18n.func_135053_a("selectServer.deleteWarning");
+					String var5 = I18n.func_135053_a("selectServer.deleteButton");
+					String var6 = I18n.func_135053_a("gui.cancel");
+					GuiYesNo var7 = new GuiYesNo(this, var3, var4, var5, var6, selectedServer);
+					mc.displayGuiScreen(var7);
 				}
 			} else if(par1GuiButton.id == 1)
 			{
@@ -62,17 +61,17 @@
 			} else if(par1GuiButton.id == 4)
 			{
 				directClicked = true;
-				mc.displayGuiScreen(new GuiScreenServerList(this, theServerData = new ServerData(StatCollector.translateToLocal("selectServer.defaultName"), "")));
+				mc.displayGuiScreen(new GuiScreenServerList(this, theServerData = new ServerData(I18n.func_135053_a("selectServer.defaultName"), "")));
 			} else if(par1GuiButton.id == 3)
 			{
 				addClicked = true;
-				mc.displayGuiScreen(new GuiScreenAddServer(this, theServerData = new ServerData(StatCollector.translateToLocal("selectServer.defaultName"), "")));
+				mc.displayGuiScreen(new GuiScreenAddServer(this, theServerData = new ServerData(I18n.func_135053_a("selectServer.defaultName"), "")));
 			} else if(par1GuiButton.id == 7)
 			{
 				editClicked = true;
-				ServerData var9 = internetServerList.getServerData(selectedServer);
-				theServerData = new ServerData(var9.serverName, var9.serverIP);
-				theServerData.setHideAddress(var9.isHidingAddress());
+				ServerData var8 = internetServerList.getServerData(selectedServer);
+				theServerData = new ServerData(var8.serverName, var8.serverIP);
+				theServerData.setHideAddress(var8.isHidingAddress());
 				mc.displayGuiScreen(new GuiScreenAddServer(this, theServerData));
 			} else if(par1GuiButton.id == 0)
 			{
@@ -142,10 +141,9 @@
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
 		lagTooltip = null;
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
 		serverSlotContainer.drawScreen(par1, par2, par3);
-		drawCenteredString(fontRenderer, var4.translateKey("multiplayer.title"), width / 2, 20, 16777215);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("multiplayer.title"), width / 2, 20, 16777215);
 		super.drawScreen(par1, par2, par3);
 		if(lagTooltip != null)
 		{
@@ -193,18 +191,17 @@
 	
 	public void initGuiControls()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		buttonList.add(field_96289_p = new GuiButton(7, width / 2 - 154, height - 28, 70, 20, var1.translateKey("selectServer.edit")));
-		buttonList.add(buttonDelete = new GuiButton(2, width / 2 - 74, height - 28, 70, 20, var1.translateKey("selectServer.delete")));
-		buttonList.add(buttonSelect = new GuiButton(1, width / 2 - 154, height - 52, 100, 20, var1.translateKey("selectServer.select")));
-		buttonList.add(new GuiButton(4, width / 2 - 50, height - 52, 100, 20, var1.translateKey("selectServer.direct")));
-		buttonList.add(new GuiButton(3, width / 2 + 4 + 50, height - 52, 100, 20, var1.translateKey("selectServer.add")));
-		buttonList.add(new GuiButton(8, width / 2 + 4, height - 28, 70, 20, var1.translateKey("selectServer.refresh")));
-		buttonList.add(new GuiButton(0, width / 2 + 4 + 76, height - 28, 75, 20, var1.translateKey("gui.cancel")));
-		boolean var2 = selectedServer >= 0 && selectedServer < serverSlotContainer.getSize();
-		buttonSelect.enabled = var2;
-		field_96289_p.enabled = var2;
-		buttonDelete.enabled = var2;
+		buttonList.add(field_96289_p = new GuiButton(7, width / 2 - 154, height - 28, 70, 20, I18n.func_135053_a("selectServer.edit")));
+		buttonList.add(buttonDelete = new GuiButton(2, width / 2 - 74, height - 28, 70, 20, I18n.func_135053_a("selectServer.delete")));
+		buttonList.add(buttonSelect = new GuiButton(1, width / 2 - 154, height - 52, 100, 20, I18n.func_135053_a("selectServer.select")));
+		buttonList.add(new GuiButton(4, width / 2 - 50, height - 52, 100, 20, I18n.func_135053_a("selectServer.direct")));
+		buttonList.add(new GuiButton(3, width / 2 + 4 + 50, height - 52, 100, 20, I18n.func_135053_a("selectServer.add")));
+		buttonList.add(new GuiButton(8, width / 2 + 4, height - 28, 70, 20, I18n.func_135053_a("selectServer.refresh")));
+		buttonList.add(new GuiButton(0, width / 2 + 4 + 76, height - 28, 75, 20, I18n.func_135053_a("gui.cancel")));
+		boolean var1 = selectedServer >= 0 && selectedServer < serverSlotContainer.getSize();
+		buttonSelect.enabled = var1;
+		field_96289_p.enabled = var1;
+		buttonDelete.enabled = var1;
 	}
 	
 	private void joinServer(int par1)
@@ -245,7 +242,7 @@
 				}
 			} else if(isShiftKeyDown() && par2 == 208)
 			{
-				if(var3 < internetServerList.countServers() - 1)
+				if(var3 >= 0 & var3 < internetServerList.countServers() - 1)
 				{
 					internetServerList.swapServers(var3, var3 + 1);
 					++selectedServer;
@@ -254,12 +251,12 @@
 						serverSlotContainer.func_77208_b(serverSlotContainer.slotHeight);
 					}
 				}
-			} else if(par1 == 13)
-			{
-				actionPerformed((GuiButton) buttonList.get(2));
-			} else
+			} else if(par2 != 28 && par2 != 156)
 			{
 				super.keyTyped(par1, par2);
+			} else
+			{
+				actionPerformed((GuiButton) buttonList.get(2));
 			}
 		}
 	}
@@ -295,9 +292,9 @@
 		par0GuiMultiplayer.joinServer(par1);
 	}
 	
-	private static void func_74017_b(ServerData par1ServerData) throws IOException
+	private static void func_74017_b(ServerData p_74017_0_) throws IOException
 	{
-		ServerAddress var1 = ServerAddress.func_78860_a(par1ServerData.serverIP);
+		ServerAddress var1 = ServerAddress.func_78860_a(p_74017_0_.serverIP);
 		Socket var2 = null;
 		DataInputStream var3 = null;
 		DataOutputStream var4 = null;
@@ -310,70 +307,71 @@
 			var2.connect(new InetSocketAddress(var1.getIP(), var1.getPort()), 3000);
 			var3 = new DataInputStream(var2.getInputStream());
 			var4 = new DataOutputStream(var2.getOutputStream());
-			var4.write(254);
-			var4.write(1);
+			Packet254ServerPing var5 = new Packet254ServerPing(74, var1.getIP(), var1.getPort());
+			var4.writeByte(var5.getPacketId());
+			var5.writePacketData(var4);
 			if(var3.read() != 255) throw new IOException("Bad message");
-			String var5 = Packet.readString(var3, 256);
-			char[] var6 = var5.toCharArray();
-			for(int var7 = 0; var7 < var6.length; ++var7)
+			String var6 = Packet.readString(var3, 256);
+			char[] var7 = var6.toCharArray();
+			for(int var8 = 0; var8 < var7.length; ++var8)
 			{
-				if(var6[var7] != 167 && var6[var7] != 0 && ChatAllowedCharacters.allowedCharacters.indexOf(var6[var7]) < 0)
+				if(var7[var8] != 167 && var7[var8] != 0 && ChatAllowedCharacters.allowedCharacters.indexOf(var7[var8]) < 0)
 				{
-					var6[var7] = 63;
+					var7[var8] = 63;
 				}
 			}
-			var5 = new String(var6);
-			int var8;
+			var6 = new String(var7);
 			int var9;
-			String[] var26;
-			if(var5.startsWith("\u00a7") && var5.length() > 1)
+			int var10;
+			String[] var27;
+			if(var6.startsWith("\u00a7") && var6.length() > 1)
 			{
-				var26 = var5.substring(1).split("\u0000");
-				if(MathHelper.parseIntWithDefault(var26[0], 0) == 1)
+				var27 = var6.substring(1).split("\u0000");
+				if(MathHelper.parseIntWithDefault(var27[0], 0) == 1)
 				{
-					par1ServerData.serverMOTD = var26[3];
-					par1ServerData.field_82821_f = MathHelper.parseIntWithDefault(var26[1], par1ServerData.field_82821_f);
-					par1ServerData.gameVersion = var26[2];
-					var8 = MathHelper.parseIntWithDefault(var26[4], 0);
-					var9 = MathHelper.parseIntWithDefault(var26[5], 0);
-					if(var8 >= 0 && var9 >= 0)
+					p_74017_0_.serverMOTD = var27[3];
+					p_74017_0_.field_82821_f = MathHelper.parseIntWithDefault(var27[1], p_74017_0_.field_82821_f);
+					p_74017_0_.gameVersion = var27[2];
+					var9 = MathHelper.parseIntWithDefault(var27[4], 0);
+					var10 = MathHelper.parseIntWithDefault(var27[5], 0);
+					if(var9 >= 0 && var10 >= 0)
 					{
-						par1ServerData.populationInfo = EnumChatFormatting.GRAY + "" + var8 + "" + EnumChatFormatting.DARK_GRAY + "/" + EnumChatFormatting.GRAY + var9;
+						p_74017_0_.populationInfo = EnumChatFormatting.GRAY + "" + var9 + "" + EnumChatFormatting.DARK_GRAY + "/" + EnumChatFormatting.GRAY + var10;
 					} else
 					{
-						par1ServerData.populationInfo = "" + EnumChatFormatting.DARK_GRAY + "???";
+						p_74017_0_.populationInfo = "" + EnumChatFormatting.DARK_GRAY + "???";
 					}
 				} else
 				{
-					par1ServerData.gameVersion = "???";
-					par1ServerData.serverMOTD = "" + EnumChatFormatting.DARK_GRAY + "???";
-					par1ServerData.field_82821_f = 62;
-					par1ServerData.populationInfo = "" + EnumChatFormatting.DARK_GRAY + "???";
+					p_74017_0_.gameVersion = "???";
+					p_74017_0_.serverMOTD = "" + EnumChatFormatting.DARK_GRAY + "???";
+					p_74017_0_.field_82821_f = 75;
+					p_74017_0_.populationInfo = "" + EnumChatFormatting.DARK_GRAY + "???";
 				}
 			} else
 			{
-				var26 = var5.split("\u00a7");
-				var5 = var26[0];
-				var8 = -1;
+				var27 = var6.split("\u00a7");
+				var6 = var27[0];
 				var9 = -1;
+				var10 = -1;
 				try
 				{
-					var8 = Integer.parseInt(var26[1]);
-					var9 = Integer.parseInt(var26[2]);
-				} catch(Exception var24)
+					var9 = Integer.parseInt(var27[1]);
+					var10 = Integer.parseInt(var27[2]);
+				} catch(Exception var25)
 				{
 					;
 				}
-				par1ServerData.serverMOTD = EnumChatFormatting.GRAY + var5;
-				if(var8 >= 0 && var9 > 0)
+				p_74017_0_.serverMOTD = EnumChatFormatting.GRAY + var6;
+				if(var9 >= 0 && var10 > 0)
 				{
-					par1ServerData.populationInfo = EnumChatFormatting.GRAY + "" + var8 + "" + EnumChatFormatting.DARK_GRAY + "/" + EnumChatFormatting.GRAY + var9;
+					p_74017_0_.populationInfo = EnumChatFormatting.GRAY + "" + var9 + "" + EnumChatFormatting.DARK_GRAY + "/" + EnumChatFormatting.GRAY + var10;
 				} else
 				{
-					par1ServerData.populationInfo = "" + EnumChatFormatting.DARK_GRAY + "???";
+					p_74017_0_.populationInfo = "" + EnumChatFormatting.DARK_GRAY + "???";
 				}
-				par1ServerData.gameVersion = "1.3";
-				par1ServerData.field_82821_f = 60;
+				p_74017_0_.gameVersion = "1.3";
+				p_74017_0_.field_82821_f = 73;
 			}
 		} finally
 		{
@@ -383,7 +381,7 @@
 				{
 					var3.close();
 				}
-			} catch(Throwable var23)
+			} catch(Throwable var24)
 			{
 				;
 			}
@@ -393,7 +391,7 @@
 				{
 					var4.close();
 				}
-			} catch(Throwable var22)
+			} catch(Throwable var23)
 			{
 				;
 			}
@@ -403,7 +401,7 @@
 				{
 					var2.close();
 				}
-			} catch(Throwable var21)
+			} catch(Throwable var22)
 			{
 				;
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiNewChat.java b/RMCClient/minecraft/net/minecraft/src/GuiNewChat.java
index 9590ed4..465d1b1 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiNewChat.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiNewChat.java
@@ -14,12 +14,12 @@
 	private final List sentMessages = new ArrayList();
 	private final List chatLines = new ArrayList();
 	private final List field_96134_d = new ArrayList();
-	private int field_73768_d = 0;
-	private boolean field_73769_e = false;
+	private int field_73768_d;
+	private boolean field_73769_e;
 	
-	public GuiNewChat(Minecraft par1Minecraft)
+	public GuiNewChat(Minecraft p_i1022_1_)
 	{
-		mc = par1Minecraft;
+		mc = p_i1022_1_;
 	}
 	
 	public void addToSentMessages(String par1Str)
@@ -32,7 +32,7 @@
 	
 	public void addTranslatedMessage(String par1Str, Object ... par2ArrayOfObj)
 	{
-		printChatMessage(StringTranslate.getInstance().translateKeyFormat(par1Str, par2ArrayOfObj));
+		printChatMessage(I18n.func_135052_a(par1Str, par2ArrayOfObj));
 	}
 	
 	public void clearChatMessages()
@@ -262,7 +262,7 @@
 	public void printChatMessageWithOptionalDeletion(String par1Str, int par2)
 	{
 		func_96129_a(par1Str, par2, mc.ingameGUI.getUpdateCounter(), false);
-		mc.getLogAgent().logInfo("[CHAT] " + par1Str);
+		mc.getLogAgent().logInfo("[CHAT] " + EnumChatFormatting.func_110646_a(par1Str));
 	}
 	
 	public void resetScroll()
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiOptions.java b/RMCClient/minecraft/net/minecraft/src/GuiOptions.java
index b105832..b7d9335 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiOptions.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiOptions.java
@@ -7,10 +7,10 @@
 	private final GameSettings options;
 	protected String screenTitle = "Options";
 	
-	public GuiOptions(GuiScreen par1GuiScreen, GameSettings par2GameSettings)
+	public GuiOptions(GuiScreen p_i1046_1_, GameSettings p_i1046_2_)
 	{
-		parentScreen = par1GuiScreen;
-		options = par2GameSettings;
+		parentScreen = p_i1046_1_;
+		options = p_i1046_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -35,7 +35,7 @@
 			if(par1GuiButton.id == 102)
 			{
 				mc.gameSettings.saveOptions();
-				mc.displayGuiScreen(new GuiLanguage(this, options));
+				mc.displayGuiScreen(new GuiLanguage(this, options, mc.func_135016_M()));
 			}
 			if(par1GuiButton.id == 103)
 			{
@@ -55,7 +55,7 @@
 			if(par1GuiButton.id == 105)
 			{
 				mc.gameSettings.saveOptions();
-				mc.displayGuiScreen(new GuiTexturePacks(this, options));
+				mc.displayGuiScreen(new GuiScreenTemporaryResourcePackSelect(this, options));
 			}
 		}
 	}
@@ -69,35 +69,34 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		int var2 = 0;
-		screenTitle = var1.translateKey("options.title");
-		EnumOptions[] var3 = relevantOptions;
-		int var4 = var3.length;
-		for(int var5 = 0; var5 < var4; ++var5)
+		int var1 = 0;
+		screenTitle = I18n.func_135053_a("options.title");
+		EnumOptions[] var2 = relevantOptions;
+		int var3 = var2.length;
+		for(int var4 = 0; var4 < var3; ++var4)
 		{
-			EnumOptions var6 = var3[var5];
-			if(var6.getEnumFloat())
+			EnumOptions var5 = var2[var4];
+			if(var5.getEnumFloat())
 			{
-				buttonList.add(new GuiSlider(var6.returnEnumOrdinal(), width / 2 - 155 + var2 % 2 * 160, height / 6 - 12 + 24 * (var2 >> 1), var6, options.getKeyBinding(var6), options.getOptionFloatValue(var6)));
+				buttonList.add(new GuiSlider(var5.returnEnumOrdinal(), width / 2 - 155 + var1 % 2 * 160, height / 6 - 12 + 24 * (var1 >> 1), var5, options.getKeyBinding(var5), options.getOptionFloatValue(var5)));
 			} else
 			{
-				GuiSmallButton var7 = new GuiSmallButton(var6.returnEnumOrdinal(), width / 2 - 155 + var2 % 2 * 160, height / 6 - 12 + 24 * (var2 >> 1), var6, options.getKeyBinding(var6));
-				if(var6 == EnumOptions.DIFFICULTY && mc.theWorld != null && mc.theWorld.getWorldInfo().isHardcoreModeEnabled())
+				GuiSmallButton var6 = new GuiSmallButton(var5.returnEnumOrdinal(), width / 2 - 155 + var1 % 2 * 160, height / 6 - 12 + 24 * (var1 >> 1), var5, options.getKeyBinding(var5));
+				if(var5 == EnumOptions.DIFFICULTY && mc.theWorld != null && mc.theWorld.getWorldInfo().isHardcoreModeEnabled())
 				{
-					var7.enabled = false;
-					var7.displayString = StatCollector.translateToLocal("options.difficulty") + ": " + StatCollector.translateToLocal("options.difficulty.hardcore");
+					var6.enabled = false;
+					var6.displayString = I18n.func_135053_a("options.difficulty") + ": " + I18n.func_135053_a("options.difficulty.hardcore");
 				}
-				buttonList.add(var7);
+				buttonList.add(var6);
 			}
-			++var2;
+			++var1;
 		}
-		buttonList.add(new GuiButton(101, width / 2 - 152, height / 6 + 96 - 6, 150, 20, var1.translateKey("options.video")));
-		buttonList.add(new GuiButton(100, width / 2 + 2, height / 6 + 96 - 6, 150, 20, var1.translateKey("options.controls")));
-		buttonList.add(new GuiButton(102, width / 2 - 152, height / 6 + 120 - 6, 150, 20, var1.translateKey("options.language")));
-		buttonList.add(new GuiButton(103, width / 2 + 2, height / 6 + 120 - 6, 150, 20, var1.translateKey("options.multiplayer.title")));
-		buttonList.add(new GuiButton(105, width / 2 - 152, height / 6 + 144 - 6, 150, 20, var1.translateKey("options.texture.pack")));
-		buttonList.add(new GuiButton(104, width / 2 + 2, height / 6 + 144 - 6, 150, 20, var1.translateKey("options.snooper.view")));
-		buttonList.add(new GuiButton(200, width / 2 - 100, height / 6 + 168, var1.translateKey("gui.done")));
+		buttonList.add(new GuiButton(101, width / 2 - 152, height / 6 + 96 - 6, 150, 20, I18n.func_135053_a("options.video")));
+		buttonList.add(new GuiButton(100, width / 2 + 2, height / 6 + 96 - 6, 150, 20, I18n.func_135053_a("options.controls")));
+		buttonList.add(new GuiButton(102, width / 2 - 152, height / 6 + 120 - 6, 150, 20, I18n.func_135053_a("options.language")));
+		buttonList.add(new GuiButton(103, width / 2 + 2, height / 6 + 120 - 6, 150, 20, I18n.func_135053_a("options.multiplayer.title")));
+		buttonList.add(new GuiButton(105, width / 2 - 152, height / 6 + 144 - 6, 150, 20, I18n.func_135053_a("options.resourcepack")));
+		buttonList.add(new GuiButton(104, width / 2 + 2, height / 6 + 144 - 6, 150, 20, I18n.func_135053_a("options.snooper.view")));
+		buttonList.add(new GuiButton(200, width / 2 - 100, height / 6 + 168, I18n.func_135053_a("gui.done")));
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiParticle.java b/RMCClient/minecraft/net/minecraft/src/GuiParticle.java
deleted file mode 100644
index 58ca0fd..0000000
--- a/RMCClient/minecraft/net/minecraft/src/GuiParticle.java
+++ /dev/null
@@ -1,50 +0,0 @@
-package net.minecraft.src;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import net.minecraft.client.Minecraft;
-
-import org.lwjgl.opengl.GL11;
-
-public class GuiParticle extends Gui
-{
-	private List particles = new ArrayList();
-	private Minecraft mc;
-	
-	public GuiParticle(Minecraft par1Minecraft)
-	{
-		mc = par1Minecraft;
-	}
-	
-	public void draw(float par1)
-	{
-		mc.renderEngine.bindTexture("/gui/particles.png");
-		for(int var2 = 0; var2 < particles.size(); ++var2)
-		{
-			Particle var3 = (Particle) particles.get(var2);
-			int var4 = (int) (var3.prevPosX + (var3.posX - var3.prevPosX) * par1 - 4.0D);
-			int var5 = (int) (var3.prevPosY + (var3.posY - var3.prevPosY) * par1 - 4.0D);
-			float var6 = (float) (var3.prevTintAlpha + (var3.tintAlpha - var3.prevTintAlpha) * par1);
-			float var7 = (float) (var3.prevTintRed + (var3.tintRed - var3.prevTintRed) * par1);
-			float var8 = (float) (var3.prevTintGreen + (var3.tintGreen - var3.prevTintGreen) * par1);
-			float var9 = (float) (var3.prevTintBlue + (var3.tintBlue - var3.prevTintBlue) * par1);
-			GL11.glColor4f(var7, var8, var9, var6);
-			drawTexturedModalRect(var4, var5, 40, 0, 8, 8);
-		}
-	}
-	
-	public void update()
-	{
-		for(int var1 = 0; var1 < particles.size(); ++var1)
-		{
-			Particle var2 = (Particle) particles.get(var1);
-			var2.preUpdate();
-			var2.update(this);
-			if(var2.isDead)
-			{
-				particles.remove(var1--);
-			}
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiPlayerInfo.java b/RMCClient/minecraft/net/minecraft/src/GuiPlayerInfo.java
index f73b446..61b70a9 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiPlayerInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiPlayerInfo.java
@@ -6,9 +6,9 @@
 	private final String nameinLowerCase;
 	public int responseTime;
 	
-	public GuiPlayerInfo(String par1Str)
+	public GuiPlayerInfo(String p_i1190_1_)
 	{
-		name = par1Str;
-		nameinLowerCase = par1Str.toLowerCase();
+		name = p_i1190_1_;
+		nameinLowerCase = p_i1190_1_.toLowerCase();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiProgress.java b/RMCClient/minecraft/net/minecraft/src/GuiProgress.java
deleted file mode 100644
index 5c45abe..0000000
--- a/RMCClient/minecraft/net/minecraft/src/GuiProgress.java
+++ /dev/null
@@ -1,50 +0,0 @@
-package net.minecraft.src;
-
-public class GuiProgress extends GuiScreen implements IProgressUpdate
-{
-	private String progressMessage = "";
-	private String workingMessage = "";
-	private int currentProgress = 0;
-	private boolean noMoreProgress;
-	
-	@Override public void displayProgressMessage(String par1Str)
-	{
-		resetProgressAndMessage(par1Str);
-	}
-	
-	@Override public void drawScreen(int par1, int par2, float par3)
-	{
-		if(noMoreProgress)
-		{
-			mc.displayGuiScreen((GuiScreen) null);
-		} else
-		{
-			drawDefaultBackground();
-			drawCenteredString(fontRenderer, progressMessage, width / 2, 70, 16777215);
-			drawCenteredString(fontRenderer, workingMessage + " " + currentProgress + "%", width / 2, 90, 16777215);
-			super.drawScreen(par1, par2, par3);
-		}
-	}
-	
-	@Override public void onNoMoreProgress()
-	{
-		noMoreProgress = true;
-	}
-	
-	@Override public void resetProgresAndWorkingMessage(String par1Str)
-	{
-		workingMessage = par1Str;
-		setLoadingProgress(0);
-	}
-	
-	@Override public void resetProgressAndMessage(String par1Str)
-	{
-		progressMessage = par1Str;
-		resetProgresAndWorkingMessage("Working...");
-	}
-	
-	@Override public void setLoadingProgress(int par1)
-	{
-		currentProgress = par1;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiRenameWorld.java b/RMCClient/minecraft/net/minecraft/src/GuiRenameWorld.java
index bd475c8..9ada3d1 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiRenameWorld.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiRenameWorld.java
@@ -8,10 +8,10 @@
 	private GuiTextField theGuiTextField;
 	private final String worldName;
 	
-	public GuiRenameWorld(GuiScreen par1GuiScreen, String par2Str)
+	public GuiRenameWorld(GuiScreen p_i1050_1_, String p_i1050_2_)
 	{
-		parentGuiScreen = par1GuiScreen;
-		worldName = par2Str;
+		parentGuiScreen = p_i1050_1_;
+		worldName = p_i1050_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -32,34 +32,32 @@
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey("selectWorld.renameTitle"), width / 2, height / 4 - 60 + 20, 16777215);
-		drawString(fontRenderer, var4.translateKey("selectWorld.enterName"), width / 2 - 100, 47, 10526880);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("selectWorld.renameTitle"), width / 2, 20, 16777215);
+		drawString(fontRenderer, I18n.func_135053_a("selectWorld.enterName"), width / 2 - 100, 47, 10526880);
 		theGuiTextField.drawTextBox();
 		super.drawScreen(par1, par2, par3);
 	}
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, var1.translateKey("selectWorld.renameButton")));
-		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.cancel")));
-		ISaveFormat var2 = mc.getSaveLoader();
-		WorldInfo var3 = var2.getWorldInfo(worldName);
-		String var4 = var3.getWorldName();
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, I18n.func_135053_a("selectWorld.renameButton")));
+		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, I18n.func_135053_a("gui.cancel")));
+		ISaveFormat var1 = mc.getSaveLoader();
+		WorldInfo var2 = var1.getWorldInfo(worldName);
+		String var3 = var2.getWorldName();
 		theGuiTextField = new GuiTextField(fontRenderer, width / 2 - 100, 60, 200, 20);
 		theGuiTextField.setFocused(true);
-		theGuiTextField.setText(var4);
+		theGuiTextField.setText(var3);
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
 	{
 		theGuiTextField.textboxKeyTyped(par1, par2);
 		((GuiButton) buttonList.get(0)).enabled = theGuiTextField.getText().trim().length() > 0;
-		if(par1 == 13)
+		if(par2 == 28 || par2 == 156)
 		{
 			actionPerformed((GuiButton) buttonList.get(0));
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiRepair.java b/RMCClient/minecraft/net/minecraft/src/GuiRepair.java
index 4749024..532f582 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiRepair.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiRepair.java
@@ -9,21 +9,22 @@
 
 public class GuiRepair extends GuiContainer implements ICrafting
 {
+	private static final ResourceLocation field_110429_t = new ResourceLocation("textures/gui/container/anvil.png");
 	private ContainerRepair repairContainer;
 	private GuiTextField itemNameField;
 	private InventoryPlayer field_82325_q;
 	
-	public GuiRepair(InventoryPlayer par1, World par2World, int par3, int par4, int par5)
+	public GuiRepair(InventoryPlayer p_i1073_1_, World p_i1073_2_, int p_i1073_3_, int p_i1073_4_, int p_i1073_5_)
 	{
-		super(new ContainerRepair(par1, par2World, par3, par4, par5, Minecraft.getMinecraft().thePlayer));
-		field_82325_q = par1;
+		super(new ContainerRepair(p_i1073_1_, p_i1073_2_, p_i1073_3_, p_i1073_4_, p_i1073_5_, Minecraft.getMinecraft().thePlayer));
+		field_82325_q = p_i1073_1_;
 		repairContainer = (ContainerRepair) inventorySlots;
 	}
 	
 	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/repair.png");
+		mc.func_110434_K().func_110577_a(field_110429_t);
 		int var4 = (width - xSize) / 2;
 		int var5 = (height - ySize) / 2;
 		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
@@ -37,15 +38,15 @@
 	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
 	{
 		GL11.glDisable(GL11.GL_LIGHTING);
-		fontRenderer.drawString(StatCollector.translateToLocal("container.repair"), 60, 6, 4210752);
+		fontRenderer.drawString(I18n.func_135053_a("container.repair"), 60, 6, 4210752);
 		if(repairContainer.maximumCost > 0)
 		{
 			int var3 = 8453920;
 			boolean var4 = true;
-			String var5 = StatCollector.translateToLocalFormatted("container.repair.cost", new Object[] { Integer.valueOf(repairContainer.maximumCost) });
+			String var5 = I18n.func_135052_a("container.repair.cost", new Object[] { Integer.valueOf(repairContainer.maximumCost) });
 			if(repairContainer.maximumCost >= 40 && !mc.thePlayer.capabilities.isCreativeMode)
 			{
-				var5 = StatCollector.translateToLocal("container.repair.expensive");
+				var5 = I18n.func_135053_a("container.repair.expensive");
 				var3 = 16736352;
 			} else if(!repairContainer.getSlot(2).getHasStack())
 			{
@@ -82,6 +83,18 @@
 		itemNameField.drawTextBox();
 	}
 	
+	private void func_135015_g()
+	{
+		String var1 = itemNameField.getText();
+		Slot var2 = repairContainer.getSlot(0);
+		if(var2 != null && var2.getHasStack() && !var2.getStack().hasDisplayName() && var1.equals(var2.getStack().getDisplayName()))
+		{
+			var1 = "";
+		}
+		repairContainer.updateItemName(var1);
+		mc.thePlayer.sendQueue.addToSendQueue(new Packet250CustomPayload("MC|ItemName", var1.getBytes()));
+	}
+	
 	@Override public void initGui()
 	{
 		super.initGui();
@@ -92,7 +105,7 @@
 		itemNameField.setTextColor(-1);
 		itemNameField.setDisabledTextColour(-1);
 		itemNameField.setEnableBackgroundDrawing(false);
-		itemNameField.setMaxStringLength(30);
+		itemNameField.setMaxStringLength(40);
 		inventorySlots.removeCraftingFromCrafters(this);
 		inventorySlots.addCraftingToCrafters(this);
 	}
@@ -101,8 +114,7 @@
 	{
 		if(itemNameField.textboxKeyTyped(par1, par2))
 		{
-			repairContainer.updateItemName(itemNameField.getText());
-			mc.thePlayer.sendQueue.addToSendQueue(new Packet250CustomPayload("MC|ItemName", itemNameField.getText().getBytes()));
+			func_135015_g();
 		} else
 		{
 			super.keyTyped(par1, par2);
@@ -139,8 +151,7 @@
 			itemNameField.setEnabled(par3ItemStack != null);
 			if(par3ItemStack != null)
 			{
-				repairContainer.updateItemName(itemNameField.getText());
-				mc.thePlayer.sendQueue.addToSendQueue(new Packet250CustomPayload("MC|ItemName", itemNameField.getText().getBytes()));
+				func_135015_g();
 			}
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreen.java b/RMCClient/minecraft/net/minecraft/src/GuiScreen.java
index 3446c5d..f9527b1 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreen.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreen.java
@@ -16,18 +16,16 @@
 
 public class GuiScreen extends Gui
 {
-	public static final boolean isMacOs = Minecraft.getOs() == EnumOS.MACOS;
 	protected Minecraft mc;
 	public int width;
 	public int height;
 	protected List buttonList = new ArrayList();
-	public boolean allowUserInput = false;
+	public boolean allowUserInput;
 	protected FontRenderer fontRenderer;
-	public GuiParticle guiParticles;
-	private GuiButton selectedButton = null;
-	private int eventButton = 0;
-	private long field_85043_c = 0L;
-	private int field_92018_d = 0;
+	private GuiButton selectedButton;
+	private int eventButton;
+	private long field_85043_c;
+	private int field_92018_d;
 	
 	protected void actionPerformed(GuiButton par1GuiButton)
 	{
@@ -47,7 +45,7 @@
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glDisable(GL11.GL_FOG);
 		Tessellator var2 = Tessellator.instance;
-		mc.renderEngine.bindTexture("/gui/background.png");
+		mc.func_110434_K().func_110577_a(field_110325_k);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		float var3 = 32.0F;
 		var2.startDrawingQuads();
@@ -111,10 +109,6 @@
 				mc.toggleFullscreen();
 				return;
 			}
-			if(isMacOs && var1 == 28 && var2 == 0)
-			{
-				var1 = 29;
-			}
 			keyTyped(var2, var1);
 		}
 	}
@@ -123,21 +117,26 @@
 	{
 		int var1 = Mouse.getEventX() * width / mc.displayWidth;
 		int var2 = height - Mouse.getEventY() * height / mc.displayHeight - 1;
+		int var3 = Mouse.getEventButton();
+		if(Minecraft.field_142025_a && var3 == 0 && (Keyboard.isKeyDown(29) || Keyboard.isKeyDown(157)))
+		{
+			var3 = 1;
+		}
 		if(Mouse.getEventButtonState())
 		{
 			if(mc.gameSettings.touchscreen && field_92018_d++ > 0) return;
-			eventButton = Mouse.getEventButton();
+			eventButton = var3;
 			field_85043_c = Minecraft.getSystemTime();
 			mouseClicked(var1, var2, eventButton);
-		} else if(Mouse.getEventButton() != -1)
+		} else if(var3 != -1)
 		{
 			if(mc.gameSettings.touchscreen && --field_92018_d > 0) return;
 			eventButton = -1;
-			mouseMovedOrUp(var1, var2, Mouse.getEventButton());
+			mouseMovedOrUp(var1, var2, var3);
 		} else if(eventButton != -1 && field_85043_c > 0L)
 		{
-			long var3 = Minecraft.getSystemTime() - field_85043_c;
-			func_85041_a(var1, var2, eventButton, var3);
+			long var4 = Minecraft.getSystemTime() - field_85043_c;
+			func_85041_a(var1, var2, eventButton, var4);
 		}
 	}
 	
@@ -186,7 +185,6 @@
 	
 	public void setWorldAndResolution(Minecraft par1Minecraft, int par2, int par3)
 	{
-		guiParticles = new GuiParticle(par1Minecraft);
 		mc = par1Minecraft;
 		fontRenderer = par1Minecraft.fontRenderer;
 		width = par2;
@@ -214,8 +212,7 @@
 	
 	public static boolean isCtrlKeyDown()
 	{
-		boolean var0 = Keyboard.isKeyDown(28) && Keyboard.getEventCharacter() == 0;
-		return Keyboard.isKeyDown(29) || Keyboard.isKeyDown(157) || isMacOs && (var0 || Keyboard.isKeyDown(219) || Keyboard.isKeyDown(220));
+		return Minecraft.field_142025_a ? Keyboard.isKeyDown(219) || Keyboard.isKeyDown(220) : Keyboard.isKeyDown(29) || Keyboard.isKeyDown(157);
 	}
 	
 	public static boolean isShiftKeyDown()
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenAddServer.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenAddServer.java
index 1f2481a..2958dd0 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenAddServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenAddServer.java
@@ -9,10 +9,10 @@
 	private GuiTextField serverName;
 	private ServerData newServerData;
 	
-	public GuiScreenAddServer(GuiScreen par1GuiScreen, ServerData par2ServerData)
+	public GuiScreenAddServer(GuiScreen p_i1033_1_, ServerData p_i1033_2_)
 	{
-		parentGui = par1GuiScreen;
-		newServerData = par2ServerData;
+		parentGui = p_i1033_1_;
+		newServerData = p_i1033_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -29,20 +29,18 @@
 				parentGui.confirmClicked(true, 0);
 			} else if(par1GuiButton.id == 2)
 			{
-				StringTranslate var2 = StringTranslate.getInstance();
 				newServerData.setHideAddress(!newServerData.isHidingAddress());
-				((GuiButton) buttonList.get(2)).displayString = var2.translateKey("addServer.hideAddress") + ": " + (newServerData.isHidingAddress() ? var2.translateKey("gui.yes") : var2.translateKey("gui.no"));
+				((GuiButton) buttonList.get(2)).displayString = I18n.func_135053_a("addServer.hideAddress") + ": " + (newServerData.isHidingAddress() ? I18n.func_135053_a("gui.yes") : I18n.func_135053_a("gui.no"));
 			}
 		}
 	}
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey("addServer.title"), width / 2, 17, 16777215);
-		drawString(fontRenderer, var4.translateKey("addServer.enterName"), width / 2 - 100, 53, 10526880);
-		drawString(fontRenderer, var4.translateKey("addServer.enterIp"), width / 2 - 100, 94, 10526880);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("addServer.title"), width / 2, 17, 16777215);
+		drawString(fontRenderer, I18n.func_135053_a("addServer.enterName"), width / 2 - 100, 53, 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("addServer.enterIp"), width / 2 - 100, 94, 10526880);
 		serverName.drawTextBox();
 		serverAddress.drawTextBox();
 		super.drawScreen(par1, par2, par3);
@@ -50,12 +48,11 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, var1.translateKey("addServer.add")));
-		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.cancel")));
-		buttonList.add(new GuiButton(2, width / 2 - 100, 142, var1.translateKey("addServer.hideAddress") + ": " + (newServerData.isHidingAddress() ? var1.translateKey("gui.yes") : var1.translateKey("gui.no"))));
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, I18n.func_135053_a("addServer.add")));
+		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, I18n.func_135053_a("gui.cancel")));
+		buttonList.add(new GuiButton(2, width / 2 - 100, 142, I18n.func_135053_a("addServer.hideAddress") + ": " + (newServerData.isHidingAddress() ? I18n.func_135053_a("gui.yes") : I18n.func_135053_a("gui.no"))));
 		serverName = new GuiTextField(fontRenderer, width / 2 - 100, 66, 200, 20);
 		serverName.setFocused(true);
 		serverName.setText(newServerData.serverName);
@@ -69,19 +66,12 @@
 	{
 		serverName.textboxKeyTyped(par1, par2);
 		serverAddress.textboxKeyTyped(par1, par2);
-		if(par1 == 9)
+		if(par2 == 15)
 		{
-			if(serverName.isFocused())
-			{
-				serverName.setFocused(false);
-				serverAddress.setFocused(true);
-			} else
-			{
-				serverName.setFocused(true);
-				serverAddress.setFocused(false);
-			}
+			serverName.setFocused(!serverName.isFocused());
+			serverAddress.setFocused(!serverAddress.isFocused());
 		}
-		if(par1 == 13)
+		if(par2 == 28 || par2 == 156)
 		{
 			actionPerformed((GuiButton) buttonList.get(0));
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenBackup.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenBackup.java
new file mode 100644
index 0000000..cec7c60
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenBackup.java
@@ -0,0 +1,154 @@
+package net.minecraft.src;
+
+import java.util.Collections;
+import java.util.List;
+
+import net.minecraft.client.Minecraft;
+
+import org.lwjgl.input.Keyboard;
+
+public class GuiScreenBackup extends GuiScreen
+{
+	private final GuiScreenConfigureWorld field_110380_a;
+	private final long field_110377_b;
+	private List field_110378_c = Collections.emptyList();
+	private GuiScreenBackupSelectionList field_110375_d;
+	private int field_110376_e = -1;
+	private GuiButton field_110379_p;
+	
+	public GuiScreenBackup(GuiScreenConfigureWorld p_i1103_1_, long p_i1103_2_)
+	{
+		field_110380_a = p_i1103_1_;
+		field_110377_b = p_i1103_2_;
+	}
+	
+	@Override protected void actionPerformed(GuiButton par1GuiButton)
+	{
+		if(par1GuiButton.enabled)
+		{
+			if(par1GuiButton.id == 1)
+			{
+				String var2 = I18n.func_135053_a("mco.configure.world.restore.question.line1");
+				String var3 = I18n.func_135053_a("mco.configure.world.restore.question.line2");
+				mc.displayGuiScreen(new GuiScreenConfirmation(this, GuiScreenConfirmationType.Warning, var2, var3, 1));
+			} else if(par1GuiButton.id == 0)
+			{
+				mc.displayGuiScreen(field_110380_a);
+			} else
+			{
+				field_110375_d.actionPerformed(par1GuiButton);
+			}
+		}
+	}
+	
+	@Override public void confirmClicked(boolean par1, int par2)
+	{
+		if(par1 && par2 == 1)
+		{
+			func_110374_h();
+		} else
+		{
+			mc.displayGuiScreen(this);
+		}
+	}
+	
+	@Override public void drawScreen(int par1, int par2, float par3)
+	{
+		drawDefaultBackground();
+		field_110375_d.drawScreen(par1, par2, par3);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.backup.title"), width / 2, 20, 16777215);
+		super.drawScreen(par1, par2, par3);
+	}
+	
+	private void func_110369_g()
+	{
+		buttonList.add(new GuiButton(0, width / 2 + 6, height - 52, 153, 20, I18n.func_135053_a("gui.back")));
+		buttonList.add(field_110379_p = new GuiButton(1, width / 2 - 154, height - 52, 153, 20, I18n.func_135053_a("mco.backup.button.restore")));
+	}
+	
+	private void func_110374_h()
+	{
+		if(field_110376_e >= 0 && field_110376_e < field_110378_c.size())
+		{
+			Backup var1 = (Backup) field_110378_c.get(field_110376_e);
+			GuiScreenBackupRestoreTask var2 = new GuiScreenBackupRestoreTask(this, var1, (GuiScreenBackupDownloadThread) null);
+			GuiScreenLongRunningTask var3 = new GuiScreenLongRunningTask(mc, field_110380_a, var2);
+			var3.func_98117_g();
+			mc.displayGuiScreen(var3);
+		}
+	}
+	
+	@Override public void initGui()
+	{
+		Keyboard.enableRepeatEvents(true);
+		buttonList.clear();
+		field_110375_d = new GuiScreenBackupSelectionList(this);
+		new GuiScreenBackupDownloadThread(this).start();
+		func_110369_g();
+	}
+	
+	@Override public void updateScreen()
+	{
+		super.updateScreen();
+	}
+	
+	static Minecraft func_110366_a(GuiScreenBackup p_110366_0_)
+	{
+		return p_110366_0_.mc;
+	}
+	
+	static long func_110367_b(GuiScreenBackup p_110367_0_)
+	{
+		return p_110367_0_.field_110377_b;
+	}
+	
+	static List func_110370_e(GuiScreenBackup p_110370_0_)
+	{
+		return p_110370_0_.field_110378_c;
+	}
+	
+	static List func_110373_a(GuiScreenBackup p_110373_0_, List p_110373_1_)
+	{
+		return p_110373_0_.field_110378_c = p_110373_1_;
+	}
+	
+	static int func_130029_a(GuiScreenBackup p_130029_0_, int p_130029_1_)
+	{
+		return p_130029_0_.field_110376_e = p_130029_1_;
+	}
+	
+	static Minecraft func_130030_c(GuiScreenBackup p_130030_0_)
+	{
+		return p_130030_0_.mc;
+	}
+	
+	static GuiScreenConfigureWorld func_130031_d(GuiScreenBackup p_130031_0_)
+	{
+		return p_130031_0_.field_110380_a;
+	}
+	
+	static FontRenderer func_130032_i(GuiScreenBackup p_130032_0_)
+	{
+		return p_130032_0_.fontRenderer;
+	}
+	
+	static FontRenderer func_130033_j(GuiScreenBackup p_130033_0_)
+	{
+		return p_130033_0_.fontRenderer;
+	}
+	
+	static int func_130034_h(GuiScreenBackup p_130034_0_)
+	{
+		return p_130034_0_.field_110376_e;
+	}
+	
+	static Minecraft func_130035_e(GuiScreenBackup p_130035_0_)
+	{
+		return p_130035_0_.mc;
+	}
+	
+	static Minecraft func_130036_f(GuiScreenBackup p_130036_0_)
+	{
+		return p_130036_0_.mc;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenBackupDownloadThread.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenBackupDownloadThread.java
new file mode 100644
index 0000000..13ed7ec
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenBackupDownloadThread.java
@@ -0,0 +1,23 @@
+package net.minecraft.src;
+
+class GuiScreenBackupDownloadThread extends Thread
+{
+	final GuiScreenBackup field_111250_a;
+	
+	GuiScreenBackupDownloadThread(GuiScreenBackup p_i1099_1_)
+	{
+		field_111250_a = p_i1099_1_;
+	}
+	
+	@Override public void run()
+	{
+		McoClient var1 = new McoClient(GuiScreenBackup.func_110366_a(field_111250_a).func_110432_I());
+		try
+		{
+			GuiScreenBackup.func_110373_a(field_111250_a, var1.func_111232_c(GuiScreenBackup.func_110367_b(field_111250_a)).field_111223_a);
+		} catch(ExceptionMcoService var3)
+		{
+			GuiScreenBackup.func_130030_c(field_111250_a).getLogAgent().logSevere(var3.toString());
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenBackupRestoreTask.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenBackupRestoreTask.java
new file mode 100644
index 0000000..254a3ce
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenBackupRestoreTask.java
@@ -0,0 +1,43 @@
+package net.minecraft.src;
+
+class GuiScreenBackupRestoreTask extends TaskLongRunning
+{
+	private final Backup field_111254_c;
+	final GuiScreenBackup field_111255_a;
+	
+	private GuiScreenBackupRestoreTask(GuiScreenBackup p_i1101_1_, Backup p_i1101_2_)
+	{
+		field_111255_a = p_i1101_1_;
+		field_111254_c = p_i1101_2_;
+	}
+	
+	GuiScreenBackupRestoreTask(GuiScreenBackup p_i1102_1_, Backup p_i1102_2_, GuiScreenBackupDownloadThread p_i1102_3_)
+	{
+		this(p_i1102_1_, p_i1102_2_);
+	}
+	
+	@Override public void run()
+	{
+		func_96576_b(I18n.func_135053_a("mco.backup.restoring"));
+		try
+		{
+			McoClient var1 = new McoClient(func_96578_b().func_110432_I());
+			var1.func_111235_c(GuiScreenBackup.func_110367_b(field_111255_a), field_111254_c.field_110727_a);
+			try
+			{
+				Thread.sleep(1000L);
+			} catch(InterruptedException var3)
+			{
+				Thread.currentThread().interrupt();
+			}
+			func_96578_b().displayGuiScreen(GuiScreenBackup.func_130031_d(field_111255_a));
+		} catch(ExceptionMcoService var4)
+		{
+			GuiScreenBackup.func_130035_e(field_111255_a).getLogAgent().logSevere(var4.toString());
+			func_96575_a(var4.toString());
+		} catch(Exception var5)
+		{
+			func_96575_a(var5.getLocalizedMessage());
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenBackupSelectionList.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenBackupSelectionList.java
new file mode 100644
index 0000000..9bbee47
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenBackupSelectionList.java
@@ -0,0 +1,97 @@
+package net.minecraft.src;
+
+import java.text.DateFormat;
+import java.util.Date;
+
+import net.minecraft.server.MinecraftServer;
+
+class GuiScreenBackupSelectionList extends GuiScreenSelectLocation
+{
+	final GuiScreenBackup field_111249_a;
+	
+	public GuiScreenBackupSelectionList(GuiScreenBackup p_i1100_1_)
+	{
+		super(GuiScreenBackup.func_130036_f(p_i1100_1_), p_i1100_1_.width, p_i1100_1_.height, 32, p_i1100_1_.height - 64, 36);
+		field_111249_a = p_i1100_1_;
+	}
+	
+	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
+	{
+		if(par1 < GuiScreenBackup.func_110370_e(field_111249_a).size())
+		{
+			func_111246_b(par1, par2, par3, par4, par5Tessellator);
+		}
+	}
+	
+	@Override protected void elementClicked(int par1, boolean par2)
+	{
+		if(par1 < GuiScreenBackup.func_110370_e(field_111249_a).size())
+		{
+			GuiScreenBackup.func_130029_a(field_111249_a, par1);
+		}
+	}
+	
+	@Override protected boolean func_104086_b(int par1)
+	{
+		return false;
+	}
+	
+	private void func_111246_b(int p_111246_1_, int p_111246_2_, int p_111246_3_, int p_111246_4_, Tessellator p_111246_5_)
+	{
+		Backup var6 = (Backup) GuiScreenBackup.func_110370_e(field_111249_a).get(p_111246_1_);
+		field_111249_a.drawString(GuiScreenBackup.func_130032_i(field_111249_a), "Backup (" + func_111248_a(Long.valueOf(MinecraftServer.func_130071_aq() - var6.field_110725_b.getTime())) + ")", p_111246_2_ + 2, p_111246_3_ + 1, 16777215);
+		field_111249_a.drawString(GuiScreenBackup.func_130033_j(field_111249_a), func_111247_a(var6.field_110725_b), p_111246_2_ + 2, p_111246_3_ + 12, 7105644);
+	}
+	
+	private String func_111247_a(Date p_111247_1_)
+	{
+		return DateFormat.getDateTimeInstance(3, 3).format(p_111247_1_);
+	}
+	
+	private String func_111248_a(Long p_111248_1_)
+	{
+		if(p_111248_1_.longValue() < 0L) return "right now";
+		else
+		{
+			long var2 = p_111248_1_.longValue() / 1000L;
+			if(var2 < 60L) return (var2 == 1L ? "1 second" : var2 + " seconds") + " ago";
+			else
+			{
+				long var4;
+				if(var2 < 3600L)
+				{
+					var4 = var2 / 60L;
+					return (var4 == 1L ? "1 minute" : var4 + " minutes") + " ago";
+				} else if(var2 < 86400L)
+				{
+					var4 = var2 / 3600L;
+					return (var4 == 1L ? "1 hour" : var4 + " hours") + " ago";
+				} else
+				{
+					var4 = var2 / 86400L;
+					return (var4 == 1L ? "1 day" : var4 + " days") + " ago";
+				}
+			}
+		}
+	}
+	
+	@Override protected int func_130003_b()
+	{
+		return getSize() * 36;
+	}
+	
+	@Override protected void func_130004_c()
+	{
+		field_111249_a.drawDefaultBackground();
+	}
+	
+	@Override protected int getSize()
+	{
+		return GuiScreenBackup.func_110370_e(field_111249_a).size() + 1;
+	}
+	
+	@Override protected boolean isSelected(int par1)
+	{
+		return par1 == GuiScreenBackup.func_130034_h(field_111249_a);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenBook.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenBook.java
index 89aab05..33212a9 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenBook.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenBook.java
@@ -8,6 +8,7 @@
 
 public class GuiScreenBook extends GuiScreen
 {
+	private static final ResourceLocation field_110405_a = new ResourceLocation("textures/gui/book.png");
 	private final EntityPlayer editingPlayer;
 	private final ItemStack itemstackBook;
 	private final boolean bookIsUnsigned;
@@ -27,14 +28,14 @@
 	private GuiButton buttonFinalize;
 	private GuiButton buttonCancel;
 	
-	public GuiScreenBook(EntityPlayer par1EntityPlayer, ItemStack par2ItemStack, boolean par3)
+	public GuiScreenBook(EntityPlayer p_i1080_1_, ItemStack p_i1080_2_, boolean p_i1080_3_)
 	{
-		editingPlayer = par1EntityPlayer;
-		itemstackBook = par2ItemStack;
-		bookIsUnsigned = par3;
-		if(par2ItemStack.hasTagCompound())
+		editingPlayer = p_i1080_1_;
+		itemstackBook = p_i1080_2_;
+		bookIsUnsigned = p_i1080_3_;
+		if(p_i1080_2_.hasTagCompound())
 		{
-			NBTTagCompound var4 = par2ItemStack.getTagCompound();
+			NBTTagCompound var4 = p_i1080_2_.getTagCompound();
 			bookPages = var4.getTagList("pages");
 			if(bookPages != null)
 			{
@@ -46,7 +47,7 @@
 				}
 			}
 		}
-		if(bookPages == null && par3)
+		if(bookPages == null && p_i1080_3_)
 		{
 			bookPages = new NBTTagList("pages");
 			bookPages.appendTag(new NBTTagString("1", ""));
@@ -109,7 +110,7 @@
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/book.png");
+		mc.func_110434_K().func_110577_a(field_110405_a);
 		int var4 = (width - bookImageWidth) / 2;
 		byte var5 = 2;
 		drawTexturedModalRect(var4, var5, 0, 0, bookImageWidth, bookImageHeight);
@@ -129,19 +130,19 @@
 					var6 = var6 + "" + EnumChatFormatting.GRAY + "_";
 				}
 			}
-			var7 = StatCollector.translateToLocal("book.editTitle");
+			var7 = I18n.func_135053_a("book.editTitle");
 			var8 = fontRenderer.getStringWidth(var7);
 			fontRenderer.drawString(var7, var4 + 36 + (116 - var8) / 2, var5 + 16 + 16, 0);
 			int var9 = fontRenderer.getStringWidth(var6);
 			fontRenderer.drawString(var6, var4 + 36 + (116 - var9) / 2, var5 + 48, 0);
-			String var10 = String.format(StatCollector.translateToLocal("book.byAuthor"), new Object[] { editingPlayer.username });
+			String var10 = String.format(I18n.func_135053_a("book.byAuthor"), new Object[] { editingPlayer.getCommandSenderName() });
 			int var11 = fontRenderer.getStringWidth(var10);
 			fontRenderer.drawString(EnumChatFormatting.DARK_GRAY + var10, var4 + 36 + (116 - var11) / 2, var5 + 48 + 10, 0);
-			String var12 = StatCollector.translateToLocal("book.finalizeWarning");
+			String var12 = I18n.func_135053_a("book.finalizeWarning");
 			fontRenderer.drawSplitString(var12, var4 + 36, var5 + 80, 116, 0);
 		} else
 		{
-			var6 = String.format(StatCollector.translateToLocal("book.pageIndicator"), new Object[] { Integer.valueOf(currPage + 1), Integer.valueOf(bookTotalPages) });
+			var6 = String.format(I18n.func_135053_a("book.pageIndicator"), new Object[] { Integer.valueOf(currPage + 1), Integer.valueOf(bookTotalPages) });
 			var7 = "";
 			if(bookPages != null && currPage >= 0 && currPage < bookPages.tagCount())
 			{
@@ -203,14 +204,15 @@
 		switch(par2)
 		{
 			case 14:
-				if(bookTitle.length() > 0)
+				if(!bookTitle.isEmpty())
 				{
 					bookTitle = bookTitle.substring(0, bookTitle.length() - 1);
 					updateButtons();
 				}
 				return;
 			case 28:
-				if(bookTitle.length() > 0)
+			case 156:
+				if(!bookTitle.isEmpty())
 				{
 					sendBookToServer(true);
 					mc.displayGuiScreen((GuiScreen) null);
@@ -232,13 +234,13 @@
 		Keyboard.enableRepeatEvents(true);
 		if(bookIsUnsigned)
 		{
-			buttonList.add(buttonSign = new GuiButton(3, width / 2 - 100, 4 + bookImageHeight, 98, 20, StatCollector.translateToLocal("book.signButton")));
-			buttonList.add(buttonDone = new GuiButton(0, width / 2 + 2, 4 + bookImageHeight, 98, 20, StatCollector.translateToLocal("gui.done")));
-			buttonList.add(buttonFinalize = new GuiButton(5, width / 2 - 100, 4 + bookImageHeight, 98, 20, StatCollector.translateToLocal("book.finalizeButton")));
-			buttonList.add(buttonCancel = new GuiButton(4, width / 2 + 2, 4 + bookImageHeight, 98, 20, StatCollector.translateToLocal("gui.cancel")));
+			buttonList.add(buttonSign = new GuiButton(3, width / 2 - 100, 4 + bookImageHeight, 98, 20, I18n.func_135053_a("book.signButton")));
+			buttonList.add(buttonDone = new GuiButton(0, width / 2 + 2, 4 + bookImageHeight, 98, 20, I18n.func_135053_a("gui.done")));
+			buttonList.add(buttonFinalize = new GuiButton(5, width / 2 - 100, 4 + bookImageHeight, 98, 20, I18n.func_135053_a("book.finalizeButton")));
+			buttonList.add(buttonCancel = new GuiButton(4, width / 2 + 2, 4 + bookImageHeight, 98, 20, I18n.func_135053_a("gui.cancel")));
 		} else
 		{
-			buttonList.add(buttonDone = new GuiButton(0, width / 2 - 100, 4 + bookImageHeight, 200, 20, StatCollector.translateToLocal("gui.done")));
+			buttonList.add(buttonDone = new GuiButton(0, width / 2 - 100, 4 + bookImageHeight, 200, 20, I18n.func_135053_a("gui.done")));
 		}
 		int var1 = (width - bookImageWidth) / 2;
 		byte var2 = 2;
@@ -280,6 +282,7 @@
 						}
 						return;
 					case 28:
+					case 156:
 						func_74160_b("\n");
 						return;
 					default:
@@ -323,7 +326,7 @@
 				if(par1)
 				{
 					var8 = "MC|BSign";
-					itemstackBook.setTagInfo("author", new NBTTagString("author", editingPlayer.username));
+					itemstackBook.setTagInfo("author", new NBTTagString("author", editingPlayer.getCommandSenderName()));
 					itemstackBook.setTagInfo("title", new NBTTagString("title", bookTitle.trim()));
 					itemstackBook.itemID = Item.writtenBook.itemID;
 				}
@@ -360,4 +363,9 @@
 		super.updateScreen();
 		++updateCount;
 	}
+	
+	static ResourceLocation func_110404_g()
+	{
+		return field_110405_a;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenClientOutdated.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenClientOutdated.java
new file mode 100644
index 0000000..49b4260
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenClientOutdated.java
@@ -0,0 +1,43 @@
+package net.minecraft.src;
+
+public class GuiScreenClientOutdated extends GuiScreen
+{
+	private final GuiScreen field_140007_a;
+	
+	public GuiScreenClientOutdated(GuiScreen p_i2323_1_)
+	{
+		field_140007_a = p_i2323_1_;
+	}
+	
+	@Override protected void actionPerformed(GuiButton par1GuiButton)
+	{
+		if(par1GuiButton.id == 0)
+		{
+			mc.displayGuiScreen(field_140007_a);
+		}
+	}
+	
+	@Override public void drawScreen(int par1, int par2, float par3)
+	{
+		drawDefaultBackground();
+		String var4 = I18n.func_135053_a("mco.client.outdated.title");
+		String var5 = I18n.func_135053_a("mco.client.outdated.msg");
+		drawCenteredString(fontRenderer, var4, width / 2, height / 2 - 50, 16711680);
+		drawCenteredString(fontRenderer, var5, width / 2, height / 2 - 30, 16777215);
+		super.drawScreen(par1, par2, par3);
+	}
+	
+	@Override public void initGui()
+	{
+		buttonList.clear();
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120 + 12, "Back"));
+	}
+	
+	@Override protected void keyTyped(char par1, int par2)
+	{
+		if(par2 == 28 || par2 == 156)
+		{
+			mc.displayGuiScreen(field_140007_a);
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenConfigureWorld.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenConfigureWorld.java
index 35bfe92..54af4b5 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenConfigureWorld.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenConfigureWorld.java
@@ -23,12 +23,13 @@
 	private GuiButton field_98128_v;
 	private GuiButton field_98127_w;
 	private GuiButton field_98129_x;
+	private GuiButton field_110381_z;
 	private boolean field_102020_y;
 	
-	public GuiScreenConfigureWorld(GuiScreen par1, McoServer par2)
+	public GuiScreenConfigureWorld(GuiScreen p_i1105_1_, McoServer p_i1105_2_)
 	{
-		field_96285_a = par1;
-		field_96280_b = par2;
+		field_96285_a = p_i1105_1_;
+		field_96280_b = p_i1105_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -47,10 +48,9 @@
 				mc.displayGuiScreen(new GuiScreenEditOnlineWorld(this, field_96285_a, field_96280_b));
 			} else if(par1GuiButton.id == 1)
 			{
-				StringTranslate var2 = StringTranslate.getInstance();
-				String var3 = var2.translateKey("mco.configure.world.close.question.line1");
-				String var4 = var2.translateKey("mco.configure.world.close.question.line2");
-				mc.displayGuiScreen(new GuiScreenConfirmation(this, "Warning!", var3, var4, 1));
+				String var2 = I18n.func_135053_a("mco.configure.world.close.question.line1");
+				String var3 = I18n.func_135053_a("mco.configure.world.close.question.line2");
+				mc.displayGuiScreen(new GuiScreenConfirmation(this, GuiScreenConfirmationType.Info, var2, var3, 1));
 			} else if(par1GuiButton.id == 0)
 			{
 				func_96268_g();
@@ -66,6 +66,9 @@
 			} else if(par1GuiButton.id == 7)
 			{
 				mc.displayGuiScreen(new GuiScreenSubscription(this, field_96280_b));
+			} else if(par1GuiButton.id == 8)
+			{
+				mc.displayGuiScreen(new GuiScreenBackup(this, field_96280_b.field_96408_a));
 			}
 		}
 	}
@@ -76,13 +79,13 @@
 		{
 			if(par1)
 			{
-				McoClient var3 = new McoClient(mc.session);
+				McoClient var3 = new McoClient(mc.func_110432_I());
 				try
 				{
 					var3.func_96381_a(field_96280_b.field_96408_a, field_96283_q);
 				} catch(ExceptionMcoService var5)
 				{
-					System.err.println("Could not uninvite the selected user");
+					mc.getLogAgent().logSevere(var5.toString());
 				}
 				func_96267_d(field_96284_p);
 			}
@@ -100,17 +103,16 @@
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
 		field_96282_c.func_96612_a(par1, par2, par3);
-		drawCenteredString(fontRenderer, var4.translateKey("mco.configure.world.title"), width / 2, 17, 16777215);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.name"), field_96277_d, func_96264_a(1), 10526880);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.configure.world.title"), width / 2, 17, 16777215);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.name"), field_96277_d, func_96264_a(1), 10526880);
 		drawString(fontRenderer, field_96280_b.func_96398_b(), field_96277_d, func_96264_a(2), 16777215);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.description"), field_96277_d, func_96264_a(4), 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.description"), field_96277_d, func_96264_a(4), 10526880);
 		drawString(fontRenderer, field_96280_b.func_96397_a(), field_96277_d, func_96264_a(5), 16777215);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.status"), field_96277_d, func_96264_a(7), 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.status"), field_96277_d, func_96264_a(7), 10526880);
 		drawString(fontRenderer, func_104045_j(), field_96277_d, func_96264_a(8), 16777215);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.invited"), field_96287_o, func_96264_a(1), 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.invited"), field_96287_o, func_96264_a(1), 10526880);
 		super.drawScreen(par1, par2, par3);
 	}
 	
@@ -136,7 +138,7 @@
 	
 	private void func_96268_g()
 	{
-		McoClient var1 = new McoClient(mc.session);
+		McoClient var1 = new McoClient(mc.func_110432_I());
 		try
 		{
 			Boolean var2 = var1.func_96383_b(field_96280_b.field_96408_a);
@@ -148,10 +150,10 @@
 			}
 		} catch(ExceptionMcoService var3)
 		{
-			;
+			mc.getLogAgent().logSevere(var3.toString());
 		} catch(IOException var4)
 		{
-			;
+			mc.getLogAgent().logWarning("Realms: could not parse response");
 		}
 	}
 	
@@ -160,15 +162,14 @@
 		if(field_96284_p >= 0 && field_96284_p < field_96280_b.field_96402_f.size())
 		{
 			field_96283_q = (String) field_96280_b.field_96402_f.get(field_96284_p);
-			StringTranslate var1 = StringTranslate.getInstance();
-			GuiYesNo var2 = new GuiYesNo(this, "Warning!", var1.translateKey("mco.configure.world.uninvite.question") + " \'" + field_96283_q + "\'", 3);
-			mc.displayGuiScreen(var2);
+			GuiYesNo var1 = new GuiYesNo(this, "Warning!", I18n.func_135053_a("mco.configure.world.uninvite.question") + " \'" + field_96283_q + "\'", 3);
+			mc.displayGuiScreen(var1);
 		}
 	}
 	
 	private void func_96275_h()
 	{
-		McoClient var1 = new McoClient(mc.session);
+		McoClient var1 = new McoClient(mc.func_110432_I());
 		try
 		{
 			boolean var2 = var1.func_96378_c(field_96280_b.field_96408_a).booleanValue();
@@ -180,16 +181,15 @@
 			}
 		} catch(ExceptionMcoService var3)
 		{
-			;
+			mc.getLogAgent().logSevere(var3.toString());
 		} catch(IOException var4)
 		{
-			;
+			mc.getLogAgent().logWarning("Realms: could not parse response");
 		}
 	}
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		field_96277_d = width / 2 - 200;
 		field_96286_n = 180;
 		field_96287_o = width / 2;
@@ -197,24 +197,26 @@
 		buttonList.clear();
 		if(field_96280_b.field_96404_d.equals("CLOSED"))
 		{
-			buttonList.add(field_96281_r = new GuiButton(0, field_96277_d, func_96264_a(12), field_96286_n / 2 - 2, 20, var1.translateKey("mco.configure.world.buttons.open")));
+			buttonList.add(field_96281_r = new GuiButton(0, field_96277_d, func_96264_a(12), field_96286_n / 2 - 2, 20, I18n.func_135053_a("mco.configure.world.buttons.open")));
 			field_96281_r.enabled = !field_96280_b.field_98166_h;
 		} else
 		{
-			buttonList.add(field_96279_s = new GuiButton(1, field_96277_d, func_96264_a(12), field_96286_n / 2 - 2, 20, var1.translateKey("mco.configure.world.buttons.close")));
+			buttonList.add(field_96279_s = new GuiButton(1, field_96277_d, func_96264_a(12), field_96286_n / 2 - 2, 20, I18n.func_135053_a("mco.configure.world.buttons.close")));
 			field_96279_s.enabled = !field_96280_b.field_98166_h;
 		}
-		buttonList.add(field_98129_x = new GuiButton(7, field_96277_d + field_96286_n / 2 + 2, func_96264_a(12), field_96286_n / 2 - 2, 20, var1.translateKey("mco.configure.world.buttons.subscription")));
-		buttonList.add(field_96278_t = new GuiButton(5, field_96277_d, func_96264_a(10), field_96286_n / 2 - 2, 20, var1.translateKey("mco.configure.world.buttons.edit")));
-		buttonList.add(field_96276_u = new GuiButton(6, field_96277_d + field_96286_n / 2 + 2, func_96264_a(10), field_96286_n / 2 - 2, 20, var1.translateKey("mco.configure.world.buttons.reset")));
-		buttonList.add(field_98128_v = new GuiButton(4, field_96287_o, func_96264_a(10), field_96286_n / 2 - 2, 20, var1.translateKey("mco.configure.world.buttons.invite")));
-		buttonList.add(field_98127_w = new GuiButton(3, field_96287_o + field_96286_n / 2 + 2, func_96264_a(10), field_96286_n / 2 - 2, 20, var1.translateKey("mco.configure.world.buttons.uninvite")));
-		buttonList.add(new GuiButton(10, field_96287_o, func_96264_a(12), field_96286_n, 20, var1.translateKey("gui.back")));
+		buttonList.add(field_98129_x = new GuiButton(7, field_96277_d + field_96286_n / 2 + 2, func_96264_a(12), field_96286_n / 2 - 2, 20, I18n.func_135053_a("mco.configure.world.buttons.subscription")));
+		buttonList.add(field_96278_t = new GuiButton(5, field_96277_d, func_96264_a(10), field_96286_n / 2 - 2, 20, I18n.func_135053_a("mco.configure.world.buttons.edit")));
+		buttonList.add(field_96276_u = new GuiButton(6, field_96277_d + field_96286_n / 2 + 2, func_96264_a(10), field_96286_n / 2 - 2, 20, I18n.func_135053_a("mco.configure.world.buttons.reset")));
+		buttonList.add(field_98128_v = new GuiButton(4, field_96287_o, func_96264_a(10), field_96286_n / 2 - 2, 20, I18n.func_135053_a("mco.configure.world.buttons.invite")));
+		buttonList.add(field_98127_w = new GuiButton(3, field_96287_o + field_96286_n / 2 + 2, func_96264_a(10), field_96286_n / 2 - 2, 20, I18n.func_135053_a("mco.configure.world.buttons.uninvite")));
+		buttonList.add(field_110381_z = new GuiButton(8, field_96287_o, func_96264_a(12), field_96286_n / 2 - 2, 20, I18n.func_135053_a("mco.configure.world.buttons.backup")));
+		buttonList.add(new GuiButton(10, field_96287_o + field_96286_n / 2 + 2, func_96264_a(12), field_96286_n / 2 - 2, 20, I18n.func_135053_a("gui.back")));
 		field_96282_c = new SelectionListInvited(this);
 		field_96278_t.enabled = !field_96280_b.field_98166_h;
 		field_96276_u.enabled = !field_96280_b.field_98166_h;
 		field_98128_v.enabled = !field_96280_b.field_98166_h;
 		field_98127_w.enabled = !field_96280_b.field_98166_h;
+		field_110381_z.enabled = !field_96280_b.field_98166_h;
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenConfirmation.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenConfirmation.java
index c6d693b..b340bf2 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenConfirmation.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenConfirmation.java
@@ -1,24 +1,43 @@
 package net.minecraft.src;
 
-public class GuiScreenConfirmation extends GuiYesNo
+public class GuiScreenConfirmation extends GuiScreen
 {
-	private String field_96288_n;
+	private final GuiScreenConfirmationType field_140045_e;
+	private final String field_140049_p;
+	private final String field_96288_n;
+	protected final GuiScreen field_140048_a;
+	protected final String field_140046_b;
+	protected final String field_140047_c;
+	protected final int field_140044_d;
 	
-	public GuiScreenConfirmation(GuiScreen par1GuiScreen, String par2Str, String par3Str, String par4Str, int par5)
+	public GuiScreenConfirmation(GuiScreen p_i2325_1_, GuiScreenConfirmationType p_i2325_2_, String p_i2325_3_, String p_i2325_4_, int p_i2325_5_)
 	{
-		super(par1GuiScreen, par2Str, par3Str, par5);
-		field_96288_n = par4Str;
+		field_140048_a = p_i2325_1_;
+		field_140044_d = p_i2325_5_;
+		field_140045_e = p_i2325_2_;
+		field_140049_p = p_i2325_3_;
+		field_96288_n = p_i2325_4_;
+		field_140046_b = I18n.func_135053_a("gui.yes");
+		field_140047_c = I18n.func_135053_a("gui.no");
+	}
+	
+	@Override protected void actionPerformed(GuiButton par1GuiButton)
+	{
+		field_140048_a.confirmClicked(par1GuiButton.id == 0, field_140044_d);
 	}
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		super.drawScreen(par1, par2, par3);
+		drawDefaultBackground();
+		drawCenteredString(fontRenderer, field_140045_e.field_140072_d, width / 2, 70, field_140045_e.field_140075_c);
+		drawCenteredString(fontRenderer, field_140049_p, width / 2, 90, 16777215);
 		drawCenteredString(fontRenderer, field_96288_n, width / 2, 110, 16777215);
+		super.drawScreen(par1, par2, par3);
 	}
 	
 	@Override public void initGui()
 	{
-		buttonList.add(new GuiSmallButton(0, width / 2 - 155, height / 6 + 112, buttonText1));
-		buttonList.add(new GuiSmallButton(1, width / 2 - 155 + 160, height / 6 + 112, buttonText2));
+		buttonList.add(new GuiSmallButton(0, width / 2 - 155, height / 6 + 112, field_140046_b));
+		buttonList.add(new GuiSmallButton(1, width / 2 - 155 + 160, height / 6 + 112, field_140047_c));
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenConfirmationType.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenConfirmationType.java
new file mode 100644
index 0000000..1290b1b
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenConfirmationType.java
@@ -0,0 +1,14 @@
+package net.minecraft.src;
+
+public enum GuiScreenConfirmationType
+{
+	Warning("Warning!", 16711680), Info("Info!", 8226750);
+	public final int field_140075_c;
+	public final String field_140072_d;
+	
+	private GuiScreenConfirmationType(String p_i2324_3_, int p_i2324_4_)
+	{
+		field_140072_d = p_i2324_3_;
+		field_140075_c = p_i2324_4_;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenCreateOnlineWorld.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenCreateOnlineWorld.java
index 8c75e7c..9f30a95 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenCreateOnlineWorld.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenCreateOnlineWorld.java
@@ -7,22 +7,24 @@
 
 import org.lwjgl.input.Keyboard;
 
-public class GuiScreenCreateOnlineWorld extends GuiScreen
+public class GuiScreenCreateOnlineWorld extends ScreenWithCallback
 {
 	private GuiScreen field_96260_a;
 	private GuiTextField field_96257_c;
 	private GuiTextField field_96255_b;
 	private String field_98108_c;
 	private String field_98109_n;
-	private static int field_96253_d = 0;
+	private static int field_96253_d;
 	private static int field_96261_n = 1;
-	private boolean field_96256_r = false;
+	private static int field_110357_r = 2;
+	private boolean field_96256_r;
 	private String field_96254_s = "You must enter a name!";
+	private WorldTemplate field_110356_u;
 	
-	public GuiScreenCreateOnlineWorld(GuiScreen par1GuiScreen)
+	public GuiScreenCreateOnlineWorld(GuiScreen p_i1107_1_)
 	{
 		super.buttonList = Collections.synchronizedList(new ArrayList());
-		field_96260_a = par1GuiScreen;
+		field_96260_a = p_i1107_1_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -35,17 +37,19 @@
 			} else if(par1GuiButton.id == field_96253_d)
 			{
 				func_96252_h();
+			} else if(par1GuiButton.id == field_110357_r)
+			{
+				mc.displayGuiScreen(new GuiScreenMcoWorldTemplate(this, field_110356_u));
 			}
 		}
 	}
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey("mco.selectServer.create"), width / 2, 11, 16777215);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.name"), width / 2 - 100, 52, 10526880);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.seed"), width / 2 - 100, 98, 10526880);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.selectServer.create"), width / 2, 11, 16777215);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.name"), width / 2 - 100, 52, 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("mco.create.world.seed"), width / 2 - 100, 98, 10526880);
 		if(field_96256_r)
 		{
 			drawCenteredString(fontRenderer, field_96254_s, width / 2, 167, 16711680);
@@ -53,6 +57,16 @@
 		field_96257_c.drawTextBox();
 		field_96255_b.drawTextBox();
 		super.drawScreen(par1, par2, par3);
+	}
+	
+	@Override public void func_110354_a(Object p_110354_1_)
+	{
+		func_110355_a((WorldTemplate) p_110354_1_);
+	}
+	
+	public void func_110355_a(WorldTemplate p_110355_1_)
+	{
+		field_110356_u = p_110355_1_;
 	}
 	
 	private boolean func_96249_i()
@@ -65,7 +79,7 @@
 	{
 		if(func_96249_i())
 		{
-			TaskWorldCreation var1 = new TaskWorldCreation(this, field_96257_c.getText(), "Minecraft Realms Server", "NO_LOCATION", field_98109_n);
+			TaskWorldCreation var1 = new TaskWorldCreation(this, field_96257_c.getText(), "Minecraft Realms Server", field_98109_n, field_110356_u);
 			GuiScreenLongRunningTask var2 = new GuiScreenLongRunningTask(mc, field_96260_a, var1);
 			var2.func_98117_g();
 			mc.displayGuiScreen(var2);
@@ -74,11 +88,10 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		buttonList.add(new GuiButton(field_96253_d, width / 2 - 100, height / 4 + 120 + 17, 97, 20, var1.translateKey("mco.create.world")));
-		buttonList.add(new GuiButton(field_96261_n, width / 2 + 5, height / 4 + 120 + 17, 95, 20, var1.translateKey("gui.cancel")));
+		buttonList.add(new GuiButton(field_96253_d, width / 2 - 100, height / 4 + 120 + 17, 97, 20, I18n.func_135053_a("mco.create.world")));
+		buttonList.add(new GuiButton(field_96261_n, width / 2 + 5, height / 4 + 120 + 17, 95, 20, I18n.func_135053_a("gui.cancel")));
 		field_96257_c = new GuiTextField(fontRenderer, width / 2 - 100, 65, 200, 20);
 		field_96257_c.setFocused(true);
 		if(field_98108_c != null)
@@ -90,18 +103,28 @@
 		{
 			field_96255_b.setText(field_98109_n);
 		}
+		if(field_110356_u == null)
+		{
+			buttonList.add(new GuiButton(field_110357_r, width / 2 - 100, 147, 200, 20, I18n.func_135053_a("mco.template.default.name")));
+		} else
+		{
+			field_96255_b.setText("");
+			field_96255_b.setEnabled(false);
+			field_96255_b.setFocused(false);
+			buttonList.add(new GuiButton(field_110357_r, width / 2 - 100, 147, 200, 20, I18n.func_135053_a("mco.template.name") + ": " + field_110356_u.field_110732_b));
+		}
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
 	{
 		field_96257_c.textboxKeyTyped(par1, par2);
 		field_96255_b.textboxKeyTyped(par1, par2);
-		if(par1 == 9)
+		if(par2 == 15)
 		{
 			field_96257_c.setFocused(!field_96257_c.isFocused());
 			field_96255_b.setFocused(!field_96255_b.isFocused());
 		}
-		if(par1 == 13)
+		if(par2 == 28 || par2 == 156)
 		{
 			actionPerformed((GuiButton) buttonList.get(0));
 		}
@@ -127,6 +150,21 @@
 		field_98109_n = field_96255_b.getText();
 	}
 	
+	static Minecraft func_130026_d(GuiScreenCreateOnlineWorld p_130026_0_)
+	{
+		return p_130026_0_.mc;
+	}
+	
+	static Minecraft func_130027_e(GuiScreenCreateOnlineWorld p_130027_0_)
+	{
+		return p_130027_0_.mc;
+	}
+	
+	static Minecraft func_130028_f(GuiScreenCreateOnlineWorld p_130028_0_)
+	{
+		return p_130028_0_.mc;
+	}
+	
 	static Minecraft func_96246_c(GuiScreenCreateOnlineWorld par0GuiScreenCreateOnlineWorld)
 	{
 		return par0GuiScreenCreateOnlineWorld.mc;
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenDemo.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenDemo.java
index 3c4d474..36ed17f 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenDemo.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenDemo.java
@@ -2,11 +2,12 @@
 
 import java.net.URI;
 
-import org.lwjgl.input.Keyboard;
 import org.lwjgl.opengl.GL11;
 
 public class GuiScreenDemo extends GuiScreen
 {
+	private static final ResourceLocation field_110407_a = new ResourceLocation("textures/gui/demo_background.png");
+	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
 	{
 		switch(par1GuiButton.id)
@@ -33,7 +34,7 @@
 	{
 		super.drawDefaultBackground();
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/demo_bg.png");
+		mc.func_110434_K().func_110577_a(field_110407_a);
 		int var1 = (width - 248) / 2;
 		int var2 = (height - 166) / 2;
 		drawTexturedModalRect(var1, var2, 0, 0, 248, 166);
@@ -44,21 +45,14 @@
 		drawDefaultBackground();
 		int var4 = (width - 248) / 2 + 10;
 		int var5 = (height - 166) / 2 + 8;
-		fontRenderer.drawString(StatCollector.translateToLocal("demo.help.title"), var4, var5, 2039583);
+		fontRenderer.drawString(I18n.func_135053_a("demo.help.title"), var4, var5, 2039583);
 		var5 += 12;
-		GameSettings var7 = mc.gameSettings;
-		String var6 = StatCollector.translateToLocal("demo.help.movementShort");
-		var6 = String.format(var6, new Object[] { Keyboard.getKeyName(var7.keyBindForward.keyCode), Keyboard.getKeyName(var7.keyBindLeft.keyCode), Keyboard.getKeyName(var7.keyBindBack.keyCode), Keyboard.getKeyName(var7.keyBindRight.keyCode) });
-		fontRenderer.drawString(var6, var4, var5, 5197647);
-		var6 = StatCollector.translateToLocal("demo.help.movementMouse");
-		fontRenderer.drawString(var6, var4, var5 + 12, 5197647);
-		var6 = StatCollector.translateToLocal("demo.help.jump");
-		var6 = String.format(var6, new Object[] { Keyboard.getKeyName(var7.keyBindJump.keyCode) });
-		fontRenderer.drawString(var6, var4, var5 + 24, 5197647);
-		var6 = StatCollector.translateToLocal("demo.help.inventory");
-		var6 = String.format(var6, new Object[] { Keyboard.getKeyName(var7.keyBindInventory.keyCode) });
-		fontRenderer.drawString(var6, var4, var5 + 36, 5197647);
-		fontRenderer.drawSplitString(StatCollector.translateToLocal("demo.help.fullWrapped"), var4, var5 + 68, 218, 2039583);
+		GameSettings var6 = mc.gameSettings;
+		fontRenderer.drawString(I18n.func_135052_a("demo.help.movementShort", new Object[] { GameSettings.getKeyDisplayString(var6.keyBindForward.keyCode), GameSettings.getKeyDisplayString(var6.keyBindLeft.keyCode), GameSettings.getKeyDisplayString(var6.keyBindBack.keyCode), GameSettings.getKeyDisplayString(var6.keyBindRight.keyCode) }), var4, var5, 5197647);
+		fontRenderer.drawString(I18n.func_135053_a("demo.help.movementMouse"), var4, var5 + 12, 5197647);
+		fontRenderer.drawString(I18n.func_135052_a("demo.help.jump", new Object[] { GameSettings.getKeyDisplayString(var6.keyBindJump.keyCode) }), var4, var5 + 24, 5197647);
+		fontRenderer.drawString(I18n.func_135052_a("demo.help.inventory", new Object[] { GameSettings.getKeyDisplayString(var6.keyBindInventory.keyCode) }), var4, var5 + 36, 5197647);
+		fontRenderer.drawSplitString(I18n.func_135053_a("demo.help.fullWrapped"), var4, var5 + 68, 218, 2039583);
 		super.drawScreen(par1, par2, par3);
 	}
 	
@@ -66,8 +60,8 @@
 	{
 		buttonList.clear();
 		byte var1 = -16;
-		buttonList.add(new GuiButton(1, width / 2 - 116, height / 2 + 62 + var1, 114, 20, StatCollector.translateToLocal("demo.help.buy")));
-		buttonList.add(new GuiButton(2, width / 2 + 2, height / 2 + 62 + var1, 114, 20, StatCollector.translateToLocal("demo.help.later")));
+		buttonList.add(new GuiButton(1, width / 2 - 116, height / 2 + 62 + var1, 114, 20, I18n.func_135053_a("demo.help.buy")));
+		buttonList.add(new GuiButton(2, width / 2 + 2, height / 2 + 62 + var1, 114, 20, I18n.func_135053_a("demo.help.later")));
 	}
 	
 	@Override public void updateScreen()
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenDisconnectedOnline.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenDisconnectedOnline.java
index d27c4aa..f767758 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenDisconnectedOnline.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenDisconnectedOnline.java
@@ -11,13 +11,12 @@
 	private List field_98110_d;
 	private final GuiScreen field_98114_n;
 	
-	public GuiScreenDisconnectedOnline(GuiScreen par1GuiScreen, String par2Str, String par3Str, Object ... par4ArrayOfObj)
+	public GuiScreenDisconnectedOnline(GuiScreen p_i1108_1_, String p_i1108_2_, String p_i1108_3_, Object ... p_i1108_4_)
 	{
-		StringTranslate var5 = StringTranslate.getInstance();
-		field_98114_n = par1GuiScreen;
-		field_98113_a = var5.translateKey(par2Str);
-		field_98111_b = par3Str;
-		field_98112_c = par4ArrayOfObj;
+		field_98114_n = p_i1108_1_;
+		field_98113_a = I18n.func_135053_a(p_i1108_2_);
+		field_98111_b = p_i1108_3_;
+		field_98112_c = p_i1108_4_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -46,15 +45,14 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		buttonList.clear();
-		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.back")));
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120 + 12, I18n.func_135053_a("gui.back")));
 		if(field_98112_c != null)
 		{
-			field_98110_d = fontRenderer.listFormattedStringToWidth(var1.translateKeyFormat(field_98111_b, field_98112_c), width - 50);
+			field_98110_d = fontRenderer.listFormattedStringToWidth(I18n.func_135052_a(field_98111_b, field_98112_c), width - 50);
 		} else
 		{
-			field_98110_d = fontRenderer.listFormattedStringToWidth(var1.translateKey(field_98111_b), width - 50);
+			field_98110_d = fontRenderer.listFormattedStringToWidth(I18n.func_135053_a(field_98111_b), width - 50);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenEditOnlineWorld.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenEditOnlineWorld.java
index 15235c7..5a1c5a2 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenEditOnlineWorld.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenEditOnlineWorld.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import java.io.UnsupportedEncodingException;
+
 import org.lwjgl.input.Keyboard;
 
 public class GuiScreenEditOnlineWorld extends GuiScreen
@@ -15,11 +17,11 @@
 	private int field_104052_r;
 	private GuiScreenOnlineServersSubscreen field_104051_s;
 	
-	public GuiScreenEditOnlineWorld(GuiScreen par1GuiScreen, GuiScreen par2GuiScreen, McoServer par3McoServer)
+	public GuiScreenEditOnlineWorld(GuiScreen p_i1109_1_, GuiScreen p_i1109_2_, McoServer p_i1109_3_)
 	{
-		field_96204_a = par1GuiScreen;
-		field_96202_b = par2GuiScreen;
-		field_96205_n = par3McoServer;
+		field_96204_a = p_i1109_1_;
+		field_96202_b = p_i1109_2_;
+		field_96205_n = p_i1109_3_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -44,11 +46,10 @@
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey("mco.configure.world.edit.title"), width / 2, 17, 16777215);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.name"), field_104054_p, 43, 10526880);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.description"), field_104054_p, 84, 10526880);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.configure.world.edit.title"), width / 2, 17, 16777215);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.name"), field_104054_p, 43, 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.description"), field_104054_p, 84, 10526880);
 		field_96201_d.drawTextBox();
 		field_96203_c.drawTextBox();
 		field_104051_s.func_104071_a(this, fontRenderer);
@@ -57,30 +58,34 @@
 	
 	private void func_96200_g()
 	{
-		McoClient var1 = new McoClient(mc.session);
+		McoClient var1 = new McoClient(mc.func_110432_I());
 		try
 		{
 			String var2 = field_96203_c.getText() != null && !field_96203_c.getText().trim().equals("") ? field_96203_c.getText() : "";
 			var1.func_96384_a(field_96205_n.field_96408_a, field_96201_d.getText(), var2, field_104051_s.field_104076_e, field_104051_s.field_104073_f);
 			field_96205_n.func_96399_a(field_96201_d.getText());
 			field_96205_n.func_96400_b(field_96203_c.getText());
+			field_96205_n.field_110729_i = field_104051_s.field_104076_e;
+			field_96205_n.field_110728_j = field_104051_s.field_104073_f;
 			mc.displayGuiScreen(new GuiScreenConfigureWorld(field_96202_b, field_96205_n));
-		} catch(Exception var3)
+		} catch(ExceptionMcoService var3)
 		{
-			;
+			mc.getLogAgent().logSevere(var3.toString());
+		} catch(UnsupportedEncodingException var4)
+		{
+			mc.getLogAgent().logWarning("Realms: " + var4.getLocalizedMessage());
 		}
 	}
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		field_104054_p = width / 4;
 		field_104053_q = width / 4 - 2;
 		field_104052_r = width / 2 + 4;
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		buttonList.add(field_96206_o = new GuiButton(0, field_104054_p, height / 4 + 120 + 22, field_104053_q, 20, var1.translateKey("mco.configure.world.buttons.done")));
-		buttonList.add(new GuiButton(1, field_104052_r, height / 4 + 120 + 22, field_104053_q, 20, var1.translateKey("gui.cancel")));
+		buttonList.add(field_96206_o = new GuiButton(0, field_104054_p, height / 4 + 120 + 22, field_104053_q, 20, I18n.func_135053_a("mco.configure.world.buttons.done")));
+		buttonList.add(new GuiButton(1, field_104052_r, height / 4 + 120 + 22, field_104053_q, 20, I18n.func_135053_a("gui.cancel")));
 		field_96201_d = new GuiTextField(fontRenderer, field_104054_p, 56, 212, 20);
 		field_96201_d.setFocused(true);
 		field_96201_d.setMaxStringLength(32);
@@ -88,7 +93,7 @@
 		field_96203_c = new GuiTextField(fontRenderer, field_104054_p, 96, 212, 20);
 		field_96203_c.setMaxStringLength(32);
 		field_96203_c.setText(field_96205_n.func_96397_a());
-		field_104051_s = new GuiScreenOnlineServersSubscreen(width, height, field_104054_p, 122);
+		field_104051_s = new GuiScreenOnlineServersSubscreen(width, height, field_104054_p, 122, field_96205_n.field_110729_i, field_96205_n.field_110728_j);
 		buttonList.addAll(field_104051_s.field_104079_a);
 	}
 	
@@ -96,19 +101,12 @@
 	{
 		field_96201_d.textboxKeyTyped(par1, par2);
 		field_96203_c.textboxKeyTyped(par1, par2);
-		if(par1 == 9)
+		if(par2 == 15)
 		{
-			if(field_96201_d.isFocused())
-			{
-				field_96201_d.setFocused(false);
-				field_96203_c.setFocused(true);
-			} else
-			{
-				field_96201_d.setFocused(true);
-				field_96203_c.setFocused(false);
-			}
+			field_96201_d.setFocused(!field_96201_d.isFocused());
+			field_96203_c.setFocused(!field_96203_c.isFocused());
 		}
-		if(par1 == 13)
+		if(par2 == 28 || par2 == 156)
 		{
 			func_96200_g();
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenHorseInventory.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenHorseInventory.java
new file mode 100644
index 0000000..b11f6a6
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenHorseInventory.java
@@ -0,0 +1,53 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+
+public class GuiScreenHorseInventory extends GuiContainer
+{
+	private static final ResourceLocation field_110414_t = new ResourceLocation("textures/gui/container/horse.png");
+	private IInventory field_110413_u;
+	private IInventory field_110412_v;
+	private EntityHorse field_110411_w;
+	private float field_110416_x;
+	private float field_110415_y;
+	
+	public GuiScreenHorseInventory(IInventory p_i1093_1_, IInventory p_i1093_2_, EntityHorse p_i1093_3_)
+	{
+		super(new ContainerHorseInventory(p_i1093_1_, p_i1093_2_, p_i1093_3_));
+		field_110413_u = p_i1093_1_;
+		field_110412_v = p_i1093_2_;
+		field_110411_w = p_i1093_3_;
+		allowUserInput = false;
+	}
+	
+	@Override protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3)
+	{
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		mc.func_110434_K().func_110577_a(field_110414_t);
+		int var4 = (width - xSize) / 2;
+		int var5 = (height - ySize) / 2;
+		drawTexturedModalRect(var4, var5, 0, 0, xSize, ySize);
+		if(field_110411_w.func_110261_ca())
+		{
+			drawTexturedModalRect(var4 + 79, var5 + 17, 0, ySize, 90, 54);
+		}
+		if(field_110411_w.func_110259_cr())
+		{
+			drawTexturedModalRect(var4 + 7, var5 + 35, 0, ySize + 54, 18, 18);
+		}
+		GuiInventory.func_110423_a(var4 + 51, var5 + 60, 17, var4 + 51 - field_110416_x, var5 + 75 - 50 - field_110415_y, field_110411_w);
+	}
+	
+	@Override protected void drawGuiContainerForegroundLayer(int par1, int par2)
+	{
+		fontRenderer.drawString(field_110412_v.isInvNameLocalized() ? field_110412_v.getInvName() : I18n.func_135053_a(field_110412_v.getInvName()), 8, 6, 4210752);
+		fontRenderer.drawString(field_110413_u.isInvNameLocalized() ? field_110413_u.getInvName() : I18n.func_135053_a(field_110413_u.getInvName()), 8, ySize - 96 + 2, 4210752);
+	}
+	
+	@Override public void drawScreen(int par1, int par2, float par3)
+	{
+		field_110416_x = par1;
+		field_110415_y = par2;
+		super.drawScreen(par1, par2, par3);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenInvite.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenInvite.java
index 5ebf12f..1f52801 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenInvite.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenInvite.java
@@ -14,13 +14,13 @@
 	private final int field_96229_o = 1;
 	private String field_101016_p = "Could not invite the provided name";
 	private String field_96226_p;
-	private boolean field_96225_q = false;
+	private boolean field_96225_q;
 	
-	public GuiScreenInvite(GuiScreen par1GuiScreen, GuiScreenConfigureWorld par2GuiScreenConfigureWorld, McoServer par3McoServer)
+	public GuiScreenInvite(GuiScreen p_i1110_1_, GuiScreenConfigureWorld p_i1110_2_, McoServer p_i1110_3_)
 	{
-		field_96224_c = par1GuiScreen;
-		field_96222_d = par2GuiScreenConfigureWorld;
-		field_96223_b = par3McoServer;
+		field_96224_c = p_i1110_1_;
+		field_96222_d = p_i1110_2_;
+		field_96223_b = p_i1110_3_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -32,7 +32,8 @@
 				mc.displayGuiScreen(field_96222_d);
 			} else if(par1GuiButton.id == 0)
 			{
-				McoClient var2 = new McoClient(mc.session);
+				McoClient var2 = new McoClient(mc.func_110432_I());
+				if(field_96227_a.getText() == null || field_96227_a.getText().isEmpty()) return;
 				try
 				{
 					McoServer var3 = var2.func_96387_b(field_96223_b.field_96408_a, field_96227_a.getText());
@@ -46,9 +47,11 @@
 					}
 				} catch(ExceptionMcoService var4)
 				{
+					mc.getLogAgent().logSevere(var4.toString());
 					func_101015_a(var4.field_96391_b);
 				} catch(IOException var5)
 				{
+					mc.getLogAgent().logWarning("Realms: could not parse response");
 					func_101015_a(field_101016_p);
 				}
 			}
@@ -57,10 +60,8 @@
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey(""), width / 2, 17, 16777215);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.invite.profile.name"), width / 2 - 100, 53, 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.invite.profile.name"), width / 2 - 100, 53, 10526880);
 		if(field_96225_q)
 		{
 			drawCenteredString(fontRenderer, field_96226_p, width / 2, 100, 16711680);
@@ -77,11 +78,10 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, var1.translateKey("mco.configure.world.buttons.invite")));
-		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.cancel")));
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, I18n.func_135053_a("mco.configure.world.buttons.invite")));
+		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, I18n.func_135053_a("gui.cancel")));
 		field_96227_a = new GuiTextField(fontRenderer, width / 2 - 100, 66, 200, 20);
 		field_96227_a.setFocused(true);
 	}
@@ -89,7 +89,7 @@
 	@Override protected void keyTyped(char par1, int par2)
 	{
 		field_96227_a.textboxKeyTyped(par1, par2);
-		if(par1 == 9)
+		if(par2 == 15)
 		{
 			if(field_96227_a.isFocused())
 			{
@@ -99,7 +99,7 @@
 				field_96227_a.setFocused(true);
 			}
 		}
-		if(par1 == 13)
+		if(par2 == 28 || par2 == 156)
 		{
 			actionPerformed((GuiButton) buttonList.get(0));
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenLongRunningTask.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenLongRunningTask.java
index 94a03af..cb1b663 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenLongRunningTask.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenLongRunningTask.java
@@ -11,21 +11,21 @@
 	private final GuiScreen field_96215_c;
 	private final Thread field_98118_d;
 	private volatile String field_96212_d = "";
-	private volatile boolean field_96219_n = false;
+	private volatile boolean field_96219_n;
 	private volatile String field_96220_o;
-	private volatile boolean field_96218_p = false;
-	private int field_96216_q = 0;
+	private volatile boolean field_96218_p;
+	private int field_96216_q;
 	private TaskLongRunning field_96214_r;
-	public static final String[] field_96217_a = new String[] { "\u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583", "_ \u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584", "_ _ \u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585", "_ _ _ \u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586", "_ _ _ _ \u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587", "_ _ _ _ _ \u2583 \u2584 \u2585 \u2586 \u2587 \u2588", "_ _ _ _ \u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587", "_ _ _ \u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586", "_ _ \u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585", "_ \u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584", "\u2583 \u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583", "\u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583 _", "\u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583 _ _", "\u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583 _ _ _", "\u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583 _ _ _ _", "\u2588 \u2587 \u2586 \u2585 \u2584 \u2583 _ _ _ _ _", "\u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583 _ _ _ _", "\u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583 _ _ _", "\u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583 _ _", "\u2584 \u2585 \u2586 \u2587 \u2588 \u2587 \u2586 \u2585 \u2584 \u2583 _" };
+	public static final String[] field_96217_a = new String[] { "\u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9", "_ \u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1", "_ _ \u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6", "_ _ _ \u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc", "_ _ _ _ \u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1", "_ _ _ _ _ \u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0", "_ _ _ _ \u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1", "_ _ _ \u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc", "_ _ \u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6", "_ \u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1", "\u201a\u00f1\u00c9 \u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9", "\u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9 _", "\u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9 _ _", "\u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9 _ _ _", "\u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9 _ _ _ _", "\u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9 _ _ _ _ _", "\u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9 _ _ _ _", "\u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9 _ _ _", "\u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9 _ _", "\u201a\u00f1\u00d1 \u201a\u00f1\u00d6 \u201a\u00f1\u00dc \u201a\u00f1\u00e1 \u201a\u00f1\u00e0 \u201a\u00f1\u00e1 \u201a\u00f1\u00dc \u201a\u00f1\u00d6 \u201a\u00f1\u00d1 \u201a\u00f1\u00c9 _" };
 	
-	public GuiScreenLongRunningTask(Minecraft par1Minecraft, GuiScreen par2GuiScreen, TaskLongRunning par3TaskLongRunning)
+	public GuiScreenLongRunningTask(Minecraft p_i1112_1_, GuiScreen p_i1112_2_, TaskLongRunning p_i1112_3_)
 	{
 		super.buttonList = Collections.synchronizedList(new ArrayList());
-		mc = par1Minecraft;
-		field_96215_c = par2GuiScreen;
-		field_96214_r = par3TaskLongRunning;
-		par3TaskLongRunning.func_96574_a(this);
-		field_98118_d = new Thread(par3TaskLongRunning);
+		mc = p_i1112_1_;
+		field_96215_c = p_i1112_2_;
+		field_96214_r = p_i1112_3_;
+		p_i1112_3_.func_96574_a(this);
+		field_98118_d = new Thread(p_i1112_3_);
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenMcoWorldTemplate.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenMcoWorldTemplate.java
new file mode 100644
index 0000000..9bd8133
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenMcoWorldTemplate.java
@@ -0,0 +1,144 @@
+package net.minecraft.src;
+
+import java.util.Collections;
+import java.util.List;
+
+import net.minecraft.client.Minecraft;
+
+import org.lwjgl.input.Keyboard;
+
+public class GuiScreenMcoWorldTemplate extends GuiScreen
+{
+	private final ScreenWithCallback field_110401_a;
+	private WorldTemplate field_110398_b;
+	private List field_110399_c = Collections.emptyList();
+	private GuiScreenMcoWorldTemplateSelectionList field_110396_d;
+	private int field_110397_e = -1;
+	private GuiButton field_110400_p;
+	
+	public GuiScreenMcoWorldTemplate(ScreenWithCallback p_i1115_1_, WorldTemplate p_i1115_2_)
+	{
+		field_110401_a = p_i1115_1_;
+		field_110398_b = p_i1115_2_;
+	}
+	
+	@Override protected void actionPerformed(GuiButton par1GuiButton)
+	{
+		if(par1GuiButton.enabled)
+		{
+			if(par1GuiButton.id == 1)
+			{
+				func_110394_h();
+			} else if(par1GuiButton.id == 0)
+			{
+				field_110401_a.func_110354_a((Object) null);
+				mc.displayGuiScreen(field_110401_a);
+			} else
+			{
+				field_110396_d.actionPerformed(par1GuiButton);
+			}
+		}
+	}
+	
+	@Override public void drawScreen(int par1, int par2, float par3)
+	{
+		drawDefaultBackground();
+		field_110396_d.drawScreen(par1, par2, par3);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.template.title"), width / 2, 20, 16777215);
+		super.drawScreen(par1, par2, par3);
+	}
+	
+	private void func_110385_g()
+	{
+		buttonList.add(new GuiButton(0, width / 2 + 6, height - 52, 153, 20, I18n.func_135053_a("gui.cancel")));
+		buttonList.add(field_110400_p = new GuiButton(1, width / 2 - 154, height - 52, 153, 20, I18n.func_135053_a("mco.template.button.select")));
+	}
+	
+	private void func_110394_h()
+	{
+		if(field_110397_e >= 0 && field_110397_e < field_110399_c.size())
+		{
+			field_110401_a.func_110354_a(field_110399_c.get(field_110397_e));
+			mc.displayGuiScreen(field_110401_a);
+		}
+	}
+	
+	@Override public void initGui()
+	{
+		Keyboard.enableRepeatEvents(true);
+		buttonList.clear();
+		field_110396_d = new GuiScreenMcoWorldTemplateSelectionList(this);
+		new GuiScreenMcoWorldTemplateDownloadThread(this).start();
+		func_110385_g();
+	}
+	
+	@Override public void updateScreen()
+	{
+		super.updateScreen();
+	}
+	
+	static Minecraft func_110382_a(GuiScreenMcoWorldTemplate p_110382_0_)
+	{
+		return p_110382_0_.mc;
+	}
+	
+	static FontRenderer func_110384_i(GuiScreenMcoWorldTemplate p_110384_0_)
+	{
+		return p_110384_0_.fontRenderer;
+	}
+	
+	static FontRenderer func_110387_h(GuiScreenMcoWorldTemplate p_110387_0_)
+	{
+		return p_110387_0_.fontRenderer;
+	}
+	
+	static List func_110388_a(GuiScreenMcoWorldTemplate p_110388_0_, List p_110388_1_)
+	{
+		return p_110388_0_.field_110399_c = p_110388_1_;
+	}
+	
+	static FontRenderer func_110389_g(GuiScreenMcoWorldTemplate p_110389_0_)
+	{
+		return p_110389_0_.fontRenderer;
+	}
+	
+	static Minecraft func_110392_b(GuiScreenMcoWorldTemplate p_110392_0_)
+	{
+		return p_110392_0_.mc;
+	}
+	
+	static List func_110395_c(GuiScreenMcoWorldTemplate p_110395_0_)
+	{
+		return p_110395_0_.field_110399_c;
+	}
+	
+	static int func_130062_f(GuiScreenMcoWorldTemplate p_130062_0_)
+	{
+		return p_130062_0_.field_110397_e;
+	}
+	
+	static FontRenderer func_130063_j(GuiScreenMcoWorldTemplate p_130063_0_)
+	{
+		return p_130063_0_.fontRenderer;
+	}
+	
+	static int func_130064_a(GuiScreenMcoWorldTemplate p_130064_0_, int p_130064_1_)
+	{
+		return p_130064_0_.field_110397_e = p_130064_1_;
+	}
+	
+	static WorldTemplate func_130065_a(GuiScreenMcoWorldTemplate p_130065_0_, WorldTemplate p_130065_1_)
+	{
+		return p_130065_0_.field_110398_b = p_130065_1_;
+	}
+	
+	static Minecraft func_130066_c(GuiScreenMcoWorldTemplate p_130066_0_)
+	{
+		return p_130066_0_.mc;
+	}
+	
+	static WorldTemplate func_130067_e(GuiScreenMcoWorldTemplate p_130067_0_)
+	{
+		return p_130067_0_.field_110398_b;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenMcoWorldTemplateDownloadThread.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenMcoWorldTemplateDownloadThread.java
new file mode 100644
index 0000000..9eda420
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenMcoWorldTemplateDownloadThread.java
@@ -0,0 +1,23 @@
+package net.minecraft.src;
+
+class GuiScreenMcoWorldTemplateDownloadThread extends Thread
+{
+	final GuiScreenMcoWorldTemplate field_111256_a;
+	
+	GuiScreenMcoWorldTemplateDownloadThread(GuiScreenMcoWorldTemplate p_i1113_1_)
+	{
+		field_111256_a = p_i1113_1_;
+	}
+	
+	@Override public void run()
+	{
+		McoClient var1 = new McoClient(GuiScreenMcoWorldTemplate.func_110382_a(field_111256_a).func_110432_I());
+		try
+		{
+			GuiScreenMcoWorldTemplate.func_110388_a(field_111256_a, var1.func_111231_d().field_110736_a);
+		} catch(ExceptionMcoService var3)
+		{
+			GuiScreenMcoWorldTemplate.func_110392_b(field_111256_a).getLogAgent().logSevere(var3.toString());
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenMcoWorldTemplateSelectionList.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenMcoWorldTemplateSelectionList.java
new file mode 100644
index 0000000..f5e4951
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenMcoWorldTemplateSelectionList.java
@@ -0,0 +1,62 @@
+package net.minecraft.src;
+
+class GuiScreenMcoWorldTemplateSelectionList extends GuiScreenSelectLocation
+{
+	final GuiScreenMcoWorldTemplate field_111245_a;
+	
+	public GuiScreenMcoWorldTemplateSelectionList(GuiScreenMcoWorldTemplate p_i1114_1_)
+	{
+		super(GuiScreenMcoWorldTemplate.func_130066_c(p_i1114_1_), p_i1114_1_.width, p_i1114_1_.height, 32, p_i1114_1_.height - 64, 36);
+		field_111245_a = p_i1114_1_;
+	}
+	
+	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
+	{
+		if(par1 < GuiScreenMcoWorldTemplate.func_110395_c(field_111245_a).size())
+		{
+			func_111244_b(par1, par2, par3, par4, par5Tessellator);
+		}
+	}
+	
+	@Override protected void elementClicked(int par1, boolean par2)
+	{
+		if(par1 < GuiScreenMcoWorldTemplate.func_110395_c(field_111245_a).size())
+		{
+			GuiScreenMcoWorldTemplate.func_130064_a(field_111245_a, par1);
+			GuiScreenMcoWorldTemplate.func_130065_a(field_111245_a, (WorldTemplate) null);
+		}
+	}
+	
+	@Override protected boolean func_104086_b(int par1)
+	{
+		return false;
+	}
+	
+	private void func_111244_b(int p_111244_1_, int p_111244_2_, int p_111244_3_, int p_111244_4_, Tessellator p_111244_5_)
+	{
+		WorldTemplate var6 = (WorldTemplate) GuiScreenMcoWorldTemplate.func_110395_c(field_111245_a).get(p_111244_1_);
+		field_111245_a.drawString(GuiScreenMcoWorldTemplate.func_110389_g(field_111245_a), var6.field_110732_b, p_111244_2_ + 2, p_111244_3_ + 1, 16777215);
+		field_111245_a.drawString(GuiScreenMcoWorldTemplate.func_110387_h(field_111245_a), var6.field_110731_d, p_111244_2_ + 2, p_111244_3_ + 12, 7105644);
+		field_111245_a.drawString(GuiScreenMcoWorldTemplate.func_110384_i(field_111245_a), var6.field_110733_c, p_111244_2_ + 2 + 207 - GuiScreenMcoWorldTemplate.func_130063_j(field_111245_a).getStringWidth(var6.field_110733_c), p_111244_3_ + 1, 5000268);
+	}
+	
+	@Override protected int func_130003_b()
+	{
+		return getSize() * 36;
+	}
+	
+	@Override protected void func_130004_c()
+	{
+		field_111245_a.drawDefaultBackground();
+	}
+	
+	@Override protected int getSize()
+	{
+		return GuiScreenMcoWorldTemplate.func_110395_c(field_111245_a).size() + 1;
+	}
+	
+	@Override protected boolean isSelected(int par1)
+	{
+		return GuiScreenMcoWorldTemplate.func_110395_c(field_111245_a).size() == 0 ? false : par1 >= GuiScreenMcoWorldTemplate.func_110395_c(field_111245_a).size() ? false : GuiScreenMcoWorldTemplate.func_130067_e(field_111245_a) != null ? GuiScreenMcoWorldTemplate.func_130067_e(field_111245_a).field_110732_b.equals(((WorldTemplate) GuiScreenMcoWorldTemplate.func_110395_c(field_111245_a).get(par1)).field_110732_b) : par1 == GuiScreenMcoWorldTemplate.func_130062_f(field_111245_a);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenOnlineServers.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenOnlineServers.java
index 5c6bd2e..7311550 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenOnlineServers.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenOnlineServers.java
@@ -5,7 +5,6 @@
 import java.io.IOException;
 import java.net.InetSocketAddress;
 import java.net.Socket;
-import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 
@@ -16,26 +15,27 @@
 
 public class GuiScreenOnlineServers extends GuiScreen
 {
+	private static final ResourceLocation field_130039_a = new ResourceLocation("textures/gui/widgets.png");
 	private GuiScreen field_96188_a;
 	private GuiSlotOnlineServerList field_96186_b;
-	private static int field_96187_c = 0;
+	private static int field_96187_c;
 	private static final Object field_96185_d = new Object();
-	private int field_96189_n = -1;
+	private long field_96189_n = -1L;
 	private GuiButton field_96190_o;
 	private GuiButton field_96198_p;
 	private GuiButtonLink field_96197_q;
 	private GuiButton field_96196_r;
-	private String field_96195_s = null;
-	private McoServerList field_96194_t;
+	private String field_96195_s;
+	private static McoServerList field_96194_t = new McoServerList();
 	private boolean field_96193_u;
-	private List field_96192_v = Collections.emptyList();
-	private volatile int field_96199_x;
+	private List field_96192_v = Lists.newArrayList();
+	private volatile int field_96199_x = 0;
 	private Long field_102019_y;
-	private int field_104044_y = 0;
+	private int field_104044_y;
 	
-	public GuiScreenOnlineServers(GuiScreen par1)
+	public GuiScreenOnlineServers(GuiScreen p_i1123_1_)
 	{
-		field_96188_a = par1;
+		field_96188_a = p_i1123_1_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -44,20 +44,10 @@
 		{
 			if(par1GuiButton.id == 1)
 			{
-				func_96159_a(field_96189_n);
+				func_140032_e(field_96189_n);
 			} else if(par1GuiButton.id == 3)
 			{
-				List var2 = field_96194_t.func_98252_c();
-				if(field_96189_n < var2.size())
-				{
-					McoServer var3 = (McoServer) var2.get(field_96189_n);
-					McoServer var4 = func_98086_a(var3.field_96408_a);
-					if(var4 != null)
-					{
-						field_96194_t.func_98248_d();
-						mc.displayGuiScreen(new GuiScreenConfigureWorld(this, var4));
-					}
-				}
+				func_140019_s();
 			} else if(par1GuiButton.id == 0)
 			{
 				field_96194_t.func_98248_d();
@@ -76,23 +66,32 @@
 		}
 	}
 	
+	@Override public void confirmClicked(boolean par1, int par2)
+	{
+		if(par2 == 3 && par1)
+		{
+			new ThreadOnlineScreen(this).start();
+		}
+		mc.displayGuiScreen(this);
+	}
+	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
 		field_96195_s = null;
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
 		field_96186_b.drawScreen(par1, par2, par3);
-		drawCenteredString(fontRenderer, var4.translateKey("mco.title"), width / 2, 20, 16777215);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.title"), width / 2, 20, 16777215);
 		super.drawScreen(par1, par2, par3);
 		if(field_96195_s != null)
 		{
 			func_96165_a(field_96195_s, par1, par2);
 		}
+		func_130038_b(par1, par2);
 	}
 	
 	private void func_101001_e(int par1, int par2, int par3, int par4)
 	{
-		mc.renderEngine.bindTexture("/gui/gui.png");
+		mc.func_110434_K().func_110577_a(field_130039_a);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		GL11.glPushMatrix();
 		GL11.glScalef(0.5F, 0.5F, 0.5F);
@@ -100,13 +99,13 @@
 		GL11.glPopMatrix();
 		if(par3 >= par1 && par3 <= par1 + 9 && par4 >= par2 && par4 <= par2 + 9)
 		{
-			field_96195_s = "Closed World";
+			field_96195_s = I18n.func_135053_a("mco.selectServer.closed");
 		}
 	}
 	
 	private void func_101006_d(int par1, int par2, int par3, int par4)
 	{
-		mc.renderEngine.bindTexture("/gui/gui.png");
+		mc.func_110434_K().func_110577_a(field_130039_a);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		GL11.glPushMatrix();
 		GL11.glScalef(0.5F, 0.5F, 0.5F);
@@ -114,13 +113,13 @@
 		GL11.glPopMatrix();
 		if(par3 >= par1 && par3 <= par1 + 9 && par4 >= par2 && par4 <= par2 + 9)
 		{
-			field_96195_s = "Open World";
+			field_96195_s = I18n.func_135053_a("mco.selectServer.open");
 		}
 	}
 	
 	private void func_101008_c(int par1, int par2, int par3, int par4)
 	{
-		mc.renderEngine.bindTexture("/gui/gui.png");
+		mc.func_110434_K().func_110577_a(field_130039_a);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		GL11.glPushMatrix();
 		GL11.glScalef(0.5F, 0.5F, 0.5F);
@@ -128,13 +127,13 @@
 		GL11.glPopMatrix();
 		if(par3 >= par1 && par3 <= par1 + 9 && par4 >= par2 && par4 <= par2 + 9)
 		{
-			field_96195_s = "Expired World";
+			field_96195_s = I18n.func_135053_a("mco.selectServer.expired");
 		}
 	}
 	
 	public void func_102018_a(long par1)
 	{
-		field_96189_n = -1;
+		field_96189_n = -1L;
 		field_102019_y = Long.valueOf(par1);
 	}
 	
@@ -142,7 +141,7 @@
 	{
 		if(field_104044_y % 20 < 10)
 		{
-			mc.renderEngine.bindTexture("/gui/gui.png");
+			mc.func_110434_K().func_110577_a(field_130039_a);
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 			GL11.glPushMatrix();
 			GL11.glScalef(0.5F, 0.5F, 0.5F);
@@ -153,23 +152,127 @@
 		{
 			if(par5 == 0)
 			{
-				field_96195_s = "Expires in < a day";
+				field_96195_s = I18n.func_135053_a("mco.selectServer.expires.soon");
+			} else if(par5 == 1)
+			{
+				field_96195_s = I18n.func_135053_a("mco.selectServer.expires.day");
 			} else
 			{
-				field_96195_s = "Expires in " + par5 + (par5 > 1 ? " days" : " day");
+				field_96195_s = I18n.func_135052_a("mco.selectServer.expires.days", new Object[] { Integer.valueOf(par5) });
 			}
 		}
 	}
 	
-	private void func_96159_a(int par1)
+	private boolean func_130037_c(int p_130037_1_, int p_130037_2_)
 	{
-		if(par1 >= 0 && par1 < field_96192_v.size())
+		int var3 = width / 2 + 56;
+		int var4 = width / 2 + 78;
+		byte var5 = 13;
+		byte var6 = 27;
+		return var3 <= p_130037_1_ && p_130037_1_ <= var4 && var5 <= p_130037_2_ && p_130037_2_ <= var6;
+	}
+	
+	private void func_130038_b(int p_130038_1_, int p_130038_2_)
+	{
+		int var3 = field_96194_t.func_130124_d();
+		boolean var4 = func_130037_c(p_130038_1_, p_130038_2_);
+		mc.func_110434_K().func_110577_a(field_130039_a);
+		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+		GL11.glPushMatrix();
+		drawTexturedModalRect(width / 2 + 58, 15, var4 ? 166 : 182, 22, 16, 16);
+		GL11.glPopMatrix();
+		int var5;
+		int var6;
+		if(var3 != 0)
 		{
-			McoServer var2 = (McoServer) field_96192_v.get(par1);
+			var5 = 198 + (Math.min(var3, 6) - 1) * 8;
+			var6 = (int) (Math.max(0.0F, Math.max(MathHelper.sin((10 + field_104044_y) * 0.57F), MathHelper.cos(field_104044_y * 0.35F))) * -6.0F);
+			mc.func_110434_K().func_110577_a(field_130039_a);
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+			GL11.glPushMatrix();
+			drawTexturedModalRect(width / 2 + 58 + 4, 19 + var6, var5, 22, 8, 8);
+			GL11.glPopMatrix();
+		}
+		if(var4 && var3 != 0)
+		{
+			var5 = p_130038_1_ + 12;
+			var6 = p_130038_2_ - 12;
+			String var7 = I18n.func_135053_a("mco.invites.pending");
+			int var8 = fontRenderer.getStringWidth(var7);
+			drawGradientRect(var5 - 3, var6 - 3, var5 + var8 + 3, var6 + 8 + 3, -1073741824, -1073741824);
+			fontRenderer.drawStringWithShadow(var7, var5, var6, -1);
+		}
+	}
+	
+	private int func_140009_c(long p_140009_1_)
+	{
+		for(int var3 = 0; var3 < field_96192_v.size(); ++var3)
+		{
+			if(((McoServer) field_96192_v.get(var3)).field_96408_a == p_140009_1_) return var3;
+		}
+		return -1;
+	}
+	
+	private void func_140012_t()
+	{
+		int var1 = func_140009_c(field_96189_n);
+		if(field_96192_v.size() - 1 == var1)
+		{
+			--var1;
+		}
+		if(field_96192_v.size() == 0)
+		{
+			var1 = -1;
+		}
+		if(var1 >= 0 && var1 < field_96192_v.size())
+		{
+			field_96189_n = ((McoServer) field_96192_v.get(var1)).field_96408_a;
+		}
+	}
+	
+	private void func_140019_s()
+	{
+		McoServer var1 = func_140030_b(field_96189_n);
+		if(var1 != null)
+		{
+			if(mc.func_110432_I().func_111285_a().equals(var1.field_96405_e))
+			{
+				McoServer var2 = func_98086_a(var1.field_96408_a);
+				if(var2 != null)
+				{
+					field_96194_t.func_98248_d();
+					mc.displayGuiScreen(new GuiScreenConfigureWorld(this, var2));
+				}
+			} else
+			{
+				String var4 = I18n.func_135053_a("mco.configure.world.leave.question.line1");
+				String var3 = I18n.func_135053_a("mco.configure.world.leave.question.line2");
+				mc.displayGuiScreen(new GuiScreenConfirmation(this, GuiScreenConfirmationType.Info, var4, var3, 3));
+			}
+		}
+	}
+	
+	private McoServer func_140030_b(long p_140030_1_)
+	{
+		Iterator var3 = field_96192_v.iterator();
+		McoServer var4;
+		do
+		{
+			if(!var3.hasNext()) return null;
+			var4 = (McoServer) var3.next();
+		} while(var4.field_96408_a != p_140030_1_);
+		return var4;
+	}
+	
+	private void func_140032_e(long p_140032_1_)
+	{
+		McoServer var3 = func_140030_b(p_140032_1_);
+		if(var3 != null)
+		{
 			field_96194_t.func_98248_d();
-			GuiScreenLongRunningTask var3 = new GuiScreenLongRunningTask(mc, this, new TaskOnlineConnect(this, var2));
-			var3.func_98117_g();
-			mc.displayGuiScreen(var3);
+			GuiScreenLongRunningTask var4 = new GuiScreenLongRunningTask(mc, this, new TaskOnlineConnect(this, var3));
+			var4.func_98117_g();
+			mc.displayGuiScreen(var4);
 		}
 	}
 	
@@ -191,7 +294,7 @@
 		{
 			par1McoServer.field_96414_k = EnumChatFormatting.GRAY + "" + 0;
 		}
-		par1McoServer.field_96415_h = 61;
+		par1McoServer.field_96415_h = 74;
 		ServerAddress var2 = ServerAddress.func_78860_a(par1McoServer.field_96403_g);
 		Socket var3 = null;
 		DataInputStream var4 = null;
@@ -227,7 +330,6 @@
 				if(MathHelper.parseIntWithDefault(var27[0], 0) == 1)
 				{
 					par1McoServer.field_96415_h = MathHelper.parseIntWithDefault(var27[1], par1McoServer.field_96415_h);
-					par1McoServer.field_96413_j = var27[2];
 					var9 = MathHelper.parseIntWithDefault(var27[4], 0);
 					var10 = MathHelper.parseIntWithDefault(var27[5], 0);
 					if(var9 >= 0 && var10 >= 0)
@@ -239,8 +341,7 @@
 					}
 				} else
 				{
-					par1McoServer.field_96413_j = "???";
-					par1McoServer.field_96415_h = 62;
+					par1McoServer.field_96415_h = 75;
 					par1McoServer.field_96414_k = "" + EnumChatFormatting.DARK_GRAY + "???";
 				}
 			} else
@@ -265,8 +366,7 @@
 				{
 					par1McoServer.field_96414_k = "" + EnumChatFormatting.DARK_GRAY + "???";
 				}
-				par1McoServer.field_96413_j = "1.3";
-				par1McoServer.field_96415_h = 60;
+				par1McoServer.field_96415_h = 73;
 			}
 		} finally
 		{
@@ -305,30 +405,32 @@
 	
 	public void func_96178_g()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		buttonList.add(field_96196_r = new GuiButton(1, width / 2 - 154, height - 52, 100, 20, var1.translateKey("mco.selectServer.select")));
-		buttonList.add(field_96198_p = new GuiButton(2, width / 2 - 48, height - 52, 100, 20, var1.translateKey("mco.selectServer.create")));
-		buttonList.add(field_96190_o = new GuiButton(3, width / 2 + 58, height - 52, 100, 20, var1.translateKey("mco.selectServer.configure")));
-		buttonList.add(field_96197_q = new GuiButtonLink(4, width / 2 - 154, height - 28, 154, 20, var1.translateKey("mco.selectServer.moreinfo")));
-		buttonList.add(new GuiButton(0, width / 2 + 6, height - 28, 153, 20, var1.translateKey("gui.cancel")));
-		boolean var2 = field_96189_n >= 0 && field_96189_n < field_96186_b.getSize();
-		field_96196_r.enabled = var2 && ((McoServer) field_96192_v.get(field_96189_n)).field_96404_d.equals("OPEN") && !((McoServer) field_96192_v.get(field_96189_n)).field_98166_h;
-		field_96190_o.enabled = var2 && mc.session.username.equals(((McoServer) field_96192_v.get(field_96189_n)).field_96405_e);
+		buttonList.add(field_96196_r = new GuiButton(1, width / 2 - 154, height - 52, 100, 20, I18n.func_135053_a("mco.selectServer.play")));
+		buttonList.add(field_96198_p = new GuiButton(2, width / 2 - 48, height - 52, 100, 20, I18n.func_135053_a("mco.selectServer.create")));
+		buttonList.add(field_96190_o = new GuiButton(3, width / 2 + 58, height - 52, 100, 20, I18n.func_135053_a("mco.selectServer.configure")));
+		buttonList.add(field_96197_q = new GuiButtonLink(4, width / 2 - 154, height - 28, 154, 20, I18n.func_135053_a("mco.selectServer.moreinfo")));
+		buttonList.add(new GuiButton(0, width / 2 + 6, height - 28, 153, 20, I18n.func_135053_a("gui.cancel")));
+		McoServer var1 = func_140030_b(field_96189_n);
+		field_96196_r.enabled = var1 != null && var1.field_96404_d.equals("OPEN") && !var1.field_98166_h;
 		field_96198_p.enabled = field_96199_x > 0;
+		if(var1 != null && !var1.field_96405_e.equals(mc.func_110432_I().func_111285_a()))
+		{
+			field_96190_o.displayString = I18n.func_135053_a("mco.selectServer.leave");
+		}
 	}
 	
 	private McoServer func_98086_a(long par1)
 	{
-		McoClient var3 = new McoClient(mc.session);
+		McoClient var3 = new McoClient(mc.func_110432_I());
 		try
 		{
 			return var3.func_98176_a(par1);
 		} catch(ExceptionMcoService var5)
 		{
-			;
+			mc.getLogAgent().logSevere(var5.toString());
 		} catch(IOException var6)
 		{
-			;
+			mc.getLogAgent().logWarning("Realms: could not parse response");
 		}
 		return null;
 	}
@@ -337,7 +439,7 @@
 	{
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		field_96194_t = new McoServerList(mc.session);
+		field_96194_t.func_130129_a(mc.func_110432_I());
 		if(!field_96193_u)
 		{
 			field_96193_u = true;
@@ -346,7 +448,6 @@
 		{
 			field_96186_b.func_104084_a(width, height, 32, height - 64);
 		}
-		new ThreadOnlineScreen(this).start();
 		func_96178_g();
 	}
 	
@@ -358,13 +459,23 @@
 			mc.gameSettings.saveOptions();
 		} else
 		{
-			if(par1 == 13)
-			{
-				actionPerformed((GuiButton) buttonList.get(2));
-			} else
+			if(par2 != 28 && par2 != 156)
 			{
 				super.keyTyped(par1, par2);
+			} else
+			{
+				actionPerformed((GuiButton) buttonList.get(0));
 			}
+		}
+	}
+	
+	@Override protected void mouseClicked(int par1, int par2, int par3)
+	{
+		super.mouseClicked(par1, par2, par3);
+		if(func_130037_c(par1, par2) && field_96194_t.func_130124_d() != 0)
+		{
+			GuiScreenPendingInvitation var4 = new GuiScreenPendingInvitation(this);
+			mc.displayGuiScreen(var4);
 		}
 	}
 	
@@ -377,7 +488,7 @@
 	{
 		super.updateScreen();
 		++field_104044_y;
-		if(field_96194_t.func_98251_a())
+		if(field_96194_t.func_130127_a())
 		{
 			List var1 = field_96194_t.func_98252_c();
 			Iterator var2 = var1.iterator();
@@ -400,75 +511,16 @@
 					}
 				}
 			}
+			field_96199_x = field_96194_t.func_140056_e();
 			field_96192_v = var1;
 			field_96194_t.func_98250_b();
 		}
 		field_96198_p.enabled = field_96199_x > 0;
 	}
 	
-	static FontRenderer func_101000_n(GuiScreenOnlineServers par0GuiScreenOnlineServers)
-	{
-		return par0GuiScreenOnlineServers.fontRenderer;
-	}
-	
-	static void func_101002_a(GuiScreenOnlineServers par0GuiScreenOnlineServers, McoServer par1McoServer) throws IOException
-	{
-		par0GuiScreenOnlineServers.func_96174_a(par1McoServer);
-	}
-	
-	static Minecraft func_101004_o(GuiScreenOnlineServers par0GuiScreenOnlineServers)
-	{
-		return par0GuiScreenOnlineServers.mc;
-	}
-	
-	static FontRenderer func_101005_j(GuiScreenOnlineServers par0GuiScreenOnlineServers)
-	{
-		return par0GuiScreenOnlineServers.fontRenderer;
-	}
-	
-	static Object func_101007_h()
-	{
-		return field_96185_d;
-	}
-	
-	static void func_101009_c(GuiScreenOnlineServers par0GuiScreenOnlineServers, int par1, int par2, int par3, int par4)
-	{
-		par0GuiScreenOnlineServers.func_101001_e(par1, par2, par3, par4);
-	}
-	
-	static int func_101010_i()
-	{
-		return field_96187_c;
-	}
-	
-	static String func_101011_a(GuiScreenOnlineServers par0GuiScreenOnlineServers, String par1Str)
-	{
-		return par0GuiScreenOnlineServers.field_96195_s = par1Str;
-	}
-	
-	static void func_101012_b(GuiScreenOnlineServers par0GuiScreenOnlineServers, int par1, int par2, int par3, int par4)
-	{
-		par0GuiScreenOnlineServers.func_101008_c(par1, par2, par3, par4);
-	}
-	
-	static int func_101013_k()
-	{
-		return field_96187_c--;
-	}
-	
-	static int func_101014_j()
-	{
-		return field_96187_c++;
-	}
-	
-	static void func_104030_a(GuiScreenOnlineServers par0GuiScreenOnlineServers, int par1, int par2, int par3, int par4, int par5)
-	{
-		par0GuiScreenOnlineServers.func_104039_b(par1, par2, par3, par4, par5);
-	}
-	
 	static void func_104031_c(GuiScreenOnlineServers par0GuiScreenOnlineServers, int par1, int par2, int par3, int par4)
 	{
-		par0GuiScreenOnlineServers.func_101006_d(par1, par2, par3, par4);
+		par0GuiScreenOnlineServers.func_101008_c(par1, par2, par3, par4);
 	}
 	
 	static Minecraft func_104032_j(GuiScreenOnlineServers par0GuiScreenOnlineServers)
@@ -476,29 +528,134 @@
 		return par0GuiScreenOnlineServers.mc;
 	}
 	
-	static FontRenderer func_104038_i(GuiScreenOnlineServers par0GuiScreenOnlineServers)
+	static FontRenderer func_110402_q(GuiScreenOnlineServers p_110402_0_)
 	{
-		return par0GuiScreenOnlineServers.fontRenderer;
+		return p_110402_0_.fontRenderer;
 	}
 	
-	static GuiButton func_96161_f(GuiScreenOnlineServers par0GuiScreenOnlineServers)
+	static void func_140008_c(GuiScreenOnlineServers p_140008_0_, long p_140008_1_)
 	{
-		return par0GuiScreenOnlineServers.field_96190_o;
+		p_140008_0_.func_140032_e(p_140008_1_);
 	}
 	
-	static Minecraft func_96177_a(GuiScreenOnlineServers par0GuiScreenOnlineServers)
+	static FontRenderer func_140010_p(GuiScreenOnlineServers p_140010_0_)
 	{
-		return par0GuiScreenOnlineServers.mc;
+		return p_140010_0_.fontRenderer;
 	}
 	
-	static int func_98072_d(GuiScreenOnlineServers par0GuiScreenOnlineServers)
+	static McoServer func_140011_a(GuiScreenOnlineServers p_140011_0_, long p_140011_1_)
 	{
-		return par0GuiScreenOnlineServers.field_96189_n;
+		return p_140011_0_.func_140030_b(p_140011_1_);
 	}
 	
-	static FontRenderer func_98074_m(GuiScreenOnlineServers par0GuiScreenOnlineServers)
+	static List func_140013_c(GuiScreenOnlineServers p_140013_0_)
 	{
-		return par0GuiScreenOnlineServers.fontRenderer;
+		return p_140013_0_.field_96192_v;
+	}
+	
+	static Minecraft func_140014_l(GuiScreenOnlineServers p_140014_0_)
+	{
+		return p_140014_0_.mc;
+	}
+	
+	static Minecraft func_140015_g(GuiScreenOnlineServers p_140015_0_)
+	{
+		return p_140015_0_.mc;
+	}
+	
+	static int func_140016_k()
+	{
+		return field_96187_c++;
+	}
+	
+	static void func_140017_d(GuiScreenOnlineServers p_140017_0_)
+	{
+		p_140017_0_.func_140012_t();
+	}
+	
+	static int func_140018_j()
+	{
+		return field_96187_c;
+	}
+	
+	static void func_140020_c(GuiScreenOnlineServers p_140020_0_, int p_140020_1_, int p_140020_2_, int p_140020_3_, int p_140020_4_)
+	{
+		p_140020_0_.func_101006_d(p_140020_1_, p_140020_2_, p_140020_3_, p_140020_4_);
+	}
+	
+	static int func_140021_r()
+	{
+		return field_96187_c--;
+	}
+	
+	static FontRenderer func_140023_k(GuiScreenOnlineServers p_140023_0_)
+	{
+		return p_140023_0_.fontRenderer;
+	}
+	
+	static void func_140024_a(GuiScreenOnlineServers p_140024_0_, McoServer p_140024_1_) throws IOException
+	{
+		p_140024_0_.func_96174_a(p_140024_1_);
+	}
+	
+	static int func_140027_d(GuiScreenOnlineServers p_140027_0_, long p_140027_1_)
+	{
+		return p_140027_0_.func_140009_c(p_140027_1_);
+	}
+	
+	static Object func_140029_i()
+	{
+		return field_96185_d;
+	}
+	
+	static void func_140031_a(GuiScreenOnlineServers p_140031_0_, int p_140031_1_, int p_140031_2_, int p_140031_3_, int p_140031_4_, int p_140031_5_)
+	{
+		p_140031_0_.func_104039_b(p_140031_1_, p_140031_2_, p_140031_3_, p_140031_4_, p_140031_5_);
+	}
+	
+	static GuiButton func_140033_i(GuiScreenOnlineServers p_140033_0_)
+	{
+		return p_140033_0_.field_96196_r;
+	}
+	
+	static void func_140035_b(GuiScreenOnlineServers p_140035_0_, int p_140035_1_, int p_140035_2_, int p_140035_3_, int p_140035_4_)
+	{
+		p_140035_0_.func_101001_e(p_140035_1_, p_140035_2_, p_140035_3_, p_140035_4_);
+	}
+	
+	static long func_140036_b(GuiScreenOnlineServers p_140036_0_, long p_140036_1_)
+	{
+		return p_140036_0_.field_96189_n = p_140036_1_;
+	}
+	
+	static Minecraft func_140037_f(GuiScreenOnlineServers p_140037_0_)
+	{
+		return p_140037_0_.mc;
+	}
+	
+	static GuiButton func_140038_h(GuiScreenOnlineServers p_140038_0_)
+	{
+		return p_140038_0_.field_96190_o;
+	}
+	
+	static FontRenderer func_140039_m(GuiScreenOnlineServers p_140039_0_)
+	{
+		return p_140039_0_.fontRenderer;
+	}
+	
+	static McoServerList func_140040_h()
+	{
+		return field_96194_t;
+	}
+	
+	static long func_140041_a(GuiScreenOnlineServers p_140041_0_)
+	{
+		return p_140041_0_.field_96189_n;
+	}
+	
+	static Minecraft func_142023_q(GuiScreenOnlineServers p_142023_0_)
+	{
+		return p_142023_0_.mc;
 	}
 	
 	static Minecraft func_98075_b(GuiScreenOnlineServers par0GuiScreenOnlineServers)
@@ -511,48 +668,8 @@
 		return par0GuiScreenOnlineServers.mc;
 	}
 	
-	static void func_98078_c(GuiScreenOnlineServers par0GuiScreenOnlineServers, int par1)
-	{
-		par0GuiScreenOnlineServers.func_96159_a(par1);
-	}
-	
 	static FontRenderer func_98079_k(GuiScreenOnlineServers par0GuiScreenOnlineServers)
 	{
 		return par0GuiScreenOnlineServers.fontRenderer;
-	}
-	
-	static int func_98081_a(GuiScreenOnlineServers par0GuiScreenOnlineServers, int par1)
-	{
-		return par0GuiScreenOnlineServers.field_96199_x = par1;
-	}
-	
-	static FontRenderer func_98084_i(GuiScreenOnlineServers par0GuiScreenOnlineServers)
-	{
-		return par0GuiScreenOnlineServers.fontRenderer;
-	}
-	
-	static FontRenderer func_98087_l(GuiScreenOnlineServers par0GuiScreenOnlineServers)
-	{
-		return par0GuiScreenOnlineServers.fontRenderer;
-	}
-	
-	static int func_98089_b(GuiScreenOnlineServers par0GuiScreenOnlineServers, int par1)
-	{
-		return par0GuiScreenOnlineServers.field_96189_n = par1;
-	}
-	
-	static Minecraft func_98091_h(GuiScreenOnlineServers par0GuiScreenOnlineServers)
-	{
-		return par0GuiScreenOnlineServers.mc;
-	}
-	
-	static GuiButton func_98092_g(GuiScreenOnlineServers par0GuiScreenOnlineServers)
-	{
-		return par0GuiScreenOnlineServers.field_96196_r;
-	}
-	
-	static List func_98094_c(GuiScreenOnlineServers par0GuiScreenOnlineServers)
-	{
-		return par0GuiScreenOnlineServers.field_96192_v;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenOnlineServersSubscreen.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenOnlineServersSubscreen.java
index b8da428..b8666b5 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenOnlineServersSubscreen.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenOnlineServersSubscreen.java
@@ -13,23 +13,24 @@
 	String[] field_104077_b;
 	String[] field_104078_c;
 	String[][] field_104075_d;
-	int field_104076_e = 0;
-	int field_104073_f = 0;
+	int field_104076_e;
+	int field_104073_f;
 	
-	public GuiScreenOnlineServersSubscreen(int par1, int par2, int par3, int par4)
+	public GuiScreenOnlineServersSubscreen(int p_i1124_1_, int p_i1124_2_, int p_i1124_3_, int p_i1124_4_, int p_i1124_5_, int p_i1124_6_)
 	{
-		field_104074_g = par1;
-		field_104081_h = par2;
-		field_104082_i = par3;
-		field_104080_j = par4;
+		field_104074_g = p_i1124_1_;
+		field_104081_h = p_i1124_2_;
+		field_104082_i = p_i1124_3_;
+		field_104080_j = p_i1124_4_;
+		field_104076_e = p_i1124_5_;
+		field_104073_f = p_i1124_6_;
 		func_104068_a();
 	}
 	
 	private String func_104067_d()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		String var2 = var1.translateKey("mco.gameMode");
-		return var2 + ": " + field_104078_c[field_104073_f];
+		String var1 = I18n.func_135053_a("selectWorld.gameMode");
+		return var1 + ": " + field_104078_c[field_104073_f];
 	}
 	
 	private void func_104068_a()
@@ -57,10 +58,9 @@
 	
 	private void func_104070_b()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		field_104077_b = new String[] { var1.translateKey("options.difficulty.normal"), var1.translateKey("options.difficulty.hard"), var1.translateKey("options.difficulty.peaceful"), var1.translateKey("options.difficulty.easy") };
-		field_104078_c = new String[] { var1.translateKey("mco.gameMode.survival"), var1.translateKey("mco.gameMode.creative"), var1.translateKey("mco.gameMode.adventure") };
-		field_104075_d = new String[][] { { var1.translateKey("mco.gameMode.survival.line1"), var1.translateKey("mco.gameMode.survival.line2") }, { var1.translateKey("mco.gameMode.creative.line1"), var1.translateKey("mco.gameMode.creative.line2") }, { var1.translateKey("mco.gameMode.adventure.line1"), var1.translateKey("mco.gameMode.adventure.line2") } };
+		field_104077_b = new String[] { I18n.func_135053_a("options.difficulty.peaceful"), I18n.func_135053_a("options.difficulty.easy"), I18n.func_135053_a("options.difficulty.normal"), I18n.func_135053_a("options.difficulty.hard") };
+		field_104078_c = new String[] { I18n.func_135053_a("selectWorld.gameMode.survival"), I18n.func_135053_a("selectWorld.gameMode.creative"), I18n.func_135053_a("selectWorld.gameMode.adventure") };
+		field_104075_d = new String[][] { { I18n.func_135053_a("selectWorld.gameMode.survival.line1"), I18n.func_135053_a("selectWorld.gameMode.survival.line2") }, { I18n.func_135053_a("selectWorld.gameMode.creative.line1"), I18n.func_135053_a("selectWorld.gameMode.creative.line2") }, { I18n.func_135053_a("selectWorld.gameMode.adventure.line1"), I18n.func_135053_a("selectWorld.gameMode.adventure.line2") } };
 	}
 	
 	public void func_104071_a(GuiScreen par1GuiScreen, FontRenderer par2FontRenderer)
@@ -71,8 +71,7 @@
 	
 	private String func_104072_c()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		String var2 = var1.translateKey("options.difficulty");
-		return var2 + ": " + field_104077_b[field_104076_e];
+		String var1 = I18n.func_135053_a("options.difficulty");
+		return var1 + ": " + field_104077_b[field_104076_e];
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitation.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitation.java
new file mode 100644
index 0000000..addc59f
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitation.java
@@ -0,0 +1,169 @@
+package net.minecraft.src;
+
+import java.util.List;
+
+import net.minecraft.client.Minecraft;
+
+import org.lwjgl.input.Keyboard;
+
+public class GuiScreenPendingInvitation extends GuiScreen
+{
+	private final GuiScreen field_130061_a;
+	private GuiScreenPendingInvitationList field_130059_b;
+	private List field_130060_c = Lists.newArrayList();
+	private int field_130058_d = -1;
+	
+	public GuiScreenPendingInvitation(GuiScreen p_i1129_1_)
+	{
+		field_130061_a = p_i1129_1_;
+	}
+	
+	@Override protected void actionPerformed(GuiButton par1GuiButton)
+	{
+		if(par1GuiButton.enabled)
+		{
+			if(par1GuiButton.id == 1)
+			{
+				func_130051_i();
+			} else if(par1GuiButton.id == 0)
+			{
+				mc.displayGuiScreen(field_130061_a);
+			} else if(par1GuiButton.id == 2)
+			{
+				func_130057_h();
+			} else
+			{
+				field_130059_b.actionPerformed(par1GuiButton);
+			}
+		}
+	}
+	
+	@Override public void drawScreen(int par1, int par2, float par3)
+	{
+		drawDefaultBackground();
+		field_130059_b.drawScreen(par1, par2, par3);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.invites.title"), width / 2, 20, 16777215);
+		super.drawScreen(par1, par2, par3);
+	}
+	
+	private void func_130047_j()
+	{
+		int var1 = field_130058_d;
+		if(field_130060_c.size() - 1 == field_130058_d)
+		{
+			--field_130058_d;
+		}
+		field_130060_c.remove(var1);
+		if(field_130060_c.size() == 0)
+		{
+			field_130058_d = -1;
+		}
+	}
+	
+	private void func_130050_g()
+	{
+		buttonList.add(new GuiButton(1, width / 2 - 154, height - 52, 153, 20, I18n.func_135053_a("mco.invites.button.accept")));
+		buttonList.add(new GuiButton(2, width / 2 + 6, height - 52, 153, 20, I18n.func_135053_a("mco.invites.button.reject")));
+		buttonList.add(new GuiButton(0, width / 2 - 75, height - 28, 153, 20, I18n.func_135053_a("gui.back")));
+	}
+	
+	private void func_130051_i()
+	{
+		if(field_130058_d >= 0 && field_130058_d < field_130060_c.size())
+		{
+			new GuiScreenPendingInvitationINNER3(this).start();
+		}
+	}
+	
+	private void func_130057_h()
+	{
+		if(field_130058_d >= 0 && field_130058_d < field_130060_c.size())
+		{
+			new GuiScreenPendingInvitationINNER2(this).start();
+		}
+	}
+	
+	@Override public void initGui()
+	{
+		Keyboard.enableRepeatEvents(true);
+		buttonList.clear();
+		field_130059_b = new GuiScreenPendingInvitationList(this);
+		new GuiScreenPendingInvitationINNER1(this).start();
+		func_130050_g();
+	}
+	
+	@Override public void updateScreen()
+	{
+		super.updateScreen();
+	}
+	
+	static void func_130040_f(GuiScreenPendingInvitation p_130040_0_)
+	{
+		p_130040_0_.func_130047_j();
+	}
+	
+	static Minecraft func_130041_c(GuiScreenPendingInvitation p_130041_0_)
+	{
+		return p_130041_0_.mc;
+	}
+	
+	static List func_130042_e(GuiScreenPendingInvitation p_130042_0_)
+	{
+		return p_130042_0_.field_130060_c;
+	}
+	
+	static List func_130043_a(GuiScreenPendingInvitation p_130043_0_, List p_130043_1_)
+	{
+		return p_130043_0_.field_130060_c = p_130043_1_;
+	}
+	
+	static Minecraft func_130044_b(GuiScreenPendingInvitation p_130044_0_)
+	{
+		return p_130044_0_.mc;
+	}
+	
+	static FontRenderer func_130045_k(GuiScreenPendingInvitation p_130045_0_)
+	{
+		return p_130045_0_.fontRenderer;
+	}
+	
+	static Minecraft func_130046_h(GuiScreenPendingInvitation p_130046_0_)
+	{
+		return p_130046_0_.mc;
+	}
+	
+	static Minecraft func_130048_a(GuiScreenPendingInvitation p_130048_0_)
+	{
+		return p_130048_0_.mc;
+	}
+	
+	static int func_130049_d(GuiScreenPendingInvitation p_130049_0_)
+	{
+		return p_130049_0_.field_130058_d;
+	}
+	
+	static FontRenderer func_130052_l(GuiScreenPendingInvitation p_130052_0_)
+	{
+		return p_130052_0_.fontRenderer;
+	}
+	
+	static int func_130053_a(GuiScreenPendingInvitation p_130053_0_, int p_130053_1_)
+	{
+		return p_130053_0_.field_130058_d = p_130053_1_;
+	}
+	
+	static Minecraft func_130054_j(GuiScreenPendingInvitation p_130054_0_)
+	{
+		return p_130054_0_.mc;
+	}
+	
+	static Minecraft func_130055_i(GuiScreenPendingInvitation p_130055_0_)
+	{
+		return p_130055_0_.mc;
+	}
+	
+	static Minecraft func_130056_g(GuiScreenPendingInvitation p_130056_0_)
+	{
+		return p_130056_0_.mc;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationINNER1.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationINNER1.java
new file mode 100644
index 0000000..d6938ac
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationINNER1.java
@@ -0,0 +1,23 @@
+package net.minecraft.src;
+
+class GuiScreenPendingInvitationINNER1 extends Thread
+{
+	final GuiScreenPendingInvitation field_130121_a;
+	
+	GuiScreenPendingInvitationINNER1(GuiScreenPendingInvitation p_i1125_1_)
+	{
+		field_130121_a = p_i1125_1_;
+	}
+	
+	@Override public void run()
+	{
+		McoClient var1 = new McoClient(GuiScreenPendingInvitation.func_130048_a(field_130121_a).func_110432_I());
+		try
+		{
+			GuiScreenPendingInvitation.func_130043_a(field_130121_a, var1.func_130108_f().field_130096_a);
+		} catch(ExceptionMcoService var3)
+		{
+			GuiScreenPendingInvitation.func_130044_b(field_130121_a).getLogAgent().logSevere(var3.toString());
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationINNER2.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationINNER2.java
new file mode 100644
index 0000000..79cac96
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationINNER2.java
@@ -0,0 +1,24 @@
+package net.minecraft.src;
+
+class GuiScreenPendingInvitationINNER2 extends Thread
+{
+	final GuiScreenPendingInvitation field_130132_a;
+	
+	GuiScreenPendingInvitationINNER2(GuiScreenPendingInvitation p_i1126_1_)
+	{
+		field_130132_a = p_i1126_1_;
+	}
+	
+	@Override public void run()
+	{
+		try
+		{
+			McoClient var1 = new McoClient(GuiScreenPendingInvitation.func_130041_c(field_130132_a).func_110432_I());
+			var1.func_130109_b(((PendingInvite) GuiScreenPendingInvitation.func_130042_e(field_130132_a).get(GuiScreenPendingInvitation.func_130049_d(field_130132_a))).field_130094_a);
+			GuiScreenPendingInvitation.func_130040_f(field_130132_a);
+		} catch(ExceptionMcoService var2)
+		{
+			GuiScreenPendingInvitation.func_130056_g(field_130132_a).getLogAgent().logSevere(var2.toString());
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationINNER3.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationINNER3.java
new file mode 100644
index 0000000..f88a6b1
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationINNER3.java
@@ -0,0 +1,24 @@
+package net.minecraft.src;
+
+class GuiScreenPendingInvitationINNER3 extends Thread
+{
+	final GuiScreenPendingInvitation field_130131_a;
+	
+	GuiScreenPendingInvitationINNER3(GuiScreenPendingInvitation p_i1127_1_)
+	{
+		field_130131_a = p_i1127_1_;
+	}
+	
+	@Override public void run()
+	{
+		try
+		{
+			McoClient var1 = new McoClient(GuiScreenPendingInvitation.func_130046_h(field_130131_a).func_110432_I());
+			var1.func_130107_a(((PendingInvite) GuiScreenPendingInvitation.func_130042_e(field_130131_a).get(GuiScreenPendingInvitation.func_130049_d(field_130131_a))).field_130094_a);
+			GuiScreenPendingInvitation.func_130040_f(field_130131_a);
+		} catch(ExceptionMcoService var2)
+		{
+			GuiScreenPendingInvitation.func_130055_i(field_130131_a).getLogAgent().logSevere(var2.toString());
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationList.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationList.java
new file mode 100644
index 0000000..56456ba
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenPendingInvitationList.java
@@ -0,0 +1,60 @@
+package net.minecraft.src;
+
+class GuiScreenPendingInvitationList extends GuiScreenSelectLocation
+{
+	final GuiScreenPendingInvitation field_130120_a;
+	
+	public GuiScreenPendingInvitationList(GuiScreenPendingInvitation p_i1128_1_)
+	{
+		super(GuiScreenPendingInvitation.func_130054_j(p_i1128_1_), p_i1128_1_.width, p_i1128_1_.height, 32, p_i1128_1_.height - 64, 36);
+		field_130120_a = p_i1128_1_;
+	}
+	
+	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
+	{
+		if(par1 < GuiScreenPendingInvitation.func_130042_e(field_130120_a).size())
+		{
+			func_130119_b(par1, par2, par3, par4, par5Tessellator);
+		}
+	}
+	
+	@Override protected void elementClicked(int par1, boolean par2)
+	{
+		if(par1 < GuiScreenPendingInvitation.func_130042_e(field_130120_a).size())
+		{
+			GuiScreenPendingInvitation.func_130053_a(field_130120_a, par1);
+		}
+	}
+	
+	@Override protected boolean func_104086_b(int par1)
+	{
+		return false;
+	}
+	
+	@Override protected int func_130003_b()
+	{
+		return getSize() * 36;
+	}
+	
+	@Override protected void func_130004_c()
+	{
+		field_130120_a.drawDefaultBackground();
+	}
+	
+	private void func_130119_b(int p_130119_1_, int p_130119_2_, int p_130119_3_, int p_130119_4_, Tessellator p_130119_5_)
+	{
+		PendingInvite var6 = (PendingInvite) GuiScreenPendingInvitation.func_130042_e(field_130120_a).get(p_130119_1_);
+		field_130120_a.drawString(GuiScreenPendingInvitation.func_130045_k(field_130120_a), var6.field_130092_b, p_130119_2_ + 2, p_130119_3_ + 1, 16777215);
+		field_130120_a.drawString(GuiScreenPendingInvitation.func_130052_l(field_130120_a), var6.field_130093_c, p_130119_2_ + 2, p_130119_3_ + 12, 7105644);
+	}
+	
+	@Override protected int getSize()
+	{
+		return GuiScreenPendingInvitation.func_130042_e(field_130120_a).size() + 1;
+	}
+	
+	@Override protected boolean isSelected(int par1)
+	{
+		return par1 == GuiScreenPendingInvitation.func_130049_d(field_130120_a);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenResetWorld.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenResetWorld.java
index 05f176e..04584d4 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenResetWorld.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenResetWorld.java
@@ -4,19 +4,21 @@
 
 import org.lwjgl.input.Keyboard;
 
-public class GuiScreenResetWorld extends GuiScreen
+public class GuiScreenResetWorld extends ScreenWithCallback
 {
 	private GuiScreen field_96152_a;
 	private McoServer field_96150_b;
 	private GuiTextField field_96151_c;
 	private final int field_96149_d = 1;
 	private final int field_96153_n = 2;
+	private static int field_110360_p = 3;
+	private WorldTemplate field_110359_q;
 	private GuiButton field_96154_o;
 	
-	public GuiScreenResetWorld(GuiScreen par1, McoServer par2)
+	public GuiScreenResetWorld(GuiScreen p_i1135_1_, McoServer p_i1135_2_)
 	{
-		field_96152_a = par1;
-		field_96150_b = par2;
+		field_96152_a = p_i1135_1_;
+		field_96150_b = p_i1135_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -28,42 +30,81 @@
 				mc.displayGuiScreen(field_96152_a);
 			} else if(par1GuiButton.id == 1)
 			{
-				TaskResetWorld var2 = new TaskResetWorld(this, field_96150_b.field_96408_a, field_96151_c.getText());
-				GuiScreenLongRunningTask var3 = new GuiScreenLongRunningTask(mc, field_96152_a, var2);
-				var3.func_98117_g();
-				mc.displayGuiScreen(var3);
+				String var2 = I18n.func_135053_a("mco.configure.world.reset.question.line1");
+				String var3 = I18n.func_135053_a("mco.configure.world.reset.question.line2");
+				mc.displayGuiScreen(new GuiScreenConfirmation(this, GuiScreenConfirmationType.Warning, var2, var3, 1));
+			} else if(par1GuiButton.id == field_110360_p)
+			{
+				mc.displayGuiScreen(new GuiScreenMcoWorldTemplate(this, field_110359_q));
 			}
+		}
+	}
+	
+	@Override public void confirmClicked(boolean par1, int par2)
+	{
+		if(par1 && par2 == 1)
+		{
+			func_140006_g();
+		} else
+		{
+			mc.displayGuiScreen(this);
 		}
 	}
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey("mco.reset.world.title"), width / 2, 17, 16777215);
-		drawCenteredString(fontRenderer, var4.translateKey("mco.reset.world.warning"), width / 2, 66, 16711680);
-		drawString(fontRenderer, var4.translateKey("mco.reset.world.seed"), width / 2 - 100, 96, 10526880);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.reset.world.title"), width / 2, 17, 16777215);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.reset.world.warning"), width / 2, 56, 16711680);
+		drawString(fontRenderer, I18n.func_135053_a("mco.reset.world.seed"), width / 2 - 100, 86, 10526880);
 		field_96151_c.drawTextBox();
 		super.drawScreen(par1, par2, par3);
 	}
 	
+	@Override void func_110354_a(Object p_110354_1_)
+	{
+		func_110358_a((WorldTemplate) p_110354_1_);
+	}
+	
+	void func_110358_a(WorldTemplate p_110358_1_)
+	{
+		field_110359_q = p_110358_1_;
+	}
+	
+	private void func_140006_g()
+	{
+		TaskResetWorld var1 = new TaskResetWorld(this, field_96150_b.field_96408_a, field_96151_c.getText(), field_110359_q);
+		GuiScreenLongRunningTask var2 = new GuiScreenLongRunningTask(mc, field_96152_a, var1);
+		var2.func_98117_g();
+		mc.displayGuiScreen(var2);
+	}
+	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		buttonList.add(field_96154_o = new GuiButton(1, width / 2 - 100, height / 4 + 96 + 12, var1.translateKey("mco.configure.world.buttons.reset")));
-		buttonList.add(new GuiButton(2, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.cancel")));
-		field_96151_c = new GuiTextField(fontRenderer, width / 2 - 100, 109, 200, 20);
+		buttonList.add(field_96154_o = new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, 97, 20, I18n.func_135053_a("mco.configure.world.buttons.reset")));
+		buttonList.add(new GuiButton(2, width / 2 + 5, height / 4 + 120 + 12, 97, 20, I18n.func_135053_a("gui.cancel")));
+		field_96151_c = new GuiTextField(fontRenderer, width / 2 - 100, 99, 200, 20);
 		field_96151_c.setFocused(true);
 		field_96151_c.setMaxStringLength(32);
 		field_96151_c.setText("");
+		if(field_110359_q == null)
+		{
+			buttonList.add(new GuiButton(field_110360_p, width / 2 - 100, 125, 200, 20, I18n.func_135053_a("mco.template.default.name")));
+		} else
+		{
+			field_96151_c.setText("");
+			field_96151_c.setEnabled(false);
+			field_96151_c.setFocused(false);
+			buttonList.add(new GuiButton(field_110360_p, width / 2 - 100, 125, 200, 20, I18n.func_135053_a("mco.template.name") + ": " + field_110359_q.field_110732_b));
+		}
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
 	{
 		field_96151_c.textboxKeyTyped(par1, par2);
-		if(par1 == 13)
+		if(par2 == 28 || par2 == 156)
 		{
 			actionPerformed(field_96154_o);
 		}
@@ -85,6 +126,16 @@
 		field_96151_c.updateCursorCounter();
 	}
 	
+	static Minecraft func_130024_d(GuiScreenResetWorld p_130024_0_)
+	{
+		return p_130024_0_.mc;
+	}
+	
+	static Minecraft func_130025_c(GuiScreenResetWorld p_130025_0_)
+	{
+		return p_130025_0_.mc;
+	}
+	
 	static Minecraft func_96147_b(GuiScreenResetWorld par0GuiScreenResetWorld)
 	{
 		return par0GuiScreenResetWorld.mc;
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenSelectLocation.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenSelectLocation.java
index 8bc96ce..34e1820 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenSelectLocation.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenSelectLocation.java
@@ -23,21 +23,21 @@
 	private float field_104099_n;
 	private float field_104100_o;
 	private int field_104111_p = -1;
-	private long field_104110_q = 0L;
+	private long field_104110_q;
 	private boolean field_104109_r = true;
 	private boolean field_104108_s;
 	private int field_104107_t;
 	
-	public GuiScreenSelectLocation(Minecraft par1Minecraft, int par2, int par3, int par4, int par5, int par6)
+	public GuiScreenSelectLocation(Minecraft p_i1116_1_, int p_i1116_2_, int p_i1116_3_, int p_i1116_4_, int p_i1116_5_, int p_i1116_6_)
 	{
-		field_104092_f = par1Minecraft;
-		field_104093_g = par2;
-		field_104105_h = par3;
-		field_104098_a = par4;
-		field_104096_b = par5;
-		field_104097_c = par6;
+		field_104092_f = p_i1116_1_;
+		field_104093_g = p_i1116_2_;
+		field_104105_h = p_i1116_3_;
+		field_104098_a = p_i1116_4_;
+		field_104096_b = p_i1116_5_;
+		field_104097_c = p_i1116_6_;
 		field_104103_j = 0;
-		field_104106_i = par2;
+		field_104106_i = p_i1116_2_;
 	}
 	
 	public void actionPerformed(GuiButton par1GuiButton)
@@ -58,13 +58,11 @@
 		}
 	}
 	
-	protected abstract void drawBackground();
-	
 	public void drawScreen(int par1, int par2, float par3)
 	{
 		field_104094_d = par1;
 		field_104095_e = par2;
-		drawBackground();
+		func_130004_c();
 		int var4 = getSize();
 		int var5 = func_104090_g();
 		int var6 = var5 + 6;
@@ -103,7 +101,7 @@
 						{
 							var19 = 1;
 						}
-						var13 = (int) ((float) ((field_104096_b - field_104098_a) * (field_104096_b - field_104098_a)) / (float) getContentHeight());
+						var13 = (int) ((float) ((field_104096_b - field_104098_a) * (field_104096_b - field_104098_a)) / (float) func_130003_b());
 						if(var13 < 32)
 						{
 							var13 = 32;
@@ -156,7 +154,7 @@
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glDisable(GL11.GL_FOG);
 		Tessellator var18 = Tessellator.instance;
-		field_104092_f.renderEngine.bindTexture("/gui/background.png");
+		field_104092_f.func_110434_K().func_110577_a(Gui.field_110325_k);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		float var17 = 32.0F;
 		var18.startDrawingQuads();
@@ -246,7 +244,7 @@
 		var19 = func_104085_d();
 		if(var19 > 0)
 		{
-			var13 = (field_104096_b - field_104098_a) * (field_104096_b - field_104098_a) / getContentHeight();
+			var13 = (field_104096_b - field_104098_a) * (field_104096_b - field_104098_a) / func_130003_b();
 			if(var13 < 32)
 			{
 				var13 = 32;
@@ -296,7 +294,7 @@
 	private void func_104083_b(int par1, int par2, int par3, int par4)
 	{
 		Tessellator var5 = Tessellator.instance;
-		field_104092_f.renderEngine.bindTexture("/gui/background.png");
+		field_104092_f.func_110434_K().func_110577_a(Gui.field_110325_k);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		float var6 = 32.0F;
 		var5.startDrawingQuads();
@@ -321,7 +319,7 @@
 	
 	public int func_104085_d()
 	{
-		return getContentHeight() - (field_104096_b - field_104098_a - 4);
+		return func_130003_b() - (field_104096_b - field_104098_a - 4);
 	}
 	
 	protected abstract boolean func_104086_b(int var1);
@@ -360,11 +358,13 @@
 		}
 	}
 	
-	protected int getContentHeight()
+	protected int func_130003_b()
 	{
 		return getSize() * field_104097_c + field_104107_t;
 	}
 	
+	protected abstract void func_130004_c();
+	
 	protected abstract int getSize();
 	
 	protected abstract boolean isSelected(int var1);
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenServerList.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenServerList.java
index 83429b5..3f74fea 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenServerList.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenServerList.java
@@ -8,10 +8,10 @@
 	private final ServerData theServerData;
 	private GuiTextField serverTextField;
 	
-	public GuiScreenServerList(GuiScreen par1GuiScreen, ServerData par2ServerData)
+	public GuiScreenServerList(GuiScreen p_i1031_1_, ServerData p_i1031_2_)
 	{
-		guiScreen = par1GuiScreen;
-		theServerData = par2ServerData;
+		guiScreen = p_i1031_1_;
+		theServerData = p_i1031_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -31,21 +31,19 @@
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey("selectServer.direct"), width / 2, height / 4 - 60 + 20, 16777215);
-		drawString(fontRenderer, var4.translateKey("addServer.enterIp"), width / 2 - 100, 100, 10526880);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("selectServer.direct"), width / 2, 20, 16777215);
+		drawString(fontRenderer, I18n.func_135053_a("addServer.enterIp"), width / 2 - 100, 100, 10526880);
 		serverTextField.drawTextBox();
 		super.drawScreen(par1, par2, par3);
 	}
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
 		Keyboard.enableRepeatEvents(true);
 		buttonList.clear();
-		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, var1.translateKey("selectServer.select")));
-		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.cancel")));
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 96 + 12, I18n.func_135053_a("selectServer.select")));
+		buttonList.add(new GuiButton(1, width / 2 - 100, height / 4 + 120 + 12, I18n.func_135053_a("gui.cancel")));
 		serverTextField = new GuiTextField(fontRenderer, width / 2 - 100, 116, 200, 20);
 		serverTextField.setMaxStringLength(128);
 		serverTextField.setFocused(true);
@@ -58,7 +56,7 @@
 		if(serverTextField.textboxKeyTyped(par1, par2))
 		{
 			((GuiButton) buttonList.get(0)).enabled = serverTextField.getText().length() > 0 && serverTextField.getText().split(":").length > 0;
-		} else if(par2 == 28)
+		} else if(par2 == 28 || par2 == 156)
 		{
 			actionPerformed((GuiButton) buttonList.get(0));
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenSubscription.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenSubscription.java
index 4105be4..549f0e9 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiScreenSubscription.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenSubscription.java
@@ -5,6 +5,8 @@
 import java.util.GregorianCalendar;
 import java.util.TimeZone;
 
+import net.minecraft.client.Minecraft;
+
 import org.lwjgl.input.Keyboard;
 
 public class GuiScreenSubscription extends GuiScreen
@@ -16,10 +18,10 @@
 	private int field_98068_n;
 	private String field_98069_o;
 	
-	public GuiScreenSubscription(GuiScreen par1GuiScreen, McoServer par2McoServer)
+	public GuiScreenSubscription(GuiScreen p_i1136_1_, McoServer p_i1136_2_)
 	{
-		field_98067_a = par1GuiScreen;
-		field_98065_b = par2McoServer;
+		field_98067_a = p_i1136_1_;
+		field_98065_b = p_i1136_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -38,12 +40,11 @@
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
-		StringTranslate var4 = StringTranslate.getInstance();
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, var4.translateKey("mco.configure.world.subscription.title"), width / 2, 17, 16777215);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.subscription.start"), width / 2 - 100, 53, 10526880);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("mco.configure.world.subscription.title"), width / 2, 17, 16777215);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.subscription.start"), width / 2 - 100, 53, 10526880);
 		drawString(fontRenderer, field_98069_o, width / 2 - 100, 66, 16777215);
-		drawString(fontRenderer, var4.translateKey("mco.configure.world.subscription.daysleft"), width / 2 - 100, 85, 10526880);
+		drawString(fontRenderer, I18n.func_135053_a("mco.configure.world.subscription.daysleft"), width / 2 - 100, 85, 10526880);
 		drawString(fontRenderer, String.valueOf(field_98068_n), width / 2 - 100, 98, 16777215);
 		super.drawScreen(par1, par2, par3);
 	}
@@ -57,7 +58,7 @@
 	
 	private void func_98063_a(long par1)
 	{
-		McoClient var3 = new McoClient(mc.session);
+		McoClient var3 = new McoClient(mc.func_110432_I());
 		try
 		{
 			ValueObjectSubscription var4 = var3.func_98177_f(par1);
@@ -65,19 +66,18 @@
 			field_98069_o = func_98062_b(var4.field_98171_a);
 		} catch(ExceptionMcoService var5)
 		{
-			;
+			Minecraft.getMinecraft().getLogAgent().logSevere(var5.toString());
 		} catch(IOException var6)
 		{
-			;
+			Minecraft.getMinecraft().getLogAgent().logWarning("Realms: could not parse response");
 		}
 	}
 	
 	@Override public void initGui()
 	{
 		func_98063_a(field_98065_b.field_96408_a);
-		StringTranslate var1 = StringTranslate.getInstance();
 		Keyboard.enableRepeatEvents(true);
-		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120 + 12, var1.translateKey("gui.cancel")));
+		buttonList.add(new GuiButton(0, width / 2 - 100, height / 4 + 120 + 12, I18n.func_135053_a("gui.cancel")));
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenTemporaryResourcePackSelect.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenTemporaryResourcePackSelect.java
new file mode 100644
index 0000000..489e3e4
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenTemporaryResourcePackSelect.java
@@ -0,0 +1,172 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.io.IOException;
+import java.net.URI;
+
+import net.minecraft.client.Minecraft;
+
+import org.lwjgl.Sys;
+
+public class GuiScreenTemporaryResourcePackSelect extends GuiScreen
+{
+	protected GuiScreen field_110347_a;
+	private int refreshTimer = -1;
+	private GuiScreenTemporaryResourcePackSelectSelectionList field_110346_c;
+	private GameSettings field_96146_n;
+	
+	public GuiScreenTemporaryResourcePackSelect(GuiScreen p_i1302_1_, GameSettings p_i1302_2_)
+	{
+		field_110347_a = p_i1302_1_;
+		field_96146_n = p_i1302_2_;
+	}
+	
+	@Override protected void actionPerformed(GuiButton par1GuiButton)
+	{
+		if(par1GuiButton.enabled)
+		{
+			if(par1GuiButton.id == 5)
+			{
+				File var2 = GuiScreenTemporaryResourcePackSelectSelectionList.func_110510_a(field_110346_c).func_110612_e();
+				String var3 = var2.getAbsolutePath();
+				if(Util.func_110647_a() == EnumOS.MACOS)
+				{
+					try
+					{
+						mc.getLogAgent().logInfo(var3);
+						Runtime.getRuntime().exec(new String[] { "/usr/bin/open", var3 });
+						return;
+					} catch(IOException var9)
+					{
+						var9.printStackTrace();
+					}
+				} else if(Util.func_110647_a() == EnumOS.WINDOWS)
+				{
+					String var4 = String.format("cmd.exe /C start \"Open file\" \"%s\"", new Object[] { var3 });
+					try
+					{
+						Runtime.getRuntime().exec(var4);
+						return;
+					} catch(IOException var8)
+					{
+						var8.printStackTrace();
+					}
+				}
+				boolean var10 = false;
+				try
+				{
+					Class var5 = Class.forName("java.awt.Desktop");
+					Object var6 = var5.getMethod("getDesktop", new Class[0]).invoke((Object) null, new Object[0]);
+					var5.getMethod("browse", new Class[] { URI.class }).invoke(var6, new Object[] { var2.toURI() });
+				} catch(Throwable var7)
+				{
+					var7.printStackTrace();
+					var10 = true;
+				}
+				if(var10)
+				{
+					mc.getLogAgent().logInfo("Opening via system class!");
+					Sys.openURL("file://" + var3);
+				}
+			} else if(par1GuiButton.id == 6)
+			{
+				mc.displayGuiScreen(field_110347_a);
+			} else
+			{
+				field_110346_c.actionPerformed(par1GuiButton);
+			}
+		}
+	}
+	
+	@Override public void drawScreen(int par1, int par2, float par3)
+	{
+		field_110346_c.drawScreen(par1, par2, par3);
+		if(refreshTimer <= 0)
+		{
+			GuiScreenTemporaryResourcePackSelectSelectionList.func_110510_a(field_110346_c).func_110611_a();
+			refreshTimer = 20;
+		}
+		drawCenteredString(fontRenderer, I18n.func_135053_a("resourcePack.title"), width / 2, 16, 16777215);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("resourcePack.folderInfo"), width / 2 - 77, height - 26, 8421504);
+		super.drawScreen(par1, par2, par3);
+	}
+	
+	@Override public void initGui()
+	{
+		buttonList.add(new GuiSmallButton(5, width / 2 - 154, height - 48, I18n.func_135053_a("resourcePack.openFolder")));
+		buttonList.add(new GuiSmallButton(6, width / 2 + 4, height - 48, I18n.func_135053_a("gui.done")));
+		field_110346_c = new GuiScreenTemporaryResourcePackSelectSelectionList(this, mc.func_110438_M());
+		field_110346_c.registerScrollButtons(7, 8);
+	}
+	
+	@Override protected void mouseClicked(int par1, int par2, int par3)
+	{
+		super.mouseClicked(par1, par2, par3);
+	}
+	
+	@Override protected void mouseMovedOrUp(int par1, int par2, int par3)
+	{
+		super.mouseMovedOrUp(par1, par2, par3);
+	}
+	
+	@Override public void updateScreen()
+	{
+		super.updateScreen();
+		--refreshTimer;
+	}
+	
+	static Minecraft func_110334_e(GuiScreenTemporaryResourcePackSelect p_110334_0_)
+	{
+		return p_110334_0_.mc;
+	}
+	
+	static FontRenderer func_110335_j(GuiScreenTemporaryResourcePackSelect p_110335_0_)
+	{
+		return p_110335_0_.fontRenderer;
+	}
+	
+	static FontRenderer func_110337_i(GuiScreenTemporaryResourcePackSelect p_110337_0_)
+	{
+		return p_110337_0_.fontRenderer;
+	}
+	
+	static FontRenderer func_110338_k(GuiScreenTemporaryResourcePackSelect p_110338_0_)
+	{
+		return p_110338_0_.fontRenderer;
+	}
+	
+	static Minecraft func_110339_c(GuiScreenTemporaryResourcePackSelect p_110339_0_)
+	{
+		return p_110339_0_.mc;
+	}
+	
+	static Minecraft func_110340_f(GuiScreenTemporaryResourcePackSelect p_110340_0_)
+	{
+		return p_110340_0_.mc;
+	}
+	
+	static Minecraft func_110341_b(GuiScreenTemporaryResourcePackSelect p_110341_0_)
+	{
+		return p_110341_0_.mc;
+	}
+	
+	static Minecraft func_110344_a(GuiScreenTemporaryResourcePackSelect p_110344_0_)
+	{
+		return p_110344_0_.mc;
+	}
+	
+	static Minecraft func_110345_d(GuiScreenTemporaryResourcePackSelect p_110345_0_)
+	{
+		return p_110345_0_.mc;
+	}
+	
+	static FontRenderer func_130016_h(GuiScreenTemporaryResourcePackSelect p_130016_0_)
+	{
+		return p_130016_0_.fontRenderer;
+	}
+	
+	static FontRenderer func_130017_g(GuiScreenTemporaryResourcePackSelect p_130017_0_)
+	{
+		return p_130017_0_.fontRenderer;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiScreenTemporaryResourcePackSelectSelectionList.java b/RMCClient/minecraft/net/minecraft/src/GuiScreenTemporaryResourcePackSelectSelectionList.java
new file mode 100644
index 0000000..84f77d8
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/GuiScreenTemporaryResourcePackSelectSelectionList.java
@@ -0,0 +1,118 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.util.List;
+
+import org.lwjgl.opengl.GL11;
+
+class GuiScreenTemporaryResourcePackSelectSelectionList extends GuiSlot
+{
+	private final ResourcePackRepository field_110511_b;
+	private ResourceLocation field_110513_h;
+	final GuiScreenTemporaryResourcePackSelect field_110512_a;
+	
+	public GuiScreenTemporaryResourcePackSelectSelectionList(GuiScreenTemporaryResourcePackSelect p_i1301_1_, ResourcePackRepository p_i1301_2_)
+	{
+		super(GuiScreenTemporaryResourcePackSelect.func_110344_a(p_i1301_1_), p_i1301_1_.width, p_i1301_1_.height, 32, p_i1301_1_.height - 55 + 4, 36);
+		field_110512_a = p_i1301_1_;
+		field_110511_b = p_i1301_2_;
+		p_i1301_2_.func_110611_a();
+	}
+	
+	@Override protected void drawBackground()
+	{
+		field_110512_a.drawDefaultBackground();
+	}
+	
+	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
+	{
+		TextureManager var6 = GuiScreenTemporaryResourcePackSelect.func_110340_f(field_110512_a).func_110434_K();
+		if(par1 == 0)
+		{
+			try
+			{
+				ResourcePack var12 = field_110511_b.field_110620_b;
+				PackMetadataSection var13 = (PackMetadataSection) var12.func_135058_a(field_110511_b.field_110621_c, "pack");
+				if(field_110513_h == null)
+				{
+					field_110513_h = var6.func_110578_a("texturepackicon", new DynamicTexture(var12.func_110586_a()));
+				}
+				var6.func_110577_a(field_110513_h);
+				GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+				par5Tessellator.startDrawingQuads();
+				par5Tessellator.setColorOpaque_I(16777215);
+				par5Tessellator.addVertexWithUV(par2, par3 + par4, 0.0D, 0.0D, 1.0D);
+				par5Tessellator.addVertexWithUV(par2 + 32, par3 + par4, 0.0D, 1.0D, 1.0D);
+				par5Tessellator.addVertexWithUV(par2 + 32, par3, 0.0D, 1.0D, 0.0D);
+				par5Tessellator.addVertexWithUV(par2, par3, 0.0D, 0.0D, 0.0D);
+				par5Tessellator.draw();
+				field_110512_a.drawString(GuiScreenTemporaryResourcePackSelect.func_130017_g(field_110512_a), "Default", par2 + 32 + 2, par3 + 1, 16777215);
+				field_110512_a.drawString(GuiScreenTemporaryResourcePackSelect.func_130016_h(field_110512_a), var13.func_110461_a(), par2 + 32 + 2, par3 + 12 + 10, 8421504);
+			} catch(IOException var11)
+			{
+				;
+			}
+		} else
+		{
+			ResourcePackRepositoryEntry var7 = (ResourcePackRepositoryEntry) field_110511_b.func_110609_b().get(par1 - 1);
+			var7.func_110518_a(var6);
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+			par5Tessellator.startDrawingQuads();
+			par5Tessellator.setColorOpaque_I(16777215);
+			par5Tessellator.addVertexWithUV(par2, par3 + par4, 0.0D, 0.0D, 1.0D);
+			par5Tessellator.addVertexWithUV(par2 + 32, par3 + par4, 0.0D, 1.0D, 1.0D);
+			par5Tessellator.addVertexWithUV(par2 + 32, par3, 0.0D, 1.0D, 0.0D);
+			par5Tessellator.addVertexWithUV(par2, par3, 0.0D, 0.0D, 0.0D);
+			par5Tessellator.draw();
+			String var8 = var7.func_110515_d();
+			if(var8.length() > 32)
+			{
+				var8 = var8.substring(0, 32).trim() + "...";
+			}
+			field_110512_a.drawString(GuiScreenTemporaryResourcePackSelect.func_110337_i(field_110512_a), var8, par2 + 32 + 2, par3 + 1, 16777215);
+			List var9 = GuiScreenTemporaryResourcePackSelect.func_110335_j(field_110512_a).listFormattedStringToWidth(var7.func_110519_e(), 183);
+			for(int var10 = 0; var10 < 2 && var10 < var9.size(); ++var10)
+			{
+				field_110512_a.drawString(GuiScreenTemporaryResourcePackSelect.func_110338_k(field_110512_a), (String) var9.get(var10), par2 + 32 + 2, par3 + 12 + 10 * var10, 8421504);
+			}
+		}
+	}
+	
+	@Override protected void elementClicked(int par1, boolean par2)
+	{
+		List var3 = field_110511_b.func_110609_b();
+		try
+		{
+			if(par1 == 0) throw new RuntimeException("This is so horrible ;D");
+			field_110511_b.func_110615_a(new ResourcePackRepositoryEntry[] { (ResourcePackRepositoryEntry) var3.get(par1 - 1) });
+			GuiScreenTemporaryResourcePackSelect.func_110341_b(field_110512_a).func_110436_a();
+		} catch(Exception var5)
+		{
+			field_110511_b.func_110615_a(new ResourcePackRepositoryEntry[0]);
+			GuiScreenTemporaryResourcePackSelect.func_110339_c(field_110512_a).func_110436_a();
+		}
+		GuiScreenTemporaryResourcePackSelect.func_110345_d(field_110512_a).gameSettings.skin = field_110511_b.func_110610_d();
+		GuiScreenTemporaryResourcePackSelect.func_110334_e(field_110512_a).gameSettings.saveOptions();
+	}
+	
+	@Override protected int getContentHeight()
+	{
+		return getSize() * 36;
+	}
+	
+	@Override protected int getSize()
+	{
+		return 1 + field_110511_b.func_110609_b().size();
+	}
+	
+	@Override protected boolean isSelected(int par1)
+	{
+		List var2 = field_110511_b.func_110613_c();
+		return par1 == 0 ? var2.isEmpty() : var2.contains(field_110511_b.func_110609_b().get(par1 - 1));
+	}
+	
+	static ResourcePackRepository func_110510_a(GuiScreenTemporaryResourcePackSelectSelectionList p_110510_0_)
+	{
+		return p_110510_0_.field_110511_b;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSelectWorld.java b/RMCClient/minecraft/net/minecraft/src/GuiSelectWorld.java
index 13dc00b..538caec 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSelectWorld.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSelectWorld.java
@@ -10,7 +10,7 @@
 	private final DateFormat dateFormatter = new SimpleDateFormat();
 	protected GuiScreen parentScreen;
 	protected String screenTitle = "Select world";
-	private boolean selected = false;
+	private boolean selected;
 	private int selectedWorld;
 	private List saveList;
 	private GuiWorldSlot worldSlotContainer;
@@ -23,9 +23,9 @@
 	private GuiButton buttonRename;
 	private GuiButton buttonRecreate;
 	
-	public GuiSelectWorld(GuiScreen par1GuiScreen)
+	public GuiSelectWorld(GuiScreen p_i1054_1_)
 	{
-		parentScreen = par1GuiScreen;
+		parentScreen = p_i1054_1_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -107,21 +107,19 @@
 		String var2 = ((SaveFormatComparator) saveList.get(par1)).getDisplayName();
 		if(var2 == null || MathHelper.stringNullOrLengthZero(var2))
 		{
-			StringTranslate var3 = StringTranslate.getInstance();
-			var2 = var3.translateKey("selectWorld.world") + " " + (par1 + 1);
+			var2 = I18n.func_135053_a("selectWorld.world") + " " + (par1 + 1);
 		}
 		return var2;
 	}
 	
 	public void initButtons()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		buttonList.add(buttonSelect = new GuiButton(1, width / 2 - 154, height - 52, 150, 20, var1.translateKey("selectWorld.select")));
-		buttonList.add(new GuiButton(3, width / 2 + 4, height - 52, 150, 20, var1.translateKey("selectWorld.create")));
-		buttonList.add(buttonRename = new GuiButton(6, width / 2 - 154, height - 28, 72, 20, var1.translateKey("selectWorld.rename")));
-		buttonList.add(buttonDelete = new GuiButton(2, width / 2 - 76, height - 28, 72, 20, var1.translateKey("selectWorld.delete")));
-		buttonList.add(buttonRecreate = new GuiButton(7, width / 2 + 4, height - 28, 72, 20, var1.translateKey("selectWorld.recreate")));
-		buttonList.add(new GuiButton(0, width / 2 + 82, height - 28, 72, 20, var1.translateKey("gui.cancel")));
+		buttonList.add(buttonSelect = new GuiButton(1, width / 2 - 154, height - 52, 150, 20, I18n.func_135053_a("selectWorld.select")));
+		buttonList.add(new GuiButton(3, width / 2 + 4, height - 52, 150, 20, I18n.func_135053_a("selectWorld.create")));
+		buttonList.add(buttonRename = new GuiButton(6, width / 2 - 154, height - 28, 72, 20, I18n.func_135053_a("selectWorld.rename")));
+		buttonList.add(buttonDelete = new GuiButton(2, width / 2 - 76, height - 28, 72, 20, I18n.func_135053_a("selectWorld.delete")));
+		buttonList.add(buttonRecreate = new GuiButton(7, width / 2 + 4, height - 28, 72, 20, I18n.func_135053_a("selectWorld.recreate")));
+		buttonList.add(new GuiButton(0, width / 2 + 82, height - 28, 72, 20, I18n.func_135053_a("gui.cancel")));
 		buttonSelect.enabled = false;
 		buttonDelete.enabled = false;
 		buttonRename.enabled = false;
@@ -130,24 +128,23 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		screenTitle = var1.translateKey("selectWorld.title");
+		screenTitle = I18n.func_135053_a("selectWorld.title");
 		try
 		{
 			loadSaves();
-		} catch(AnvilConverterException var3)
+		} catch(AnvilConverterException var2)
 		{
-			var3.printStackTrace();
-			mc.displayGuiScreen(new GuiErrorScreen("Unable to load words", var3.getMessage()));
+			var2.printStackTrace();
+			mc.displayGuiScreen(new GuiErrorScreen("Unable to load words", var2.getMessage()));
 			return;
 		}
-		localizedWorldText = var1.translateKey("selectWorld.world");
-		localizedMustConvertText = var1.translateKey("selectWorld.conversion");
-		localizedGameModeText[EnumGameType.SURVIVAL.getID()] = var1.translateKey("gameMode.survival");
-		localizedGameModeText[EnumGameType.CREATIVE.getID()] = var1.translateKey("gameMode.creative");
-		localizedGameModeText[EnumGameType.ADVENTURE.getID()] = var1.translateKey("gameMode.adventure");
+		localizedWorldText = I18n.func_135053_a("selectWorld.world");
+		localizedMustConvertText = I18n.func_135053_a("selectWorld.conversion");
+		localizedGameModeText[EnumGameType.SURVIVAL.getID()] = I18n.func_135053_a("gameMode.survival");
+		localizedGameModeText[EnumGameType.CREATIVE.getID()] = I18n.func_135053_a("gameMode.creative");
+		localizedGameModeText[EnumGameType.ADVENTURE.getID()] = I18n.func_135053_a("gameMode.adventure");
 		worldSlotContainer = new GuiWorldSlot(this);
-		worldSlotContainer.registerScrollButtons(buttonList, 4, 5);
+		worldSlotContainer.registerScrollButtons(4, 5);
 		initButtons();
 	}
 	
@@ -178,6 +175,7 @@
 			if(mc.getSaveLoader().canLoadWorld(var2))
 			{
 				mc.launchIntegratedServer(var2, var3, (WorldSettings) null);
+				mc.statFileWriter.readStat(StatList.loadWorldStat, 1);
 			}
 		}
 	}
@@ -214,13 +212,12 @@
 	
 	public static GuiYesNo getDeleteWorldScreen(GuiScreen par0GuiScreen, String par1Str, int par2)
 	{
-		StringTranslate var3 = StringTranslate.getInstance();
-		String var4 = var3.translateKey("selectWorld.deleteQuestion");
-		String var5 = "\'" + par1Str + "\' " + var3.translateKey("selectWorld.deleteWarning");
-		String var6 = var3.translateKey("selectWorld.deleteButton");
-		String var7 = var3.translateKey("gui.cancel");
-		GuiYesNo var8 = new GuiYesNo(par0GuiScreen, var4, var5, var6, var7, par2);
-		return var8;
+		String var3 = I18n.func_135053_a("selectWorld.deleteQuestion");
+		String var4 = "\'" + par1Str + "\' " + I18n.func_135053_a("selectWorld.deleteWarning");
+		String var5 = I18n.func_135053_a("selectWorld.deleteButton");
+		String var6 = I18n.func_135053_a("gui.cancel");
+		GuiYesNo var7 = new GuiYesNo(par0GuiScreen, var3, var4, var5, var6, par2);
+		return var7;
 	}
 	
 	static GuiButton getRenameButton(GuiSelectWorld par0GuiSelectWorld)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiShareToLan.java b/RMCClient/minecraft/net/minecraft/src/GuiShareToLan.java
index d20a201..0ad1918 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiShareToLan.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiShareToLan.java
@@ -6,11 +6,11 @@
 	private GuiButton buttonAllowCommandsToggle;
 	private GuiButton buttonGameMode;
 	private String gameMode = "survival";
-	private boolean allowCommands = false;
+	private boolean allowCommands;
 	
-	public GuiShareToLan(GuiScreen par1GuiScreen)
+	public GuiShareToLan(GuiScreen p_i1055_1_)
 	{
-		parentScreen = par1GuiScreen;
+		parentScreen = p_i1055_1_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -39,47 +39,46 @@
 		{
 			mc.displayGuiScreen((GuiScreen) null);
 			String var2 = mc.getIntegratedServer().shareToLAN(EnumGameType.getByName(gameMode), allowCommands);
-			String var3 = "";
+			ChatMessageComponent var3;
 			if(var2 != null)
 			{
-				var3 = mc.thePlayer.translateString("commands.publish.started", new Object[] { var2 });
+				var3 = ChatMessageComponent.func_111082_b("commands.publish.started", new Object[] { var2 });
 			} else
 			{
-				var3 = mc.thePlayer.translateString("commands.publish.failed", new Object[0]);
+				var3 = ChatMessageComponent.func_111066_d("commands.publish.failed");
 			}
-			mc.ingameGUI.getChatGUI().printChatMessage(var3);
+			mc.ingameGUI.getChatGUI().printChatMessage(var3.func_111068_a(true));
 		}
 	}
 	
 	@Override public void drawScreen(int par1, int par2, float par3)
 	{
 		drawDefaultBackground();
-		drawCenteredString(fontRenderer, StatCollector.translateToLocal("lanServer.title"), width / 2, 50, 16777215);
-		drawCenteredString(fontRenderer, StatCollector.translateToLocal("lanServer.otherPlayers"), width / 2, 82, 16777215);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("lanServer.title"), width / 2, 50, 16777215);
+		drawCenteredString(fontRenderer, I18n.func_135053_a("lanServer.otherPlayers"), width / 2, 82, 16777215);
 		super.drawScreen(par1, par2, par3);
 	}
 	
 	private void func_74088_g()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		buttonGameMode.displayString = var1.translateKey("selectWorld.gameMode") + " " + var1.translateKey("selectWorld.gameMode." + gameMode);
-		buttonAllowCommandsToggle.displayString = var1.translateKey("selectWorld.allowCommands") + " ";
+		buttonGameMode.displayString = I18n.func_135053_a("selectWorld.gameMode") + " " + I18n.func_135053_a("selectWorld.gameMode." + gameMode);
+		buttonAllowCommandsToggle.displayString = I18n.func_135053_a("selectWorld.allowCommands") + " ";
 		if(allowCommands)
 		{
-			buttonAllowCommandsToggle.displayString = buttonAllowCommandsToggle.displayString + var1.translateKey("options.on");
+			buttonAllowCommandsToggle.displayString = buttonAllowCommandsToggle.displayString + I18n.func_135053_a("options.on");
 		} else
 		{
-			buttonAllowCommandsToggle.displayString = buttonAllowCommandsToggle.displayString + var1.translateKey("options.off");
+			buttonAllowCommandsToggle.displayString = buttonAllowCommandsToggle.displayString + I18n.func_135053_a("options.off");
 		}
 	}
 	
 	@Override public void initGui()
 	{
 		buttonList.clear();
-		buttonList.add(new GuiButton(101, width / 2 - 155, height - 28, 150, 20, StatCollector.translateToLocal("lanServer.start")));
-		buttonList.add(new GuiButton(102, width / 2 + 5, height - 28, 150, 20, StatCollector.translateToLocal("gui.cancel")));
-		buttonList.add(buttonGameMode = new GuiButton(104, width / 2 - 155, 100, 150, 20, StatCollector.translateToLocal("selectWorld.gameMode")));
-		buttonList.add(buttonAllowCommandsToggle = new GuiButton(103, width / 2 + 5, 100, 150, 20, StatCollector.translateToLocal("selectWorld.allowCommands")));
+		buttonList.add(new GuiButton(101, width / 2 - 155, height - 28, 150, 20, I18n.func_135053_a("lanServer.start")));
+		buttonList.add(new GuiButton(102, width / 2 + 5, height - 28, 150, 20, I18n.func_135053_a("gui.cancel")));
+		buttonList.add(buttonGameMode = new GuiButton(104, width / 2 - 155, 100, 150, 20, I18n.func_135053_a("selectWorld.gameMode")));
+		buttonList.add(buttonAllowCommandsToggle = new GuiButton(103, width / 2 + 5, 100, 150, 20, I18n.func_135053_a("selectWorld.allowCommands")));
 		func_74088_g();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSleepMP.java b/RMCClient/minecraft/net/minecraft/src/GuiSleepMP.java
index 5b5cb31..b33d5c0 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSleepMP.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSleepMP.java
@@ -16,8 +16,7 @@
 	@Override public void initGui()
 	{
 		super.initGui();
-		StringTranslate var1 = StringTranslate.getInstance();
-		buttonList.add(new GuiButton(1, width / 2 - 100, height - 40, var1.translateKey("multiplayer.stopSleeping")));
+		buttonList.add(new GuiButton(1, width / 2 - 100, height - 40, I18n.func_135053_a("multiplayer.stopSleeping")));
 	}
 	
 	@Override protected void keyTyped(char par1, int par2)
@@ -25,7 +24,10 @@
 		if(par2 == 1)
 		{
 			wakeEntity();
-		} else if(par2 == 28)
+		} else if(par2 != 28 && par2 != 156)
+		{
+			super.keyTyped(par1, par2);
+		} else
 		{
 			String var3 = inputField.getText().trim();
 			if(var3.length() > 0)
@@ -34,9 +36,6 @@
 			}
 			inputField.setText("");
 			mc.ingameGUI.getChatGUI().resetScroll();
-		} else
-		{
-			super.keyTyped(par1, par2);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSlider.java b/RMCClient/minecraft/net/minecraft/src/GuiSlider.java
index 1bf2639..1859b14 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSlider.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSlider.java
@@ -7,14 +7,14 @@
 public class GuiSlider extends GuiButton
 {
 	public float sliderValue = 1.0F;
-	public boolean dragging = false;
-	private EnumOptions idFloat = null;
+	public boolean dragging;
+	private EnumOptions idFloat;
 	
-	public GuiSlider(int par1, int par2, int par3, EnumOptions par4EnumOptions, String par5Str, float par6)
+	public GuiSlider(int p_i1056_1_, int p_i1056_2_, int p_i1056_3_, EnumOptions p_i1056_4_, String p_i1056_5_, float p_i1056_6_)
 	{
-		super(par1, par2, par3, 150, 20, par5Str);
-		idFloat = par4EnumOptions;
-		sliderValue = par6;
+		super(p_i1056_1_, p_i1056_2_, p_i1056_3_, 150, 20, p_i1056_5_);
+		idFloat = p_i1056_4_;
+		sliderValue = p_i1056_6_;
 	}
 	
 	@Override protected int getHoverState(boolean par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSlot.java b/RMCClient/minecraft/net/minecraft/src/GuiSlot.java
index cc7c6f7..5c9bf15 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSlot.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSlot.java
@@ -1,7 +1,5 @@
 package net.minecraft.src;
 
-import java.util.List;
-
 import net.minecraft.client.Minecraft;
 
 import org.lwjgl.input.Mouse;
@@ -25,21 +23,21 @@
 	private float scrollMultiplier;
 	private float amountScrolled;
 	private int selectedElement = -1;
-	private long lastClicked = 0L;
+	private long lastClicked;
 	private boolean showSelectionBox = true;
 	private boolean field_77243_s;
 	private int field_77242_t;
 	
-	public GuiSlot(Minecraft par1Minecraft, int par2, int par3, int par4, int par5, int par6)
+	public GuiSlot(Minecraft p_i1052_1_, int p_i1052_2_, int p_i1052_3_, int p_i1052_4_, int p_i1052_5_, int p_i1052_6_)
 	{
-		mc = par1Minecraft;
-		width = par2;
-		height = par3;
-		top = par4;
-		bottom = par5;
-		slotHeight = par6;
+		mc = p_i1052_1_;
+		width = p_i1052_2_;
+		height = p_i1052_3_;
+		top = p_i1052_4_;
+		bottom = p_i1052_5_;
+		slotHeight = p_i1052_6_;
 		left = 0;
-		right = par2;
+		right = p_i1052_2_;
 	}
 	
 	public void actionPerformed(GuiButton par1GuiButton)
@@ -175,7 +173,7 @@
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glDisable(GL11.GL_FOG);
 		Tessellator var18 = Tessellator.instance;
-		mc.renderEngine.bindTexture("/gui/background.png");
+		mc.func_110434_K().func_110577_a(Gui.field_110325_k);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		float var17 = 32.0F;
 		var18.startDrawingQuads();
@@ -366,7 +364,7 @@
 	private void overlayBackground(int par1, int par2, int par3, int par4)
 	{
 		Tessellator var5 = Tessellator.instance;
-		mc.renderEngine.bindTexture("/gui/background.png");
+		mc.func_110434_K().func_110577_a(Gui.field_110325_k);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		float var6 = 32.0F;
 		var5.startDrawingQuads();
@@ -379,10 +377,10 @@
 		var5.draw();
 	}
 	
-	public void registerScrollButtons(List par1List, int par2, int par3)
+	public void registerScrollButtons(int par1List, int par2)
 	{
-		scrollUpButtonID = par2;
-		scrollDownButtonID = par3;
+		scrollUpButtonID = par1List;
+		scrollDownButtonID = par2;
 	}
 	
 	public void setShowSelectionBox(boolean par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSlotLanguage.java b/RMCClient/minecraft/net/minecraft/src/GuiSlotLanguage.java
index aa5759e..074dfef 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSlotLanguage.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSlotLanguage.java
@@ -1,26 +1,27 @@
 package net.minecraft.src;
 
-import java.util.ArrayList;
 import java.util.Iterator;
-import java.util.TreeMap;
+import java.util.List;
+import java.util.Map;
 
 class GuiSlotLanguage extends GuiSlot
 {
-	private ArrayList field_77251_g;
-	private TreeMap field_77253_h;
+	private final List field_77251_g;
+	private final Map field_77253_h;
 	final GuiLanguage languageGui;
 	
-	public GuiSlotLanguage(GuiLanguage par1GuiLanguage)
+	public GuiSlotLanguage(GuiLanguage p_i1042_1_)
 	{
-		super(par1GuiLanguage.mc, par1GuiLanguage.width, par1GuiLanguage.height, 32, par1GuiLanguage.height - 65 + 4, 18);
-		languageGui = par1GuiLanguage;
-		field_77253_h = StringTranslate.getInstance().getLanguageList();
-		field_77251_g = new ArrayList();
-		Iterator var2 = field_77253_h.keySet().iterator();
+		super(p_i1042_1_.mc, p_i1042_1_.width, p_i1042_1_.height, 32, p_i1042_1_.height - 65 + 4, 18);
+		languageGui = p_i1042_1_;
+		field_77251_g = Lists.newArrayList();
+		field_77253_h = Maps.newHashMap();
+		Iterator var2 = GuiLanguage.func_135011_a(p_i1042_1_).func_135040_d().iterator();
 		while(var2.hasNext())
 		{
-			String var3 = (String) var2.next();
-			field_77251_g.add(var3);
+			Language var3 = (Language) var2.next();
+			field_77253_h.put(var3.func_135034_a(), var3);
+			field_77251_g.add(var3.func_135034_a());
 		}
 	}
 	
@@ -32,17 +33,19 @@
 	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
 	{
 		languageGui.fontRenderer.setBidiFlag(true);
-		languageGui.drawCenteredString(languageGui.fontRenderer, (String) field_77253_h.get(field_77251_g.get(par1)), languageGui.width / 2, par3 + 1, 16777215);
-		languageGui.fontRenderer.setBidiFlag(StringTranslate.isBidirectional(GuiLanguage.getGameSettings(languageGui).language));
+		languageGui.drawCenteredString(languageGui.fontRenderer, ((Language) field_77253_h.get(field_77251_g.get(par1))).toString(), languageGui.width / 2, par3 + 1, 16777215);
+		languageGui.fontRenderer.setBidiFlag(GuiLanguage.func_135011_a(languageGui).func_135041_c().func_135035_b());
 	}
 	
 	@Override protected void elementClicked(int par1, boolean par2)
 	{
-		StringTranslate.getInstance().setLanguage((String) field_77251_g.get(par1), false);
-		languageGui.mc.fontRenderer.setUnicodeFlag(StringTranslate.getInstance().isUnicode());
-		GuiLanguage.getGameSettings(languageGui).language = (String) field_77251_g.get(par1);
-		languageGui.fontRenderer.setBidiFlag(StringTranslate.isBidirectional(GuiLanguage.getGameSettings(languageGui).language));
-		GuiLanguage.getDoneButton(languageGui).displayString = StringTranslate.getInstance().translateKey("gui.done");
+		Language var3 = (Language) field_77253_h.get(field_77251_g.get(par1));
+		GuiLanguage.func_135011_a(languageGui).func_135045_a(var3);
+		GuiLanguage.getGameSettings(languageGui).language = var3.func_135034_a();
+		languageGui.mc.func_110436_a();
+		languageGui.fontRenderer.setUnicodeFlag(GuiLanguage.func_135011_a(languageGui).func_135042_a());
+		languageGui.fontRenderer.setBidiFlag(GuiLanguage.func_135011_a(languageGui).func_135044_b());
+		GuiLanguage.getDoneButton(languageGui).displayString = I18n.func_135053_a("gui.done");
 		GuiLanguage.getGameSettings(languageGui).saveOptions();
 	}
 	
@@ -58,6 +61,6 @@
 	
 	@Override protected boolean isSelected(int par1)
 	{
-		return ((String) field_77251_g.get(par1)).equals(StringTranslate.getInstance().getCurrentLanguage());
+		return ((String) field_77251_g.get(par1)).equals(GuiLanguage.func_135011_a(languageGui).func_135041_c().func_135034_a());
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSlotOnlineServerList.java b/RMCClient/minecraft/net/minecraft/src/GuiSlotOnlineServerList.java
index cd14daf..c015d98 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSlotOnlineServerList.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSlotOnlineServerList.java
@@ -6,20 +6,15 @@
 {
 	final GuiScreenOnlineServers field_96294_a;
 	
-	public GuiSlotOnlineServerList(GuiScreenOnlineServers par1)
+	public GuiSlotOnlineServerList(GuiScreenOnlineServers p_i1122_1_)
 	{
-		super(GuiScreenOnlineServers.func_98075_b(par1), par1.width, par1.height, 32, par1.height - 64, 36);
-		field_96294_a = par1;
-	}
-	
-	@Override protected void drawBackground()
-	{
-		field_96294_a.drawDefaultBackground();
+		super(GuiScreenOnlineServers.func_140037_f(p_i1122_1_), p_i1122_1_.width, p_i1122_1_.height, 32, p_i1122_1_.height - 64, 36);
+		field_96294_a = p_i1122_1_;
 	}
 	
 	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
 	{
-		if(par1 < GuiScreenOnlineServers.func_98094_c(field_96294_a).size())
+		if(par1 < GuiScreenOnlineServers.func_140013_c(field_96294_a).size())
 		{
 			func_96292_b(par1, par2, par3, par4, par5Tessellator);
 		}
@@ -27,103 +22,98 @@
 	
 	@Override protected void elementClicked(int par1, boolean par2)
 	{
-		if(par1 < GuiScreenOnlineServers.func_98094_c(field_96294_a).size())
+		if(par1 < GuiScreenOnlineServers.func_140013_c(field_96294_a).size())
 		{
-			GuiScreenOnlineServers.func_98089_b(field_96294_a, par1);
-			McoServer var3 = (McoServer) GuiScreenOnlineServers.func_98094_c(field_96294_a).get(GuiScreenOnlineServers.func_98072_d(field_96294_a));
-			GuiScreenOnlineServers.func_96161_f(field_96294_a).enabled = GuiScreenOnlineServers.func_98076_f(field_96294_a).session.username.equals(var3.field_96405_e);
-			GuiScreenOnlineServers.func_98092_g(field_96294_a).enabled = var3.field_96404_d.equals("OPEN") && !var3.field_98166_h;
-			if(par2 && GuiScreenOnlineServers.func_98092_g(field_96294_a).enabled)
+			McoServer var3 = (McoServer) GuiScreenOnlineServers.func_140013_c(field_96294_a).get(par1);
+			GuiScreenOnlineServers.func_140036_b(field_96294_a, var3.field_96408_a);
+			if(!GuiScreenOnlineServers.func_140015_g(field_96294_a).func_110432_I().func_111285_a().equals(var3.field_96405_e))
 			{
-				GuiScreenOnlineServers.func_98078_c(field_96294_a, GuiScreenOnlineServers.func_98072_d(field_96294_a));
+				GuiScreenOnlineServers.func_140038_h(field_96294_a).displayString = I18n.func_135053_a("mco.selectServer.leave");
+			} else
+			{
+				GuiScreenOnlineServers.func_140038_h(field_96294_a).displayString = I18n.func_135053_a("mco.selectServer.configure");
+			}
+			GuiScreenOnlineServers.func_140033_i(field_96294_a).enabled = var3.field_96404_d.equals("OPEN") && !var3.field_98166_h;
+			if(par2 && GuiScreenOnlineServers.func_140033_i(field_96294_a).enabled)
+			{
+				GuiScreenOnlineServers.func_140008_c(field_96294_a, GuiScreenOnlineServers.func_140041_a(field_96294_a));
 			}
 		}
 	}
 	
 	@Override protected boolean func_104086_b(int par1)
 	{
-		return par1 < GuiScreenOnlineServers.func_98094_c(field_96294_a).size() && ((McoServer) GuiScreenOnlineServers.func_98094_c(field_96294_a).get(par1)).field_96405_e.toLowerCase().equals(GuiScreenOnlineServers.func_98091_h(field_96294_a).session.username);
+		try
+		{
+			return par1 >= 0 && par1 < GuiScreenOnlineServers.func_140013_c(field_96294_a).size() && ((McoServer) GuiScreenOnlineServers.func_140013_c(field_96294_a).get(par1)).field_96405_e.toLowerCase().equals(GuiScreenOnlineServers.func_104032_j(field_96294_a).func_110432_I().func_111285_a());
+		} catch(Exception var3)
+		{
+			return false;
+		}
+	}
+	
+	@Override protected int func_130003_b()
+	{
+		return getSize() * 36;
+	}
+	
+	@Override protected void func_130004_c()
+	{
+		field_96294_a.drawDefaultBackground();
 	}
 	
 	private void func_96292_b(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
 	{
-		McoServer var6 = (McoServer) GuiScreenOnlineServers.func_98094_c(field_96294_a).get(par1);
-		field_96294_a.drawString(GuiScreenOnlineServers.func_104038_i(field_96294_a), var6.func_96398_b(), par2 + 2, par3 + 1, 16777215);
+		McoServer var6 = (McoServer) GuiScreenOnlineServers.func_140013_c(field_96294_a).get(par1);
+		field_96294_a.drawString(GuiScreenOnlineServers.func_140023_k(field_96294_a), var6.func_96398_b(), par2 + 2, par3 + 1, 16777215);
 		short var7 = 207;
 		byte var8 = 1;
 		if(var6.field_98166_h)
 		{
-			GuiScreenOnlineServers.func_101012_b(field_96294_a, par2 + var7, par3 + var8, field_104094_d, field_104095_e);
+			GuiScreenOnlineServers.func_104031_c(field_96294_a, par2 + var7, par3 + var8, field_104094_d, field_104095_e);
 		} else if(var6.field_96404_d.equals("CLOSED"))
 		{
-			GuiScreenOnlineServers.func_101009_c(field_96294_a, par2 + var7, par3 + var8, field_104094_d, field_104095_e);
-		} else if(var6.field_96405_e.equals(GuiScreenOnlineServers.func_104032_j(field_96294_a).session.username) && var6.field_104063_i < 7)
+			GuiScreenOnlineServers.func_140035_b(field_96294_a, par2 + var7, par3 + var8, field_104094_d, field_104095_e);
+		} else if(var6.field_96405_e.equals(GuiScreenOnlineServers.func_140014_l(field_96294_a).func_110432_I().func_111285_a()) && var6.field_104063_i < 7)
 		{
 			func_96293_a(par1, par2 - 14, par3, var6);
-			GuiScreenOnlineServers.func_104030_a(field_96294_a, par2 + var7, par3 + var8, field_104094_d, field_104095_e, var6.field_104063_i);
+			GuiScreenOnlineServers.func_140031_a(field_96294_a, par2 + var7, par3 + var8, field_104094_d, field_104095_e, var6.field_104063_i);
 		} else if(var6.field_96404_d.equals("OPEN"))
 		{
-			GuiScreenOnlineServers.func_104031_c(field_96294_a, par2 + var7, par3 + var8, field_104094_d, field_104095_e);
+			GuiScreenOnlineServers.func_140020_c(field_96294_a, par2 + var7, par3 + var8, field_104094_d, field_104095_e);
 			func_96293_a(par1, par2 - 14, par3, var6);
 		}
-		field_96294_a.drawString(GuiScreenOnlineServers.func_98084_i(field_96294_a), var6.func_96397_a(), par2 + 2, par3 + 12, 7105644);
-		field_96294_a.drawString(GuiScreenOnlineServers.func_101005_j(field_96294_a), var6.field_96405_e, par2 + 2, par3 + 12 + 11, 5000268);
+		field_96294_a.drawString(GuiScreenOnlineServers.func_140039_m(field_96294_a), var6.func_96397_a(), par2 + 2, par3 + 12, 7105644);
+		field_96294_a.drawString(GuiScreenOnlineServers.func_98079_k(field_96294_a), var6.field_96405_e, par2 + 2, par3 + 12 + 11, 5000268);
 	}
 	
 	private void func_96293_a(int par1, int par2, int par3, McoServer par4McoServer)
 	{
 		if(par4McoServer.field_96403_g != null)
 		{
-			synchronized(GuiScreenOnlineServers.func_101007_h())
+			synchronized(GuiScreenOnlineServers.func_140029_i())
 			{
-				if(GuiScreenOnlineServers.func_101010_i() < 5 && (!par4McoServer.field_96411_l || par4McoServer.field_102022_m))
+				if(GuiScreenOnlineServers.func_140018_j() < 5 && (!par4McoServer.field_96411_l || par4McoServer.field_102022_m))
 				{
 					new ThreadConnectToOnlineServer(this, par4McoServer).start();
 				}
 			}
-			boolean var5 = par4McoServer.field_96415_h > 61;
-			boolean var6 = par4McoServer.field_96415_h < 61;
-			boolean var7 = var5 || var6;
 			if(par4McoServer.field_96414_k != null)
 			{
-				field_96294_a.drawString(GuiScreenOnlineServers.func_98079_k(field_96294_a), par4McoServer.field_96414_k, par2 + 215 - GuiScreenOnlineServers.func_98087_l(field_96294_a).getStringWidth(par4McoServer.field_96414_k), par3 + 1, 8421504);
-			}
-			if(var7)
-			{
-				String var8 = EnumChatFormatting.DARK_RED + par4McoServer.field_96413_j;
-				field_96294_a.drawString(GuiScreenOnlineServers.func_98074_m(field_96294_a), var8, par2 + 200 - GuiScreenOnlineServers.func_101000_n(field_96294_a).getStringWidth(var8), par3 + 1, 8421504);
+				field_96294_a.drawString(GuiScreenOnlineServers.func_110402_q(field_96294_a), par4McoServer.field_96414_k, par2 + 215 - GuiScreenOnlineServers.func_140010_p(field_96294_a).getStringWidth(par4McoServer.field_96414_k), par3 + 1, 8421504);
 			}
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-			GuiScreenOnlineServers.func_101004_o(field_96294_a).renderEngine.bindTexture("/gui/icons.png");
-			byte var13 = 0;
-			boolean var9 = false;
-			String var10 = null;
-			if(var7)
-			{
-				var10 = var5 ? "Client out of date!" : "Server out of date!";
-				byte var14 = 5;
-				field_96294_a.drawTexturedModalRect(par2 + 205, par3, var13 * 10, 176 + var14 * 8, 10, 8);
-			}
-			byte var11 = 4;
-			if(field_104094_d >= par2 + 205 - var11 && field_104095_e >= par3 - var11 && field_104094_d <= par2 + 205 + 10 + var11 && field_104095_e <= par3 + 8 + var11)
-			{
-				GuiScreenOnlineServers.func_101011_a(field_96294_a, var10);
-			}
+			GuiScreenOnlineServers.func_142023_q(field_96294_a).func_110434_K().func_110577_a(Gui.field_110324_m);
 		}
-	}
-	
-	@Override protected int getContentHeight()
-	{
-		return getSize() * 36;
 	}
 	
 	@Override protected int getSize()
 	{
-		return GuiScreenOnlineServers.func_98094_c(field_96294_a).size() + 1;
+		return GuiScreenOnlineServers.func_140013_c(field_96294_a).size() + 1;
 	}
 	
 	@Override protected boolean isSelected(int par1)
 	{
-		return par1 == GuiScreenOnlineServers.func_98072_d(field_96294_a);
+		return par1 == GuiScreenOnlineServers.func_140027_d(field_96294_a, GuiScreenOnlineServers.func_140041_a(field_96294_a));
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSlotServer.java b/RMCClient/minecraft/net/minecraft/src/GuiSlotServer.java
index aa640bd..68bdadb 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSlotServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSlotServer.java
@@ -8,10 +8,10 @@
 {
 	final GuiMultiplayer parentGui;
 	
-	public GuiSlotServer(GuiMultiplayer par1GuiMultiplayer)
+	public GuiSlotServer(GuiMultiplayer p_i1039_1_)
 	{
-		super(par1GuiMultiplayer.mc, par1GuiMultiplayer.width, par1GuiMultiplayer.height, 32, par1GuiMultiplayer.height - 64, 36);
-		parentGui = par1GuiMultiplayer;
+		super(p_i1039_1_.mc, p_i1039_1_.width, p_i1039_1_.height, 32, p_i1039_1_.height - 64, 36);
+		parentGui = p_i1039_1_;
 	}
 	
 	@Override protected void drawBackground()
@@ -40,7 +40,7 @@
 			int var3 = GuiMultiplayer.getSelectedServer(parentGui);
 			GuiMultiplayer.getAndSetSelectedServer(parentGui, par1);
 			ServerData var4 = GuiMultiplayer.getInternetServerList(parentGui).countServers() > par1 ? GuiMultiplayer.getInternetServerList(parentGui).getServerData(par1) : null;
-			boolean var5 = GuiMultiplayer.getSelectedServer(parentGui) >= 0 && GuiMultiplayer.getSelectedServer(parentGui) < getSize() && (var4 == null || var4.field_82821_f == 61);
+			boolean var5 = GuiMultiplayer.getSelectedServer(parentGui) >= 0 && GuiMultiplayer.getSelectedServer(parentGui) < getSize() && (var4 == null || var4.field_82821_f == 74);
 			boolean var6 = GuiMultiplayer.getSelectedServer(parentGui) < GuiMultiplayer.getInternetServerList(parentGui).countServers();
 			GuiMultiplayer.getButtonSelect(parentGui).enabled = var5;
 			GuiMultiplayer.getButtonEdit(parentGui).enabled = var6;
@@ -70,8 +70,8 @@
 				new ThreadPollServers(this, var6).start();
 			}
 		}
-		boolean var7 = var6.field_82821_f > 61;
-		boolean var8 = var6.field_82821_f < 61;
+		boolean var7 = var6.field_82821_f > 74;
+		boolean var8 = var6.field_82821_f < 74;
 		boolean var9 = var7 || var8;
 		parentGui.drawString(parentGui.fontRenderer, var6.serverName, par2 + 2, par3 + 1, 16777215);
 		parentGui.drawString(parentGui.fontRenderer, var6.serverMOTD, par2 + 2, par3 + 12, 8421504);
@@ -86,10 +86,10 @@
 			parentGui.drawString(parentGui.fontRenderer, var6.serverIP, par2 + 2, par3 + 12 + 11, 3158064);
 		} else
 		{
-			parentGui.drawString(parentGui.fontRenderer, StatCollector.translateToLocal("selectServer.hiddenAddress"), par2 + 2, par3 + 12 + 11, 3158064);
+			parentGui.drawString(parentGui.fontRenderer, I18n.func_135053_a("selectServer.hiddenAddress"), par2 + 2, par3 + 12 + 11, 3158064);
 		}
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		parentGui.mc.renderEngine.bindTexture("/gui/icons.png");
+		parentGui.mc.func_110434_K().func_110577_a(Gui.field_110324_m);
 		byte var16 = 0;
 		boolean var11 = false;
 		String var12 = "";
@@ -147,11 +147,11 @@
 	private void func_77248_b(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
 	{
 		LanServer var6 = (LanServer) GuiMultiplayer.getListOfLanServers(parentGui).get(par1 - GuiMultiplayer.getInternetServerList(parentGui).countServers());
-		parentGui.drawString(parentGui.fontRenderer, StatCollector.translateToLocal("lanServer.title"), par2 + 2, par3 + 1, 16777215);
+		parentGui.drawString(parentGui.fontRenderer, I18n.func_135053_a("lanServer.title"), par2 + 2, par3 + 1, 16777215);
 		parentGui.drawString(parentGui.fontRenderer, var6.getServerMotd(), par2 + 2, par3 + 12, 8421504);
 		if(parentGui.mc.gameSettings.hideServerAddress)
 		{
-			parentGui.drawString(parentGui.fontRenderer, StatCollector.translateToLocal("selectServer.hiddenAddress"), par2 + 2, par3 + 12 + 11, 3158064);
+			parentGui.drawString(parentGui.fontRenderer, I18n.func_135053_a("selectServer.hiddenAddress"), par2 + 2, par3 + 12 + 11, 3158064);
 		} else
 		{
 			parentGui.drawString(parentGui.fontRenderer, var6.getServerIpPort(), par2 + 2, par3 + 12 + 11, 3158064);
@@ -160,7 +160,7 @@
 	
 	private void func_77249_c(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
 	{
-		parentGui.drawCenteredString(parentGui.fontRenderer, StatCollector.translateToLocal("lanServer.scanning"), parentGui.width / 2, par3 + 1, 16777215);
+		parentGui.drawCenteredString(parentGui.fontRenderer, I18n.func_135053_a("lanServer.scanning"), parentGui.width / 2, par3 + 1, 16777215);
 		String var6;
 		switch(GuiMultiplayer.getTicksOpened(parentGui) / 3 % 4)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSlotStats.java b/RMCClient/minecraft/net/minecraft/src/GuiSlotStats.java
index da1c275..2a68cc8 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSlotStats.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSlotStats.java
@@ -15,13 +15,12 @@
 	protected int field_77265_k;
 	final GuiStats statsGui;
 	
-	protected GuiSlotStats(GuiStats par1GuiStats)
+	protected GuiSlotStats(GuiStats p_i1070_1_)
 	{
-		super(GuiStats.getMinecraft1(par1GuiStats), par1GuiStats.width, par1GuiStats.height, 32, par1GuiStats.height - 64, 20);
-		statsGui = par1GuiStats;
+		super(GuiStats.getMinecraft1(p_i1070_1_), p_i1070_1_.width, p_i1070_1_.height, 32, p_i1070_1_.height - 64, 20);
+		statsGui = p_i1070_1_;
 		field_77262_g = -1;
 		field_77264_j = -1;
-		field_77265_k = 0;
 		setShowSelectionBox(false);
 		func_77223_a(true, 20);
 	}
@@ -60,7 +59,7 @@
 					if(par1 < var4 + 215 - 18 || par1 > var4 + 215) return;
 					var9 = func_77258_c(2);
 				}
-				var9 = ("" + StringTranslate.getInstance().translateKey(var9)).trim();
+				var9 = ("" + I18n.func_135053_a(var9)).trim();
 				if(var9.length() > 0)
 				{
 					int var6 = par1 + 12;
@@ -151,7 +150,7 @@
 		if(par1StatCrafting != null)
 		{
 			Item var4 = Item.itemsList[par1StatCrafting.getItemID()];
-			String var5 = ("" + StringTranslate.getInstance().translateNamedKey(var4.getUnlocalizedName())).trim();
+			String var5 = ("" + I18n.func_135053_a(var4.getUnlocalizedName() + ".name")).trim();
 			if(var5.length() > 0)
 			{
 				int var6 = par2 + 12;
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsBlock.java b/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsBlock.java
index 2180ed3..e4acad7 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsBlock.java
@@ -7,10 +7,10 @@
 {
 	final GuiStats theStats;
 	
-	public GuiSlotStatsBlock(GuiStats par1GuiStats)
+	public GuiSlotStatsBlock(GuiStats p_i1066_1_)
 	{
-		super(par1GuiStats);
-		theStats = par1GuiStats;
+		super(p_i1066_1_);
+		theStats = p_i1066_1_;
 		field_77266_h = new ArrayList();
 		Iterator var2 = StatList.objectMineStats.iterator();
 		while(var2.hasNext())
@@ -18,13 +18,13 @@
 			StatCrafting var3 = (StatCrafting) var2.next();
 			boolean var4 = false;
 			int var5 = var3.getItemID();
-			if(GuiStats.getStatsFileWriter(par1GuiStats).writeStat(var3) > 0)
+			if(GuiStats.getStatsFileWriter(p_i1066_1_).writeStat(var3) > 0)
 			{
 				var4 = true;
-			} else if(StatList.objectUseStats[var5] != null && GuiStats.getStatsFileWriter(par1GuiStats).writeStat(StatList.objectUseStats[var5]) > 0)
+			} else if(StatList.objectUseStats[var5] != null && GuiStats.getStatsFileWriter(p_i1066_1_).writeStat(StatList.objectUseStats[var5]) > 0)
 			{
 				var4 = true;
-			} else if(StatList.objectCraftStats[var5] != null && GuiStats.getStatsFileWriter(par1GuiStats).writeStat(StatList.objectCraftStats[var5]) > 0)
+			} else if(StatList.objectCraftStats[var5] != null && GuiStats.getStatsFileWriter(p_i1066_1_).writeStat(StatList.objectCraftStats[var5]) > 0)
 			{
 				var4 = true;
 			}
@@ -33,7 +33,7 @@
 				field_77266_h.add(var3);
 			}
 		}
-		field_77267_i = new SorterStatsBlock(this, par1GuiStats);
+		field_77267_i = new SorterStatsBlock(this, p_i1066_1_);
 	}
 	
 	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsGeneral.java b/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsGeneral.java
index 585dff8..4367c4d 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsGeneral.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsGeneral.java
@@ -4,10 +4,10 @@
 {
 	final GuiStats statsGui;
 	
-	public GuiSlotStatsGeneral(GuiStats par1GuiStats)
+	public GuiSlotStatsGeneral(GuiStats p_i1067_1_)
 	{
-		super(GuiStats.getMinecraft(par1GuiStats), par1GuiStats.width, par1GuiStats.height, 32, par1GuiStats.height - 64, 10);
-		statsGui = par1GuiStats;
+		super(GuiStats.getMinecraft(p_i1067_1_), p_i1067_1_.width, p_i1067_1_.height, 32, p_i1067_1_.height - 64, 10);
+		statsGui = p_i1067_1_;
 		setShowSelectionBox(false);
 	}
 	
@@ -19,7 +19,7 @@
 	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
 	{
 		StatBase var6 = (StatBase) StatList.generalStats.get(par1);
-		statsGui.drawString(GuiStats.getFontRenderer1(statsGui), StatCollector.translateToLocal(var6.getName()), par2 + 2, par3 + 1, par1 % 2 == 0 ? 16777215 : 9474192);
+		statsGui.drawString(GuiStats.getFontRenderer1(statsGui), I18n.func_135053_a(var6.getName()), par2 + 2, par3 + 1, par1 % 2 == 0 ? 16777215 : 9474192);
 		String var7 = var6.func_75968_a(GuiStats.getStatsFileWriter(statsGui).writeStat(var6));
 		statsGui.drawString(GuiStats.getFontRenderer2(statsGui), var7, par2 + 2 + 213 - GuiStats.getFontRenderer3(statsGui).getStringWidth(var7), par3 + 1, par1 % 2 == 0 ? 16777215 : 9474192);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsItem.java b/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsItem.java
index 1c141b4..1907876 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsItem.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSlotStatsItem.java
@@ -7,10 +7,10 @@
 {
 	final GuiStats slotGuiStats;
 	
-	public GuiSlotStatsItem(GuiStats par1GuiStats)
+	public GuiSlotStatsItem(GuiStats p_i1069_1_)
 	{
-		super(par1GuiStats);
-		slotGuiStats = par1GuiStats;
+		super(p_i1069_1_);
+		slotGuiStats = p_i1069_1_;
 		field_77266_h = new ArrayList();
 		Iterator var2 = StatList.itemStats.iterator();
 		while(var2.hasNext())
@@ -18,13 +18,13 @@
 			StatCrafting var3 = (StatCrafting) var2.next();
 			boolean var4 = false;
 			int var5 = var3.getItemID();
-			if(GuiStats.getStatsFileWriter(par1GuiStats).writeStat(var3) > 0)
+			if(GuiStats.getStatsFileWriter(p_i1069_1_).writeStat(var3) > 0)
 			{
 				var4 = true;
-			} else if(StatList.objectBreakStats[var5] != null && GuiStats.getStatsFileWriter(par1GuiStats).writeStat(StatList.objectBreakStats[var5]) > 0)
+			} else if(StatList.objectBreakStats[var5] != null && GuiStats.getStatsFileWriter(p_i1069_1_).writeStat(StatList.objectBreakStats[var5]) > 0)
 			{
 				var4 = true;
-			} else if(StatList.objectCraftStats[var5] != null && GuiStats.getStatsFileWriter(par1GuiStats).writeStat(StatList.objectCraftStats[var5]) > 0)
+			} else if(StatList.objectCraftStats[var5] != null && GuiStats.getStatsFileWriter(p_i1069_1_).writeStat(StatList.objectCraftStats[var5]) > 0)
 			{
 				var4 = true;
 			}
@@ -33,7 +33,7 @@
 				field_77266_h.add(var3);
 			}
 		}
-		field_77267_i = new SorterStatsItem(this, par1GuiStats);
+		field_77267_i = new SorterStatsItem(this, p_i1069_1_);
 	}
 	
 	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSmallButton.java b/RMCClient/minecraft/net/minecraft/src/GuiSmallButton.java
index 72fc187..8ef0d39 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSmallButton.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSmallButton.java
@@ -4,21 +4,21 @@
 {
 	private final EnumOptions enumOptions;
 	
-	public GuiSmallButton(int par1, int par2, int par3, EnumOptions par4EnumOptions, String par5Str)
+	public GuiSmallButton(int p_i1059_1_, int p_i1059_2_, int p_i1059_3_, EnumOptions p_i1059_4_, String p_i1059_5_)
 	{
-		super(par1, par2, par3, 150, 20, par5Str);
-		enumOptions = par4EnumOptions;
+		super(p_i1059_1_, p_i1059_2_, p_i1059_3_, 150, 20, p_i1059_5_);
+		enumOptions = p_i1059_4_;
 	}
 	
-	public GuiSmallButton(int par1, int par2, int par3, int par4, int par5, String par6Str)
+	public GuiSmallButton(int p_i1058_1_, int p_i1058_2_, int p_i1058_3_, int p_i1058_4_, int p_i1058_5_, String p_i1058_6_)
 	{
-		super(par1, par2, par3, par4, par5, par6Str);
+		super(p_i1058_1_, p_i1058_2_, p_i1058_3_, p_i1058_4_, p_i1058_5_, p_i1058_6_);
 		enumOptions = null;
 	}
 	
-	public GuiSmallButton(int par1, int par2, int par3, String par4Str)
+	public GuiSmallButton(int p_i1057_1_, int p_i1057_2_, int p_i1057_3_, String p_i1057_4_)
 	{
-		this(par1, par2, par3, (EnumOptions) null, par4Str);
+		this(p_i1057_1_, p_i1057_2_, p_i1057_3_, (EnumOptions) null, p_i1057_4_);
 	}
 	
 	public EnumOptions returnEnumOptions()
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSnooper.java b/RMCClient/minecraft/net/minecraft/src/GuiSnooper.java
index a21acc2..e3d114b 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSnooper.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSnooper.java
@@ -17,10 +17,10 @@
 	private GuiSnooperList snooperList;
 	private GuiButton buttonAllowSnooping;
 	
-	public GuiSnooper(GuiScreen par1GuiScreen, GameSettings par2GameSettings)
+	public GuiSnooper(GuiScreen p_i1061_1_, GameSettings p_i1061_2_)
 	{
-		snooperGuiScreen = par1GuiScreen;
-		snooperGameSettings = par2GameSettings;
+		snooperGuiScreen = p_i1061_1_;
+		snooperGameSettings = p_i1061_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -60,8 +60,8 @@
 	
 	@Override public void initGui()
 	{
-		snooperTitle = StatCollector.translateToLocal("options.snooper.title");
-		String var1 = StatCollector.translateToLocal("options.snooper.desc");
+		snooperTitle = I18n.func_135053_a("options.snooper.title");
+		String var1 = I18n.func_135053_a("options.snooper.desc");
 		ArrayList var2 = new ArrayList();
 		Iterator var3 = fontRenderer.listFormattedStringToWidth(var1, width - 30).iterator();
 		while(var3.hasNext())
@@ -73,7 +73,7 @@
 		field_74098_c.clear();
 		field_74096_d.clear();
 		buttonList.add(buttonAllowSnooping = new GuiButton(1, width / 2 - 152, height - 30, 150, 20, snooperGameSettings.getKeyBinding(EnumOptions.SNOOPER_ENABLED)));
-		buttonList.add(new GuiButton(2, width / 2 + 2, height - 30, 150, 20, StatCollector.translateToLocal("gui.done")));
+		buttonList.add(new GuiButton(2, width / 2 + 2, height - 30, 150, 20, I18n.func_135053_a("gui.done")));
 		boolean var6 = mc.getIntegratedServer() != null && mc.getIntegratedServer().getPlayerUsageSnooper() != null;
 		Iterator var7 = new TreeMap(mc.getPlayerUsageSnooper().getCurrentStats()).entrySet().iterator();
 		Entry var5;
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiSnooperList.java b/RMCClient/minecraft/net/minecraft/src/GuiSnooperList.java
index 46f5de7..f185e62 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiSnooperList.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiSnooperList.java
@@ -4,10 +4,10 @@
 {
 	final GuiSnooper snooperGui;
 	
-	public GuiSnooperList(GuiSnooper par1GuiSnooper)
+	public GuiSnooperList(GuiSnooper p_i1060_1_)
 	{
-		super(par1GuiSnooper.mc, par1GuiSnooper.width, par1GuiSnooper.height, 80, par1GuiSnooper.height - 40, par1GuiSnooper.fontRenderer.FONT_HEIGHT + 1);
-		snooperGui = par1GuiSnooper;
+		super(p_i1060_1_.mc, p_i1060_1_.width, p_i1060_1_.height, 80, p_i1060_1_.height - 40, p_i1060_1_.fontRenderer.FONT_HEIGHT + 1);
+		snooperGui = p_i1060_1_;
 	}
 	
 	@Override protected void drawBackground()
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiStats.java b/RMCClient/minecraft/net/minecraft/src/GuiStats.java
index 1076711..b82104b 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiStats.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiStats.java
@@ -14,12 +14,12 @@
 	private GuiSlotStatsItem slotItem;
 	private GuiSlotStatsBlock slotBlock;
 	private StatFileWriter statFileWriter;
-	private GuiSlot selectedSlot = null;
+	private GuiSlot selectedSlot;
 	
-	public GuiStats(GuiScreen par1GuiScreen, StatFileWriter par2StatFileWriter)
+	public GuiStats(GuiScreen p_i1071_1_, StatFileWriter p_i1071_2_)
 	{
-		parentGui = par1GuiScreen;
-		statFileWriter = par2StatFileWriter;
+		parentGui = p_i1071_1_;
+		statFileWriter = p_i1071_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -47,20 +47,19 @@
 	
 	public void addHeaderButtons()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		buttonList.add(new GuiButton(0, width / 2 + 4, height - 28, 150, 20, var1.translateKey("gui.done")));
-		buttonList.add(new GuiButton(1, width / 2 - 154, height - 52, 100, 20, var1.translateKey("stat.generalButton")));
+		buttonList.add(new GuiButton(0, width / 2 + 4, height - 28, 150, 20, I18n.func_135053_a("gui.done")));
+		buttonList.add(new GuiButton(1, width / 2 - 154, height - 52, 100, 20, I18n.func_135053_a("stat.generalButton")));
+		GuiButton var1;
+		buttonList.add(var1 = new GuiButton(2, width / 2 - 46, height - 52, 100, 20, I18n.func_135053_a("stat.blocksButton")));
 		GuiButton var2;
-		buttonList.add(var2 = new GuiButton(2, width / 2 - 46, height - 52, 100, 20, var1.translateKey("stat.blocksButton")));
-		GuiButton var3;
-		buttonList.add(var3 = new GuiButton(3, width / 2 + 62, height - 52, 100, 20, var1.translateKey("stat.itemsButton")));
+		buttonList.add(var2 = new GuiButton(3, width / 2 + 62, height - 52, 100, 20, I18n.func_135053_a("stat.itemsButton")));
 		if(slotBlock.getSize() == 0)
 		{
-			var2.enabled = false;
+			var1.enabled = false;
 		}
 		if(slotItem.getSize() == 0)
 		{
-			var3.enabled = false;
+			var2.enabled = false;
 		}
 	}
 	
@@ -74,7 +73,7 @@
 		drawButtonBackground(par1 + 1, par2 + 1);
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 		RenderHelper.enableGUIStandardItemLighting();
-		renderItem.renderItemIntoGUI(fontRenderer, mc.renderEngine, new ItemStack(par3, 1, 0), par1 + 2, par2 + 2);
+		renderItem.renderItemIntoGUI(fontRenderer, mc.func_110434_K(), new ItemStack(par3, 1, 0), par1 + 2, par2 + 2);
 		RenderHelper.disableStandardItemLighting();
 		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
 	}
@@ -89,7 +88,11 @@
 	private void drawSprite(int par1, int par2, int par3, int par4)
 	{
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		mc.renderEngine.bindTexture("/gui/slot.png");
+		mc.func_110434_K().func_110577_a(field_110323_l);
+		float var5 = 0.0078125F;
+		float var6 = 0.0078125F;
+		boolean var7 = true;
+		boolean var8 = true;
 		Tessellator var9 = Tessellator.instance;
 		var9.startDrawingQuads();
 		var9.addVertexWithUV(par1 + 0, par2 + 18, zLevel, (par3 + 0) * 0.0078125F, (par4 + 18) * 0.0078125F);
@@ -101,13 +104,13 @@
 	
 	@Override public void initGui()
 	{
-		statsTitle = StatCollector.translateToLocal("gui.stats");
+		statsTitle = I18n.func_135053_a("gui.stats");
 		slotGeneral = new GuiSlotStatsGeneral(this);
-		slotGeneral.registerScrollButtons(buttonList, 1, 1);
+		slotGeneral.registerScrollButtons(1, 1);
 		slotItem = new GuiSlotStatsItem(this);
-		slotItem.registerScrollButtons(buttonList, 1, 1);
+		slotItem.registerScrollButtons(1, 1);
 		slotBlock = new GuiSlotStatsBlock(this);
-		slotBlock.registerScrollButtons(buttonList, 1, 1);
+		slotBlock.registerScrollButtons(1, 1);
 		selectedSlot = slotGeneral;
 		addHeaderButtons();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiTextField.java b/RMCClient/minecraft/net/minecraft/src/GuiTextField.java
index c97d34b..e1f3ac7 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiTextField.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiTextField.java
@@ -14,22 +14,22 @@
 	private int cursorCounter;
 	private boolean enableBackgroundDrawing = true;
 	private boolean canLoseFocus = true;
-	private boolean isFocused = false;
+	private boolean isFocused;
 	private boolean isEnabled = true;
-	private int lineScrollOffset = 0;
-	private int cursorPosition = 0;
-	private int selectionEnd = 0;
+	private int lineScrollOffset;
+	private int cursorPosition;
+	private int selectionEnd;
 	private int enabledColor = 14737632;
 	private int disabledColor = 7368816;
 	private boolean visible = true;
 	
-	public GuiTextField(FontRenderer par1FontRenderer, int par2, int par3, int par4, int par5)
+	public GuiTextField(FontRenderer p_i1032_1_, int p_i1032_2_, int p_i1032_3_, int p_i1032_4_, int p_i1032_5_)
 	{
-		fontRenderer = par1FontRenderer;
-		xPos = par2;
-		yPos = par3;
-		width = par4;
-		height = par5;
+		fontRenderer = p_i1032_1_;
+		xPos = p_i1032_2_;
+		yPos = p_i1032_3_;
+		width = p_i1032_4_;
+		height = p_i1032_5_;
 	}
 	
 	public void deleteFromCursor(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiTexturePackSlot.java b/RMCClient/minecraft/net/minecraft/src/GuiTexturePackSlot.java
deleted file mode 100644
index 29cb40d..0000000
--- a/RMCClient/minecraft/net/minecraft/src/GuiTexturePackSlot.java
+++ /dev/null
@@ -1,79 +0,0 @@
-package net.minecraft.src;
-
-import java.util.List;
-
-import org.lwjgl.opengl.GL11;
-
-class GuiTexturePackSlot extends GuiSlot
-{
-	final GuiTexturePacks parentTexturePackGui;
-	
-	public GuiTexturePackSlot(GuiTexturePacks par1GuiTexturePacks)
-	{
-		super(GuiTexturePacks.func_73950_a(par1GuiTexturePacks), par1GuiTexturePacks.width, par1GuiTexturePacks.height, 32, par1GuiTexturePacks.height - 55 + 4, 36);
-		parentTexturePackGui = par1GuiTexturePacks;
-	}
-	
-	@Override protected void drawBackground()
-	{
-		parentTexturePackGui.drawDefaultBackground();
-	}
-	
-	@Override protected void drawSlot(int par1, int par2, int par3, int par4, Tessellator par5Tessellator)
-	{
-		ITexturePack var6 = (ITexturePack) GuiTexturePacks.func_96143_l(parentTexturePackGui).texturePackList.availableTexturePacks().get(par1);
-		var6.bindThumbnailTexture(GuiTexturePacks.func_96142_m(parentTexturePackGui).renderEngine);
-		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		par5Tessellator.startDrawingQuads();
-		par5Tessellator.setColorOpaque_I(16777215);
-		par5Tessellator.addVertexWithUV(par2, par3 + par4, 0.0D, 0.0D, 1.0D);
-		par5Tessellator.addVertexWithUV(par2 + 32, par3 + par4, 0.0D, 1.0D, 1.0D);
-		par5Tessellator.addVertexWithUV(par2 + 32, par3, 0.0D, 1.0D, 0.0D);
-		par5Tessellator.addVertexWithUV(par2, par3, 0.0D, 0.0D, 0.0D);
-		par5Tessellator.draw();
-		String var7 = var6.getTexturePackFileName();
-		if(!var6.isCompatible())
-		{
-			var7 = EnumChatFormatting.DARK_RED + StatCollector.translateToLocal("texturePack.incompatible") + " - " + var7;
-		}
-		if(var7.length() > 32)
-		{
-			var7 = var7.substring(0, 32).trim() + "...";
-		}
-		parentTexturePackGui.drawString(GuiTexturePacks.func_73954_n(parentTexturePackGui), var7, par2 + 32 + 2, par3 + 1, 16777215);
-		parentTexturePackGui.drawString(GuiTexturePacks.func_96145_o(parentTexturePackGui), var6.getFirstDescriptionLine(), par2 + 32 + 2, par3 + 12, 8421504);
-		parentTexturePackGui.drawString(GuiTexturePacks.func_96144_p(parentTexturePackGui), var6.getSecondDescriptionLine(), par2 + 32 + 2, par3 + 12 + 10, 8421504);
-	}
-	
-	@Override protected void elementClicked(int par1, boolean par2)
-	{
-		List var3 = GuiTexturePacks.func_73958_c(parentTexturePackGui).texturePackList.availableTexturePacks();
-		try
-		{
-			GuiTexturePacks.func_73951_d(parentTexturePackGui).texturePackList.setTexturePack((ITexturePack) var3.get(par1));
-			GuiTexturePacks.func_73952_e(parentTexturePackGui).renderEngine.refreshTextures();
-			GuiTexturePacks.func_73962_f(parentTexturePackGui).renderGlobal.loadRenderers();
-		} catch(Exception var5)
-		{
-			GuiTexturePacks.func_73959_g(parentTexturePackGui).texturePackList.setTexturePack((ITexturePack) var3.get(0));
-			GuiTexturePacks.func_73957_h(parentTexturePackGui).renderEngine.refreshTextures();
-			GuiTexturePacks.func_73956_i(parentTexturePackGui).renderGlobal.loadRenderers();
-		}
-	}
-	
-	@Override protected int getContentHeight()
-	{
-		return getSize() * 36;
-	}
-	
-	@Override protected int getSize()
-	{
-		return GuiTexturePacks.func_73955_b(parentTexturePackGui).texturePackList.availableTexturePacks().size();
-	}
-	
-	@Override protected boolean isSelected(int par1)
-	{
-		List var2 = GuiTexturePacks.func_73953_j(parentTexturePackGui).texturePackList.availableTexturePacks();
-		return GuiTexturePacks.func_73961_k(parentTexturePackGui).texturePackList.getSelectedTexturePack() == var2.get(par1);
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiTexturePacks.java b/RMCClient/minecraft/net/minecraft/src/GuiTexturePacks.java
deleted file mode 100644
index a7658a4..0000000
--- a/RMCClient/minecraft/net/minecraft/src/GuiTexturePacks.java
+++ /dev/null
@@ -1,200 +0,0 @@
-package net.minecraft.src;
-
-import java.io.File;
-import java.io.IOException;
-import java.net.URI;
-
-import net.minecraft.client.Minecraft;
-
-import org.lwjgl.Sys;
-
-public class GuiTexturePacks extends GuiScreen
-{
-	protected GuiScreen guiScreen;
-	private int refreshTimer = -1;
-	private String fileLocation = "";
-	private GuiTexturePackSlot guiTexturePackSlot;
-	private GameSettings field_96146_n;
-	
-	public GuiTexturePacks(GuiScreen par1, GameSettings par2)
-	{
-		guiScreen = par1;
-		field_96146_n = par2;
-	}
-	
-	@Override protected void actionPerformed(GuiButton par1GuiButton)
-	{
-		if(par1GuiButton.enabled)
-		{
-			if(par1GuiButton.id == 5)
-			{
-				if(Minecraft.getOs() == EnumOS.MACOS)
-				{
-					try
-					{
-						mc.getLogAgent().logInfo(fileLocation);
-						Runtime.getRuntime().exec(new String[] { "/usr/bin/open", fileLocation });
-						return;
-					} catch(IOException var7)
-					{
-						var7.printStackTrace();
-					}
-				} else if(Minecraft.getOs() == EnumOS.WINDOWS)
-				{
-					String var2 = String.format("cmd.exe /C start \"Open file\" \"%s\"", new Object[] { fileLocation });
-					try
-					{
-						Runtime.getRuntime().exec(var2);
-						return;
-					} catch(IOException var6)
-					{
-						var6.printStackTrace();
-					}
-				}
-				boolean var8 = false;
-				try
-				{
-					Class var3 = Class.forName("java.awt.Desktop");
-					Object var4 = var3.getMethod("getDesktop", new Class[0]).invoke((Object) null, new Object[0]);
-					var3.getMethod("browse", new Class[] { URI.class }).invoke(var4, new Object[] { new File(Minecraft.getMinecraftDir(), "texturepacks").toURI() });
-				} catch(Throwable var5)
-				{
-					var5.printStackTrace();
-					var8 = true;
-				}
-				if(var8)
-				{
-					mc.getLogAgent().logInfo("Opening via system class!");
-					Sys.openURL("file://" + fileLocation);
-				}
-			} else if(par1GuiButton.id == 6)
-			{
-				mc.displayGuiScreen(guiScreen);
-			} else
-			{
-				guiTexturePackSlot.actionPerformed(par1GuiButton);
-			}
-		}
-	}
-	
-	@Override public void drawScreen(int par1, int par2, float par3)
-	{
-		guiTexturePackSlot.drawScreen(par1, par2, par3);
-		if(refreshTimer <= 0)
-		{
-			mc.texturePackList.updateAvaliableTexturePacks();
-			refreshTimer += 20;
-		}
-		StringTranslate var4 = StringTranslate.getInstance();
-		drawCenteredString(fontRenderer, var4.translateKey("texturePack.title"), width / 2, 16, 16777215);
-		drawCenteredString(fontRenderer, var4.translateKey("texturePack.folderInfo"), width / 2 - 77, height - 26, 8421504);
-		super.drawScreen(par1, par2, par3);
-	}
-	
-	@Override public void initGui()
-	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		buttonList.add(new GuiSmallButton(5, width / 2 - 154, height - 48, var1.translateKey("texturePack.openFolder")));
-		buttonList.add(new GuiSmallButton(6, width / 2 + 4, height - 48, var1.translateKey("gui.done")));
-		mc.texturePackList.updateAvaliableTexturePacks();
-		fileLocation = new File(Minecraft.getMinecraftDir(), "texturepacks").getAbsolutePath();
-		guiTexturePackSlot = new GuiTexturePackSlot(this);
-		guiTexturePackSlot.registerScrollButtons(buttonList, 7, 8);
-	}
-	
-	@Override protected void mouseClicked(int par1, int par2, int par3)
-	{
-		super.mouseClicked(par1, par2, par3);
-	}
-	
-	@Override protected void mouseMovedOrUp(int par1, int par2, int par3)
-	{
-		super.mouseMovedOrUp(par1, par2, par3);
-	}
-	
-	@Override public void updateScreen()
-	{
-		super.updateScreen();
-		--refreshTimer;
-	}
-	
-	static Minecraft func_73950_a(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_73951_d(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_73952_e(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_73953_j(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static FontRenderer func_73954_n(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.fontRenderer;
-	}
-	
-	static Minecraft func_73955_b(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_73956_i(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_73957_h(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_73958_c(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_73959_g(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_73961_k(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_73962_f(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_96142_m(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static Minecraft func_96143_l(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.mc;
-	}
-	
-	static FontRenderer func_96144_p(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.fontRenderer;
-	}
-	
-	static FontRenderer func_96145_o(GuiTexturePacks par0GuiTexturePacks)
-	{
-		return par0GuiTexturePacks.fontRenderer;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiVideoSettings.java b/RMCClient/minecraft/net/minecraft/src/GuiVideoSettings.java
index d0cfd51..95d2e02 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiVideoSettings.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiVideoSettings.java
@@ -5,13 +5,13 @@
 	private GuiScreen parentGuiScreen;
 	protected String screenTitle = "Video Settings";
 	private GameSettings guiGameSettings;
-	private boolean is64bit = false;
+	private boolean is64bit;
 	private static EnumOptions[] videoOptions = new EnumOptions[] { EnumOptions.GRAPHICS, EnumOptions.RENDER_DISTANCE, EnumOptions.AMBIENT_OCCLUSION, EnumOptions.FRAMERATE_LIMIT, EnumOptions.ANAGLYPH, EnumOptions.VIEW_BOBBING, EnumOptions.GUI_SCALE, EnumOptions.ADVANCED_OPENGL, EnumOptions.GAMMA, EnumOptions.RENDER_CLOUDS, EnumOptions.PARTICLES, EnumOptions.USE_SERVER_TEXTURES, EnumOptions.USE_FULLSCREEN, EnumOptions.ENABLE_VSYNC };
 	
-	public GuiVideoSettings(GuiScreen par1GuiScreen, GameSettings par2GameSettings)
+	public GuiVideoSettings(GuiScreen p_i1062_1_, GameSettings p_i1062_2_)
 	{
-		parentGuiScreen = par1GuiScreen;
-		guiGameSettings = par2GameSettings;
+		parentGuiScreen = p_i1062_1_;
+		guiGameSettings = p_i1062_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -45,47 +45,46 @@
 		drawCenteredString(fontRenderer, screenTitle, width / 2, is64bit ? 20 : 5, 16777215);
 		if(!is64bit && guiGameSettings.renderDistance == 0)
 		{
-			drawCenteredString(fontRenderer, StatCollector.translateToLocal("options.farWarning1"), width / 2, height / 6 + 144 + 1, 11468800);
-			drawCenteredString(fontRenderer, StatCollector.translateToLocal("options.farWarning2"), width / 2, height / 6 + 144 + 13, 11468800);
+			drawCenteredString(fontRenderer, I18n.func_135053_a("options.farWarning1"), width / 2, height / 6 + 144 + 1, 11468800);
+			drawCenteredString(fontRenderer, I18n.func_135053_a("options.farWarning2"), width / 2, height / 6 + 144 + 13, 11468800);
 		}
 		super.drawScreen(par1, par2, par3);
 	}
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		screenTitle = var1.translateKey("options.videoTitle");
+		screenTitle = I18n.func_135053_a("options.videoTitle");
 		buttonList.clear();
-		buttonList.add(new GuiButton(200, width / 2 - 100, height / 6 + 168, var1.translateKey("gui.done")));
+		buttonList.add(new GuiButton(200, width / 2 - 100, height / 6 + 168, I18n.func_135053_a("gui.done")));
 		is64bit = false;
-		String[] var2 = new String[] { "sun.arch.data.model", "com.ibm.vm.bitmode", "os.arch" };
-		String[] var3 = var2;
-		int var4 = var2.length;
-		for(int var5 = 0; var5 < var4; ++var5)
+		String[] var1 = new String[] { "sun.arch.data.model", "com.ibm.vm.bitmode", "os.arch" };
+		String[] var2 = var1;
+		int var3 = var1.length;
+		for(int var4 = 0; var4 < var3; ++var4)
 		{
-			String var6 = var3[var5];
-			String var7 = System.getProperty(var6);
-			if(var7 != null && var7.contains("64"))
+			String var5 = var2[var4];
+			String var6 = System.getProperty(var5);
+			if(var6 != null && var6.contains("64"))
 			{
 				is64bit = true;
 				break;
 			}
 		}
-		int var9 = 0;
-		var4 = is64bit ? 0 : -15;
-		EnumOptions[] var10 = videoOptions;
-		int var11 = var10.length;
-		for(int var12 = 0; var12 < var11; ++var12)
+		int var8 = 0;
+		var3 = is64bit ? 0 : -15;
+		EnumOptions[] var9 = videoOptions;
+		int var10 = var9.length;
+		for(int var11 = 0; var11 < var10; ++var11)
 		{
-			EnumOptions var8 = var10[var12];
-			if(var8.getEnumFloat())
+			EnumOptions var7 = var9[var11];
+			if(var7.getEnumFloat())
 			{
-				buttonList.add(new GuiSlider(var8.returnEnumOrdinal(), width / 2 - 155 + var9 % 2 * 160, height / 7 + var4 + 24 * (var9 >> 1), var8, guiGameSettings.getKeyBinding(var8), guiGameSettings.getOptionFloatValue(var8)));
+				buttonList.add(new GuiSlider(var7.returnEnumOrdinal(), width / 2 - 155 + var8 % 2 * 160, height / 7 + var3 + 24 * (var8 >> 1), var7, guiGameSettings.getKeyBinding(var7), guiGameSettings.getOptionFloatValue(var7)));
 			} else
 			{
-				buttonList.add(new GuiSmallButton(var8.returnEnumOrdinal(), width / 2 - 155 + var9 % 2 * 160, height / 7 + var4 + 24 * (var9 >> 1), var8, guiGameSettings.getKeyBinding(var8)));
+				buttonList.add(new GuiSmallButton(var7.returnEnumOrdinal(), width / 2 - 155 + var8 % 2 * 160, height / 7 + var3 + 24 * (var8 >> 1), var7, guiGameSettings.getKeyBinding(var7)));
 			}
-			++var9;
+			++var8;
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiWinGame.java b/RMCClient/minecraft/net/minecraft/src/GuiWinGame.java
index cb38cf7..586437d 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiWinGame.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiWinGame.java
@@ -2,7 +2,6 @@
 
 import java.io.BufferedReader;
 import java.io.InputStreamReader;
-import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
@@ -11,9 +10,11 @@
 
 public class GuiWinGame extends GuiScreen
 {
-	private int updateCounter = 0;
+	private static final ResourceLocation field_110362_a = new ResourceLocation("textures/gui/title/minecraft.png");
+	private static final ResourceLocation field_110361_b = new ResourceLocation("textures/misc/vignette.png");
+	private int updateCounter;
 	private List lines;
-	private int field_73989_c = 0;
+	private int field_73989_c;
 	private float field_73987_d = 0.5F;
 	
 	@Override public boolean doesGuiPauseGame()
@@ -31,7 +32,7 @@
 		float var8 = -(updateCounter + par3) * field_73987_d;
 		GL11.glPushMatrix();
 		GL11.glTranslatef(0.0F, var8, 0.0F);
-		mc.renderEngine.bindTexture("/title/mclogo.png");
+		mc.func_110434_K().func_110577_a(field_110362_a);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		drawTexturedModalRect(var6, var7, 0, 0, 155, 44);
 		drawTexturedModalRect(var6 + 155, var7, 0, 45, 155, 44);
@@ -63,7 +64,7 @@
 			var9 += 12;
 		}
 		GL11.glPopMatrix();
-		mc.renderEngine.bindTexture("%blur%/misc/vignette.png");
+		mc.func_110434_K().func_110577_a(field_110361_b);
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glBlendFunc(GL11.GL_ZERO, GL11.GL_ONE_MINUS_SRC_COLOR);
 		var4.startDrawingQuads();
@@ -82,7 +83,7 @@
 	private void func_73986_b(int par1, int par2, float par3)
 	{
 		Tessellator var4 = Tessellator.instance;
-		mc.renderEngine.bindTexture("%blur%/gui/background.png");
+		mc.func_110434_K().func_110577_a(Gui.field_110325_k);
 		var4.startDrawingQuads();
 		var4.setColorRGBA_F(1.0F, 1.0F, 1.0F, 1.0F);
 		int var5 = width;
@@ -120,14 +121,14 @@
 				String var1 = "";
 				String var2 = "" + EnumChatFormatting.WHITE + EnumChatFormatting.OBFUSCATED + EnumChatFormatting.GREEN + EnumChatFormatting.AQUA;
 				short var3 = 274;
-				BufferedReader var4 = new BufferedReader(new InputStreamReader(GuiWinGame.class.getResourceAsStream("/title/win.txt"), Charset.forName("UTF-8")));
+				BufferedReader var4 = new BufferedReader(new InputStreamReader(mc.func_110442_L().func_110536_a(new ResourceLocation("texts/end.txt")).func_110527_b(), Charsets.UTF_8));
 				Random var5 = new Random(8124371L);
 				int var6;
 				while((var1 = var4.readLine()) != null)
 				{
 					String var7;
 					String var8;
-					for(var1 = var1.replaceAll("PLAYERNAME", mc.session.username); var1.contains(var2); var1 = var7 + EnumChatFormatting.WHITE + EnumChatFormatting.OBFUSCATED + "XXXXXXXX".substring(0, var5.nextInt(4) + 3) + var8)
+					for(var1 = var1.replaceAll("PLAYERNAME", mc.func_110432_I().func_111285_a()); var1.contains(var2); var1 = var7 + EnumChatFormatting.WHITE + EnumChatFormatting.OBFUSCATED + "XXXXXXXX".substring(0, var5.nextInt(4) + 3) + var8)
 					{
 						var6 = var1.indexOf(var2);
 						var7 = var1.substring(0, var6);
@@ -140,10 +141,10 @@
 				{
 					lines.add("");
 				}
-				var4 = new BufferedReader(new InputStreamReader(GuiWinGame.class.getResourceAsStream("/title/credits.txt"), Charset.forName("UTF-8")));
+				var4 = new BufferedReader(new InputStreamReader(mc.func_110442_L().func_110536_a(new ResourceLocation("texts/credits.txt")).func_110527_b(), Charsets.UTF_8));
 				while((var1 = var4.readLine()) != null)
 				{
-					var1 = var1.replaceAll("PLAYERNAME", mc.session.username);
+					var1 = var1.replaceAll("PLAYERNAME", mc.func_110432_I().func_111285_a());
 					var1 = var1.replaceAll("\t", "    ");
 					lines.addAll(mc.fontRenderer.listFormattedStringToWidth(var1, var3));
 					lines.add("");
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiWorldSlot.java b/RMCClient/minecraft/net/minecraft/src/GuiWorldSlot.java
index 54256a3..6a65e32 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiWorldSlot.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiWorldSlot.java
@@ -6,10 +6,10 @@
 {
 	final GuiSelectWorld parentWorldGui;
 	
-	public GuiWorldSlot(GuiSelectWorld par1GuiSelectWorld)
+	public GuiWorldSlot(GuiSelectWorld p_i1053_1_)
 	{
-		super(par1GuiSelectWorld.mc, par1GuiSelectWorld.width, par1GuiSelectWorld.height, 32, par1GuiSelectWorld.height - 64, 36);
-		parentWorldGui = par1GuiSelectWorld;
+		super(p_i1053_1_.mc, p_i1053_1_.width, p_i1053_1_.height, 32, p_i1053_1_.height - 64, 36);
+		parentWorldGui = p_i1053_1_;
 	}
 	
 	@Override protected void drawBackground()
@@ -37,11 +37,11 @@
 			var9 = GuiSelectWorld.func_82314_j(parentWorldGui)[var6.getEnumGameType().getID()];
 			if(var6.isHardcoreModeEnabled())
 			{
-				var9 = EnumChatFormatting.DARK_RED + StatCollector.translateToLocal("gameMode.hardcore") + EnumChatFormatting.RESET;
+				var9 = EnumChatFormatting.DARK_RED + I18n.func_135053_a("gameMode.hardcore") + EnumChatFormatting.RESET;
 			}
 			if(var6.getCheatsEnabled())
 			{
-				var9 = var9 + ", " + StatCollector.translateToLocal("selectWorld.cheats");
+				var9 = var9 + ", " + I18n.func_135053_a("selectWorld.cheats");
 			}
 		}
 		parentWorldGui.drawString(parentWorldGui.fontRenderer, var7, par2 + 2, par3 + 1, 16777215);
diff --git a/RMCClient/minecraft/net/minecraft/src/GuiYesNo.java b/RMCClient/minecraft/net/minecraft/src/GuiYesNo.java
index 56aed88..462132c 100644
--- a/RMCClient/minecraft/net/minecraft/src/GuiYesNo.java
+++ b/RMCClient/minecraft/net/minecraft/src/GuiYesNo.java
@@ -9,25 +9,24 @@
 	protected String buttonText2;
 	protected int worldNumber;
 	
-	public GuiYesNo(GuiScreen par1GuiScreen, String par2Str, String par3Str, int par4)
+	public GuiYesNo(GuiScreen p_i1025_1_, String p_i1025_2_, String p_i1025_3_, int p_i1025_4_)
 	{
-		parentScreen = par1GuiScreen;
-		message1 = par2Str;
-		message2 = par3Str;
-		worldNumber = par4;
-		StringTranslate var5 = StringTranslate.getInstance();
-		buttonText1 = var5.translateKey("gui.yes");
-		buttonText2 = var5.translateKey("gui.no");
+		parentScreen = p_i1025_1_;
+		message1 = p_i1025_2_;
+		message2 = p_i1025_3_;
+		worldNumber = p_i1025_4_;
+		buttonText1 = I18n.func_135053_a("gui.yes");
+		buttonText2 = I18n.func_135053_a("gui.no");
 	}
 	
-	public GuiYesNo(GuiScreen par1GuiScreen, String par2Str, String par3Str, String par4Str, String par5Str, int par6)
+	public GuiYesNo(GuiScreen p_i1026_1_, String p_i1026_2_, String p_i1026_3_, String p_i1026_4_, String p_i1026_5_, int p_i1026_6_)
 	{
-		parentScreen = par1GuiScreen;
-		message1 = par2Str;
-		message2 = par3Str;
-		buttonText1 = par4Str;
-		buttonText2 = par5Str;
-		worldNumber = par6;
+		parentScreen = p_i1026_1_;
+		message1 = p_i1026_2_;
+		message2 = p_i1026_3_;
+		buttonText1 = p_i1026_4_;
+		buttonText2 = p_i1026_5_;
+		worldNumber = p_i1026_6_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
diff --git a/RMCClient/minecraft/net/minecraft/src/HttpUtil.java b/RMCClient/minecraft/net/minecraft/src/HttpUtil.java
index 852f726..49bf6d7 100644
--- a/RMCClient/minecraft/net/minecraft/src/HttpUtil.java
+++ b/RMCClient/minecraft/net/minecraft/src/HttpUtil.java
@@ -2,21 +2,21 @@
 
 import java.io.BufferedReader;
 import java.io.DataOutputStream;
-import java.io.File;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.UnsupportedEncodingException;
 import java.net.HttpURLConnection;
-import java.net.MalformedURLException;
+import java.net.Proxy;
 import java.net.ServerSocket;
 import java.net.URL;
 import java.net.URLEncoder;
-import java.util.HashMap;
 import java.util.Iterator;
 import java.util.Map;
 import java.util.Map.Entry;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+
+import net.minecraft.server.MinecraftServer;
 
 public class HttpUtil
 {
@@ -53,29 +53,6 @@
 		return var1.toString();
 	}
 	
-	public static void downloadTexturePack(File par0File, String par1Str, IDownloadSuccess par2IDownloadSuccess, Map par3Map, int par4, IProgressUpdate par5IProgressUpdate)
-	{
-		Thread var6 = new Thread(new HttpUtilRunnable(par5IProgressUpdate, par1Str, par3Map, par0File, par2IDownloadSuccess, par4));
-		var6.setDaemon(true);
-		var6.start();
-	}
-	
-	public static String func_104145_a(URL par0URL) throws IOException
-	{
-		HttpURLConnection var1 = (HttpURLConnection) par0URL.openConnection();
-		var1.setRequestMethod("GET");
-		BufferedReader var2 = new BufferedReader(new InputStreamReader(var1.getInputStream()));
-		StringBuilder var4 = new StringBuilder();
-		String var3;
-		while((var3 = var2.readLine()) != null)
-		{
-			var4.append(var3);
-			var4.append('\r');
-		}
-		var2.close();
-		return var4.toString();
-	}
-	
 	public static int func_76181_a() throws IOException
 	{
 		ServerSocket var0 = null;
@@ -101,92 +78,52 @@
 		return var10;
 	}
 	
-	public static String[] loginToMinecraft(ILogAgent par0ILogAgent, String par1Str, String par2Str)
-	{
-		HashMap var3 = new HashMap();
-		var3.put("user", par1Str);
-		var3.put("password", par2Str);
-		var3.put("version", Integer.valueOf(13));
-		String var4;
-		try
-		{
-			var4 = sendPost(par0ILogAgent, new URL("http://login.minecraft.net/"), var3, false);
-		} catch(MalformedURLException var6)
-		{
-			var6.printStackTrace();
-			return null;
-		}
-		if(var4 != null && var4.length() != 0)
-		{
-			if(!var4.contains(":"))
-			{
-				if(par0ILogAgent == null)
-				{
-					System.out.println("Failed to authenticate: " + var4);
-				} else
-				{
-					par0ILogAgent.logWarning("Failed to authenticae: " + var4);
-				}
-				return null;
-			} else
-			{
-				String[] var5 = var4.split(":");
-				return new String[] { var5[2], var5[3] };
-			}
-		} else
-		{
-			if(par0ILogAgent == null)
-			{
-				System.out.println("Failed to authenticate: Can\'t connect to minecraft.net");
-			} else
-			{
-				par0ILogAgent.logWarning("Failed to authenticate: Can\'t connect to minecraft.net");
-			}
-			return null;
-		}
-	}
-	
 	public static String sendPost(ILogAgent par0ILogAgent, URL par1URL, Map par2Map, boolean par3)
 	{
 		return sendPost(par0ILogAgent, par1URL, buildPostString(par2Map), par3);
 	}
 	
-	public static String sendPost(ILogAgent par0ILogAgent, URL par1URL, String par2Str, boolean par3)
+	private static String sendPost(ILogAgent par0ILogAgent, URL par1URL, String par2Str, boolean par3)
 	{
 		try
 		{
-			HttpURLConnection var4 = (HttpURLConnection) par1URL.openConnection();
-			var4.setRequestMethod("POST");
-			var4.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
-			var4.setRequestProperty("Content-Length", "" + par2Str.getBytes().length);
-			var4.setRequestProperty("Content-Language", "en-US");
-			var4.setUseCaches(false);
-			var4.setDoInput(true);
-			var4.setDoOutput(true);
-			DataOutputStream var5 = new DataOutputStream(var4.getOutputStream());
-			var5.writeBytes(par2Str);
-			var5.flush();
-			var5.close();
-			BufferedReader var6 = new BufferedReader(new InputStreamReader(var4.getInputStream()));
-			StringBuffer var8 = new StringBuffer();
-			String var7;
-			while((var7 = var6.readLine()) != null)
+			Proxy var4 = MinecraftServer.getServer() == null ? null : MinecraftServer.getServer().func_110454_ao();
+			if(var4 == null)
 			{
-				var8.append(var7);
-				var8.append('\r');
+				var4 = Proxy.NO_PROXY;
 			}
+			HttpURLConnection var5 = (HttpURLConnection) par1URL.openConnection(var4);
+			var5.setRequestMethod("POST");
+			var5.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
+			var5.setRequestProperty("Content-Length", "" + par2Str.getBytes().length);
+			var5.setRequestProperty("Content-Language", "en-US");
+			var5.setUseCaches(false);
+			var5.setDoInput(true);
+			var5.setDoOutput(true);
+			DataOutputStream var6 = new DataOutputStream(var5.getOutputStream());
+			var6.writeBytes(par2Str);
+			var6.flush();
 			var6.close();
-			return var8.toString();
-		} catch(Exception var9)
+			BufferedReader var7 = new BufferedReader(new InputStreamReader(var5.getInputStream()));
+			StringBuffer var9 = new StringBuffer();
+			String var8;
+			while((var8 = var7.readLine()) != null)
+			{
+				var9.append(var8);
+				var9.append('\r');
+			}
+			var7.close();
+			return var9.toString();
+		} catch(Exception var10)
 		{
 			if(!par3)
 			{
 				if(par0ILogAgent != null)
 				{
-					par0ILogAgent.logSevereException("Could not post to " + par1URL, var9);
+					par0ILogAgent.logSevereException("Could not post to " + par1URL, var10);
 				} else
 				{
-					Logger.getAnonymousLogger().log(Level.SEVERE, "Could not post to " + par1URL, var9);
+					Logger.getAnonymousLogger().log(Level.SEVERE, "Could not post to " + par1URL, var10);
 				}
 			}
 			return "";
diff --git a/RMCClient/minecraft/net/minecraft/src/HttpUtilRunnable.java b/RMCClient/minecraft/net/minecraft/src/HttpUtilRunnable.java
deleted file mode 100644
index 80023d4..0000000
--- a/RMCClient/minecraft/net/minecraft/src/HttpUtilRunnable.java
+++ /dev/null
@@ -1,142 +0,0 @@
-package net.minecraft.src;
-
-import java.io.DataOutputStream;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.net.URL;
-import java.net.URLConnection;
-import java.util.Iterator;
-import java.util.Map;
-import java.util.Map.Entry;
-
-final class HttpUtilRunnable implements Runnable
-{
-	final IProgressUpdate feedbackHook;
-	final String sourceURL;
-	final Map field_76177_c;
-	final File destinationFile;
-	final IDownloadSuccess downloadSuccess;
-	final int maxFileSize;
-	
-	HttpUtilRunnable(IProgressUpdate par1IProgressUpdate, String par2Str, Map par3Map, File par4File, IDownloadSuccess par5IDownloadSuccess, int par6)
-	{
-		feedbackHook = par1IProgressUpdate;
-		sourceURL = par2Str;
-		field_76177_c = par3Map;
-		destinationFile = par4File;
-		downloadSuccess = par5IDownloadSuccess;
-		maxFileSize = par6;
-	}
-	
-	@Override public void run()
-	{
-		URLConnection var1 = null;
-		InputStream var2 = null;
-		DataOutputStream var3 = null;
-		if(feedbackHook != null)
-		{
-			feedbackHook.resetProgressAndMessage("Downloading Texture Pack");
-			feedbackHook.resetProgresAndWorkingMessage("Making Request...");
-		}
-		try
-		{
-			byte[] var4 = new byte[4096];
-			URL var5 = new URL(sourceURL);
-			var1 = var5.openConnection();
-			float var6 = 0.0F;
-			float var7 = field_76177_c.entrySet().size();
-			Iterator var8 = field_76177_c.entrySet().iterator();
-			while(var8.hasNext())
-			{
-				Entry var9 = (Entry) var8.next();
-				var1.setRequestProperty((String) var9.getKey(), (String) var9.getValue());
-				if(feedbackHook != null)
-				{
-					feedbackHook.setLoadingProgress((int) (++var6 / var7 * 100.0F));
-				}
-			}
-			var2 = var1.getInputStream();
-			var7 = var1.getContentLength();
-			int var28 = var1.getContentLength();
-			if(feedbackHook != null)
-			{
-				feedbackHook.resetProgresAndWorkingMessage(String.format("Downloading file (%.2f MB)...", new Object[] { Float.valueOf(var7 / 1000.0F / 1000.0F) }));
-			}
-			if(destinationFile.exists())
-			{
-				long var29 = destinationFile.length();
-				if(var29 == var28)
-				{
-					downloadSuccess.onSuccess(destinationFile);
-					if(feedbackHook != null)
-					{
-						feedbackHook.onNoMoreProgress();
-					}
-					return;
-				}
-				System.out.println("Deleting " + destinationFile + " as it does not match what we currently have (" + var28 + " vs our " + var29 + ").");
-				destinationFile.delete();
-			}
-			var3 = new DataOutputStream(new FileOutputStream(destinationFile));
-			if(maxFileSize > 0 && var7 > maxFileSize)
-			{
-				if(feedbackHook != null)
-				{
-					feedbackHook.onNoMoreProgress();
-				}
-				throw new IOException("Filesize is bigger than maximum allowed (file is " + var6 + ", limit is " + maxFileSize + ")");
-			}
-			boolean var31 = false;
-			int var30;
-			while((var30 = var2.read(var4)) >= 0)
-			{
-				var6 += var30;
-				if(feedbackHook != null)
-				{
-					feedbackHook.setLoadingProgress((int) (var6 / var7 * 100.0F));
-				}
-				if(maxFileSize > 0 && var6 > maxFileSize)
-				{
-					if(feedbackHook != null)
-					{
-						feedbackHook.onNoMoreProgress();
-					}
-					throw new IOException("Filesize was bigger than maximum allowed (got >= " + var6 + ", limit was " + maxFileSize + ")");
-				}
-				var3.write(var4, 0, var30);
-			}
-			downloadSuccess.onSuccess(destinationFile);
-			if(feedbackHook != null)
-			{
-				feedbackHook.onNoMoreProgress();
-			}
-		} catch(Throwable var26)
-		{
-			var26.printStackTrace();
-		} finally
-		{
-			try
-			{
-				if(var2 != null)
-				{
-					var2.close();
-				}
-			} catch(IOException var25)
-			{
-				;
-			}
-			try
-			{
-				if(var3 != null)
-				{
-					var3.close();
-				}
-			} catch(IOException var24)
-			{
-				;
-			}
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/I18n.java b/RMCClient/minecraft/net/minecraft/src/I18n.java
new file mode 100644
index 0000000..11ebfa4
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/I18n.java
@@ -0,0 +1,21 @@
+package net.minecraft.src;
+
+public class I18n
+{
+	private static Locale field_135054_a;
+	
+	static void func_135051_a(Locale p_135051_0_)
+	{
+		field_135054_a = p_135051_0_;
+	}
+	
+	public static String func_135052_a(String p_135052_0_, Object ... p_135052_1_)
+	{
+		return field_135054_a.func_135023_a(p_135052_0_, p_135052_1_);
+	}
+	
+	public static String func_135053_a(String p_135053_0_)
+	{
+		return field_135054_a.func_135027_a(p_135053_0_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/IBossDisplayData.java b/RMCClient/minecraft/net/minecraft/src/IBossDisplayData.java
index 50215bd..163f7a6 100644
--- a/RMCClient/minecraft/net/minecraft/src/IBossDisplayData.java
+++ b/RMCClient/minecraft/net/minecraft/src/IBossDisplayData.java
@@ -2,9 +2,9 @@
 
 public interface IBossDisplayData
 {
-	int getBossHealth();
+	float func_110138_aP();
+	
+	float func_110143_aJ();
 	
 	String getEntityName();
-	
-	int getMaxHealth();
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ICommandSender.java b/RMCClient/minecraft/net/minecraft/src/ICommandSender.java
index 1d4e08c..3d8007a 100644
--- a/RMCClient/minecraft/net/minecraft/src/ICommandSender.java
+++ b/RMCClient/minecraft/net/minecraft/src/ICommandSender.java
@@ -4,11 +4,11 @@
 {
 	boolean canCommandSenderUseCommand(int var1, String var2);
 	
+	World func_130014_f_();
+	
 	String getCommandSenderName();
 	
 	ChunkCoordinates getPlayerCoordinates();
 	
-	void sendChatToPlayer(String var1);
-	
-	String translateString(String var1, Object ... var2);
+	void sendChatToPlayer(ChatMessageComponent var1);
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/IDownloadSuccess.java b/RMCClient/minecraft/net/minecraft/src/IDownloadSuccess.java
deleted file mode 100644
index 3ba31f4..0000000
--- a/RMCClient/minecraft/net/minecraft/src/IDownloadSuccess.java
+++ /dev/null
@@ -1,8 +0,0 @@
-package net.minecraft.src;
-
-import java.io.File;
-
-public interface IDownloadSuccess
-{
-	void onSuccess(File var1);
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/IEntityMultiPart.java b/RMCClient/minecraft/net/minecraft/src/IEntityMultiPart.java
index c745630..c4aa028 100644
--- a/RMCClient/minecraft/net/minecraft/src/IEntityMultiPart.java
+++ b/RMCClient/minecraft/net/minecraft/src/IEntityMultiPart.java
@@ -2,7 +2,7 @@
 
 public interface IEntityMultiPart
 {
-	boolean attackEntityFromPart(EntityDragonPart var1, DamageSource var2, int var3);
+	boolean attackEntityFromPart(EntityDragonPart var1, DamageSource var2, float var3);
 	
 	World func_82194_d();
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/IMerchant.java b/RMCClient/minecraft/net/minecraft/src/IMerchant.java
index e6e38cb..bb1b13d 100644
--- a/RMCClient/minecraft/net/minecraft/src/IMerchant.java
+++ b/RMCClient/minecraft/net/minecraft/src/IMerchant.java
@@ -2,6 +2,8 @@
 
 public interface IMerchant
 {
+	void func_110297_a_(ItemStack var1);
+	
 	EntityPlayer getCustomer();
 	
 	MerchantRecipeList getRecipes(EntityPlayer var1);
diff --git a/RMCClient/minecraft/net/minecraft/src/IProgressUpdate.java b/RMCClient/minecraft/net/minecraft/src/IProgressUpdate.java
index 37d8e21..b18052d 100644
--- a/RMCClient/minecraft/net/minecraft/src/IProgressUpdate.java
+++ b/RMCClient/minecraft/net/minecraft/src/IProgressUpdate.java
@@ -4,11 +4,7 @@
 {
 	void displayProgressMessage(String var1);
 	
-	void onNoMoreProgress();
-	
 	void resetProgresAndWorkingMessage(String var1);
-	
-	void resetProgressAndMessage(String var1);
 	
 	void setLoadingProgress(int var1);
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/IRangedAttackMob.java b/RMCClient/minecraft/net/minecraft/src/IRangedAttackMob.java
index f084851..6858987 100644
--- a/RMCClient/minecraft/net/minecraft/src/IRangedAttackMob.java
+++ b/RMCClient/minecraft/net/minecraft/src/IRangedAttackMob.java
@@ -2,5 +2,5 @@
 
 public interface IRangedAttackMob
 {
-	void attackEntityWithRangedAttack(EntityLiving var1, float var2);
+	void attackEntityWithRangedAttack(EntityLivingBase var1, float var2);
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ITexturePack.java b/RMCClient/minecraft/net/minecraft/src/ITexturePack.java
deleted file mode 100644
index 5b8acdb..0000000
--- a/RMCClient/minecraft/net/minecraft/src/ITexturePack.java
+++ /dev/null
@@ -1,27 +0,0 @@
-package net.minecraft.src;
-
-import java.io.IOException;
-import java.io.InputStream;
-
-public interface ITexturePack
-{
-	void bindThumbnailTexture(RenderEngine var1);
-	
-	void deleteTexturePack(RenderEngine var1);
-	
-	InputStream func_98137_a(String var1, boolean var2) throws IOException;
-	
-	boolean func_98138_b(String var1, boolean var2);
-	
-	String getFirstDescriptionLine();
-	
-	InputStream getResourceAsStream(String var1) throws IOException;
-	
-	String getSecondDescriptionLine();
-	
-	String getTexturePackFileName();
-	
-	String getTexturePackID();
-	
-	boolean isCompatible();
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/Icon.java b/RMCClient/minecraft/net/minecraft/src/Icon.java
index 5a82a9e..feff639 100644
--- a/RMCClient/minecraft/net/minecraft/src/Icon.java
+++ b/RMCClient/minecraft/net/minecraft/src/Icon.java
@@ -19,8 +19,4 @@
 	int getOriginX();
 	
 	int getOriginY();
-	
-	int getSheetHeight();
-	
-	int getSheetWidth();
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/IconFlipped.java b/RMCClient/minecraft/net/minecraft/src/IconFlipped.java
index ad2d58d..cd9da18 100644
--- a/RMCClient/minecraft/net/minecraft/src/IconFlipped.java
+++ b/RMCClient/minecraft/net/minecraft/src/IconFlipped.java
@@ -6,11 +6,11 @@
 	private final boolean flipU;
 	private final boolean flipV;
 	
-	public IconFlipped(Icon par1Icon, boolean par2, boolean par3)
+	public IconFlipped(Icon p_i1560_1_, boolean p_i1560_2_, boolean p_i1560_3_)
 	{
-		baseIcon = par1Icon;
-		flipU = par2;
-		flipV = par3;
+		baseIcon = p_i1560_1_;
+		flipU = p_i1560_2_;
+		flipV = p_i1560_3_;
 	}
 	
 	@Override public String getIconName()
@@ -58,15 +58,5 @@
 	@Override public int getOriginY()
 	{
 		return baseIcon.getOriginY();
-	}
-	
-	@Override public int getSheetHeight()
-	{
-		return baseIcon.getSheetHeight();
-	}
-	
-	@Override public int getSheetWidth()
-	{
-		return baseIcon.getSheetWidth();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ImageBufferDownload.java b/RMCClient/minecraft/net/minecraft/src/ImageBufferDownload.java
index 5dd1249..0da4897 100644
--- a/RMCClient/minecraft/net/minecraft/src/ImageBufferDownload.java
+++ b/RMCClient/minecraft/net/minecraft/src/ImageBufferDownload.java
@@ -39,35 +39,6 @@
 			setAreaOpaque(0, 0, 32, 16);
 			setAreaTransparent(32, 0, 64, 32);
 			setAreaOpaque(0, 16, 64, 32);
-			boolean var4 = false;
-			int var5;
-			int var6;
-			int var7;
-			for(var5 = 32; var5 < 64; ++var5)
-			{
-				for(var6 = 0; var6 < 16; ++var6)
-				{
-					var7 = imageData[var5 + var6 * 64];
-					if((var7 >> 24 & 255) < 128)
-					{
-						var4 = true;
-					}
-				}
-			}
-			if(!var4)
-			{
-				for(var5 = 32; var5 < 64; ++var5)
-				{
-					for(var6 = 0; var6 < 16; ++var6)
-					{
-						var7 = imageData[var5 + var6 * 64];
-						if((var7 >> 24 & 255) < 128)
-						{
-							var4 = true;
-						}
-					}
-				}
-			}
 			return var2;
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/IntHashMap.java b/RMCClient/minecraft/net/minecraft/src/IntHashMap.java
index 3ccb928..1d963ab 100644
--- a/RMCClient/minecraft/net/minecraft/src/IntHashMap.java
+++ b/RMCClient/minecraft/net/minecraft/src/IntHashMap.java
@@ -68,11 +68,6 @@
 		}
 	}
 	
-	public Set getKeySet()
-	{
-		return keySet;
-	}
-	
 	private void grow(int par1)
 	{
 		IntHashMapEntry[] var2 = slots;
diff --git a/RMCClient/minecraft/net/minecraft/src/IntHashMapEntry.java b/RMCClient/minecraft/net/minecraft/src/IntHashMapEntry.java
index ca4c42e..e38bf0c 100644
--- a/RMCClient/minecraft/net/minecraft/src/IntHashMapEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/IntHashMapEntry.java
@@ -7,12 +7,12 @@
 	IntHashMapEntry nextEntry;
 	final int slotHash;
 	
-	IntHashMapEntry(int par1, int par2, Object par3Obj, IntHashMapEntry par4IntHashMapEntry)
+	IntHashMapEntry(int p_i1552_1_, int p_i1552_2_, Object p_i1552_3_, IntHashMapEntry p_i1552_4_)
 	{
-		valueEntry = par3Obj;
-		nextEntry = par4IntHashMapEntry;
-		hashEntry = par2;
-		slotHash = par1;
+		valueEntry = p_i1552_3_;
+		nextEntry = p_i1552_4_;
+		hashEntry = p_i1552_2_;
+		slotHash = p_i1552_1_;
 	}
 	
 	@Override public final boolean equals(Object par1Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/IntegratedPlayerList.java b/RMCClient/minecraft/net/minecraft/src/IntegratedPlayerList.java
index 1901b78..5cc1969 100644
--- a/RMCClient/minecraft/net/minecraft/src/IntegratedPlayerList.java
+++ b/RMCClient/minecraft/net/minecraft/src/IntegratedPlayerList.java
@@ -6,11 +6,11 @@
 
 public class IntegratedPlayerList extends ServerConfigurationManager
 {
-	private NBTTagCompound hostPlayerData = null;
+	private NBTTagCompound hostPlayerData;
 	
-	public IntegratedPlayerList(IntegratedServer par1IntegratedServer)
+	public IntegratedPlayerList(IntegratedServer p_i1314_1_)
 	{
-		super(par1IntegratedServer);
+		super(p_i1314_1_);
 		viewDistance = 10;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/IntegratedServer.java b/RMCClient/minecraft/net/minecraft/src/IntegratedServer.java
index 79b8e04..db6d14f 100644
--- a/RMCClient/minecraft/net/minecraft/src/IntegratedServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/IntegratedServer.java
@@ -10,24 +10,26 @@
 {
 	private final Minecraft mc;
 	private final WorldSettings theWorldSettings;
-	private final ILogAgent serverLogAgent = new LogAgent("Minecraft-Server", " [SERVER]", new File(Minecraft.getMinecraftDir(), "output-server.log").getAbsolutePath());
+	private final ILogAgent serverLogAgent;
 	private IntegratedServerListenThread theServerListeningThread;
-	private boolean isGamePaused = false;
+	private boolean isGamePaused;
 	private boolean isPublic;
 	private ThreadLanServerPing lanServerPing;
 	
-	public IntegratedServer(Minecraft par1Minecraft, String par2Str, String par3Str, WorldSettings par4WorldSettings)
+	public IntegratedServer(Minecraft p_i1317_1_, String p_i1317_2_, String p_i1317_3_, WorldSettings p_i1317_4_)
 	{
-		super(new File(Minecraft.getMinecraftDir(), "saves"));
-		setServerOwner(par1Minecraft.session.username);
-		setFolderName(par2Str);
-		setWorldName(par3Str);
-		setDemo(par1Minecraft.isDemo());
-		canCreateBonusChest(par4WorldSettings.isBonusChestEnabled());
+		super(new File(p_i1317_1_.mcDataDir, "saves"));
+		serverLogAgent = new LogAgent("Minecraft-Server", " [SERVER]", new File(p_i1317_1_.mcDataDir, "output-server.log").getAbsolutePath());
+		setServerOwner(p_i1317_1_.func_110432_I().func_111285_a());
+		setFolderName(p_i1317_2_);
+		setWorldName(p_i1317_3_);
+		setDemo(p_i1317_1_.isDemo());
+		canCreateBonusChest(p_i1317_4_.isBonusChestEnabled());
 		setBuildLimit(256);
 		setConfigurationManager(new IntegratedPlayerList(this));
-		mc = par1Minecraft;
-		theWorldSettings = par4WorldSettings;
+		mc = p_i1317_1_;
+		field_110456_c = p_i1317_1_.func_110437_J();
+		theWorldSettings = p_i1317_4_;
 		try
 		{
 			theServerListeningThread = new IntegratedServerListenThread(this);
@@ -59,6 +61,11 @@
 	@Override protected void finalTick(CrashReport par1CrashReport)
 	{
 		mc.crashed(par1CrashReport);
+	}
+	
+	@Override public int func_110455_j()
+	{
+		return 4;
 	}
 	
 	@Override protected File getDataDirectory()
@@ -188,7 +195,7 @@
 	
 	@Override protected boolean startServer() throws IOException
 	{
-		serverLogAgent.logInfo("Starting integrated minecraft server version 1.5.2");
+		serverLogAgent.logInfo("Starting integrated minecraft server version 1.6.2");
 		setOnlineMode(false);
 		setCanSpawnAnimals(true);
 		setCanSpawnNPCs(true);
diff --git a/RMCClient/minecraft/net/minecraft/src/IntegratedServerListenThread.java b/RMCClient/minecraft/net/minecraft/src/IntegratedServerListenThread.java
index 8012db4..904cf85 100644
--- a/RMCClient/minecraft/net/minecraft/src/IntegratedServerListenThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/IntegratedServerListenThread.java
@@ -10,13 +10,13 @@
 	private final MemoryConnection netMemoryConnection;
 	private MemoryConnection theMemoryConnection;
 	private String field_71759_e;
-	private boolean field_71756_f = false;
+	private boolean field_71756_f;
 	private ServerListenThread myServerListenThread;
 	
-	public IntegratedServerListenThread(IntegratedServer par1IntegratedServer) throws IOException
+	public IntegratedServerListenThread(IntegratedServer p_i1318_1_) throws IOException
 	{
-		super(par1IntegratedServer);
-		netMemoryConnection = new MemoryConnection(par1IntegratedServer.getLogAgent(), (NetHandler) null);
+		super(p_i1318_1_);
+		netMemoryConnection = new MemoryConnection(p_i1318_1_.getLogAgent(), (NetHandler) null);
 	}
 	
 	public void func_71754_a(MemoryConnection par1MemoryConnection, String par2Str)
@@ -50,7 +50,7 @@
 				throw var3;
 			}
 		}
-		return myServerListenThread.getInetAddress().getHostAddress() + ":" + myServerListenThread.getMyPort();
+		return String.valueOf(myServerListenThread.getMyPort());
 	}
 	
 	public IntegratedServer getIntegratedServer()
diff --git a/RMCClient/minecraft/net/minecraft/src/InventoryBasic.java b/RMCClient/minecraft/net/minecraft/src/InventoryBasic.java
index 0fd058e..e8f07f0 100644
--- a/RMCClient/minecraft/net/minecraft/src/InventoryBasic.java
+++ b/RMCClient/minecraft/net/minecraft/src/InventoryBasic.java
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.List;
 
 public class InventoryBasic implements IInventory
@@ -10,12 +11,12 @@
 	private List field_70480_d;
 	private boolean field_94051_e;
 	
-	public InventoryBasic(String par1Str, boolean par2, int par3)
+	public InventoryBasic(String p_i1561_1_, boolean p_i1561_2_, int p_i1561_3_)
 	{
-		inventoryTitle = par1Str;
-		field_94051_e = par2;
-		slotsCount = par3;
-		inventoryContents = new ItemStack[par3];
+		inventoryTitle = p_i1561_1_;
+		field_94051_e = p_i1561_2_;
+		slotsCount = p_i1561_3_;
+		inventoryContents = new ItemStack[p_i1561_3_];
 	}
 	
 	@Override public void closeChest()
@@ -46,6 +47,26 @@
 		} else return null;
 	}
 	
+	public void func_110132_b(IInvBasic p_110132_1_)
+	{
+		field_70480_d.remove(p_110132_1_);
+	}
+	
+	public void func_110133_a(String p_110133_1_)
+	{
+		field_94051_e = true;
+		inventoryTitle = p_110133_1_;
+	}
+	
+	public void func_110134_a(IInvBasic p_110134_1_)
+	{
+		if(field_70480_d == null)
+		{
+			field_70480_d = new ArrayList();
+		}
+		field_70480_d.add(p_110134_1_);
+	}
+	
 	@Override public int getInventoryStackLimit()
 	{
 		return 64;
diff --git a/RMCClient/minecraft/net/minecraft/src/InventoryCrafting.java b/RMCClient/minecraft/net/minecraft/src/InventoryCrafting.java
index 5c04bc9..dbd0122 100644
--- a/RMCClient/minecraft/net/minecraft/src/InventoryCrafting.java
+++ b/RMCClient/minecraft/net/minecraft/src/InventoryCrafting.java
@@ -6,12 +6,12 @@
 	private int inventoryWidth;
 	private Container eventHandler;
 	
-	public InventoryCrafting(Container par1Container, int par2, int par3)
+	public InventoryCrafting(Container p_i1807_1_, int p_i1807_2_, int p_i1807_3_)
 	{
-		int var4 = par2 * par3;
+		int var4 = p_i1807_2_ * p_i1807_3_;
 		stackList = new ItemStack[var4];
-		eventHandler = par1Container;
-		inventoryWidth = par2;
+		eventHandler = p_i1807_1_;
+		inventoryWidth = p_i1807_2_;
 	}
 	
 	@Override public void closeChest()
diff --git a/RMCClient/minecraft/net/minecraft/src/InventoryEffectRenderer.java b/RMCClient/minecraft/net/minecraft/src/InventoryEffectRenderer.java
index 69bbece..a4f7e84 100644
--- a/RMCClient/minecraft/net/minecraft/src/InventoryEffectRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/InventoryEffectRenderer.java
@@ -9,15 +9,16 @@
 {
 	private boolean field_74222_o;
 	
-	public InventoryEffectRenderer(Container par1Container)
+	public InventoryEffectRenderer(Container p_i1089_1_)
 	{
-		super(par1Container);
+		super(p_i1089_1_);
 	}
 	
 	private void displayDebuffEffects()
 	{
 		int var1 = guiLeft - 124;
 		int var2 = guiTop;
+		boolean var3 = true;
 		Collection var4 = mc.thePlayer.getActivePotionEffects();
 		if(!var4.isEmpty())
 		{
@@ -33,14 +34,14 @@
 				PotionEffect var7 = (PotionEffect) var6.next();
 				Potion var8 = Potion.potionTypes[var7.getPotionID()];
 				GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-				mc.renderEngine.bindTexture("/gui/inventory.png");
+				mc.func_110434_K().func_110577_a(field_110408_a);
 				drawTexturedModalRect(var1, var2, 0, 166, 140, 32);
 				if(var8.hasStatusIcon())
 				{
 					int var9 = var8.getStatusIconIndex();
 					drawTexturedModalRect(var1 + 6, var2 + 7, 0 + var9 % 8 * 18, 198 + var9 / 8 * 18, 18, 18);
 				}
-				String var11 = StatCollector.translateToLocal(var8.getName());
+				String var11 = I18n.func_135053_a(var8.getName());
 				if(var7.getAmplifier() == 1)
 				{
 					var11 = var11 + " II";
diff --git a/RMCClient/minecraft/net/minecraft/src/InventoryLargeChest.java b/RMCClient/minecraft/net/minecraft/src/InventoryLargeChest.java
index d92f715..9316d00 100644
--- a/RMCClient/minecraft/net/minecraft/src/InventoryLargeChest.java
+++ b/RMCClient/minecraft/net/minecraft/src/InventoryLargeChest.java
@@ -6,19 +6,19 @@
 	private IInventory upperChest;
 	private IInventory lowerChest;
 	
-	public InventoryLargeChest(String par1Str, IInventory par2IInventory, IInventory par3IInventory)
+	public InventoryLargeChest(String p_i1559_1_, IInventory p_i1559_2_, IInventory p_i1559_3_)
 	{
-		name = par1Str;
-		if(par2IInventory == null)
+		name = p_i1559_1_;
+		if(p_i1559_2_ == null)
 		{
-			par2IInventory = par3IInventory;
+			p_i1559_2_ = p_i1559_3_;
 		}
-		if(par3IInventory == null)
+		if(p_i1559_3_ == null)
 		{
-			par3IInventory = par2IInventory;
+			p_i1559_3_ = p_i1559_2_;
 		}
-		upperChest = par2IInventory;
-		lowerChest = par3IInventory;
+		upperChest = p_i1559_2_;
+		lowerChest = p_i1559_3_;
 	}
 	
 	@Override public void closeChest()
diff --git a/RMCClient/minecraft/net/minecraft/src/InventoryMerchant.java b/RMCClient/minecraft/net/minecraft/src/InventoryMerchant.java
index ee29ee6..cd2f078 100644
--- a/RMCClient/minecraft/net/minecraft/src/InventoryMerchant.java
+++ b/RMCClient/minecraft/net/minecraft/src/InventoryMerchant.java
@@ -8,10 +8,10 @@
 	private MerchantRecipe currentRecipe;
 	private int currentRecipeIndex;
 	
-	public InventoryMerchant(EntityPlayer par1EntityPlayer, IMerchant par2IMerchant)
+	public InventoryMerchant(EntityPlayer p_i1820_1_, IMerchant p_i1820_2_)
 	{
-		thePlayer = par1EntityPlayer;
-		theMerchant = par2IMerchant;
+		thePlayer = p_i1820_1_;
+		theMerchant = p_i1820_2_;
 	}
 	
 	@Override public void closeChest()
@@ -157,6 +157,7 @@
 				}
 			}
 		}
+		theMerchant.func_110297_a_(getStackInSlot(2));
 	}
 	
 	public void setCurrentRecipeIndex(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/InventoryPlayer.java b/RMCClient/minecraft/net/minecraft/src/InventoryPlayer.java
index 07c7dc0..0931bc3 100644
--- a/RMCClient/minecraft/net/minecraft/src/InventoryPlayer.java
+++ b/RMCClient/minecraft/net/minecraft/src/InventoryPlayer.java
@@ -4,20 +4,21 @@
 {
 	public ItemStack[] mainInventory = new ItemStack[36];
 	public ItemStack[] armorInventory = new ItemStack[4];
-	public int currentItem = 0;
+	public int currentItem;
 	private ItemStack currentItemStack;
 	public EntityPlayer player;
 	private ItemStack itemStack;
-	public boolean inventoryChanged = false;
+	public boolean inventoryChanged;
 	
-	public InventoryPlayer(EntityPlayer par1EntityPlayer)
+	public InventoryPlayer(EntityPlayer p_i1750_1_)
 	{
-		player = par1EntityPlayer;
+		player = p_i1750_1_;
 	}
 	
 	public boolean addItemStackToInventory(ItemStack par1ItemStack)
 	{
 		if(par1ItemStack == null) return false;
+		else if(par1ItemStack.stackSize == 0) return false;
 		else
 		{
 			try
@@ -120,6 +121,13 @@
 				armorInventory[var4] = null;
 			}
 		}
+		if(itemStack != null)
+		{
+			if(par1 > -1 && itemStack.itemID != par1) return var3;
+			if(par2 > -1 && itemStack.getItemDamage() != par2) return var3;
+			var3 += itemStack.stackSize;
+			setItemStack((ItemStack) null);
+		}
 		return var3;
 	}
 	
@@ -155,18 +163,18 @@
 		currentItem = par1InventoryPlayer.currentItem;
 	}
 	
-	public void damageArmor(int par1)
+	public void damageArmor(float par1)
 	{
-		par1 /= 4;
-		if(par1 < 1)
+		par1 /= 4.0F;
+		if(par1 < 1.0F)
 		{
-			par1 = 1;
+			par1 = 1.0F;
 		}
 		for(int var2 = 0; var2 < armorInventory.length; ++var2)
 		{
 			if(armorInventory[var2] != null && armorInventory[var2].getItem() instanceof ItemArmor)
 			{
-				armorInventory[var2].damageItem(par1, player);
+				armorInventory[var2].damageItem((int) par1, player);
 				if(armorInventory[var2].stackSize == 0)
 				{
 					armorInventory[var2] = null;
@@ -239,25 +247,23 @@
 	{
 		if(par1Item != null)
 		{
+			if(currentItemStack != null && currentItemStack.isItemEnchantable() && getInventorySlotContainItemAndDamage(currentItemStack.itemID, currentItemStack.getItemDamageForDisplay()) == currentItem) return;
 			int var3 = getInventorySlotContainItemAndDamage(par1Item.itemID, par2);
 			if(var3 >= 0)
 			{
+				int var4 = mainInventory[var3].stackSize;
 				mainInventory[var3] = mainInventory[currentItem];
+				mainInventory[currentItem] = new ItemStack(Item.itemsList[par1Item.itemID], var4, par2);
+			} else
+			{
+				mainInventory[currentItem] = new ItemStack(Item.itemsList[par1Item.itemID], 1, par2);
 			}
-			if(currentItemStack != null && currentItemStack.isItemEnchantable() && getInventorySlotContainItemAndDamage(currentItemStack.itemID, currentItemStack.getItemDamageForDisplay()) == currentItem) return;
-			mainInventory[currentItem] = new ItemStack(Item.itemsList[par1Item.itemID], 1, par2);
 		}
 	}
 	
 	public ItemStack getCurrentItem()
 	{
 		return currentItem < 9 && currentItem >= 0 ? mainInventory[currentItem] : null;
-	}
-	
-	public int getDamageVsEntity(Entity par1Entity)
-	{
-		ItemStack var2 = getStackInSlot(currentItem);
-		return var2 != null ? var2.getDamageVsEntity(par1Entity) : 1;
 	}
 	
 	public int getFirstEmptyStack()
diff --git a/RMCClient/minecraft/net/minecraft/src/InventoryRepair.java b/RMCClient/minecraft/net/minecraft/src/InventoryRepair.java
deleted file mode 100644
index cb1c451..0000000
--- a/RMCClient/minecraft/net/minecraft/src/InventoryRepair.java
+++ /dev/null
@@ -1,23 +0,0 @@
-package net.minecraft.src;
-
-class InventoryRepair extends InventoryBasic
-{
-	final ContainerRepair theContainer;
-	
-	InventoryRepair(ContainerRepair par1ContainerRepair, String par2Str, boolean par3, int par4)
-	{
-		super(par2Str, par3, par4);
-		theContainer = par1ContainerRepair;
-	}
-	
-	@Override public boolean isStackValidForSlot(int par1, ItemStack par2ItemStack)
-	{
-		return true;
-	}
-	
-	@Override public void onInventoryChanged()
-	{
-		super.onInventoryChanged();
-		theContainer.onCraftMatrixChanged(this);
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/Item.java b/RMCClient/minecraft/net/minecraft/src/Item.java
index fd21f2e..3a96139 100644
--- a/RMCClient/minecraft/net/minecraft/src/Item.java
+++ b/RMCClient/minecraft/net/minecraft/src/Item.java
@@ -2,195 +2,203 @@
 
 import java.util.List;
 import java.util.Random;
+import java.util.UUID;
 
 public class Item
 {
-	private CreativeTabs tabToDisplayOn = null;
+	protected static final UUID field_111210_e = UUID.fromString("CB3F55D3-645C-4F38-A497-9C13A33DB5CF");
+	private CreativeTabs tabToDisplayOn;
 	protected static Random itemRand = new Random();
 	public static Item[] itemsList = new Item[32000];
-	public static Item shovelIron = new ItemSpade(0, EnumToolMaterial.IRON).setUnlocalizedName("shovelIron");
-	public static Item pickaxeIron = new ItemPickaxe(1, EnumToolMaterial.IRON).setUnlocalizedName("pickaxeIron");
-	public static Item axeIron = new ItemAxe(2, EnumToolMaterial.IRON).setUnlocalizedName("hatchetIron");
-	public static Item flintAndSteel = new ItemFlintAndSteel(3).setUnlocalizedName("flintAndSteel");
-	public static Item appleRed = new ItemFood(4, 4, 0.3F, false).setUnlocalizedName("apple");
-	public static ItemBow bow = (ItemBow) new ItemBow(5).setUnlocalizedName("bow");
-	public static Item arrow = new Item(6).setUnlocalizedName("arrow").setCreativeTab(CreativeTabs.tabCombat);
-	public static Item coal = new ItemCoal(7).setUnlocalizedName("coal");
-	public static Item diamond = new Item(8).setUnlocalizedName("diamond").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item ingotIron = new Item(9).setUnlocalizedName("ingotIron").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item ingotGold = new Item(10).setUnlocalizedName("ingotGold").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item swordIron = new ItemSword(11, EnumToolMaterial.IRON).setUnlocalizedName("swordIron");
-	public static Item swordWood = new ItemSword(12, EnumToolMaterial.WOOD).setUnlocalizedName("swordWood");
-	public static Item shovelWood = new ItemSpade(13, EnumToolMaterial.WOOD).setUnlocalizedName("shovelWood");
-	public static Item pickaxeWood = new ItemPickaxe(14, EnumToolMaterial.WOOD).setUnlocalizedName("pickaxeWood");
-	public static Item axeWood = new ItemAxe(15, EnumToolMaterial.WOOD).setUnlocalizedName("hatchetWood");
-	public static Item swordStone = new ItemSword(16, EnumToolMaterial.STONE).setUnlocalizedName("swordStone");
-	public static Item shovelStone = new ItemSpade(17, EnumToolMaterial.STONE).setUnlocalizedName("shovelStone");
-	public static Item pickaxeStone = new ItemPickaxe(18, EnumToolMaterial.STONE).setUnlocalizedName("pickaxeStone");
-	public static Item axeStone = new ItemAxe(19, EnumToolMaterial.STONE).setUnlocalizedName("hatchetStone");
-	public static Item swordDiamond = new ItemSword(20, EnumToolMaterial.EMERALD).setUnlocalizedName("swordDiamond");
-	public static Item shovelDiamond = new ItemSpade(21, EnumToolMaterial.EMERALD).setUnlocalizedName("shovelDiamond");
-	public static Item pickaxeDiamond = new ItemPickaxe(22, EnumToolMaterial.EMERALD).setUnlocalizedName("pickaxeDiamond");
-	public static Item axeDiamond = new ItemAxe(23, EnumToolMaterial.EMERALD).setUnlocalizedName("hatchetDiamond");
-	public static Item stick = new Item(24).setFull3D().setUnlocalizedName("stick").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item bowlEmpty = new Item(25).setUnlocalizedName("bowl").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item bowlSoup = new ItemSoup(26, 6).setUnlocalizedName("mushroomStew");
-	public static Item swordGold = new ItemSword(27, EnumToolMaterial.GOLD).setUnlocalizedName("swordGold");
-	public static Item shovelGold = new ItemSpade(28, EnumToolMaterial.GOLD).setUnlocalizedName("shovelGold");
-	public static Item pickaxeGold = new ItemPickaxe(29, EnumToolMaterial.GOLD).setUnlocalizedName("pickaxeGold");
-	public static Item axeGold = new ItemAxe(30, EnumToolMaterial.GOLD).setUnlocalizedName("hatchetGold");
-	public static Item silk = new ItemReed(31, Block.tripWire).setUnlocalizedName("string").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item feather = new Item(32).setUnlocalizedName("feather").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item gunpowder = new Item(33).setUnlocalizedName("sulphur").setPotionEffect(PotionHelper.gunpowderEffect).setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item hoeWood = new ItemHoe(34, EnumToolMaterial.WOOD).setUnlocalizedName("hoeWood");
-	public static Item hoeStone = new ItemHoe(35, EnumToolMaterial.STONE).setUnlocalizedName("hoeStone");
-	public static Item hoeIron = new ItemHoe(36, EnumToolMaterial.IRON).setUnlocalizedName("hoeIron");
-	public static Item hoeDiamond = new ItemHoe(37, EnumToolMaterial.EMERALD).setUnlocalizedName("hoeDiamond");
-	public static Item hoeGold = new ItemHoe(38, EnumToolMaterial.GOLD).setUnlocalizedName("hoeGold");
-	public static Item seeds = new ItemSeeds(39, Block.crops.blockID, Block.tilledField.blockID).setUnlocalizedName("seeds");
-	public static Item wheat = new Item(40).setUnlocalizedName("wheat").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item bread = new ItemFood(41, 5, 0.6F, false).setUnlocalizedName("bread");
-	public static ItemArmor helmetLeather = (ItemArmor) new ItemArmor(42, EnumArmorMaterial.CLOTH, 0, 0).setUnlocalizedName("helmetCloth");
-	public static ItemArmor plateLeather = (ItemArmor) new ItemArmor(43, EnumArmorMaterial.CLOTH, 0, 1).setUnlocalizedName("chestplateCloth");
-	public static ItemArmor legsLeather = (ItemArmor) new ItemArmor(44, EnumArmorMaterial.CLOTH, 0, 2).setUnlocalizedName("leggingsCloth");
-	public static ItemArmor bootsLeather = (ItemArmor) new ItemArmor(45, EnumArmorMaterial.CLOTH, 0, 3).setUnlocalizedName("bootsCloth");
-	public static ItemArmor helmetChain = (ItemArmor) new ItemArmor(46, EnumArmorMaterial.CHAIN, 1, 0).setUnlocalizedName("helmetChain");
-	public static ItemArmor plateChain = (ItemArmor) new ItemArmor(47, EnumArmorMaterial.CHAIN, 1, 1).setUnlocalizedName("chestplateChain");
-	public static ItemArmor legsChain = (ItemArmor) new ItemArmor(48, EnumArmorMaterial.CHAIN, 1, 2).setUnlocalizedName("leggingsChain");
-	public static ItemArmor bootsChain = (ItemArmor) new ItemArmor(49, EnumArmorMaterial.CHAIN, 1, 3).setUnlocalizedName("bootsChain");
-	public static ItemArmor helmetIron = (ItemArmor) new ItemArmor(50, EnumArmorMaterial.IRON, 2, 0).setUnlocalizedName("helmetIron");
-	public static ItemArmor plateIron = (ItemArmor) new ItemArmor(51, EnumArmorMaterial.IRON, 2, 1).setUnlocalizedName("chestplateIron");
-	public static ItemArmor legsIron = (ItemArmor) new ItemArmor(52, EnumArmorMaterial.IRON, 2, 2).setUnlocalizedName("leggingsIron");
-	public static ItemArmor bootsIron = (ItemArmor) new ItemArmor(53, EnumArmorMaterial.IRON, 2, 3).setUnlocalizedName("bootsIron");
-	public static ItemArmor helmetDiamond = (ItemArmor) new ItemArmor(54, EnumArmorMaterial.DIAMOND, 3, 0).setUnlocalizedName("helmetDiamond");
-	public static ItemArmor plateDiamond = (ItemArmor) new ItemArmor(55, EnumArmorMaterial.DIAMOND, 3, 1).setUnlocalizedName("chestplateDiamond");
-	public static ItemArmor legsDiamond = (ItemArmor) new ItemArmor(56, EnumArmorMaterial.DIAMOND, 3, 2).setUnlocalizedName("leggingsDiamond");
-	public static ItemArmor bootsDiamond = (ItemArmor) new ItemArmor(57, EnumArmorMaterial.DIAMOND, 3, 3).setUnlocalizedName("bootsDiamond");
-	public static ItemArmor helmetGold = (ItemArmor) new ItemArmor(58, EnumArmorMaterial.GOLD, 4, 0).setUnlocalizedName("helmetGold");
-	public static ItemArmor plateGold = (ItemArmor) new ItemArmor(59, EnumArmorMaterial.GOLD, 4, 1).setUnlocalizedName("chestplateGold");
-	public static ItemArmor legsGold = (ItemArmor) new ItemArmor(60, EnumArmorMaterial.GOLD, 4, 2).setUnlocalizedName("leggingsGold");
-	public static ItemArmor bootsGold = (ItemArmor) new ItemArmor(61, EnumArmorMaterial.GOLD, 4, 3).setUnlocalizedName("bootsGold");
-	public static Item flint = new Item(62).setUnlocalizedName("flint").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item porkRaw = new ItemFood(63, 3, 0.3F, true).setUnlocalizedName("porkchopRaw");
-	public static Item porkCooked = new ItemFood(64, 8, 0.8F, true).setUnlocalizedName("porkchopCooked");
-	public static Item painting = new ItemHangingEntity(65, EntityPainting.class).setUnlocalizedName("painting");
-	public static Item appleGold = new ItemAppleGold(66, 4, 1.2F, false).setAlwaysEdible().setPotionEffect(Potion.regeneration.id, 5, 0, 1.0F).setUnlocalizedName("appleGold");
-	public static Item sign = new ItemSign(67).setUnlocalizedName("sign");
-	public static Item doorWood = new ItemDoor(68, Material.wood).setUnlocalizedName("doorWood");
-	public static Item bucketEmpty = new ItemBucket(69, 0).setUnlocalizedName("bucket").setMaxStackSize(16);
-	public static Item bucketWater = new ItemBucket(70, Block.waterMoving.blockID).setUnlocalizedName("bucketWater").setContainerItem(bucketEmpty);
-	public static Item bucketLava = new ItemBucket(71, Block.lavaMoving.blockID).setUnlocalizedName("bucketLava").setContainerItem(bucketEmpty);
-	public static Item minecartEmpty = new ItemMinecart(72, 0).setUnlocalizedName("minecart");
-	public static Item saddle = new ItemSaddle(73).setUnlocalizedName("saddle");
-	public static Item doorIron = new ItemDoor(74, Material.iron).setUnlocalizedName("doorIron");
-	public static Item redstone = new ItemRedstone(75).setUnlocalizedName("redstone").setPotionEffect(PotionHelper.redstoneEffect);
-	public static Item snowball = new ItemSnowball(76).setUnlocalizedName("snowball");
-	public static Item boat = new ItemBoat(77).setUnlocalizedName("boat");
-	public static Item leather = new Item(78).setUnlocalizedName("leather").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item bucketMilk = new ItemBucketMilk(79).setUnlocalizedName("milk").setContainerItem(bucketEmpty);
-	public static Item brick = new Item(80).setUnlocalizedName("brick").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item clay = new Item(81).setUnlocalizedName("clay").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item reed = new ItemReed(82, Block.reed).setUnlocalizedName("reeds").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item paper = new Item(83).setUnlocalizedName("paper").setCreativeTab(CreativeTabs.tabMisc);
-	public static Item book = new ItemBook(84).setUnlocalizedName("book").setCreativeTab(CreativeTabs.tabMisc);
-	public static Item slimeBall = new Item(85).setUnlocalizedName("slimeball").setCreativeTab(CreativeTabs.tabMisc);
-	public static Item minecartCrate = new ItemMinecart(86, 1).setUnlocalizedName("minecartChest");
-	public static Item minecartPowered = new ItemMinecart(87, 2).setUnlocalizedName("minecartFurnace");
-	public static Item egg = new ItemEgg(88).setUnlocalizedName("egg");
-	public static Item compass = new Item(89).setUnlocalizedName("compass").setCreativeTab(CreativeTabs.tabTools);
-	public static ItemFishingRod fishingRod = (ItemFishingRod) new ItemFishingRod(90).setUnlocalizedName("fishingRod");
-	public static Item pocketSundial = new Item(91).setUnlocalizedName("clock").setCreativeTab(CreativeTabs.tabTools);
-	public static Item lightStoneDust = new Item(92).setUnlocalizedName("yellowDust").setPotionEffect(PotionHelper.glowstoneEffect).setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item fishRaw = new ItemFood(93, 2, 0.3F, false).setUnlocalizedName("fishRaw");
-	public static Item fishCooked = new ItemFood(94, 5, 0.6F, false).setUnlocalizedName("fishCooked");
-	public static Item dyePowder = new ItemDye(95).setUnlocalizedName("dyePowder");
-	public static Item bone = new Item(96).setUnlocalizedName("bone").setFull3D().setCreativeTab(CreativeTabs.tabMisc);
-	public static Item sugar = new Item(97).setUnlocalizedName("sugar").setPotionEffect(PotionHelper.sugarEffect).setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item cake = new ItemReed(98, Block.cake).setMaxStackSize(1).setUnlocalizedName("cake").setCreativeTab(CreativeTabs.tabFood);
-	public static Item bed = new ItemBed(99).setMaxStackSize(1).setUnlocalizedName("bed");
-	public static Item redstoneRepeater = new ItemReed(100, Block.redstoneRepeaterIdle).setUnlocalizedName("diode").setCreativeTab(CreativeTabs.tabRedstone);
-	public static Item cookie = new ItemFood(101, 2, 0.1F, false).setUnlocalizedName("cookie");
-	public static ItemMap map = (ItemMap) new ItemMap(102).setUnlocalizedName("map");
-	public static ItemShears shears = (ItemShears) new ItemShears(103).setUnlocalizedName("shears");
-	public static Item melon = new ItemFood(104, 2, 0.3F, false).setUnlocalizedName("melon");
-	public static Item pumpkinSeeds = new ItemSeeds(105, Block.pumpkinStem.blockID, Block.tilledField.blockID).setUnlocalizedName("seeds_pumpkin");
-	public static Item melonSeeds = new ItemSeeds(106, Block.melonStem.blockID, Block.tilledField.blockID).setUnlocalizedName("seeds_melon");
-	public static Item beefRaw = new ItemFood(107, 3, 0.3F, true).setUnlocalizedName("beefRaw");
-	public static Item beefCooked = new ItemFood(108, 8, 0.8F, true).setUnlocalizedName("beefCooked");
-	public static Item chickenRaw = new ItemFood(109, 2, 0.3F, true).setPotionEffect(Potion.hunger.id, 30, 0, 0.3F).setUnlocalizedName("chickenRaw");
-	public static Item chickenCooked = new ItemFood(110, 6, 0.6F, true).setUnlocalizedName("chickenCooked");
-	public static Item rottenFlesh = new ItemFood(111, 4, 0.1F, true).setPotionEffect(Potion.hunger.id, 30, 0, 0.8F).setUnlocalizedName("rottenFlesh");
-	public static Item enderPearl = new ItemEnderPearl(112).setUnlocalizedName("enderPearl");
-	public static Item blazeRod = new Item(113).setUnlocalizedName("blazeRod").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item ghastTear = new Item(114).setUnlocalizedName("ghastTear").setPotionEffect(PotionHelper.ghastTearEffect).setCreativeTab(CreativeTabs.tabBrewing);
-	public static Item goldNugget = new Item(115).setUnlocalizedName("goldNugget").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item netherStalkSeeds = new ItemSeeds(116, Block.netherStalk.blockID, Block.slowSand.blockID).setUnlocalizedName("netherStalkSeeds").setPotionEffect("+4");
-	public static ItemPotion potion = (ItemPotion) new ItemPotion(117).setUnlocalizedName("potion");
-	public static Item glassBottle = new ItemGlassBottle(118).setUnlocalizedName("glassBottle");
-	public static Item spiderEye = new ItemFood(119, 2, 0.8F, false).setPotionEffect(Potion.poison.id, 5, 0, 1.0F).setUnlocalizedName("spiderEye").setPotionEffect(PotionHelper.spiderEyeEffect);
-	public static Item fermentedSpiderEye = new Item(120).setUnlocalizedName("fermentedSpiderEye").setPotionEffect(PotionHelper.fermentedSpiderEyeEffect).setCreativeTab(CreativeTabs.tabBrewing);
-	public static Item blazePowder = new Item(121).setUnlocalizedName("blazePowder").setPotionEffect(PotionHelper.blazePowderEffect).setCreativeTab(CreativeTabs.tabBrewing);
-	public static Item magmaCream = new Item(122).setUnlocalizedName("magmaCream").setPotionEffect(PotionHelper.magmaCreamEffect).setCreativeTab(CreativeTabs.tabBrewing);
-	public static Item brewingStand = new ItemReed(123, Block.brewingStand).setUnlocalizedName("brewingStand").setCreativeTab(CreativeTabs.tabBrewing);
-	public static Item cauldron = new ItemReed(124, Block.cauldron).setUnlocalizedName("cauldron").setCreativeTab(CreativeTabs.tabBrewing);
-	public static Item eyeOfEnder = new ItemEnderEye(125).setUnlocalizedName("eyeOfEnder");
-	public static Item speckledMelon = new Item(126).setUnlocalizedName("speckledMelon").setPotionEffect(PotionHelper.speckledMelonEffect).setCreativeTab(CreativeTabs.tabBrewing);
-	public static Item monsterPlacer = new ItemMonsterPlacer(127).setUnlocalizedName("monsterPlacer");
-	public static Item expBottle = new ItemExpBottle(128).setUnlocalizedName("expBottle");
-	public static Item fireballCharge = new ItemFireball(129).setUnlocalizedName("fireball");
-	public static Item writableBook = new ItemWritableBook(130).setUnlocalizedName("writingBook").setCreativeTab(CreativeTabs.tabMisc);
-	public static Item writtenBook = new ItemEditableBook(131).setUnlocalizedName("writtenBook");
-	public static Item emerald = new Item(132).setUnlocalizedName("emerald").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item itemFrame = new ItemHangingEntity(133, EntityItemFrame.class).setUnlocalizedName("frame");
-	public static Item flowerPot = new ItemReed(134, Block.flowerPot).setUnlocalizedName("flowerPot").setCreativeTab(CreativeTabs.tabDecorations);
-	public static Item carrot = new ItemSeedFood(135, 4, 0.6F, Block.carrot.blockID, Block.tilledField.blockID).setUnlocalizedName("carrots");
-	public static Item potato = new ItemSeedFood(136, 1, 0.3F, Block.potato.blockID, Block.tilledField.blockID).setUnlocalizedName("potato");
-	public static Item bakedPotato = new ItemFood(137, 6, 0.6F, false).setUnlocalizedName("potatoBaked");
-	public static Item poisonousPotato = new ItemFood(138, 2, 0.3F, false).setPotionEffect(Potion.poison.id, 5, 0, 0.6F).setUnlocalizedName("potatoPoisonous");
-	public static ItemEmptyMap emptyMap = (ItemEmptyMap) new ItemEmptyMap(139).setUnlocalizedName("emptyMap");
-	public static Item goldenCarrot = new ItemFood(140, 6, 1.2F, false).setUnlocalizedName("carrotGolden").setPotionEffect(PotionHelper.goldenCarrotEffect);
-	public static Item skull = new ItemSkull(141).setUnlocalizedName("skull");
-	public static Item carrotOnAStick = new ItemCarrotOnAStick(142).setUnlocalizedName("carrotOnAStick");
-	public static Item netherStar = new ItemSimpleFoiled(143).setUnlocalizedName("netherStar").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item pumpkinPie = new ItemFood(144, 8, 0.3F, false).setUnlocalizedName("pumpkinPie").setCreativeTab(CreativeTabs.tabFood);
-	public static Item firework = new ItemFirework(145).setUnlocalizedName("fireworks");
-	public static Item fireworkCharge = new ItemFireworkCharge(146).setUnlocalizedName("fireworksCharge").setCreativeTab(CreativeTabs.tabMisc);
-	public static ItemEnchantedBook enchantedBook = (ItemEnchantedBook) new ItemEnchantedBook(147).setMaxStackSize(1).setUnlocalizedName("enchantedBook");
-	public static Item comparator = new ItemReed(148, Block.redstoneComparatorIdle).setUnlocalizedName("comparator").setCreativeTab(CreativeTabs.tabRedstone);
-	public static Item netherrackBrick = new Item(149).setUnlocalizedName("netherbrick").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item netherQuartz = new Item(150).setUnlocalizedName("netherquartz").setCreativeTab(CreativeTabs.tabMaterials);
-	public static Item minecartTnt = new ItemMinecart(151, 3).setUnlocalizedName("minecartTnt");
-	public static Item minecartHopper = new ItemMinecart(152, 5).setUnlocalizedName("minecartHopper");
-	public static Item record13 = new ItemRecord(2000, "13").setUnlocalizedName("record");
-	public static Item recordCat = new ItemRecord(2001, "cat").setUnlocalizedName("record");
-	public static Item recordBlocks = new ItemRecord(2002, "blocks").setUnlocalizedName("record");
-	public static Item recordChirp = new ItemRecord(2003, "chirp").setUnlocalizedName("record");
-	public static Item recordFar = new ItemRecord(2004, "far").setUnlocalizedName("record");
-	public static Item recordMall = new ItemRecord(2005, "mall").setUnlocalizedName("record");
-	public static Item recordMellohi = new ItemRecord(2006, "mellohi").setUnlocalizedName("record");
-	public static Item recordStal = new ItemRecord(2007, "stal").setUnlocalizedName("record");
-	public static Item recordStrad = new ItemRecord(2008, "strad").setUnlocalizedName("record");
-	public static Item recordWard = new ItemRecord(2009, "ward").setUnlocalizedName("record");
-	public static Item record11 = new ItemRecord(2010, "11").setUnlocalizedName("record");
-	public static Item recordWait = new ItemRecord(2011, "wait").setUnlocalizedName("record");
+	public static Item shovelIron = new ItemSpade(0, EnumToolMaterial.IRON).setUnlocalizedName("shovelIron").func_111206_d("iron_shovel");
+	public static Item pickaxeIron = new ItemPickaxe(1, EnumToolMaterial.IRON).setUnlocalizedName("pickaxeIron").func_111206_d("iron_pickaxe");
+	public static Item axeIron = new ItemAxe(2, EnumToolMaterial.IRON).setUnlocalizedName("hatchetIron").func_111206_d("iron_axe");
+	public static Item flintAndSteel = new ItemFlintAndSteel(3).setUnlocalizedName("flintAndSteel").func_111206_d("flint_and_steel");
+	public static Item appleRed = new ItemFood(4, 4, 0.3F, false).setUnlocalizedName("apple").func_111206_d("apple");
+	public static ItemBow bow = (ItemBow) new ItemBow(5).setUnlocalizedName("bow").func_111206_d("bow");
+	public static Item arrow = new Item(6).setUnlocalizedName("arrow").setCreativeTab(CreativeTabs.tabCombat).func_111206_d("arrow");
+	public static Item coal = new ItemCoal(7).setUnlocalizedName("coal").func_111206_d("coal");
+	public static Item diamond = new Item(8).setUnlocalizedName("diamond").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("diamond");
+	public static Item ingotIron = new Item(9).setUnlocalizedName("ingotIron").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("iron_ingot");
+	public static Item ingotGold = new Item(10).setUnlocalizedName("ingotGold").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("gold_ingot");
+	public static Item swordIron = new ItemSword(11, EnumToolMaterial.IRON).setUnlocalizedName("swordIron").func_111206_d("iron_sword");
+	public static Item swordWood = new ItemSword(12, EnumToolMaterial.WOOD).setUnlocalizedName("swordWood").func_111206_d("wood_sword");
+	public static Item shovelWood = new ItemSpade(13, EnumToolMaterial.WOOD).setUnlocalizedName("shovelWood").func_111206_d("wood_shovel");
+	public static Item pickaxeWood = new ItemPickaxe(14, EnumToolMaterial.WOOD).setUnlocalizedName("pickaxeWood").func_111206_d("wood_pickaxe");
+	public static Item axeWood = new ItemAxe(15, EnumToolMaterial.WOOD).setUnlocalizedName("hatchetWood").func_111206_d("wood_axe");
+	public static Item swordStone = new ItemSword(16, EnumToolMaterial.STONE).setUnlocalizedName("swordStone").func_111206_d("stone_sword");
+	public static Item shovelStone = new ItemSpade(17, EnumToolMaterial.STONE).setUnlocalizedName("shovelStone").func_111206_d("stone_shovel");
+	public static Item pickaxeStone = new ItemPickaxe(18, EnumToolMaterial.STONE).setUnlocalizedName("pickaxeStone").func_111206_d("stone_pickaxe");
+	public static Item axeStone = new ItemAxe(19, EnumToolMaterial.STONE).setUnlocalizedName("hatchetStone").func_111206_d("stone_axe");
+	public static Item swordDiamond = new ItemSword(20, EnumToolMaterial.EMERALD).setUnlocalizedName("swordDiamond").func_111206_d("diamond_sword");
+	public static Item shovelDiamond = new ItemSpade(21, EnumToolMaterial.EMERALD).setUnlocalizedName("shovelDiamond").func_111206_d("diamond_shovel");
+	public static Item pickaxeDiamond = new ItemPickaxe(22, EnumToolMaterial.EMERALD).setUnlocalizedName("pickaxeDiamond").func_111206_d("diamond_pickaxe");
+	public static Item axeDiamond = new ItemAxe(23, EnumToolMaterial.EMERALD).setUnlocalizedName("hatchetDiamond").func_111206_d("diamond_axe");
+	public static Item stick = new Item(24).setFull3D().setUnlocalizedName("stick").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("stick");
+	public static Item bowlEmpty = new Item(25).setUnlocalizedName("bowl").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("bowl");
+	public static Item bowlSoup = new ItemSoup(26, 6).setUnlocalizedName("mushroomStew").func_111206_d("mushroom_stew");
+	public static Item swordGold = new ItemSword(27, EnumToolMaterial.GOLD).setUnlocalizedName("swordGold").func_111206_d("gold_sword");
+	public static Item shovelGold = new ItemSpade(28, EnumToolMaterial.GOLD).setUnlocalizedName("shovelGold").func_111206_d("gold_shovel");
+	public static Item pickaxeGold = new ItemPickaxe(29, EnumToolMaterial.GOLD).setUnlocalizedName("pickaxeGold").func_111206_d("gold_pickaxe");
+	public static Item axeGold = new ItemAxe(30, EnumToolMaterial.GOLD).setUnlocalizedName("hatchetGold").func_111206_d("gold_axe");
+	public static Item silk = new ItemReed(31, Block.tripWire).setUnlocalizedName("string").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("string");
+	public static Item feather = new Item(32).setUnlocalizedName("feather").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("feather");
+	public static Item gunpowder = new Item(33).setUnlocalizedName("sulphur").setPotionEffect(PotionHelper.gunpowderEffect).setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("gunpowder");
+	public static Item hoeWood = new ItemHoe(34, EnumToolMaterial.WOOD).setUnlocalizedName("hoeWood").func_111206_d("wood_hoe");
+	public static Item hoeStone = new ItemHoe(35, EnumToolMaterial.STONE).setUnlocalizedName("hoeStone").func_111206_d("stone_hoe");
+	public static Item hoeIron = new ItemHoe(36, EnumToolMaterial.IRON).setUnlocalizedName("hoeIron").func_111206_d("iron_hoe");
+	public static Item hoeDiamond = new ItemHoe(37, EnumToolMaterial.EMERALD).setUnlocalizedName("hoeDiamond").func_111206_d("diamond_hoe");
+	public static Item hoeGold = new ItemHoe(38, EnumToolMaterial.GOLD).setUnlocalizedName("hoeGold").func_111206_d("gold_hoe");
+	public static Item seeds = new ItemSeeds(39, Block.crops.blockID, Block.tilledField.blockID).setUnlocalizedName("seeds").func_111206_d("seeds_wheat");
+	public static Item wheat = new Item(40).setUnlocalizedName("wheat").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("wheat");
+	public static Item bread = new ItemFood(41, 5, 0.6F, false).setUnlocalizedName("bread").func_111206_d("bread");
+	public static ItemArmor helmetLeather = (ItemArmor) new ItemArmor(42, EnumArmorMaterial.CLOTH, 0, 0).setUnlocalizedName("helmetCloth").func_111206_d("leather_helmet");
+	public static ItemArmor plateLeather = (ItemArmor) new ItemArmor(43, EnumArmorMaterial.CLOTH, 0, 1).setUnlocalizedName("chestplateCloth").func_111206_d("leather_chestplate");
+	public static ItemArmor legsLeather = (ItemArmor) new ItemArmor(44, EnumArmorMaterial.CLOTH, 0, 2).setUnlocalizedName("leggingsCloth").func_111206_d("leather_leggings");
+	public static ItemArmor bootsLeather = (ItemArmor) new ItemArmor(45, EnumArmorMaterial.CLOTH, 0, 3).setUnlocalizedName("bootsCloth").func_111206_d("leather_boots");
+	public static ItemArmor helmetChain = (ItemArmor) new ItemArmor(46, EnumArmorMaterial.CHAIN, 1, 0).setUnlocalizedName("helmetChain").func_111206_d("chainmail_helmet");
+	public static ItemArmor plateChain = (ItemArmor) new ItemArmor(47, EnumArmorMaterial.CHAIN, 1, 1).setUnlocalizedName("chestplateChain").func_111206_d("chainmail_chestplate");
+	public static ItemArmor legsChain = (ItemArmor) new ItemArmor(48, EnumArmorMaterial.CHAIN, 1, 2).setUnlocalizedName("leggingsChain").func_111206_d("chainmail_leggings");
+	public static ItemArmor bootsChain = (ItemArmor) new ItemArmor(49, EnumArmorMaterial.CHAIN, 1, 3).setUnlocalizedName("bootsChain").func_111206_d("chainmail_boots");
+	public static ItemArmor helmetIron = (ItemArmor) new ItemArmor(50, EnumArmorMaterial.IRON, 2, 0).setUnlocalizedName("helmetIron").func_111206_d("iron_helmet");
+	public static ItemArmor plateIron = (ItemArmor) new ItemArmor(51, EnumArmorMaterial.IRON, 2, 1).setUnlocalizedName("chestplateIron").func_111206_d("iron_chestplate");
+	public static ItemArmor legsIron = (ItemArmor) new ItemArmor(52, EnumArmorMaterial.IRON, 2, 2).setUnlocalizedName("leggingsIron").func_111206_d("iron_leggings");
+	public static ItemArmor bootsIron = (ItemArmor) new ItemArmor(53, EnumArmorMaterial.IRON, 2, 3).setUnlocalizedName("bootsIron").func_111206_d("iron_boots");
+	public static ItemArmor helmetDiamond = (ItemArmor) new ItemArmor(54, EnumArmorMaterial.DIAMOND, 3, 0).setUnlocalizedName("helmetDiamond").func_111206_d("diamond_helmet");
+	public static ItemArmor plateDiamond = (ItemArmor) new ItemArmor(55, EnumArmorMaterial.DIAMOND, 3, 1).setUnlocalizedName("chestplateDiamond").func_111206_d("diamond_chestplate");
+	public static ItemArmor legsDiamond = (ItemArmor) new ItemArmor(56, EnumArmorMaterial.DIAMOND, 3, 2).setUnlocalizedName("leggingsDiamond").func_111206_d("diamond_leggings");
+	public static ItemArmor bootsDiamond = (ItemArmor) new ItemArmor(57, EnumArmorMaterial.DIAMOND, 3, 3).setUnlocalizedName("bootsDiamond").func_111206_d("diamond_boots");
+	public static ItemArmor helmetGold = (ItemArmor) new ItemArmor(58, EnumArmorMaterial.GOLD, 4, 0).setUnlocalizedName("helmetGold").func_111206_d("gold_helmet");
+	public static ItemArmor plateGold = (ItemArmor) new ItemArmor(59, EnumArmorMaterial.GOLD, 4, 1).setUnlocalizedName("chestplateGold").func_111206_d("gold_chestplate");
+	public static ItemArmor legsGold = (ItemArmor) new ItemArmor(60, EnumArmorMaterial.GOLD, 4, 2).setUnlocalizedName("leggingsGold").func_111206_d("gold_leggings");
+	public static ItemArmor bootsGold = (ItemArmor) new ItemArmor(61, EnumArmorMaterial.GOLD, 4, 3).setUnlocalizedName("bootsGold").func_111206_d("gold_boots");
+	public static Item flint = new Item(62).setUnlocalizedName("flint").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("flint");
+	public static Item porkRaw = new ItemFood(63, 3, 0.3F, true).setUnlocalizedName("porkchopRaw").func_111206_d("porkchop_raw");
+	public static Item porkCooked = new ItemFood(64, 8, 0.8F, true).setUnlocalizedName("porkchopCooked").func_111206_d("porkchop_cooked");
+	public static Item painting = new ItemHangingEntity(65, EntityPainting.class).setUnlocalizedName("painting").func_111206_d("painting");
+	public static Item appleGold = new ItemAppleGold(66, 4, 1.2F, false).setAlwaysEdible().setPotionEffect(Potion.regeneration.id, 5, 1, 1.0F).setUnlocalizedName("appleGold").func_111206_d("apple_golden");
+	public static Item sign = new ItemSign(67).setUnlocalizedName("sign").func_111206_d("sign");
+	public static Item doorWood = new ItemDoor(68, Material.wood).setUnlocalizedName("doorWood").func_111206_d("door_wood");
+	public static Item bucketEmpty = new ItemBucket(69, 0).setUnlocalizedName("bucket").setMaxStackSize(16).func_111206_d("bucket_empty");
+	public static Item bucketWater = new ItemBucket(70, Block.waterMoving.blockID).setUnlocalizedName("bucketWater").setContainerItem(bucketEmpty).func_111206_d("bucket_water");
+	public static Item bucketLava = new ItemBucket(71, Block.lavaMoving.blockID).setUnlocalizedName("bucketLava").setContainerItem(bucketEmpty).func_111206_d("bucket_lava");
+	public static Item minecartEmpty = new ItemMinecart(72, 0).setUnlocalizedName("minecart").func_111206_d("minecart_normal");
+	public static Item saddle = new ItemSaddle(73).setUnlocalizedName("saddle").func_111206_d("saddle");
+	public static Item doorIron = new ItemDoor(74, Material.iron).setUnlocalizedName("doorIron").func_111206_d("door_iron");
+	public static Item redstone = new ItemRedstone(75).setUnlocalizedName("redstone").setPotionEffect(PotionHelper.redstoneEffect).func_111206_d("redstone_dust");
+	public static Item snowball = new ItemSnowball(76).setUnlocalizedName("snowball").func_111206_d("snowball");
+	public static Item boat = new ItemBoat(77).setUnlocalizedName("boat").func_111206_d("boat");
+	public static Item leather = new Item(78).setUnlocalizedName("leather").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("leather");
+	public static Item bucketMilk = new ItemBucketMilk(79).setUnlocalizedName("milk").setContainerItem(bucketEmpty).func_111206_d("bucket_milk");
+	public static Item brick = new Item(80).setUnlocalizedName("brick").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("brick");
+	public static Item clay = new Item(81).setUnlocalizedName("clay").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("clay_ball");
+	public static Item reed = new ItemReed(82, Block.reed).setUnlocalizedName("reeds").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("reeds");
+	public static Item paper = new Item(83).setUnlocalizedName("paper").setCreativeTab(CreativeTabs.tabMisc).func_111206_d("paper");
+	public static Item book = new ItemBook(84).setUnlocalizedName("book").setCreativeTab(CreativeTabs.tabMisc).func_111206_d("book_normal");
+	public static Item slimeBall = new Item(85).setUnlocalizedName("slimeball").setCreativeTab(CreativeTabs.tabMisc).func_111206_d("slimeball");
+	public static Item minecartCrate = new ItemMinecart(86, 1).setUnlocalizedName("minecartChest").func_111206_d("minecart_chest");
+	public static Item minecartPowered = new ItemMinecart(87, 2).setUnlocalizedName("minecartFurnace").func_111206_d("minecart_furnace");
+	public static Item egg = new ItemEgg(88).setUnlocalizedName("egg").func_111206_d("egg");
+	public static Item compass = new Item(89).setUnlocalizedName("compass").setCreativeTab(CreativeTabs.tabTools).func_111206_d("compass");
+	public static ItemFishingRod fishingRod = (ItemFishingRod) new ItemFishingRod(90).setUnlocalizedName("fishingRod").func_111206_d("fishing_rod");
+	public static Item pocketSundial = new Item(91).setUnlocalizedName("clock").setCreativeTab(CreativeTabs.tabTools).func_111206_d("clock");
+	public static Item lightStoneDust = new Item(92).setUnlocalizedName("yellowDust").setPotionEffect(PotionHelper.glowstoneEffect).setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("glowstone_dust");
+	public static Item fishRaw = new ItemFood(93, 2, 0.3F, false).setUnlocalizedName("fishRaw").func_111206_d("fish_raw");
+	public static Item fishCooked = new ItemFood(94, 5, 0.6F, false).setUnlocalizedName("fishCooked").func_111206_d("fish_cooked");
+	public static Item dyePowder = new ItemDye(95).setUnlocalizedName("dyePowder").func_111206_d("dye_powder");
+	public static Item bone = new Item(96).setUnlocalizedName("bone").setFull3D().setCreativeTab(CreativeTabs.tabMisc).func_111206_d("bone");
+	public static Item sugar = new Item(97).setUnlocalizedName("sugar").setPotionEffect(PotionHelper.sugarEffect).setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("sugar");
+	public static Item cake = new ItemReed(98, Block.cake).setMaxStackSize(1).setUnlocalizedName("cake").setCreativeTab(CreativeTabs.tabFood).func_111206_d("cake");
+	public static Item bed = new ItemBed(99).setMaxStackSize(1).setUnlocalizedName("bed").func_111206_d("bed");
+	public static Item redstoneRepeater = new ItemReed(100, Block.redstoneRepeaterIdle).setUnlocalizedName("diode").setCreativeTab(CreativeTabs.tabRedstone).func_111206_d("repeater");
+	public static Item cookie = new ItemFood(101, 2, 0.1F, false).setUnlocalizedName("cookie").func_111206_d("cookie");
+	public static ItemMap map = (ItemMap) new ItemMap(102).setUnlocalizedName("map").func_111206_d("map_filled");
+	public static ItemShears shears = (ItemShears) new ItemShears(103).setUnlocalizedName("shears").func_111206_d("shears");
+	public static Item melon = new ItemFood(104, 2, 0.3F, false).setUnlocalizedName("melon").func_111206_d("melon");
+	public static Item pumpkinSeeds = new ItemSeeds(105, Block.pumpkinStem.blockID, Block.tilledField.blockID).setUnlocalizedName("seeds_pumpkin").func_111206_d("seeds_pumpkin");
+	public static Item melonSeeds = new ItemSeeds(106, Block.melonStem.blockID, Block.tilledField.blockID).setUnlocalizedName("seeds_melon").func_111206_d("seeds_melon");
+	public static Item beefRaw = new ItemFood(107, 3, 0.3F, true).setUnlocalizedName("beefRaw").func_111206_d("beef_raw");
+	public static Item beefCooked = new ItemFood(108, 8, 0.8F, true).setUnlocalizedName("beefCooked").func_111206_d("beef_cooked");
+	public static Item chickenRaw = new ItemFood(109, 2, 0.3F, true).setPotionEffect(Potion.hunger.id, 30, 0, 0.3F).setUnlocalizedName("chickenRaw").func_111206_d("chicken_raw");
+	public static Item chickenCooked = new ItemFood(110, 6, 0.6F, true).setUnlocalizedName("chickenCooked").func_111206_d("chicken_cooked");
+	public static Item rottenFlesh = new ItemFood(111, 4, 0.1F, true).setPotionEffect(Potion.hunger.id, 30, 0, 0.8F).setUnlocalizedName("rottenFlesh").func_111206_d("rotten_flesh");
+	public static Item enderPearl = new ItemEnderPearl(112).setUnlocalizedName("enderPearl").func_111206_d("ender_pearl");
+	public static Item blazeRod = new Item(113).setUnlocalizedName("blazeRod").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("blaze_rod");
+	public static Item ghastTear = new Item(114).setUnlocalizedName("ghastTear").setPotionEffect(PotionHelper.ghastTearEffect).setCreativeTab(CreativeTabs.tabBrewing).func_111206_d("ghast_tear");
+	public static Item goldNugget = new Item(115).setUnlocalizedName("goldNugget").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("gold_nugget");
+	public static Item netherStalkSeeds = new ItemSeeds(116, Block.netherStalk.blockID, Block.slowSand.blockID).setUnlocalizedName("netherStalkSeeds").setPotionEffect("+4").func_111206_d("nether_wart");
+	public static ItemPotion potion = (ItemPotion) new ItemPotion(117).setUnlocalizedName("potion").func_111206_d("potion");
+	public static Item glassBottle = new ItemGlassBottle(118).setUnlocalizedName("glassBottle").func_111206_d("potion_bottle_empty");
+	public static Item spiderEye = new ItemFood(119, 2, 0.8F, false).setPotionEffect(Potion.poison.id, 5, 0, 1.0F).setUnlocalizedName("spiderEye").setPotionEffect(PotionHelper.spiderEyeEffect).func_111206_d("spider_eye");
+	public static Item fermentedSpiderEye = new Item(120).setUnlocalizedName("fermentedSpiderEye").setPotionEffect(PotionHelper.fermentedSpiderEyeEffect).setCreativeTab(CreativeTabs.tabBrewing).func_111206_d("spider_eye_fermented");
+	public static Item blazePowder = new Item(121).setUnlocalizedName("blazePowder").setPotionEffect(PotionHelper.blazePowderEffect).setCreativeTab(CreativeTabs.tabBrewing).func_111206_d("blaze_powder");
+	public static Item magmaCream = new Item(122).setUnlocalizedName("magmaCream").setPotionEffect(PotionHelper.magmaCreamEffect).setCreativeTab(CreativeTabs.tabBrewing).func_111206_d("magma_cream");
+	public static Item brewingStand = new ItemReed(123, Block.brewingStand).setUnlocalizedName("brewingStand").setCreativeTab(CreativeTabs.tabBrewing).func_111206_d("brewing_stand");
+	public static Item cauldron = new ItemReed(124, Block.cauldron).setUnlocalizedName("cauldron").setCreativeTab(CreativeTabs.tabBrewing).func_111206_d("cauldron");
+	public static Item eyeOfEnder = new ItemEnderEye(125).setUnlocalizedName("eyeOfEnder").func_111206_d("ender_eye");
+	public static Item speckledMelon = new Item(126).setUnlocalizedName("speckledMelon").setPotionEffect(PotionHelper.speckledMelonEffect).setCreativeTab(CreativeTabs.tabBrewing).func_111206_d("melon_speckled");
+	public static Item monsterPlacer = new ItemMonsterPlacer(127).setUnlocalizedName("monsterPlacer").func_111206_d("spawn_egg");
+	public static Item expBottle = new ItemExpBottle(128).setUnlocalizedName("expBottle").func_111206_d("experience_bottle");
+	public static Item fireballCharge = new ItemFireball(129).setUnlocalizedName("fireball").func_111206_d("fireball");
+	public static Item writableBook = new ItemWritableBook(130).setUnlocalizedName("writingBook").setCreativeTab(CreativeTabs.tabMisc).func_111206_d("book_writable");
+	public static Item writtenBook = new ItemEditableBook(131).setUnlocalizedName("writtenBook").func_111206_d("book_written");
+	public static Item emerald = new Item(132).setUnlocalizedName("emerald").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("emerald");
+	public static Item itemFrame = new ItemHangingEntity(133, EntityItemFrame.class).setUnlocalizedName("frame").func_111206_d("item_frame");
+	public static Item flowerPot = new ItemReed(134, Block.flowerPot).setUnlocalizedName("flowerPot").setCreativeTab(CreativeTabs.tabDecorations).func_111206_d("flower_pot");
+	public static Item carrot = new ItemSeedFood(135, 4, 0.6F, Block.carrot.blockID, Block.tilledField.blockID).setUnlocalizedName("carrots").func_111206_d("carrot");
+	public static Item potato = new ItemSeedFood(136, 1, 0.3F, Block.potato.blockID, Block.tilledField.blockID).setUnlocalizedName("potato").func_111206_d("potato");
+	public static Item bakedPotato = new ItemFood(137, 6, 0.6F, false).setUnlocalizedName("potatoBaked").func_111206_d("potato_baked");
+	public static Item poisonousPotato = new ItemFood(138, 2, 0.3F, false).setPotionEffect(Potion.poison.id, 5, 0, 0.6F).setUnlocalizedName("potatoPoisonous").func_111206_d("potato_poisonous");
+	public static ItemEmptyMap emptyMap = (ItemEmptyMap) new ItemEmptyMap(139).setUnlocalizedName("emptyMap").func_111206_d("map_empty");
+	public static Item goldenCarrot = new ItemFood(140, 6, 1.2F, false).setUnlocalizedName("carrotGolden").setPotionEffect(PotionHelper.goldenCarrotEffect).func_111206_d("carrot_golden");
+	public static Item skull = new ItemSkull(141).setUnlocalizedName("skull").func_111206_d("skull");
+	public static Item carrotOnAStick = new ItemCarrotOnAStick(142).setUnlocalizedName("carrotOnAStick").func_111206_d("carrot_on_a_stick");
+	public static Item netherStar = new ItemSimpleFoiled(143).setUnlocalizedName("netherStar").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("nether_star");
+	public static Item pumpkinPie = new ItemFood(144, 8, 0.3F, false).setUnlocalizedName("pumpkinPie").setCreativeTab(CreativeTabs.tabFood).func_111206_d("pumpkin_pie");
+	public static Item firework = new ItemFirework(145).setUnlocalizedName("fireworks").func_111206_d("fireworks");
+	public static Item fireworkCharge = new ItemFireworkCharge(146).setUnlocalizedName("fireworksCharge").setCreativeTab(CreativeTabs.tabMisc).func_111206_d("fireworks_charge");
+	public static ItemEnchantedBook enchantedBook = (ItemEnchantedBook) new ItemEnchantedBook(147).setMaxStackSize(1).setUnlocalizedName("enchantedBook").func_111206_d("book_enchanted");
+	public static Item comparator = new ItemReed(148, Block.redstoneComparatorIdle).setUnlocalizedName("comparator").setCreativeTab(CreativeTabs.tabRedstone).func_111206_d("comparator");
+	public static Item netherrackBrick = new Item(149).setUnlocalizedName("netherbrick").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("netherbrick");
+	public static Item netherQuartz = new Item(150).setUnlocalizedName("netherquartz").setCreativeTab(CreativeTabs.tabMaterials).func_111206_d("quartz");
+	public static Item minecartTnt = new ItemMinecart(151, 3).setUnlocalizedName("minecartTnt").func_111206_d("minecart_tnt");
+	public static Item minecartHopper = new ItemMinecart(152, 5).setUnlocalizedName("minecartHopper").func_111206_d("minecart_hopper");
+	public static Item field_111215_ce = new Item(161).setUnlocalizedName("horsearmormetal").setMaxStackSize(1).setCreativeTab(CreativeTabs.tabMisc).func_111206_d("iron_horse_armor");
+	public static Item field_111216_cf = new Item(162).setUnlocalizedName("horsearmorgold").setMaxStackSize(1).setCreativeTab(CreativeTabs.tabMisc).func_111206_d("gold_horse_armor");
+	public static Item field_111213_cg = new Item(163).setUnlocalizedName("horsearmordiamond").setMaxStackSize(1).setCreativeTab(CreativeTabs.tabMisc).func_111206_d("diamond_horse_armor");
+	public static Item field_111214_ch = new ItemLeash(164).setUnlocalizedName("leash").func_111206_d("lead");
+	public static Item field_111212_ci = new ItemNameTag(165).setUnlocalizedName("nameTag").func_111206_d("name_tag");
+	public static Item record13 = new ItemRecord(2000, "13").setUnlocalizedName("record").func_111206_d("record_13");
+	public static Item recordCat = new ItemRecord(2001, "cat").setUnlocalizedName("record").func_111206_d("record_cat");
+	public static Item recordBlocks = new ItemRecord(2002, "blocks").setUnlocalizedName("record").func_111206_d("record_blocks");
+	public static Item recordChirp = new ItemRecord(2003, "chirp").setUnlocalizedName("record").func_111206_d("record_chirp");
+	public static Item recordFar = new ItemRecord(2004, "far").setUnlocalizedName("record").func_111206_d("record_far");
+	public static Item recordMall = new ItemRecord(2005, "mall").setUnlocalizedName("record").func_111206_d("record_mall");
+	public static Item recordMellohi = new ItemRecord(2006, "mellohi").setUnlocalizedName("record").func_111206_d("record_mellohi");
+	public static Item recordStal = new ItemRecord(2007, "stal").setUnlocalizedName("record").func_111206_d("record_stal");
+	public static Item recordStrad = new ItemRecord(2008, "strad").setUnlocalizedName("record").func_111206_d("record_strad");
+	public static Item recordWard = new ItemRecord(2009, "ward").setUnlocalizedName("record").func_111206_d("record_ward");
+	public static Item record11 = new ItemRecord(2010, "11").setUnlocalizedName("record").func_111206_d("record_11");
+	public static Item recordWait = new ItemRecord(2011, "wait").setUnlocalizedName("record").func_111206_d("record_wait");
 	public final int itemID;
 	protected int maxStackSize = 64;
-	private int maxDamage = 0;
-	protected boolean bFull3D = false;
-	protected boolean hasSubtypes = false;
-	private Item containerItem = null;
-	private String potionEffect = null;
+	private int maxDamage;
+	protected boolean bFull3D;
+	protected boolean hasSubtypes;
+	private Item containerItem;
+	private String potionEffect;
 	private String unlocalizedName;
 	protected Icon itemIcon;
+	protected String field_111218_cA;
 	
-	protected Item(int par1)
+	protected Item(int p_i1875_1_)
 	{
-		itemID = 256 + par1;
-		if(itemsList[256 + par1] != null)
+		itemID = 256 + p_i1875_1_;
+		if(itemsList[256 + p_i1875_1_] != null)
 		{
-			System.out.println("CONFLICT @ " + par1);
+			System.out.println("CONFLICT @ " + p_i1875_1_);
 		}
-		itemsList[256 + par1] = this;
+		itemsList[256 + p_i1875_1_] = this;
 	}
 	
 	public void addInformation(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, List par3List, boolean par4)
@@ -205,6 +213,27 @@
 	public boolean doesContainerItemLeaveCraftingGrid(ItemStack par1ItemStack)
 	{
 		return true;
+	}
+	
+	public Multimap func_111205_h()
+	{
+		return HashMultimap.create();
+	}
+	
+	protected Item func_111206_d(String p_111206_1_)
+	{
+		field_111218_cA = p_111206_1_;
+		return this;
+	}
+	
+	public boolean func_111207_a(ItemStack p_111207_1_, EntityPlayer p_111207_2_, EntityLivingBase p_111207_3_)
+	{
+		return false;
+	}
+	
+	protected String func_111208_A()
+	{
+		return field_111218_cA == null ? "MISSING_ICON_ITEM_" + itemID + "_" + unlocalizedName : field_111218_cA;
 	}
 	
 	public String func_77653_i(ItemStack par1ItemStack)
@@ -230,11 +259,6 @@
 	public CreativeTabs getCreativeTab()
 	{
 		return tabToDisplayOn;
-	}
-	
-	public int getDamageVsEntity(Entity par1Entity)
-	{
-		return 1;
 	}
 	
 	public boolean getHasSubtypes()
@@ -264,7 +288,7 @@
 	
 	public String getItemDisplayName(ItemStack par1ItemStack)
 	{
-		return ("" + StringTranslate.getInstance().translateNamedKey(getLocalizedName(par1ItemStack))).trim();
+		return ("" + StatCollector.translateToLocal(getLocalizedName(par1ItemStack) + ".name")).trim();
 	}
 	
 	public int getItemEnchantability()
@@ -378,7 +402,7 @@
 		return par1ItemStack.isItemEnchanted();
 	}
 	
-	public boolean hitEntity(ItemStack par1ItemStack, EntityLiving par2EntityLiving, EntityLiving par3EntityLiving)
+	public boolean hitEntity(ItemStack par1ItemStack, EntityLivingBase par2EntityLiving, EntityLivingBase par3EntityLiving)
 	{
 		return false;
 	}
@@ -408,12 +432,7 @@
 		return potionEffect != null;
 	}
 	
-	public boolean itemInteractionForEntity(ItemStack par1ItemStack, EntityLiving par2EntityLiving)
-	{
-		return false;
-	}
-	
-	public boolean onBlockDestroyed(ItemStack par1ItemStack, World par2World, int par3, int par4, int par5, int par6, EntityLiving par7EntityLiving)
+	public boolean onBlockDestroyed(ItemStack par1ItemStack, World par2World, int par3, int par4, int par5, int par6, EntityLivingBase par7EntityLiving)
 	{
 		return false;
 	}
@@ -447,7 +466,7 @@
 	
 	public void registerIcons(IconRegister par1IconRegister)
 	{
-		itemIcon = par1IconRegister.registerIcon(unlocalizedName);
+		itemIcon = par1IconRegister.registerIcon(func_111208_A());
 	}
 	
 	public boolean requiresMultipleRenderPasses()
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemAnvilBlock.java b/RMCClient/minecraft/net/minecraft/src/ItemAnvilBlock.java
index aec9170..f4d470d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemAnvilBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemAnvilBlock.java
@@ -2,9 +2,9 @@
 
 public class ItemAnvilBlock extends ItemMultiTextureTile
 {
-	public ItemAnvilBlock(Block par1Block)
+	public ItemAnvilBlock(Block p_i1826_1_)
 	{
-		super(par1Block.blockID - 256, par1Block, BlockAnvil.statuses);
+		super(p_i1826_1_.blockID - 256, p_i1826_1_, BlockAnvil.statuses);
 	}
 	
 	@Override public int getMetadata(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemAppleGold.java b/RMCClient/minecraft/net/minecraft/src/ItemAppleGold.java
index 8d8713d..49ae305 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemAppleGold.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemAppleGold.java
@@ -4,9 +4,9 @@
 
 public class ItemAppleGold extends ItemFood
 {
-	public ItemAppleGold(int par1, int par2, float par3, boolean par4)
+	public ItemAppleGold(int p_i1870_1_, int p_i1870_2_, float p_i1870_3_, boolean p_i1870_4_)
 	{
-		super(par1, par2, par3, par4);
+		super(p_i1870_1_, p_i1870_2_, p_i1870_3_, p_i1870_4_);
 		setHasSubtypes(true);
 	}
 	
@@ -28,11 +28,15 @@
 	
 	@Override protected void onFoodEaten(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer)
 	{
+		if(!par2World.isRemote)
+		{
+			par3EntityPlayer.addPotionEffect(new PotionEffect(Potion.field_76444_x.id, 2400, 0));
+		}
 		if(par1ItemStack.getItemDamage() > 0)
 		{
 			if(!par2World.isRemote)
 			{
-				par3EntityPlayer.addPotionEffect(new PotionEffect(Potion.regeneration.id, 600, 3));
+				par3EntityPlayer.addPotionEffect(new PotionEffect(Potion.regeneration.id, 600, 4));
 				par3EntityPlayer.addPotionEffect(new PotionEffect(Potion.resistance.id, 6000, 0));
 				par3EntityPlayer.addPotionEffect(new PotionEffect(Potion.fireResistance.id, 6000, 0));
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemArmor.java b/RMCClient/minecraft/net/minecraft/src/ItemArmor.java
index bfec035..44f3232 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemArmor.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemArmor.java
@@ -3,8 +3,8 @@
 public class ItemArmor extends Item
 {
 	private static final int[] maxDamageArray = new int[] { 11, 16, 15, 13 };
-	private static final String[] field_94606_cu = new String[] { "helmetCloth_overlay", "chestplateCloth_overlay", "leggingsCloth_overlay", "bootsCloth_overlay" };
-	public static final String[] field_94603_a = new String[] { "slot_empty_helmet", "slot_empty_chestplate", "slot_empty_leggings", "slot_empty_boots" };
+	private static final String[] field_94606_cu = new String[] { "leather_helmet_overlay", "leather_chestplate_overlay", "leather_leggings_overlay", "leather_boots_overlay" };
+	public static final String[] field_94603_a = new String[] { "empty_armor_slot_helmet", "empty_armor_slot_chestplate", "empty_armor_slot_leggings", "empty_armor_slot_boots" };
 	private static final IBehaviorDispenseItem field_96605_cw = new BehaviorDispenseArmor();
 	public final int armorType;
 	public final int damageReduceAmount;
@@ -13,14 +13,14 @@
 	private Icon field_94605_cw;
 	private Icon field_94604_cx;
 	
-	public ItemArmor(int par1, EnumArmorMaterial par2EnumArmorMaterial, int par3, int par4)
+	public ItemArmor(int p_i1828_1_, EnumArmorMaterial p_i1828_2_, int p_i1828_3_, int p_i1828_4_)
 	{
-		super(par1);
-		material = par2EnumArmorMaterial;
-		armorType = par4;
-		renderIndex = par3;
-		damageReduceAmount = par2EnumArmorMaterial.getDamageReductionAmount(par4);
-		setMaxDamage(par2EnumArmorMaterial.getDurability(par4));
+		super(p_i1828_1_);
+		material = p_i1828_2_;
+		armorType = p_i1828_4_;
+		renderIndex = p_i1828_3_;
+		damageReduceAmount = p_i1828_2_.getDamageReductionAmount(p_i1828_4_);
+		setMaxDamage(p_i1828_2_.getDurability(p_i1828_4_));
 		maxStackSize = 1;
 		setCreativeTab(CreativeTabs.tabCombat);
 		BlockDispenser.dispenseBehaviorRegistry.putObject(this, field_96605_cw);
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemAxe.java b/RMCClient/minecraft/net/minecraft/src/ItemAxe.java
index 863b856..d3b4530 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemAxe.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemAxe.java
@@ -4,9 +4,9 @@
 {
 	private static Block[] blocksEffectiveAgainst = new Block[] { Block.planks, Block.bookShelf, Block.wood, Block.chest, Block.stoneDoubleSlab, Block.stoneSingleSlab, Block.pumpkin, Block.pumpkinLantern };
 	
-	protected ItemAxe(int par1, EnumToolMaterial par2EnumToolMaterial)
+	protected ItemAxe(int p_i1872_1_, EnumToolMaterial p_i1872_2_)
 	{
-		super(par1, 3, par2EnumToolMaterial, blocksEffectiveAgainst);
+		super(p_i1872_1_, 3.0F, p_i1872_2_, blocksEffectiveAgainst);
 	}
 	
 	@Override public float getStrVsBlock(ItemStack par1ItemStack, Block par2Block)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemBed.java b/RMCClient/minecraft/net/minecraft/src/ItemBed.java
index 552d8b7..748a161 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemBed.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemBed.java
@@ -2,9 +2,9 @@
 
 public class ItemBed extends Item
 {
-	public ItemBed(int par1)
+	public ItemBed(int p_i1830_1_)
 	{
-		super(par1);
+		super(p_i1830_1_);
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemBlock.java b/RMCClient/minecraft/net/minecraft/src/ItemBlock.java
index e084bb2..e4680af 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemBlock.java
@@ -7,10 +7,10 @@
 	private int blockID;
 	private Icon field_94588_b;
 	
-	public ItemBlock(int par1)
+	public ItemBlock(int p_i1908_1_)
 	{
-		super(par1);
-		blockID = par1 + 256;
+		super(p_i1908_1_);
+		blockID = p_i1908_1_ + 256;
 	}
 	
 	public boolean canPlaceItemBlockOnSide(World par1World, int par2, int par3, int par4, int par5, EntityPlayer par6EntityPlayer, ItemStack par7ItemStack)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemBlockWithMetadata.java b/RMCClient/minecraft/net/minecraft/src/ItemBlockWithMetadata.java
index d078fa7..3444708 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemBlockWithMetadata.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemBlockWithMetadata.java
@@ -4,10 +4,10 @@
 {
 	private Block theBlock;
 	
-	public ItemBlockWithMetadata(int par1, Block par2Block)
+	public ItemBlockWithMetadata(int p_i1829_1_, Block p_i1829_2_)
 	{
-		super(par1);
-		theBlock = par2Block;
+		super(p_i1829_1_);
+		theBlock = p_i1829_2_;
 		setMaxDamage(0);
 		setHasSubtypes(true);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemBoat.java b/RMCClient/minecraft/net/minecraft/src/ItemBoat.java
index 482dbee..072c34d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemBoat.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemBoat.java
@@ -4,9 +4,9 @@
 
 public class ItemBoat extends Item
 {
-	public ItemBoat(int par1)
+	public ItemBoat(int p_i1831_1_)
 	{
-		super(par1);
+		super(p_i1831_1_);
 		maxStackSize = 1;
 		setCreativeTab(CreativeTabs.tabTransport);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemBook.java b/RMCClient/minecraft/net/minecraft/src/ItemBook.java
index e24b05d..3f1b262 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemBook.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemBook.java
@@ -2,9 +2,9 @@
 
 public class ItemBook extends Item
 {
-	public ItemBook(int par1)
+	public ItemBook(int p_i1832_1_)
 	{
-		super(par1);
+		super(p_i1832_1_);
 	}
 	
 	@Override public int getItemEnchantability()
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemBow.java b/RMCClient/minecraft/net/minecraft/src/ItemBow.java
index 7632fc8..678ee8a 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemBow.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemBow.java
@@ -2,12 +2,12 @@
 
 public class ItemBow extends Item
 {
-	public static final String[] bowPullIconNameArray = new String[] { "bow_pull_0", "bow_pull_1", "bow_pull_2" };
+	public static final String[] bowPullIconNameArray = new String[] { "pulling_0", "pulling_1", "pulling_2" };
 	private Icon[] iconArray;
 	
-	public ItemBow(int par1)
+	public ItemBow(int p_i1834_1_)
 	{
-		super(par1);
+		super(p_i1834_1_);
 		maxStackSize = 1;
 		setMaxDamage(384);
 		setCreativeTab(CreativeTabs.tabCombat);
@@ -97,11 +97,11 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		super.registerIcons(par1IconRegister);
+		itemIcon = par1IconRegister.registerIcon(func_111208_A() + "_standby");
 		iconArray = new Icon[bowPullIconNameArray.length];
 		for(int var2 = 0; var2 < iconArray.length; ++var2)
 		{
-			iconArray[var2] = par1IconRegister.registerIcon(bowPullIconNameArray[var2]);
+			iconArray[var2] = par1IconRegister.registerIcon(func_111208_A() + "_" + bowPullIconNameArray[var2]);
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemBucket.java b/RMCClient/minecraft/net/minecraft/src/ItemBucket.java
index 2e7bc91..cf88c99 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemBucket.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemBucket.java
@@ -4,37 +4,33 @@
 {
 	private int isFull;
 	
-	public ItemBucket(int par1, int par2)
+	public ItemBucket(int p_i1836_1_, int p_i1836_2_)
 	{
-		super(par1);
+		super(p_i1836_1_);
 		maxStackSize = 1;
-		isFull = par2;
+		isFull = p_i1836_2_;
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
 	
 	@Override public ItemStack onItemRightClick(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer)
 	{
-		float var4 = 1.0F;
-		double var5 = par3EntityPlayer.prevPosX + (par3EntityPlayer.posX - par3EntityPlayer.prevPosX) * var4;
-		double var7 = par3EntityPlayer.prevPosY + (par3EntityPlayer.posY - par3EntityPlayer.prevPosY) * var4 + 1.62D - par3EntityPlayer.yOffset;
-		double var9 = par3EntityPlayer.prevPosZ + (par3EntityPlayer.posZ - par3EntityPlayer.prevPosZ) * var4;
-		boolean var11 = isFull == 0;
-		MovingObjectPosition var12 = getMovingObjectPositionFromPlayer(par2World, par3EntityPlayer, var11);
-		if(var12 == null) return par1ItemStack;
+		boolean var4 = isFull == 0;
+		MovingObjectPosition var5 = getMovingObjectPositionFromPlayer(par2World, par3EntityPlayer, var4);
+		if(var5 == null) return par1ItemStack;
 		else
 		{
-			if(var12.typeOfHit == EnumMovingObjectType.TILE)
+			if(var5.typeOfHit == EnumMovingObjectType.TILE)
 			{
-				int var13 = var12.blockX;
-				int var14 = var12.blockY;
-				int var15 = var12.blockZ;
-				if(!par2World.canMineBlock(par3EntityPlayer, var13, var14, var15)) return par1ItemStack;
+				int var6 = var5.blockX;
+				int var7 = var5.blockY;
+				int var8 = var5.blockZ;
+				if(!par2World.canMineBlock(par3EntityPlayer, var6, var7, var8)) return par1ItemStack;
 				if(isFull == 0)
 				{
-					if(!par3EntityPlayer.canPlayerEdit(var13, var14, var15, var12.sideHit, par1ItemStack)) return par1ItemStack;
-					if(par2World.getBlockMaterial(var13, var14, var15) == Material.water && par2World.getBlockMetadata(var13, var14, var15) == 0)
+					if(!par3EntityPlayer.canPlayerEdit(var6, var7, var8, var5.sideHit, par1ItemStack)) return par1ItemStack;
+					if(par2World.getBlockMaterial(var6, var7, var8) == Material.water && par2World.getBlockMetadata(var6, var7, var8) == 0)
 					{
-						par2World.setBlockToAir(var13, var14, var15);
+						par2World.setBlockToAir(var6, var7, var8);
 						if(par3EntityPlayer.capabilities.isCreativeMode) return par1ItemStack;
 						if(--par1ItemStack.stackSize <= 0) return new ItemStack(Item.bucketWater);
 						if(!par3EntityPlayer.inventory.addItemStackToInventory(new ItemStack(Item.bucketWater)))
@@ -43,9 +39,9 @@
 						}
 						return par1ItemStack;
 					}
-					if(par2World.getBlockMaterial(var13, var14, var15) == Material.lava && par2World.getBlockMetadata(var13, var14, var15) == 0)
+					if(par2World.getBlockMaterial(var6, var7, var8) == Material.lava && par2World.getBlockMetadata(var6, var7, var8) == 0)
 					{
-						par2World.setBlockToAir(var13, var14, var15);
+						par2World.setBlockToAir(var6, var7, var8);
 						if(par3EntityPlayer.capabilities.isCreativeMode) return par1ItemStack;
 						if(--par1ItemStack.stackSize <= 0) return new ItemStack(Item.bucketLava);
 						if(!par3EntityPlayer.inventory.addItemStackToInventory(new ItemStack(Item.bucketLava)))
@@ -57,56 +53,65 @@
 				} else
 				{
 					if(isFull < 0) return new ItemStack(Item.bucketEmpty);
-					if(var12.sideHit == 0)
+					if(var5.sideHit == 0)
 					{
-						--var14;
+						--var7;
 					}
-					if(var12.sideHit == 1)
+					if(var5.sideHit == 1)
 					{
-						++var14;
+						++var7;
 					}
-					if(var12.sideHit == 2)
+					if(var5.sideHit == 2)
 					{
-						--var15;
+						--var8;
 					}
-					if(var12.sideHit == 3)
+					if(var5.sideHit == 3)
 					{
-						++var15;
+						++var8;
 					}
-					if(var12.sideHit == 4)
+					if(var5.sideHit == 4)
 					{
-						--var13;
+						--var6;
 					}
-					if(var12.sideHit == 5)
+					if(var5.sideHit == 5)
 					{
-						++var13;
+						++var6;
 					}
-					if(!par3EntityPlayer.canPlayerEdit(var13, var14, var15, var12.sideHit, par1ItemStack)) return par1ItemStack;
-					if(tryPlaceContainedLiquid(par2World, var5, var7, var9, var13, var14, var15) && !par3EntityPlayer.capabilities.isCreativeMode) return new ItemStack(Item.bucketEmpty);
+					if(!par3EntityPlayer.canPlayerEdit(var6, var7, var8, var5.sideHit, par1ItemStack)) return par1ItemStack;
+					if(tryPlaceContainedLiquid(par2World, var6, var7, var8) && !par3EntityPlayer.capabilities.isCreativeMode) return new ItemStack(Item.bucketEmpty);
 				}
-			} else if(isFull == 0 && var12.entityHit instanceof EntityCow) return new ItemStack(Item.bucketMilk);
+			}
 			return par1ItemStack;
 		}
 	}
 	
-	public boolean tryPlaceContainedLiquid(World par1World, double par2, double par4, double par6, int par8, int par9, int par10)
+	public boolean tryPlaceContainedLiquid(World par1World, int par2, int p_77875_3_, int par4)
 	{
 		if(isFull <= 0) return false;
-		else if(!par1World.isAirBlock(par8, par9, par10) && par1World.getBlockMaterial(par8, par9, par10).isSolid()) return false;
 		else
 		{
-			if(par1World.provider.isHellWorld && isFull == Block.waterMoving.blockID)
+			Material var5 = par1World.getBlockMaterial(par2, p_77875_3_, par4);
+			boolean var6 = !var5.isSolid();
+			if(!par1World.isAirBlock(par2, p_77875_3_, par4) && !var6) return false;
+			else
 			{
-				par1World.playSoundEffect(par2 + 0.5D, par4 + 0.5D, par6 + 0.5D, "random.fizz", 0.5F, 2.6F + (par1World.rand.nextFloat() - par1World.rand.nextFloat()) * 0.8F);
-				for(int var11 = 0; var11 < 8; ++var11)
+				if(par1World.provider.isHellWorld && isFull == Block.waterMoving.blockID)
 				{
-					par1World.spawnParticle("largesmoke", par8 + Math.random(), par9 + Math.random(), par10 + Math.random(), 0.0D, 0.0D, 0.0D);
+					par1World.playSoundEffect(par2 + 0.5F, p_77875_3_ + 0.5F, par4 + 0.5F, "random.fizz", 0.5F, 2.6F + (par1World.rand.nextFloat() - par1World.rand.nextFloat()) * 0.8F);
+					for(int var7 = 0; var7 < 8; ++var7)
+					{
+						par1World.spawnParticle("largesmoke", par2 + Math.random(), p_77875_3_ + Math.random(), par4 + Math.random(), 0.0D, 0.0D, 0.0D);
+					}
+				} else
+				{
+					if(!par1World.isRemote && var6 && !var5.isLiquid())
+					{
+						par1World.destroyBlock(par2, p_77875_3_, par4, true);
+					}
+					par1World.setBlock(par2, p_77875_3_, par4, isFull, 0, 3);
 				}
-			} else
-			{
-				par1World.setBlock(par8, par9, par10, isFull, 0, 3);
+				return true;
 			}
-			return true;
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemBucketMilk.java b/RMCClient/minecraft/net/minecraft/src/ItemBucketMilk.java
index 8e07e3c..bcfbb73 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemBucketMilk.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemBucketMilk.java
@@ -2,9 +2,9 @@
 
 public class ItemBucketMilk extends Item
 {
-	public ItemBucketMilk(int par1)
+	public ItemBucketMilk(int p_i1886_1_)
 	{
-		super(par1);
+		super(p_i1886_1_);
 		setMaxStackSize(1);
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemCarrotOnAStick.java b/RMCClient/minecraft/net/minecraft/src/ItemCarrotOnAStick.java
index e2be8ec..3c98413 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemCarrotOnAStick.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemCarrotOnAStick.java
@@ -2,9 +2,9 @@
 
 public class ItemCarrotOnAStick extends Item
 {
-	public ItemCarrotOnAStick(int par1)
+	public ItemCarrotOnAStick(int p_i1837_1_)
 	{
-		super(par1);
+		super(p_i1837_1_);
 		setCreativeTab(CreativeTabs.tabTransport);
 		setMaxStackSize(1);
 		setMaxDamage(25);
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemCloth.java b/RMCClient/minecraft/net/minecraft/src/ItemCloth.java
index 60dae74..bcb66dc 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemCloth.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemCloth.java
@@ -2,16 +2,16 @@
 
 public class ItemCloth extends ItemBlock
 {
-	public ItemCloth(int par1)
+	public ItemCloth(int p_i1913_1_)
 	{
-		super(par1);
+		super(p_i1913_1_);
 		setMaxDamage(0);
 		setHasSubtypes(true);
 	}
 	
 	@Override public Icon getIconFromDamage(int par1)
 	{
-		return Block.cloth.getIcon(2, BlockCloth.getBlockFromDye(par1));
+		return Block.cloth.getIcon(2, BlockColored.getBlockFromDye(par1));
 	}
 	
 	@Override public int getMetadata(int par1)
@@ -21,6 +21,6 @@
 	
 	@Override public String getUnlocalizedName(ItemStack par1ItemStack)
 	{
-		return super.getUnlocalizedName() + "." + ItemDye.dyeColorNames[BlockCloth.getBlockFromDye(par1ItemStack.getItemDamage())];
+		return super.getUnlocalizedName() + "." + ItemDye.dyeColorNames[BlockColored.getBlockFromDye(par1ItemStack.getItemDamage())];
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemCoal.java b/RMCClient/minecraft/net/minecraft/src/ItemCoal.java
index edab60c..c1b4a50 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemCoal.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemCoal.java
@@ -4,12 +4,19 @@
 
 public class ItemCoal extends Item
 {
-	public ItemCoal(int par1)
+	private Icon field_111220_a;
+	
+	public ItemCoal(int p_i1838_1_)
 	{
-		super(par1);
+		super(p_i1838_1_);
 		setHasSubtypes(true);
 		setMaxDamage(0);
 		setCreativeTab(CreativeTabs.tabMaterials);
+	}
+	
+	@Override public Icon getIconFromDamage(int par1)
+	{
+		return par1 == 1 ? field_111220_a : super.getIconFromDamage(par1);
 	}
 	
 	@Override public void getSubItems(int par1, CreativeTabs par2CreativeTabs, List par3List)
@@ -22,4 +29,10 @@
 	{
 		return par1ItemStack.getItemDamage() == 1 ? "item.charcoal" : "item.coal";
 	}
+	
+	@Override public void registerIcons(IconRegister par1IconRegister)
+	{
+		super.registerIcons(par1IconRegister);
+		field_111220_a = par1IconRegister.registerIcon("charcoal");
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemColored.java b/RMCClient/minecraft/net/minecraft/src/ItemColored.java
index e17ee00..400161f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemColored.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemColored.java
@@ -5,11 +5,11 @@
 	private final Block blockRef;
 	private String[] blockNames;
 	
-	public ItemColored(int par1, boolean par2)
+	public ItemColored(int p_i1839_1_, boolean p_i1839_2_)
 	{
-		super(par1);
+		super(p_i1839_1_);
 		blockRef = Block.blocksList[getBlockID()];
-		if(par2)
+		if(p_i1839_2_)
 		{
 			setMaxDamage(0);
 			setHasSubtypes(true);
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemDoor.java b/RMCClient/minecraft/net/minecraft/src/ItemDoor.java
index e9ec921..7f1c5e8 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemDoor.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemDoor.java
@@ -4,10 +4,10 @@
 {
 	private Material doorMaterial;
 	
-	public ItemDoor(int par1, Material par2Material)
+	public ItemDoor(int p_i1855_1_, Material p_i1855_2_)
 	{
-		super(par1);
-		doorMaterial = par2Material;
+		super(p_i1855_1_);
+		doorMaterial = p_i1855_2_;
 		maxStackSize = 1;
 		setCreativeTab(CreativeTabs.tabRedstone);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemDye.java b/RMCClient/minecraft/net/minecraft/src/ItemDye.java
index 1a3d464..b5cca6a 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemDye.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemDye.java
@@ -5,16 +5,31 @@
 public class ItemDye extends Item
 {
 	public static final String[] dyeColorNames = new String[] { "black", "red", "green", "brown", "blue", "purple", "cyan", "silver", "gray", "pink", "lime", "yellow", "lightBlue", "magenta", "orange", "white" };
-	public static final String[] field_94595_b = new String[] { "dyePowder_black", "dyePowder_red", "dyePowder_green", "dyePowder_brown", "dyePowder_blue", "dyePowder_purple", "dyePowder_cyan", "dyePowder_silver", "dyePowder_gray", "dyePowder_pink", "dyePowder_lime", "dyePowder_yellow", "dyePowder_lightBlue", "dyePowder_magenta", "dyePowder_orange", "dyePowder_white" };
+	public static final String[] field_94595_b = new String[] { "black", "red", "green", "brown", "blue", "purple", "cyan", "silver", "gray", "pink", "lime", "yellow", "light_blue", "magenta", "orange", "white" };
 	public static final int[] dyeColors = new int[] { 1973019, 11743532, 3887386, 5320730, 2437522, 8073150, 2651799, 11250603, 4408131, 14188952, 4312372, 14602026, 6719955, 12801229, 15435844, 15790320 };
 	private Icon[] field_94594_d;
 	
-	public ItemDye(int par1)
+	public ItemDye(int p_i1856_1_)
 	{
-		super(par1);
+		super(p_i1856_1_);
 		setHasSubtypes(true);
 		setMaxDamage(0);
 		setCreativeTab(CreativeTabs.tabMaterials);
+	}
+	
+	@Override public boolean func_111207_a(ItemStack p_111207_1_, EntityPlayer p_111207_2_, EntityLivingBase p_111207_3_)
+	{
+		if(p_111207_3_ instanceof EntitySheep)
+		{
+			EntitySheep var4 = (EntitySheep) p_111207_3_;
+			int var5 = BlockColored.getBlockFromDye(p_111207_1_.getItemDamage());
+			if(!var4.getSheared() && var4.getFleeceColor() != var5)
+			{
+				var4.setFleeceColor(var5);
+				--p_111207_1_.stackSize;
+			}
+			return true;
+		} else return false;
 	}
 	
 	@Override public Icon getIconFromDamage(int par1)
@@ -35,21 +50,6 @@
 	{
 		int var2 = MathHelper.clamp_int(par1ItemStack.getItemDamage(), 0, 15);
 		return super.getUnlocalizedName() + "." + dyeColorNames[var2];
-	}
-	
-	@Override public boolean itemInteractionForEntity(ItemStack par1ItemStack, EntityLiving par2EntityLiving)
-	{
-		if(par2EntityLiving instanceof EntitySheep)
-		{
-			EntitySheep var3 = (EntitySheep) par2EntityLiving;
-			int var4 = BlockCloth.getBlockFromDye(par1ItemStack.getItemDamage());
-			if(!var3.getSheared() && var3.getFleeceColor() != var4)
-			{
-				var3.setFleeceColor(var4);
-				--par1ItemStack.stackSize;
-			}
-			return true;
-		} else return false;
 	}
 	
 	@Override public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10)
@@ -112,7 +112,7 @@
 		field_94594_d = new Icon[field_94595_b.length];
 		for(int var2 = 0; var2 < field_94595_b.length; ++var2)
 		{
-			field_94594_d[var2] = par1IconRegister.registerIcon(field_94595_b[var2]);
+			field_94594_d[var2] = par1IconRegister.registerIcon(func_111208_A() + "_" + field_94595_b[var2]);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemEditableBook.java b/RMCClient/minecraft/net/minecraft/src/ItemEditableBook.java
index 1604991..e61ce80 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemEditableBook.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemEditableBook.java
@@ -4,9 +4,9 @@
 
 public class ItemEditableBook extends Item
 {
-	public ItemEditableBook(int par1)
+	public ItemEditableBook(int p_i1915_1_)
 	{
-		super(par1);
+		super(p_i1915_1_);
 		setMaxStackSize(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemEgg.java b/RMCClient/minecraft/net/minecraft/src/ItemEgg.java
index 70c0dfb..897a3ba 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemEgg.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemEgg.java
@@ -2,9 +2,9 @@
 
 public class ItemEgg extends Item
 {
-	public ItemEgg(int par1)
+	public ItemEgg(int p_i1857_1_)
 	{
-		super(par1);
+		super(p_i1857_1_);
 		maxStackSize = 16;
 		setCreativeTab(CreativeTabs.tabMaterials);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemEmptyMap.java b/RMCClient/minecraft/net/minecraft/src/ItemEmptyMap.java
index 6c128f5..9feff6d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemEmptyMap.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemEmptyMap.java
@@ -2,9 +2,9 @@
 
 public class ItemEmptyMap extends ItemMapBase
 {
-	protected ItemEmptyMap(int par1)
+	protected ItemEmptyMap(int p_i1858_1_)
 	{
-		super(par1);
+		super(p_i1858_1_);
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemEnchantedBook.java b/RMCClient/minecraft/net/minecraft/src/ItemEnchantedBook.java
index ba8c5d3..b752c68 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemEnchantedBook.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemEnchantedBook.java
@@ -5,9 +5,9 @@
 
 public class ItemEnchantedBook extends Item
 {
-	public ItemEnchantedBook(int par1)
+	public ItemEnchantedBook(int p_i1859_1_)
 	{
-		super(par1);
+		super(p_i1859_1_);
 	}
 	
 	@Override public void addInformation(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, List par3List, boolean par4)
@@ -26,15 +26,6 @@
 				}
 			}
 		}
-	}
-	
-	public ItemStack func_92109_a(Random par1Random)
-	{
-		Enchantment var2 = Enchantment.field_92090_c[par1Random.nextInt(Enchantment.field_92090_c.length)];
-		ItemStack var3 = new ItemStack(itemID, 1, 0);
-		int var4 = MathHelper.getRandomIntegerInRange(par1Random, var2.getMinLevel(), var2.getMaxLevel());
-		func_92115_a(var3, new EnchantmentData(var2, var4));
-		return var3;
 	}
 	
 	public NBTTagList func_92110_g(ItemStack par1ItemStack)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemEnderEye.java b/RMCClient/minecraft/net/minecraft/src/ItemEnderEye.java
index 4edf267..05b0709 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemEnderEye.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemEnderEye.java
@@ -2,9 +2,9 @@
 
 public class ItemEnderEye extends Item
 {
-	public ItemEnderEye(int par1)
+	public ItemEnderEye(int p_i1860_1_)
 	{
-		super(par1);
+		super(p_i1860_1_);
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
 	
@@ -45,6 +45,7 @@
 			else
 			{
 				par3World.setBlockMetadataWithNotify(par4, par5, par6, var12 + 4, 2);
+				par3World.func_96440_m(par4, par5, par6, Block.endPortalFrame.blockID);
 				--par1ItemStack.stackSize;
 				int var13;
 				for(var13 = 0; var13 < 16; ++var13)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemEnderPearl.java b/RMCClient/minecraft/net/minecraft/src/ItemEnderPearl.java
index 663263b..1afe99c 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemEnderPearl.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemEnderPearl.java
@@ -2,9 +2,9 @@
 
 public class ItemEnderPearl extends Item
 {
-	public ItemEnderPearl(int par1)
+	public ItemEnderPearl(int p_i1861_1_)
 	{
-		super(par1);
+		super(p_i1861_1_);
 		maxStackSize = 16;
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
@@ -12,7 +12,6 @@
 	@Override public ItemStack onItemRightClick(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer)
 	{
 		if(par3EntityPlayer.capabilities.isCreativeMode) return par1ItemStack;
-		else if(par3EntityPlayer.ridingEntity != null) return par1ItemStack;
 		else
 		{
 			--par1ItemStack.stackSize;
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemExpBottle.java b/RMCClient/minecraft/net/minecraft/src/ItemExpBottle.java
index 8b0c8e0..59e1765 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemExpBottle.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemExpBottle.java
@@ -2,9 +2,9 @@
 
 public class ItemExpBottle extends Item
 {
-	public ItemExpBottle(int par1)
+	public ItemExpBottle(int p_i1862_1_)
 	{
-		super(par1);
+		super(p_i1862_1_);
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemFireball.java b/RMCClient/minecraft/net/minecraft/src/ItemFireball.java
index 8d60264..c14f0c9 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemFireball.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemFireball.java
@@ -2,9 +2,9 @@
 
 public class ItemFireball extends Item
 {
-	public ItemFireball(int par1)
+	public ItemFireball(int p_i1863_1_)
 	{
-		super(par1);
+		super(p_i1863_1_);
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemFirework.java b/RMCClient/minecraft/net/minecraft/src/ItemFirework.java
index bab6c83..4233750 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemFirework.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemFirework.java
@@ -5,9 +5,9 @@
 
 public class ItemFirework extends Item
 {
-	public ItemFirework(int par1)
+	public ItemFirework(int p_i1865_1_)
 	{
-		super(par1);
+		super(p_i1865_1_);
 	}
 	
 	@Override public void addInformation(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, List par3List, boolean par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemFireworkCharge.java b/RMCClient/minecraft/net/minecraft/src/ItemFireworkCharge.java
index b7dc5bb..b50c716 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemFireworkCharge.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemFireworkCharge.java
@@ -6,9 +6,9 @@
 {
 	private Icon theIcon;
 	
-	public ItemFireworkCharge(int par1)
+	public ItemFireworkCharge(int p_i1864_1_)
 	{
-		super(par1);
+		super(p_i1864_1_);
 	}
 	
 	@Override public void addInformation(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, List par3List, boolean par4)
@@ -65,7 +65,7 @@
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		super.registerIcons(par1IconRegister);
-		theIcon = par1IconRegister.registerIcon("fireworksCharge_overlay");
+		theIcon = par1IconRegister.registerIcon(func_111208_A() + "_overlay");
 	}
 	
 	@Override public boolean requiresMultipleRenderPasses()
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemFishingRod.java b/RMCClient/minecraft/net/minecraft/src/ItemFishingRod.java
index 1f8c6ce..d6c6fca 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemFishingRod.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemFishingRod.java
@@ -4,9 +4,9 @@
 {
 	private Icon theIcon;
 	
-	public ItemFishingRod(int par1)
+	public ItemFishingRod(int p_i1866_1_)
 	{
-		super(par1);
+		super(p_i1866_1_);
 		setMaxDamage(64);
 		setMaxStackSize(1);
 		setCreativeTab(CreativeTabs.tabTools);
@@ -43,8 +43,8 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		super.registerIcons(par1IconRegister);
-		theIcon = par1IconRegister.registerIcon("fishingRod_empty");
+		itemIcon = par1IconRegister.registerIcon(func_111208_A() + "_uncast");
+		theIcon = par1IconRegister.registerIcon(func_111208_A() + "_cast");
 	}
 	
 	@Override public boolean shouldRotateAroundWhenRendering()
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemFlintAndSteel.java b/RMCClient/minecraft/net/minecraft/src/ItemFlintAndSteel.java
index 2e1a9aa..64e9975 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemFlintAndSteel.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemFlintAndSteel.java
@@ -2,9 +2,9 @@
 
 public class ItemFlintAndSteel extends Item
 {
-	public ItemFlintAndSteel(int par1)
+	public ItemFlintAndSteel(int p_i1867_1_)
 	{
-		super(par1);
+		super(p_i1867_1_);
 		maxStackSize = 1;
 		setMaxDamage(64);
 		setCreativeTab(CreativeTabs.tabTools);
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemFood.java b/RMCClient/minecraft/net/minecraft/src/ItemFood.java
index ca4996d..72483b2 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemFood.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemFood.java
@@ -12,18 +12,18 @@
 	private int potionAmplifier;
 	private float potionEffectProbability;
 	
-	public ItemFood(int par1, int par2, boolean par3)
+	public ItemFood(int p_i1869_1_, int p_i1869_2_, boolean p_i1869_3_)
 	{
-		this(par1, par2, 0.6F, par3);
+		this(p_i1869_1_, p_i1869_2_, 0.6F, p_i1869_3_);
 	}
 	
-	public ItemFood(int par1, int par2, float par3, boolean par4)
+	public ItemFood(int p_i1868_1_, int p_i1868_2_, float p_i1868_3_, boolean p_i1868_4_)
 	{
-		super(par1);
+		super(p_i1868_1_);
 		itemUseDuration = 32;
-		healAmount = par2;
-		isWolfsFavoriteMeat = par4;
-		saturationModifier = par3;
+		healAmount = p_i1868_2_;
+		isWolfsFavoriteMeat = p_i1868_4_;
+		saturationModifier = p_i1868_3_;
 		setCreativeTab(CreativeTabs.tabFood);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemGlassBottle.java b/RMCClient/minecraft/net/minecraft/src/ItemGlassBottle.java
index af38956..29dce27 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemGlassBottle.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemGlassBottle.java
@@ -2,9 +2,9 @@
 
 public class ItemGlassBottle extends Item
 {
-	public ItemGlassBottle(int par1)
+	public ItemGlassBottle(int p_i1833_1_)
 	{
-		super(par1);
+		super(p_i1833_1_);
 		setCreativeTab(CreativeTabs.tabBrewing);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemHangingEntity.java b/RMCClient/minecraft/net/minecraft/src/ItemHangingEntity.java
index 6d2bafb..a08d197 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemHangingEntity.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemHangingEntity.java
@@ -4,10 +4,10 @@
 {
 	private final Class hangingEntityClass;
 	
-	public ItemHangingEntity(int par1, Class par2Class)
+	public ItemHangingEntity(int p_i1871_1_, Class p_i1871_2_)
 	{
-		super(par1);
-		hangingEntityClass = par2Class;
+		super(p_i1871_1_);
+		hangingEntityClass = p_i1871_2_;
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemHoe.java b/RMCClient/minecraft/net/minecraft/src/ItemHoe.java
index 0f84ffb..fdffc0d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemHoe.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemHoe.java
@@ -4,12 +4,12 @@
 {
 	protected EnumToolMaterial theToolMaterial;
 	
-	public ItemHoe(int par1, EnumToolMaterial par2EnumToolMaterial)
+	public ItemHoe(int p_i1873_1_, EnumToolMaterial p_i1873_2_)
 	{
-		super(par1);
-		theToolMaterial = par2EnumToolMaterial;
+		super(p_i1873_1_);
+		theToolMaterial = p_i1873_2_;
 		maxStackSize = 1;
-		setMaxDamage(par2EnumToolMaterial.getMaxUses());
+		setMaxDamage(p_i1873_2_.getMaxUses());
 		setCreativeTab(CreativeTabs.tabTools);
 	}
 	
@@ -30,8 +30,7 @@
 		{
 			int var11 = par3World.getBlockId(par4, par5, par6);
 			int var12 = par3World.getBlockId(par4, par5 + 1, par6);
-			if((par7 == 0 || var12 != 0 || var11 != Block.grass.blockID) && var11 != Block.dirt.blockID) return false;
-			else
+			if(par7 != 0 && var12 == 0 && (var11 == Block.grass.blockID || var11 == Block.dirt.blockID))
 			{
 				Block var13 = Block.tilledField;
 				par3World.playSoundEffect(par4 + 0.5F, par5 + 0.5F, par6 + 0.5F, var13.stepSound.getStepSound(), (var13.stepSound.getVolume() + 1.0F) / 2.0F, var13.stepSound.getPitch() * 0.8F);
@@ -42,7 +41,7 @@
 					par1ItemStack.damageItem(1, par2EntityPlayer);
 					return true;
 				}
-			}
+			} else return false;
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemInWorldManager.java b/RMCClient/minecraft/net/minecraft/src/ItemInWorldManager.java
index 3e2d22c..016a3e7 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemInWorldManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemInWorldManager.java
@@ -18,11 +18,11 @@
 	private int field_73093_n;
 	private int durabilityRemainingOnBlock;
 	
-	public ItemInWorldManager(World par1World)
+	public ItemInWorldManager(World p_i1524_1_)
 	{
 		gameType = EnumGameType.NOT_SET;
 		durabilityRemainingOnBlock = -1;
-		theWorld = par1World;
+		theWorld = p_i1524_1_;
 	}
 	
 	public boolean activateBlockOrUseItem(EntityPlayer par1EntityPlayer, World par2World, ItemStack par3ItemStack, int par4, int par5, int par6, int par7, float par8, float par9, float par10)
@@ -139,6 +139,7 @@
 	public boolean tryHarvestBlock(int par1, int par2, int par3)
 	{
 		if(gameType.isAdventure() && !thisPlayerMP.canCurrentToolHarvestBlock(par1, par2, par3)) return false;
+		else if(gameType.isCreative() && thisPlayerMP.getHeldItem() != null && thisPlayerMP.getHeldItem().getItem() instanceof ItemSword) return false;
 		else
 		{
 			int var4 = theWorld.getBlockId(par1, par2, par3);
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemLeash.java b/RMCClient/minecraft/net/minecraft/src/ItemLeash.java
new file mode 100644
index 0000000..14c158e
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ItemLeash.java
@@ -0,0 +1,53 @@
+package net.minecraft.src;
+
+import java.util.Iterator;
+import java.util.List;
+
+public class ItemLeash extends Item
+{
+	public ItemLeash(int p_i1884_1_)
+	{
+		super(p_i1884_1_);
+		setCreativeTab(CreativeTabs.tabTools);
+	}
+	
+	@Override public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10)
+	{
+		int var11 = par3World.getBlockId(par4, par5, par6);
+		if(Block.blocksList[var11] != null && Block.blocksList[var11].getRenderType() == 11)
+		{
+			if(par3World.isRemote) return true;
+			else
+			{
+				func_135066_a(par2EntityPlayer, par3World, par4, par5, par6);
+				return true;
+			}
+		} else return false;
+	}
+	
+	public static boolean func_135066_a(EntityPlayer p_135066_0_, World p_135066_1_, int p_135066_2_, int p_135066_3_, int p_135066_4_)
+	{
+		EntityLeashKnot var5 = EntityLeashKnot.func_110130_b(p_135066_1_, p_135066_2_, p_135066_3_, p_135066_4_);
+		boolean var6 = false;
+		double var7 = 7.0D;
+		List var9 = p_135066_1_.getEntitiesWithinAABB(EntityLiving.class, AxisAlignedBB.getAABBPool().getAABB(p_135066_2_ - var7, p_135066_3_ - var7, p_135066_4_ - var7, p_135066_2_ + var7, p_135066_3_ + var7, p_135066_4_ + var7));
+		if(var9 != null)
+		{
+			Iterator var10 = var9.iterator();
+			while(var10.hasNext())
+			{
+				EntityLiving var11 = (EntityLiving) var10.next();
+				if(var11.func_110167_bD() && var11.func_110166_bE() == p_135066_0_)
+				{
+					if(var5 == null)
+					{
+						var5 = EntityLeashKnot.func_110129_a(p_135066_1_, p_135066_2_, p_135066_3_, p_135066_4_);
+					}
+					var11.func_110162_b(var5, true);
+					var6 = true;
+				}
+			}
+		}
+		return var6;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemLeaves.java b/RMCClient/minecraft/net/minecraft/src/ItemLeaves.java
index f0a7bfc..c305bfe 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemLeaves.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemLeaves.java
@@ -2,9 +2,9 @@
 
 public class ItemLeaves extends ItemBlock
 {
-	public ItemLeaves(int par1)
+	public ItemLeaves(int p_i1883_1_)
 	{
-		super(par1);
+		super(p_i1883_1_);
 		setMaxDamage(0);
 		setHasSubtypes(true);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemLilyPad.java b/RMCClient/minecraft/net/minecraft/src/ItemLilyPad.java
index c74fe3f..9d5bd2e 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemLilyPad.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemLilyPad.java
@@ -2,9 +2,9 @@
 
 public class ItemLilyPad extends ItemColored
 {
-	public ItemLilyPad(int par1)
+	public ItemLilyPad(int p_i1911_1_)
 	{
-		super(par1, false);
+		super(p_i1911_1_, false);
 	}
 	
 	@Override public int getColorFromItemStack(ItemStack par1ItemStack, int par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemMap.java b/RMCClient/minecraft/net/minecraft/src/ItemMap.java
index 40db522..9e66f7a 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemMap.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemMap.java
@@ -4,9 +4,9 @@
 
 public class ItemMap extends ItemMapBase
 {
-	protected ItemMap(int par1)
+	protected ItemMap(int p_i1885_1_)
 	{
-		super(par1);
+		super(p_i1885_1_);
 		setHasSubtypes(true);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemMapBase.java b/RMCClient/minecraft/net/minecraft/src/ItemMapBase.java
index 6647923..8529b08 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemMapBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemMapBase.java
@@ -2,9 +2,9 @@
 
 public class ItemMapBase extends Item
 {
-	protected ItemMapBase(int par1)
+	protected ItemMapBase(int p_i1840_1_)
 	{
-		super(par1);
+		super(p_i1840_1_);
 	}
 	
 	public Packet createMapDataPacket(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemMinecart.java b/RMCClient/minecraft/net/minecraft/src/ItemMinecart.java
index 1e6e2e1..e28fec0 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemMinecart.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemMinecart.java
@@ -5,11 +5,11 @@
 	private static final IBehaviorDispenseItem dispenserMinecartBehavior = new BehaviorDispenseMinecart();
 	public int minecartType;
 	
-	public ItemMinecart(int par1, int par2)
+	public ItemMinecart(int p_i1887_1_, int p_i1887_2_)
 	{
-		super(par1);
+		super(p_i1887_1_);
 		maxStackSize = 1;
-		minecartType = par2;
+		minecartType = p_i1887_2_;
 		setCreativeTab(CreativeTabs.tabTransport);
 		BlockDispenser.dispenseBehaviorRegistry.putObject(this, dispenserMinecartBehavior);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemMonsterPlacer.java b/RMCClient/minecraft/net/minecraft/src/ItemMonsterPlacer.java
index 4962b94..cf23c6d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemMonsterPlacer.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemMonsterPlacer.java
@@ -7,9 +7,9 @@
 {
 	private Icon theIcon;
 	
-	public ItemMonsterPlacer(int par1)
+	public ItemMonsterPlacer(int p_i1906_1_)
 	{
-		super(par1);
+		super(p_i1906_1_);
 		setHasSubtypes(true);
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
@@ -46,6 +46,43 @@
 		}
 	}
 	
+	@Override public ItemStack onItemRightClick(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer)
+	{
+		if(par2World.isRemote) return par1ItemStack;
+		else
+		{
+			MovingObjectPosition var4 = getMovingObjectPositionFromPlayer(par2World, par3EntityPlayer, true);
+			if(var4 == null) return par1ItemStack;
+			else
+			{
+				if(var4.typeOfHit == EnumMovingObjectType.TILE)
+				{
+					int var5 = var4.blockX;
+					int var6 = var4.blockY;
+					int var7 = var4.blockZ;
+					if(!par2World.canMineBlock(par3EntityPlayer, var5, var6, var7)) return par1ItemStack;
+					if(!par3EntityPlayer.canPlayerEdit(var5, var6, var7, var4.sideHit, par1ItemStack)) return par1ItemStack;
+					if(par2World.getBlockMaterial(var5, var6, var7) == Material.water)
+					{
+						Entity var8 = spawnCreature(par2World, par1ItemStack.getItemDamage(), var5, var6, var7);
+						if(var8 != null)
+						{
+							if(var8 instanceof EntityLivingBase && par1ItemStack.hasDisplayName())
+							{
+								((EntityLiving) var8).func_94058_c(par1ItemStack.getDisplayName());
+							}
+							if(!par3EntityPlayer.capabilities.isCreativeMode)
+							{
+								--par1ItemStack.stackSize;
+							}
+						}
+					}
+				}
+				return par1ItemStack;
+			}
+		}
+	}
+	
 	@Override public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10)
 	{
 		if(par3World.isRemote) return true;
@@ -63,7 +100,7 @@
 			Entity var14 = spawnCreature(par3World, par1ItemStack.getItemDamage(), par4 + 0.5D, par5 + var12, par6 + 0.5D);
 			if(var14 != null)
 			{
-				if(var14 instanceof EntityLiving && par1ItemStack.hasDisplayName())
+				if(var14 instanceof EntityLivingBase && par1ItemStack.hasDisplayName())
 				{
 					((EntityLiving) var14).func_94058_c(par1ItemStack.getDisplayName());
 				}
@@ -79,7 +116,7 @@
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
 		super.registerIcons(par1IconRegister);
-		theIcon = par1IconRegister.registerIcon("monsterPlacer_overlay");
+		theIcon = par1IconRegister.registerIcon(func_111208_A() + "_overlay");
 	}
 	
 	@Override public boolean requiresMultipleRenderPasses()
@@ -96,13 +133,13 @@
 			for(int var9 = 0; var9 < 1; ++var9)
 			{
 				var8 = EntityList.createEntityByID(par1, par0World);
-				if(var8 != null && var8 instanceof EntityLiving)
+				if(var8 != null && var8 instanceof EntityLivingBase)
 				{
 					EntityLiving var10 = (EntityLiving) var8;
 					var8.setLocationAndAngles(par2, par4, par6, MathHelper.wrapAngleTo180_float(par0World.rand.nextFloat() * 360.0F), 0.0F);
 					var10.rotationYawHead = var10.rotationYaw;
 					var10.renderYawOffset = var10.rotationYaw;
-					var10.initCreature();
+					var10.func_110161_a((EntityLivingData) null);
 					par0World.spawnEntityInWorld(var8);
 					var10.playLivingSound();
 				}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemMultiTextureTile.java b/RMCClient/minecraft/net/minecraft/src/ItemMultiTextureTile.java
index c62422e..4143475 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemMultiTextureTile.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemMultiTextureTile.java
@@ -5,11 +5,11 @@
 	private final Block theBlock;
 	private final String[] field_82804_b;
 	
-	public ItemMultiTextureTile(int par1, Block par2Block, String[] par3ArrayOfStr)
+	public ItemMultiTextureTile(int p_i1888_1_, Block p_i1888_2_, String[] p_i1888_3_)
 	{
-		super(par1);
-		theBlock = par2Block;
-		field_82804_b = par3ArrayOfStr;
+		super(p_i1888_1_);
+		theBlock = p_i1888_2_;
+		field_82804_b = p_i1888_3_;
 		setMaxDamage(0);
 		setHasSubtypes(true);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemNameTag.java b/RMCClient/minecraft/net/minecraft/src/ItemNameTag.java
new file mode 100644
index 0000000..1e0e3cb
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ItemNameTag.java
@@ -0,0 +1,23 @@
+package net.minecraft.src;
+
+public class ItemNameTag extends Item
+{
+	public ItemNameTag(int p_i1889_1_)
+	{
+		super(p_i1889_1_);
+		setCreativeTab(CreativeTabs.tabTools);
+	}
+	
+	@Override public boolean func_111207_a(ItemStack p_111207_1_, EntityPlayer p_111207_2_, EntityLivingBase p_111207_3_)
+	{
+		if(!p_111207_1_.hasDisplayName()) return false;
+		else if(p_111207_3_ instanceof EntityLiving)
+		{
+			EntityLiving var4 = (EntityLiving) p_111207_3_;
+			var4.func_94058_c(p_111207_1_.getDisplayName());
+			var4.func_110163_bv();
+			--p_111207_1_.stackSize;
+			return true;
+		} else return super.func_111207_a(p_111207_1_, p_111207_2_, p_111207_3_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemPickaxe.java b/RMCClient/minecraft/net/minecraft/src/ItemPickaxe.java
index 6ed10ae..996cf0a 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemPickaxe.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemPickaxe.java
@@ -4,9 +4,9 @@
 {
 	private static Block[] blocksEffectiveAgainst = new Block[] { Block.cobblestone, Block.stoneDoubleSlab, Block.stoneSingleSlab, Block.stone, Block.sandStone, Block.cobblestoneMossy, Block.oreIron, Block.blockIron, Block.oreCoal, Block.blockGold, Block.oreGold, Block.oreDiamond, Block.blockDiamond, Block.ice, Block.netherrack, Block.oreLapis, Block.blockLapis, Block.oreRedstone, Block.oreRedstoneGlowing, Block.rail, Block.railDetector, Block.railPowered, Block.railActivator };
 	
-	protected ItemPickaxe(int par1, EnumToolMaterial par2EnumToolMaterial)
+	protected ItemPickaxe(int p_i1890_1_, EnumToolMaterial p_i1890_2_)
 	{
-		super(par1, 2, par2EnumToolMaterial, blocksEffectiveAgainst);
+		super(p_i1890_1_, 2.0F, p_i1890_2_, blocksEffectiveAgainst);
 	}
 	
 	@Override public boolean canHarvestBlock(Block par1Block)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemPiston.java b/RMCClient/minecraft/net/minecraft/src/ItemPiston.java
index a5ebbfe..9168386 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemPiston.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemPiston.java
@@ -2,9 +2,9 @@
 
 public class ItemPiston extends ItemBlock
 {
-	public ItemPiston(int par1)
+	public ItemPiston(int p_i1891_1_)
 	{
-		super(par1);
+		super(p_i1891_1_);
 	}
 	
 	@Override public int getMetadata(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemPotion.java b/RMCClient/minecraft/net/minecraft/src/ItemPotion.java
index befa45f..33aece3 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemPotion.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemPotion.java
@@ -6,6 +6,7 @@
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.Map.Entry;
 
 public class ItemPotion extends Item
 {
@@ -15,9 +16,9 @@
 	private Icon field_94590_d;
 	private Icon field_94592_ct;
 	
-	public ItemPotion(int par1)
+	public ItemPotion(int p_i1892_1_)
 	{
-		super(par1);
+		super(p_i1892_1_);
 		setMaxStackSize(1);
 		setHasSubtypes(true);
 		setMaxDamage(0);
@@ -29,33 +30,76 @@
 		if(par1ItemStack.getItemDamage() != 0)
 		{
 			List var5 = Item.potion.getEffects(par1ItemStack);
+			HashMultimap var6 = HashMultimap.create();
+			Iterator var16;
 			if(var5 != null && !var5.isEmpty())
 			{
-				Iterator var9 = var5.iterator();
-				while(var9.hasNext())
+				var16 = var5.iterator();
+				while(var16.hasNext())
 				{
-					PotionEffect var7 = (PotionEffect) var9.next();
-					String var8 = StatCollector.translateToLocal(var7.getEffectName()).trim();
-					if(var7.getAmplifier() > 0)
+					PotionEffect var8 = (PotionEffect) var16.next();
+					String var9 = StatCollector.translateToLocal(var8.getEffectName()).trim();
+					Potion var10 = Potion.potionTypes[var8.getPotionID()];
+					Map var11 = var10.func_111186_k();
+					if(var11 != null && var11.size() > 0)
 					{
-						var8 = var8 + " " + StatCollector.translateToLocal("potion.potency." + var7.getAmplifier()).trim();
+						Iterator var12 = var11.entrySet().iterator();
+						while(var12.hasNext())
+						{
+							Entry var13 = (Entry) var12.next();
+							AttributeModifier var14 = (AttributeModifier) var13.getValue();
+							AttributeModifier var15 = new AttributeModifier(var14.func_111166_b(), var10.func_111183_a(var8.getAmplifier(), var14), var14.func_111169_c());
+							var6.put(((Attribute) var13.getKey()).func_111108_a(), var15);
+						}
 					}
-					if(var7.getDuration() > 20)
+					if(var8.getAmplifier() > 0)
 					{
-						var8 = var8 + " (" + Potion.getDurationString(var7) + ")";
+						var9 = var9 + " " + StatCollector.translateToLocal("potion.potency." + var8.getAmplifier()).trim();
 					}
-					if(Potion.potionTypes[var7.getPotionID()].isBadEffect())
+					if(var8.getDuration() > 20)
 					{
-						par3List.add(EnumChatFormatting.RED + var8);
+						var9 = var9 + " (" + Potion.getDurationString(var8) + ")";
+					}
+					if(var10.isBadEffect())
+					{
+						par3List.add(EnumChatFormatting.RED + var9);
 					} else
 					{
-						par3List.add(EnumChatFormatting.GRAY + var8);
+						par3List.add(EnumChatFormatting.GRAY + var9);
 					}
 				}
 			} else
 			{
-				String var6 = StatCollector.translateToLocal("potion.empty").trim();
-				par3List.add(EnumChatFormatting.GRAY + var6);
+				String var7 = StatCollector.translateToLocal("potion.empty").trim();
+				par3List.add(EnumChatFormatting.GRAY + var7);
+			}
+			if(!var6.isEmpty())
+			{
+				par3List.add("");
+				par3List.add(EnumChatFormatting.DARK_PURPLE + StatCollector.translateToLocal("potion.effects.whenDrank"));
+				var16 = var6.entries().iterator();
+				while(var16.hasNext())
+				{
+					Entry var17 = (Entry) var16.next();
+					AttributeModifier var18 = (AttributeModifier) var17.getValue();
+					double var19 = var18.func_111164_d();
+					double var20;
+					if(var18.func_111169_c() != 1 && var18.func_111169_c() != 2)
+					{
+						var20 = var18.func_111164_d();
+					} else
+					{
+						var20 = var18.func_111164_d() * 100.0D;
+					}
+					if(var19 > 0.0D)
+					{
+						par3List.add(EnumChatFormatting.BLUE + StatCollector.translateToLocalFormatted("attribute.modifier.plus." + var18.func_111169_c(), new Object[] { ItemStack.field_111284_a.format(var20), StatCollector.translateToLocal("attribute.name." + (String) var17.getKey()) }));
+					} else if(var19 < 0.0D)
+					{
+						var20 *= -1.0D;
+						par3List.add(EnumChatFormatting.RED + StatCollector.translateToLocalFormatted("attribute.modifier.take." + var18.func_111169_c(), new Object[] { ItemStack.field_111284_a.format(var20), StatCollector.translateToLocal("attribute.name." + (String) var17.getKey()) }));
+					}
+				}
 			}
 		}
 	}
@@ -275,9 +319,9 @@
 	
 	@Override public void registerIcons(IconRegister par1IconRegister)
 	{
-		field_94590_d = par1IconRegister.registerIcon("potion");
-		field_94591_c = par1IconRegister.registerIcon("potion_splash");
-		field_94592_ct = par1IconRegister.registerIcon("potion_contents");
+		field_94590_d = par1IconRegister.registerIcon(func_111208_A() + "_" + "bottle_drinkable");
+		field_94591_c = par1IconRegister.registerIcon(func_111208_A() + "_" + "bottle_splash");
+		field_94592_ct = par1IconRegister.registerIcon(func_111208_A() + "_" + "overlay");
 	}
 	
 	@Override public boolean requiresMultipleRenderPasses()
@@ -287,7 +331,7 @@
 	
 	public static Icon func_94589_d(String par0Str)
 	{
-		return par0Str == "potion" ? Item.potion.field_94590_d : par0Str == "potion_splash" ? Item.potion.field_94591_c : par0Str == "potion_contents" ? Item.potion.field_94592_ct : null;
+		return par0Str.equals("bottle_drinkable") ? Item.potion.field_94590_d : par0Str.equals("bottle_splash") ? Item.potion.field_94591_c : par0Str.equals("overlay") ? Item.potion.field_94592_ct : null;
 	}
 	
 	public static boolean isSplash(int par0)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemRecord.java b/RMCClient/minecraft/net/minecraft/src/ItemRecord.java
index e482d2e..ccba636 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemRecord.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemRecord.java
@@ -9,13 +9,13 @@
 	private static final Map records = new HashMap();
 	public final String recordName;
 	
-	protected ItemRecord(int par1, String par2Str)
+	protected ItemRecord(int p_i1894_1_, String p_i1894_2_)
 	{
-		super(par1);
-		recordName = par2Str;
+		super(p_i1894_1_);
+		recordName = p_i1894_2_;
 		maxStackSize = 1;
 		setCreativeTab(CreativeTabs.tabMisc);
-		records.put(par2Str, this);
+		records.put(p_i1894_2_, this);
 	}
 	
 	@Override public void addInformation(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, List par3List, boolean par4)
@@ -51,11 +51,6 @@
 				return true;
 			}
 		} else return false;
-	}
-	
-	@Override public void registerIcons(IconRegister par1IconRegister)
-	{
-		itemIcon = par1IconRegister.registerIcon("record_" + recordName);
 	}
 	
 	public static ItemRecord getRecord(String par0Str)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemRedstone.java b/RMCClient/minecraft/net/minecraft/src/ItemRedstone.java
index b0683fb..042cda6 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemRedstone.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemRedstone.java
@@ -2,9 +2,9 @@
 
 public class ItemRedstone extends Item
 {
-	public ItemRedstone(int par1)
+	public ItemRedstone(int p_i1895_1_)
 	{
-		super(par1);
+		super(p_i1895_1_);
 		setCreativeTab(CreativeTabs.tabRedstone);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemReed.java b/RMCClient/minecraft/net/minecraft/src/ItemReed.java
index 5751093..3280e64 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemReed.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemReed.java
@@ -4,10 +4,10 @@
 {
 	private int spawnID;
 	
-	public ItemReed(int par1, Block par2Block)
+	public ItemReed(int p_i1909_1_, Block p_i1909_2_)
 	{
-		super(par1);
-		spawnID = par2Block.blockID;
+		super(p_i1909_1_);
+		spawnID = p_i1909_2_.blockID;
 	}
 	
 	@Override public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemRenderer.java b/RMCClient/minecraft/net/minecraft/src/ItemRenderer.java
index 4c0d9e1..06336b3 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemRenderer.java
@@ -7,18 +7,21 @@
 
 public class ItemRenderer
 {
+	private static final ResourceLocation field_110930_b = new ResourceLocation("textures/misc/enchanted_item_glint.png");
+	private static final ResourceLocation field_110931_c = new ResourceLocation("textures/map/map_background.png");
+	private static final ResourceLocation field_110929_d = new ResourceLocation("textures/misc/underwater.png");
 	private Minecraft mc;
-	private ItemStack itemToRender = null;
-	private float equippedProgress = 0.0F;
-	private float prevEquippedProgress = 0.0F;
+	private ItemStack itemToRender;
+	private float equippedProgress;
+	private float prevEquippedProgress;
 	private RenderBlocks renderBlocksInstance = new RenderBlocks();
 	public final MapItemRenderer mapItemRenderer;
 	private int equippedItemSlot = -1;
 	
-	public ItemRenderer(Minecraft par1Minecraft)
+	public ItemRenderer(Minecraft p_i1247_1_)
 	{
-		mc = par1Minecraft;
-		mapItemRenderer = new MapItemRenderer(par1Minecraft.fontRenderer, par1Minecraft.gameSettings, par1Minecraft.renderEngine);
+		mc = p_i1247_1_;
+		mapItemRenderer = new MapItemRenderer(p_i1247_1_.gameSettings, p_i1247_1_.func_110434_K());
 	}
 	
 	private void renderFireInFirstPerson(float par1)
@@ -32,6 +35,7 @@
 		{
 			GL11.glPushMatrix();
 			Icon var5 = Block.fire.func_94438_c(1);
+			mc.func_110434_K().func_110577_a(TextureMap.field_110575_b);
 			float var6 = var5.getMinU();
 			float var7 = var5.getMaxU();
 			float var8 = var5.getMinV();
@@ -57,6 +61,7 @@
 	
 	private void renderInsideOfBlock(float par1, Icon par2Icon)
 	{
+		mc.func_110434_K().func_110577_a(TextureMap.field_110575_b);
 		Tessellator var3 = Tessellator.instance;
 		float var4 = 0.1F;
 		GL11.glColor4f(var4, var4, var4, 0.5F);
@@ -80,67 +85,62 @@
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 	}
 	
-	public void renderItem(EntityLiving par1EntityLiving, ItemStack par2ItemStack, int par3)
+	public void renderItem(EntityLivingBase par1EntityLiving, ItemStack par2ItemStack, int par3)
 	{
 		GL11.glPushMatrix();
-		if(par2ItemStack.getItemSpriteNumber() == 0 && Block.blocksList[par2ItemStack.itemID] != null && RenderBlocks.renderItemIn3d(Block.blocksList[par2ItemStack.itemID].getRenderType()))
+		TextureManager var4 = mc.func_110434_K();
+		if(par2ItemStack.getItemSpriteNumber() == 0 && par2ItemStack.itemID < Block.blocksList.length && Block.blocksList[par2ItemStack.itemID] != null && RenderBlocks.renderItemIn3d(Block.blocksList[par2ItemStack.itemID].getRenderType()))
 		{
-			mc.renderEngine.bindTexture("/terrain.png");
+			var4.func_110577_a(var4.func_130087_a(0));
 			renderBlocksInstance.renderBlockAsItem(Block.blocksList[par2ItemStack.itemID], par2ItemStack.getItemDamage(), 1.0F);
 		} else
 		{
-			Icon var4 = par1EntityLiving.getItemIcon(par2ItemStack, par3);
-			if(var4 == null)
+			Icon var5 = par1EntityLiving.getItemIcon(par2ItemStack, par3);
+			if(var5 == null)
 			{
 				GL11.glPopMatrix();
 				return;
 			}
-			if(par2ItemStack.getItemSpriteNumber() == 0)
-			{
-				mc.renderEngine.bindTexture("/terrain.png");
-			} else
-			{
-				mc.renderEngine.bindTexture("/gui/items.png");
-			}
-			Tessellator var5 = Tessellator.instance;
-			float var6 = var4.getMinU();
-			float var7 = var4.getMaxU();
-			float var8 = var4.getMinV();
-			float var9 = var4.getMaxV();
-			float var10 = 0.0F;
-			float var11 = 0.3F;
+			var4.func_110577_a(var4.func_130087_a(par2ItemStack.getItemSpriteNumber()));
+			Tessellator var6 = Tessellator.instance;
+			float var7 = var5.getMinU();
+			float var8 = var5.getMaxU();
+			float var9 = var5.getMinV();
+			float var10 = var5.getMaxV();
+			float var11 = 0.0F;
+			float var12 = 0.3F;
 			GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-			GL11.glTranslatef(-var10, -var11, 0.0F);
-			float var12 = 1.5F;
-			GL11.glScalef(var12, var12, var12);
+			GL11.glTranslatef(-var11, -var12, 0.0F);
+			float var13 = 1.5F;
+			GL11.glScalef(var13, var13, var13);
 			GL11.glRotatef(50.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glRotatef(335.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glTranslatef(-0.9375F, -0.0625F, 0.0F);
-			renderItemIn2D(var5, var7, var8, var6, var9, var4.getSheetWidth(), var4.getSheetHeight(), 0.0625F);
-			if(par2ItemStack != null && par2ItemStack.hasEffect() && par3 == 0)
+			renderItemIn2D(var6, var8, var9, var7, var10, var5.getOriginX(), var5.getOriginY(), 0.0625F);
+			if(par2ItemStack.hasEffect() && par3 == 0)
 			{
 				GL11.glDepthFunc(GL11.GL_EQUAL);
 				GL11.glDisable(GL11.GL_LIGHTING);
-				mc.renderEngine.bindTexture("%blur%/misc/glint.png");
+				var4.func_110577_a(field_110930_b);
 				GL11.glEnable(GL11.GL_BLEND);
 				GL11.glBlendFunc(GL11.GL_SRC_COLOR, GL11.GL_ONE);
-				float var13 = 0.76F;
-				GL11.glColor4f(0.5F * var13, 0.25F * var13, 0.8F * var13, 1.0F);
+				float var14 = 0.76F;
+				GL11.glColor4f(0.5F * var14, 0.25F * var14, 0.8F * var14, 1.0F);
 				GL11.glMatrixMode(GL11.GL_TEXTURE);
 				GL11.glPushMatrix();
-				float var14 = 0.125F;
-				GL11.glScalef(var14, var14, var14);
-				float var15 = Minecraft.getSystemTime() % 3000L / 3000.0F * 8.0F;
-				GL11.glTranslatef(var15, 0.0F, 0.0F);
+				float var15 = 0.125F;
+				GL11.glScalef(var15, var15, var15);
+				float var16 = Minecraft.getSystemTime() % 3000L / 3000.0F * 8.0F;
+				GL11.glTranslatef(var16, 0.0F, 0.0F);
 				GL11.glRotatef(-50.0F, 0.0F, 0.0F, 1.0F);
-				renderItemIn2D(var5, 0.0F, 0.0F, 1.0F, 1.0F, 256, 256, 0.0625F);
+				renderItemIn2D(var6, 0.0F, 0.0F, 1.0F, 1.0F, 256, 256, 0.0625F);
 				GL11.glPopMatrix();
 				GL11.glPushMatrix();
-				GL11.glScalef(var14, var14, var14);
-				var15 = Minecraft.getSystemTime() % 4873L / 4873.0F * 8.0F;
-				GL11.glTranslatef(-var15, 0.0F, 0.0F);
+				GL11.glScalef(var15, var15, var15);
+				var16 = Minecraft.getSystemTime() % 4873L / 4873.0F * 8.0F;
+				GL11.glTranslatef(-var16, 0.0F, 0.0F);
 				GL11.glRotatef(10.0F, 0.0F, 0.0F, 1.0F);
-				renderItemIn2D(var5, 0.0F, 0.0F, 1.0F, 1.0F, 256, 256, 0.0625F);
+				renderItemIn2D(var6, 0.0F, 0.0F, 1.0F, 1.0F, 256, 256, 0.0625F);
 				GL11.glPopMatrix();
 				GL11.glMatrixMode(GL11.GL_MODELVIEW);
 				GL11.glDisable(GL11.GL_BLEND);
@@ -162,51 +162,47 @@
 		GL11.glRotatef(var3.prevRotationYaw + (var3.rotationYaw - var3.prevRotationYaw) * par1, 0.0F, 1.0F, 0.0F);
 		RenderHelper.enableStandardItemLighting();
 		GL11.glPopMatrix();
-		float var6;
-		float var7;
-		if(var3 instanceof EntityPlayerSP)
-		{
-			EntityPlayerSP var5 = var3;
-			var6 = var5.prevRenderArmPitch + (var5.renderArmPitch - var5.prevRenderArmPitch) * par1;
-			var7 = var5.prevRenderArmYaw + (var5.renderArmYaw - var5.prevRenderArmYaw) * par1;
-			GL11.glRotatef((var3.rotationPitch - var6) * 0.1F, 1.0F, 0.0F, 0.0F);
-			GL11.glRotatef((var3.rotationYaw - var7) * 0.1F, 0.0F, 1.0F, 0.0F);
-		}
-		ItemStack var17 = itemToRender;
-		var6 = mc.theWorld.getLightBrightness(MathHelper.floor_double(var3.posX), MathHelper.floor_double(var3.posY), MathHelper.floor_double(var3.posZ));
-		var6 = 1.0F;
-		int var18 = mc.theWorld.getLightBrightnessForSkyBlocks(MathHelper.floor_double(var3.posX), MathHelper.floor_double(var3.posY), MathHelper.floor_double(var3.posZ), 0);
-		int var8 = var18 % 65536;
-		int var9 = var18 / 65536;
-		OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, var8 / 1.0F, var9 / 1.0F);
+		EntityPlayerSP var5 = var3;
+		float var6 = var5.prevRenderArmPitch + (var5.renderArmPitch - var5.prevRenderArmPitch) * par1;
+		float var7 = var5.prevRenderArmYaw + (var5.renderArmYaw - var5.prevRenderArmYaw) * par1;
+		GL11.glRotatef((var3.rotationPitch - var6) * 0.1F, 1.0F, 0.0F, 0.0F);
+		GL11.glRotatef((var3.rotationYaw - var7) * 0.1F, 0.0F, 1.0F, 0.0F);
+		ItemStack var8 = itemToRender;
+		float var9 = mc.theWorld.getLightBrightness(MathHelper.floor_double(var3.posX), MathHelper.floor_double(var3.posY), MathHelper.floor_double(var3.posZ));
+		var9 = 1.0F;
+		int var10 = mc.theWorld.getLightBrightnessForSkyBlocks(MathHelper.floor_double(var3.posX), MathHelper.floor_double(var3.posY), MathHelper.floor_double(var3.posZ), 0);
+		int var11 = var10 % 65536;
+		int var12 = var10 / 65536;
+		OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, var11 / 1.0F, var12 / 1.0F);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		float var10;
-		float var21;
+		float var13;
 		float var20;
-		if(var17 != null)
+		float var22;
+		if(var8 != null)
 		{
-			var18 = Item.itemsList[var17.itemID].getColorFromItemStack(var17, 0);
-			var20 = (var18 >> 16 & 255) / 255.0F;
-			var21 = (var18 >> 8 & 255) / 255.0F;
-			var10 = (var18 & 255) / 255.0F;
-			GL11.glColor4f(var6 * var20, var6 * var21, var6 * var10, 1.0F);
+			var10 = Item.itemsList[var8.itemID].getColorFromItemStack(var8, 0);
+			var20 = (var10 >> 16 & 255) / 255.0F;
+			var22 = (var10 >> 8 & 255) / 255.0F;
+			var13 = (var10 & 255) / 255.0F;
+			GL11.glColor4f(var9 * var20, var9 * var22, var9 * var13, 1.0F);
 		} else
 		{
-			GL11.glColor4f(var6, var6, var6, 1.0F);
+			GL11.glColor4f(var9, var9, var9, 1.0F);
 		}
-		float var11;
-		float var12;
-		float var13;
-		Render var24;
+		float var14;
+		float var15;
+		float var16;
+		float var21;
+		Render var27;
 		RenderPlayer var26;
-		if(var17 != null && var17.itemID == Item.map.itemID)
+		if(var8 != null && var8.itemID == Item.map.itemID)
 		{
 			GL11.glPushMatrix();
-			var7 = 0.8F;
+			var21 = 0.8F;
 			var20 = var3.getSwingProgress(par1);
-			var21 = MathHelper.sin(var20 * (float) Math.PI);
-			var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
-			GL11.glTranslatef(-var10 * 0.4F, MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI * 2.0F) * 0.2F, -var21 * 0.2F);
+			var22 = MathHelper.sin(var20 * (float) Math.PI);
+			var13 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
+			GL11.glTranslatef(-var13 * 0.4F, MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI * 2.0F) * 0.2F, -var22 * 0.2F);
 			var20 = 1.0F - var4 / 45.0F + 0.1F;
 			if(var20 < 0.0F)
 			{
@@ -217,182 +213,180 @@
 				var20 = 1.0F;
 			}
 			var20 = -MathHelper.cos(var20 * (float) Math.PI) * 0.5F + 0.5F;
-			GL11.glTranslatef(0.0F, 0.0F * var7 - (1.0F - var2) * 1.2F - var20 * 0.5F + 0.04F, -0.9F * var7);
+			GL11.glTranslatef(0.0F, 0.0F * var21 - (1.0F - var2) * 1.2F - var20 * 0.5F + 0.04F, -0.9F * var21);
 			GL11.glRotatef(90.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glRotatef(var20 * -85.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, mc.renderEngine.getTextureForDownloadableImage(mc.thePlayer.skinUrl, mc.thePlayer.getTexture()));
-			mc.renderEngine.resetBoundTexture();
-			for(var9 = 0; var9 < 2; ++var9)
+			mc.func_110434_K().func_110577_a(var3.func_110306_p());
+			for(var12 = 0; var12 < 2; ++var12)
 			{
-				int var22 = var9 * 2 - 1;
+				int var24 = var12 * 2 - 1;
 				GL11.glPushMatrix();
-				GL11.glTranslatef(-0.0F, -0.6F, 1.1F * var22);
-				GL11.glRotatef(-45 * var22, 1.0F, 0.0F, 0.0F);
+				GL11.glTranslatef(-0.0F, -0.6F, 1.1F * var24);
+				GL11.glRotatef(-45 * var24, 1.0F, 0.0F, 0.0F);
 				GL11.glRotatef(-90.0F, 0.0F, 0.0F, 1.0F);
 				GL11.glRotatef(59.0F, 0.0F, 0.0F, 1.0F);
-				GL11.glRotatef(-65 * var22, 0.0F, 1.0F, 0.0F);
-				var24 = RenderManager.instance.getEntityRenderObject(mc.thePlayer);
-				var26 = (RenderPlayer) var24;
-				var13 = 1.0F;
-				GL11.glScalef(var13, var13, var13);
+				GL11.glRotatef(-65 * var24, 0.0F, 1.0F, 0.0F);
+				var27 = RenderManager.instance.getEntityRenderObject(mc.thePlayer);
+				var26 = (RenderPlayer) var27;
+				var16 = 1.0F;
+				GL11.glScalef(var16, var16, var16);
 				var26.renderFirstPersonArm(mc.thePlayer);
 				GL11.glPopMatrix();
 			}
-			var21 = var3.getSwingProgress(par1);
-			var10 = MathHelper.sin(var21 * var21 * (float) Math.PI);
-			var11 = MathHelper.sin(MathHelper.sqrt_float(var21) * (float) Math.PI);
-			GL11.glRotatef(-var10 * 20.0F, 0.0F, 1.0F, 0.0F);
-			GL11.glRotatef(-var11 * 20.0F, 0.0F, 0.0F, 1.0F);
-			GL11.glRotatef(-var11 * 80.0F, 1.0F, 0.0F, 0.0F);
-			var12 = 0.38F;
-			GL11.glScalef(var12, var12, var12);
+			var22 = var3.getSwingProgress(par1);
+			var13 = MathHelper.sin(var22 * var22 * (float) Math.PI);
+			var14 = MathHelper.sin(MathHelper.sqrt_float(var22) * (float) Math.PI);
+			GL11.glRotatef(-var13 * 20.0F, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(-var14 * 20.0F, 0.0F, 0.0F, 1.0F);
+			GL11.glRotatef(-var14 * 80.0F, 1.0F, 0.0F, 0.0F);
+			var15 = 0.38F;
+			GL11.glScalef(var15, var15, var15);
 			GL11.glRotatef(90.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glTranslatef(-1.0F, -1.0F, 0.0F);
-			var13 = 0.015625F;
-			GL11.glScalef(var13, var13, var13);
-			mc.renderEngine.bindTexture("/misc/mapbg.png");
-			Tessellator var28 = Tessellator.instance;
+			var16 = 0.015625F;
+			GL11.glScalef(var16, var16, var16);
+			mc.func_110434_K().func_110577_a(field_110931_c);
+			Tessellator var30 = Tessellator.instance;
 			GL11.glNormal3f(0.0F, 0.0F, -1.0F);
-			var28.startDrawingQuads();
-			byte var27 = 7;
-			var28.addVertexWithUV(0 - var27, 128 + var27, 0.0D, 0.0D, 1.0D);
-			var28.addVertexWithUV(128 + var27, 128 + var27, 0.0D, 1.0D, 1.0D);
-			var28.addVertexWithUV(128 + var27, 0 - var27, 0.0D, 1.0D, 0.0D);
-			var28.addVertexWithUV(0 - var27, 0 - var27, 0.0D, 0.0D, 0.0D);
-			var28.draw();
-			MapData var16 = Item.map.getMapData(var17, mc.theWorld);
-			if(var16 != null)
+			var30.startDrawingQuads();
+			byte var29 = 7;
+			var30.addVertexWithUV(0 - var29, 128 + var29, 0.0D, 0.0D, 1.0D);
+			var30.addVertexWithUV(128 + var29, 128 + var29, 0.0D, 1.0D, 1.0D);
+			var30.addVertexWithUV(128 + var29, 0 - var29, 0.0D, 1.0D, 0.0D);
+			var30.addVertexWithUV(0 - var29, 0 - var29, 0.0D, 0.0D, 0.0D);
+			var30.draw();
+			MapData var19 = Item.map.getMapData(var8, mc.theWorld);
+			if(var19 != null)
 			{
-				mapItemRenderer.renderMap(mc.thePlayer, mc.renderEngine, var16);
+				mapItemRenderer.renderMap(mc.thePlayer, mc.func_110434_K(), var19);
 			}
 			GL11.glPopMatrix();
-		} else if(var17 != null)
+		} else if(var8 != null)
 		{
 			GL11.glPushMatrix();
-			var7 = 0.8F;
+			var21 = 0.8F;
 			if(var3.getItemInUseCount() > 0)
 			{
-				EnumAction var19 = var17.getItemUseAction();
-				if(var19 == EnumAction.eat || var19 == EnumAction.drink)
+				EnumAction var23 = var8.getItemUseAction();
+				if(var23 == EnumAction.eat || var23 == EnumAction.drink)
 				{
-					var21 = var3.getItemInUseCount() - par1 + 1.0F;
-					var10 = 1.0F - var21 / var17.getMaxItemUseDuration();
-					var11 = 1.0F - var10;
-					var11 = var11 * var11 * var11;
-					var11 = var11 * var11 * var11;
-					var11 = var11 * var11 * var11;
-					var12 = 1.0F - var11;
-					GL11.glTranslatef(0.0F, MathHelper.abs(MathHelper.cos(var21 / 4.0F * (float) Math.PI) * 0.1F) * (var10 > 0.2D ? 1 : 0), 0.0F);
-					GL11.glTranslatef(var12 * 0.6F, -var12 * 0.5F, 0.0F);
-					GL11.glRotatef(var12 * 90.0F, 0.0F, 1.0F, 0.0F);
-					GL11.glRotatef(var12 * 10.0F, 1.0F, 0.0F, 0.0F);
-					GL11.glRotatef(var12 * 30.0F, 0.0F, 0.0F, 1.0F);
+					var22 = var3.getItemInUseCount() - par1 + 1.0F;
+					var13 = 1.0F - var22 / var8.getMaxItemUseDuration();
+					var14 = 1.0F - var13;
+					var14 = var14 * var14 * var14;
+					var14 = var14 * var14 * var14;
+					var14 = var14 * var14 * var14;
+					var15 = 1.0F - var14;
+					GL11.glTranslatef(0.0F, MathHelper.abs(MathHelper.cos(var22 / 4.0F * (float) Math.PI) * 0.1F) * (var13 > 0.2D ? 1 : 0), 0.0F);
+					GL11.glTranslatef(var15 * 0.6F, -var15 * 0.5F, 0.0F);
+					GL11.glRotatef(var15 * 90.0F, 0.0F, 1.0F, 0.0F);
+					GL11.glRotatef(var15 * 10.0F, 1.0F, 0.0F, 0.0F);
+					GL11.glRotatef(var15 * 30.0F, 0.0F, 0.0F, 1.0F);
 				}
 			} else
 			{
 				var20 = var3.getSwingProgress(par1);
-				var21 = MathHelper.sin(var20 * (float) Math.PI);
-				var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
-				GL11.glTranslatef(-var10 * 0.4F, MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI * 2.0F) * 0.2F, -var21 * 0.2F);
+				var22 = MathHelper.sin(var20 * (float) Math.PI);
+				var13 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
+				GL11.glTranslatef(-var13 * 0.4F, MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI * 2.0F) * 0.2F, -var22 * 0.2F);
 			}
-			GL11.glTranslatef(0.7F * var7, -0.65F * var7 - (1.0F - var2) * 0.6F, -0.9F * var7);
+			GL11.glTranslatef(0.7F * var21, -0.65F * var21 - (1.0F - var2) * 0.6F, -0.9F * var21);
 			GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 			var20 = var3.getSwingProgress(par1);
-			var21 = MathHelper.sin(var20 * var20 * (float) Math.PI);
-			var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
-			GL11.glRotatef(-var21 * 20.0F, 0.0F, 1.0F, 0.0F);
-			GL11.glRotatef(-var10 * 20.0F, 0.0F, 0.0F, 1.0F);
-			GL11.glRotatef(-var10 * 80.0F, 1.0F, 0.0F, 0.0F);
-			var11 = 0.4F;
-			GL11.glScalef(var11, var11, var11);
-			float var14;
-			float var15;
+			var22 = MathHelper.sin(var20 * var20 * (float) Math.PI);
+			var13 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
+			GL11.glRotatef(-var22 * 20.0F, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(-var13 * 20.0F, 0.0F, 0.0F, 1.0F);
+			GL11.glRotatef(-var13 * 80.0F, 1.0F, 0.0F, 0.0F);
+			var14 = 0.4F;
+			GL11.glScalef(var14, var14, var14);
+			float var17;
+			float var18;
 			if(var3.getItemInUseCount() > 0)
 			{
-				EnumAction var23 = var17.getItemUseAction();
-				if(var23 == EnumAction.block)
+				EnumAction var25 = var8.getItemUseAction();
+				if(var25 == EnumAction.block)
 				{
 					GL11.glTranslatef(-0.5F, 0.2F, 0.0F);
 					GL11.glRotatef(30.0F, 0.0F, 1.0F, 0.0F);
 					GL11.glRotatef(-80.0F, 1.0F, 0.0F, 0.0F);
 					GL11.glRotatef(60.0F, 0.0F, 1.0F, 0.0F);
-				} else if(var23 == EnumAction.bow)
+				} else if(var25 == EnumAction.bow)
 				{
 					GL11.glRotatef(-18.0F, 0.0F, 0.0F, 1.0F);
 					GL11.glRotatef(-12.0F, 0.0F, 1.0F, 0.0F);
 					GL11.glRotatef(-8.0F, 1.0F, 0.0F, 0.0F);
 					GL11.glTranslatef(-0.9F, 0.2F, 0.0F);
-					var13 = var17.getMaxItemUseDuration() - (var3.getItemInUseCount() - par1 + 1.0F);
-					var14 = var13 / 20.0F;
-					var14 = (var14 * var14 + var14 * 2.0F) / 3.0F;
-					if(var14 > 1.0F)
+					var16 = var8.getMaxItemUseDuration() - (var3.getItemInUseCount() - par1 + 1.0F);
+					var17 = var16 / 20.0F;
+					var17 = (var17 * var17 + var17 * 2.0F) / 3.0F;
+					if(var17 > 1.0F)
 					{
-						var14 = 1.0F;
+						var17 = 1.0F;
 					}
-					if(var14 > 0.1F)
+					if(var17 > 0.1F)
 					{
-						GL11.glTranslatef(0.0F, MathHelper.sin((var13 - 0.1F) * 1.3F) * 0.01F * (var14 - 0.1F), 0.0F);
+						GL11.glTranslatef(0.0F, MathHelper.sin((var16 - 0.1F) * 1.3F) * 0.01F * (var17 - 0.1F), 0.0F);
 					}
-					GL11.glTranslatef(0.0F, 0.0F, var14 * 0.1F);
+					GL11.glTranslatef(0.0F, 0.0F, var17 * 0.1F);
 					GL11.glRotatef(-335.0F, 0.0F, 0.0F, 1.0F);
 					GL11.glRotatef(-50.0F, 0.0F, 1.0F, 0.0F);
 					GL11.glTranslatef(0.0F, 0.5F, 0.0F);
-					var15 = 1.0F + var14 * 0.2F;
-					GL11.glScalef(1.0F, 1.0F, var15);
+					var18 = 1.0F + var17 * 0.2F;
+					GL11.glScalef(1.0F, 1.0F, var18);
 					GL11.glTranslatef(0.0F, -0.5F, 0.0F);
 					GL11.glRotatef(50.0F, 0.0F, 1.0F, 0.0F);
 					GL11.glRotatef(335.0F, 0.0F, 0.0F, 1.0F);
 				}
 			}
-			if(var17.getItem().shouldRotateAroundWhenRendering())
+			if(var8.getItem().shouldRotateAroundWhenRendering())
 			{
 				GL11.glRotatef(180.0F, 0.0F, 1.0F, 0.0F);
 			}
-			if(var17.getItem().requiresMultipleRenderPasses())
+			if(var8.getItem().requiresMultipleRenderPasses())
 			{
-				renderItem(var3, var17, 0);
-				int var25 = Item.itemsList[var17.itemID].getColorFromItemStack(var17, 1);
-				var13 = (var25 >> 16 & 255) / 255.0F;
-				var14 = (var25 >> 8 & 255) / 255.0F;
-				var15 = (var25 & 255) / 255.0F;
-				GL11.glColor4f(var6 * var13, var6 * var14, var6 * var15, 1.0F);
-				renderItem(var3, var17, 1);
+				renderItem(var3, var8, 0);
+				int var28 = Item.itemsList[var8.itemID].getColorFromItemStack(var8, 1);
+				var16 = (var28 >> 16 & 255) / 255.0F;
+				var17 = (var28 >> 8 & 255) / 255.0F;
+				var18 = (var28 & 255) / 255.0F;
+				GL11.glColor4f(var9 * var16, var9 * var17, var9 * var18, 1.0F);
+				renderItem(var3, var8, 1);
 			} else
 			{
-				renderItem(var3, var17, 0);
+				renderItem(var3, var8, 0);
 			}
 			GL11.glPopMatrix();
 		} else if(!var3.isInvisible())
 		{
 			GL11.glPushMatrix();
-			var7 = 0.8F;
+			var21 = 0.8F;
 			var20 = var3.getSwingProgress(par1);
-			var21 = MathHelper.sin(var20 * (float) Math.PI);
-			var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
-			GL11.glTranslatef(-var10 * 0.3F, MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI * 2.0F) * 0.4F, -var21 * 0.4F);
-			GL11.glTranslatef(0.8F * var7, -0.75F * var7 - (1.0F - var2) * 0.6F, -0.9F * var7);
+			var22 = MathHelper.sin(var20 * (float) Math.PI);
+			var13 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
+			GL11.glTranslatef(-var13 * 0.3F, MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI * 2.0F) * 0.4F, -var22 * 0.4F);
+			GL11.glTranslatef(0.8F * var21, -0.75F * var21 - (1.0F - var2) * 0.6F, -0.9F * var21);
 			GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 			var20 = var3.getSwingProgress(par1);
-			var21 = MathHelper.sin(var20 * var20 * (float) Math.PI);
-			var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
-			GL11.glRotatef(var10 * 70.0F, 0.0F, 1.0F, 0.0F);
-			GL11.glRotatef(-var21 * 20.0F, 0.0F, 0.0F, 1.0F);
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, mc.renderEngine.getTextureForDownloadableImage(mc.thePlayer.skinUrl, mc.thePlayer.getTexture()));
-			mc.renderEngine.resetBoundTexture();
+			var22 = MathHelper.sin(var20 * var20 * (float) Math.PI);
+			var13 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float) Math.PI);
+			GL11.glRotatef(var13 * 70.0F, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(-var22 * 20.0F, 0.0F, 0.0F, 1.0F);
+			mc.func_110434_K().func_110577_a(var3.func_110306_p());
 			GL11.glTranslatef(-1.0F, 3.6F, 3.5F);
 			GL11.glRotatef(120.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glRotatef(200.0F, 1.0F, 0.0F, 0.0F);
 			GL11.glRotatef(-135.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glScalef(1.0F, 1.0F, 1.0F);
 			GL11.glTranslatef(5.6F, 0.0F, 0.0F);
-			var24 = RenderManager.instance.getEntityRenderObject(mc.thePlayer);
-			var26 = (RenderPlayer) var24;
-			var13 = 1.0F;
-			GL11.glScalef(var13, var13, var13);
+			var27 = RenderManager.instance.getEntityRenderObject(mc.thePlayer);
+			var26 = (RenderPlayer) var27;
+			var16 = 1.0F;
+			GL11.glScalef(var16, var16, var16);
 			var26.renderFirstPersonArm(mc.thePlayer);
 			GL11.glPopMatrix();
 		}
@@ -405,7 +399,6 @@
 		GL11.glDisable(GL11.GL_ALPHA_TEST);
 		if(mc.thePlayer.isBurning())
 		{
-			mc.renderEngine.bindTexture("/terrain.png");
 			renderFireInFirstPerson(par1);
 		}
 		if(mc.thePlayer.isEntityInsideOpaqueBlock())
@@ -413,7 +406,6 @@
 			int var2 = MathHelper.floor_double(mc.thePlayer.posX);
 			int var3 = MathHelper.floor_double(mc.thePlayer.posY);
 			int var4 = MathHelper.floor_double(mc.thePlayer.posZ);
-			mc.renderEngine.bindTexture("/terrain.png");
 			int var5 = mc.theWorld.getBlockId(var2, var3, var4);
 			if(mc.theWorld.isBlockNormalCube(var2, var3, var4))
 			{
@@ -441,7 +433,6 @@
 		}
 		if(mc.thePlayer.isInsideOfMaterial(Material.water))
 		{
-			mc.renderEngine.bindTexture("/misc/water.png");
 			renderWarpedTextureOverlay(par1);
 		}
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
@@ -449,6 +440,7 @@
 	
 	private void renderWarpedTextureOverlay(float par1)
 	{
+		mc.func_110434_K().func_110577_a(field_110929_d);
 		Tessellator var2 = Tessellator.instance;
 		float var3 = mc.thePlayer.getBrightness(par1);
 		GL11.glColor4f(var3, var3, var3, 0.5F);
@@ -534,17 +526,17 @@
 		par0Tessellator.addVertexWithUV(1.0D, 0.0D, 0.0F - par7, par3, par4);
 		par0Tessellator.addVertexWithUV(0.0D, 0.0D, 0.0F - par7, par1, par4);
 		par0Tessellator.draw();
-		float var8 = par5 * (par1 - par3);
-		float var9 = par6 * (par4 - par2);
+		float var8 = 0.5F * (par1 - par3) / par5;
+		float var9 = 0.5F * (par4 - par2) / par6;
 		par0Tessellator.startDrawingQuads();
 		par0Tessellator.setNormal(-1.0F, 0.0F, 0.0F);
 		int var10;
 		float var11;
 		float var12;
-		for(var10 = 0; var10 < var8; ++var10)
+		for(var10 = 0; var10 < par5; ++var10)
 		{
-			var11 = var10 / var8;
-			var12 = par1 + (par3 - par1) * var11 - 0.5F / par5;
+			var11 = (float) var10 / (float) par5;
+			var12 = par1 + (par3 - par1) * var11 - var8;
 			par0Tessellator.addVertexWithUV(var11, 0.0D, 0.0F - par7, var12, par4);
 			par0Tessellator.addVertexWithUV(var11, 0.0D, 0.0D, var12, par4);
 			par0Tessellator.addVertexWithUV(var11, 1.0D, 0.0D, var12, par2);
@@ -554,11 +546,11 @@
 		par0Tessellator.startDrawingQuads();
 		par0Tessellator.setNormal(1.0F, 0.0F, 0.0F);
 		float var13;
-		for(var10 = 0; var10 < var8; ++var10)
+		for(var10 = 0; var10 < par5; ++var10)
 		{
-			var11 = var10 / var8;
-			var12 = par1 + (par3 - par1) * var11 - 0.5F / par5;
-			var13 = var11 + 1.0F / var8;
+			var11 = (float) var10 / (float) par5;
+			var12 = par1 + (par3 - par1) * var11 - var8;
+			var13 = var11 + 1.0F / par5;
 			par0Tessellator.addVertexWithUV(var13, 1.0D, 0.0F - par7, var12, par2);
 			par0Tessellator.addVertexWithUV(var13, 1.0D, 0.0D, var12, par2);
 			par0Tessellator.addVertexWithUV(var13, 0.0D, 0.0D, var12, par4);
@@ -567,11 +559,11 @@
 		par0Tessellator.draw();
 		par0Tessellator.startDrawingQuads();
 		par0Tessellator.setNormal(0.0F, 1.0F, 0.0F);
-		for(var10 = 0; var10 < var9; ++var10)
+		for(var10 = 0; var10 < par6; ++var10)
 		{
-			var11 = var10 / var9;
-			var12 = par4 + (par2 - par4) * var11 - 0.5F / par6;
-			var13 = var11 + 1.0F / var9;
+			var11 = (float) var10 / (float) par6;
+			var12 = par4 + (par2 - par4) * var11 - var9;
+			var13 = var11 + 1.0F / par6;
 			par0Tessellator.addVertexWithUV(0.0D, var13, 0.0D, par1, var12);
 			par0Tessellator.addVertexWithUV(1.0D, var13, 0.0D, par3, var12);
 			par0Tessellator.addVertexWithUV(1.0D, var13, 0.0F - par7, par3, var12);
@@ -580,10 +572,10 @@
 		par0Tessellator.draw();
 		par0Tessellator.startDrawingQuads();
 		par0Tessellator.setNormal(0.0F, -1.0F, 0.0F);
-		for(var10 = 0; var10 < var9; ++var10)
+		for(var10 = 0; var10 < par6; ++var10)
 		{
-			var11 = var10 / var9;
-			var12 = par4 + (par2 - par4) * var11 - 0.5F / par6;
+			var11 = (float) var10 / (float) par6;
+			var12 = par4 + (par2 - par4) * var11 - var9;
 			par0Tessellator.addVertexWithUV(1.0D, var11, 0.0D, par3, var12);
 			par0Tessellator.addVertexWithUV(0.0D, var11, 0.0D, par1, var12);
 			par0Tessellator.addVertexWithUV(0.0D, var11, 0.0F - par7, par1, var12);
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSaddle.java b/RMCClient/minecraft/net/minecraft/src/ItemSaddle.java
index 7d4117c..6af9307 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSaddle.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSaddle.java
@@ -2,30 +2,30 @@
 
 public class ItemSaddle extends Item
 {
-	public ItemSaddle(int par1)
+	public ItemSaddle(int p_i1896_1_)
 	{
-		super(par1);
+		super(p_i1896_1_);
 		maxStackSize = 1;
 		setCreativeTab(CreativeTabs.tabTransport);
 	}
 	
-	@Override public boolean hitEntity(ItemStack par1ItemStack, EntityLiving par2EntityLiving, EntityLiving par3EntityLiving)
+	@Override public boolean func_111207_a(ItemStack p_111207_1_, EntityPlayer p_111207_2_, EntityLivingBase p_111207_3_)
 	{
-		itemInteractionForEntity(par1ItemStack, par2EntityLiving);
-		return true;
-	}
-	
-	@Override public boolean itemInteractionForEntity(ItemStack par1ItemStack, EntityLiving par2EntityLiving)
-	{
-		if(par2EntityLiving instanceof EntityPig)
+		if(p_111207_3_ instanceof EntityPig)
 		{
-			EntityPig var3 = (EntityPig) par2EntityLiving;
-			if(!var3.getSaddled() && !var3.isChild())
+			EntityPig var4 = (EntityPig) p_111207_3_;
+			if(!var4.getSaddled() && !var4.isChild())
 			{
-				var3.setSaddled(true);
-				--par1ItemStack.stackSize;
+				var4.setSaddled(true);
+				--p_111207_1_.stackSize;
 			}
 			return true;
 		} else return false;
 	}
+	
+	@Override public boolean hitEntity(ItemStack par1ItemStack, EntityLivingBase par2EntityLiving, EntityLivingBase par3EntityLiving)
+	{
+		func_111207_a(par1ItemStack, (EntityPlayer) null, par2EntityLiving);
+		return true;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSeedFood.java b/RMCClient/minecraft/net/minecraft/src/ItemSeedFood.java
index 24c9587..9ba1e78 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSeedFood.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSeedFood.java
@@ -5,11 +5,11 @@
 	private int cropId;
 	private int soilId;
 	
-	public ItemSeedFood(int par1, int par2, float par3, int par4, int par5)
+	public ItemSeedFood(int p_i1897_1_, int p_i1897_2_, float p_i1897_3_, int p_i1897_4_, int p_i1897_5_)
 	{
-		super(par1, par2, par3, false);
-		cropId = par4;
-		soilId = par5;
+		super(p_i1897_1_, p_i1897_2_, p_i1897_3_, false);
+		cropId = p_i1897_4_;
+		soilId = p_i1897_5_;
 	}
 	
 	@Override public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSeeds.java b/RMCClient/minecraft/net/minecraft/src/ItemSeeds.java
index d66af5e..de7ad64 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSeeds.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSeeds.java
@@ -5,11 +5,11 @@
 	private int blockType;
 	private int soilBlockID;
 	
-	public ItemSeeds(int par1, int par2, int par3)
+	public ItemSeeds(int p_i1898_1_, int p_i1898_2_, int p_i1898_3_)
 	{
-		super(par1);
-		blockType = par2;
-		soilBlockID = par3;
+		super(p_i1898_1_);
+		blockType = p_i1898_2_;
+		soilBlockID = p_i1898_3_;
 		setCreativeTab(CreativeTabs.tabMaterials);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemShears.java b/RMCClient/minecraft/net/minecraft/src/ItemShears.java
index e33177c..47b4858 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemShears.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemShears.java
@@ -2,9 +2,9 @@
 
 public class ItemShears extends Item
 {
-	public ItemShears(int par1)
+	public ItemShears(int p_i1899_1_)
 	{
-		super(par1);
+		super(p_i1899_1_);
 		setMaxStackSize(1);
 		setMaxDamage(238);
 		setCreativeTab(CreativeTabs.tabTools);
@@ -20,7 +20,7 @@
 		return par2Block.blockID != Block.web.blockID && par2Block.blockID != Block.leaves.blockID ? par2Block.blockID == Block.cloth.blockID ? 5.0F : super.getStrVsBlock(par1ItemStack, par2Block) : 15.0F;
 	}
 	
-	@Override public boolean onBlockDestroyed(ItemStack par1ItemStack, World par2World, int par3, int par4, int par5, int par6, EntityLiving par7EntityLiving)
+	@Override public boolean onBlockDestroyed(ItemStack par1ItemStack, World par2World, int par3, int par4, int par5, int par6, EntityLivingBase par7EntityLiving)
 	{
 		if(par3 != Block.leaves.blockID && par3 != Block.web.blockID && par3 != Block.tallGrass.blockID && par3 != Block.vine.blockID && par3 != Block.tripWire.blockID) return super.onBlockDestroyed(par1ItemStack, par2World, par3, par4, par5, par6, par7EntityLiving);
 		else
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSign.java b/RMCClient/minecraft/net/minecraft/src/ItemSign.java
index d79f6a4..c8e68e1 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSign.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSign.java
@@ -2,9 +2,9 @@
 
 public class ItemSign extends Item
 {
-	public ItemSign(int par1)
+	public ItemSign(int p_i1901_1_)
 	{
-		super(par1);
+		super(p_i1901_1_);
 		maxStackSize = 16;
 		setCreativeTab(CreativeTabs.tabDecorations);
 	}
@@ -37,15 +37,16 @@
 			}
 			if(!par2EntityPlayer.canPlayerEdit(par4, par5, par6, par7, par1ItemStack)) return false;
 			else if(!Block.signPost.canPlaceBlockAt(par3World, par4, par5, par6)) return false;
+			else if(par3World.isRemote) return true;
 			else
 			{
 				if(par7 == 1)
 				{
 					int var11 = MathHelper.floor_double((par2EntityPlayer.rotationYaw + 180.0F) * 16.0F / 360.0F + 0.5D) & 15;
-					par3World.setBlock(par4, par5, par6, Block.signPost.blockID, var11, 2);
+					par3World.setBlock(par4, par5, par6, Block.signPost.blockID, var11, 3);
 				} else
 				{
-					par3World.setBlock(par4, par5, par6, Block.signWall.blockID, par7, 2);
+					par3World.setBlock(par4, par5, par6, Block.signWall.blockID, par7, 3);
 				}
 				--par1ItemStack.stackSize;
 				TileEntitySign var12 = (TileEntitySign) par3World.getBlockTileEntity(par4, par5, par6);
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSimpleFoiled.java b/RMCClient/minecraft/net/minecraft/src/ItemSimpleFoiled.java
index ed74ad9..15f5226 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSimpleFoiled.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSimpleFoiled.java
@@ -2,9 +2,9 @@
 
 public class ItemSimpleFoiled extends Item
 {
-	public ItemSimpleFoiled(int par1)
+	public ItemSimpleFoiled(int p_i1902_1_)
 	{
-		super(par1);
+		super(p_i1902_1_);
 	}
 	
 	@Override public boolean hasEffect(ItemStack par1ItemStack)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSkull.java b/RMCClient/minecraft/net/minecraft/src/ItemSkull.java
index 604efa1..bde44f3 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSkull.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSkull.java
@@ -5,12 +5,12 @@
 public class ItemSkull extends Item
 {
 	private static final String[] skullTypes = new String[] { "skeleton", "wither", "zombie", "char", "creeper" };
-	public static final String[] field_94587_a = new String[] { "skull_skeleton", "skull_wither", "skull_zombie", "skull_char", "skull_creeper" };
+	public static final String[] field_94587_a = new String[] { "skeleton", "wither", "zombie", "steve", "creeper" };
 	private Icon[] field_94586_c;
 	
-	public ItemSkull(int par1)
+	public ItemSkull(int p_i1903_1_)
 	{
-		super(par1);
+		super(p_i1903_1_);
 		setCreativeTab(CreativeTabs.tabDecorations);
 		setMaxDamage(0);
 		setHasSubtypes(true);
@@ -112,7 +112,7 @@
 		field_94586_c = new Icon[field_94587_a.length];
 		for(int var2 = 0; var2 < field_94587_a.length; ++var2)
 		{
-			field_94586_c[var2] = par1IconRegister.registerIcon(field_94587_a[var2]);
+			field_94586_c[var2] = par1IconRegister.registerIcon(func_111208_A() + "_" + field_94587_a[var2]);
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSlab.java b/RMCClient/minecraft/net/minecraft/src/ItemSlab.java
index ff62531..c682bdb 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSlab.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSlab.java
@@ -6,12 +6,12 @@
 	private final BlockHalfSlab theHalfSlab;
 	private final BlockHalfSlab doubleSlab;
 	
-	public ItemSlab(int par1, BlockHalfSlab par2BlockHalfSlab, BlockHalfSlab par3BlockHalfSlab, boolean par4)
+	public ItemSlab(int p_i1907_1_, BlockHalfSlab p_i1907_2_, BlockHalfSlab p_i1907_3_, boolean p_i1907_4_)
 	{
-		super(par1);
-		theHalfSlab = par2BlockHalfSlab;
-		doubleSlab = par3BlockHalfSlab;
-		isFullBlock = par4;
+		super(p_i1907_1_);
+		theHalfSlab = p_i1907_2_;
+		doubleSlab = p_i1907_3_;
+		isFullBlock = p_i1907_4_;
 		setMaxDamage(0);
 		setHasSubtypes(true);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSnow.java b/RMCClient/minecraft/net/minecraft/src/ItemSnow.java
index 73d7c4d..405d992 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSnow.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSnow.java
@@ -2,9 +2,9 @@
 
 public class ItemSnow extends ItemBlockWithMetadata
 {
-	public ItemSnow(int par1, Block par2Block)
+	public ItemSnow(int p_i1904_1_, Block p_i1904_2_)
 	{
-		super(par1, par2Block);
+		super(p_i1904_1_, p_i1904_2_);
 	}
 	
 	@Override public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int par4, int par5, int par6, int par7, float par8, float par9, float par10)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSnowball.java b/RMCClient/minecraft/net/minecraft/src/ItemSnowball.java
index 616b7e2..0aece4e 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSnowball.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSnowball.java
@@ -2,9 +2,9 @@
 
 public class ItemSnowball extends Item
 {
-	public ItemSnowball(int par1)
+	public ItemSnowball(int p_i1905_1_)
 	{
-		super(par1);
+		super(p_i1905_1_);
 		maxStackSize = 16;
 		setCreativeTab(CreativeTabs.tabMisc);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSoup.java b/RMCClient/minecraft/net/minecraft/src/ItemSoup.java
index 2a1644f..44d2e5f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSoup.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSoup.java
@@ -2,9 +2,9 @@
 
 public class ItemSoup extends ItemFood
 {
-	public ItemSoup(int par1, int par2)
+	public ItemSoup(int p_i1835_1_, int p_i1835_2_)
 	{
-		super(par1, par2, false);
+		super(p_i1835_1_, p_i1835_2_, false);
 		setMaxStackSize(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSpade.java b/RMCClient/minecraft/net/minecraft/src/ItemSpade.java
index 95cb97d..25a2684 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSpade.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSpade.java
@@ -4,9 +4,9 @@
 {
 	private static Block[] blocksEffectiveAgainst = new Block[] { Block.grass, Block.dirt, Block.sand, Block.gravel, Block.snow, Block.blockSnow, Block.blockClay, Block.tilledField, Block.slowSand, Block.mycelium };
 	
-	public ItemSpade(int par1, EnumToolMaterial par2EnumToolMaterial)
+	public ItemSpade(int p_i1900_1_, EnumToolMaterial p_i1900_2_)
 	{
-		super(par1, 1, par2EnumToolMaterial, blocksEffectiveAgainst);
+		super(p_i1900_1_, 1.0F, p_i1900_2_, blocksEffectiveAgainst);
 	}
 	
 	@Override public boolean canHarvestBlock(Block par1Block)
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemStack.java b/RMCClient/minecraft/net/minecraft/src/ItemStack.java
index 399664c..ab99850 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemStack.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemStack.java
@@ -1,11 +1,15 @@
 package net.minecraft.src;
 
+import java.text.DecimalFormat;
 import java.util.ArrayList;
+import java.util.Iterator;
 import java.util.List;
+import java.util.Map.Entry;
 import java.util.Random;
 
 public final class ItemStack
 {
+	public static final DecimalFormat field_111284_a = new DecimalFormat("#.###");
 	public int stackSize;
 	public int animationsToGo;
 	public int itemID;
@@ -15,51 +19,47 @@
 	
 	private ItemStack()
 	{
-		stackSize = 0;
-		itemFrame = null;
 	}
 	
-	public ItemStack(Block par1Block)
+	public ItemStack(Block p_i1876_1_)
 	{
-		this(par1Block, 1);
+		this(p_i1876_1_, 1);
 	}
 	
-	public ItemStack(Block par1Block, int par2)
+	public ItemStack(Block p_i1877_1_, int p_i1877_2_)
 	{
-		this(par1Block.blockID, par2, 0);
+		this(p_i1877_1_.blockID, p_i1877_2_, 0);
 	}
 	
-	public ItemStack(Block par1Block, int par2, int par3)
+	public ItemStack(Block p_i1878_1_, int p_i1878_2_, int p_i1878_3_)
 	{
-		this(par1Block.blockID, par2, par3);
+		this(p_i1878_1_.blockID, p_i1878_2_, p_i1878_3_);
 	}
 	
-	public ItemStack(int par1, int par2, int par3)
+	public ItemStack(int p_i1882_1_, int p_i1882_2_, int p_i1882_3_)
 	{
-		stackSize = 0;
-		itemFrame = null;
-		itemID = par1;
-		stackSize = par2;
-		itemDamage = par3;
+		itemID = p_i1882_1_;
+		stackSize = p_i1882_2_;
+		itemDamage = p_i1882_3_;
 		if(itemDamage < 0)
 		{
 			itemDamage = 0;
 		}
 	}
 	
-	public ItemStack(Item par1Item)
+	public ItemStack(Item p_i1879_1_)
 	{
-		this(par1Item.itemID, 1, 0);
+		this(p_i1879_1_.itemID, 1, 0);
 	}
 	
-	public ItemStack(Item par1Item, int par2)
+	public ItemStack(Item p_i1880_1_, int p_i1880_2_)
 	{
-		this(par1Item.itemID, par2, 0);
+		this(p_i1880_1_.itemID, p_i1880_2_, 0);
 	}
 	
-	public ItemStack(Item par1Item, int par2, int par3)
+	public ItemStack(Item p_i1881_1_, int p_i1881_2_, int p_i1881_3_)
 	{
-		this(par1Item.itemID, par2, par3);
+		this(p_i1881_1_.itemID, p_i1881_2_, p_i1881_3_);
 	}
 	
 	public void addEnchantment(Enchantment par1Enchantment, int par2)
@@ -118,7 +118,7 @@
 		return var1;
 	}
 	
-	public void damageItem(int par1, EntityLiving par2EntityLiving)
+	public void damageItem(int par1, EntityLivingBase par2EntityLiving)
 	{
 		if(!(par2EntityLiving instanceof EntityPlayer) || !((EntityPlayer) par2EntityLiving).capabilities.isCreativeMode)
 		{
@@ -127,11 +127,16 @@
 				if(attemptDamageItem(par1, par2EntityLiving.getRNG()))
 				{
 					par2EntityLiving.renderBrokenItemStack(this);
+					--stackSize;
 					if(par2EntityLiving instanceof EntityPlayer)
 					{
-						((EntityPlayer) par2EntityLiving).addStat(StatList.objectBreakStats[itemID], 1);
+						EntityPlayer var3 = (EntityPlayer) par2EntityLiving;
+						var3.addStat(StatList.objectBreakStats[itemID], 1);
+						if(stackSize == 0 && getItem() instanceof ItemBow)
+						{
+							var3.destroyCurrentEquippedItem();
+						}
 					}
-					--stackSize;
 					if(stackSize < 0)
 					{
 						stackSize = 0;
@@ -142,14 +147,57 @@
 		}
 	}
 	
+	public boolean func_111282_a(EntityPlayer p_111282_1_, EntityLivingBase p_111282_2_)
+	{
+		return Item.itemsList[itemID].func_111207_a(this, p_111282_1_, p_111282_2_);
+	}
+	
+	public Multimap func_111283_C()
+	{
+		Object var1;
+		if(hasTagCompound() && stackTagCompound.hasKey("AttributeModifiers"))
+		{
+			var1 = HashMultimap.create();
+			NBTTagList var2 = stackTagCompound.getTagList("AttributeModifiers");
+			for(int var3 = 0; var3 < var2.tagCount(); ++var3)
+			{
+				NBTTagCompound var4 = (NBTTagCompound) var2.tagAt(var3);
+				AttributeModifier var5 = SharedMonsterAttributes.func_111259_a(var4);
+				if(var5.func_111167_a().getLeastSignificantBits() != 0L && var5.func_111167_a().getMostSignificantBits() != 0L)
+				{
+					((Multimap) var1).put(var4.getString("AttributeName"), var5);
+				}
+			}
+		} else
+		{
+			var1 = getItem().func_111205_h();
+		}
+		return (Multimap) var1;
+	}
+	
+	public void func_135074_t()
+	{
+		if(stackTagCompound != null)
+		{
+			if(stackTagCompound.hasKey("display"))
+			{
+				NBTTagCompound var1 = stackTagCompound.getCompoundTag("display");
+				var1.removeTag("Name");
+				if(var1.hasNoTags())
+				{
+					stackTagCompound.removeTag("display");
+					if(stackTagCompound.hasNoTags())
+					{
+						setTagCompound((NBTTagCompound) null);
+					}
+				}
+			}
+		}
+	}
+	
 	public boolean func_82835_x()
 	{
 		return getItem().func_82788_x();
-	}
-	
-	public int getDamageVsEntity(Entity par1Entity)
-	{
-		return Item.itemsList[itemID].getDamageVsEntity(par1Entity);
 	}
 	
 	public String getDisplayName()
@@ -283,13 +331,13 @@
 		var4.addInformation(this, par1EntityPlayer, var3, par2);
 		if(hasTagCompound())
 		{
-			NBTTagList var10 = getEnchantmentTagList();
-			if(var10 != null)
+			NBTTagList var14 = getEnchantmentTagList();
+			if(var14 != null)
 			{
-				for(int var7 = 0; var7 < var10.tagCount(); ++var7)
+				for(int var7 = 0; var7 < var14.tagCount(); ++var7)
 				{
-					short var8 = ((NBTTagCompound) var10.tagAt(var7)).getShort("id");
-					short var9 = ((NBTTagCompound) var10.tagAt(var7)).getShort("lvl");
+					short var8 = ((NBTTagCompound) var14.tagAt(var7)).getShort("id");
+					short var9 = ((NBTTagCompound) var14.tagAt(var7)).getShort("lvl");
 					if(Enchantment.enchantmentsList[var8] != null)
 					{
 						var3.add(Enchantment.enchantmentsList[var8].getTranslatedName(var9));
@@ -298,27 +346,55 @@
 			}
 			if(stackTagCompound.hasKey("display"))
 			{
-				NBTTagCompound var11 = stackTagCompound.getCompoundTag("display");
-				if(var11.hasKey("color"))
+				NBTTagCompound var17 = stackTagCompound.getCompoundTag("display");
+				if(var17.hasKey("color"))
 				{
 					if(par2)
 					{
-						var3.add("Color: #" + Integer.toHexString(var11.getInteger("color")).toUpperCase());
+						var3.add("Color: #" + Integer.toHexString(var17.getInteger("color")).toUpperCase());
 					} else
 					{
 						var3.add(EnumChatFormatting.ITALIC + StatCollector.translateToLocal("item.dyed"));
 					}
 				}
-				if(var11.hasKey("Lore"))
+				if(var17.hasKey("Lore"))
 				{
-					NBTTagList var12 = var11.getTagList("Lore");
-					if(var12.tagCount() > 0)
+					NBTTagList var19 = var17.getTagList("Lore");
+					if(var19.tagCount() > 0)
 					{
-						for(int var13 = 0; var13 < var12.tagCount(); ++var13)
+						for(int var20 = 0; var20 < var19.tagCount(); ++var20)
 						{
-							var3.add(EnumChatFormatting.DARK_PURPLE + "" + EnumChatFormatting.ITALIC + ((NBTTagString) var12.tagAt(var13)).data);
+							var3.add(EnumChatFormatting.DARK_PURPLE + "" + EnumChatFormatting.ITALIC + ((NBTTagString) var19.tagAt(var20)).data);
 						}
 					}
+				}
+			}
+		}
+		Multimap var16 = func_111283_C();
+		if(!var16.isEmpty())
+		{
+			var3.add("");
+			Iterator var15 = var16.entries().iterator();
+			while(var15.hasNext())
+			{
+				Entry var18 = (Entry) var15.next();
+				AttributeModifier var21 = (AttributeModifier) var18.getValue();
+				double var10 = var21.func_111164_d();
+				double var12;
+				if(var21.func_111169_c() != 1 && var21.func_111169_c() != 2)
+				{
+					var12 = var21.func_111164_d();
+				} else
+				{
+					var12 = var21.func_111164_d() * 100.0D;
+				}
+				if(var10 > 0.0D)
+				{
+					var3.add(EnumChatFormatting.BLUE + StatCollector.translateToLocalFormatted("attribute.modifier.plus." + var21.func_111169_c(), new Object[] { field_111284_a.format(var12), StatCollector.translateToLocal("attribute.name." + (String) var18.getKey()) }));
+				} else if(var10 < 0.0D)
+				{
+					var12 *= -1.0D;
+					var3.add(EnumChatFormatting.RED + StatCollector.translateToLocalFormatted("attribute.modifier.take." + var21.func_111169_c(), new Object[] { field_111284_a.format(var12), StatCollector.translateToLocal("attribute.name." + (String) var18.getKey()) }));
 				}
 			}
 		}
@@ -344,18 +420,13 @@
 		return stackTagCompound != null;
 	}
 	
-	public void hitEntity(EntityLiving par1EntityLiving, EntityPlayer par2EntityPlayer)
+	public void hitEntity(EntityLivingBase par1EntityLiving, EntityPlayer par2EntityPlayer)
 	{
 		boolean var3 = Item.itemsList[itemID].hitEntity(this, par1EntityLiving, par2EntityPlayer);
 		if(var3)
 		{
 			par2EntityPlayer.addStat(StatList.objectUseStats[itemID], 1);
 		}
-	}
-	
-	public boolean interactWith(EntityLiving par1EntityLiving)
-	{
-		return Item.itemsList[itemID].itemInteractionForEntity(this, par1EntityLiving);
 	}
 	
 	public boolean isItemDamaged()
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemSword.java b/RMCClient/minecraft/net/minecraft/src/ItemSword.java
index 80e9f21..a521f9f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemSword.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemSword.java
@@ -1,18 +1,19 @@
 package net.minecraft.src;
 
+
 public class ItemSword extends Item
 {
-	private int weaponDamage;
+	private float weaponDamage;
 	private final EnumToolMaterial toolMaterial;
 	
-	public ItemSword(int par1, EnumToolMaterial par2EnumToolMaterial)
+	public ItemSword(int p_i1912_1_, EnumToolMaterial p_i1912_2_)
 	{
-		super(par1);
-		toolMaterial = par2EnumToolMaterial;
+		super(p_i1912_1_);
+		toolMaterial = p_i1912_2_;
 		maxStackSize = 1;
-		setMaxDamage(par2EnumToolMaterial.getMaxUses());
+		setMaxDamage(p_i1912_2_.getMaxUses());
 		setCreativeTab(CreativeTabs.tabCombat);
-		weaponDamage = 4 + par2EnumToolMaterial.getDamageVsEntity();
+		weaponDamage = 4.0F + p_i1912_2_.getDamageVsEntity();
 	}
 	
 	@Override public boolean canHarvestBlock(Block par1Block)
@@ -20,14 +21,16 @@
 		return par1Block.blockID == Block.web.blockID;
 	}
 	
-	public int func_82803_g()
+	@Override public Multimap func_111205_h()
 	{
-		return toolMaterial.getDamageVsEntity();
+		Multimap var1 = super.func_111205_h();
+		var1.put(SharedMonsterAttributes.field_111264_e.func_111108_a(), new AttributeModifier(field_111210_e, "Weapon modifier", weaponDamage, 0));
+		return var1;
 	}
 	
-	@Override public int getDamageVsEntity(Entity par1Entity)
+	public float func_82803_g()
 	{
-		return weaponDamage;
+		return toolMaterial.getDamageVsEntity();
 	}
 	
 	@Override public boolean getIsRepairable(ItemStack par1ItemStack, ItemStack par2ItemStack)
@@ -65,7 +68,7 @@
 		return toolMaterial.toString();
 	}
 	
-	@Override public boolean hitEntity(ItemStack par1ItemStack, EntityLiving par2EntityLiving, EntityLiving par3EntityLiving)
+	@Override public boolean hitEntity(ItemStack par1ItemStack, EntityLivingBase par2EntityLiving, EntityLivingBase par3EntityLiving)
 	{
 		par1ItemStack.damageItem(1, par3EntityLiving);
 		return true;
@@ -76,7 +79,7 @@
 		return true;
 	}
 	
-	@Override public boolean onBlockDestroyed(ItemStack par1ItemStack, World par2World, int par3, int par4, int par5, int par6, EntityLiving par7EntityLiving)
+	@Override public boolean onBlockDestroyed(ItemStack par1ItemStack, World par2World, int par3, int par4, int par5, int par6, EntityLivingBase par7EntityLiving)
 	{
 		if(Block.blocksList[par3].getBlockHardness(par2World, par4, par5, par6) != 0.0D)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemTool.java b/RMCClient/minecraft/net/minecraft/src/ItemTool.java
index dc7c7f5..d9bf408 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemTool.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemTool.java
@@ -1,27 +1,30 @@
 package net.minecraft.src;
 
+
 public class ItemTool extends Item
 {
 	private Block[] blocksEffectiveAgainst;
 	protected float efficiencyOnProperMaterial = 4.0F;
-	private int damageVsEntity;
+	private float damageVsEntity;
 	protected EnumToolMaterial toolMaterial;
 	
-	protected ItemTool(int par1, int par2, EnumToolMaterial par3EnumToolMaterial, Block[] par4ArrayOfBlock)
+	protected ItemTool(int p_i1854_1_, float p_i1854_2_, EnumToolMaterial p_i1854_3_, Block[] p_i1854_4_)
 	{
-		super(par1);
-		toolMaterial = par3EnumToolMaterial;
-		blocksEffectiveAgainst = par4ArrayOfBlock;
+		super(p_i1854_1_);
+		toolMaterial = p_i1854_3_;
+		blocksEffectiveAgainst = p_i1854_4_;
 		maxStackSize = 1;
-		setMaxDamage(par3EnumToolMaterial.getMaxUses());
-		efficiencyOnProperMaterial = par3EnumToolMaterial.getEfficiencyOnProperMaterial();
-		damageVsEntity = par2 + par3EnumToolMaterial.getDamageVsEntity();
+		setMaxDamage(p_i1854_3_.getMaxUses());
+		efficiencyOnProperMaterial = p_i1854_3_.getEfficiencyOnProperMaterial();
+		damageVsEntity = p_i1854_2_ + p_i1854_3_.getDamageVsEntity();
 		setCreativeTab(CreativeTabs.tabTools);
 	}
 	
-	@Override public int getDamageVsEntity(Entity par1Entity)
+	@Override public Multimap func_111205_h()
 	{
-		return damageVsEntity;
+		Multimap var1 = super.func_111205_h();
+		var1.put(SharedMonsterAttributes.field_111264_e.func_111108_a(), new AttributeModifier(field_111210_e, "Tool modifier", damageVsEntity, 0));
+		return var1;
 	}
 	
 	@Override public boolean getIsRepairable(ItemStack par1ItemStack, ItemStack par2ItemStack)
@@ -48,7 +51,7 @@
 		return toolMaterial.toString();
 	}
 	
-	@Override public boolean hitEntity(ItemStack par1ItemStack, EntityLiving par2EntityLiving, EntityLiving par3EntityLiving)
+	@Override public boolean hitEntity(ItemStack par1ItemStack, EntityLivingBase par2EntityLiving, EntityLivingBase par3EntityLiving)
 	{
 		par1ItemStack.damageItem(2, par3EntityLiving);
 		return true;
@@ -59,7 +62,7 @@
 		return true;
 	}
 	
-	@Override public boolean onBlockDestroyed(ItemStack par1ItemStack, World par2World, int par3, int par4, int par5, int par6, EntityLiving par7EntityLiving)
+	@Override public boolean onBlockDestroyed(ItemStack par1ItemStack, World par2World, int par3, int par4, int par5, int par6, EntityLivingBase par7EntityLiving)
 	{
 		if(Block.blocksList[par3].getBlockHardness(par2World, par4, par5, par6) != 0.0D)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/ItemWritableBook.java b/RMCClient/minecraft/net/minecraft/src/ItemWritableBook.java
index cda5613..abbb9aa 100644
--- a/RMCClient/minecraft/net/minecraft/src/ItemWritableBook.java
+++ b/RMCClient/minecraft/net/minecraft/src/ItemWritableBook.java
@@ -2,9 +2,9 @@
 
 public class ItemWritableBook extends Item
 {
-	public ItemWritableBook(int par1)
+	public ItemWritableBook(int p_i1914_1_)
 	{
-		super(par1);
+		super(p_i1914_1_);
 		setMaxStackSize(1);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/KeyBinding.java b/RMCClient/minecraft/net/minecraft/src/KeyBinding.java
index 57a464e..f36a9ff 100644
--- a/RMCClient/minecraft/net/minecraft/src/KeyBinding.java
+++ b/RMCClient/minecraft/net/minecraft/src/KeyBinding.java
@@ -11,14 +11,14 @@
 	public String keyDescription;
 	public int keyCode;
 	public boolean pressed;
-	public int pressTime = 0;
+	public int pressTime;
 	
-	public KeyBinding(String par1Str, int par2)
+	public KeyBinding(String p_i1001_1_, int p_i1001_2_)
 	{
-		keyDescription = par1Str;
-		keyCode = par2;
+		keyDescription = p_i1001_1_;
+		keyCode = p_i1001_2_;
 		keybindArray.add(this);
-		hash.addKey(par2, this);
+		hash.addKey(p_i1001_2_, this);
 	}
 	
 	public boolean isPressed()
diff --git a/RMCClient/minecraft/net/minecraft/src/LanServer.java b/RMCClient/minecraft/net/minecraft/src/LanServer.java
index 04656d9..fcd3d7c 100644
--- a/RMCClient/minecraft/net/minecraft/src/LanServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/LanServer.java
@@ -8,10 +8,10 @@
 	private String lanServerIpPort;
 	private long timeLastSeen;
 	
-	public LanServer(String par1Str, String par2Str)
+	public LanServer(String p_i1319_1_, String p_i1319_2_)
 	{
-		lanServerMotd = par1Str;
-		lanServerIpPort = par2Str;
+		lanServerMotd = p_i1319_1_;
+		lanServerIpPort = p_i1319_2_;
 		timeLastSeen = Minecraft.getSystemTime();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/LanServerList.java b/RMCClient/minecraft/net/minecraft/src/LanServerList.java
index f49870d..011bebc 100644
--- a/RMCClient/minecraft/net/minecraft/src/LanServerList.java
+++ b/RMCClient/minecraft/net/minecraft/src/LanServerList.java
@@ -17,24 +17,20 @@
 		String var4 = ThreadLanServerPing.getAdFromPingResponse(par1Str);
 		if(var4 != null)
 		{
-			int var5 = var4.indexOf(58);
-			if(var5 > 0)
+			var4 = par2InetAddress.getHostAddress() + ":" + var4;
+			boolean var5 = false;
+			Iterator var6 = listOfLanServers.iterator();
+			while(var6.hasNext())
 			{
-				var4 = par2InetAddress.getHostAddress() + var4.substring(var5);
-			}
-			boolean var6 = false;
-			Iterator var7 = listOfLanServers.iterator();
-			while(var7.hasNext())
-			{
-				LanServer var8 = (LanServer) var7.next();
-				if(var8.getServerIpPort().equals(var4))
+				LanServer var7 = (LanServer) var6.next();
+				if(var7.getServerIpPort().equals(var4))
 				{
-					var8.updateLastSeen();
-					var6 = true;
+					var7.updateLastSeen();
+					var5 = true;
 					break;
 				}
 			}
-			if(!var6)
+			if(!var5)
 			{
 				listOfLanServers.add(new LanServer(var3, var4));
 				wasUpdated = true;
diff --git a/RMCClient/minecraft/net/minecraft/src/Language.java b/RMCClient/minecraft/net/minecraft/src/Language.java
new file mode 100644
index 0000000..5745b38
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Language.java
@@ -0,0 +1,52 @@
+package net.minecraft.src;
+
+public class Language implements Comparable
+{
+	private final String field_135039_a;
+	private final String field_135037_b;
+	private final String field_135038_c;
+	private final boolean field_135036_d;
+	
+	public Language(String p_i1303_1_, String p_i1303_2_, String p_i1303_3_, boolean p_i1303_4_)
+	{
+		field_135039_a = p_i1303_1_;
+		field_135037_b = p_i1303_2_;
+		field_135038_c = p_i1303_3_;
+		field_135036_d = p_i1303_4_;
+	}
+	
+	@Override public int compareTo(Object par1Obj)
+	{
+		return func_135033_a((Language) par1Obj);
+	}
+	
+	@Override public boolean equals(Object par1Obj)
+	{
+		return this == par1Obj ? true : !(par1Obj instanceof Language) ? false : field_135039_a.equals(((Language) par1Obj).field_135039_a);
+	}
+	
+	public int func_135033_a(Language p_135033_1_)
+	{
+		return field_135039_a.compareTo(p_135033_1_.field_135039_a);
+	}
+	
+	public String func_135034_a()
+	{
+		return field_135039_a;
+	}
+	
+	public boolean func_135035_b()
+	{
+		return field_135036_d;
+	}
+	
+	@Override public int hashCode()
+	{
+		return field_135039_a.hashCode();
+	}
+	
+	@Override public String toString()
+	{
+		return String.format("%s (%s)", new Object[] { field_135038_c, field_135037_b });
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/LanguageManager.java b/RMCClient/minecraft/net/minecraft/src/LanguageManager.java
new file mode 100644
index 0000000..d50b3b5
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/LanguageManager.java
@@ -0,0 +1,93 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.SortedSet;
+
+import net.minecraft.client.Minecraft;
+
+public class LanguageManager implements ResourceManagerReloadListener
+{
+	private final MetadataSerializer field_135047_b;
+	private String field_135048_c;
+	protected static final Locale field_135049_a = new Locale();
+	private Map field_135046_d = Maps.newHashMap();
+	
+	public LanguageManager(MetadataSerializer p_i1304_1_, String p_i1304_2_)
+	{
+		field_135047_b = p_i1304_1_;
+		field_135048_c = p_i1304_2_;
+		I18n.func_135051_a(field_135049_a);
+	}
+	
+	@Override public void func_110549_a(ResourceManager p_110549_1_)
+	{
+		ArrayList var2 = Lists.newArrayList(new String[] { "en_US" });
+		if(!"en_US".equals(field_135048_c))
+		{
+			var2.add(field_135048_c);
+		}
+		field_135049_a.func_135022_a(p_110549_1_, var2);
+		StringTranslate.func_135063_a(field_135049_a.field_135032_a);
+	}
+	
+	public SortedSet func_135040_d()
+	{
+		return Sets.newTreeSet(field_135046_d.values());
+	}
+	
+	public Language func_135041_c()
+	{
+		return field_135046_d.containsKey(field_135048_c) ? (Language) field_135046_d.get(field_135048_c) : (Language) field_135046_d.get("en_US");
+	}
+	
+	public boolean func_135042_a()
+	{
+		return field_135049_a.func_135025_a();
+	}
+	
+	public void func_135043_a(List p_135043_1_)
+	{
+		field_135046_d.clear();
+		Iterator var2 = p_135043_1_.iterator();
+		while(var2.hasNext())
+		{
+			ResourcePack var3 = (ResourcePack) var2.next();
+			try
+			{
+				LanguageMetadataSection var4 = (LanguageMetadataSection) var3.func_135058_a(field_135047_b, "language");
+				if(var4 != null)
+				{
+					Iterator var5 = var4.func_135018_a().iterator();
+					while(var5.hasNext())
+					{
+						Language var6 = (Language) var5.next();
+						if(!field_135046_d.containsKey(var6.func_135034_a()))
+						{
+							field_135046_d.put(var6.func_135034_a(), var6);
+						}
+					}
+				}
+			} catch(RuntimeException var7)
+			{
+				Minecraft.getMinecraft().getLogAgent().logWarningException("Unable to parse metadata section of resourcepack: " + var3.func_130077_b(), var7);
+			} catch(IOException var8)
+			{
+				Minecraft.getMinecraft().getLogAgent().logWarningException("Unable to parse metadata section of resourcepack: " + var3.func_130077_b(), var8);
+			}
+		}
+	}
+	
+	public boolean func_135044_b()
+	{
+		return func_135041_c().func_135035_b();
+	}
+	
+	public void func_135045_a(Language p_135045_1_)
+	{
+		field_135048_c = p_135045_1_.func_135034_a();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/LanguageMetadataSection.java b/RMCClient/minecraft/net/minecraft/src/LanguageMetadataSection.java
new file mode 100644
index 0000000..c73a2af
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/LanguageMetadataSection.java
@@ -0,0 +1,18 @@
+package net.minecraft.src;
+
+import java.util.Collection;
+
+public class LanguageMetadataSection implements MetadataSection
+{
+	private final Collection field_135019_a;
+	
+	public LanguageMetadataSection(Collection p_i1311_1_)
+	{
+		field_135019_a = p_i1311_1_;
+	}
+	
+	public Collection func_135018_a()
+	{
+		return field_135019_a;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/LanguageMetadataSectionSerializer.java b/RMCClient/minecraft/net/minecraft/src/LanguageMetadataSectionSerializer.java
new file mode 100644
index 0000000..197367d
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/LanguageMetadataSectionSerializer.java
@@ -0,0 +1,45 @@
+package net.minecraft.src;
+
+import java.lang.reflect.Type;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.Map.Entry;
+
+public class LanguageMetadataSectionSerializer extends BaseMetadataSectionSerializer
+{
+	public Object deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_)
+	{
+		return func_135020_a(p_deserialize_1_, p_deserialize_2_, p_deserialize_3_);
+	}
+	
+	@Override public String func_110483_a()
+	{
+		return "language";
+	}
+	
+	public LanguageMetadataSection func_135020_a(JsonElement p_135020_1_, Type p_135020_2_, JsonDeserializationContext p_135020_3_)
+	{
+		JsonObject var4 = p_135020_1_.getAsJsonObject();
+		HashSet var5 = Sets.newHashSet();
+		Iterator var6 = var4.entrySet().iterator();
+		String var8;
+		String var11;
+		String var12;
+		boolean var13;
+		do
+		{
+			if(!var6.hasNext()) return new LanguageMetadataSection(var5);
+			Entry var7 = (Entry) var6.next();
+			var8 = (String) var7.getKey();
+			JsonElement var9 = (JsonElement) var7.getValue();
+			if(!var9.isJsonObject()) throw new JsonParseException("Invalid language->\'" + var8 + "\': expected object, was " + var9);
+			JsonObject var10 = var9.getAsJsonObject();
+			var11 = func_110486_a(var10.get("region"), "region", "", 0, Integer.MAX_VALUE);
+			var12 = func_110486_a(var10.get("name"), "name", "", 0, Integer.MAX_VALUE);
+			var13 = func_110484_a(var10.get("bidirectional"), "bidirectional", Boolean.valueOf(false));
+			if(var11.isEmpty()) throw new JsonParseException("Invalid language->\'" + var8 + "\'->region: empty value");
+			if(var12.isEmpty()) throw new JsonParseException("Invalid language->\'" + var8 + "\'->name: empty value");
+		} while(var5.add(new Language(var8, var11, var12, var13)));
+		throw new JsonParseException("Duplicate language->\'" + var8 + "\' defined");
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/LayeredTexture.java b/RMCClient/minecraft/net/minecraft/src/LayeredTexture.java
new file mode 100644
index 0000000..5e576f6
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/LayeredTexture.java
@@ -0,0 +1,48 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.awt.image.ImageObserver;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Iterator;
+import java.util.List;
+
+import javax.imageio.ImageIO;
+
+public class LayeredTexture extends AbstractTexture
+{
+	public final List field_110567_b;
+	
+	public LayeredTexture(String ... p_i1274_1_)
+	{
+		field_110567_b = Lists.newArrayList(p_i1274_1_);
+	}
+	
+	@Override public void func_110551_a(ResourceManager p_110551_1_) throws IOException
+	{
+		BufferedImage var2 = null;
+		try
+		{
+			Iterator var3 = field_110567_b.iterator();
+			while(var3.hasNext())
+			{
+				String var4 = (String) var3.next();
+				if(var4 != null)
+				{
+					InputStream var5 = p_110551_1_.func_110536_a(new ResourceLocation(var4)).func_110527_b();
+					BufferedImage var6 = ImageIO.read(var5);
+					if(var2 == null)
+					{
+						var2 = new BufferedImage(var6.getWidth(), var6.getHeight(), 2);
+					}
+					var2.getGraphics().drawImage(var6, 0, 0, (ImageObserver) null);
+				}
+			}
+		} catch(IOException var7)
+		{
+			var7.printStackTrace();
+			return;
+		}
+		TextureUtil.func_110987_a(func_110552_b(), var2);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/LoadingScreenRenderer.java b/RMCClient/minecraft/net/minecraft/src/LoadingScreenRenderer.java
index 0694e2c..1dc9646 100644
--- a/RMCClient/minecraft/net/minecraft/src/LoadingScreenRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/LoadingScreenRenderer.java
@@ -11,11 +11,11 @@
 	private Minecraft mc;
 	private String currentlyDisplayedText = "";
 	private long field_73723_d = Minecraft.getSystemTime();
-	private boolean field_73724_e = false;
+	private boolean field_73724_e;
 	
-	public LoadingScreenRenderer(Minecraft par1Minecraft)
+	public LoadingScreenRenderer(Minecraft p_i1017_1_)
 	{
-		mc = par1Minecraft;
+		mc = p_i1017_1_;
 	}
 	
 	@Override public void displayProgressMessage(String par1Str)
@@ -43,10 +43,6 @@
 		}
 	}
 	
-	@Override public void onNoMoreProgress()
-	{
-	}
-	
 	@Override public void resetProgresAndWorkingMessage(String par1Str)
 	{
 		if(!mc.running)
@@ -61,7 +57,7 @@
 		}
 	}
 	
-	@Override public void resetProgressAndMessage(String par1Str)
+	public void resetProgressAndMessage(String par1Str)
 	{
 		field_73724_e = false;
 		func_73722_d(par1Str);
@@ -90,7 +86,7 @@
 				GL11.glTranslatef(0.0F, 0.0F, -200.0F);
 				GL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);
 				Tessellator var7 = Tessellator.instance;
-				mc.renderEngine.bindTexture("/gui/background.png");
+				mc.func_110434_K().func_110577_a(Gui.field_110325_k);
 				float var8 = 32.0F;
 				var7.startDrawingQuads();
 				var7.setColorOpaque_I(4210752);
diff --git a/RMCClient/minecraft/net/minecraft/src/Locale.java b/RMCClient/minecraft/net/minecraft/src/Locale.java
new file mode 100644
index 0000000..898d4a6
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Locale.java
@@ -0,0 +1,116 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.IllegalFormatException;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.regex.Pattern;
+
+public class Locale
+{
+	private static final Splitter field_135030_b = Splitter.on('=').limit(2);
+	private static final Pattern field_135031_c = Pattern.compile("%(\\d+\\$)?[\\d\\.]*[df]");
+	Map field_135032_a = Maps.newHashMap();
+	private boolean field_135029_d;
+	
+	private void func_135021_a(InputStream p_135021_1_) throws IOException
+	{
+		Iterator var2 = IOUtils.readLines(p_135021_1_, Charsets.UTF_8).iterator();
+		while(var2.hasNext())
+		{
+			String var3 = (String) var2.next();
+			if(!var3.isEmpty() && var3.charAt(0) != 35)
+			{
+				String[] var4 = (String[]) Iterables.toArray(field_135030_b.split(var3), String.class);
+				if(var4 != null && var4.length == 2)
+				{
+					String var5 = var4[0];
+					String var6 = field_135031_c.matcher(var4[1]).replaceAll("%$1s");
+					field_135032_a.put(var5, var6);
+				}
+			}
+		}
+	}
+	
+	public synchronized void func_135022_a(ResourceManager p_135022_1_, List p_135022_2_)
+	{
+		field_135032_a.clear();
+		Iterator var3 = p_135022_2_.iterator();
+		while(var3.hasNext())
+		{
+			String var4 = (String) var3.next();
+			String var5 = String.format("lang/%s.lang", new Object[] { var4 });
+			Iterator var6 = p_135022_1_.func_135055_a().iterator();
+			while(var6.hasNext())
+			{
+				String var7 = (String) var6.next();
+				try
+				{
+					func_135028_a(p_135022_1_.func_135056_b(new ResourceLocation(var7, var5)));
+				} catch(IOException var9)
+				{
+					;
+				}
+			}
+		}
+		func_135024_b();
+	}
+	
+	public String func_135023_a(String p_135023_1_, Object[] p_135023_2_)
+	{
+		String var3 = func_135026_c(p_135023_1_);
+		try
+		{
+			return String.format(var3, p_135023_2_);
+		} catch(IllegalFormatException var5)
+		{
+			return "Format error: " + var3;
+		}
+	}
+	
+	private void func_135024_b()
+	{
+		field_135029_d = false;
+		Iterator var1 = field_135032_a.values().iterator();
+		while(var1.hasNext())
+		{
+			String var2 = (String) var1.next();
+			for(int var3 = 0; var3 < var2.length(); ++var3)
+			{
+				if(var2.charAt(var3) >= 256)
+				{
+					field_135029_d = true;
+					break;
+				}
+			}
+		}
+	}
+	
+	public boolean func_135025_a()
+	{
+		return field_135029_d;
+	}
+	
+	private String func_135026_c(String p_135026_1_)
+	{
+		String var2 = (String) field_135032_a.get(p_135026_1_);
+		return var2 == null ? p_135026_1_ : var2;
+	}
+	
+	public String func_135027_a(String p_135027_1_)
+	{
+		return func_135026_c(p_135027_1_);
+	}
+	
+	private void func_135028_a(List p_135028_1_) throws IOException
+	{
+		Iterator var2 = p_135028_1_.iterator();
+		while(var2.hasNext())
+		{
+			Resource var3 = (Resource) var2.next();
+			func_135021_a(var3.func_110527_b());
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/LogAgent.java b/RMCClient/minecraft/net/minecraft/src/LogAgent.java
index b697325..381b208 100644
--- a/RMCClient/minecraft/net/minecraft/src/LogAgent.java
+++ b/RMCClient/minecraft/net/minecraft/src/LogAgent.java
@@ -13,12 +13,12 @@
 	private final String loggerName;
 	private final String loggerPrefix;
 	
-	public LogAgent(String par1Str, String par2Str, String par3Str)
+	public LogAgent(String p_i1550_1_, String p_i1550_2_, String p_i1550_3_)
 	{
-		serverLogger = Logger.getLogger(par1Str);
-		loggerName = par1Str;
-		loggerPrefix = par2Str;
-		logFile = par3Str;
+		serverLogger = Logger.getLogger(p_i1550_1_);
+		loggerName = p_i1550_1_;
+		loggerPrefix = p_i1550_2_;
+		logFile = p_i1550_3_;
 		setupLogger();
 	}
 	
@@ -67,7 +67,7 @@
 			Handler var4 = var1[var3];
 			serverLogger.removeHandler(var4);
 		}
-		LogFormatter var6 = new LogFormatter(this, (LogAgentINNER1) null);
+		LogFormatter var6 = new LogFormatter(this, (LogAgentEmptyAnon) null);
 		ConsoleHandler var7 = new ConsoleHandler();
 		var7.setFormatter(var6);
 		serverLogger.addHandler(var7);
diff --git a/RMCClient/minecraft/net/minecraft/src/LogAgentEmptyAnon.java b/RMCClient/minecraft/net/minecraft/src/LogAgentEmptyAnon.java
new file mode 100644
index 0000000..328aebb
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/LogAgentEmptyAnon.java
@@ -0,0 +1,5 @@
+package net.minecraft.src;
+
+class LogAgentEmptyAnon
+{
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/LogAgentINNER1.java b/RMCClient/minecraft/net/minecraft/src/LogAgentINNER1.java
deleted file mode 100644
index cd58e4b..0000000
--- a/RMCClient/minecraft/net/minecraft/src/LogAgentINNER1.java
+++ /dev/null
@@ -1,5 +0,0 @@
-package net.minecraft.src;
-
-class LogAgentINNER1
-{
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/LogFormatter.java b/RMCClient/minecraft/net/minecraft/src/LogFormatter.java
index 314afea..2974ec0 100644
--- a/RMCClient/minecraft/net/minecraft/src/LogFormatter.java
+++ b/RMCClient/minecraft/net/minecraft/src/LogFormatter.java
@@ -11,15 +11,15 @@
 	private SimpleDateFormat field_98228_b;
 	final LogAgent field_98229_a;
 	
-	private LogFormatter(LogAgent par1LogAgent)
+	private LogFormatter(LogAgent p_i1548_1_)
 	{
-		field_98229_a = par1LogAgent;
+		field_98229_a = p_i1548_1_;
 		field_98228_b = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
 	}
 	
-	LogFormatter(LogAgent par1LogAgent, LogAgentINNER1 par2LogAgentINNER1)
+	LogFormatter(LogAgent p_i1549_1_, LogAgentEmptyAnon p_i1549_2_)
 	{
-		this(par1LogAgent);
+		this(p_i1549_1_);
 	}
 	
 	@Override public String format(LogRecord par1LogRecord)
diff --git a/RMCClient/minecraft/net/minecraft/src/LongHashMapEntry.java b/RMCClient/minecraft/net/minecraft/src/LongHashMapEntry.java
index c82090d..33f24d8 100644
--- a/RMCClient/minecraft/net/minecraft/src/LongHashMapEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/LongHashMapEntry.java
@@ -7,12 +7,12 @@
 	LongHashMapEntry nextEntry;
 	final int hash;
 	
-	LongHashMapEntry(int par1, long par2, Object par4Obj, LongHashMapEntry par5LongHashMapEntry)
+	LongHashMapEntry(int p_i1553_1_, long p_i1553_2_, Object p_i1553_4_, LongHashMapEntry p_i1553_5_)
 	{
-		value = par4Obj;
-		nextEntry = par5LongHashMapEntry;
-		key = par2;
-		hash = par1;
+		value = p_i1553_4_;
+		nextEntry = p_i1553_5_;
+		key = p_i1553_2_;
+		hash = p_i1553_1_;
 	}
 	
 	@Override public final boolean equals(Object par1Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/MD5String.java b/RMCClient/minecraft/net/minecraft/src/MD5String.java
index b2c28a0..8aa3033 100644
--- a/RMCClient/minecraft/net/minecraft/src/MD5String.java
+++ b/RMCClient/minecraft/net/minecraft/src/MD5String.java
@@ -8,9 +8,9 @@
 {
 	private String salt;
 	
-	public MD5String(String par1Str)
+	public MD5String(String p_i1551_1_)
 	{
-		salt = par1Str;
+		salt = p_i1551_1_;
 	}
 	
 	public String getMD5String(String par1Str)
diff --git a/RMCClient/minecraft/net/minecraft/src/MainProxyAuthenticator.java b/RMCClient/minecraft/net/minecraft/src/MainProxyAuthenticator.java
new file mode 100644
index 0000000..3f00885
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/MainProxyAuthenticator.java
@@ -0,0 +1,21 @@
+package net.minecraft.src;
+
+import java.net.Authenticator;
+import java.net.PasswordAuthentication;
+
+public final class MainProxyAuthenticator extends Authenticator
+{
+	final String field_111237_a;
+	final String field_111236_b;
+	
+	public MainProxyAuthenticator(String p_i1137_1_, String p_i1137_2_)
+	{
+		field_111237_a = p_i1137_1_;
+		field_111236_b = p_i1137_2_;
+	}
+	
+	@Override protected PasswordAuthentication getPasswordAuthentication()
+	{
+		return new PasswordAuthentication(field_111237_a, field_111236_b.toCharArray());
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadShutdown.java b/RMCClient/minecraft/net/minecraft/src/MainShutdownHook.java
similarity index 74%
rename from RMCClient/minecraft/net/minecraft/src/ThreadShutdown.java
rename to RMCClient/minecraft/net/minecraft/src/MainShutdownHook.java
index 9417522..b329715 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadShutdown.java
+++ b/RMCClient/minecraft/net/minecraft/src/MainShutdownHook.java
@@ -2,7 +2,7 @@
 
 import net.minecraft.client.Minecraft;
 
-public final class ThreadShutdown extends Thread
+public final class MainShutdownHook extends Thread
 {
 	@Override public void run()
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/MapColor.java b/RMCClient/minecraft/net/minecraft/src/MapColor.java
index 1396cdb..a585d79 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapColor.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapColor.java
@@ -20,10 +20,10 @@
 	public final int colorValue;
 	public final int colorIndex;
 	
-	private MapColor(int par1, int par2)
+	private MapColor(int p_i2117_1_, int p_i2117_2_)
 	{
-		colorIndex = par1;
-		colorValue = par2;
-		mapColorArray[par1] = this;
+		colorIndex = p_i2117_1_;
+		colorValue = p_i2117_2_;
+		mapColorArray[p_i2117_1_] = this;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/MapCoord.java b/RMCClient/minecraft/net/minecraft/src/MapCoord.java
index b358c80..f81972a 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapCoord.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapCoord.java
@@ -8,12 +8,12 @@
 	public byte iconRotation;
 	final MapData data;
 	
-	public MapCoord(MapData par1MapData, byte par2, byte par3, byte par4, byte par5)
+	public MapCoord(MapData p_i2139_1_, byte p_i2139_2_, byte p_i2139_3_, byte p_i2139_4_, byte p_i2139_5_)
 	{
-		data = par1MapData;
-		iconSize = par2;
-		centerX = par3;
-		centerZ = par4;
-		iconRotation = par5;
+		data = p_i2139_1_;
+		iconSize = p_i2139_2_;
+		centerX = p_i2139_3_;
+		centerZ = p_i2139_4_;
+		iconRotation = p_i2139_5_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/MapData.java b/RMCClient/minecraft/net/minecraft/src/MapData.java
index be54b40..00f7a4e 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapData.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapData.java
@@ -17,9 +17,9 @@
 	private Map playersHashMap = new HashMap();
 	public Map playersVisibleOnMap = new LinkedHashMap();
 	
-	public MapData(String par1Str)
+	public MapData(String p_i2140_1_)
 	{
-		super(par1Str);
+		super(p_i2140_1_);
 	}
 	
 	private void func_82567_a(int par1, World par2World, String par3Str, double par4, double par6, double par8)
diff --git a/RMCClient/minecraft/net/minecraft/src/MapGenMineshaft.java b/RMCClient/minecraft/net/minecraft/src/MapGenMineshaft.java
index bf90402..d5471f4 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapGenMineshaft.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapGenMineshaft.java
@@ -12,9 +12,9 @@
 	{
 	}
 	
-	public MapGenMineshaft(Map par1Map)
+	public MapGenMineshaft(Map p_i2034_1_)
 	{
-		Iterator var2 = par1Map.entrySet().iterator();
+		Iterator var2 = p_i2034_1_.entrySet().iterator();
 		while(var2.hasNext())
 		{
 			Entry var3 = (Entry) var2.next();
diff --git a/RMCClient/minecraft/net/minecraft/src/MapGenScatteredFeature.java b/RMCClient/minecraft/net/minecraft/src/MapGenScatteredFeature.java
index 4c22af9..f284589 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapGenScatteredFeature.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapGenScatteredFeature.java
@@ -23,10 +23,10 @@
 		scatteredFeatureSpawnList.add(new SpawnListEntry(EntityWitch.class, 1, 1, 1));
 	}
 	
-	public MapGenScatteredFeature(Map par1Map)
+	public MapGenScatteredFeature(Map p_i2061_1_)
 	{
 		this();
-		Iterator var2 = par1Map.entrySet().iterator();
+		Iterator var2 = p_i2061_1_.entrySet().iterator();
 		while(var2.hasNext())
 		{
 			Entry var3 = (Entry) var2.next();
diff --git a/RMCClient/minecraft/net/minecraft/src/MapGenStronghold.java b/RMCClient/minecraft/net/minecraft/src/MapGenStronghold.java
index cf9bd7e..e35fb4b 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapGenStronghold.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapGenStronghold.java
@@ -24,13 +24,13 @@
 		field_82672_i = 3;
 	}
 	
-	public MapGenStronghold(Map par1Map)
+	public MapGenStronghold(Map p_i2068_1_)
 	{
 		allowedBiomeGenBases = new BiomeGenBase[] { BiomeGenBase.desert, BiomeGenBase.forest, BiomeGenBase.extremeHills, BiomeGenBase.swampland, BiomeGenBase.taiga, BiomeGenBase.icePlains, BiomeGenBase.iceMountains, BiomeGenBase.desertHills, BiomeGenBase.forestHills, BiomeGenBase.extremeHillsEdge, BiomeGenBase.jungle, BiomeGenBase.jungleHills };
 		structureCoords = new ChunkCoordIntPair[3];
 		field_82671_h = 32.0D;
 		field_82672_i = 3;
-		Iterator var2 = par1Map.entrySet().iterator();
+		Iterator var2 = p_i2068_1_.entrySet().iterator();
 		while(var2.hasNext())
 		{
 			Entry var3 = (Entry) var2.next();
diff --git a/RMCClient/minecraft/net/minecraft/src/MapGenStructure.java b/RMCClient/minecraft/net/minecraft/src/MapGenStructure.java
index d2d033d..e84272f 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapGenStructure.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapGenStructure.java
@@ -12,6 +12,18 @@
 	
 	protected abstract boolean canSpawnStructureAtCoords(int var1, int var2);
 	
+	public boolean func_142038_b(int p_142038_1_, int p_142038_2_, int p_142038_3_)
+	{
+		Iterator var4 = structureMap.values().iterator();
+		StructureStart var5;
+		do
+		{
+			if(!var4.hasNext()) return false;
+			var5 = (StructureStart) var4.next();
+		} while(!var5.isSizeableStructure());
+		return var5.getBoundingBox().intersectsWith(p_142038_1_, p_142038_3_, p_142038_1_, p_142038_3_);
+	}
+	
 	public boolean generateStructuresInChunk(World par1World, Random par2Random, int par3, int par4)
 	{
 		int var5 = (par3 << 4) + 8;
@@ -63,7 +75,7 @@
 				var20 = var19.x - par2;
 				var21 = var19.y - par3;
 				var22 = var19.z - par4;
-				var23 = var20 + var20 * var21 * var21 + var22 * var22;
+				var23 = var20 * var20 + var21 * var21 + var22 * var22;
 				if(var23 < var13)
 				{
 					var13 = var23;
@@ -85,7 +97,7 @@
 					var20 = var19.x - par2;
 					var21 = var19.y - par3;
 					var22 = var19.z - par4;
-					var23 = var20 + var20 * var21 * var21 + var22 * var22;
+					var23 = var20 * var20 + var21 * var21 + var22 * var22;
 					if(var23 < var13)
 					{
 						var13 = var23;
diff --git a/RMCClient/minecraft/net/minecraft/src/MapGenVillage.java b/RMCClient/minecraft/net/minecraft/src/MapGenVillage.java
index 700b3fc..7590674 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapGenVillage.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapGenVillage.java
@@ -16,15 +16,14 @@
 	
 	public MapGenVillage()
 	{
-		terrainType = 0;
 		field_82665_g = 32;
 		field_82666_h = 8;
 	}
 	
-	public MapGenVillage(Map par1Map)
+	public MapGenVillage(Map p_i2093_1_)
 	{
 		this();
-		Iterator var2 = par1Map.entrySet().iterator();
+		Iterator var2 = p_i2093_1_.entrySet().iterator();
 		while(var2.hasNext())
 		{
 			Entry var3 = (Entry) var2.next();
diff --git a/RMCClient/minecraft/net/minecraft/src/MapInfo.java b/RMCClient/minecraft/net/minecraft/src/MapInfo.java
index 9d4fd47..b53e736 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapInfo.java
@@ -14,15 +14,12 @@
 	private boolean field_82570_i;
 	final MapData mapDataObj;
 	
-	public MapInfo(MapData par1MapData, EntityPlayer par2EntityPlayer)
+	public MapInfo(MapData p_i2138_1_, EntityPlayer p_i2138_2_)
 	{
-		mapDataObj = par1MapData;
+		mapDataObj = p_i2138_1_;
 		field_76209_b = new int[128];
 		field_76210_c = new int[128];
-		currentRandomNumber = 0;
-		ticksUntilPlayerLocationMapUpdate = 0;
-		field_82570_i = false;
-		entityplayerObj = par2EntityPlayer;
+		entityplayerObj = p_i2138_2_;
 		for(int var3 = 0; var3 < field_76209_b.length; ++var3)
 		{
 			field_76209_b[var3] = 0;
diff --git a/RMCClient/minecraft/net/minecraft/src/MapItemRenderer.java b/RMCClient/minecraft/net/minecraft/src/MapItemRenderer.java
index 04d5495..3c19346 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapItemRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapItemRenderer.java
@@ -1,29 +1,30 @@
 package net.minecraft.src;
 
-import java.awt.image.BufferedImage;
 import java.util.Iterator;
 
 import org.lwjgl.opengl.GL11;
 
 public class MapItemRenderer
 {
+	private static final ResourceLocation field_111277_a = new ResourceLocation("textures/map/map_icons.png");
+	private final DynamicTexture bufferedImage;
 	private int[] intArray = new int[16384];
-	private int bufferedImage;
 	private GameSettings gameSettings;
-	private FontRenderer fontRenderer;
+	private final ResourceLocation field_111276_e;
 	
-	public MapItemRenderer(FontRenderer par1FontRenderer, GameSettings par2GameSettings, RenderEngine par3RenderEngine)
+	public MapItemRenderer(GameSettings p_i1045_1_, TextureManager p_i1045_2_)
 	{
-		gameSettings = par2GameSettings;
-		fontRenderer = par1FontRenderer;
-		bufferedImage = par3RenderEngine.allocateAndSetupTexture(new BufferedImage(128, 128, 2));
-		for(int var4 = 0; var4 < 16384; ++var4)
+		gameSettings = p_i1045_1_;
+		bufferedImage = new DynamicTexture(128, 128);
+		field_111276_e = p_i1045_2_.func_110578_a("map", bufferedImage);
+		intArray = bufferedImage.func_110565_c();
+		for(int var4 = 0; var4 < intArray.length; ++var4)
 		{
 			intArray[var4] = 0;
 		}
 	}
 	
-	public void renderMap(EntityPlayer par1EntityPlayer, RenderEngine par2RenderEngine, MapData par3MapData)
+	public void renderMap(EntityPlayer par1EntityPlayer, TextureManager par2RenderEngine, MapData par3MapData)
 	{
 		for(int var4 = 0; var4 < 16384; ++var4)
 		{
@@ -47,24 +48,15 @@
 				int var9 = (var6 >> 16 & 255) * var8 / 255;
 				int var10 = (var6 >> 8 & 255) * var8 / 255;
 				int var11 = (var6 & 255) * var8 / 255;
-				if(gameSettings.anaglyph)
-				{
-					int var12 = (var9 * 30 + var10 * 59 + var11 * 11) / 100;
-					int var13 = (var9 * 30 + var10 * 70) / 100;
-					int var14 = (var9 * 30 + var11 * 70) / 100;
-					var9 = var12;
-					var10 = var13;
-					var11 = var14;
-				}
 				intArray[var4] = -16777216 | var9 << 16 | var10 << 8 | var11;
 			}
 		}
-		par2RenderEngine.createTextureFromBytes(intArray, 128, 128, bufferedImage);
+		bufferedImage.func_110564_a();
 		byte var15 = 0;
 		byte var16 = 0;
 		Tessellator var17 = Tessellator.instance;
 		float var18 = 0.0F;
-		GL11.glBindTexture(GL11.GL_TEXTURE_2D, bufferedImage);
+		par2RenderEngine.func_110577_a(field_111276_e);
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glBlendFunc(GL11.GL_ONE, GL11.GL_ONE_MINUS_SRC_ALPHA);
 		GL11.glDisable(GL11.GL_ALPHA_TEST);
@@ -76,26 +68,25 @@
 		var17.draw();
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
 		GL11.glDisable(GL11.GL_BLEND);
-		par2RenderEngine.resetBoundTexture();
-		par2RenderEngine.bindTexture("/misc/mapicons.png");
-		int var19 = 0;
-		for(Iterator var20 = par3MapData.playersVisibleOnMap.values().iterator(); var20.hasNext(); ++var19)
+		par2RenderEngine.func_110577_a(field_111277_a);
+		int var20 = 0;
+		for(Iterator var19 = par3MapData.playersVisibleOnMap.values().iterator(); var19.hasNext(); ++var20)
 		{
-			MapCoord var21 = (MapCoord) var20.next();
+			MapCoord var22 = (MapCoord) var19.next();
 			GL11.glPushMatrix();
-			GL11.glTranslatef(var15 + var21.centerX / 2.0F + 64.0F, var16 + var21.centerZ / 2.0F + 64.0F, -0.02F);
-			GL11.glRotatef(var21.iconRotation * 360 / 16.0F, 0.0F, 0.0F, 1.0F);
+			GL11.glTranslatef(var15 + var22.centerX / 2.0F + 64.0F, var16 + var22.centerZ / 2.0F + 64.0F, -0.02F);
+			GL11.glRotatef(var22.iconRotation * 360 / 16.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glScalef(4.0F, 4.0F, 3.0F);
 			GL11.glTranslatef(-0.125F, 0.125F, 0.0F);
-			float var23 = (var21.iconSize % 4 + 0) / 4.0F;
-			float var22 = (var21.iconSize / 4 + 0) / 4.0F;
-			float var24 = (var21.iconSize % 4 + 1) / 4.0F;
-			float var25 = (var21.iconSize / 4 + 1) / 4.0F;
+			float var21 = (var22.iconSize % 4 + 0) / 4.0F;
+			float var12 = (var22.iconSize / 4 + 0) / 4.0F;
+			float var13 = (var22.iconSize % 4 + 1) / 4.0F;
+			float var14 = (var22.iconSize / 4 + 1) / 4.0F;
 			var17.startDrawingQuads();
-			var17.addVertexWithUV(-1.0D, 1.0D, var19 * 0.001F, var23, var22);
-			var17.addVertexWithUV(1.0D, 1.0D, var19 * 0.001F, var24, var22);
-			var17.addVertexWithUV(1.0D, -1.0D, var19 * 0.001F, var24, var25);
-			var17.addVertexWithUV(-1.0D, -1.0D, var19 * 0.001F, var23, var25);
+			var17.addVertexWithUV(-1.0D, 1.0D, var20 * 0.001F, var21, var12);
+			var17.addVertexWithUV(1.0D, 1.0D, var20 * 0.001F, var13, var12);
+			var17.addVertexWithUV(1.0D, -1.0D, var20 * 0.001F, var13, var14);
+			var17.addVertexWithUV(-1.0D, -1.0D, var20 * 0.001F, var21, var14);
 			var17.draw();
 			GL11.glPopMatrix();
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/MapStorage.java b/RMCClient/minecraft/net/minecraft/src/MapStorage.java
index 6e506b4..28868bb 100644
--- a/RMCClient/minecraft/net/minecraft/src/MapStorage.java
+++ b/RMCClient/minecraft/net/minecraft/src/MapStorage.java
@@ -18,9 +18,9 @@
 	private List loadedDataList = new ArrayList();
 	private Map idCounts = new HashMap();
 	
-	public MapStorage(ISaveHandler par1ISaveHandler)
+	public MapStorage(ISaveHandler p_i2162_1_)
 	{
-		saveHandler = par1ISaveHandler;
+		saveHandler = p_i2162_1_;
 		loadIdCounts();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/Material.java b/RMCClient/minecraft/net/minecraft/src/Material.java
index 761dfd1..01d5720 100644
--- a/RMCClient/minecraft/net/minecraft/src/Material.java
+++ b/RMCClient/minecraft/net/minecraft/src/Material.java
@@ -19,6 +19,7 @@
 	public static final Material fire = new MaterialTransparent(MapColor.airColor).setNoPushMobility();
 	public static final Material sand = new Material(MapColor.sandColor);
 	public static final Material circuits = new MaterialLogic(MapColor.airColor).setNoPushMobility();
+	public static final Material field_111018_r = new MaterialLogic(MapColor.clothColor).setBurning();
 	public static final Material glass = new Material(MapColor.airColor).setTranslucent().setAlwaysHarvested();
 	public static final Material redstoneLight = new Material(MapColor.airColor).setAlwaysHarvested();
 	public static final Material tnt = new Material(MapColor.tntColor).setBurning().setTranslucent();
@@ -42,9 +43,9 @@
 	private int mobilityFlag;
 	private boolean field_85159_M;
 	
-	public Material(MapColor par1MapColor)
+	public Material(MapColor p_i2116_1_)
 	{
-		materialMapColor = par1MapColor;
+		materialMapColor = p_i2116_1_;
 	}
 	
 	public boolean blocksMovement()
diff --git a/RMCClient/minecraft/net/minecraft/src/MaterialLiquid.java b/RMCClient/minecraft/net/minecraft/src/MaterialLiquid.java
index a6037a0..b640363 100644
--- a/RMCClient/minecraft/net/minecraft/src/MaterialLiquid.java
+++ b/RMCClient/minecraft/net/minecraft/src/MaterialLiquid.java
@@ -2,9 +2,9 @@
 
 public class MaterialLiquid extends Material
 {
-	public MaterialLiquid(MapColor par1MapColor)
+	public MaterialLiquid(MapColor p_i2114_1_)
 	{
-		super(par1MapColor);
+		super(p_i2114_1_);
 		setReplaceable();
 		setNoPushMobility();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/MaterialLogic.java b/RMCClient/minecraft/net/minecraft/src/MaterialLogic.java
index d16e577..00df7a6 100644
--- a/RMCClient/minecraft/net/minecraft/src/MaterialLogic.java
+++ b/RMCClient/minecraft/net/minecraft/src/MaterialLogic.java
@@ -2,9 +2,9 @@
 
 public class MaterialLogic extends Material
 {
-	public MaterialLogic(MapColor par1MapColor)
+	public MaterialLogic(MapColor p_i2112_1_)
 	{
-		super(par1MapColor);
+		super(p_i2112_1_);
 		setAlwaysHarvested();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/MaterialPortal.java b/RMCClient/minecraft/net/minecraft/src/MaterialPortal.java
index 443271c..8761e5d 100644
--- a/RMCClient/minecraft/net/minecraft/src/MaterialPortal.java
+++ b/RMCClient/minecraft/net/minecraft/src/MaterialPortal.java
@@ -2,9 +2,9 @@
 
 public class MaterialPortal extends Material
 {
-	public MaterialPortal(MapColor par1MapColor)
+	public MaterialPortal(MapColor p_i2118_1_)
 	{
-		super(par1MapColor);
+		super(p_i2118_1_);
 	}
 	
 	@Override public boolean blocksMovement()
diff --git a/RMCClient/minecraft/net/minecraft/src/MaterialTransparent.java b/RMCClient/minecraft/net/minecraft/src/MaterialTransparent.java
index 90ea6ce..82f9eb6 100644
--- a/RMCClient/minecraft/net/minecraft/src/MaterialTransparent.java
+++ b/RMCClient/minecraft/net/minecraft/src/MaterialTransparent.java
@@ -2,9 +2,9 @@
 
 public class MaterialTransparent extends Material
 {
-	public MaterialTransparent(MapColor par1MapColor)
+	public MaterialTransparent(MapColor p_i2113_1_)
 	{
-		super(par1MapColor);
+		super(p_i2113_1_);
 		setReplaceable();
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/MaterialWeb.java b/RMCClient/minecraft/net/minecraft/src/MaterialWeb.java
index 51a8b6a..4a0fa87 100644
--- a/RMCClient/minecraft/net/minecraft/src/MaterialWeb.java
+++ b/RMCClient/minecraft/net/minecraft/src/MaterialWeb.java
@@ -2,9 +2,9 @@
 
 final class MaterialWeb extends Material
 {
-	MaterialWeb(MapColor par1MapColor)
+	MaterialWeb(MapColor p_i2115_1_)
 	{
-		super(par1MapColor);
+		super(p_i2115_1_);
 	}
 	
 	@Override public boolean blocksMovement()
diff --git a/RMCClient/minecraft/net/minecraft/src/McoClient.java b/RMCClient/minecraft/net/minecraft/src/McoClient.java
index 1a1c2b9..9f745ef 100644
--- a/RMCClient/minecraft/net/minecraft/src/McoClient.java
+++ b/RMCClient/minecraft/net/minecraft/src/McoClient.java
@@ -9,15 +9,81 @@
 
 public class McoClient
 {
-	private static McoOption field_98178_a = McoOption.func_98154_b();
 	private final String field_96390_a;
 	private final String field_100007_c;
 	private static String field_96388_b = "https://mcoapi.minecraft.net/";
 	
-	public McoClient(Session par1Session)
+	public McoClient(Session p_i1138_1_)
 	{
-		field_96390_a = par1Session.sessionId;
-		field_100007_c = par1Session.username;
+		field_96390_a = p_i1138_1_.func_111286_b();
+		field_100007_c = p_i1138_1_.func_111285_a();
+	}
+	
+	public WorldTemplateList func_111231_d() throws ExceptionMcoService
+	{
+		String var1 = field_96388_b + "worlds" + "/templates";
+		String var2 = func_96377_a(Request.func_96358_a(var1));
+		return WorldTemplateList.func_110735_a(var2);
+	}
+	
+	public BackupList func_111232_c(long p_111232_1_) throws ExceptionMcoService
+	{
+		String var3 = field_96388_b + "worlds" + "/$WORLD_ID/backups".replace("$WORLD_ID", String.valueOf(p_111232_1_));
+		String var4 = func_96377_a(Request.func_96358_a(var3));
+		return BackupList.func_111222_a(var4);
+	}
+	
+	public Boolean func_111233_e(long p_111233_1_, String p_111233_3_) throws ExceptionMcoService
+	{
+		StringBuilder var4 = new StringBuilder();
+		var4.append(field_96388_b).append("worlds").append("/$WORLD_ID/reset".replace("$WORLD_ID", String.valueOf(p_111233_1_)));
+		if(p_111233_3_ != null)
+		{
+			var4.append("?template=").append(p_111233_3_);
+		}
+		String var5 = func_96377_a(Request.func_96353_a(var4.toString(), "", 30000, 80000));
+		return Boolean.valueOf(var5);
+	}
+	
+	public void func_111235_c(long p_111235_1_, String p_111235_3_) throws ExceptionMcoService
+	{
+		String var4 = field_96388_b + "worlds" + "/$WORLD_ID/backups".replace("$WORLD_ID", String.valueOf(p_111235_1_)) + "?backupId=" + p_111235_3_;
+		func_96377_a(Request.func_96363_c(var4, ""));
+	}
+	
+	public int func_130106_e() throws ExceptionMcoService
+	{
+		String var1 = func_96377_a(Request.func_96358_a(field_96388_b + "invites" + "/count/pending"));
+		return Integer.parseInt(var1);
+	}
+	
+	public void func_130107_a(String p_130107_1_) throws ExceptionMcoService
+	{
+		func_96377_a(Request.func_96363_c(field_96388_b + "invites" + "/accept/$INVITATION_ID".replace("$INVITATION_ID", p_130107_1_), ""));
+	}
+	
+	public PendingInvitesList func_130108_f() throws ExceptionMcoService
+	{
+		String var1 = func_96377_a(Request.func_96358_a(field_96388_b + "invites" + "/pending"));
+		return PendingInvitesList.func_130095_a(var1);
+	}
+	
+	public void func_130109_b(String p_130109_1_) throws ExceptionMcoService
+	{
+		func_96377_a(Request.func_96363_c(field_96388_b + "invites" + "/reject/$INVITATION_ID".replace("$INVITATION_ID", p_130109_1_), ""));
+	}
+	
+	public Boolean func_140054_c() throws ExceptionMcoService, IOException
+	{
+		String var1 = field_96388_b + "mco" + "/client/outdated";
+		String var2 = func_96377_a(Request.func_96358_a(var1));
+		return Boolean.valueOf(var2);
+	}
+	
+	public void func_140055_c(long p_140055_1_) throws ExceptionMcoService
+	{
+		String var3 = field_96388_b + "invites" + "/$WORLD_ID".replace("$WORLD_ID", String.valueOf(p_140055_1_));
+		func_96377_a(Request.func_96355_b(var3));
 	}
 	
 	public McoServerAddress func_96374_a(long par1) throws ExceptionMcoService, IOException
@@ -50,27 +116,19 @@
 	{
 		par1Request.func_100006_a("sid", field_96390_a);
 		par1Request.func_100006_a("user", field_100007_c);
-		if(field_98178_a instanceof McoOptionSome)
-		{
-			McoPair var2 = (McoPair) field_98178_a.func_98155_a();
-			par1Request.func_100006_a((String) var2.func_100005_a(), (String) var2.func_100004_b());
-		}
+		par1Request.func_100006_a("version", "1.6.2");
 		try
 		{
-			int var5 = par1Request.func_96362_a();
-			if(var5 == 503) throw new ExceptionRetryCall(10);
-			else if(var5 >= 200 && var5 < 300)
+			int var2 = par1Request.func_96362_a();
+			if(var2 == 503)
 			{
-				McoOption var3 = par1Request.func_98175_b();
-				if(var3 instanceof McoOptionSome)
-				{
-					field_98178_a = var3;
-				}
-				return par1Request.func_96364_c();
-			} else throw new ExceptionMcoService(par1Request.func_96362_a(), par1Request.func_96364_c());
+				int var3 = par1Request.func_111221_b();
+				throw new ExceptionRetryCall(var3);
+			} else if(var2 >= 200 && var2 < 300) return par1Request.func_96364_c();
+			else throw new ExceptionMcoService(par1Request.func_96362_a(), par1Request.func_96364_c(), par1Request.func_130110_g());
 		} catch(ExceptionMcoHttp var4)
 		{
-			throw new ExceptionMcoService(500, "Server not available!");
+			throw new ExceptionMcoService(500, "Server not available!", -1);
 		}
 	}
 	
@@ -95,11 +153,11 @@
 	
 	public void func_96381_a(long par1, String par3Str) throws ExceptionMcoService
 	{
-		String var4 = field_96388_b + "worlds" + "/$WORLD_ID/invites/$USER_NAME".replace("$WORLD_ID", String.valueOf(par1)).replace("$USER_NAME", par3Str);
+		String var4 = field_96388_b + "invites" + "/$WORLD_ID/invite/$USER_NAME".replace("$WORLD_ID", String.valueOf(par1)).replace("$USER_NAME", par3Str);
 		func_96377_a(Request.func_96355_b(var4));
 	}
 	
-	public ValueObjectList func_96382_a() throws ExceptionMcoService
+	public ValueObjectList func_96382_a() throws ExceptionMcoService, IOException
 	{
 		String var1 = func_96377_a(Request.func_96358_a(field_96388_b + "worlds"));
 		return ValueObjectList.func_98161_a(var1);
@@ -127,16 +185,17 @@
 	public void func_96386_a(String par1Str, String par2Str, String par3Str, String par4Str) throws ExceptionMcoService, UnsupportedEncodingException
 	{
 		StringBuilder var5 = new StringBuilder();
-		var5.append(field_96388_b).append("worlds").append("/$NAME/$LOCATION_ID".replace("$NAME", func_96380_a(par1Str)).replace("$LOCATION_ID", par3Str));
+		var5.append(field_96388_b).append("worlds").append("/$NAME/$LOCATION_ID".replace("$NAME", func_96380_a(par1Str)));
 		HashMap var6 = new HashMap();
 		if(par2Str != null && !par2Str.trim().equals(""))
 		{
 			var6.put("motd", par2Str);
 		}
-		if(par4Str != null && !par4Str.equals(""))
+		if(par3Str != null && !par3Str.equals(""))
 		{
-			var6.put("seed", par4Str);
+			var6.put("seed", par3Str);
 		}
+		var6.put("template", par4Str);
 		if(!var6.isEmpty())
 		{
 			boolean var7 = true;
@@ -159,7 +218,7 @@
 	
 	public McoServer func_96387_b(long par1, String par3Str) throws ExceptionMcoService, IOException
 	{
-		String var4 = field_96388_b + "worlds" + "/$WORLD_ID/invites/$USER_NAME".replace("$WORLD_ID", String.valueOf(par1)).replace("$USER_NAME", par3Str);
+		String var4 = field_96388_b + "invites" + "/$WORLD_ID/invite/$USER_NAME".replace("$WORLD_ID", String.valueOf(par1)).replace("$USER_NAME", par3Str);
 		String var5 = func_96377_a(Request.func_96361_b(var4, ""));
 		return McoServer.func_98165_c(var5);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/McoOption.java b/RMCClient/minecraft/net/minecraft/src/McoOption.java
deleted file mode 100644
index b79953f..0000000
--- a/RMCClient/minecraft/net/minecraft/src/McoOption.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package net.minecraft.src;
-
-public abstract class McoOption
-{
-	public abstract Object func_98155_a();
-	
-	public static McoOptionSome func_98153_a(Object par0Obj)
-	{
-		return new McoOptionSome(par0Obj);
-	}
-	
-	public static McoOptionNone func_98154_b()
-	{
-		return new McoOptionNone();
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/McoOptionNone.java b/RMCClient/minecraft/net/minecraft/src/McoOptionNone.java
deleted file mode 100644
index 4570fcf..0000000
--- a/RMCClient/minecraft/net/minecraft/src/McoOptionNone.java
+++ /dev/null
@@ -1,9 +0,0 @@
-package net.minecraft.src;
-
-public final class McoOptionNone extends McoOption
-{
-	@Override public Object func_98155_a()
-	{
-		throw new RuntimeException("None has no value");
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/McoOptionSome.java b/RMCClient/minecraft/net/minecraft/src/McoOptionSome.java
deleted file mode 100644
index 91e9322..0000000
--- a/RMCClient/minecraft/net/minecraft/src/McoOptionSome.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package net.minecraft.src;
-
-public final class McoOptionSome extends McoOption
-{
-	private final Object field_98156_a;
-	
-	public McoOptionSome(Object par1Obj)
-	{
-		field_98156_a = par1Obj;
-	}
-	
-	@Override public Object func_98155_a()
-	{
-		return field_98156_a;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/McoPair.java b/RMCClient/minecraft/net/minecraft/src/McoPair.java
deleted file mode 100644
index a5facb7..0000000
--- a/RMCClient/minecraft/net/minecraft/src/McoPair.java
+++ /dev/null
@@ -1,28 +0,0 @@
-package net.minecraft.src;
-
-public class McoPair
-{
-	private final Object field_98160_a;
-	private final Object field_98159_b;
-	
-	protected McoPair(Object par1Obj, Object par2Obj)
-	{
-		field_98160_a = par1Obj;
-		field_98159_b = par2Obj;
-	}
-	
-	public Object func_100004_b()
-	{
-		return field_98159_b;
-	}
-	
-	public Object func_100005_a()
-	{
-		return field_98160_a;
-	}
-	
-	public static McoPair func_98157_a(Object par0Obj, Object par1Obj)
-	{
-		return new McoPair(par0Obj, par1Obj);
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/McoServer.java b/RMCClient/minecraft/net/minecraft/src/McoServer.java
index 887e453..9be888f 100644
--- a/RMCClient/minecraft/net/minecraft/src/McoServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/McoServer.java
@@ -6,7 +6,7 @@
 import java.util.Iterator;
 import java.util.List;
 
-public class McoServer extends ValueObject
+public class McoServer
 {
 	public long field_96408_a;
 	public String field_96406_b;
@@ -16,15 +16,28 @@
 	public List field_96402_f;
 	public String field_96403_g;
 	public boolean field_98166_h;
+	public int field_110729_i;
+	public int field_110728_j;
 	public int field_104063_i;
 	public int field_96415_h;
-	public String field_96413_j = "";
 	public String field_96414_k = "";
 	public boolean field_96411_l;
-	public boolean field_102022_m = false;
+	public boolean field_102022_m;
 	public long field_96412_m;
-	private String field_96409_n = null;
-	private String field_96410_o = null;
+	private String field_96409_n;
+	private String field_96410_o;
+	
+	@Override public boolean equals(Object par1Obj)
+	{
+		if(par1Obj == null) return false;
+		else if(par1Obj == this) return true;
+		else if(par1Obj.getClass() != this.getClass()) return false;
+		else
+		{
+			McoServer var2 = (McoServer) par1Obj;
+			return new EqualsBuilder().append(field_96408_a, var2.field_96408_a).append(field_96406_b, var2.field_96406_b).append(field_96407_c, var2.field_96407_c).append(field_96404_d, var2.field_96404_d).append(field_96405_e, var2.field_96405_e).append(field_98166_h, var2.field_98166_h).isEquals();
+		}
+	}
 	
 	public String func_96397_a()
 	{
@@ -71,11 +84,15 @@
 	public void func_96401_a(McoServer par1McoServer)
 	{
 		field_96414_k = par1McoServer.field_96414_k;
-		field_96413_j = par1McoServer.field_96413_j;
 		field_96412_m = par1McoServer.field_96412_m;
 		field_96411_l = par1McoServer.field_96411_l;
 		field_96415_h = par1McoServer.field_96415_h;
 		field_102022_m = true;
+	}
+	
+	@Override public int hashCode()
+	{
+		return new HashCodeBuilder(17, 37).append(field_96408_a).append(field_96406_b).append(field_96407_c).append(field_96404_d).append(field_96405_e).append(field_98166_h).toHashCode();
 	}
 	
 	public static McoServer func_98163_a(JsonNode par0JsonNode)
@@ -98,6 +115,8 @@
 			var1.field_104063_i = Integer.parseInt(par0JsonNode.getNumberValue(new Object[] { "daysLeft" }));
 			var1.field_96403_g = par0JsonNode.getStringValue(new Object[] { "ip" });
 			var1.field_98166_h = par0JsonNode.getBooleanValue(new Object[] { "expired" }).booleanValue();
+			var1.field_110729_i = Integer.parseInt(par0JsonNode.getNumberValue(new Object[] { "difficulty" }));
+			var1.field_110728_j = Integer.parseInt(par0JsonNode.getNumberValue(new Object[] { "gameMode" }));
 		} catch(IllegalArgumentException var3)
 		{
 			;
diff --git a/RMCClient/minecraft/net/minecraft/src/McoServerList.java b/RMCClient/minecraft/net/minecraft/src/McoServerList.java
index f850751..c4e3b1d 100644
--- a/RMCClient/minecraft/net/minecraft/src/McoServerList.java
+++ b/RMCClient/minecraft/net/minecraft/src/McoServerList.java
@@ -1,33 +1,85 @@
 package net.minecraft.src;
 
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Collections;
+import java.util.Iterator;
 import java.util.List;
+import java.util.Set;
+
+import net.minecraft.client.Minecraft;
 
 public class McoServerList
 {
-	private volatile boolean field_98259_a = false;
-	private TimerTaskMcoServerListUpdate field_98257_b;
+	private volatile boolean field_98259_a;
+	private McoServerListUpdateTask field_98257_b = new McoServerListUpdateTask(this, (McoServerListEmptyAnon) null);
 	private java.util.Timer field_98258_c = new java.util.Timer();
-	private List field_98255_d = new ArrayList();
-	private boolean field_98256_e = false;
+	private Set field_140060_d = Sets.newHashSet();
+	private List field_98255_d = Lists.newArrayList();
+	private int field_130130_e;
+	private boolean field_140059_g;
 	private Session field_98254_f;
+	private int field_140061_i;
 	
-	public McoServerList(Session par1Session)
+	public McoServerList()
 	{
-		field_98254_f = par1Session;
-		field_98257_b = new TimerTaskMcoServerListUpdate(this, (McoServerListINNER1) null);
 		field_98258_c.schedule(field_98257_b, 0L, 10000L);
+		field_98254_f = Minecraft.getMinecraft().func_110432_I();
+	}
+	
+	private void func_130123_a(int p_130123_1_)
+	{
+		field_130130_e = p_130123_1_;
+	}
+	
+	public int func_130124_d()
+	{
+		return field_130130_e;
+	}
+	
+	public synchronized boolean func_130127_a()
+	{
+		return field_140059_g;
+	}
+	
+	public synchronized void func_130129_a(Session p_130129_1_)
+	{
+		field_98254_f = p_130129_1_;
+		if(field_98259_a)
+		{
+			field_98259_a = false;
+			field_98257_b = new McoServerListUpdateTask(this, (McoServerListEmptyAnon) null);
+			field_98258_c = new java.util.Timer();
+			field_98258_c.schedule(field_98257_b, 0L, 10000L);
+		}
+	}
+	
+	public int func_140056_e()
+	{
+		return field_140061_i;
+	}
+	
+	public synchronized void func_140058_a(McoServer p_140058_1_)
+	{
+		field_98255_d.remove(p_140058_1_);
+		field_140060_d.add(p_140058_1_);
 	}
 	
 	private synchronized void func_96426_a(List par1List)
 	{
-		if(!par1List.equals(field_98255_d))
+		int var2 = 0;
+		Iterator var3 = field_140060_d.iterator();
+		while(var3.hasNext())
 		{
-			field_98255_d = par1List;
-			field_98256_e = true;
+			McoServer var4 = (McoServer) var3.next();
+			if(par1List.remove(var4))
+			{
+				++var2;
+			}
 		}
+		if(var2 == 0)
+		{
+			field_140060_d.clear();
+		}
+		field_98255_d = par1List;
+		field_140059_g = true;
 	}
 	
 	public synchronized void func_98248_d()
@@ -39,17 +91,12 @@
 	
 	public synchronized void func_98250_b()
 	{
-		field_98256_e = false;
-	}
-	
-	public synchronized boolean func_98251_a()
-	{
-		return field_98256_e;
+		field_140059_g = false;
 	}
 	
 	public synchronized List func_98252_c()
 	{
-		return Collections.unmodifiableList(field_98255_d);
+		return Lists.newArrayList(field_98255_d);
 	}
 	
 	static Session func_100014_a(McoServerList par0McoServerList)
@@ -57,7 +104,17 @@
 		return par0McoServerList.field_98254_f;
 	}
 	
-	static void func_98247_a(McoServerList par0McoServerList, List par1List) throws IOException
+	static void func_130122_a(McoServerList p_130122_0_, int p_130122_1_)
+	{
+		p_130122_0_.func_130123_a(p_130122_1_);
+	}
+	
+	static int func_140057_b(McoServerList p_140057_0_, int p_140057_1_)
+	{
+		return p_140057_0_.field_140061_i = p_140057_1_;
+	}
+	
+	static void func_98247_a(McoServerList par0McoServerList, List par1List)
 	{
 		par0McoServerList.func_96426_a(par1List);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/McoServerListEmptyAnon.java b/RMCClient/minecraft/net/minecraft/src/McoServerListEmptyAnon.java
new file mode 100644
index 0000000..9f85961
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/McoServerListEmptyAnon.java
@@ -0,0 +1,5 @@
+package net.minecraft.src;
+
+class McoServerListEmptyAnon
+{
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/McoServerListINNER1.java b/RMCClient/minecraft/net/minecraft/src/McoServerListINNER1.java
deleted file mode 100644
index 349902d..0000000
--- a/RMCClient/minecraft/net/minecraft/src/McoServerListINNER1.java
+++ /dev/null
@@ -1,5 +0,0 @@
-package net.minecraft.src;
-
-class McoServerListINNER1
-{
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/McoServerListUpdateTask.java b/RMCClient/minecraft/net/minecraft/src/McoServerListUpdateTask.java
new file mode 100644
index 0000000..392e747
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/McoServerListUpdateTask.java
@@ -0,0 +1,93 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.util.Collections;
+import java.util.List;
+import java.util.TimerTask;
+
+import net.minecraft.client.Minecraft;
+
+class McoServerListUpdateTask extends TimerTask
+{
+	private McoClient field_140066_b;
+	final McoServerList field_140067_a;
+	
+	private McoServerListUpdateTask(McoServerList p_i2328_1_)
+	{
+		field_140067_a = p_i2328_1_;
+	}
+	
+	McoServerListUpdateTask(McoServerList p_i2329_1_, McoServerListEmptyAnon p_i2329_2_)
+	{
+		this(p_i2329_1_);
+	}
+	
+	private void func_140062_a()
+	{
+		try
+		{
+			if(McoServerList.func_100014_a(field_140067_a) != null)
+			{
+				field_140066_b = new McoClient(McoServerList.func_100014_a(field_140067_a));
+				List var1 = field_140066_b.func_96382_a().field_96430_d;
+				if(var1 != null)
+				{
+					func_140065_a(var1);
+					McoServerList.func_98247_a(field_140067_a, var1);
+				}
+			}
+		} catch(ExceptionMcoService var2)
+		{
+			Minecraft.getMinecraft().getLogAgent().logSevere(var2.toString());
+		} catch(IOException var3)
+		{
+			Minecraft.getMinecraft().getLogAgent().logWarning("Realms: could not parse response from server");
+		}
+	}
+	
+	private void func_140063_b()
+	{
+		try
+		{
+			if(McoServerList.func_100014_a(field_140067_a) != null)
+			{
+				int var1 = field_140066_b.func_130106_e();
+				McoServerList.func_130122_a(field_140067_a, var1);
+			}
+		} catch(ExceptionMcoService var2)
+		{
+			Minecraft.getMinecraft().getLogAgent().logSevere(var2.toString());
+		}
+	}
+	
+	private void func_140064_c()
+	{
+		try
+		{
+			if(McoServerList.func_100014_a(field_140067_a) != null)
+			{
+				McoClient var1 = new McoClient(McoServerList.func_100014_a(field_140067_a));
+				McoServerList.func_140057_b(field_140067_a, var1.func_96379_c());
+			}
+		} catch(ExceptionMcoService var2)
+		{
+			Minecraft.getMinecraft().getLogAgent().logSevere(var2.toString());
+			McoServerList.func_140057_b(field_140067_a, 0);
+		}
+	}
+	
+	private void func_140065_a(List p_140065_1_)
+	{
+		Collections.sort(p_140065_1_, new McoServerListUpdateTaskComparator(this, McoServerList.func_100014_a(field_140067_a).func_111285_a(), (McoServerListEmptyAnon) null));
+	}
+	
+	@Override public void run()
+	{
+		if(!McoServerList.func_98249_b(field_140067_a))
+		{
+			func_140064_c();
+			func_140062_a();
+			func_140063_b();
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/McoServerListUpdateTaskComparator.java b/RMCClient/minecraft/net/minecraft/src/McoServerListUpdateTaskComparator.java
new file mode 100644
index 0000000..e703d8c
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/McoServerListUpdateTaskComparator.java
@@ -0,0 +1,41 @@
+package net.minecraft.src;
+
+import java.util.Comparator;
+
+class McoServerListUpdateTaskComparator implements Comparator
+{
+	private final String field_140069_b;
+	final McoServerListUpdateTask field_140070_a;
+	
+	private McoServerListUpdateTaskComparator(McoServerListUpdateTask p_i2326_1_, String p_i2326_2_)
+	{
+		field_140070_a = p_i2326_1_;
+		field_140069_b = p_i2326_2_;
+	}
+	
+	McoServerListUpdateTaskComparator(McoServerListUpdateTask p_i2327_1_, String p_i2327_2_, McoServerListEmptyAnon p_i2327_3_)
+	{
+		this(p_i2327_1_, p_i2327_2_);
+	}
+	
+	@Override public int compare(Object par1Obj, Object par2Obj)
+	{
+		return func_140068_a((McoServer) par1Obj, (McoServer) par2Obj);
+	}
+	
+	public int func_140068_a(McoServer p_140068_1_, McoServer p_140068_2_)
+	{
+		if(p_140068_1_.field_96405_e.equals(p_140068_2_.field_96405_e)) return p_140068_1_.field_96408_a < p_140068_2_.field_96408_a ? 1 : p_140068_1_.field_96408_a > p_140068_2_.field_96408_a ? -1 : 0;
+		else if(p_140068_1_.field_96405_e.equals(field_140069_b)) return -1;
+		else if(p_140068_2_.field_96405_e.equals(field_140069_b)) return 1;
+		else
+		{
+			if(p_140068_1_.field_96404_d.equals("CLOSED") || p_140068_2_.field_96404_d.equals("CLOSED"))
+			{
+				if(p_140068_1_.field_96404_d.equals("CLOSED")) return 1;
+				if(p_140068_2_.field_96404_d.equals("CLOSED")) return 0;
+			}
+			return p_140068_1_.field_96408_a < p_140068_2_.field_96408_a ? 1 : p_140068_1_.field_96408_a > p_140068_2_.field_96408_a ? -1 : 0;
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/MemoryConnection.java b/RMCClient/minecraft/net/minecraft/src/MemoryConnection.java
index c7e8c34..ca3c9a5 100644
--- a/RMCClient/minecraft/net/minecraft/src/MemoryConnection.java
+++ b/RMCClient/minecraft/net/minecraft/src/MemoryConnection.java
@@ -13,15 +13,15 @@
 	private final ILogAgent field_98214_c;
 	private MemoryConnection pairedConnection;
 	private NetHandler myNetHandler;
-	private boolean shuttingDown = false;
+	private boolean shuttingDown;
 	private String shutdownReason = "";
 	private Object[] field_74439_g;
-	private boolean gamePaused = false;
+	private boolean gamePaused;
 	
-	public MemoryConnection(ILogAgent par1ILogAgent, NetHandler par2NetHandler)
+	public MemoryConnection(ILogAgent p_i1392_1_, NetHandler p_i1392_2_)
 	{
-		myNetHandler = par2NetHandler;
-		field_98214_c = par1ILogAgent;
+		myNetHandler = p_i1392_2_;
+		field_98214_c = p_i1392_1_;
 	}
 	
 	@Override public void addToSendQueue(Packet par1Packet)
diff --git a/RMCClient/minecraft/net/minecraft/src/MerchantRecipe.java b/RMCClient/minecraft/net/minecraft/src/MerchantRecipe.java
index 4094a37..3b980f3 100644
--- a/RMCClient/minecraft/net/minecraft/src/MerchantRecipe.java
+++ b/RMCClient/minecraft/net/minecraft/src/MerchantRecipe.java
@@ -8,27 +8,27 @@
 	private int toolUses;
 	private int maxTradeUses;
 	
-	public MerchantRecipe(ItemStack par1ItemStack, Item par2Item)
+	public MerchantRecipe(ItemStack p_i1943_1_, Item p_i1943_2_)
 	{
-		this(par1ItemStack, new ItemStack(par2Item));
+		this(p_i1943_1_, new ItemStack(p_i1943_2_));
 	}
 	
-	public MerchantRecipe(ItemStack par1ItemStack, ItemStack par2ItemStack)
+	public MerchantRecipe(ItemStack p_i1942_1_, ItemStack p_i1942_2_)
 	{
-		this(par1ItemStack, (ItemStack) null, par2ItemStack);
+		this(p_i1942_1_, (ItemStack) null, p_i1942_2_);
 	}
 	
-	public MerchantRecipe(ItemStack par1ItemStack, ItemStack par2ItemStack, ItemStack par3ItemStack)
+	public MerchantRecipe(ItemStack p_i1941_1_, ItemStack p_i1941_2_, ItemStack p_i1941_3_)
 	{
-		itemToBuy = par1ItemStack;
-		secondItemToBuy = par2ItemStack;
-		itemToSell = par3ItemStack;
+		itemToBuy = p_i1941_1_;
+		secondItemToBuy = p_i1941_2_;
+		itemToSell = p_i1941_3_;
 		maxTradeUses = 7;
 	}
 	
-	public MerchantRecipe(NBTTagCompound par1NBTTagCompound)
+	public MerchantRecipe(NBTTagCompound p_i1940_1_)
 	{
-		readFromTags(par1NBTTagCompound);
+		readFromTags(p_i1940_1_);
 	}
 	
 	public void func_82783_a(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/MerchantRecipeList.java b/RMCClient/minecraft/net/minecraft/src/MerchantRecipeList.java
index 69caba6..60c12b9 100644
--- a/RMCClient/minecraft/net/minecraft/src/MerchantRecipeList.java
+++ b/RMCClient/minecraft/net/minecraft/src/MerchantRecipeList.java
@@ -13,9 +13,9 @@
 	{
 	}
 	
-	public MerchantRecipeList(NBTTagCompound par1NBTTagCompound)
+	public MerchantRecipeList(NBTTagCompound p_i1944_1_)
 	{
-		readRecipiesFromTags(par1NBTTagCompound);
+		readRecipiesFromTags(p_i1944_1_);
 	}
 	
 	public void addToListWithCheck(MerchantRecipe par1MerchantRecipe)
diff --git a/RMCClient/minecraft/net/minecraft/src/MessageComponentSerializer.java b/RMCClient/minecraft/net/minecraft/src/MessageComponentSerializer.java
new file mode 100644
index 0000000..1995b1e
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/MessageComponentSerializer.java
@@ -0,0 +1,163 @@
+package net.minecraft.src;
+
+import java.lang.reflect.Type;
+import java.util.ArrayList;
+import java.util.Iterator;
+
+public class MessageComponentSerializer implements JsonDeserializer, JsonSerializer
+{
+	public Object deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_)
+	{
+		return func_111056_a(p_deserialize_1_, p_deserialize_2_, p_deserialize_3_);
+	}
+	
+	public JsonElement func_111055_a(ChatMessageComponent p_111055_1_, Type p_111055_2_, JsonSerializationContext p_111055_3_)
+	{
+		JsonObject var4 = new JsonObject();
+		if(p_111055_1_.func_111065_a() != null)
+		{
+			var4.addProperty("color", p_111055_1_.func_111065_a().func_96297_d());
+		}
+		if(p_111055_1_.func_111058_b() != null)
+		{
+			var4.addProperty("bold", p_111055_1_.func_111058_b());
+		}
+		if(p_111055_1_.func_111064_c() != null)
+		{
+			var4.addProperty("italic", p_111055_1_.func_111064_c());
+		}
+		if(p_111055_1_.func_111067_d() != null)
+		{
+			var4.addProperty("underlined", p_111055_1_.func_111067_d());
+		}
+		if(p_111055_1_.func_111076_e() != null)
+		{
+			var4.addProperty("obfuscated", p_111055_1_.func_111076_e());
+		}
+		if(p_111055_1_.func_111075_f() != null)
+		{
+			var4.addProperty("text", p_111055_1_.func_111075_f());
+		} else if(p_111055_1_.func_111074_g() != null)
+		{
+			var4.addProperty("translate", p_111055_1_.func_111074_g());
+			if(p_111055_1_.func_111069_h() != null && !p_111055_1_.func_111069_h().isEmpty())
+			{
+				var4.add("using", func_111057_b(p_111055_1_, p_111055_2_, p_111055_3_));
+			}
+		} else if(p_111055_1_.func_111069_h() != null && !p_111055_1_.func_111069_h().isEmpty())
+		{
+			var4.add("text", func_111057_b(p_111055_1_, p_111055_2_, p_111055_3_));
+		}
+		return var4;
+	}
+	
+	public ChatMessageComponent func_111056_a(JsonElement p_111056_1_, Type p_111056_2_, JsonDeserializationContext p_111056_3_)
+	{
+		ChatMessageComponent var4 = new ChatMessageComponent();
+		JsonObject var5 = (JsonObject) p_111056_1_;
+		JsonElement var6 = var5.get("text");
+		JsonElement var7 = var5.get("translate");
+		JsonElement var8 = var5.get("color");
+		JsonElement var9 = var5.get("bold");
+		JsonElement var10 = var5.get("italic");
+		JsonElement var11 = var5.get("underlined");
+		JsonElement var12 = var5.get("obfuscated");
+		if(var8 != null && var8.isJsonPrimitive())
+		{
+			EnumChatFormatting var13 = EnumChatFormatting.func_96300_b(var8.getAsString());
+			if(var13 == null || !var13.func_96302_c()) throw new JsonParseException("Given color (" + var8.getAsString() + ") is not a valid selection");
+			var4.func_111059_a(var13);
+		}
+		if(var9 != null && var9.isJsonPrimitive())
+		{
+			var4.func_111071_a(Boolean.valueOf(var9.getAsBoolean()));
+		}
+		if(var10 != null && var10.isJsonPrimitive())
+		{
+			var4.func_111063_b(Boolean.valueOf(var10.getAsBoolean()));
+		}
+		if(var11 != null && var11.isJsonPrimitive())
+		{
+			var4.func_111081_c(Boolean.valueOf(var11.getAsBoolean()));
+		}
+		if(var12 != null && var12.isJsonPrimitive())
+		{
+			var4.func_111061_d(Boolean.valueOf(var12.getAsBoolean()));
+		}
+		if(var6 != null)
+		{
+			if(var6.isJsonArray())
+			{
+				JsonArray var18 = var6.getAsJsonArray();
+				Iterator var14 = var18.iterator();
+				while(var14.hasNext())
+				{
+					JsonElement var15 = (JsonElement) var14.next();
+					if(var15.isJsonPrimitive())
+					{
+						var4.func_111079_a(var15.getAsString());
+					} else if(var15.isJsonObject())
+					{
+						var4.func_111073_a(func_111056_a(var15, p_111056_2_, p_111056_3_));
+					}
+				}
+			} else if(var6.isJsonPrimitive())
+			{
+				var4.func_111079_a(var6.getAsString());
+			}
+		} else if(var7 != null && var7.isJsonPrimitive())
+		{
+			JsonElement var17 = var5.get("using");
+			if(var17 != null)
+			{
+				if(var17.isJsonArray())
+				{
+					ArrayList var20 = Lists.newArrayList();
+					Iterator var19 = var17.getAsJsonArray().iterator();
+					while(var19.hasNext())
+					{
+						JsonElement var16 = (JsonElement) var19.next();
+						if(var16.isJsonPrimitive())
+						{
+							var20.add(var16.getAsString());
+						} else if(var16.isJsonObject())
+						{
+							var20.add(func_111056_a(var16, p_111056_2_, p_111056_3_));
+						}
+					}
+					var4.func_111080_a(var7.getAsString(), var20.toArray());
+				} else if(var17.isJsonPrimitive())
+				{
+					var4.func_111080_a(var7.getAsString(), new Object[] { var17.getAsString() });
+				}
+			} else
+			{
+				var4.func_111072_b(var7.getAsString());
+			}
+		}
+		return var4;
+	}
+	
+	private JsonArray func_111057_b(ChatMessageComponent p_111057_1_, Type p_111057_2_, JsonSerializationContext p_111057_3_)
+	{
+		JsonArray var4 = new JsonArray();
+		Iterator var5 = p_111057_1_.func_111069_h().iterator();
+		while(var5.hasNext())
+		{
+			ChatMessageComponent var6 = (ChatMessageComponent) var5.next();
+			if(var6.func_111075_f() != null)
+			{
+				var4.add(new JsonPrimitive(var6.func_111075_f()));
+			} else
+			{
+				var4.add(func_111055_a(var6, p_111057_2_, p_111057_3_));
+			}
+		}
+		return var4;
+	}
+	
+	public JsonElement serialize(Object p_serialize_1_, Type p_serialize_2_, JsonSerializationContext p_serialize_3_)
+	{
+		return func_111055_a((ChatMessageComponent) p_serialize_1_, p_serialize_2_, p_serialize_3_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/MetadataSection.java b/RMCClient/minecraft/net/minecraft/src/MetadataSection.java
new file mode 100644
index 0000000..c2554f6
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/MetadataSection.java
@@ -0,0 +1,5 @@
+package net.minecraft.src;
+
+public interface MetadataSection
+{
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/MetadataSectionSerializer.java b/RMCClient/minecraft/net/minecraft/src/MetadataSectionSerializer.java
new file mode 100644
index 0000000..17c409a
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/MetadataSectionSerializer.java
@@ -0,0 +1,7 @@
+package net.minecraft.src;
+
+
+public interface MetadataSectionSerializer extends JsonDeserializer
+{
+	String func_110483_a();
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/MetadataSerializer.java b/RMCClient/minecraft/net/minecraft/src/MetadataSerializer.java
new file mode 100644
index 0000000..80e1cd0
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/MetadataSerializer.java
@@ -0,0 +1,38 @@
+package net.minecraft.src;
+
+
+public class MetadataSerializer
+{
+	private final IRegistry field_110508_a = new RegistrySimple();
+	private final GsonBuilder field_110506_b = new GsonBuilder();
+	private Gson field_110507_c;
+	
+	public MetadataSection func_110503_a(String p_110503_1_, JsonObject p_110503_2_)
+	{
+		if(p_110503_1_ == null) throw new IllegalArgumentException("Metadata section name cannot be null");
+		else if(!p_110503_2_.has(p_110503_1_)) return null;
+		else if(!p_110503_2_.get(p_110503_1_).isJsonObject()) throw new IllegalArgumentException("Invalid metadata for \'" + p_110503_1_ + "\' - expected object, found " + p_110503_2_.get(p_110503_1_));
+		else
+		{
+			MetadataSerializerRegistration var3 = (MetadataSerializerRegistration) field_110508_a.func_82594_a(p_110503_1_);
+			if(var3 == null) throw new IllegalArgumentException("Don\'t know how to handle metadata section \'" + p_110503_1_ + "\'");
+			else return (MetadataSection) func_110505_a().fromJson(p_110503_2_.getAsJsonObject(p_110503_1_), var3.field_110500_b);
+		}
+	}
+	
+	public void func_110504_a(MetadataSectionSerializer p_110504_1_, Class p_110504_2_)
+	{
+		field_110508_a.putObject(p_110504_1_.func_110483_a(), new MetadataSerializerRegistration(this, p_110504_1_, p_110504_2_, (MetadataSerializerEmptyAnon) null));
+		field_110506_b.registerTypeAdapter(p_110504_2_, p_110504_1_);
+		field_110507_c = null;
+	}
+	
+	private Gson func_110505_a()
+	{
+		if(field_110507_c == null)
+		{
+			field_110507_c = field_110506_b.create();
+		}
+		return field_110507_c;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/MetadataSerializerEmptyAnon.java b/RMCClient/minecraft/net/minecraft/src/MetadataSerializerEmptyAnon.java
new file mode 100644
index 0000000..3baafb7
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/MetadataSerializerEmptyAnon.java
@@ -0,0 +1,5 @@
+package net.minecraft.src;
+
+class MetadataSerializerEmptyAnon
+{
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/MetadataSerializerRegistration.java b/RMCClient/minecraft/net/minecraft/src/MetadataSerializerRegistration.java
new file mode 100644
index 0000000..9991799
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/MetadataSerializerRegistration.java
@@ -0,0 +1,20 @@
+package net.minecraft.src;
+
+class MetadataSerializerRegistration
+{
+	final MetadataSectionSerializer field_110502_a;
+	final Class field_110500_b;
+	final MetadataSerializer field_110501_c;
+	
+	private MetadataSerializerRegistration(MetadataSerializer p_i1305_1_, MetadataSectionSerializer p_i1305_2_, Class p_i1305_3_)
+	{
+		field_110501_c = p_i1305_1_;
+		field_110502_a = p_i1305_2_;
+		field_110500_b = p_i1305_3_;
+	}
+	
+	MetadataSerializerRegistration(MetadataSerializer p_i1306_1_, MetadataSectionSerializer p_i1306_2_, Class p_i1306_3_, MetadataSerializerEmptyAnon p_i1306_4_)
+	{
+		this(p_i1306_1_, p_i1306_2_, p_i1306_3_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/MinecraftAppletImpl.java b/RMCClient/minecraft/net/minecraft/src/MinecraftAppletImpl.java
deleted file mode 100644
index 0258fd7..0000000
--- a/RMCClient/minecraft/net/minecraft/src/MinecraftAppletImpl.java
+++ /dev/null
@@ -1,39 +0,0 @@
-package net.minecraft.src;
-
-import java.awt.BorderLayout;
-import java.awt.Canvas;
-
-import net.minecraft.client.Minecraft;
-import net.minecraft.client.MinecraftApplet;
-
-import org.lwjgl.LWJGLException;
-
-public class MinecraftAppletImpl extends Minecraft
-{
-	final MinecraftApplet mainFrame;
-	
-	public MinecraftAppletImpl(MinecraftApplet par1MinecraftApplet, Canvas par2Canvas, MinecraftApplet par3MinecraftApplet, int par4, int par5, boolean par6)
-	{
-		super(par2Canvas, par3MinecraftApplet, par4, par5, par6);
-		mainFrame = par1MinecraftApplet;
-	}
-	
-	@Override public void displayCrashReportInternal(CrashReport par1CrashReport)
-	{
-		mainFrame.removeAll();
-		mainFrame.setLayout(new BorderLayout());
-		mainFrame.add(new PanelCrashReport(par1CrashReport), "Center");
-		mainFrame.validate();
-	}
-	
-	@Override public void startGame() throws LWJGLException
-	{
-		mcDataDir = getMinecraftDir();
-		gameSettings = new GameSettings(this, mcDataDir);
-		if(gameSettings.overrideHeight > 0 && gameSettings.overrideWidth > 0 && mainFrame.getParent() != null && mainFrame.getParent().getParent() != null)
-		{
-			mainFrame.getParent().getParent().setSize(gameSettings.overrideWidth, gameSettings.overrideHeight);
-		}
-		super.startGame();
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/MinecraftException.java b/RMCClient/minecraft/net/minecraft/src/MinecraftException.java
index 1517801..f41075d 100644
--- a/RMCClient/minecraft/net/minecraft/src/MinecraftException.java
+++ b/RMCClient/minecraft/net/minecraft/src/MinecraftException.java
@@ -4,8 +4,8 @@
 {
 	private static final long serialVersionUID = 1L;
 	
-	public MinecraftException(String par1Str)
+	public MinecraftException(String p_i1955_1_)
 	{
-		super(par1Str);
+		super(p_i1955_1_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/MinecraftFakeLauncher.java b/RMCClient/minecraft/net/minecraft/src/MinecraftFakeLauncher.java
deleted file mode 100644
index 86f1d46..0000000
--- a/RMCClient/minecraft/net/minecraft/src/MinecraftFakeLauncher.java
+++ /dev/null
@@ -1,49 +0,0 @@
-package net.minecraft.src;
-
-import java.applet.Applet;
-import java.applet.AppletStub;
-import java.net.MalformedURLException;
-import java.net.URL;
-import java.util.Map;
-
-public class MinecraftFakeLauncher extends Applet implements AppletStub
-{
-	private static final long serialVersionUID = 1L;
-	final Map arguments;
-	
-	public MinecraftFakeLauncher(Map par1Map)
-	{
-		arguments = par1Map;
-	}
-	
-	@Override public void appletResize(int par1, int par2)
-	{
-	}
-	
-	@Override public URL getDocumentBase()
-	{
-		try
-		{
-			return new URL("http://www.minecraft.net/game/");
-		} catch(MalformedURLException var2)
-		{
-			var2.printStackTrace();
-			return null;
-		}
-	}
-	
-	@Override public String getParameter(String par1Str)
-	{
-		if(arguments.containsKey(par1Str)) return (String) arguments.get(par1Str);
-		else
-		{
-			System.err.println("Client asked for parameter: " + par1Str);
-			return null;
-		}
-	}
-	
-	@Override public boolean isActive()
-	{
-		return true;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/MinecraftINNER13.java b/RMCClient/minecraft/net/minecraft/src/MinecraftINNER13.java
new file mode 100644
index 0000000..a9d4312
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/MinecraftINNER13.java
@@ -0,0 +1,31 @@
+package net.minecraft.src;
+
+import java.util.concurrent.Callable;
+
+import net.minecraft.client.Minecraft;
+
+class MinecraftINNER13 implements Callable
+{
+	final Minecraft field_142056_a;
+	
+	MinecraftINNER13(Minecraft p_i2341_1_)
+	{
+		field_142056_a = p_i2341_1_;
+	}
+	
+	@Override public Object call()
+	{
+		return func_142055_a();
+	}
+	
+	public String func_142055_a()
+	{
+		int var1 = field_142056_a.theWorld.getWorldVec3Pool().getPoolSize();
+		int var2 = 56 * var1;
+		int var3 = var2 / 1024 / 1024;
+		int var4 = field_142056_a.theWorld.getWorldVec3Pool().func_82590_d();
+		int var5 = 56 * var4;
+		int var6 = var5 / 1024 / 1024;
+		return var1 + " (" + var2 + " bytes; " + var3 + " MB) allocated, " + var4 + " (" + var5 + " bytes; " + var6 + " MB) used";
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/MobSpawnerBaseLogic.java b/RMCClient/minecraft/net/minecraft/src/MobSpawnerBaseLogic.java
index 55753db..0b38d09 100644
--- a/RMCClient/minecraft/net/minecraft/src/MobSpawnerBaseLogic.java
+++ b/RMCClient/minecraft/net/minecraft/src/MobSpawnerBaseLogic.java
@@ -8,10 +8,10 @@
 {
 	public int spawnDelay = 20;
 	private String mobID = "Pig";
-	private List minecartToSpawn = null;
-	private WeightedRandomMinecart randomMinecart = null;
+	private List minecartToSpawn;
+	private WeightedRandomMinecart randomMinecart;
 	public double field_98287_c;
-	public double field_98284_d = 0.0D;
+	public double field_98284_d;
 	private int minSpawnDelay = 200;
 	private int maxSpawnDelay = 800;
 	private int spawnCount = 4;
@@ -46,7 +46,7 @@
 			for(Entity var9 = par1Entity; var2.hasKey("Riding"); var2 = var10)
 			{
 				var10 = var2.getCompoundTag("Riding");
-				Entity var5 = EntityList.createEntityByName(var10.getString("id"), getSpawnerWorld());
+				Entity var5 = EntityList.createEntityByName(var10.getString("id"), par1Entity.worldObj);
 				if(var5 != null)
 				{
 					NBTTagCompound var6 = new NBTTagCompound();
@@ -59,14 +59,17 @@
 					}
 					var5.readFromNBT(var6);
 					var5.setLocationAndAngles(var9.posX, var9.posY, var9.posZ, var9.rotationYaw, var9.rotationPitch);
-					getSpawnerWorld().spawnEntityInWorld(var5);
+					if(par1Entity.worldObj != null)
+					{
+						par1Entity.worldObj.spawnEntityInWorld(var5);
+					}
 					var9.mountEntity(var5);
 				}
 				var9 = var5;
 			}
-		} else if(par1Entity instanceof EntityLiving && par1Entity.worldObj != null)
+		} else if(par1Entity instanceof EntityLivingBase && par1Entity.worldObj != null)
 		{
-			((EntityLiving) par1Entity).initCreature();
+			((EntityLiving) par1Entity).func_110161_a((EntityLivingData) null);
 			getSpawnerWorld().spawnEntityInWorld(par1Entity);
 		}
 		return par1Entity;
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelBase.java b/RMCClient/minecraft/net/minecraft/src/ModelBase.java
index 74ea532..32744ec 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelBase.java
@@ -9,7 +9,7 @@
 public abstract class ModelBase
 {
 	public float onGround;
-	public boolean isRiding = false;
+	public boolean isRiding;
 	public List boxList = new ArrayList();
 	public boolean isChild = true;
 	private Map modelTextureMap = new HashMap();
@@ -30,7 +30,7 @@
 	{
 	}
 	
-	public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelBat.java b/RMCClient/minecraft/net/minecraft/src/ModelBat.java
index a0b42a6..6890e13 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelBat.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelBat.java
@@ -51,8 +51,10 @@
 	@Override public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
 	{
 		EntityBat var8 = (EntityBat) par1Entity;
+		float var9;
 		if(var8.getIsBatHanging())
 		{
+			var9 = 180F / (float) Math.PI;
 			batHead.rotateAngleX = par6 / (180F / (float) Math.PI);
 			batHead.rotateAngleY = (float) Math.PI - par5 / (180F / (float) Math.PI);
 			batHead.rotateAngleZ = (float) Math.PI;
@@ -68,6 +70,7 @@
 			batOuterLeftWing.rotateAngleY = -batOuterRightWing.rotateAngleY;
 		} else
 		{
+			var9 = 180F / (float) Math.PI;
 			batHead.rotateAngleX = par6 / (180F / (float) Math.PI);
 			batHead.rotateAngleY = par5 / (180F / (float) Math.PI);
 			batHead.rotateAngleZ = 0.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelBiped.java b/RMCClient/minecraft/net/minecraft/src/ModelBiped.java
index 5199491..d825bc9 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelBiped.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelBiped.java
@@ -23,46 +23,42 @@
 		this(0.0F);
 	}
 	
-	public ModelBiped(float par1)
+	public ModelBiped(float p_i1148_1_)
 	{
-		this(par1, 0.0F, 64, 32);
+		this(p_i1148_1_, 0.0F, 64, 32);
 	}
 	
-	public ModelBiped(float par1, float par2, int par3, int par4)
+	public ModelBiped(float p_i1149_1_, float p_i1149_2_, int p_i1149_3_, int p_i1149_4_)
 	{
-		heldItemLeft = 0;
-		heldItemRight = 0;
-		isSneak = false;
-		aimedBow = false;
-		textureWidth = par3;
-		textureHeight = par4;
+		textureWidth = p_i1149_3_;
+		textureHeight = p_i1149_4_;
 		bipedCloak = new ModelRenderer(this, 0, 0);
-		bipedCloak.addBox(-5.0F, 0.0F, -1.0F, 10, 16, 1, par1);
+		bipedCloak.addBox(-5.0F, 0.0F, -1.0F, 10, 16, 1, p_i1149_1_);
 		bipedEars = new ModelRenderer(this, 24, 0);
-		bipedEars.addBox(-3.0F, -6.0F, -1.0F, 6, 6, 1, par1);
+		bipedEars.addBox(-3.0F, -6.0F, -1.0F, 6, 6, 1, p_i1149_1_);
 		bipedHead = new ModelRenderer(this, 0, 0);
-		bipedHead.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, par1);
-		bipedHead.setRotationPoint(0.0F, 0.0F + par2, 0.0F);
+		bipedHead.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, p_i1149_1_);
+		bipedHead.setRotationPoint(0.0F, 0.0F + p_i1149_2_, 0.0F);
 		bipedHeadwear = new ModelRenderer(this, 32, 0);
-		bipedHeadwear.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, par1 + 0.5F);
-		bipedHeadwear.setRotationPoint(0.0F, 0.0F + par2, 0.0F);
+		bipedHeadwear.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, p_i1149_1_ + 0.5F);
+		bipedHeadwear.setRotationPoint(0.0F, 0.0F + p_i1149_2_, 0.0F);
 		bipedBody = new ModelRenderer(this, 16, 16);
-		bipedBody.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4, par1);
-		bipedBody.setRotationPoint(0.0F, 0.0F + par2, 0.0F);
+		bipedBody.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4, p_i1149_1_);
+		bipedBody.setRotationPoint(0.0F, 0.0F + p_i1149_2_, 0.0F);
 		bipedRightArm = new ModelRenderer(this, 40, 16);
-		bipedRightArm.addBox(-3.0F, -2.0F, -2.0F, 4, 12, 4, par1);
-		bipedRightArm.setRotationPoint(-5.0F, 2.0F + par2, 0.0F);
+		bipedRightArm.addBox(-3.0F, -2.0F, -2.0F, 4, 12, 4, p_i1149_1_);
+		bipedRightArm.setRotationPoint(-5.0F, 2.0F + p_i1149_2_, 0.0F);
 		bipedLeftArm = new ModelRenderer(this, 40, 16);
 		bipedLeftArm.mirror = true;
-		bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4, par1);
-		bipedLeftArm.setRotationPoint(5.0F, 2.0F + par2, 0.0F);
+		bipedLeftArm.addBox(-1.0F, -2.0F, -2.0F, 4, 12, 4, p_i1149_1_);
+		bipedLeftArm.setRotationPoint(5.0F, 2.0F + p_i1149_2_, 0.0F);
 		bipedRightLeg = new ModelRenderer(this, 0, 16);
-		bipedRightLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, par1);
-		bipedRightLeg.setRotationPoint(-1.9F, 12.0F + par2, 0.0F);
+		bipedRightLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, p_i1149_1_);
+		bipedRightLeg.setRotationPoint(-1.9F, 12.0F + p_i1149_2_, 0.0F);
 		bipedLeftLeg = new ModelRenderer(this, 0, 16);
 		bipedLeftLeg.mirror = true;
-		bipedLeftLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, par1);
-		bipedLeftLeg.setRotationPoint(1.9F, 12.0F + par2, 0.0F);
+		bipedLeftLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, p_i1149_1_);
+		bipedLeftLeg.setRotationPoint(1.9F, 12.0F + p_i1149_2_, 0.0F);
 	}
 	
 	@Override public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelBox.java b/RMCClient/minecraft/net/minecraft/src/ModelBox.java
index 0c4d5dd..7b3d345 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelBox.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelBox.java
@@ -12,39 +12,39 @@
 	public final float posZ2;
 	public String field_78247_g;
 	
-	public ModelBox(ModelRenderer par1ModelRenderer, int par2, int par3, float par4, float par5, float par6, int par7, int par8, int par9, float par10)
+	public ModelBox(ModelRenderer p_i1171_1_, int p_i1171_2_, int p_i1171_3_, float p_i1171_4_, float p_i1171_5_, float p_i1171_6_, int p_i1171_7_, int p_i1171_8_, int p_i1171_9_, float p_i1171_10_)
 	{
-		posX1 = par4;
-		posY1 = par5;
-		posZ1 = par6;
-		posX2 = par4 + par7;
-		posY2 = par5 + par8;
-		posZ2 = par6 + par9;
+		posX1 = p_i1171_4_;
+		posY1 = p_i1171_5_;
+		posZ1 = p_i1171_6_;
+		posX2 = p_i1171_4_ + p_i1171_7_;
+		posY2 = p_i1171_5_ + p_i1171_8_;
+		posZ2 = p_i1171_6_ + p_i1171_9_;
 		vertexPositions = new PositionTextureVertex[8];
 		quadList = new TexturedQuad[6];
-		float var11 = par4 + par7;
-		float var12 = par5 + par8;
-		float var13 = par6 + par9;
-		par4 -= par10;
-		par5 -= par10;
-		par6 -= par10;
-		var11 += par10;
-		var12 += par10;
-		var13 += par10;
-		if(par1ModelRenderer.mirror)
+		float var11 = p_i1171_4_ + p_i1171_7_;
+		float var12 = p_i1171_5_ + p_i1171_8_;
+		float var13 = p_i1171_6_ + p_i1171_9_;
+		p_i1171_4_ -= p_i1171_10_;
+		p_i1171_5_ -= p_i1171_10_;
+		p_i1171_6_ -= p_i1171_10_;
+		var11 += p_i1171_10_;
+		var12 += p_i1171_10_;
+		var13 += p_i1171_10_;
+		if(p_i1171_1_.mirror)
 		{
 			float var14 = var11;
-			var11 = par4;
-			par4 = var14;
+			var11 = p_i1171_4_;
+			p_i1171_4_ = var14;
 		}
-		PositionTextureVertex var23 = new PositionTextureVertex(par4, par5, par6, 0.0F, 0.0F);
-		PositionTextureVertex var15 = new PositionTextureVertex(var11, par5, par6, 0.0F, 8.0F);
-		PositionTextureVertex var16 = new PositionTextureVertex(var11, var12, par6, 8.0F, 8.0F);
-		PositionTextureVertex var17 = new PositionTextureVertex(par4, var12, par6, 8.0F, 0.0F);
-		PositionTextureVertex var18 = new PositionTextureVertex(par4, par5, var13, 0.0F, 0.0F);
-		PositionTextureVertex var19 = new PositionTextureVertex(var11, par5, var13, 0.0F, 8.0F);
+		PositionTextureVertex var23 = new PositionTextureVertex(p_i1171_4_, p_i1171_5_, p_i1171_6_, 0.0F, 0.0F);
+		PositionTextureVertex var15 = new PositionTextureVertex(var11, p_i1171_5_, p_i1171_6_, 0.0F, 8.0F);
+		PositionTextureVertex var16 = new PositionTextureVertex(var11, var12, p_i1171_6_, 8.0F, 8.0F);
+		PositionTextureVertex var17 = new PositionTextureVertex(p_i1171_4_, var12, p_i1171_6_, 8.0F, 0.0F);
+		PositionTextureVertex var18 = new PositionTextureVertex(p_i1171_4_, p_i1171_5_, var13, 0.0F, 0.0F);
+		PositionTextureVertex var19 = new PositionTextureVertex(var11, p_i1171_5_, var13, 0.0F, 8.0F);
 		PositionTextureVertex var20 = new PositionTextureVertex(var11, var12, var13, 8.0F, 8.0F);
-		PositionTextureVertex var21 = new PositionTextureVertex(par4, var12, var13, 8.0F, 0.0F);
+		PositionTextureVertex var21 = new PositionTextureVertex(p_i1171_4_, var12, var13, 8.0F, 0.0F);
 		vertexPositions[0] = var23;
 		vertexPositions[1] = var15;
 		vertexPositions[2] = var16;
@@ -53,13 +53,13 @@
 		vertexPositions[5] = var19;
 		vertexPositions[6] = var20;
 		vertexPositions[7] = var21;
-		quadList[0] = new TexturedQuad(new PositionTextureVertex[] { var19, var15, var16, var20 }, par2 + par9 + par7, par3 + par9, par2 + par9 + par7 + par9, par3 + par9 + par8, par1ModelRenderer.textureWidth, par1ModelRenderer.textureHeight);
-		quadList[1] = new TexturedQuad(new PositionTextureVertex[] { var23, var18, var21, var17 }, par2, par3 + par9, par2 + par9, par3 + par9 + par8, par1ModelRenderer.textureWidth, par1ModelRenderer.textureHeight);
-		quadList[2] = new TexturedQuad(new PositionTextureVertex[] { var19, var18, var23, var15 }, par2 + par9, par3, par2 + par9 + par7, par3 + par9, par1ModelRenderer.textureWidth, par1ModelRenderer.textureHeight);
-		quadList[3] = new TexturedQuad(new PositionTextureVertex[] { var16, var17, var21, var20 }, par2 + par9 + par7, par3 + par9, par2 + par9 + par7 + par7, par3, par1ModelRenderer.textureWidth, par1ModelRenderer.textureHeight);
-		quadList[4] = new TexturedQuad(new PositionTextureVertex[] { var15, var23, var17, var16 }, par2 + par9, par3 + par9, par2 + par9 + par7, par3 + par9 + par8, par1ModelRenderer.textureWidth, par1ModelRenderer.textureHeight);
-		quadList[5] = new TexturedQuad(new PositionTextureVertex[] { var18, var19, var20, var21 }, par2 + par9 + par7 + par9, par3 + par9, par2 + par9 + par7 + par9 + par7, par3 + par9 + par8, par1ModelRenderer.textureWidth, par1ModelRenderer.textureHeight);
-		if(par1ModelRenderer.mirror)
+		quadList[0] = new TexturedQuad(new PositionTextureVertex[] { var19, var15, var16, var20 }, p_i1171_2_ + p_i1171_9_ + p_i1171_7_, p_i1171_3_ + p_i1171_9_, p_i1171_2_ + p_i1171_9_ + p_i1171_7_ + p_i1171_9_, p_i1171_3_ + p_i1171_9_ + p_i1171_8_, p_i1171_1_.textureWidth, p_i1171_1_.textureHeight);
+		quadList[1] = new TexturedQuad(new PositionTextureVertex[] { var23, var18, var21, var17 }, p_i1171_2_, p_i1171_3_ + p_i1171_9_, p_i1171_2_ + p_i1171_9_, p_i1171_3_ + p_i1171_9_ + p_i1171_8_, p_i1171_1_.textureWidth, p_i1171_1_.textureHeight);
+		quadList[2] = new TexturedQuad(new PositionTextureVertex[] { var19, var18, var23, var15 }, p_i1171_2_ + p_i1171_9_, p_i1171_3_, p_i1171_2_ + p_i1171_9_ + p_i1171_7_, p_i1171_3_ + p_i1171_9_, p_i1171_1_.textureWidth, p_i1171_1_.textureHeight);
+		quadList[3] = new TexturedQuad(new PositionTextureVertex[] { var16, var17, var21, var20 }, p_i1171_2_ + p_i1171_9_ + p_i1171_7_, p_i1171_3_ + p_i1171_9_, p_i1171_2_ + p_i1171_9_ + p_i1171_7_ + p_i1171_7_, p_i1171_3_, p_i1171_1_.textureWidth, p_i1171_1_.textureHeight);
+		quadList[4] = new TexturedQuad(new PositionTextureVertex[] { var15, var23, var17, var16 }, p_i1171_2_ + p_i1171_9_, p_i1171_3_ + p_i1171_9_, p_i1171_2_ + p_i1171_9_ + p_i1171_7_, p_i1171_3_ + p_i1171_9_ + p_i1171_8_, p_i1171_1_.textureWidth, p_i1171_1_.textureHeight);
+		quadList[5] = new TexturedQuad(new PositionTextureVertex[] { var18, var19, var20, var21 }, p_i1171_2_ + p_i1171_9_ + p_i1171_7_ + p_i1171_9_, p_i1171_3_ + p_i1171_9_, p_i1171_2_ + p_i1171_9_ + p_i1171_7_ + p_i1171_9_ + p_i1171_7_, p_i1171_3_ + p_i1171_9_ + p_i1171_8_, p_i1171_1_.textureWidth, p_i1171_1_.textureHeight);
+		if(p_i1171_1_.mirror)
 		{
 			for(TexturedQuad element : quadList)
 			{
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelCreeper.java b/RMCClient/minecraft/net/minecraft/src/ModelCreeper.java
index 683672c..a90fd8f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelCreeper.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelCreeper.java
@@ -15,29 +15,29 @@
 		this(0.0F);
 	}
 	
-	public ModelCreeper(float par1)
+	public ModelCreeper(float p_i1147_1_)
 	{
 		byte var2 = 4;
 		head = new ModelRenderer(this, 0, 0);
-		head.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, par1);
+		head.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, p_i1147_1_);
 		head.setRotationPoint(0.0F, var2, 0.0F);
 		field_78133_b = new ModelRenderer(this, 32, 0);
-		field_78133_b.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, par1 + 0.5F);
+		field_78133_b.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, p_i1147_1_ + 0.5F);
 		field_78133_b.setRotationPoint(0.0F, var2, 0.0F);
 		body = new ModelRenderer(this, 16, 16);
-		body.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4, par1);
+		body.addBox(-4.0F, 0.0F, -2.0F, 8, 12, 4, p_i1147_1_);
 		body.setRotationPoint(0.0F, var2, 0.0F);
 		leg1 = new ModelRenderer(this, 0, 16);
-		leg1.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, par1);
+		leg1.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, p_i1147_1_);
 		leg1.setRotationPoint(-2.0F, 12 + var2, 4.0F);
 		leg2 = new ModelRenderer(this, 0, 16);
-		leg2.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, par1);
+		leg2.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, p_i1147_1_);
 		leg2.setRotationPoint(2.0F, 12 + var2, 4.0F);
 		leg3 = new ModelRenderer(this, 0, 16);
-		leg3.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, par1);
+		leg3.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, p_i1147_1_);
 		leg3.setRotationPoint(-2.0F, 12 + var2, -4.0F);
 		leg4 = new ModelRenderer(this, 0, 16);
-		leg4.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, par1);
+		leg4.addBox(-2.0F, 0.0F, -2.0F, 4, 6, 4, p_i1147_1_);
 		leg4.setRotationPoint(2.0F, 12 + var2, -4.0F);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelDragon.java b/RMCClient/minecraft/net/minecraft/src/ModelDragon.java
index e1413dd..4fb644b 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelDragon.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelDragon.java
@@ -18,7 +18,7 @@
 	private ModelRenderer wingTip;
 	private float partialTicks;
 	
-	public ModelDragon(float par1)
+	public ModelDragon(float p_i1169_1_)
 	{
 		textureWidth = 256;
 		textureHeight = 256;
@@ -196,7 +196,7 @@
 		GL11.glPopMatrix();
 	}
 	
-	@Override public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		partialTicks = par4;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelEnderCrystal.java b/RMCClient/minecraft/net/minecraft/src/ModelEnderCrystal.java
index a2f9b69..20cd9e6 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelEnderCrystal.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelEnderCrystal.java
@@ -8,12 +8,12 @@
 	private ModelRenderer glass = new ModelRenderer(this, "glass");
 	private ModelRenderer base;
 	
-	public ModelEnderCrystal(float par1, boolean par2)
+	public ModelEnderCrystal(float p_i1170_1_, boolean p_i1170_2_)
 	{
 		glass.setTextureOffset(0, 0).addBox(-4.0F, -4.0F, -4.0F, 8, 8, 8);
 		cube = new ModelRenderer(this, "cube");
 		cube.setTextureOffset(32, 0).addBox(-4.0F, -4.0F, -4.0F, 8, 8, 8);
-		if(par2)
+		if(p_i1170_2_)
 		{
 			base = new ModelRenderer(this, "base");
 			base.setTextureOffset(0, 16).addBox(-6.0F, 0.0F, -6.0F, 12, 4, 12);
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelEnderman.java b/RMCClient/minecraft/net/minecraft/src/ModelEnderman.java
index 5f29aee..e1aeb34 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelEnderman.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelEnderman.java
@@ -2,8 +2,8 @@
 
 public class ModelEnderman extends ModelBiped
 {
-	public boolean isCarrying = false;
-	public boolean isAttacking = false;
+	public boolean isCarrying;
+	public boolean isAttacking;
 	
 	public ModelEnderman()
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelHorse.java b/RMCClient/minecraft/net/minecraft/src/ModelHorse.java
new file mode 100644
index 0000000..74e0de8
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ModelHorse.java
@@ -0,0 +1,513 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+
+public class ModelHorse extends ModelBase
+{
+	private ModelRenderer field_110709_a;
+	private ModelRenderer field_110707_b;
+	private ModelRenderer field_110708_c;
+	private ModelRenderer field_110705_d;
+	private ModelRenderer field_110706_e;
+	private ModelRenderer field_110703_f;
+	private ModelRenderer field_110704_g;
+	private ModelRenderer field_110716_h;
+	private ModelRenderer field_110717_i;
+	private ModelRenderer field_110714_j;
+	private ModelRenderer field_110715_k;
+	private ModelRenderer field_110712_l;
+	private ModelRenderer field_110713_m;
+	private ModelRenderer field_110710_n;
+	private ModelRenderer field_110711_o;
+	private ModelRenderer field_110719_v;
+	private ModelRenderer field_110718_w;
+	private ModelRenderer field_110722_x;
+	private ModelRenderer field_110721_y;
+	private ModelRenderer field_110720_z;
+	private ModelRenderer field_110688_A;
+	private ModelRenderer field_110689_B;
+	private ModelRenderer field_110690_C;
+	private ModelRenderer field_110684_D;
+	private ModelRenderer field_110685_E;
+	private ModelRenderer field_110686_F;
+	private ModelRenderer field_110687_G;
+	private ModelRenderer field_110695_H;
+	private ModelRenderer field_110696_I;
+	private ModelRenderer field_110697_J;
+	private ModelRenderer field_110698_K;
+	private ModelRenderer field_110691_L;
+	private ModelRenderer field_110692_M;
+	private ModelRenderer field_110693_N;
+	private ModelRenderer field_110694_O;
+	private ModelRenderer field_110700_P;
+	private ModelRenderer field_110699_Q;
+	private ModelRenderer field_110702_R;
+	private ModelRenderer field_110701_S;
+	
+	public ModelHorse()
+	{
+		textureWidth = 128;
+		textureHeight = 128;
+		field_110715_k = new ModelRenderer(this, 0, 34);
+		field_110715_k.addBox(-5.0F, -8.0F, -19.0F, 10, 10, 24);
+		field_110715_k.setRotationPoint(0.0F, 11.0F, 9.0F);
+		field_110712_l = new ModelRenderer(this, 44, 0);
+		field_110712_l.addBox(-1.0F, -1.0F, 0.0F, 2, 2, 3);
+		field_110712_l.setRotationPoint(0.0F, 3.0F, 14.0F);
+		func_110682_a(field_110712_l, -1.134464F, 0.0F, 0.0F);
+		field_110713_m = new ModelRenderer(this, 38, 7);
+		field_110713_m.addBox(-1.5F, -2.0F, 3.0F, 3, 4, 7);
+		field_110713_m.setRotationPoint(0.0F, 3.0F, 14.0F);
+		func_110682_a(field_110713_m, -1.134464F, 0.0F, 0.0F);
+		field_110710_n = new ModelRenderer(this, 24, 3);
+		field_110710_n.addBox(-1.5F, -4.5F, 9.0F, 3, 4, 7);
+		field_110710_n.setRotationPoint(0.0F, 3.0F, 14.0F);
+		func_110682_a(field_110710_n, -1.40215F, 0.0F, 0.0F);
+		field_110711_o = new ModelRenderer(this, 78, 29);
+		field_110711_o.addBox(-2.5F, -2.0F, -2.5F, 4, 9, 5);
+		field_110711_o.setRotationPoint(4.0F, 9.0F, 11.0F);
+		field_110719_v = new ModelRenderer(this, 78, 43);
+		field_110719_v.addBox(-2.0F, 0.0F, -1.5F, 3, 5, 3);
+		field_110719_v.setRotationPoint(4.0F, 16.0F, 11.0F);
+		field_110718_w = new ModelRenderer(this, 78, 51);
+		field_110718_w.addBox(-2.5F, 5.1F, -2.0F, 4, 3, 4);
+		field_110718_w.setRotationPoint(4.0F, 16.0F, 11.0F);
+		field_110722_x = new ModelRenderer(this, 96, 29);
+		field_110722_x.addBox(-1.5F, -2.0F, -2.5F, 4, 9, 5);
+		field_110722_x.setRotationPoint(-4.0F, 9.0F, 11.0F);
+		field_110721_y = new ModelRenderer(this, 96, 43);
+		field_110721_y.addBox(-1.0F, 0.0F, -1.5F, 3, 5, 3);
+		field_110721_y.setRotationPoint(-4.0F, 16.0F, 11.0F);
+		field_110720_z = new ModelRenderer(this, 96, 51);
+		field_110720_z.addBox(-1.5F, 5.1F, -2.0F, 4, 3, 4);
+		field_110720_z.setRotationPoint(-4.0F, 16.0F, 11.0F);
+		field_110688_A = new ModelRenderer(this, 44, 29);
+		field_110688_A.addBox(-1.9F, -1.0F, -2.1F, 3, 8, 4);
+		field_110688_A.setRotationPoint(4.0F, 9.0F, -8.0F);
+		field_110689_B = new ModelRenderer(this, 44, 41);
+		field_110689_B.addBox(-1.9F, 0.0F, -1.6F, 3, 5, 3);
+		field_110689_B.setRotationPoint(4.0F, 16.0F, -8.0F);
+		field_110690_C = new ModelRenderer(this, 44, 51);
+		field_110690_C.addBox(-2.4F, 5.1F, -2.1F, 4, 3, 4);
+		field_110690_C.setRotationPoint(4.0F, 16.0F, -8.0F);
+		field_110684_D = new ModelRenderer(this, 60, 29);
+		field_110684_D.addBox(-1.1F, -1.0F, -2.1F, 3, 8, 4);
+		field_110684_D.setRotationPoint(-4.0F, 9.0F, -8.0F);
+		field_110685_E = new ModelRenderer(this, 60, 41);
+		field_110685_E.addBox(-1.1F, 0.0F, -1.6F, 3, 5, 3);
+		field_110685_E.setRotationPoint(-4.0F, 16.0F, -8.0F);
+		field_110686_F = new ModelRenderer(this, 60, 51);
+		field_110686_F.addBox(-1.6F, 5.1F, -2.1F, 4, 3, 4);
+		field_110686_F.setRotationPoint(-4.0F, 16.0F, -8.0F);
+		field_110709_a = new ModelRenderer(this, 0, 0);
+		field_110709_a.addBox(-2.5F, -10.0F, -1.5F, 5, 5, 7);
+		field_110709_a.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110709_a, 0.5235988F, 0.0F, 0.0F);
+		field_110707_b = new ModelRenderer(this, 24, 18);
+		field_110707_b.addBox(-2.0F, -10.0F, -7.0F, 4, 3, 6);
+		field_110707_b.setRotationPoint(0.0F, 3.95F, -10.0F);
+		func_110682_a(field_110707_b, 0.5235988F, 0.0F, 0.0F);
+		field_110708_c = new ModelRenderer(this, 24, 27);
+		field_110708_c.addBox(-2.0F, -7.0F, -6.5F, 4, 2, 5);
+		field_110708_c.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110708_c, 0.5235988F, 0.0F, 0.0F);
+		field_110709_a.addChild(field_110707_b);
+		field_110709_a.addChild(field_110708_c);
+		field_110705_d = new ModelRenderer(this, 0, 0);
+		field_110705_d.addBox(0.45F, -12.0F, 4.0F, 2, 3, 1);
+		field_110705_d.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110705_d, 0.5235988F, 0.0F, 0.0F);
+		field_110706_e = new ModelRenderer(this, 0, 0);
+		field_110706_e.addBox(-2.45F, -12.0F, 4.0F, 2, 3, 1);
+		field_110706_e.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110706_e, 0.5235988F, 0.0F, 0.0F);
+		field_110703_f = new ModelRenderer(this, 0, 12);
+		field_110703_f.addBox(-2.0F, -16.0F, 4.0F, 2, 7, 1);
+		field_110703_f.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110703_f, 0.5235988F, 0.0F, 0.2617994F);
+		field_110704_g = new ModelRenderer(this, 0, 12);
+		field_110704_g.addBox(0.0F, -16.0F, 4.0F, 2, 7, 1);
+		field_110704_g.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110704_g, 0.5235988F, 0.0F, -0.2617994F);
+		field_110716_h = new ModelRenderer(this, 0, 12);
+		field_110716_h.addBox(-2.05F, -9.8F, -2.0F, 4, 14, 8);
+		field_110716_h.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110716_h, 0.5235988F, 0.0F, 0.0F);
+		field_110687_G = new ModelRenderer(this, 0, 34);
+		field_110687_G.addBox(-3.0F, 0.0F, 0.0F, 8, 8, 3);
+		field_110687_G.setRotationPoint(-7.5F, 3.0F, 10.0F);
+		func_110682_a(field_110687_G, 0.0F, (float) Math.PI / 2F, 0.0F);
+		field_110695_H = new ModelRenderer(this, 0, 47);
+		field_110695_H.addBox(-3.0F, 0.0F, 0.0F, 8, 8, 3);
+		field_110695_H.setRotationPoint(4.5F, 3.0F, 10.0F);
+		func_110682_a(field_110695_H, 0.0F, (float) Math.PI / 2F, 0.0F);
+		field_110696_I = new ModelRenderer(this, 80, 0);
+		field_110696_I.addBox(-5.0F, 0.0F, -3.0F, 10, 1, 8);
+		field_110696_I.setRotationPoint(0.0F, 2.0F, 2.0F);
+		field_110697_J = new ModelRenderer(this, 106, 9);
+		field_110697_J.addBox(-1.5F, -1.0F, -3.0F, 3, 1, 2);
+		field_110697_J.setRotationPoint(0.0F, 2.0F, 2.0F);
+		field_110698_K = new ModelRenderer(this, 80, 9);
+		field_110698_K.addBox(-4.0F, -1.0F, 3.0F, 8, 1, 2);
+		field_110698_K.setRotationPoint(0.0F, 2.0F, 2.0F);
+		field_110692_M = new ModelRenderer(this, 74, 0);
+		field_110692_M.addBox(-0.5F, 6.0F, -1.0F, 1, 2, 2);
+		field_110692_M.setRotationPoint(5.0F, 3.0F, 2.0F);
+		field_110691_L = new ModelRenderer(this, 70, 0);
+		field_110691_L.addBox(-0.5F, 0.0F, -0.5F, 1, 6, 1);
+		field_110691_L.setRotationPoint(5.0F, 3.0F, 2.0F);
+		field_110694_O = new ModelRenderer(this, 74, 4);
+		field_110694_O.addBox(-0.5F, 6.0F, -1.0F, 1, 2, 2);
+		field_110694_O.setRotationPoint(-5.0F, 3.0F, 2.0F);
+		field_110693_N = new ModelRenderer(this, 80, 0);
+		field_110693_N.addBox(-0.5F, 0.0F, -0.5F, 1, 6, 1);
+		field_110693_N.setRotationPoint(-5.0F, 3.0F, 2.0F);
+		field_110700_P = new ModelRenderer(this, 74, 13);
+		field_110700_P.addBox(1.5F, -8.0F, -4.0F, 1, 2, 2);
+		field_110700_P.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110700_P, 0.5235988F, 0.0F, 0.0F);
+		field_110699_Q = new ModelRenderer(this, 74, 13);
+		field_110699_Q.addBox(-2.5F, -8.0F, -4.0F, 1, 2, 2);
+		field_110699_Q.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110699_Q, 0.5235988F, 0.0F, 0.0F);
+		field_110702_R = new ModelRenderer(this, 44, 10);
+		field_110702_R.addBox(2.6F, -6.0F, -6.0F, 0, 3, 16);
+		field_110702_R.setRotationPoint(0.0F, 4.0F, -10.0F);
+		field_110701_S = new ModelRenderer(this, 44, 5);
+		field_110701_S.addBox(-2.6F, -6.0F, -6.0F, 0, 3, 16);
+		field_110701_S.setRotationPoint(0.0F, 4.0F, -10.0F);
+		field_110714_j = new ModelRenderer(this, 58, 0);
+		field_110714_j.addBox(-1.0F, -11.5F, 5.0F, 2, 16, 4);
+		field_110714_j.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110714_j, 0.5235988F, 0.0F, 0.0F);
+		field_110717_i = new ModelRenderer(this, 80, 12);
+		field_110717_i.addBox(-2.5F, -10.1F, -7.0F, 5, 5, 12, 0.2F);
+		field_110717_i.setRotationPoint(0.0F, 4.0F, -10.0F);
+		func_110682_a(field_110717_i, 0.5235988F, 0.0F, 0.0F);
+	}
+	
+	private void func_110682_a(ModelRenderer p_110682_1_, float p_110682_2_, float p_110682_3_, float p_110682_4_)
+	{
+		p_110682_1_.rotateAngleX = p_110682_2_;
+		p_110682_1_.rotateAngleY = p_110682_3_;
+		p_110682_1_.rotateAngleZ = p_110682_4_;
+	}
+	
+	private float func_110683_a(float p_110683_1_, float p_110683_2_, float p_110683_3_)
+	{
+		float var4;
+		for(var4 = p_110683_2_ - p_110683_1_; var4 < -180.0F; var4 += 360.0F)
+		{
+			;
+		}
+		while(var4 >= 180.0F)
+		{
+			var4 -= 360.0F;
+		}
+		return p_110683_1_ + p_110683_3_ * var4;
+	}
+	
+	@Override public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
+	{
+		EntityHorse var8 = (EntityHorse) par1Entity;
+		int var9 = var8.func_110265_bP();
+		float var10 = var8.func_110258_o(0.0F);
+		boolean var11 = var8.func_110228_bR();
+		boolean var12 = var11 && var8.func_110257_ck();
+		boolean var13 = var11 && var8.func_110261_ca();
+		boolean var14 = var9 == 1 || var9 == 2;
+		float var15 = var8.func_110254_bY();
+		boolean var16 = var8.riddenByEntity != null;
+		if(var12)
+		{
+			field_110717_i.render(par7);
+			field_110696_I.render(par7);
+			field_110697_J.render(par7);
+			field_110698_K.render(par7);
+			field_110691_L.render(par7);
+			field_110692_M.render(par7);
+			field_110693_N.render(par7);
+			field_110694_O.render(par7);
+			field_110700_P.render(par7);
+			field_110699_Q.render(par7);
+			if(var16)
+			{
+				field_110702_R.render(par7);
+				field_110701_S.render(par7);
+			}
+		}
+		if(!var11)
+		{
+			GL11.glPushMatrix();
+			GL11.glScalef(var15, 0.5F + var15 * 0.5F, var15);
+			GL11.glTranslatef(0.0F, 0.95F * (1.0F - var15), 0.0F);
+		}
+		field_110711_o.render(par7);
+		field_110719_v.render(par7);
+		field_110718_w.render(par7);
+		field_110722_x.render(par7);
+		field_110721_y.render(par7);
+		field_110720_z.render(par7);
+		field_110688_A.render(par7);
+		field_110689_B.render(par7);
+		field_110690_C.render(par7);
+		field_110684_D.render(par7);
+		field_110685_E.render(par7);
+		field_110686_F.render(par7);
+		if(!var11)
+		{
+			GL11.glPopMatrix();
+			GL11.glPushMatrix();
+			GL11.glScalef(var15, var15, var15);
+			GL11.glTranslatef(0.0F, 1.35F * (1.0F - var15), 0.0F);
+		}
+		field_110715_k.render(par7);
+		field_110712_l.render(par7);
+		field_110713_m.render(par7);
+		field_110710_n.render(par7);
+		field_110716_h.render(par7);
+		field_110714_j.render(par7);
+		if(!var11)
+		{
+			GL11.glPopMatrix();
+			GL11.glPushMatrix();
+			float var17 = 0.5F + var15 * var15 * 0.5F;
+			GL11.glScalef(var17, var17, var17);
+			if(var10 <= 0.0F)
+			{
+				GL11.glTranslatef(0.0F, 1.35F * (1.0F - var15), 0.0F);
+			} else
+			{
+				GL11.glTranslatef(0.0F, 0.9F * (1.0F - var15) * var10 + 1.35F * (1.0F - var15) * (1.0F - var10), 0.15F * (1.0F - var15) * var10);
+			}
+		}
+		if(var14)
+		{
+			field_110703_f.render(par7);
+			field_110704_g.render(par7);
+		} else
+		{
+			field_110705_d.render(par7);
+			field_110706_e.render(par7);
+		}
+		field_110709_a.render(par7);
+		if(!var11)
+		{
+			GL11.glPopMatrix();
+		}
+		if(var13)
+		{
+			field_110687_G.render(par7);
+			field_110695_H.render(par7);
+		}
+	}
+	
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
+	{
+		super.setLivingAnimations(par1EntityLiving, par2, par3, par4);
+		float var5 = func_110683_a(par1EntityLiving.prevRenderYawOffset, par1EntityLiving.renderYawOffset, par4);
+		float var6 = func_110683_a(par1EntityLiving.prevRotationYawHead, par1EntityLiving.rotationYawHead, par4);
+		float var7 = par1EntityLiving.prevRotationPitch + (par1EntityLiving.rotationPitch - par1EntityLiving.prevRotationPitch) * par4;
+		float var8 = var6 - var5;
+		float var9 = var7 / (180F / (float) Math.PI);
+		if(var8 > 20.0F)
+		{
+			var8 = 20.0F;
+		}
+		if(var8 < -20.0F)
+		{
+			var8 = -20.0F;
+		}
+		if(par3 > 0.2F)
+		{
+			var9 += MathHelper.cos(par2 * 0.4F) * 0.15F * par3;
+		}
+		EntityHorse var10 = (EntityHorse) par1EntityLiving;
+		float var11 = var10.func_110258_o(par4);
+		float var12 = var10.func_110223_p(par4);
+		float var13 = 1.0F - var12;
+		float var14 = var10.func_110201_q(par4);
+		boolean var15 = var10.field_110278_bp != 0;
+		boolean var16 = var10.func_110257_ck();
+		boolean var17 = var10.riddenByEntity != null;
+		float var18 = par1EntityLiving.ticksExisted + par4;
+		float var19 = MathHelper.cos(par2 * 0.6662F + (float) Math.PI);
+		float var20 = var19 * 0.8F * par3;
+		field_110709_a.rotationPointY = 4.0F;
+		field_110709_a.rotationPointZ = -10.0F;
+		field_110712_l.rotationPointY = 3.0F;
+		field_110713_m.rotationPointZ = 14.0F;
+		field_110695_H.rotationPointY = 3.0F;
+		field_110695_H.rotationPointZ = 10.0F;
+		field_110715_k.rotateAngleX = 0.0F;
+		field_110709_a.rotateAngleX = 0.5235988F + var9;
+		field_110709_a.rotateAngleY = var8 / (180F / (float) Math.PI);
+		field_110709_a.rotateAngleX = var12 * (0.2617994F + var9) + var11 * 2.18166F + (1.0F - Math.max(var12, var11)) * field_110709_a.rotateAngleX;
+		field_110709_a.rotateAngleY = var12 * (var8 / (180F / (float) Math.PI)) + (1.0F - Math.max(var12, var11)) * field_110709_a.rotateAngleY;
+		field_110709_a.rotationPointY = var12 * -6.0F + var11 * 11.0F + (1.0F - Math.max(var12, var11)) * field_110709_a.rotationPointY;
+		field_110709_a.rotationPointZ = var12 * -1.0F + var11 * -10.0F + (1.0F - Math.max(var12, var11)) * field_110709_a.rotationPointZ;
+		field_110712_l.rotationPointY = var12 * 9.0F + var13 * field_110712_l.rotationPointY;
+		field_110713_m.rotationPointZ = var12 * 18.0F + var13 * field_110713_m.rotationPointZ;
+		field_110695_H.rotationPointY = var12 * 5.5F + var13 * field_110695_H.rotationPointY;
+		field_110695_H.rotationPointZ = var12 * 15.0F + var13 * field_110695_H.rotationPointZ;
+		field_110715_k.rotateAngleX = var12 * -((float) Math.PI / 4F) + var13 * field_110715_k.rotateAngleX;
+		field_110705_d.rotationPointY = field_110709_a.rotationPointY;
+		field_110706_e.rotationPointY = field_110709_a.rotationPointY;
+		field_110703_f.rotationPointY = field_110709_a.rotationPointY;
+		field_110704_g.rotationPointY = field_110709_a.rotationPointY;
+		field_110716_h.rotationPointY = field_110709_a.rotationPointY;
+		field_110707_b.rotationPointY = 0.02F;
+		field_110708_c.rotationPointY = 0.0F;
+		field_110714_j.rotationPointY = field_110709_a.rotationPointY;
+		field_110705_d.rotationPointZ = field_110709_a.rotationPointZ;
+		field_110706_e.rotationPointZ = field_110709_a.rotationPointZ;
+		field_110703_f.rotationPointZ = field_110709_a.rotationPointZ;
+		field_110704_g.rotationPointZ = field_110709_a.rotationPointZ;
+		field_110716_h.rotationPointZ = field_110709_a.rotationPointZ;
+		field_110707_b.rotationPointZ = 0.02F - var14 * 1.0F;
+		field_110708_c.rotationPointZ = 0.0F + var14 * 1.0F;
+		field_110714_j.rotationPointZ = field_110709_a.rotationPointZ;
+		field_110705_d.rotateAngleX = field_110709_a.rotateAngleX;
+		field_110706_e.rotateAngleX = field_110709_a.rotateAngleX;
+		field_110703_f.rotateAngleX = field_110709_a.rotateAngleX;
+		field_110704_g.rotateAngleX = field_110709_a.rotateAngleX;
+		field_110716_h.rotateAngleX = field_110709_a.rotateAngleX;
+		field_110707_b.rotateAngleX = 0.0F - 0.09424778F * var14;
+		field_110708_c.rotateAngleX = 0.0F + 0.15707964F * var14;
+		field_110714_j.rotateAngleX = field_110709_a.rotateAngleX;
+		field_110705_d.rotateAngleY = field_110709_a.rotateAngleY;
+		field_110706_e.rotateAngleY = field_110709_a.rotateAngleY;
+		field_110703_f.rotateAngleY = field_110709_a.rotateAngleY;
+		field_110704_g.rotateAngleY = field_110709_a.rotateAngleY;
+		field_110716_h.rotateAngleY = field_110709_a.rotateAngleY;
+		field_110707_b.rotateAngleY = 0.0F;
+		field_110708_c.rotateAngleY = 0.0F;
+		field_110714_j.rotateAngleY = field_110709_a.rotateAngleY;
+		field_110687_G.rotateAngleX = var20 / 5.0F;
+		field_110695_H.rotateAngleX = -var20 / 5.0F;
+		float var21 = (float) Math.PI / 2F;
+		float var22 = (float) Math.PI * 3F / 2F;
+		float var23 = -1.0471976F;
+		float var24 = 0.2617994F * var12;
+		float var25 = MathHelper.cos(var18 * 0.6F + (float) Math.PI);
+		field_110688_A.rotationPointY = -2.0F * var12 + 9.0F * var13;
+		field_110688_A.rotationPointZ = -2.0F * var12 + -8.0F * var13;
+		field_110684_D.rotationPointY = field_110688_A.rotationPointY;
+		field_110684_D.rotationPointZ = field_110688_A.rotationPointZ;
+		field_110719_v.rotationPointY = field_110711_o.rotationPointY + MathHelper.sin((float) Math.PI / 2F + var24 + var13 * -var19 * 0.5F * par3) * 7.0F;
+		field_110719_v.rotationPointZ = field_110711_o.rotationPointZ + MathHelper.cos((float) Math.PI * 3F / 2F + var24 + var13 * -var19 * 0.5F * par3) * 7.0F;
+		field_110721_y.rotationPointY = field_110722_x.rotationPointY + MathHelper.sin((float) Math.PI / 2F + var24 + var13 * var19 * 0.5F * par3) * 7.0F;
+		field_110721_y.rotationPointZ = field_110722_x.rotationPointZ + MathHelper.cos((float) Math.PI * 3F / 2F + var24 + var13 * var19 * 0.5F * par3) * 7.0F;
+		float var26 = (-1.0471976F + var25) * var12 + var20 * var13;
+		float var27 = (-1.0471976F + -var25) * var12 + -var20 * var13;
+		field_110689_B.rotationPointY = field_110688_A.rotationPointY + MathHelper.sin((float) Math.PI / 2F + var26) * 7.0F;
+		field_110689_B.rotationPointZ = field_110688_A.rotationPointZ + MathHelper.cos((float) Math.PI * 3F / 2F + var26) * 7.0F;
+		field_110685_E.rotationPointY = field_110684_D.rotationPointY + MathHelper.sin((float) Math.PI / 2F + var27) * 7.0F;
+		field_110685_E.rotationPointZ = field_110684_D.rotationPointZ + MathHelper.cos((float) Math.PI * 3F / 2F + var27) * 7.0F;
+		field_110711_o.rotateAngleX = var24 + -var19 * 0.5F * par3 * var13;
+		field_110719_v.rotateAngleX = -0.08726646F * var12 + (-var19 * 0.5F * par3 - Math.max(0.0F, var19 * 0.5F * par3)) * var13;
+		field_110718_w.rotateAngleX = field_110719_v.rotateAngleX;
+		field_110722_x.rotateAngleX = var24 + var19 * 0.5F * par3 * var13;
+		field_110721_y.rotateAngleX = -0.08726646F * var12 + (var19 * 0.5F * par3 - Math.max(0.0F, -var19 * 0.5F * par3)) * var13;
+		field_110720_z.rotateAngleX = field_110721_y.rotateAngleX;
+		field_110688_A.rotateAngleX = var26;
+		field_110689_B.rotateAngleX = (field_110688_A.rotateAngleX + (float) Math.PI * Math.max(0.0F, 0.2F + var25 * 0.2F)) * var12 + (var20 + Math.max(0.0F, var19 * 0.5F * par3)) * var13;
+		field_110690_C.rotateAngleX = field_110689_B.rotateAngleX;
+		field_110684_D.rotateAngleX = var27;
+		field_110685_E.rotateAngleX = (field_110684_D.rotateAngleX + (float) Math.PI * Math.max(0.0F, 0.2F - var25 * 0.2F)) * var12 + (-var20 + Math.max(0.0F, -var19 * 0.5F * par3)) * var13;
+		field_110686_F.rotateAngleX = field_110685_E.rotateAngleX;
+		field_110718_w.rotationPointY = field_110719_v.rotationPointY;
+		field_110718_w.rotationPointZ = field_110719_v.rotationPointZ;
+		field_110720_z.rotationPointY = field_110721_y.rotationPointY;
+		field_110720_z.rotationPointZ = field_110721_y.rotationPointZ;
+		field_110690_C.rotationPointY = field_110689_B.rotationPointY;
+		field_110690_C.rotationPointZ = field_110689_B.rotationPointZ;
+		field_110686_F.rotationPointY = field_110685_E.rotationPointY;
+		field_110686_F.rotationPointZ = field_110685_E.rotationPointZ;
+		if(var16)
+		{
+			field_110696_I.rotationPointY = var12 * 0.5F + var13 * 2.0F;
+			field_110696_I.rotationPointZ = var12 * 11.0F + var13 * 2.0F;
+			field_110697_J.rotationPointY = field_110696_I.rotationPointY;
+			field_110698_K.rotationPointY = field_110696_I.rotationPointY;
+			field_110691_L.rotationPointY = field_110696_I.rotationPointY;
+			field_110693_N.rotationPointY = field_110696_I.rotationPointY;
+			field_110692_M.rotationPointY = field_110696_I.rotationPointY;
+			field_110694_O.rotationPointY = field_110696_I.rotationPointY;
+			field_110687_G.rotationPointY = field_110695_H.rotationPointY;
+			field_110697_J.rotationPointZ = field_110696_I.rotationPointZ;
+			field_110698_K.rotationPointZ = field_110696_I.rotationPointZ;
+			field_110691_L.rotationPointZ = field_110696_I.rotationPointZ;
+			field_110693_N.rotationPointZ = field_110696_I.rotationPointZ;
+			field_110692_M.rotationPointZ = field_110696_I.rotationPointZ;
+			field_110694_O.rotationPointZ = field_110696_I.rotationPointZ;
+			field_110687_G.rotationPointZ = field_110695_H.rotationPointZ;
+			field_110696_I.rotateAngleX = field_110715_k.rotateAngleX;
+			field_110697_J.rotateAngleX = field_110715_k.rotateAngleX;
+			field_110698_K.rotateAngleX = field_110715_k.rotateAngleX;
+			field_110702_R.rotationPointY = field_110709_a.rotationPointY;
+			field_110701_S.rotationPointY = field_110709_a.rotationPointY;
+			field_110717_i.rotationPointY = field_110709_a.rotationPointY;
+			field_110700_P.rotationPointY = field_110709_a.rotationPointY;
+			field_110699_Q.rotationPointY = field_110709_a.rotationPointY;
+			field_110702_R.rotationPointZ = field_110709_a.rotationPointZ;
+			field_110701_S.rotationPointZ = field_110709_a.rotationPointZ;
+			field_110717_i.rotationPointZ = field_110709_a.rotationPointZ;
+			field_110700_P.rotationPointZ = field_110709_a.rotationPointZ;
+			field_110699_Q.rotationPointZ = field_110709_a.rotationPointZ;
+			field_110702_R.rotateAngleX = var9;
+			field_110701_S.rotateAngleX = var9;
+			field_110717_i.rotateAngleX = field_110709_a.rotateAngleX;
+			field_110700_P.rotateAngleX = field_110709_a.rotateAngleX;
+			field_110699_Q.rotateAngleX = field_110709_a.rotateAngleX;
+			field_110717_i.rotateAngleY = field_110709_a.rotateAngleY;
+			field_110700_P.rotateAngleY = field_110709_a.rotateAngleY;
+			field_110702_R.rotateAngleY = field_110709_a.rotateAngleY;
+			field_110699_Q.rotateAngleY = field_110709_a.rotateAngleY;
+			field_110701_S.rotateAngleY = field_110709_a.rotateAngleY;
+			if(var17)
+			{
+				field_110691_L.rotateAngleX = -1.0471976F;
+				field_110692_M.rotateAngleX = -1.0471976F;
+				field_110693_N.rotateAngleX = -1.0471976F;
+				field_110694_O.rotateAngleX = -1.0471976F;
+				field_110691_L.rotateAngleZ = 0.0F;
+				field_110692_M.rotateAngleZ = 0.0F;
+				field_110693_N.rotateAngleZ = 0.0F;
+				field_110694_O.rotateAngleZ = 0.0F;
+			} else
+			{
+				field_110691_L.rotateAngleX = var20 / 3.0F;
+				field_110692_M.rotateAngleX = var20 / 3.0F;
+				field_110693_N.rotateAngleX = var20 / 3.0F;
+				field_110694_O.rotateAngleX = var20 / 3.0F;
+				field_110691_L.rotateAngleZ = var20 / 5.0F;
+				field_110692_M.rotateAngleZ = var20 / 5.0F;
+				field_110693_N.rotateAngleZ = -var20 / 5.0F;
+				field_110694_O.rotateAngleZ = -var20 / 5.0F;
+			}
+		}
+		var21 = -1.3089F + par3 * 1.5F;
+		if(var21 > 0.0F)
+		{
+			var21 = 0.0F;
+		}
+		if(var15)
+		{
+			field_110712_l.rotateAngleY = MathHelper.cos(var18 * 0.7F);
+			var21 = 0.0F;
+		} else
+		{
+			field_110712_l.rotateAngleY = 0.0F;
+		}
+		field_110713_m.rotateAngleY = field_110712_l.rotateAngleY;
+		field_110710_n.rotateAngleY = field_110712_l.rotateAngleY;
+		field_110713_m.rotationPointY = field_110712_l.rotationPointY;
+		field_110710_n.rotationPointY = field_110712_l.rotationPointY;
+		field_110713_m.rotationPointZ = field_110712_l.rotationPointZ;
+		field_110710_n.rotationPointZ = field_110712_l.rotationPointZ;
+		field_110712_l.rotateAngleX = var21;
+		field_110713_m.rotateAngleX = var21;
+		field_110710_n.rotateAngleX = -0.2618F + var21;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelIronGolem.java b/RMCClient/minecraft/net/minecraft/src/ModelIronGolem.java
index 9fc9eac..61a3bfe 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelIronGolem.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelIronGolem.java
@@ -14,36 +14,36 @@
 		this(0.0F);
 	}
 	
-	public ModelIronGolem(float par1)
+	public ModelIronGolem(float p_i1161_1_)
 	{
-		this(par1, -7.0F);
+		this(p_i1161_1_, -7.0F);
 	}
 	
-	public ModelIronGolem(float par1, float par2)
+	public ModelIronGolem(float p_i1162_1_, float p_i1162_2_)
 	{
 		short var3 = 128;
 		short var4 = 128;
 		ironGolemHead = new ModelRenderer(this).setTextureSize(var3, var4);
-		ironGolemHead.setRotationPoint(0.0F, 0.0F + par2, -2.0F);
-		ironGolemHead.setTextureOffset(0, 0).addBox(-4.0F, -12.0F, -5.5F, 8, 10, 8, par1);
-		ironGolemHead.setTextureOffset(24, 0).addBox(-1.0F, -5.0F, -7.5F, 2, 4, 2, par1);
+		ironGolemHead.setRotationPoint(0.0F, 0.0F + p_i1162_2_, -2.0F);
+		ironGolemHead.setTextureOffset(0, 0).addBox(-4.0F, -12.0F, -5.5F, 8, 10, 8, p_i1162_1_);
+		ironGolemHead.setTextureOffset(24, 0).addBox(-1.0F, -5.0F, -7.5F, 2, 4, 2, p_i1162_1_);
 		ironGolemBody = new ModelRenderer(this).setTextureSize(var3, var4);
-		ironGolemBody.setRotationPoint(0.0F, 0.0F + par2, 0.0F);
-		ironGolemBody.setTextureOffset(0, 40).addBox(-9.0F, -2.0F, -6.0F, 18, 12, 11, par1);
-		ironGolemBody.setTextureOffset(0, 70).addBox(-4.5F, 10.0F, -3.0F, 9, 5, 6, par1 + 0.5F);
+		ironGolemBody.setRotationPoint(0.0F, 0.0F + p_i1162_2_, 0.0F);
+		ironGolemBody.setTextureOffset(0, 40).addBox(-9.0F, -2.0F, -6.0F, 18, 12, 11, p_i1162_1_);
+		ironGolemBody.setTextureOffset(0, 70).addBox(-4.5F, 10.0F, -3.0F, 9, 5, 6, p_i1162_1_ + 0.5F);
 		ironGolemRightArm = new ModelRenderer(this).setTextureSize(var3, var4);
 		ironGolemRightArm.setRotationPoint(0.0F, -7.0F, 0.0F);
-		ironGolemRightArm.setTextureOffset(60, 21).addBox(-13.0F, -2.5F, -3.0F, 4, 30, 6, par1);
+		ironGolemRightArm.setTextureOffset(60, 21).addBox(-13.0F, -2.5F, -3.0F, 4, 30, 6, p_i1162_1_);
 		ironGolemLeftArm = new ModelRenderer(this).setTextureSize(var3, var4);
 		ironGolemLeftArm.setRotationPoint(0.0F, -7.0F, 0.0F);
-		ironGolemLeftArm.setTextureOffset(60, 58).addBox(9.0F, -2.5F, -3.0F, 4, 30, 6, par1);
+		ironGolemLeftArm.setTextureOffset(60, 58).addBox(9.0F, -2.5F, -3.0F, 4, 30, 6, p_i1162_1_);
 		ironGolemLeftLeg = new ModelRenderer(this, 0, 22).setTextureSize(var3, var4);
-		ironGolemLeftLeg.setRotationPoint(-4.0F, 18.0F + par2, 0.0F);
-		ironGolemLeftLeg.setTextureOffset(37, 0).addBox(-3.5F, -3.0F, -3.0F, 6, 16, 5, par1);
+		ironGolemLeftLeg.setRotationPoint(-4.0F, 18.0F + p_i1162_2_, 0.0F);
+		ironGolemLeftLeg.setTextureOffset(37, 0).addBox(-3.5F, -3.0F, -3.0F, 6, 16, 5, p_i1162_1_);
 		ironGolemRightLeg = new ModelRenderer(this, 0, 22).setTextureSize(var3, var4);
 		ironGolemRightLeg.mirror = true;
-		ironGolemRightLeg.setTextureOffset(60, 0).setRotationPoint(5.0F, 18.0F + par2, 0.0F);
-		ironGolemRightLeg.addBox(-3.5F, -3.0F, -3.0F, 6, 16, 5, par1);
+		ironGolemRightLeg.setTextureOffset(60, 0).setRotationPoint(5.0F, 18.0F + p_i1162_2_, 0.0F);
+		ironGolemRightLeg.addBox(-3.5F, -3.0F, -3.0F, 6, 16, 5, p_i1162_1_);
 	}
 	
 	private float func_78172_a(float par1, float par2)
@@ -62,7 +62,7 @@
 		ironGolemLeftArm.render(par7);
 	}
 	
-	@Override public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		EntityIronGolem var5 = (EntityIronGolem) par1EntityLiving;
 		int var6 = var5.getAttackTimer();
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelLeashKnot.java b/RMCClient/minecraft/net/minecraft/src/ModelLeashKnot.java
new file mode 100644
index 0000000..dfddc37
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ModelLeashKnot.java
@@ -0,0 +1,33 @@
+package net.minecraft.src;
+
+public class ModelLeashKnot extends ModelBase
+{
+	public ModelRenderer field_110723_a;
+	
+	public ModelLeashKnot()
+	{
+		this(0, 0, 32, 32);
+	}
+	
+	public ModelLeashKnot(int p_i1150_1_, int p_i1150_2_, int p_i1150_3_, int p_i1150_4_)
+	{
+		textureWidth = p_i1150_3_;
+		textureHeight = p_i1150_4_;
+		field_110723_a = new ModelRenderer(this, p_i1150_1_, p_i1150_2_);
+		field_110723_a.addBox(-3.0F, -6.0F, -3.0F, 6, 8, 6, 0.0F);
+		field_110723_a.setRotationPoint(0.0F, 0.0F, 0.0F);
+	}
+	
+	@Override public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
+	{
+		setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
+		field_110723_a.render(par7);
+	}
+	
+	@Override public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
+	{
+		super.setRotationAngles(par1, par2, par3, par4, par5, par6, par7Entity);
+		field_110723_a.rotateAngleY = par4 / (180F / (float) Math.PI);
+		field_110723_a.rotateAngleX = par5 / (180F / (float) Math.PI);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelMagmaCube.java b/RMCClient/minecraft/net/minecraft/src/ModelMagmaCube.java
index 50a8870..8402735 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelMagmaCube.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelMagmaCube.java
@@ -27,11 +27,6 @@
 		field_78108_b.addBox(-2.0F, 18.0F, -2.0F, 4, 4, 4);
 	}
 	
-	public int func_78107_a()
-	{
-		return 5;
-	}
-	
 	@Override public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
 	{
 		setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
@@ -42,7 +37,7 @@
 		}
 	}
 	
-	@Override public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		EntityMagmaCube var5 = (EntityMagmaCube) par1EntityLiving;
 		float var6 = var5.field_70812_c + (var5.field_70811_b - var5.field_70812_c) * par4;
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelOcelot.java b/RMCClient/minecraft/net/minecraft/src/ModelOcelot.java
index ba70972..526b1f3 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelOcelot.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelOcelot.java
@@ -85,7 +85,7 @@
 		}
 	}
 	
-	@Override public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		EntityOcelot var5 = (EntityOcelot) par1EntityLiving;
 		ocelotBody.rotationPointY = 12.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelPig.java b/RMCClient/minecraft/net/minecraft/src/ModelPig.java
index 856b53a..bf5e332 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelPig.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelPig.java
@@ -7,10 +7,10 @@
 		this(0.0F);
 	}
 	
-	public ModelPig(float par1)
+	public ModelPig(float p_i1151_1_)
 	{
-		super(6, par1);
-		head.setTextureOffset(16, 16).addBox(-2.0F, 0.0F, -9.0F, 4, 3, 1, par1);
+		super(6, p_i1151_1_);
+		head.setTextureOffset(16, 16).addBox(-2.0F, 0.0F, -9.0F, 4, 3, 1, p_i1151_1_);
 		field_78145_g = 4.0F;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelQuadruped.java b/RMCClient/minecraft/net/minecraft/src/ModelQuadruped.java
index bddafcc..9aee652 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelQuadruped.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelQuadruped.java
@@ -13,25 +13,25 @@
 	protected float field_78145_g = 8.0F;
 	protected float field_78151_h = 4.0F;
 	
-	public ModelQuadruped(int par1, float par2)
+	public ModelQuadruped(int p_i1154_1_, float p_i1154_2_)
 	{
-		head.addBox(-4.0F, -4.0F, -8.0F, 8, 8, 8, par2);
-		head.setRotationPoint(0.0F, 18 - par1, -6.0F);
+		head.addBox(-4.0F, -4.0F, -8.0F, 8, 8, 8, p_i1154_2_);
+		head.setRotationPoint(0.0F, 18 - p_i1154_1_, -6.0F);
 		body = new ModelRenderer(this, 28, 8);
-		body.addBox(-5.0F, -10.0F, -7.0F, 10, 16, 8, par2);
-		body.setRotationPoint(0.0F, 17 - par1, 2.0F);
+		body.addBox(-5.0F, -10.0F, -7.0F, 10, 16, 8, p_i1154_2_);
+		body.setRotationPoint(0.0F, 17 - p_i1154_1_, 2.0F);
 		leg1 = new ModelRenderer(this, 0, 16);
-		leg1.addBox(-2.0F, 0.0F, -2.0F, 4, par1, 4, par2);
-		leg1.setRotationPoint(-3.0F, 24 - par1, 7.0F);
+		leg1.addBox(-2.0F, 0.0F, -2.0F, 4, p_i1154_1_, 4, p_i1154_2_);
+		leg1.setRotationPoint(-3.0F, 24 - p_i1154_1_, 7.0F);
 		leg2 = new ModelRenderer(this, 0, 16);
-		leg2.addBox(-2.0F, 0.0F, -2.0F, 4, par1, 4, par2);
-		leg2.setRotationPoint(3.0F, 24 - par1, 7.0F);
+		leg2.addBox(-2.0F, 0.0F, -2.0F, 4, p_i1154_1_, 4, p_i1154_2_);
+		leg2.setRotationPoint(3.0F, 24 - p_i1154_1_, 7.0F);
 		leg3 = new ModelRenderer(this, 0, 16);
-		leg3.addBox(-2.0F, 0.0F, -2.0F, 4, par1, 4, par2);
-		leg3.setRotationPoint(-3.0F, 24 - par1, -5.0F);
+		leg3.addBox(-2.0F, 0.0F, -2.0F, 4, p_i1154_1_, 4, p_i1154_2_);
+		leg3.setRotationPoint(-3.0F, 24 - p_i1154_1_, -5.0F);
 		leg4 = new ModelRenderer(this, 0, 16);
-		leg4.addBox(-2.0F, 0.0F, -2.0F, 4, par1, 4, par2);
-		leg4.setRotationPoint(3.0F, 24 - par1, -5.0F);
+		leg4.addBox(-2.0F, 0.0F, -2.0F, 4, p_i1154_1_, 4, p_i1154_2_);
+		leg4.setRotationPoint(3.0F, 24 - p_i1154_1_, -5.0F);
 	}
 	
 	@Override public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
@@ -66,6 +66,7 @@
 	
 	@Override public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
 	{
+		float var8 = 180F / (float) Math.PI;
 		head.rotateAngleX = par5 / (180F / (float) Math.PI);
 		head.rotateAngleY = par4 / (180F / (float) Math.PI);
 		body.rotateAngleX = (float) Math.PI / 2F;
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelRenderer.java b/RMCClient/minecraft/net/minecraft/src/ModelRenderer.java
index f834765..307b7f1 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelRenderer.java
@@ -30,31 +30,27 @@
 	public float field_82908_p;
 	public float field_82907_q;
 	
-	public ModelRenderer(ModelBase par1ModelBase)
+	public ModelRenderer(ModelBase p_i1173_1_)
 	{
-		this(par1ModelBase, (String) null);
+		this(p_i1173_1_, (String) null);
 	}
 	
-	public ModelRenderer(ModelBase par1ModelBase, int par2, int par3)
+	public ModelRenderer(ModelBase p_i1174_1_, int p_i1174_2_, int p_i1174_3_)
 	{
-		this(par1ModelBase);
-		setTextureOffset(par2, par3);
+		this(p_i1174_1_);
+		setTextureOffset(p_i1174_2_, p_i1174_3_);
 	}
 	
-	public ModelRenderer(ModelBase par1ModelBase, String par2Str)
+	public ModelRenderer(ModelBase p_i1172_1_, String p_i1172_2_)
 	{
 		textureWidth = 64.0F;
 		textureHeight = 32.0F;
-		compiled = false;
-		displayList = 0;
-		mirror = false;
 		showModel = true;
-		isHidden = false;
 		cubeList = new ArrayList();
-		baseModel = par1ModelBase;
-		par1ModelBase.boxList.add(this);
-		boxName = par2Str;
-		setTextureSize(par1ModelBase.textureWidth, par1ModelBase.textureHeight);
+		baseModel = p_i1172_1_;
+		p_i1172_1_.boxList.add(this);
+		boxName = p_i1172_2_;
+		setTextureSize(p_i1172_1_.textureWidth, p_i1172_1_.textureHeight);
 	}
 	
 	public ModelRenderer addBox(float par1, float par2, float par3, int par4, int par5, int par6)
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelSheep1.java b/RMCClient/minecraft/net/minecraft/src/ModelSheep1.java
index a12a6fb..2852a68 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelSheep1.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelSheep1.java
@@ -28,7 +28,7 @@
 		leg4.setRotationPoint(3.0F, 12.0F, -5.0F);
 	}
 	
-	@Override public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		super.setLivingAnimations(par1EntityLiving, par2, par3, par4);
 		head.rotationPointY = 6.0F + ((EntitySheep) par1EntityLiving).func_70894_j(par4) * 9.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelSheep2.java b/RMCClient/minecraft/net/minecraft/src/ModelSheep2.java
index 8918d74..10af5de 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelSheep2.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelSheep2.java
@@ -15,7 +15,7 @@
 		body.setRotationPoint(0.0F, 5.0F, 2.0F);
 	}
 	
-	@Override public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		super.setLivingAnimations(par1EntityLiving, par2, par3, par4);
 		head.rotationPointY = 6.0F + ((EntitySheep) par1EntityLiving).func_70894_j(par4) * 9.0F;
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelSkeleton.java b/RMCClient/minecraft/net/minecraft/src/ModelSkeleton.java
index 1d45ea4..7ba9fa7 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelSkeleton.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelSkeleton.java
@@ -7,26 +7,26 @@
 		this(0.0F);
 	}
 	
-	public ModelSkeleton(float par1)
+	public ModelSkeleton(float p_i1156_1_)
 	{
-		super(par1, 0.0F, 64, 32);
+		super(p_i1156_1_, 0.0F, 64, 32);
 		bipedRightArm = new ModelRenderer(this, 40, 16);
-		bipedRightArm.addBox(-1.0F, -2.0F, -1.0F, 2, 12, 2, par1);
+		bipedRightArm.addBox(-1.0F, -2.0F, -1.0F, 2, 12, 2, p_i1156_1_);
 		bipedRightArm.setRotationPoint(-5.0F, 2.0F, 0.0F);
 		bipedLeftArm = new ModelRenderer(this, 40, 16);
 		bipedLeftArm.mirror = true;
-		bipedLeftArm.addBox(-1.0F, -2.0F, -1.0F, 2, 12, 2, par1);
+		bipedLeftArm.addBox(-1.0F, -2.0F, -1.0F, 2, 12, 2, p_i1156_1_);
 		bipedLeftArm.setRotationPoint(5.0F, 2.0F, 0.0F);
 		bipedRightLeg = new ModelRenderer(this, 0, 16);
-		bipedRightLeg.addBox(-1.0F, 0.0F, -1.0F, 2, 12, 2, par1);
+		bipedRightLeg.addBox(-1.0F, 0.0F, -1.0F, 2, 12, 2, p_i1156_1_);
 		bipedRightLeg.setRotationPoint(-2.0F, 12.0F, 0.0F);
 		bipedLeftLeg = new ModelRenderer(this, 0, 16);
 		bipedLeftLeg.mirror = true;
-		bipedLeftLeg.addBox(-1.0F, 0.0F, -1.0F, 2, 12, 2, par1);
+		bipedLeftLeg.addBox(-1.0F, 0.0F, -1.0F, 2, 12, 2, p_i1156_1_);
 		bipedLeftLeg.setRotationPoint(2.0F, 12.0F, 0.0F);
 	}
 	
-	@Override public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		aimedBow = ((EntitySkeleton) par1EntityLiving).getSkeletonType() == 1;
 		super.setLivingAnimations(par1EntityLiving, par2, par3, par4);
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelSkeletonHead.java b/RMCClient/minecraft/net/minecraft/src/ModelSkeletonHead.java
index 3b923dd..9b82fe7 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelSkeletonHead.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelSkeletonHead.java
@@ -9,11 +9,11 @@
 		this(0, 35, 64, 64);
 	}
 	
-	public ModelSkeletonHead(int par1, int par2, int par3, int par4)
+	public ModelSkeletonHead(int p_i1155_1_, int p_i1155_2_, int p_i1155_3_, int p_i1155_4_)
 	{
-		textureWidth = par3;
-		textureHeight = par4;
-		skeletonHead = new ModelRenderer(this, par1, par2);
+		textureWidth = p_i1155_3_;
+		textureHeight = p_i1155_4_;
+		skeletonHead = new ModelRenderer(this, p_i1155_1_, p_i1155_2_);
 		skeletonHead.addBox(-4.0F, -8.0F, -4.0F, 8, 8, 8, 0.0F);
 		skeletonHead.setRotationPoint(0.0F, 0.0F, 0.0F);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelSlime.java b/RMCClient/minecraft/net/minecraft/src/ModelSlime.java
index f698782..e50be81 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelSlime.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelSlime.java
@@ -7,13 +7,13 @@
 	ModelRenderer slimeLeftEye;
 	ModelRenderer slimeMouth;
 	
-	public ModelSlime(int par1)
+	public ModelSlime(int p_i1157_1_)
 	{
-		slimeBodies = new ModelRenderer(this, 0, par1);
+		slimeBodies = new ModelRenderer(this, 0, p_i1157_1_);
 		slimeBodies.addBox(-4.0F, 16.0F, -4.0F, 8, 8, 8);
-		if(par1 > 0)
+		if(p_i1157_1_ > 0)
 		{
-			slimeBodies = new ModelRenderer(this, 0, par1);
+			slimeBodies = new ModelRenderer(this, 0, p_i1157_1_);
 			slimeBodies.addBox(-3.0F, 17.0F, -3.0F, 6, 6, 6);
 			slimeRightEye = new ModelRenderer(this, 32, 0);
 			slimeRightEye.addBox(-3.25F, 18.0F, -3.5F, 2, 2, 2);
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelVillager.java b/RMCClient/minecraft/net/minecraft/src/ModelVillager.java
index 96ea933..9f30994 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelVillager.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelVillager.java
@@ -9,36 +9,36 @@
 	public ModelRenderer leftVillagerLeg;
 	public ModelRenderer field_82898_f;
 	
-	public ModelVillager(float par1)
+	public ModelVillager(float p_i1163_1_)
 	{
-		this(par1, 0.0F, 64, 64);
+		this(p_i1163_1_, 0.0F, 64, 64);
 	}
 	
-	public ModelVillager(float par1, float par2, int par3, int par4)
+	public ModelVillager(float p_i1164_1_, float p_i1164_2_, int p_i1164_3_, int p_i1164_4_)
 	{
-		villagerHead = new ModelRenderer(this).setTextureSize(par3, par4);
-		villagerHead.setRotationPoint(0.0F, 0.0F + par2, 0.0F);
-		villagerHead.setTextureOffset(0, 0).addBox(-4.0F, -10.0F, -4.0F, 8, 10, 8, par1);
-		field_82898_f = new ModelRenderer(this).setTextureSize(par3, par4);
-		field_82898_f.setRotationPoint(0.0F, par2 - 2.0F, 0.0F);
-		field_82898_f.setTextureOffset(24, 0).addBox(-1.0F, -1.0F, -6.0F, 2, 4, 2, par1);
+		villagerHead = new ModelRenderer(this).setTextureSize(p_i1164_3_, p_i1164_4_);
+		villagerHead.setRotationPoint(0.0F, 0.0F + p_i1164_2_, 0.0F);
+		villagerHead.setTextureOffset(0, 0).addBox(-4.0F, -10.0F, -4.0F, 8, 10, 8, p_i1164_1_);
+		field_82898_f = new ModelRenderer(this).setTextureSize(p_i1164_3_, p_i1164_4_);
+		field_82898_f.setRotationPoint(0.0F, p_i1164_2_ - 2.0F, 0.0F);
+		field_82898_f.setTextureOffset(24, 0).addBox(-1.0F, -1.0F, -6.0F, 2, 4, 2, p_i1164_1_);
 		villagerHead.addChild(field_82898_f);
-		villagerBody = new ModelRenderer(this).setTextureSize(par3, par4);
-		villagerBody.setRotationPoint(0.0F, 0.0F + par2, 0.0F);
-		villagerBody.setTextureOffset(16, 20).addBox(-4.0F, 0.0F, -3.0F, 8, 12, 6, par1);
-		villagerBody.setTextureOffset(0, 38).addBox(-4.0F, 0.0F, -3.0F, 8, 18, 6, par1 + 0.5F);
-		villagerArms = new ModelRenderer(this).setTextureSize(par3, par4);
-		villagerArms.setRotationPoint(0.0F, 0.0F + par2 + 2.0F, 0.0F);
-		villagerArms.setTextureOffset(44, 22).addBox(-8.0F, -2.0F, -2.0F, 4, 8, 4, par1);
-		villagerArms.setTextureOffset(44, 22).addBox(4.0F, -2.0F, -2.0F, 4, 8, 4, par1);
-		villagerArms.setTextureOffset(40, 38).addBox(-4.0F, 2.0F, -2.0F, 8, 4, 4, par1);
-		rightVillagerLeg = new ModelRenderer(this, 0, 22).setTextureSize(par3, par4);
-		rightVillagerLeg.setRotationPoint(-2.0F, 12.0F + par2, 0.0F);
-		rightVillagerLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, par1);
-		leftVillagerLeg = new ModelRenderer(this, 0, 22).setTextureSize(par3, par4);
+		villagerBody = new ModelRenderer(this).setTextureSize(p_i1164_3_, p_i1164_4_);
+		villagerBody.setRotationPoint(0.0F, 0.0F + p_i1164_2_, 0.0F);
+		villagerBody.setTextureOffset(16, 20).addBox(-4.0F, 0.0F, -3.0F, 8, 12, 6, p_i1164_1_);
+		villagerBody.setTextureOffset(0, 38).addBox(-4.0F, 0.0F, -3.0F, 8, 18, 6, p_i1164_1_ + 0.5F);
+		villagerArms = new ModelRenderer(this).setTextureSize(p_i1164_3_, p_i1164_4_);
+		villagerArms.setRotationPoint(0.0F, 0.0F + p_i1164_2_ + 2.0F, 0.0F);
+		villagerArms.setTextureOffset(44, 22).addBox(-8.0F, -2.0F, -2.0F, 4, 8, 4, p_i1164_1_);
+		villagerArms.setTextureOffset(44, 22).addBox(4.0F, -2.0F, -2.0F, 4, 8, 4, p_i1164_1_);
+		villagerArms.setTextureOffset(40, 38).addBox(-4.0F, 2.0F, -2.0F, 8, 4, 4, p_i1164_1_);
+		rightVillagerLeg = new ModelRenderer(this, 0, 22).setTextureSize(p_i1164_3_, p_i1164_4_);
+		rightVillagerLeg.setRotationPoint(-2.0F, 12.0F + p_i1164_2_, 0.0F);
+		rightVillagerLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, p_i1164_1_);
+		leftVillagerLeg = new ModelRenderer(this, 0, 22).setTextureSize(p_i1164_3_, p_i1164_4_);
 		leftVillagerLeg.mirror = true;
-		leftVillagerLeg.setRotationPoint(2.0F, 12.0F + par2, 0.0F);
-		leftVillagerLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, par1);
+		leftVillagerLeg.setRotationPoint(2.0F, 12.0F + p_i1164_2_, 0.0F);
+		leftVillagerLeg.addBox(-2.0F, 0.0F, -2.0F, 4, 12, 4, p_i1164_1_);
 	}
 	
 	@Override public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelWitch.java b/RMCClient/minecraft/net/minecraft/src/ModelWitch.java
index 9d4484c..6d713ed 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelWitch.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelWitch.java
@@ -2,13 +2,13 @@
 
 public class ModelWitch extends ModelVillager
 {
-	public boolean field_82900_g = false;
+	public boolean field_82900_g;
 	private ModelRenderer field_82901_h = new ModelRenderer(this).setTextureSize(64, 128);
 	private ModelRenderer witchHat;
 	
-	public ModelWitch(float par1)
+	public ModelWitch(float p_i1166_1_)
 	{
-		super(par1, 0.0F, 64, 128);
+		super(p_i1166_1_, 0.0F, 64, 128);
 		field_82901_h.setRotationPoint(0.0F, -2.0F, 0.0F);
 		field_82901_h.setTextureOffset(0, 0).addBox(0.0F, 3.0F, -6.75F, 1, 1, 1, -0.25F);
 		field_82898_f.addChild(field_82901_h);
@@ -34,11 +34,6 @@
 		var4.rotateAngleX = -0.20943952F;
 		var4.rotateAngleZ = 0.10471976F;
 		var3.addChild(var4);
-	}
-	
-	public int func_82899_a()
-	{
-		return 0;
 	}
 	
 	@Override public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelWither.java b/RMCClient/minecraft/net/minecraft/src/ModelWither.java
index 06622a1..7d710a9 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelWither.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelWither.java
@@ -59,7 +59,7 @@
 		}
 	}
 	
-	@Override public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		EntityWither var5 = (EntityWither) par1EntityLiving;
 		for(int var6 = 1; var6 < 3; ++var6)
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelWolf.java b/RMCClient/minecraft/net/minecraft/src/ModelWolf.java
index dcc4679..9d1a6e7 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelWolf.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelWolf.java
@@ -81,7 +81,7 @@
 		}
 	}
 	
-	@Override public void setLivingAnimations(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void setLivingAnimations(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		EntityWolf var5 = (EntityWolf) par1EntityLiving;
 		if(var5.isAngry())
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelZombie.java b/RMCClient/minecraft/net/minecraft/src/ModelZombie.java
index 39be60e..6787377 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelZombie.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelZombie.java
@@ -7,14 +7,14 @@
 		this(0.0F, false);
 	}
 	
-	public ModelZombie(float par1, boolean par2)
+	public ModelZombie(float p_i1168_1_, boolean p_i1168_2_)
 	{
-		super(par1, 0.0F, 64, par2 ? 32 : 64);
+		super(p_i1168_1_, 0.0F, 64, p_i1168_2_ ? 32 : 64);
 	}
 	
-	protected ModelZombie(float par1, float par2, int par3, int par4)
+	protected ModelZombie(float p_i1167_1_, float p_i1167_2_, int p_i1167_3_, int p_i1167_4_)
 	{
-		super(par1, par2, par3, par4);
+		super(p_i1167_1_, p_i1167_2_, p_i1167_3_, p_i1167_4_);
 	}
 	
 	@Override public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
diff --git a/RMCClient/minecraft/net/minecraft/src/ModelZombieVillager.java b/RMCClient/minecraft/net/minecraft/src/ModelZombieVillager.java
index 4c586d5..c7cdc7e 100644
--- a/RMCClient/minecraft/net/minecraft/src/ModelZombieVillager.java
+++ b/RMCClient/minecraft/net/minecraft/src/ModelZombieVillager.java
@@ -7,20 +7,20 @@
 		this(0.0F, 0.0F, false);
 	}
 	
-	public ModelZombieVillager(float par1, float par2, boolean par3)
+	public ModelZombieVillager(float p_i1165_1_, float p_i1165_2_, boolean p_i1165_3_)
 	{
-		super(par1, 0.0F, 64, par3 ? 32 : 64);
-		if(par3)
+		super(p_i1165_1_, 0.0F, 64, p_i1165_3_ ? 32 : 64);
+		if(p_i1165_3_)
 		{
 			bipedHead = new ModelRenderer(this, 0, 0);
-			bipedHead.addBox(-4.0F, -10.0F, -4.0F, 8, 6, 8, par1);
-			bipedHead.setRotationPoint(0.0F, 0.0F + par2, 0.0F);
+			bipedHead.addBox(-4.0F, -10.0F, -4.0F, 8, 6, 8, p_i1165_1_);
+			bipedHead.setRotationPoint(0.0F, 0.0F + p_i1165_2_, 0.0F);
 		} else
 		{
 			bipedHead = new ModelRenderer(this);
-			bipedHead.setRotationPoint(0.0F, 0.0F + par2, 0.0F);
-			bipedHead.setTextureOffset(0, 32).addBox(-4.0F, -10.0F, -4.0F, 8, 10, 8, par1);
-			bipedHead.setTextureOffset(24, 32).addBox(-1.0F, -3.0F, -6.0F, 2, 4, 2, par1);
+			bipedHead.setRotationPoint(0.0F, 0.0F + p_i1165_2_, 0.0F);
+			bipedHead.setTextureOffset(0, 32).addBox(-4.0F, -10.0F, -4.0F, 8, 10, 8, p_i1165_1_);
+			bipedHead.setTextureOffset(24, 32).addBox(-1.0F, -3.0F, -6.0F, 2, 4, 2, p_i1165_1_);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ModifiableAttributeInstance.java b/RMCClient/minecraft/net/minecraft/src/ModifiableAttributeInstance.java
new file mode 100644
index 0000000..5852c61
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ModifiableAttributeInstance.java
@@ -0,0 +1,162 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Set;
+import java.util.UUID;
+
+public class ModifiableAttributeInstance implements AttributeInstance
+{
+	private final BaseAttributeMap field_111138_a;
+	private final Attribute field_111136_b;
+	private final Map field_111137_c = Maps.newHashMap();
+	private final Map field_111134_d = Maps.newHashMap();
+	private final Map field_111135_e = Maps.newHashMap();
+	private double field_111132_f;
+	private boolean field_111133_g = true;
+	private double field_111139_h;
+	
+	public ModifiableAttributeInstance(BaseAttributeMap p_i1608_1_, Attribute p_i1608_2_)
+	{
+		field_111138_a = p_i1608_1_;
+		field_111136_b = p_i1608_2_;
+		field_111132_f = p_i1608_2_.func_111110_b();
+		for(int var3 = 0; var3 < 3; ++var3)
+		{
+			field_111137_c.put(Integer.valueOf(var3), new HashSet());
+		}
+	}
+	
+	@Override public void func_111121_a(AttributeModifier p_111121_1_)
+	{
+		if(func_111127_a(p_111121_1_.func_111167_a()) != null) throw new IllegalArgumentException("Modifier is already applied on this attribute!");
+		else
+		{
+			Object var2 = field_111134_d.get(p_111121_1_.func_111166_b());
+			if(var2 == null)
+			{
+				var2 = new HashSet();
+				field_111134_d.put(p_111121_1_.func_111166_b(), var2);
+			}
+			((Set) field_111137_c.get(Integer.valueOf(p_111121_1_.func_111169_c()))).add(p_111121_1_);
+			((Set) var2).add(p_111121_1_);
+			field_111135_e.put(p_111121_1_.func_111167_a(), p_111121_1_);
+			func_111131_f();
+		}
+	}
+	
+	@Override public Collection func_111122_c()
+	{
+		HashSet var1 = new HashSet();
+		for(int var2 = 0; var2 < 3; ++var2)
+		{
+			var1.addAll(func_111130_a(var2));
+		}
+		return var1;
+	}
+	
+	@Override public Attribute func_111123_a()
+	{
+		return field_111136_b;
+	}
+	
+	@Override public void func_111124_b(AttributeModifier p_111124_1_)
+	{
+		for(int var2 = 0; var2 < 3; ++var2)
+		{
+			Set var3 = (Set) field_111137_c.get(Integer.valueOf(var2));
+			var3.remove(p_111124_1_);
+		}
+		Set var4 = (Set) field_111134_d.get(p_111124_1_.func_111166_b());
+		if(var4 != null)
+		{
+			var4.remove(p_111124_1_);
+			if(var4.isEmpty())
+			{
+				field_111134_d.remove(p_111124_1_.func_111166_b());
+			}
+		}
+		field_111135_e.remove(p_111124_1_.func_111167_a());
+		func_111131_f();
+	}
+	
+	@Override public double func_111125_b()
+	{
+		return field_111132_f;
+	}
+	
+	@Override public double func_111126_e()
+	{
+		if(field_111133_g)
+		{
+			field_111139_h = func_111129_g();
+			field_111133_g = false;
+		}
+		return field_111139_h;
+	}
+	
+	@Override public AttributeModifier func_111127_a(UUID p_111127_1_)
+	{
+		return (AttributeModifier) field_111135_e.get(p_111127_1_);
+	}
+	
+	@Override public void func_111128_a(double p_111128_1_)
+	{
+		if(p_111128_1_ != func_111125_b())
+		{
+			field_111132_f = p_111128_1_;
+			func_111131_f();
+		}
+	}
+	
+	private double func_111129_g()
+	{
+		double var1 = func_111125_b();
+		AttributeModifier var4;
+		for(Iterator var3 = func_111130_a(0).iterator(); var3.hasNext(); var1 += var4.func_111164_d())
+		{
+			var4 = (AttributeModifier) var3.next();
+		}
+		double var7 = var1;
+		Iterator var5;
+		AttributeModifier var6;
+		for(var5 = func_111130_a(1).iterator(); var5.hasNext(); var7 += var1 * var6.func_111164_d())
+		{
+			var6 = (AttributeModifier) var5.next();
+		}
+		for(var5 = func_111130_a(2).iterator(); var5.hasNext(); var7 *= 1.0D + var6.func_111164_d())
+		{
+			var6 = (AttributeModifier) var5.next();
+		}
+		return field_111136_b.func_111109_a(var7);
+	}
+	
+	public Collection func_111130_a(int p_111130_1_)
+	{
+		return (Collection) field_111137_c.get(Integer.valueOf(p_111130_1_));
+	}
+	
+	private void func_111131_f()
+	{
+		field_111133_g = true;
+		field_111138_a.func_111149_a(this);
+	}
+	
+	@Override public void func_142049_d()
+	{
+		Collection var1 = func_111122_c();
+		if(var1 != null)
+		{
+			ArrayList var4 = new ArrayList(var1);
+			Iterator var2 = var4.iterator();
+			while(var2.hasNext())
+			{
+				AttributeModifier var3 = (AttributeModifier) var2.next();
+				func_111124_b(var3);
+			}
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/MouseHelper.java b/RMCClient/minecraft/net/minecraft/src/MouseHelper.java
index 3e1822e..a02585e 100644
--- a/RMCClient/minecraft/net/minecraft/src/MouseHelper.java
+++ b/RMCClient/minecraft/net/minecraft/src/MouseHelper.java
@@ -1,21 +1,12 @@
 package net.minecraft.src;
 
-import java.awt.Component;
-
 import org.lwjgl.input.Mouse;
+import org.lwjgl.opengl.Display;
 
 public class MouseHelper
 {
-	private final Component windowComponent;
-	private final GameSettings field_85184_d;
 	public int deltaX;
 	public int deltaY;
-	
-	public MouseHelper(Component par1Component, GameSettings par2GameSettings)
-	{
-		windowComponent = par1Component;
-		field_85184_d = par2GameSettings;
-	}
 	
 	public void grabMouseCursor()
 	{
@@ -32,14 +23,7 @@
 	
 	public void ungrabMouseCursor()
 	{
-		int var1 = windowComponent.getWidth();
-		int var2 = windowComponent.getHeight();
-		if(windowComponent.getParent() != null)
-		{
-			var1 = windowComponent.getParent().getWidth();
-			var2 = windowComponent.getParent().getHeight();
-		}
-		Mouse.setCursorPosition(var1 / 2, var2 / 2);
+		Mouse.setCursorPosition(Display.getWidth() / 2, Display.getHeight() / 2);
 		Mouse.setGrabbed(false);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/MovementInput.java b/RMCClient/minecraft/net/minecraft/src/MovementInput.java
index 2ef3272..468e840 100644
--- a/RMCClient/minecraft/net/minecraft/src/MovementInput.java
+++ b/RMCClient/minecraft/net/minecraft/src/MovementInput.java
@@ -2,10 +2,10 @@
 
 public class MovementInput
 {
-	public float moveStrafe = 0.0F;
-	public float moveForward = 0.0F;
-	public boolean jump = false;
-	public boolean sneak = false;
+	public float moveStrafe;
+	public float moveForward;
+	public boolean jump;
+	public boolean sneak;
 	
 	public void updatePlayerMoveState()
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/MovementInputFromOptions.java b/RMCClient/minecraft/net/minecraft/src/MovementInputFromOptions.java
index bc72f2d..7c0c591 100644
--- a/RMCClient/minecraft/net/minecraft/src/MovementInputFromOptions.java
+++ b/RMCClient/minecraft/net/minecraft/src/MovementInputFromOptions.java
@@ -4,9 +4,9 @@
 {
 	private GameSettings gameSettings;
 	
-	public MovementInputFromOptions(GameSettings par1GameSettings)
+	public MovementInputFromOptions(GameSettings p_i1237_1_)
 	{
-		gameSettings = par1GameSettings;
+		gameSettings = p_i1237_1_;
 	}
 	
 	@Override public void updatePlayerMoveState()
diff --git a/RMCClient/minecraft/net/minecraft/src/MovingObjectPosition.java b/RMCClient/minecraft/net/minecraft/src/MovingObjectPosition.java
index f3fec6a..c7f3727 100644
--- a/RMCClient/minecraft/net/minecraft/src/MovingObjectPosition.java
+++ b/RMCClient/minecraft/net/minecraft/src/MovingObjectPosition.java
@@ -10,20 +10,20 @@
 	public Vec3 hitVec;
 	public Entity entityHit;
 	
-	public MovingObjectPosition(Entity par1Entity)
+	public MovingObjectPosition(Entity p_i2304_1_)
 	{
 		typeOfHit = EnumMovingObjectType.ENTITY;
-		entityHit = par1Entity;
-		hitVec = par1Entity.worldObj.getWorldVec3Pool().getVecFromPool(par1Entity.posX, par1Entity.posY, par1Entity.posZ);
+		entityHit = p_i2304_1_;
+		hitVec = p_i2304_1_.worldObj.getWorldVec3Pool().getVecFromPool(p_i2304_1_.posX, p_i2304_1_.posY, p_i2304_1_.posZ);
 	}
 	
-	public MovingObjectPosition(int par1, int par2, int par3, int par4, Vec3 par5Vec3)
+	public MovingObjectPosition(int p_i2303_1_, int p_i2303_2_, int p_i2303_3_, int p_i2303_4_, Vec3 p_i2303_5_)
 	{
 		typeOfHit = EnumMovingObjectType.TILE;
-		blockX = par1;
-		blockY = par2;
-		blockZ = par3;
-		sideHit = par4;
-		hitVec = par5Vec3.myVec3LocalPool.getVecFromPool(par5Vec3.xCoord, par5Vec3.yCoord, par5Vec3.zCoord);
+		blockX = p_i2303_1_;
+		blockY = p_i2303_2_;
+		blockZ = p_i2303_3_;
+		sideHit = p_i2303_4_;
+		hitVec = p_i2303_5_.myVec3LocalPool.getVecFromPool(p_i2303_5_.xCoord, p_i2303_5_.yCoord, p_i2303_5_.zCoord);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/MusInputStream.java b/RMCClient/minecraft/net/minecraft/src/MusInputStream.java
deleted file mode 100644
index dc9da5b..0000000
--- a/RMCClient/minecraft/net/minecraft/src/MusInputStream.java
+++ /dev/null
@@ -1,40 +0,0 @@
-package net.minecraft.src;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.net.URL;
-
-class MusInputStream extends InputStream
-{
-	private int hash;
-	private InputStream inputStream;
-	byte[] buffer;
-	final CodecMus codec;
-	
-	public MusInputStream(CodecMus par1CodecMus, URL par2URL, InputStream par3InputStream)
-	{
-		codec = par1CodecMus;
-		buffer = new byte[1];
-		inputStream = par3InputStream;
-		String var4 = par2URL.getPath();
-		var4 = var4.substring(var4.lastIndexOf("/") + 1);
-		hash = var4.hashCode();
-	}
-	
-	@Override public int read() throws IOException
-	{
-		int var1 = this.read(buffer, 0, 1);
-		return var1 < 0 ? var1 : buffer[0];
-	}
-	
-	@Override public int read(byte[] par1ArrayOfByte, int par2, int par3) throws IOException
-	{
-		par3 = inputStream.read(par1ArrayOfByte, par2, par3);
-		for(int var4 = 0; var4 < par3; ++var4)
-		{
-			byte var5 = par1ArrayOfByte[par2 + var4] = (byte) (par1ArrayOfByte[par2 + var4] ^ hash >> 8);
-			hash = hash * 498729871 + 85731 * var5;
-		}
-		return par3;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTBase.java b/RMCClient/minecraft/net/minecraft/src/NBTBase.java
index 87b0298..7b209e0 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTBase.java
@@ -9,14 +9,14 @@
 	public static final String[] NBTTypes = new String[] { "END", "BYTE", "SHORT", "INT", "LONG", "FLOAT", "DOUBLE", "BYTE[]", "STRING", "LIST", "COMPOUND", "INT[]" };
 	private String name;
 	
-	protected NBTBase(String par1Str)
+	protected NBTBase(String p_i1391_1_)
 	{
-		if(par1Str == null)
+		if(p_i1391_1_ == null)
 		{
 			name = "";
 		} else
 		{
-			name = par1Str;
+			name = p_i1391_1_;
 		}
 	}
 	
@@ -44,7 +44,7 @@
 		return name.hashCode() ^ getId();
 	}
 	
-	abstract void load(DataInput var1) throws IOException;
+	abstract void load(DataInput var1, int var2) throws IOException;
 	
 	public NBTBase setName(String par1Str)
 	{
@@ -59,6 +59,29 @@
 	}
 	
 	abstract void write(DataOutput var1) throws IOException;
+	
+	public static NBTBase func_130104_b(DataInput p_130104_0_, int p_130104_1_) throws IOException
+	{
+		byte var2 = p_130104_0_.readByte();
+		if(var2 == 0) return new NBTTagEnd();
+		else
+		{
+			String var3 = p_130104_0_.readUTF();
+			NBTBase var4 = newTag(var2, var3);
+			try
+			{
+				var4.load(p_130104_0_, p_130104_1_);
+				return var4;
+			} catch(IOException var8)
+			{
+				CrashReport var6 = CrashReport.makeCrashReport(var8, "Loading NBT data");
+				CrashReportCategory var7 = var6.makeCategory("NBT Tag");
+				var7.addCrashSection("Tag name", var3);
+				var7.addCrashSection("Tag type", Byte.valueOf(var2));
+				throw new ReportedException(var6);
+			}
+		}
+	}
 	
 	public static String getTagName(byte par0)
 	{
@@ -128,25 +151,7 @@
 	
 	public static NBTBase readNamedTag(DataInput par0DataInput) throws IOException
 	{
-		byte var1 = par0DataInput.readByte();
-		if(var1 == 0) return new NBTTagEnd();
-		else
-		{
-			String var2 = par0DataInput.readUTF();
-			NBTBase var3 = newTag(var1, var2);
-			try
-			{
-				var3.load(par0DataInput);
-				return var3;
-			} catch(IOException var7)
-			{
-				CrashReport var5 = CrashReport.makeCrashReport(var7, "Loading NBT data");
-				CrashReportCategory var6 = var5.makeCategory("NBT Tag");
-				var6.addCrashSection("Tag name", var2);
-				var6.addCrashSection("Tag type", Byte.valueOf(var1));
-				throw new ReportedException(var5);
-			}
-		}
+		return func_130104_b(par0DataInput, 0);
 	}
 	
 	public static void writeNamedTag(NBTBase par0NBTBase, DataOutput par1DataOutput) throws IOException
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagByte.java b/RMCClient/minecraft/net/minecraft/src/NBTTagByte.java
index 31ca7c9..29edbad 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagByte.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagByte.java
@@ -8,15 +8,15 @@
 {
 	public byte data;
 	
-	public NBTTagByte(String par1Str)
+	public NBTTagByte(String p_i1371_1_)
 	{
-		super(par1Str);
+		super(p_i1371_1_);
 	}
 	
-	public NBTTagByte(String par1Str, byte par2)
+	public NBTTagByte(String p_i1372_1_, byte p_i1372_2_)
 	{
-		super(par1Str);
-		data = par2;
+		super(p_i1372_1_);
+		data = p_i1372_2_;
 	}
 	
 	@Override public NBTBase copy()
@@ -43,7 +43,7 @@
 		return super.hashCode() ^ data;
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
 		data = par1DataInput.readByte();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagByteArray.java b/RMCClient/minecraft/net/minecraft/src/NBTTagByteArray.java
index 31854e4..2fd0445 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagByteArray.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagByteArray.java
@@ -9,15 +9,15 @@
 {
 	public byte[] byteArray;
 	
-	public NBTTagByteArray(String par1Str)
+	public NBTTagByteArray(String p_i1369_1_)
 	{
-		super(par1Str);
+		super(p_i1369_1_);
 	}
 	
-	public NBTTagByteArray(String par1Str, byte[] par2ArrayOfByte)
+	public NBTTagByteArray(String p_i1370_1_, byte[] p_i1370_2_)
 	{
-		super(par1Str);
-		byteArray = par2ArrayOfByte;
+		super(p_i1370_1_);
+		byteArray = p_i1370_2_;
 	}
 	
 	@Override public NBTBase copy()
@@ -42,10 +42,10 @@
 		return super.hashCode() ^ Arrays.hashCode(byteArray);
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
-		int var2 = par1DataInput.readInt();
-		byteArray = new byte[var2];
+		int var3 = par1DataInput.readInt();
+		byteArray = new byte[var3];
 		par1DataInput.readFully(byteArray);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagCompound.java b/RMCClient/minecraft/net/minecraft/src/NBTTagCompound.java
index 40c528c..5252825 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagCompound.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagCompound.java
@@ -17,9 +17,9 @@
 		super("");
 	}
 	
-	public NBTTagCompound(String par1Str)
+	public NBTTagCompound(String p_i1375_1_)
 	{
-		super(par1Str);
+		super(p_i1375_1_);
 	}
 	
 	@Override public NBTBase copy()
@@ -213,13 +213,17 @@
 		return tagMap.isEmpty();
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
-		tagMap.clear();
-		NBTBase var2;
-		while((var2 = NBTBase.readNamedTag(par1DataInput)).getId() != 0)
+		if(p_74735_2_ > 512) throw new RuntimeException("Tried to read NBT tag with too high complexity, depth > 512");
+		else
 		{
-			tagMap.put(var2.getName(), var2);
+			tagMap.clear();
+			NBTBase var3;
+			while((var3 = NBTBase.func_130104_b(par1DataInput, p_74735_2_ + 1)).getId() != 0)
+			{
+				tagMap.put(var3.getName(), var3);
+			}
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagDouble.java b/RMCClient/minecraft/net/minecraft/src/NBTTagDouble.java
index b694d4a..7254330 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagDouble.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagDouble.java
@@ -8,15 +8,15 @@
 {
 	public double data;
 	
-	public NBTTagDouble(String par1Str)
+	public NBTTagDouble(String p_i1376_1_)
 	{
-		super(par1Str);
+		super(p_i1376_1_);
 	}
 	
-	public NBTTagDouble(String par1Str, double par2)
+	public NBTTagDouble(String p_i1377_1_, double p_i1377_2_)
 	{
-		super(par1Str);
-		data = par2;
+		super(p_i1377_1_);
+		data = p_i1377_2_;
 	}
 	
 	@Override public NBTBase copy()
@@ -44,7 +44,7 @@
 		return super.hashCode() ^ (int) (var1 ^ var1 >>> 32);
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
 		data = par1DataInput.readDouble();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagEnd.java b/RMCClient/minecraft/net/minecraft/src/NBTTagEnd.java
index 6313336..4a2d42a 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagEnd.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagEnd.java
@@ -21,7 +21,7 @@
 		return (byte) 0;
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagFloat.java b/RMCClient/minecraft/net/minecraft/src/NBTTagFloat.java
index f4432db..ff42187 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagFloat.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagFloat.java
@@ -8,15 +8,15 @@
 {
 	public float data;
 	
-	public NBTTagFloat(String par1Str)
+	public NBTTagFloat(String p_i1378_1_)
 	{
-		super(par1Str);
+		super(p_i1378_1_);
 	}
 	
-	public NBTTagFloat(String par1Str, float par2)
+	public NBTTagFloat(String p_i1379_1_, float p_i1379_2_)
 	{
-		super(par1Str);
-		data = par2;
+		super(p_i1379_1_);
+		data = p_i1379_2_;
 	}
 	
 	@Override public NBTBase copy()
@@ -43,7 +43,7 @@
 		return super.hashCode() ^ Float.floatToIntBits(data);
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
 		data = par1DataInput.readFloat();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagInt.java b/RMCClient/minecraft/net/minecraft/src/NBTTagInt.java
index 2bdc319..2e885f7 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagInt.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagInt.java
@@ -8,15 +8,15 @@
 {
 	public int data;
 	
-	public NBTTagInt(String par1Str)
+	public NBTTagInt(String p_i1382_1_)
 	{
-		super(par1Str);
+		super(p_i1382_1_);
 	}
 	
-	public NBTTagInt(String par1Str, int par2)
+	public NBTTagInt(String p_i1383_1_, int p_i1383_2_)
 	{
-		super(par1Str);
-		data = par2;
+		super(p_i1383_1_);
+		data = p_i1383_2_;
 	}
 	
 	@Override public NBTBase copy()
@@ -43,7 +43,7 @@
 		return super.hashCode() ^ data;
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
 		data = par1DataInput.readInt();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagIntArray.java b/RMCClient/minecraft/net/minecraft/src/NBTTagIntArray.java
index 639e36a..d6842ec 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagIntArray.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagIntArray.java
@@ -9,15 +9,15 @@
 {
 	public int[] intArray;
 	
-	public NBTTagIntArray(String par1Str)
+	public NBTTagIntArray(String p_i1380_1_)
 	{
-		super(par1Str);
+		super(p_i1380_1_);
 	}
 	
-	public NBTTagIntArray(String par1Str, int[] par2ArrayOfInteger)
+	public NBTTagIntArray(String p_i1381_1_, int[] p_i1381_2_)
 	{
-		super(par1Str);
-		intArray = par2ArrayOfInteger;
+		super(p_i1381_1_);
+		intArray = p_i1381_2_;
 	}
 	
 	@Override public NBTBase copy()
@@ -47,13 +47,13 @@
 		return super.hashCode() ^ Arrays.hashCode(intArray);
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
-		int var2 = par1DataInput.readInt();
-		intArray = new int[var2];
-		for(int var3 = 0; var3 < var2; ++var3)
+		int var3 = par1DataInput.readInt();
+		intArray = new int[var3];
+		for(int var4 = 0; var4 < var3; ++var4)
 		{
-			intArray[var3] = par1DataInput.readInt();
+			intArray[var4] = par1DataInput.readInt();
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagList.java b/RMCClient/minecraft/net/minecraft/src/NBTTagList.java
index b54f2c7..2826b2f 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagList.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagList.java
@@ -17,9 +17,9 @@
 		super("");
 	}
 	
-	public NBTTagList(String par1Str)
+	public NBTTagList(String p_i1384_1_)
 	{
-		super(par1Str);
+		super(p_i1384_1_);
 	}
 	
 	public void appendTag(NBTBase par1NBTBase)
@@ -62,16 +62,20 @@
 		return super.hashCode() ^ tagList.hashCode();
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
-		tagType = par1DataInput.readByte();
-		int var2 = par1DataInput.readInt();
-		tagList = new ArrayList();
-		for(int var3 = 0; var3 < var2; ++var3)
+		if(p_74735_2_ > 512) throw new RuntimeException("Tried to read NBT tag with too high complexity, depth > 512");
+		else
 		{
-			NBTBase var4 = NBTBase.newTag(tagType, (String) null);
-			var4.load(par1DataInput);
-			tagList.add(var4);
+			tagType = par1DataInput.readByte();
+			int var3 = par1DataInput.readInt();
+			tagList = new ArrayList();
+			for(int var4 = 0; var4 < var3; ++var4)
+			{
+				NBTBase var5 = NBTBase.newTag(tagType, (String) null);
+				var5.load(par1DataInput, p_74735_2_ + 1);
+				tagList.add(var5);
+			}
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagLong.java b/RMCClient/minecraft/net/minecraft/src/NBTTagLong.java
index 652058c..5885499 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagLong.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagLong.java
@@ -8,15 +8,15 @@
 {
 	public long data;
 	
-	public NBTTagLong(String par1Str)
+	public NBTTagLong(String p_i1385_1_)
 	{
-		super(par1Str);
+		super(p_i1385_1_);
 	}
 	
-	public NBTTagLong(String par1Str, long par2)
+	public NBTTagLong(String p_i1386_1_, long p_i1386_2_)
 	{
-		super(par1Str);
-		data = par2;
+		super(p_i1386_1_);
+		data = p_i1386_2_;
 	}
 	
 	@Override public NBTBase copy()
@@ -43,7 +43,7 @@
 		return super.hashCode() ^ (int) (data ^ data >>> 32);
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
 		data = par1DataInput.readLong();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagShort.java b/RMCClient/minecraft/net/minecraft/src/NBTTagShort.java
index 16f830d..e0061ac 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagShort.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagShort.java
@@ -8,15 +8,15 @@
 {
 	public short data;
 	
-	public NBTTagShort(String par1Str)
+	public NBTTagShort(String p_i1387_1_)
 	{
-		super(par1Str);
+		super(p_i1387_1_);
 	}
 	
-	public NBTTagShort(String par1Str, short par2)
+	public NBTTagShort(String p_i1388_1_, short p_i1388_2_)
 	{
-		super(par1Str);
-		data = par2;
+		super(p_i1388_1_);
+		data = p_i1388_2_;
 	}
 	
 	@Override public NBTBase copy()
@@ -43,7 +43,7 @@
 		return super.hashCode() ^ data;
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
 		data = par1DataInput.readShort();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/NBTTagString.java b/RMCClient/minecraft/net/minecraft/src/NBTTagString.java
index 96b7132..6ee80cc 100644
--- a/RMCClient/minecraft/net/minecraft/src/NBTTagString.java
+++ b/RMCClient/minecraft/net/minecraft/src/NBTTagString.java
@@ -8,16 +8,16 @@
 {
 	public String data;
 	
-	public NBTTagString(String par1Str)
+	public NBTTagString(String p_i1389_1_)
 	{
-		super(par1Str);
+		super(p_i1389_1_);
 	}
 	
-	public NBTTagString(String par1Str, String par2Str)
+	public NBTTagString(String p_i1390_1_, String p_i1390_2_)
 	{
-		super(par1Str);
-		data = par2Str;
-		if(par2Str == null) throw new IllegalArgumentException("Empty string not allowed");
+		super(p_i1390_1_);
+		data = p_i1390_2_;
+		if(p_i1390_2_ == null) throw new IllegalArgumentException("Empty string not allowed");
 	}
 	
 	@Override public NBTBase copy()
@@ -45,7 +45,7 @@
 		return super.hashCode() ^ data.hashCode();
 	}
 	
-	@Override void load(DataInput par1DataInput) throws IOException
+	@Override void load(DataInput par1DataInput, int p_74735_2_) throws IOException
 	{
 		data = par1DataInput.readUTF();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/NetClientHandler.java b/RMCClient/minecraft/net/minecraft/src/NetClientHandler.java
index 0a21e82..dfbaa80 100644
--- a/RMCClient/minecraft/net/minecraft/src/NetClientHandler.java
+++ b/RMCClient/minecraft/net/minecraft/src/NetClientHandler.java
@@ -4,6 +4,7 @@
 import java.io.ByteArrayInputStream;
 import java.io.DataInputStream;
 import java.io.IOException;
+import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.math.BigInteger;
 import java.net.InetAddress;
@@ -20,45 +21,46 @@
 
 import javax.crypto.SecretKey;
 
+import net.minecraft.client.ClientBrandRetriever;
 import net.minecraft.client.Minecraft;
 
 import org.lwjgl.input.Keyboard;
 
 public class NetClientHandler extends NetHandler
 {
-	private boolean disconnected = false;
+	private boolean disconnected;
 	private INetworkManager netManager;
 	public String field_72560_a;
 	private Minecraft mc;
 	private WorldClient worldClient;
-	private boolean doneLoadingTerrain = false;
+	private boolean doneLoadingTerrain;
 	public MapStorage mapStorage = new MapStorage((ISaveHandler) null);
 	private Map playerInfoMap = new HashMap();
 	public List playerInfoList = new ArrayList();
 	public int currentServerMaxPlayers = 20;
-	private GuiScreen field_98183_l = null;
+	private GuiScreen field_98183_l;
 	Random rand = new Random();
 	
-	public NetClientHandler(Minecraft par1Minecraft, IntegratedServer par2IntegratedServer) throws IOException
+	public NetClientHandler(Minecraft p_i1178_1_, IntegratedServer p_i1178_2_) throws IOException
 	{
-		mc = par1Minecraft;
-		netManager = new MemoryConnection(par1Minecraft.getLogAgent(), this);
-		par2IntegratedServer.getServerListeningThread().func_71754_a((MemoryConnection) netManager, par1Minecraft.session.username);
+		mc = p_i1178_1_;
+		netManager = new MemoryConnection(p_i1178_1_.getLogAgent(), this);
+		p_i1178_2_.getServerListeningThread().func_71754_a((MemoryConnection) netManager, p_i1178_1_.func_110432_I().func_111285_a());
 	}
 	
-	public NetClientHandler(Minecraft par1Minecraft, String par2Str, int par3) throws IOException
+	public NetClientHandler(Minecraft p_i1176_1_, String p_i1176_2_, int p_i1176_3_) throws IOException
 	{
-		mc = par1Minecraft;
-		Socket var4 = new Socket(InetAddress.getByName(par2Str), par3);
-		netManager = new TcpConnection(par1Minecraft.getLogAgent(), var4, "Client", this);
+		mc = p_i1176_1_;
+		Socket var4 = new Socket(InetAddress.getByName(p_i1176_2_), p_i1176_3_);
+		netManager = new TcpConnection(p_i1176_1_.getLogAgent(), var4, "Client", this);
 	}
 	
-	public NetClientHandler(Minecraft par1Minecraft, String par2Str, int par3, GuiScreen par4GuiScreen) throws IOException
+	public NetClientHandler(Minecraft p_i1177_1_, String p_i1177_2_, int p_i1177_3_, GuiScreen p_i1177_4_) throws IOException
 	{
-		mc = par1Minecraft;
-		field_98183_l = par4GuiScreen;
-		Socket var5 = new Socket(InetAddress.getByName(par2Str), par3);
-		netManager = new TcpConnection(par1Minecraft.getLogAgent(), var5, "Client", this);
+		mc = p_i1177_1_;
+		field_98183_l = p_i1177_4_;
+		Socket var5 = new Socket(InetAddress.getByName(p_i1177_2_), p_i1177_3_);
+		netManager = new TcpConnection(p_i1177_1_.getLogAgent(), var5, "Client", this);
 	}
 	
 	public void addToSendQueue(Packet par1Packet)
@@ -91,6 +93,54 @@
 		netManager.networkShutdown("disconnect.closed", new Object[0]);
 	}
 	
+	@Override public void func_110773_a(Packet44UpdateAttributes p_110773_1_)
+	{
+		Entity var2 = getEntityByID(p_110773_1_.func_111002_d());
+		if(var2 != null)
+		{
+			if(!(var2 instanceof EntityLivingBase)) throw new IllegalStateException("Server tried to update attributes of a non-living entity (actually: " + var2 + ")");
+			else
+			{
+				BaseAttributeMap var3 = ((EntityLivingBase) var2).func_110140_aT();
+				Iterator var4 = p_110773_1_.func_111003_f().iterator();
+				while(var4.hasNext())
+				{
+					Packet44UpdateAttributesSnapshot var5 = (Packet44UpdateAttributesSnapshot) var4.next();
+					AttributeInstance var6 = var3.func_111152_a(var5.func_142040_a());
+					if(var6 == null)
+					{
+						var6 = var3.func_111150_b(new RangedAttribute(var5.func_142040_a(), 0.0D, 2.2250738585072014E-308D, Double.MAX_VALUE));
+					}
+					var6.func_111128_a(var5.func_142041_b());
+					var6.func_142049_d();
+					Iterator var7 = var5.func_142039_c().iterator();
+					while(var7.hasNext())
+					{
+						AttributeModifier var8 = (AttributeModifier) var7.next();
+						var6.func_111121_a(var8);
+					}
+				}
+			}
+		}
+	}
+	
+	@Override public void func_142031_a(Packet133TileEditorOpen p_142031_1_)
+	{
+		TileEntity var2 = worldClient.getBlockTileEntity(p_142031_1_.field_142035_b, p_142031_1_.field_142036_c, p_142031_1_.field_142034_d);
+		if(var2 != null)
+		{
+			mc.thePlayer.displayGUIEditSign(var2);
+		} else if(p_142031_1_.field_142037_a == 0)
+		{
+			TileEntitySign var3 = new TileEntitySign();
+			var3.setWorldObj(worldClient);
+			var3.xCoord = p_142031_1_.field_142035_b;
+			var3.yCoord = p_142031_1_.field_142036_c;
+			var3.zCoord = p_142031_1_.field_142034_d;
+			mc.thePlayer.displayGUIEditSign(var3);
+		}
+	}
+	
 	private Entity getEntityByID(int par1)
 	{
 		return par1 == mc.thePlayer.entityId ? mc.thePlayer : worldClient.getEntityByID(par1);
@@ -108,7 +158,7 @@
 		{
 			if(par1Packet18Animation.animate == 1)
 			{
-				EntityLiving var3 = (EntityLiving) var2;
+				EntityLivingBase var3 = (EntityLivingBase) var2;
 				var3.swingItem();
 			} else if(par1Packet18Animation.animate == 2)
 			{
@@ -136,22 +186,39 @@
 	
 	@Override public void handleAttachEntity(Packet39AttachEntity par1Packet39AttachEntity)
 	{
-		Object var2 = getEntityByID(par1Packet39AttachEntity.entityId);
+		Object var2 = getEntityByID(par1Packet39AttachEntity.field_111006_b);
 		Entity var3 = getEntityByID(par1Packet39AttachEntity.vehicleEntityId);
-		if(par1Packet39AttachEntity.entityId == mc.thePlayer.entityId)
+		if(par1Packet39AttachEntity.field_111007_a == 0)
 		{
-			var2 = mc.thePlayer;
-			if(var3 instanceof EntityBoat)
+			boolean var4 = false;
+			if(par1Packet39AttachEntity.field_111006_b == mc.thePlayer.entityId)
 			{
-				((EntityBoat) var3).func_70270_d(false);
+				var2 = mc.thePlayer;
+				if(var3 instanceof EntityBoat)
+				{
+					((EntityBoat) var3).func_70270_d(false);
+				}
+				var4 = ((Entity) var2).ridingEntity == null && var3 != null;
+			} else if(var3 instanceof EntityBoat)
+			{
+				((EntityBoat) var3).func_70270_d(true);
 			}
-		} else if(var3 instanceof EntityBoat)
-		{
-			((EntityBoat) var3).func_70270_d(true);
-		}
-		if(var2 != null)
-		{
+			if(var2 == null) return;
 			((Entity) var2).mountEntity(var3);
+			if(var4)
+			{
+				GameSettings var5 = mc.gameSettings;
+				mc.ingameGUI.func_110326_a(I18n.func_135052_a("mount.onboard", new Object[] { GameSettings.getKeyDisplayString(var5.keyBindSneak.keyCode) }), false);
+			}
+		} else if(par1Packet39AttachEntity.field_111007_a == 1 && var2 != null && var2 instanceof EntityLiving)
+		{
+			if(var3 != null)
+			{
+				((EntityLiving) var2).func_110162_b(var3, false);
+			} else
+			{
+				((EntityLiving) var2).func_110160_i(false, false);
+			}
 		}
 	}
 	
@@ -190,7 +257,7 @@
 	
 	@Override public void handleChat(Packet3Chat par1Packet3Chat)
 	{
-		mc.ingameGUI.getChatGUI().printChatMessage(par1Packet3Chat.message);
+		mc.ingameGUI.getChatGUI().printChatMessage(ChatMessageComponent.func_111078_c(par1Packet3Chat.message).func_111068_a(true));
 	}
 	
 	@Override public void handleCloseWindow(Packet101CloseWindow par1Packet101CloseWindow)
@@ -222,37 +289,26 @@
 	
 	@Override public void handleCustomPayload(Packet250CustomPayload par1Packet250CustomPayload)
 	{
-		if("MC|TPack".equals(par1Packet250CustomPayload.channel))
+		if("MC|TrList".equals(par1Packet250CustomPayload.channel))
 		{
-			String[] var2 = new String(par1Packet250CustomPayload.data).split("\u0000");
-			String var3 = var2[0];
-			if(var2[1].equals("16"))
-			{
-				if(mc.texturePackList.getAcceptsTextures())
-				{
-					mc.texturePackList.requestDownloadOfTexture(var3);
-				} else if(mc.texturePackList.func_77300_f())
-				{
-					mc.displayGuiScreen(new GuiYesNo(new NetClientWebTextures(this, var3), StringTranslate.getInstance().translateKey("multiplayer.texturePrompt.line1"), StringTranslate.getInstance().translateKey("multiplayer.texturePrompt.line2"), 0));
-				}
-			}
-		} else if("MC|TrList".equals(par1Packet250CustomPayload.channel))
-		{
-			DataInputStream var8 = new DataInputStream(new ByteArrayInputStream(par1Packet250CustomPayload.data));
+			DataInputStream var2 = new DataInputStream(new ByteArrayInputStream(par1Packet250CustomPayload.data));
 			try
 			{
-				int var9 = var8.readInt();
+				int var3 = var2.readInt();
 				GuiScreen var4 = mc.currentScreen;
-				if(var4 != null && var4 instanceof GuiMerchant && var9 == mc.thePlayer.openContainer.windowId)
+				if(var4 != null && var4 instanceof GuiMerchant && var3 == mc.thePlayer.openContainer.windowId)
 				{
 					IMerchant var5 = ((GuiMerchant) var4).getIMerchant();
-					MerchantRecipeList var6 = MerchantRecipeList.readRecipiesFromStream(var8);
+					MerchantRecipeList var6 = MerchantRecipeList.readRecipiesFromStream(var2);
 					var5.setRecipes(var6);
 				}
 			} catch(IOException var7)
 			{
 				var7.printStackTrace();
 			}
+		} else if("MC|Brand".equals(par1Packet250CustomPayload.channel))
+		{
+			mc.thePlayer.func_142020_c(new String(par1Packet250CustomPayload.data, Charsets.UTF_8));
 		}
 	}
 	
@@ -295,11 +351,11 @@
 	@Override public void handleEntityEffect(Packet41EntityEffect par1Packet41EntityEffect)
 	{
 		Entity var2 = getEntityByID(par1Packet41EntityEffect.entityId);
-		if(var2 instanceof EntityLiving)
+		if(var2 instanceof EntityLivingBase)
 		{
 			PotionEffect var3 = new PotionEffect(par1Packet41EntityEffect.effectId, par1Packet41EntityEffect.duration, par1Packet41EntityEffect.effectAmplifier);
 			var3.setPotionDurationMax(par1Packet41EntityEffect.isDurationMax());
-			((EntityLiving) var2).addPotionEffect(var3);
+			((EntityLivingBase) var2).addPotionEffect(var3);
 		}
 	}
 	
@@ -525,6 +581,7 @@
 		currentServerMaxPlayers = par1Packet1Login.maxPlayers;
 		mc.playerController.setGameType(par1Packet1Login.gameType);
 		mc.gameSettings.sendSettingsToServer();
+		netManager.addToSendQueue(new Packet250CustomPayload("MC|Brand", ClientBrandRetriever.getClientModName().getBytes(Charsets.UTF_8)));
 	}
 	
 	@Override public void handleMapChunk(Packet51MapChunk par1Packet51MapChunk)
@@ -600,7 +657,7 @@
 		double var6 = par1Packet24MobSpawn.zPosition / 32.0D;
 		float var8 = par1Packet24MobSpawn.yaw * 360 / 256.0F;
 		float var9 = par1Packet24MobSpawn.pitch * 360 / 256.0F;
-		EntityLiving var10 = (EntityLiving) EntityList.createEntityByID(par1Packet24MobSpawn.type, mc.theWorld);
+		EntityLivingBase var10 = (EntityLivingBase) EntityList.createEntityByID(par1Packet24MobSpawn.type, mc.theWorld);
 		var10.serverPosX = par1Packet24MobSpawn.xPosition;
 		var10.serverPosY = par1Packet24MobSpawn.yPosition;
 		var10.serverPosZ = par1Packet24MobSpawn.zPosition;
@@ -760,6 +817,14 @@
 				}
 				var2.displayGUIDispenser(var6);
 				var2.openContainer.windowId = par1Packet100OpenWindow.windowId;
+				break;
+			case 11:
+				Entity var9 = getEntityByID(par1Packet100OpenWindow.field_111008_f);
+				if(var9 != null && var9 instanceof EntityHorse)
+				{
+					var2.func_110298_a((EntityHorse) var9, new AnimalChest(par1Packet100OpenWindow.windowTitle, par1Packet100OpenWindow.useProvidedWindowTitle, par1Packet100OpenWindow.slotsCount));
+					var2.openContainer.windowId = par1Packet100OpenWindow.windowId;
+				}
 		}
 	}
 	
@@ -806,9 +871,9 @@
 	@Override public void handleRemoveEntityEffect(Packet42RemoveEntityEffect par1Packet42RemoveEntityEffect)
 	{
 		Entity var2 = getEntityByID(par1Packet42RemoveEntityEffect.entityId);
-		if(var2 instanceof EntityLiving)
+		if(var2 instanceof EntityLivingBase)
 		{
-			((EntityLiving) var2).removePotionEffectClient(par1Packet42RemoveEntityEffect.effectId);
+			((EntityLivingBase) var2).removePotionEffectClient(par1Packet42RemoveEntityEffect.effectId);
 		}
 	}
 	
@@ -837,7 +902,7 @@
 		if(!"-".equals(var2))
 		{
 			String var5 = new BigInteger(CryptManager.getServerIdHash(var2, var3, var4)).toString(16);
-			String var6 = sendSessionRequest(mc.session.username, mc.session.sessionId, var5);
+			String var6 = sendSessionRequest(mc.func_110432_I().func_111285_a(), mc.func_110432_I().func_111286_b(), var5);
 			if(!"ok".equalsIgnoreCase(var6))
 			{
 				netManager.networkShutdown("disconnect.loginFailedInfo", new Object[] { var6 });
@@ -1077,7 +1142,7 @@
 		}
 		if(!var2 && mc.thePlayer != null)
 		{
-			mc.thePlayer.sendChatToPlayer("Unable to locate sign at " + par1Packet130UpdateSign.xPosition + ", " + par1Packet130UpdateSign.yPosition + ", " + par1Packet130UpdateSign.zPosition);
+			mc.thePlayer.sendChatToPlayer(ChatMessageComponent.func_111066_d("Unable to locate sign at " + par1Packet130UpdateSign.xPosition + ", " + par1Packet130UpdateSign.yPosition + ", " + par1Packet130UpdateSign.zPosition));
 		}
 	}
 	
@@ -1113,6 +1178,10 @@
 		} else if(par1Packet23VehicleSpawn.type == 71)
 		{
 			var8 = new EntityItemFrame(worldClient, (int) var2, (int) var4, (int) var6, par1Packet23VehicleSpawn.throwerEntityId);
+			par1Packet23VehicleSpawn.throwerEntityId = 0;
+		} else if(par1Packet23VehicleSpawn.type == 77)
+		{
+			var8 = new EntityLeashKnot(worldClient, (int) var2, (int) var4, (int) var6);
 			par1Packet23VehicleSpawn.throwerEntityId = 0;
 		} else if(par1Packet23VehicleSpawn.type == 65)
 		{
@@ -1151,7 +1220,7 @@
 			var8 = new EntityBoat(worldClient, var2, var4, var6);
 		} else if(par1Packet23VehicleSpawn.type == 50)
 		{
-			var8 = new EntityTNTPrimed(worldClient, var2, var4, var6, (EntityLiving) null);
+			var8 = new EntityTNTPrimed(worldClient, var2, var4, var6, (EntityLivingBase) null);
 		} else if(par1Packet23VehicleSpawn.type == 51)
 		{
 			var8 = new EntityEnderCrystal(worldClient, var2, var4, var6);
@@ -1186,7 +1255,7 @@
 				if(par1Packet23VehicleSpawn.type == 60)
 				{
 					Entity var13 = getEntityByID(par1Packet23VehicleSpawn.throwerEntityId);
-					if(var13 instanceof EntityLiving)
+					if(var13 instanceof EntityLivingBase)
 					{
 						EntityArrow var14 = (EntityArrow) var8;
 						var14.shootingEntity = var13;
@@ -1276,13 +1345,14 @@
 		try
 		{
 			URL var4 = new URL("http://session.minecraft.net/game/joinserver.jsp?user=" + urlEncode(par1Str) + "&sessionId=" + urlEncode(par2Str) + "&serverId=" + urlEncode(par3Str));
-			BufferedReader var5 = new BufferedReader(new InputStreamReader(var4.openStream()));
-			String var6 = var5.readLine();
-			var5.close();
-			return var6;
-		} catch(IOException var7)
+			InputStream var5 = var4.openConnection(mc.func_110437_J()).getInputStream();
+			BufferedReader var6 = new BufferedReader(new InputStreamReader(var5));
+			String var7 = var6.readLine();
+			var6.close();
+			return var7;
+		} catch(IOException var8)
 		{
-			return var7.toString();
+			return var8.toString();
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/NetClientWebTextures.java b/RMCClient/minecraft/net/minecraft/src/NetClientWebTextures.java
deleted file mode 100644
index aeb50ae..0000000
--- a/RMCClient/minecraft/net/minecraft/src/NetClientWebTextures.java
+++ /dev/null
@@ -1,30 +0,0 @@
-package net.minecraft.src;
-
-import net.minecraft.client.Minecraft;
-
-class NetClientWebTextures extends GuiScreen
-{
-	final String texturePackName;
-	final NetClientHandler netClientHandlerWebTextures;
-	
-	NetClientWebTextures(NetClientHandler par1NetClientHandler, String par2Str)
-	{
-		netClientHandlerWebTextures = par1NetClientHandler;
-		texturePackName = par2Str;
-	}
-	
-	@Override public void confirmClicked(boolean par1, int par2)
-	{
-		mc = Minecraft.getMinecraft();
-		if(mc.getServerData() != null)
-		{
-			mc.getServerData().setAcceptsTextures(par1);
-			ServerList.func_78852_b(mc.getServerData());
-		}
-		if(par1)
-		{
-			mc.texturePackList.requestDownloadOfTexture(texturePackName);
-		}
-		mc.displayGuiScreen((GuiScreen) null);
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/NetHandler.java b/RMCClient/minecraft/net/minecraft/src/NetHandler.java
index 13807cd..ec7fb41 100644
--- a/RMCClient/minecraft/net/minecraft/src/NetHandler.java
+++ b/RMCClient/minecraft/net/minecraft/src/NetHandler.java
@@ -7,6 +7,25 @@
 		return false;
 	}
 	
+	public void func_110773_a(Packet44UpdateAttributes p_110773_1_)
+	{
+		unexpectedPacket(p_110773_1_);
+	}
+	
+	public void func_110774_a(Packet27PlayerInput p_110774_1_)
+	{
+		unexpectedPacket(p_110774_1_);
+	}
+	
+	public void func_142031_a(Packet133TileEditorOpen p_142031_1_)
+	{
+	}
+	
+	public boolean func_142032_c()
+	{
+		return false;
+	}
+	
 	public void handleAnimation(Packet18Animation par1Packet18Animation)
 	{
 		unexpectedPacket(par1Packet18Animation);
diff --git a/RMCClient/minecraft/net/minecraft/src/NetLoginHandler.java b/RMCClient/minecraft/net/minecraft/src/NetLoginHandler.java
index 1c4045d..0801d57 100644
--- a/RMCClient/minecraft/net/minecraft/src/NetLoginHandler.java
+++ b/RMCClient/minecraft/net/minecraft/src/NetLoginHandler.java
@@ -21,19 +21,24 @@
 	private byte[] verifyToken;
 	private final MinecraftServer mcServer;
 	public final TcpConnection myTCPConnection;
-	public boolean connectionComplete = false;
-	private int connectionTimer = 0;
-	private String clientUsername = null;
-	private volatile boolean field_72544_i = false;
+	public boolean connectionComplete;
+	private int connectionTimer;
+	private String clientUsername;
+	private volatile boolean field_72544_i;
 	private String loginServerId = "";
-	private boolean field_92079_k = false;
-	private SecretKey sharedKey = null;
+	private boolean field_92079_k;
+	private SecretKey sharedKey;
 	
-	public NetLoginHandler(MinecraftServer par1MinecraftServer, Socket par2Socket, String par3Str) throws IOException
+	public NetLoginHandler(MinecraftServer p_i1527_1_, Socket p_i1527_2_, String p_i1527_3_) throws IOException
 	{
-		mcServer = par1MinecraftServer;
-		myTCPConnection = new TcpConnection(par1MinecraftServer.getLogAgent(), par2Socket, par3Str, this, par1MinecraftServer.getKeyPair().getPrivate());
+		mcServer = p_i1527_1_;
+		myTCPConnection = new TcpConnection(p_i1527_1_.getLogAgent(), p_i1527_2_, p_i1527_3_, this, p_i1527_1_.getKeyPair().getPrivate());
 		myTCPConnection.field_74468_e = 0;
+	}
+	
+	@Override public boolean func_142032_c()
+	{
+		return connectionComplete;
 	}
 	
 	public String getUsernameAndAddress()
@@ -70,9 +75,9 @@
 		} else
 		{
 			PublicKey var2 = mcServer.getKeyPair().getPublic();
-			if(par1Packet2ClientProtocol.getProtocolVersion() != 61)
+			if(par1Packet2ClientProtocol.getProtocolVersion() != 74)
 			{
-				if(par1Packet2ClientProtocol.getProtocolVersion() > 61)
+				if(par1Packet2ClientProtocol.getProtocolVersion() > 74)
 				{
 					raiseErrorAndDisconnect("Outdated server!");
 				} else
@@ -105,9 +110,12 @@
 		{
 			ServerConfigurationManager var2 = mcServer.getConfigurationManager();
 			String var3 = null;
-			if(par1Packet254ServerPing.readSuccessfully == 1)
+			if(par1Packet254ServerPing.func_140050_d())
 			{
-				List var4 = Arrays.asList(new Serializable[] { Integer.valueOf(1), Integer.valueOf(61), mcServer.getMinecraftVersion(), mcServer.getMOTD(), Integer.valueOf(var2.getCurrentPlayerCount()), Integer.valueOf(var2.getMaxPlayers()) });
+				var3 = mcServer.getMOTD() + "\u00a7" + var2.getCurrentPlayerCount() + "\u00a7" + var2.getMaxPlayers();
+			} else
+			{
+				List var4 = Arrays.asList(new Serializable[] { Integer.valueOf(1), Integer.valueOf(74), mcServer.getMinecraftVersion(), mcServer.getMOTD(), Integer.valueOf(var2.getCurrentPlayerCount()), Integer.valueOf(var2.getMaxPlayers()) });
 				Object var6;
 				for(Iterator var5 = var4.iterator(); var5.hasNext(); var3 = var3 + var6.toString().replaceAll("\u0000", ""))
 				{
@@ -120,9 +128,6 @@
 						var3 = var3 + "\u0000";
 					}
 				}
-			} else
-			{
-				var3 = mcServer.getMOTD() + "\u00a7" + var2.getCurrentPlayerCount() + "\u00a7" + var2.getMaxPlayers();
 			}
 			InetAddress var8 = null;
 			if(myTCPConnection.getSocket() != null)
diff --git a/RMCClient/minecraft/net/minecraft/src/NetServerHandler.java b/RMCClient/minecraft/net/minecraft/src/NetServerHandler.java
index 635380a..b591fec 100644
--- a/RMCClient/minecraft/net/minecraft/src/NetServerHandler.java
+++ b/RMCClient/minecraft/net/minecraft/src/NetServerHandler.java
@@ -13,7 +13,7 @@
 {
 	public final INetworkManager netManager;
 	private final MinecraftServer mcServer;
-	public boolean connectionClosed = false;
+	public boolean connectionClosed;
 	public EntityPlayerMP playerEntity;
 	private int currentTicks;
 	private int ticksForFloatKick;
@@ -22,26 +22,36 @@
 	private long keepAliveTimeSent;
 	private static Random randomGenerator = new Random();
 	private long ticksOfLastKeepAlive;
-	private int chatSpamThresholdCount = 0;
-	private int creativeItemCreationSpamThresholdTally = 0;
+	private int chatSpamThresholdCount;
+	private int creativeItemCreationSpamThresholdTally;
 	private double lastPosX;
 	private double lastPosY;
 	private double lastPosZ;
 	private boolean hasMoved = true;
 	private IntHashMap field_72586_s = new IntHashMap();
 	
-	public NetServerHandler(MinecraftServer par1, INetworkManager par2, EntityPlayerMP par3)
+	public NetServerHandler(MinecraftServer p_i1530_1_, INetworkManager p_i1530_2_, EntityPlayerMP p_i1530_3_)
 	{
-		mcServer = par1;
-		netManager = par2;
-		par2.setNetHandler(this);
-		playerEntity = par3;
-		par3.playerNetServerHandler = this;
+		mcServer = p_i1530_1_;
+		netManager = p_i1530_2_;
+		p_i1530_2_.setNetHandler(this);
+		playerEntity = p_i1530_3_;
+		p_i1530_3_.playerNetServerHandler = this;
 	}
 	
 	@Override public boolean canProcessPacketsAsync()
 	{
 		return true;
+	}
+	
+	@Override public void func_110774_a(Packet27PlayerInput p_110774_1_)
+	{
+		playerEntity.func_110430_a(p_110774_1_.func_111010_d(), p_110774_1_.func_111012_f(), p_110774_1_.func_111013_g(), p_110774_1_.func_111011_h());
+	}
+	
+	@Override public boolean func_142032_c()
+	{
+		return connectionClosed;
 	}
 	
 	@Override public void handleAnimation(Packet18Animation par1Packet18Animation)
@@ -140,7 +150,7 @@
 			playerEntity.inventory.currentItem = par1Packet16BlockItemSwitch.id;
 		} else
 		{
-			mcServer.getLogAgent().logWarning(playerEntity.username + " tried to set an invalid carried item");
+			mcServer.getLogAgent().logWarning(playerEntity.getCommandSenderName() + " tried to set an invalid carried item");
 		}
 	}
 	
@@ -148,7 +158,7 @@
 	{
 		if(playerEntity.getChatVisibility() == 2)
 		{
-			sendPacketToPlayer(new Packet3Chat("Cannot send chat message."));
+			sendPacketToPlayer(new Packet3Chat(ChatMessageComponent.func_111077_e("chat.cannotSend").func_111059_a(EnumChatFormatting.RED)));
 		} else
 		{
 			String var2 = par1Packet3Chat.message;
@@ -157,7 +167,7 @@
 				kickPlayerFromServer("Chat message too long");
 			} else
 			{
-				var2 = var2.trim();
+				var2 = org.apache.commons.lang3.StringUtils.normalizeSpace(var2);
 				for(int var3 = 0; var3 < var2.length(); ++var3)
 				{
 					if(!ChatAllowedCharacters.isAllowedCharacter(var2.charAt(var3)))
@@ -173,15 +183,14 @@
 				{
 					if(playerEntity.getChatVisibility() == 1)
 					{
-						sendPacketToPlayer(new Packet3Chat("Cannot send chat message."));
+						sendPacketToPlayer(new Packet3Chat(ChatMessageComponent.func_111077_e("chat.cannotSend").func_111059_a(EnumChatFormatting.RED)));
 						return;
 					}
-					var2 = "<" + playerEntity.getTranslatedEntityName() + "> " + var2;
-					mcServer.getLogAgent().logInfo(var2);
-					mcServer.getConfigurationManager().sendPacketToAllPlayers(new Packet3Chat(var2, false));
+					ChatMessageComponent var4 = ChatMessageComponent.func_111082_b("chat.type.text", new Object[] { playerEntity.getTranslatedEntityName(), var2 });
+					mcServer.getConfigurationManager().func_110459_a(var4, false);
 				}
 				chatSpamThresholdCount += 20;
-				if(chatSpamThresholdCount > 200 && !mcServer.getConfigurationManager().areCommandsAllowed(playerEntity.username))
+				if(chatSpamThresholdCount > 200 && !mcServer.getConfigurationManager().areCommandsAllowed(playerEntity.getCommandSenderName()))
 				{
 					kickPlayerFromServer("disconnect.spam");
 				}
@@ -198,20 +207,20 @@
 				playerEntity = mcServer.getConfigurationManager().respawnPlayer(playerEntity, 0, true);
 			} else if(playerEntity.getServerForPlayer().getWorldInfo().isHardcoreModeEnabled())
 			{
-				if(mcServer.isSinglePlayer() && playerEntity.username.equals(mcServer.getServerOwner()))
+				if(mcServer.isSinglePlayer() && playerEntity.getCommandSenderName().equals(mcServer.getServerOwner()))
 				{
 					playerEntity.playerNetServerHandler.kickPlayerFromServer("You have died. Game over, man, it\'s game over!");
 					mcServer.deleteWorldAndStopServer();
 				} else
 				{
-					BanEntry var2 = new BanEntry(playerEntity.username);
+					BanEntry var2 = new BanEntry(playerEntity.getCommandSenderName());
 					var2.setBanReason("Death in Hardcore");
 					mcServer.getConfigurationManager().getBannedPlayers().put(var2);
 					playerEntity.playerNetServerHandler.kickPlayerFromServer("You have died. Game over, man, it\'s game over!");
 				}
 			} else
 			{
-				if(playerEntity.getHealth() > 0) return;
+				if(playerEntity.func_110143_aJ() > 0.0F) return;
 				playerEntity = mcServer.getConfigurationManager().respawnPlayer(playerEntity, 0, false);
 			}
 		}
@@ -289,7 +298,7 @@
 				var4 = playerEntity.inventory.getCurrentItem();
 				if(var3 != null && var3.itemID == Item.writtenBook.itemID && var4.itemID == Item.writableBook.itemID)
 				{
-					var4.setTagInfo("author", new NBTTagString("author", playerEntity.username));
+					var4.setTagInfo("author", new NBTTagString("author", playerEntity.getCommandSenderName()));
 					var4.setTagInfo("title", new NBTTagString("title", var3.getTagCompound().getString("title")));
 					var4.setTagInfo("pages", var3.getTagCompound().getTagList("pages"));
 					var4.itemID = Item.writtenBook.itemID;
@@ -307,10 +316,10 @@
 				{
 					var2 = new DataInputStream(new ByteArrayInputStream(par1Packet250CustomPayload.data));
 					var14 = var2.readInt();
-					Container var15 = playerEntity.openContainer;
-					if(var15 instanceof ContainerMerchant)
+					Container var16 = playerEntity.openContainer;
+					if(var16 instanceof ContainerMerchant)
 					{
-						((ContainerMerchant) var15).setCurrentRecipeIndex(var14);
+						((ContainerMerchant) var16).setCurrentRecipeIndex(var14);
 					}
 				} catch(Exception var10)
 				{
@@ -323,7 +332,7 @@
 				{
 					if(!mcServer.isCommandBlockEnabled())
 					{
-						playerEntity.sendChatToPlayer(playerEntity.translateString("advMode.notEnabled", new Object[0]));
+						playerEntity.sendChatToPlayer(ChatMessageComponent.func_111077_e("advMode.notEnabled"));
 					} else if(playerEntity.canCommandSenderUseCommand(2, "") && playerEntity.capabilities.isCreativeMode)
 					{
 						try
@@ -338,7 +347,7 @@
 							{
 								((TileEntityCommandBlock) var7).setCommand(var6);
 								playerEntity.worldObj.markBlockForUpdate(var14, var18, var5);
-								playerEntity.sendChatToPlayer("Command set: " + var6);
+								playerEntity.sendChatToPlayer(ChatMessageComponent.func_111082_b("advMode.setCommand.success", new Object[] { var6 }));
 							}
 						} catch(Exception var9)
 						{
@@ -346,7 +355,7 @@
 						}
 					} else
 					{
-						playerEntity.sendChatToPlayer(playerEntity.translateString("advMode.notAllowed", new Object[0]));
+						playerEntity.sendChatToPlayer(ChatMessageComponent.func_111077_e("advMode.notAllowed"));
 					}
 				} else if("MC|Beacon".equals(par1Packet250CustomPayload.channel))
 				{
@@ -377,10 +386,10 @@
 					ContainerRepair var13 = (ContainerRepair) playerEntity.openContainer;
 					if(par1Packet250CustomPayload.data != null && par1Packet250CustomPayload.data.length >= 1)
 					{
-						String var16 = ChatAllowedCharacters.filerAllowedCharacters(new String(par1Packet250CustomPayload.data));
-						if(var16.length() <= 30)
+						String var15 = ChatAllowedCharacters.filerAllowedCharacters(new String(par1Packet250CustomPayload.data));
+						if(var15.length() <= 30)
 						{
-							var13.updateItemName(var16);
+							var13.updateItemName(var15);
 						}
 					} else
 					{
@@ -418,16 +427,25 @@
 		{
 			playerEntity.wakeUpPlayer(false, true, true);
 			hasMoved = false;
+		} else if(par1Packet19EntityAction.state == 6)
+		{
+			if(playerEntity.ridingEntity != null && playerEntity.ridingEntity instanceof EntityHorse)
+			{
+				((EntityHorse) playerEntity.ridingEntity).func_110206_u(par1Packet19EntityAction.field_111009_c);
+			}
+		} else if(par1Packet19EntityAction.state == 7 && playerEntity.ridingEntity != null && playerEntity.ridingEntity instanceof EntityHorse)
+		{
+			((EntityHorse) playerEntity.ridingEntity).func_110199_f(playerEntity);
 		}
 	}
 	
 	@Override public void handleErrorMessage(String par1Str, Object[] par2ArrayOfObj)
 	{
-		mcServer.getLogAgent().logInfo(playerEntity.username + " lost connection: " + par1Str);
-		mcServer.getConfigurationManager().sendPacketToAllPlayers(new Packet3Chat(EnumChatFormatting.YELLOW + playerEntity.getTranslatedEntityName() + " left the game."));
+		mcServer.getLogAgent().logInfo(playerEntity.getCommandSenderName() + " lost connection: " + par1Str);
+		mcServer.getConfigurationManager().sendChatMsg(ChatMessageComponent.func_111082_b("multiplayer.player.left", new Object[] { playerEntity.getTranslatedEntityName() }).func_111059_a(EnumChatFormatting.YELLOW));
 		mcServer.getConfigurationManager().playerLoggedOut(playerEntity);
 		connectionClosed = true;
-		if(mcServer.isSinglePlayer() && playerEntity.username.equals(mcServer.getServerOwner()))
+		if(mcServer.isSinglePlayer() && playerEntity.getCommandSenderName().equals(mcServer.getServerOwner()))
 		{
 			mcServer.getLogAgent().logInfo("Stopping singleplayer server as player logged out");
 			mcServer.initiateShutdown();
@@ -454,7 +472,6 @@
 				double var5;
 				double var7;
 				double var9;
-				double var13;
 				if(playerEntity.ridingEntity != null)
 				{
 					float var34 = playerEntity.rotationYaw;
@@ -463,42 +480,26 @@
 					var5 = playerEntity.posX;
 					var7 = playerEntity.posY;
 					var9 = playerEntity.posZ;
-					double var35 = 0.0D;
-					var13 = 0.0D;
 					if(par1Packet10Flying.rotating)
 					{
 						var34 = par1Packet10Flying.yaw;
 						var4 = par1Packet10Flying.pitch;
 					}
-					if(par1Packet10Flying.moving && par1Packet10Flying.yPosition == -999.0D && par1Packet10Flying.stance == -999.0D)
-					{
-						if(Math.abs(par1Packet10Flying.xPosition) > 1.0D || Math.abs(par1Packet10Flying.zPosition) > 1.0D)
-						{
-							System.err.println(playerEntity.username + " was caught trying to crash the server with an invalid position.");
-							kickPlayerFromServer("Nope!");
-							return;
-						}
-						var35 = par1Packet10Flying.xPosition;
-						var13 = par1Packet10Flying.zPosition;
-					}
 					playerEntity.onGround = par1Packet10Flying.onGround;
 					playerEntity.onUpdateEntity();
-					playerEntity.moveEntity(var35, 0.0D, var13);
+					playerEntity.ySize = 0.0F;
 					playerEntity.setPositionAndRotation(var5, var7, var9, var34, var4);
-					playerEntity.motionX = var35;
-					playerEntity.motionZ = var13;
-					if(playerEntity.ridingEntity != null)
-					{
-						var2.uncheckedUpdateEntity(playerEntity.ridingEntity, true);
-					}
 					if(playerEntity.ridingEntity != null)
 					{
 						playerEntity.ridingEntity.updateRiderPosition();
 					}
 					mcServer.getConfigurationManager().serverUpdateMountedMovingPlayer(playerEntity);
-					lastPosX = playerEntity.posX;
-					lastPosY = playerEntity.posY;
-					lastPosZ = playerEntity.posZ;
+					if(hasMoved)
+					{
+						lastPosX = playerEntity.posX;
+						lastPosY = playerEntity.posY;
+						lastPosZ = playerEntity.posZ;
+					}
 					var2.updateEntity(playerEntity);
 					return;
 				}
@@ -522,6 +523,7 @@
 				{
 					par1Packet10Flying.moving = false;
 				}
+				double var13;
 				if(par1Packet10Flying.moving)
 				{
 					var5 = par1Packet10Flying.xPosition;
@@ -531,7 +533,7 @@
 					if(!playerEntity.isPlayerSleeping() && (var13 > 1.65D || var13 < 0.1D))
 					{
 						kickPlayerFromServer("Illegal stance");
-						mcServer.getLogAgent().logWarning(playerEntity.username + " had an illegal stance: " + var13);
+						mcServer.getLogAgent().logWarning(playerEntity.getCommandSenderName() + " had an illegal stance: " + var13);
 						return;
 					}
 					if(Math.abs(par1Packet10Flying.xPosition) > 3.2E7D || Math.abs(par1Packet10Flying.zPosition) > 3.2E7D)
@@ -556,9 +558,9 @@
 				double var21 = Math.min(Math.abs(var15), Math.abs(playerEntity.motionY));
 				double var23 = Math.min(Math.abs(var17), Math.abs(playerEntity.motionZ));
 				double var25 = var19 * var19 + var21 * var21 + var23 * var23;
-				if(var25 > 100.0D && (!mcServer.isSinglePlayer() || !mcServer.getServerOwner().equals(playerEntity.username)))
+				if(var25 > 100.0D && (!mcServer.isSinglePlayer() || !mcServer.getServerOwner().equals(playerEntity.getCommandSenderName())))
 				{
-					mcServer.getLogAgent().logWarning(playerEntity.username + " moved too quickly! " + var13 + "," + var15 + "," + var17 + " (" + var19 + ", " + var21 + ", " + var23 + ")");
+					mcServer.getLogAgent().logWarning(playerEntity.getCommandSenderName() + " moved too quickly! " + var13 + "," + var15 + "," + var17 + " (" + var19 + ", " + var21 + ", " + var23 + ")");
 					setPlayerLocation(lastPosX, lastPosY, lastPosZ, playerEntity.rotationYaw, playerEntity.rotationPitch);
 					return;
 				}
@@ -584,7 +586,7 @@
 				if(var25 > 0.0625D && !playerEntity.isPlayerSleeping() && !playerEntity.theItemInWorldManager.isCreative())
 				{
 					var31 = true;
-					mcServer.getLogAgent().logWarning(playerEntity.username + " moved wrongly!");
+					mcServer.getLogAgent().logWarning(playerEntity.getCommandSenderName() + " moved wrongly!");
 				}
 				playerEntity.setPositionAndRotation(var5, var7, var9, var11, var12);
 				boolean var32 = var2.getCollidingBoundingBoxes(playerEntity, playerEntity.boundingBox.copy().contract(var27, var27, var27)).isEmpty();
@@ -601,7 +603,7 @@
 						++ticksForFloatKick;
 						if(ticksForFloatKick > 80)
 						{
-							mcServer.getLogAgent().logWarning(playerEntity.username + " was kicked for floating too long!");
+							mcServer.getLogAgent().logWarning(playerEntity.getCommandSenderName() + " was kicked for floating too long!");
 							kickPlayerFromServer("Flying is not enabled on this server");
 							return;
 						}
@@ -613,6 +615,9 @@
 				playerEntity.onGround = par1Packet10Flying.onGround;
 				mcServer.getConfigurationManager().serverUpdateMountedMovingPlayer(playerEntity);
 				playerEntity.updateFlyingState(playerEntity.posY - var3, par1Packet10Flying.onGround);
+			} else if(currentTicks % 20 == 0)
+			{
+				setPlayerLocation(lastPosX, lastPosY, lastPosZ, playerEntity.rotationYaw, playerEntity.rotationPitch);
 			}
 		}
 	}
@@ -646,7 +651,7 @@
 			playerEntity.theItemInWorldManager.tryUseItem(playerEntity, var2, var3);
 		} else if(par1Packet15Place.getYPosition() >= mcServer.getBuildLimit() - 1 && (par1Packet15Place.getDirection() == 1 || par1Packet15Place.getYPosition() >= mcServer.getBuildLimit()))
 		{
-			playerEntity.playerNetServerHandler.sendPacketToPlayer(new Packet3Chat("" + EnumChatFormatting.GRAY + "Height limit for building is " + mcServer.getBuildLimit()));
+			playerEntity.playerNetServerHandler.sendPacketToPlayer(new Packet3Chat(ChatMessageComponent.func_111082_b("build.tooHigh", new Object[] { Integer.valueOf(mcServer.getBuildLimit()) }).func_111059_a(EnumChatFormatting.RED)));
 			var4 = true;
 		} else
 		{
@@ -737,9 +742,9 @@
 			if(var3 instanceof TileEntitySign)
 			{
 				TileEntitySign var4 = (TileEntitySign) var3;
-				if(!var4.isEditable())
+				if(!var4.isEditable() || var4.func_142009_b() != playerEntity)
 				{
-					mcServer.logWarning("Player " + playerEntity.username + " just tried to change non-editable sign");
+					mcServer.logWarning("Player " + playerEntity.getCommandSenderName() + " just tried to change non-editable sign");
 					return;
 				}
 			}
@@ -798,6 +803,12 @@
 					playerEntity.interactWith(var3);
 				} else if(par1Packet7UseEntity.isLeftClick == 1)
 				{
+					if(var3 instanceof EntityItem || var3 instanceof EntityXPOrb || var3 instanceof EntityArrow || var3 == playerEntity)
+					{
+						kickPlayerFromServer("Attempting to attack an invalid entity");
+						mcServer.logWarning("Player " + playerEntity.getCommandSenderName() + " tried to attack an invalid entity");
+						return;
+					}
 					playerEntity.attackTargetEntityWithCurrentItem(var3);
 				}
 			}
@@ -843,7 +854,7 @@
 			playerEntity.mountEntityAndWakeUp();
 			sendPacketToPlayer(new Packet255KickDisconnect(par1Str));
 			netManager.serverShutdown();
-			mcServer.getConfigurationManager().sendPacketToAllPlayers(new Packet3Chat(EnumChatFormatting.YELLOW + playerEntity.username + " left the game."));
+			mcServer.getConfigurationManager().sendChatMsg(ChatMessageComponent.func_111082_b("multiplayer.player.left", new Object[] { playerEntity.getTranslatedEntityName() }).func_111059_a(EnumChatFormatting.YELLOW));
 			mcServer.getConfigurationManager().playerLoggedOut(playerEntity);
 			connectionClosed = true;
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/NetworkListenThread.java b/RMCClient/minecraft/net/minecraft/src/NetworkListenThread.java
index b04e4a6..4ac7780 100644
--- a/RMCClient/minecraft/net/minecraft/src/NetworkListenThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/NetworkListenThread.java
@@ -11,11 +11,11 @@
 {
 	private final MinecraftServer mcServer;
 	private final List connections = Collections.synchronizedList(new ArrayList());
-	public volatile boolean isListening = false;
+	public volatile boolean isListening;
 	
-	public NetworkListenThread(MinecraftServer par1MinecraftServer) throws IOException
+	public NetworkListenThread(MinecraftServer p_i1532_1_) throws IOException
 	{
-		mcServer = par1MinecraftServer;
+		mcServer = p_i1532_1_;
 		isListening = true;
 	}
 	
@@ -37,14 +37,16 @@
 			try
 			{
 				var2.networkTick();
-			} catch(Exception var5)
+			} catch(Exception var6)
 			{
 				if(var2.netManager instanceof MemoryConnection)
 				{
-					CrashReport var4 = CrashReport.makeCrashReport(var5, "Ticking memory connection");
+					CrashReport var4 = CrashReport.makeCrashReport(var6, "Ticking memory connection");
+					CrashReportCategory var5 = var4.makeCategory("Ticking connection");
+					var5.addCrashSectionCallable("Connection", new CallableConnectionName(this, var2));
 					throw new ReportedException(var4);
 				}
-				mcServer.getLogAgent().logWarningException("Failed to handle packet for " + var2.playerEntity.getEntityName() + "/" + var2.playerEntity.getPlayerIP() + ": " + var5, var5);
+				mcServer.getLogAgent().logWarningException("Failed to handle packet for " + var2.playerEntity.getEntityName() + "/" + var2.playerEntity.getPlayerIP() + ": " + var6, var6);
 				var2.kickPlayerFromServer("Internal server error");
 			}
 			if(var2.connectionClosed)
diff --git a/RMCClient/minecraft/net/minecraft/src/NextTickListEntry.java b/RMCClient/minecraft/net/minecraft/src/NextTickListEntry.java
index b351466..dcd9320 100644
--- a/RMCClient/minecraft/net/minecraft/src/NextTickListEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/NextTickListEntry.java
@@ -2,7 +2,7 @@
 
 public class NextTickListEntry implements Comparable
 {
-	private static long nextTickEntryID = 0L;
+	private static long nextTickEntryID;
 	public int xCoord;
 	public int yCoord;
 	public int zCoord;
@@ -11,13 +11,13 @@
 	public int field_82754_f;
 	private long tickEntryID;
 	
-	public NextTickListEntry(int par1, int par2, int par3, int par4)
+	public NextTickListEntry(int p_i1965_1_, int p_i1965_2_, int p_i1965_3_, int p_i1965_4_)
 	{
 		tickEntryID = nextTickEntryID++;
-		xCoord = par1;
-		yCoord = par2;
-		zCoord = par3;
-		blockID = par4;
+		xCoord = p_i1965_1_;
+		yCoord = p_i1965_2_;
+		zCoord = p_i1965_3_;
+		blockID = p_i1965_4_;
 	}
 	
 	public int comparer(NextTickListEntry par1NextTickListEntry)
diff --git a/RMCClient/minecraft/net/minecraft/src/NibbleArray.java b/RMCClient/minecraft/net/minecraft/src/NibbleArray.java
index dab33fc..823c681 100644
--- a/RMCClient/minecraft/net/minecraft/src/NibbleArray.java
+++ b/RMCClient/minecraft/net/minecraft/src/NibbleArray.java
@@ -6,18 +6,18 @@
 	private final int depthBits;
 	private final int depthBitsPlusFour;
 	
-	public NibbleArray(byte[] par1ArrayOfByte, int par2)
+	public NibbleArray(byte[] p_i1993_1_, int p_i1993_2_)
 	{
-		data = par1ArrayOfByte;
-		depthBits = par2;
-		depthBitsPlusFour = par2 + 4;
+		data = p_i1993_1_;
+		depthBits = p_i1993_2_;
+		depthBitsPlusFour = p_i1993_2_ + 4;
 	}
 	
-	public NibbleArray(int par1, int par2)
+	public NibbleArray(int p_i1992_1_, int p_i1992_2_)
 	{
-		data = new byte[par1 >> 1];
-		depthBits = par2;
-		depthBitsPlusFour = par2 + 4;
+		data = new byte[p_i1992_1_ >> 1];
+		depthBits = p_i1992_2_;
+		depthBitsPlusFour = p_i1992_2_ + 4;
 	}
 	
 	public int get(int par1, int par2, int par3)
diff --git a/RMCClient/minecraft/net/minecraft/src/NibbleArrayReader.java b/RMCClient/minecraft/net/minecraft/src/NibbleArrayReader.java
index ee0204d..fff0146 100644
--- a/RMCClient/minecraft/net/minecraft/src/NibbleArrayReader.java
+++ b/RMCClient/minecraft/net/minecraft/src/NibbleArrayReader.java
@@ -6,11 +6,11 @@
 	private final int depthBits;
 	private final int depthBitsPlusFour;
 	
-	public NibbleArrayReader(byte[] par1ArrayOfByte, int par2)
+	public NibbleArrayReader(byte[] p_i1998_1_, int p_i1998_2_)
 	{
-		data = par1ArrayOfByte;
-		depthBits = par2;
-		depthBitsPlusFour = par2 + 4;
+		data = p_i1998_1_;
+		depthBits = p_i1998_2_;
+		depthBitsPlusFour = p_i1998_2_ + 4;
 	}
 	
 	public int get(int par1, int par2, int par3)
diff --git a/RMCClient/minecraft/net/minecraft/src/NoiseGeneratorOctaves.java b/RMCClient/minecraft/net/minecraft/src/NoiseGeneratorOctaves.java
index dabb23e..37fa974 100644
--- a/RMCClient/minecraft/net/minecraft/src/NoiseGeneratorOctaves.java
+++ b/RMCClient/minecraft/net/minecraft/src/NoiseGeneratorOctaves.java
@@ -7,13 +7,13 @@
 	private NoiseGeneratorPerlin[] generatorCollection;
 	private int octaves;
 	
-	public NoiseGeneratorOctaves(Random par1Random, int par2)
+	public NoiseGeneratorOctaves(Random p_i2111_1_, int p_i2111_2_)
 	{
-		octaves = par2;
-		generatorCollection = new NoiseGeneratorPerlin[par2];
-		for(int var3 = 0; var3 < par2; ++var3)
+		octaves = p_i2111_2_;
+		generatorCollection = new NoiseGeneratorPerlin[p_i2111_2_];
+		for(int var3 = 0; var3 < p_i2111_2_; ++var3)
 		{
-			generatorCollection[var3] = new NoiseGeneratorPerlin(par1Random);
+			generatorCollection[var3] = new NoiseGeneratorPerlin(p_i2111_1_);
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/NoiseGeneratorPerlin.java b/RMCClient/minecraft/net/minecraft/src/NoiseGeneratorPerlin.java
index cc3530f..dadfe51 100644
--- a/RMCClient/minecraft/net/minecraft/src/NoiseGeneratorPerlin.java
+++ b/RMCClient/minecraft/net/minecraft/src/NoiseGeneratorPerlin.java
@@ -14,12 +14,12 @@
 		this(new Random());
 	}
 	
-	public NoiseGeneratorPerlin(Random par1Random)
+	public NoiseGeneratorPerlin(Random p_i2110_1_)
 	{
 		permutations = new int[512];
-		xCoord = par1Random.nextDouble() * 256.0D;
-		yCoord = par1Random.nextDouble() * 256.0D;
-		zCoord = par1Random.nextDouble() * 256.0D;
+		xCoord = p_i2110_1_.nextDouble() * 256.0D;
+		yCoord = p_i2110_1_.nextDouble() * 256.0D;
+		zCoord = p_i2110_1_.nextDouble() * 256.0D;
 		int var2;
 		for(var2 = 0; var2 < 256; permutations[var2] = var2++)
 		{
@@ -27,7 +27,7 @@
 		}
 		for(var2 = 0; var2 < 256; ++var2)
 		{
-			int var3 = par1Random.nextInt(256 - var2) + var2;
+			int var3 = p_i2110_1_.nextInt(256 - var2) + var2;
 			int var4 = permutations[var2];
 			permutations[var2] = permutations[var3];
 			permutations[var3] = var4;
diff --git a/RMCClient/minecraft/net/minecraft/src/NpcMerchant.java b/RMCClient/minecraft/net/minecraft/src/NpcMerchant.java
index 7fbc181..3019c39 100644
--- a/RMCClient/minecraft/net/minecraft/src/NpcMerchant.java
+++ b/RMCClient/minecraft/net/minecraft/src/NpcMerchant.java
@@ -6,10 +6,14 @@
 	private EntityPlayer customer;
 	private MerchantRecipeList recipeList;
 	
-	public NpcMerchant(EntityPlayer par1EntityPlayer)
+	public NpcMerchant(EntityPlayer p_i1746_1_)
 	{
-		customer = par1EntityPlayer;
-		theMerchantInventory = new InventoryMerchant(par1EntityPlayer, this);
+		customer = p_i1746_1_;
+		theMerchantInventory = new InventoryMerchant(p_i1746_1_, this);
+	}
+	
+	@Override public void func_110297_a_(ItemStack p_110297_1_)
+	{
 	}
 	
 	@Override public EntityPlayer getCustomer()
diff --git a/RMCClient/minecraft/net/minecraft/src/NumberInvalidException.java b/RMCClient/minecraft/net/minecraft/src/NumberInvalidException.java
index 446b3bf..d61d1ec 100644
--- a/RMCClient/minecraft/net/minecraft/src/NumberInvalidException.java
+++ b/RMCClient/minecraft/net/minecraft/src/NumberInvalidException.java
@@ -9,8 +9,8 @@
 		this("commands.generic.num.invalid", new Object[0]);
 	}
 	
-	public NumberInvalidException(String par1Str, Object ... par2ArrayOfObj)
+	public NumberInvalidException(String p_i1360_1_, Object ... p_i1360_2_)
 	{
-		super(par1Str, par2ArrayOfObj);
+		super(p_i1360_1_, p_i1360_2_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/OpenGlHelper.java b/RMCClient/minecraft/net/minecraft/src/OpenGlHelper.java
index a67ddb3..2e4c114 100644
--- a/RMCClient/minecraft/net/minecraft/src/OpenGlHelper.java
+++ b/RMCClient/minecraft/net/minecraft/src/OpenGlHelper.java
@@ -8,7 +8,7 @@
 {
 	public static int defaultTexUnit;
 	public static int lightmapTexUnit;
-	private static boolean useMultitextureARB = false;
+	private static boolean useMultitextureARB;
 	
 	public static void initializeTextures()
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/PackMetadataSection.java b/RMCClient/minecraft/net/minecraft/src/PackMetadataSection.java
new file mode 100644
index 0000000..3f18464
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/PackMetadataSection.java
@@ -0,0 +1,23 @@
+package net.minecraft.src;
+
+public class PackMetadataSection implements MetadataSection
+{
+	private final String field_110464_a;
+	private final int field_110463_b;
+	
+	public PackMetadataSection(String p_i1312_1_, int p_i1312_2_)
+	{
+		field_110464_a = p_i1312_1_;
+		field_110463_b = p_i1312_2_;
+	}
+	
+	public String func_110461_a()
+	{
+		return field_110464_a;
+	}
+	
+	public int func_110462_b()
+	{
+		return field_110463_b;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/PackMetadataSectionSerializer.java b/RMCClient/minecraft/net/minecraft/src/PackMetadataSectionSerializer.java
new file mode 100644
index 0000000..c0310d1
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/PackMetadataSectionSerializer.java
@@ -0,0 +1,37 @@
+package net.minecraft.src;
+
+import java.lang.reflect.Type;
+
+public class PackMetadataSectionSerializer extends BaseMetadataSectionSerializer implements JsonSerializer
+{
+	public Object deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_)
+	{
+		return func_110489_a(p_deserialize_1_, p_deserialize_2_, p_deserialize_3_);
+	}
+	
+	@Override public String func_110483_a()
+	{
+		return "pack";
+	}
+	
+	public JsonElement func_110488_a(PackMetadataSection p_110488_1_, Type p_110488_2_, JsonSerializationContext p_110488_3_)
+	{
+		JsonObject var4 = new JsonObject();
+		var4.addProperty("pack_format", Integer.valueOf(p_110488_1_.func_110462_b()));
+		var4.addProperty("description", p_110488_1_.func_110461_a());
+		return var4;
+	}
+	
+	public PackMetadataSection func_110489_a(JsonElement p_110489_1_, Type p_110489_2_, JsonDeserializationContext p_110489_3_)
+	{
+		JsonObject var4 = p_110489_1_.getAsJsonObject();
+		String var5 = func_110486_a(var4.get("description"), "description", (String) null, 1, Integer.MAX_VALUE);
+		int var6 = func_110485_a(var4.get("pack_format"), "pack_format", (Integer) null, 1, Integer.MAX_VALUE);
+		return new PackMetadataSection(var5, var6);
+	}
+	
+	public JsonElement serialize(Object p_serialize_1_, Type p_serialize_2_, JsonSerializationContext p_serialize_3_)
+	{
+		return func_110488_a((PackMetadataSection) p_serialize_1_, p_serialize_2_, p_serialize_3_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet.java b/RMCClient/minecraft/net/minecraft/src/Packet.java
index 942f322..f9a8ee5 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.EOFException;
 import java.io.IOException;
 import java.net.Socket;
@@ -10,6 +10,8 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.minecraft.server.MinecraftServer;
+
 public abstract class Packet
 {
 	public static IntHashMap packetIdToClassMap = new IntHashMap();
@@ -17,12 +19,12 @@
 	private static Set clientPacketIdList = new HashSet();
 	private static Set serverPacketIdList = new HashSet();
 	protected ILogAgent field_98193_m;
-	public final long creationTimeMillis = System.currentTimeMillis();
+	public final long creationTimeMillis = MinecraftServer.func_130071_aq();
 	public static long receivedID;
 	public static long receivedSize;
 	public static long sentID;
 	public static long sentSize;
-	public boolean isChunkDataPacket = false;
+	public boolean isChunkDataPacket;
 	
 	public boolean canProcessAsync()
 	{
@@ -48,7 +50,7 @@
 	
 	public abstract void processPacket(NetHandler var1);
 	
-	public abstract void readPacketData(DataInputStream var1) throws IOException;
+	public abstract void readPacketData(DataInput var1) throws IOException;
 	
 	@Override public String toString()
 	{
@@ -56,7 +58,7 @@
 		return var1;
 	}
 	
-	public abstract void writePacketData(DataOutputStream var1) throws IOException;
+	public abstract void writePacketData(DataOutput var1) throws IOException;
 	
 	static void addIdClassMapping(int par0, boolean par1, boolean par2, Class par3Class)
 	{
@@ -91,7 +93,7 @@
 		}
 	}
 	
-	public static byte[] readBytesFromStream(DataInputStream par0DataInputStream) throws IOException
+	public static byte[] readBytesFromStream(DataInput par0DataInputStream) throws IOException
 	{
 		short var1 = par0DataInputStream.readShort();
 		if(var1 < 0) throw new IOException("Key was smaller than nothing!  Weird key!");
@@ -103,7 +105,7 @@
 		}
 	}
 	
-	public static ItemStack readItemStack(DataInputStream par0DataInputStream) throws IOException
+	public static ItemStack readItemStack(DataInput par0DataInputStream) throws IOException
 	{
 		ItemStack var1 = null;
 		short var2 = par0DataInputStream.readShort();
@@ -117,7 +119,7 @@
 		return var1;
 	}
 	
-	public static NBTTagCompound readNBTTagCompound(DataInputStream par0DataInputStream) throws IOException
+	public static NBTTagCompound readNBTTagCompound(DataInput par0DataInputStream) throws IOException
 	{
 		short var1 = par0DataInputStream.readShort();
 		if(var1 < 0) return null;
@@ -129,7 +131,7 @@
 		}
 	}
 	
-	public static Packet readPacket(ILogAgent par0ILogAgent, DataInputStream par1DataInputStream, boolean par2, Socket par3Socket) throws IOException
+	public static Packet readPacket(ILogAgent par0ILogAgent, DataInput par1DataInputStream, boolean par2, Socket par3Socket) throws IOException
 	{
 		boolean var4 = false;
 		Packet var5 = null;
@@ -137,8 +139,7 @@
 		int var9;
 		try
 		{
-			var9 = par1DataInputStream.read();
-			if(var9 == -1) return null;
+			var9 = par1DataInputStream.readUnsignedByte();
 			if(par2 && !serverPacketIdList.contains(Integer.valueOf(var9)) || !par2 && !clientPacketIdList.contains(Integer.valueOf(var9))) throw new IOException("Bad packet id " + var9);
 			var5 = getNewPacket(par0ILogAgent, var9);
 			if(var5 == null) throw new IOException("Bad packet id " + var9);
@@ -152,7 +153,7 @@
 			receivedSize += var5.getPacketSize();
 		} catch(EOFException var8)
 		{
-			par0ILogAgent.logSevere("Reached end of stream");
+			par0ILogAgent.logSevere("Reached end of stream for " + par3Socket.getInetAddress());
 			return null;
 		}
 		PacketCount.countPacket(var9, var5.getPacketSize());
@@ -162,7 +163,7 @@
 		return var5;
 	}
 	
-	public static String readString(DataInputStream par0DataInputStream, int par1) throws IOException
+	public static String readString(DataInput par0DataInputStream, int par1) throws IOException
 	{
 		short var2 = par0DataInputStream.readShort();
 		if(var2 > par1) throw new IOException("Received string length longer than maximum allowed (" + var2 + " > " + par1 + ")");
@@ -178,13 +179,13 @@
 		}
 	}
 	
-	public static void writeByteArray(DataOutputStream par0DataOutputStream, byte[] par1ArrayOfByte) throws IOException
+	public static void writeByteArray(DataOutput par0DataOutputStream, byte[] par1ArrayOfByte) throws IOException
 	{
 		par0DataOutputStream.writeShort(par1ArrayOfByte.length);
 		par0DataOutputStream.write(par1ArrayOfByte);
 	}
 	
-	public static void writeItemStack(ItemStack par0ItemStack, DataOutputStream par1DataOutputStream) throws IOException
+	public static void writeItemStack(ItemStack par0ItemStack, DataOutput par1DataOutputStream) throws IOException
 	{
 		if(par0ItemStack == null)
 		{
@@ -203,7 +204,7 @@
 		}
 	}
 	
-	protected static void writeNBTTagCompound(NBTTagCompound par0NBTTagCompound, DataOutputStream par1DataOutputStream) throws IOException
+	protected static void writeNBTTagCompound(NBTTagCompound par0NBTTagCompound, DataOutput par1DataOutputStream) throws IOException
 	{
 		if(par0NBTTagCompound == null)
 		{
@@ -216,7 +217,7 @@
 		}
 	}
 	
-	public static void writePacket(Packet par0Packet, DataOutputStream par1DataOutputStream) throws IOException
+	public static void writePacket(Packet par0Packet, DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.write(par0Packet.getPacketId());
 		par0Packet.writePacketData(par1DataOutputStream);
@@ -224,7 +225,7 @@
 		sentSize += par0Packet.getPacketSize();
 	}
 	
-	public static void writeString(String par0Str, DataOutputStream par1DataOutputStream) throws IOException
+	public static void writeString(String par0Str, DataOutput par1DataOutputStream) throws IOException
 	{
 		if(par0Str.length() > 32767) throw new IOException("String too big");
 		else
@@ -262,6 +263,7 @@
 		addIdClassMapping(24, true, false, Packet24MobSpawn.class);
 		addIdClassMapping(25, true, false, Packet25EntityPainting.class);
 		addIdClassMapping(26, true, false, Packet26EntityExpOrb.class);
+		addIdClassMapping(27, false, true, Packet27PlayerInput.class);
 		addIdClassMapping(28, true, false, Packet28EntityVelocity.class);
 		addIdClassMapping(29, true, false, Packet29DestroyEntity.class);
 		addIdClassMapping(30, true, false, Packet30Entity.class);
@@ -276,6 +278,7 @@
 		addIdClassMapping(41, true, false, Packet41EntityEffect.class);
 		addIdClassMapping(42, true, false, Packet42RemoveEntityEffect.class);
 		addIdClassMapping(43, true, false, Packet43Experience.class);
+		addIdClassMapping(44, true, false, Packet44UpdateAttributes.class);
 		addIdClassMapping(51, true, false, Packet51MapChunk.class);
 		addIdClassMapping(52, true, false, Packet52MultiBlockChange.class);
 		addIdClassMapping(53, true, false, Packet53BlockChange.class);
@@ -300,6 +303,7 @@
 		addIdClassMapping(130, true, true, Packet130UpdateSign.class);
 		addIdClassMapping(131, true, false, Packet131MapData.class);
 		addIdClassMapping(132, true, false, Packet132TileEntityData.class);
+		addIdClassMapping(133, true, false, Packet133TileEditorOpen.class);
 		addIdClassMapping(200, true, false, Packet200Statistic.class);
 		addIdClassMapping(201, true, false, Packet201PlayerInfo.class);
 		addIdClassMapping(202, true, true, Packet202PlayerAbilities.class);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet0KeepAlive.java b/RMCClient/minecraft/net/minecraft/src/Packet0KeepAlive.java
index c8c36b6..813b4e2 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet0KeepAlive.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet0KeepAlive.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet0KeepAlive extends Packet
@@ -12,9 +12,9 @@
 	{
 	}
 	
-	public Packet0KeepAlive(int par1)
+	public Packet0KeepAlive(int p_i1435_1_)
 	{
-		randomId = par1;
+		randomId = p_i1435_1_;
 	}
 	
 	@Override public boolean canProcessAsync()
@@ -42,12 +42,12 @@
 		par1NetHandler.handleKeepAlive(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		randomId = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(randomId);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet100OpenWindow.java b/RMCClient/minecraft/net/minecraft/src/Packet100OpenWindow.java
index c01c17d..dcc0576 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet100OpenWindow.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet100OpenWindow.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet100OpenWindow extends Packet
@@ -11,23 +11,30 @@
 	public String windowTitle;
 	public int slotsCount;
 	public boolean useProvidedWindowTitle;
+	public int field_111008_f;
 	
 	public Packet100OpenWindow()
 	{
 	}
 	
-	public Packet100OpenWindow(int par1, int par2, String par3Str, int par4, boolean par5)
+	public Packet100OpenWindow(int p_i1423_1_, int p_i1423_2_, String p_i1423_3_, int p_i1423_4_, boolean p_i1423_5_)
 	{
-		windowId = par1;
-		inventoryType = par2;
-		windowTitle = par3Str;
-		slotsCount = par4;
-		useProvidedWindowTitle = par5;
+		windowId = p_i1423_1_;
+		inventoryType = p_i1423_2_;
+		windowTitle = p_i1423_3_;
+		slotsCount = p_i1423_4_;
+		useProvidedWindowTitle = p_i1423_5_;
+	}
+	
+	public Packet100OpenWindow(int p_i1424_1_, int p_i1424_2_, String p_i1424_3_, int p_i1424_4_, boolean p_i1424_5_, int p_i1424_6_)
+	{
+		this(p_i1424_1_, p_i1424_2_, p_i1424_3_, p_i1424_4_, p_i1424_5_);
+		field_111008_f = p_i1424_6_;
 	}
 	
 	@Override public int getPacketSize()
 	{
-		return 4 + windowTitle.length();
+		return inventoryType == 11 ? 8 + windowTitle.length() : 4 + windowTitle.length();
 	}
 	
 	@Override public void processPacket(NetHandler par1NetHandler)
@@ -35,21 +42,29 @@
 		par1NetHandler.handleOpenWindow(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		windowId = par1DataInputStream.readByte() & 255;
 		inventoryType = par1DataInputStream.readByte() & 255;
 		windowTitle = readString(par1DataInputStream, 32);
 		slotsCount = par1DataInputStream.readByte() & 255;
 		useProvidedWindowTitle = par1DataInputStream.readBoolean();
+		if(inventoryType == 11)
+		{
+			field_111008_f = par1DataInputStream.readInt();
+		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(windowId & 255);
 		par1DataOutputStream.writeByte(inventoryType & 255);
 		writeString(windowTitle, par1DataOutputStream);
 		par1DataOutputStream.writeByte(slotsCount & 255);
 		par1DataOutputStream.writeBoolean(useProvidedWindowTitle);
+		if(inventoryType == 11)
+		{
+			par1DataOutputStream.writeInt(field_111008_f);
+		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet101CloseWindow.java b/RMCClient/minecraft/net/minecraft/src/Packet101CloseWindow.java
index d598d20..c133738 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet101CloseWindow.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet101CloseWindow.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet101CloseWindow extends Packet
@@ -12,9 +12,9 @@
 	{
 	}
 	
-	public Packet101CloseWindow(int par1)
+	public Packet101CloseWindow(int p_i1422_1_)
 	{
-		windowId = par1;
+		windowId = p_i1422_1_;
 	}
 	
 	@Override public int getPacketSize()
@@ -27,12 +27,12 @@
 		par1NetHandler.handleCloseWindow(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		windowId = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(windowId);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet102WindowClick.java b/RMCClient/minecraft/net/minecraft/src/Packet102WindowClick.java
index fe95246..b95e4b2 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet102WindowClick.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet102WindowClick.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet102WindowClick extends Packet
@@ -17,14 +17,14 @@
 	{
 	}
 	
-	public Packet102WindowClick(int par1, int par2, int par3, int par4, ItemStack par5ItemStack, short par6)
+	public Packet102WindowClick(int p_i1421_1_, int p_i1421_2_, int p_i1421_3_, int p_i1421_4_, ItemStack p_i1421_5_, short p_i1421_6_)
 	{
-		window_Id = par1;
-		inventorySlot = par2;
-		mouseClick = par3;
-		itemStack = par5ItemStack != null ? par5ItemStack.copy() : null;
-		action = par6;
-		holdingShift = par4;
+		window_Id = p_i1421_1_;
+		inventorySlot = p_i1421_2_;
+		mouseClick = p_i1421_3_;
+		itemStack = p_i1421_5_ != null ? p_i1421_5_.copy() : null;
+		action = p_i1421_6_;
+		holdingShift = p_i1421_4_;
 	}
 	
 	@Override public int getPacketSize()
@@ -37,7 +37,7 @@
 		par1NetHandler.handleWindowClick(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		window_Id = par1DataInputStream.readByte();
 		inventorySlot = par1DataInputStream.readShort();
@@ -47,7 +47,7 @@
 		itemStack = readItemStack(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(window_Id);
 		par1DataOutputStream.writeShort(inventorySlot);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet103SetSlot.java b/RMCClient/minecraft/net/minecraft/src/Packet103SetSlot.java
index 90ba994..b783137 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet103SetSlot.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet103SetSlot.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet103SetSlot extends Packet
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet103SetSlot(int par1, int par2, ItemStack par3ItemStack)
+	public Packet103SetSlot(int p_i1427_1_, int p_i1427_2_, ItemStack p_i1427_3_)
 	{
-		windowId = par1;
-		itemSlot = par2;
-		myItemStack = par3ItemStack == null ? par3ItemStack : par3ItemStack.copy();
+		windowId = p_i1427_1_;
+		itemSlot = p_i1427_2_;
+		myItemStack = p_i1427_3_ == null ? p_i1427_3_ : p_i1427_3_.copy();
 	}
 	
 	@Override public int getPacketSize()
@@ -31,14 +31,14 @@
 		par1NetHandler.handleSetSlot(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		windowId = par1DataInputStream.readByte();
 		itemSlot = par1DataInputStream.readShort();
 		myItemStack = readItemStack(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(windowId);
 		par1DataOutputStream.writeShort(itemSlot);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet104WindowItems.java b/RMCClient/minecraft/net/minecraft/src/Packet104WindowItems.java
index f9d0111..69fbd76 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet104WindowItems.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet104WindowItems.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.util.List;
 
@@ -14,13 +14,13 @@
 	{
 	}
 	
-	public Packet104WindowItems(int par1, List par2List)
+	public Packet104WindowItems(int p_i1425_1_, List p_i1425_2_)
 	{
-		windowId = par1;
-		itemStack = new ItemStack[par2List.size()];
+		windowId = p_i1425_1_;
+		itemStack = new ItemStack[p_i1425_2_.size()];
 		for(int var3 = 0; var3 < itemStack.length; ++var3)
 		{
-			ItemStack var4 = (ItemStack) par2List.get(var3);
+			ItemStack var4 = (ItemStack) p_i1425_2_.get(var3);
 			itemStack[var3] = var4 == null ? null : var4.copy();
 		}
 	}
@@ -35,7 +35,7 @@
 		par1NetHandler.handleWindowItems(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		windowId = par1DataInputStream.readByte();
 		short var2 = par1DataInputStream.readShort();
@@ -46,7 +46,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(windowId);
 		par1DataOutputStream.writeShort(itemStack.length);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet105UpdateProgressbar.java b/RMCClient/minecraft/net/minecraft/src/Packet105UpdateProgressbar.java
index a9f558e..36ef3d4 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet105UpdateProgressbar.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet105UpdateProgressbar.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet105UpdateProgressbar extends Packet
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet105UpdateProgressbar(int par1, int par2, int par3)
+	public Packet105UpdateProgressbar(int p_i1426_1_, int p_i1426_2_, int p_i1426_3_)
 	{
-		windowId = par1;
-		progressBar = par2;
-		progressBarValue = par3;
+		windowId = p_i1426_1_;
+		progressBar = p_i1426_2_;
+		progressBarValue = p_i1426_3_;
 	}
 	
 	@Override public int getPacketSize()
@@ -31,14 +31,14 @@
 		par1NetHandler.handleUpdateProgressbar(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		windowId = par1DataInputStream.readByte();
 		progressBar = par1DataInputStream.readShort();
 		progressBarValue = par1DataInputStream.readShort();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(windowId);
 		par1DataOutputStream.writeShort(progressBar);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet106Transaction.java b/RMCClient/minecraft/net/minecraft/src/Packet106Transaction.java
index 4ffb85d..be89148 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet106Transaction.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet106Transaction.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet106Transaction extends Packet
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet106Transaction(int par1, short par2, boolean par3)
+	public Packet106Transaction(int p_i1419_1_, short p_i1419_2_, boolean p_i1419_3_)
 	{
-		windowId = par1;
-		shortWindowId = par2;
-		accepted = par3;
+		windowId = p_i1419_1_;
+		shortWindowId = p_i1419_2_;
+		accepted = p_i1419_3_;
 	}
 	
 	@Override public int getPacketSize()
@@ -31,14 +31,14 @@
 		par1NetHandler.handleTransaction(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		windowId = par1DataInputStream.readByte();
 		shortWindowId = par1DataInputStream.readShort();
 		accepted = par1DataInputStream.readByte() != 0;
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(windowId);
 		par1DataOutputStream.writeShort(shortWindowId);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet107CreativeSetSlot.java b/RMCClient/minecraft/net/minecraft/src/Packet107CreativeSetSlot.java
index 70036ba..2514ecb 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet107CreativeSetSlot.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet107CreativeSetSlot.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet107CreativeSetSlot extends Packet
@@ -13,10 +13,10 @@
 	{
 	}
 	
-	public Packet107CreativeSetSlot(int par1, ItemStack par2ItemStack)
+	public Packet107CreativeSetSlot(int p_i1461_1_, ItemStack p_i1461_2_)
 	{
-		slot = par1;
-		itemStack = par2ItemStack != null ? par2ItemStack.copy() : null;
+		slot = p_i1461_1_;
+		itemStack = p_i1461_2_ != null ? p_i1461_2_.copy() : null;
 	}
 	
 	@Override public int getPacketSize()
@@ -29,13 +29,13 @@
 		par1NetHandler.handleCreativeSetSlot(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		slot = par1DataInputStream.readShort();
 		itemStack = readItemStack(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeShort(slot);
 		writeItemStack(itemStack, par1DataOutputStream);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet108EnchantItem.java b/RMCClient/minecraft/net/minecraft/src/Packet108EnchantItem.java
index 62d24e6..2813684 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet108EnchantItem.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet108EnchantItem.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet108EnchantItem extends Packet
@@ -13,10 +13,10 @@
 	{
 	}
 	
-	public Packet108EnchantItem(int par1, int par2)
+	public Packet108EnchantItem(int p_i1420_1_, int p_i1420_2_)
 	{
-		windowId = par1;
-		enchantment = par2;
+		windowId = p_i1420_1_;
+		enchantment = p_i1420_2_;
 	}
 	
 	@Override public int getPacketSize()
@@ -29,13 +29,13 @@
 		par1NetHandler.handleEnchantItem(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		windowId = par1DataInputStream.readByte();
 		enchantment = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(windowId);
 		par1DataOutputStream.writeByte(enchantment);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet10Flying.java b/RMCClient/minecraft/net/minecraft/src/Packet10Flying.java
index 6463d1e..963bef6 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet10Flying.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet10Flying.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet10Flying extends Packet
@@ -20,9 +20,9 @@
 	{
 	}
 	
-	public Packet10Flying(boolean par1)
+	public Packet10Flying(boolean p_i1448_1_)
 	{
-		onGround = par1;
+		onGround = p_i1448_1_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -45,12 +45,12 @@
 		par1NetHandler.handleFlying(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
-		onGround = par1DataInputStream.read() != 0;
+		onGround = par1DataInputStream.readUnsignedByte() != 0;
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.write(onGround ? 1 : 0);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet11PlayerPosition.java b/RMCClient/minecraft/net/minecraft/src/Packet11PlayerPosition.java
index 8a35bdb..7228121 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet11PlayerPosition.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet11PlayerPosition.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet11PlayerPosition extends Packet10Flying
@@ -11,13 +11,13 @@
 		moving = true;
 	}
 	
-	public Packet11PlayerPosition(double par1, double par3, double par5, double par7, boolean par9)
+	public Packet11PlayerPosition(double p_i1445_1_, double p_i1445_3_, double p_i1445_5_, double p_i1445_7_, boolean p_i1445_9_)
 	{
-		xPosition = par1;
-		yPosition = par3;
-		stance = par5;
-		zPosition = par7;
-		onGround = par9;
+		xPosition = p_i1445_1_;
+		yPosition = p_i1445_3_;
+		stance = p_i1445_5_;
+		zPosition = p_i1445_7_;
+		onGround = p_i1445_9_;
 		moving = true;
 	}
 	
@@ -26,7 +26,7 @@
 		return 33;
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xPosition = par1DataInputStream.readDouble();
 		yPosition = par1DataInputStream.readDouble();
@@ -35,7 +35,7 @@
 		super.readPacketData(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeDouble(xPosition);
 		par1DataOutputStream.writeDouble(yPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet12PlayerLook.java b/RMCClient/minecraft/net/minecraft/src/Packet12PlayerLook.java
index 3426e03..81fde4a 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet12PlayerLook.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet12PlayerLook.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet12PlayerLook extends Packet10Flying
@@ -11,11 +11,11 @@
 		rotating = true;
 	}
 	
-	public Packet12PlayerLook(float par1, float par2, boolean par3)
+	public Packet12PlayerLook(float p_i1447_1_, float p_i1447_2_, boolean p_i1447_3_)
 	{
-		yaw = par1;
-		pitch = par2;
-		onGround = par3;
+		yaw = p_i1447_1_;
+		pitch = p_i1447_2_;
+		onGround = p_i1447_3_;
 		rotating = true;
 	}
 	
@@ -24,14 +24,14 @@
 		return 9;
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		yaw = par1DataInputStream.readFloat();
 		pitch = par1DataInputStream.readFloat();
 		super.readPacketData(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeFloat(yaw);
 		par1DataOutputStream.writeFloat(pitch);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet130UpdateSign.java b/RMCClient/minecraft/net/minecraft/src/Packet130UpdateSign.java
index f146c0b..45fe729 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet130UpdateSign.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet130UpdateSign.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet130UpdateSign extends Packet
@@ -16,13 +16,13 @@
 		isChunkDataPacket = true;
 	}
 	
-	public Packet130UpdateSign(int par1, int par2, int par3, String[] par4ArrayOfStr)
+	public Packet130UpdateSign(int p_i1478_1_, int p_i1478_2_, int p_i1478_3_, String[] p_i1478_4_)
 	{
 		isChunkDataPacket = true;
-		xPosition = par1;
-		yPosition = par2;
-		zPosition = par3;
-		signLines = new String[] { par4ArrayOfStr[0], par4ArrayOfStr[1], par4ArrayOfStr[2], par4ArrayOfStr[3] };
+		xPosition = p_i1478_1_;
+		yPosition = p_i1478_2_;
+		zPosition = p_i1478_3_;
+		signLines = new String[] { p_i1478_4_[0], p_i1478_4_[1], p_i1478_4_[2], p_i1478_4_[3] };
 	}
 	
 	@Override public int getPacketSize()
@@ -40,7 +40,7 @@
 		par1NetHandler.handleUpdateSign(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xPosition = par1DataInputStream.readInt();
 		yPosition = par1DataInputStream.readShort();
@@ -52,7 +52,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(xPosition);
 		par1DataOutputStream.writeShort(yPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet131MapData.java b/RMCClient/minecraft/net/minecraft/src/Packet131MapData.java
index 90e7830..07b4e76 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet131MapData.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet131MapData.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet131MapData extends Packet
@@ -15,12 +15,12 @@
 		isChunkDataPacket = true;
 	}
 	
-	public Packet131MapData(short par1, short par2, byte[] par3ArrayOfByte)
+	public Packet131MapData(short p_i1418_1_, short p_i1418_2_, byte[] p_i1418_3_)
 	{
 		isChunkDataPacket = true;
-		itemID = par1;
-		uniqueID = par2;
-		itemData = par3ArrayOfByte;
+		itemID = p_i1418_1_;
+		uniqueID = p_i1418_2_;
+		itemData = p_i1418_3_;
 	}
 	
 	@Override public int getPacketSize()
@@ -33,7 +33,7 @@
 		par1NetHandler.handleMapData(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		itemID = par1DataInputStream.readShort();
 		uniqueID = par1DataInputStream.readShort();
@@ -41,7 +41,7 @@
 		par1DataInputStream.readFully(itemData);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeShort(itemID);
 		par1DataOutputStream.writeShort(uniqueID);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet132TileEntityData.java b/RMCClient/minecraft/net/minecraft/src/Packet132TileEntityData.java
index b931309..fc76b2b 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet132TileEntityData.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet132TileEntityData.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet132TileEntityData extends Packet
@@ -17,14 +17,14 @@
 		isChunkDataPacket = true;
 	}
 	
-	public Packet132TileEntityData(int par1, int par2, int par3, int par4, NBTTagCompound par5NBTTagCompound)
+	public Packet132TileEntityData(int p_i1483_1_, int p_i1483_2_, int p_i1483_3_, int p_i1483_4_, NBTTagCompound p_i1483_5_)
 	{
 		isChunkDataPacket = true;
-		xPosition = par1;
-		yPosition = par2;
-		zPosition = par3;
-		actionType = par4;
-		customParam1 = par5NBTTagCompound;
+		xPosition = p_i1483_1_;
+		yPosition = p_i1483_2_;
+		zPosition = p_i1483_3_;
+		actionType = p_i1483_4_;
+		customParam1 = p_i1483_5_;
 	}
 	
 	@Override public int getPacketSize()
@@ -37,7 +37,7 @@
 		par1NetHandler.handleTileEntityData(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xPosition = par1DataInputStream.readInt();
 		yPosition = par1DataInputStream.readShort();
@@ -46,7 +46,7 @@
 		customParam1 = readNBTTagCompound(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(xPosition);
 		par1DataOutputStream.writeShort(yPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet133TileEditorOpen.java b/RMCClient/minecraft/net/minecraft/src/Packet133TileEditorOpen.java
new file mode 100644
index 0000000..2d08e29
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Packet133TileEditorOpen.java
@@ -0,0 +1,51 @@
+package net.minecraft.src;
+
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+
+public class Packet133TileEditorOpen extends Packet
+{
+	public int field_142037_a;
+	public int field_142035_b;
+	public int field_142036_c;
+	public int field_142034_d;
+	
+	public Packet133TileEditorOpen()
+	{
+	}
+	
+	public Packet133TileEditorOpen(int p_i2345_1_, int p_i2345_2_, int p_i2345_3_, int p_i2345_4_)
+	{
+		field_142037_a = p_i2345_1_;
+		field_142035_b = p_i2345_2_;
+		field_142036_c = p_i2345_3_;
+		field_142034_d = p_i2345_4_;
+	}
+	
+	@Override public int getPacketSize()
+	{
+		return 13;
+	}
+	
+	@Override public void processPacket(NetHandler par1NetHandler)
+	{
+		par1NetHandler.func_142031_a(this);
+	}
+	
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
+	{
+		field_142037_a = par1DataInputStream.readByte();
+		field_142035_b = par1DataInputStream.readInt();
+		field_142036_c = par1DataInputStream.readInt();
+		field_142034_d = par1DataInputStream.readInt();
+	}
+	
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
+	{
+		par1DataOutputStream.writeByte(field_142037_a);
+		par1DataOutputStream.writeInt(field_142035_b);
+		par1DataOutputStream.writeInt(field_142036_c);
+		par1DataOutputStream.writeInt(field_142034_d);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet13PlayerLookMove.java b/RMCClient/minecraft/net/minecraft/src/Packet13PlayerLookMove.java
index cf0d292..3490ea9 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet13PlayerLookMove.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet13PlayerLookMove.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet13PlayerLookMove extends Packet10Flying
@@ -12,15 +12,15 @@
 		moving = true;
 	}
 	
-	public Packet13PlayerLookMove(double par1, double par3, double par5, double par7, float par9, float par10, boolean par11)
+	public Packet13PlayerLookMove(double p_i1446_1_, double p_i1446_3_, double p_i1446_5_, double p_i1446_7_, float p_i1446_9_, float p_i1446_10_, boolean p_i1446_11_)
 	{
-		xPosition = par1;
-		yPosition = par3;
-		stance = par5;
-		zPosition = par7;
-		yaw = par9;
-		pitch = par10;
-		onGround = par11;
+		xPosition = p_i1446_1_;
+		yPosition = p_i1446_3_;
+		stance = p_i1446_5_;
+		zPosition = p_i1446_7_;
+		yaw = p_i1446_9_;
+		pitch = p_i1446_10_;
+		onGround = p_i1446_11_;
 		rotating = true;
 		moving = true;
 	}
@@ -30,7 +30,7 @@
 		return 41;
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xPosition = par1DataInputStream.readDouble();
 		yPosition = par1DataInputStream.readDouble();
@@ -41,7 +41,7 @@
 		super.readPacketData(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeDouble(xPosition);
 		par1DataOutputStream.writeDouble(yPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet14BlockDig.java b/RMCClient/minecraft/net/minecraft/src/Packet14BlockDig.java
index 8e1420f..e259ef4 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet14BlockDig.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet14BlockDig.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet14BlockDig extends Packet
@@ -16,13 +16,13 @@
 	{
 	}
 	
-	public Packet14BlockDig(int par1, int par2, int par3, int par4, int par5)
+	public Packet14BlockDig(int p_i1450_1_, int p_i1450_2_, int p_i1450_3_, int p_i1450_4_, int p_i1450_5_)
 	{
-		status = par1;
-		xPosition = par2;
-		yPosition = par3;
-		zPosition = par4;
-		face = par5;
+		status = p_i1450_1_;
+		xPosition = p_i1450_2_;
+		yPosition = p_i1450_3_;
+		zPosition = p_i1450_4_;
+		face = p_i1450_5_;
 	}
 	
 	@Override public int getPacketSize()
@@ -35,16 +35,16 @@
 		par1NetHandler.handleBlockDig(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
-		status = par1DataInputStream.read();
+		status = par1DataInputStream.readUnsignedByte();
 		xPosition = par1DataInputStream.readInt();
-		yPosition = par1DataInputStream.read();
+		yPosition = par1DataInputStream.readUnsignedByte();
 		zPosition = par1DataInputStream.readInt();
-		face = par1DataInputStream.read();
+		face = par1DataInputStream.readUnsignedByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.write(status);
 		par1DataOutputStream.writeInt(xPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet15Place.java b/RMCClient/minecraft/net/minecraft/src/Packet15Place.java
index 315b46b..ba16e05 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet15Place.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet15Place.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet15Place extends Packet
@@ -19,16 +19,16 @@
 	{
 	}
 	
-	public Packet15Place(int par1, int par2, int par3, int par4, ItemStack par5ItemStack, float par6, float par7, float par8)
+	public Packet15Place(int p_i1488_1_, int p_i1488_2_, int p_i1488_3_, int p_i1488_4_, ItemStack p_i1488_5_, float p_i1488_6_, float p_i1488_7_, float p_i1488_8_)
 	{
-		xPosition = par1;
-		yPosition = par2;
-		zPosition = par3;
-		direction = par4;
-		itemStack = par5ItemStack != null ? par5ItemStack.copy() : null;
-		xOffset = par6;
-		yOffset = par7;
-		zOffset = par8;
+		xPosition = p_i1488_1_;
+		yPosition = p_i1488_2_;
+		zPosition = p_i1488_3_;
+		direction = p_i1488_4_;
+		itemStack = p_i1488_5_ != null ? p_i1488_5_.copy() : null;
+		xOffset = p_i1488_6_;
+		yOffset = p_i1488_7_;
+		zOffset = p_i1488_8_;
 	}
 	
 	public int getDirection()
@@ -81,19 +81,19 @@
 		par1NetHandler.handlePlace(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xPosition = par1DataInputStream.readInt();
-		yPosition = par1DataInputStream.read();
+		yPosition = par1DataInputStream.readUnsignedByte();
 		zPosition = par1DataInputStream.readInt();
-		direction = par1DataInputStream.read();
+		direction = par1DataInputStream.readUnsignedByte();
 		itemStack = readItemStack(par1DataInputStream);
-		xOffset = par1DataInputStream.read() / 16.0F;
-		yOffset = par1DataInputStream.read() / 16.0F;
-		zOffset = par1DataInputStream.read() / 16.0F;
+		xOffset = par1DataInputStream.readUnsignedByte() / 16.0F;
+		yOffset = par1DataInputStream.readUnsignedByte() / 16.0F;
+		zOffset = par1DataInputStream.readUnsignedByte() / 16.0F;
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(xPosition);
 		par1DataOutputStream.write(yPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet16BlockItemSwitch.java b/RMCClient/minecraft/net/minecraft/src/Packet16BlockItemSwitch.java
index d509ea6..064ce93 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet16BlockItemSwitch.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet16BlockItemSwitch.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet16BlockItemSwitch extends Packet
@@ -12,9 +12,9 @@
 	{
 	}
 	
-	public Packet16BlockItemSwitch(int par1)
+	public Packet16BlockItemSwitch(int p_i1460_1_)
 	{
-		id = par1;
+		id = p_i1460_1_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -37,12 +37,12 @@
 		par1NetHandler.handleBlockItemSwitch(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		id = par1DataInputStream.readShort();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeShort(id);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet17Sleep.java b/RMCClient/minecraft/net/minecraft/src/Packet17Sleep.java
index 18df7c7..6ac34f5 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet17Sleep.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet17Sleep.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet17Sleep extends Packet
@@ -16,13 +16,13 @@
 	{
 	}
 	
-	public Packet17Sleep(Entity par1Entity, int par2, int par3, int par4, int par5)
+	public Packet17Sleep(Entity p_i1430_1_, int p_i1430_2_, int p_i1430_3_, int p_i1430_4_, int p_i1430_5_)
 	{
-		field_73622_e = par2;
-		bedX = par3;
-		bedY = par4;
-		bedZ = par5;
-		entityID = par1Entity.entityId;
+		field_73622_e = p_i1430_2_;
+		bedX = p_i1430_3_;
+		bedY = p_i1430_4_;
+		bedZ = p_i1430_5_;
+		entityID = p_i1430_1_.entityId;
 	}
 	
 	@Override public int getPacketSize()
@@ -35,7 +35,7 @@
 		par1NetHandler.handleSleep(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityID = par1DataInputStream.readInt();
 		field_73622_e = par1DataInputStream.readByte();
@@ -44,7 +44,7 @@
 		bedZ = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityID);
 		par1DataOutputStream.writeByte(field_73622_e);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet18Animation.java b/RMCClient/minecraft/net/minecraft/src/Packet18Animation.java
index dc12878..ba4bbeb 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet18Animation.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet18Animation.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet18Animation extends Packet
@@ -13,10 +13,10 @@
 	{
 	}
 	
-	public Packet18Animation(Entity par1Entity, int par2)
+	public Packet18Animation(Entity p_i1407_1_, int p_i1407_2_)
 	{
-		entityId = par1Entity.entityId;
-		animate = par2;
+		entityId = p_i1407_1_.entityId;
+		animate = p_i1407_2_;
 	}
 	
 	@Override public int getPacketSize()
@@ -29,13 +29,13 @@
 		par1NetHandler.handleAnimation(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		animate = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeByte(animate);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet19EntityAction.java b/RMCClient/minecraft/net/minecraft/src/Packet19EntityAction.java
index 0320362..90d85af 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet19EntityAction.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet19EntityAction.java
@@ -1,27 +1,34 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet19EntityAction extends Packet
 {
 	public int entityId;
 	public int state;
+	public int field_111009_c;
 	
 	public Packet19EntityAction()
 	{
 	}
 	
-	public Packet19EntityAction(Entity par1Entity, int par2)
+	public Packet19EntityAction(Entity p_i1451_1_, int p_i1451_2_)
 	{
-		entityId = par1Entity.entityId;
-		state = par2;
+		this(p_i1451_1_, p_i1451_2_, 0);
+	}
+	
+	public Packet19EntityAction(Entity p_i1452_1_, int p_i1452_2_, int p_i1452_3_)
+	{
+		entityId = p_i1452_1_.entityId;
+		state = p_i1452_2_;
+		field_111009_c = p_i1452_3_;
 	}
 	
 	@Override public int getPacketSize()
 	{
-		return 5;
+		return 9;
 	}
 	
 	@Override public void processPacket(NetHandler par1NetHandler)
@@ -29,15 +36,17 @@
 		par1NetHandler.handleEntityAction(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		state = par1DataInputStream.readByte();
+		field_111009_c = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeByte(state);
+		par1DataOutputStream.writeInt(field_111009_c);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet1Login.java b/RMCClient/minecraft/net/minecraft/src/Packet1Login.java
index 0f4dd1a..832f03d 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet1Login.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet1Login.java
@@ -1,12 +1,12 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet1Login extends Packet
 {
-	public int clientEntityId = 0;
+	public int clientEntityId;
 	public WorldType terrainType;
 	public boolean hardcoreMode;
 	public EnumGameType gameType;
@@ -19,16 +19,16 @@
 	{
 	}
 	
-	public Packet1Login(int par1, WorldType par2WorldType, EnumGameType par3EnumGameType, boolean par4, int par5, int par6, int par7, int par8)
+	public Packet1Login(int p_i1440_1_, WorldType p_i1440_2_, EnumGameType p_i1440_3_, boolean p_i1440_4_, int p_i1440_5_, int p_i1440_6_, int p_i1440_7_, int p_i1440_8_)
 	{
-		clientEntityId = par1;
-		terrainType = par2WorldType;
-		dimension = par5;
-		difficultySetting = (byte) par6;
-		gameType = par3EnumGameType;
-		worldHeight = (byte) par7;
-		maxPlayers = (byte) par8;
-		hardcoreMode = par4;
+		clientEntityId = p_i1440_1_;
+		terrainType = p_i1440_2_;
+		dimension = p_i1440_5_;
+		difficultySetting = (byte) p_i1440_6_;
+		gameType = p_i1440_3_;
+		worldHeight = (byte) p_i1440_7_;
+		maxPlayers = (byte) p_i1440_8_;
+		hardcoreMode = p_i1440_4_;
 	}
 	
 	@Override public int getPacketSize()
@@ -46,7 +46,7 @@
 		par1NetHandler.handleLogin(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		clientEntityId = par1DataInputStream.readInt();
 		String var2 = readString(par1DataInputStream, 16);
@@ -65,7 +65,7 @@
 		maxPlayers = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(clientEntityId);
 		writeString(terrainType == null ? "" : terrainType.getWorldTypeName(), par1DataOutputStream);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet200Statistic.java b/RMCClient/minecraft/net/minecraft/src/Packet200Statistic.java
index f12279a..06f713d 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet200Statistic.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet200Statistic.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet200Statistic extends Packet
@@ -13,10 +13,10 @@
 	{
 	}
 	
-	public Packet200Statistic(int par1, int par2)
+	public Packet200Statistic(int p_i1408_1_, int p_i1408_2_)
 	{
-		statisticId = par1;
-		amount = par2;
+		statisticId = p_i1408_1_;
+		amount = p_i1408_2_;
 	}
 	
 	@Override public boolean canProcessAsync()
@@ -34,15 +34,15 @@
 		par1NetHandler.handleStatistic(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		statisticId = par1DataInputStream.readInt();
-		amount = par1DataInputStream.readByte();
+		amount = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(statisticId);
-		par1DataOutputStream.writeByte(amount);
+		par1DataOutputStream.writeInt(amount);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet201PlayerInfo.java b/RMCClient/minecraft/net/minecraft/src/Packet201PlayerInfo.java
index bc3cae8..c971a05 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet201PlayerInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet201PlayerInfo.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet201PlayerInfo extends Packet
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet201PlayerInfo(String par1Str, boolean par2, int par3)
+	public Packet201PlayerInfo(String p_i1453_1_, boolean p_i1453_2_, int p_i1453_3_)
 	{
-		playerName = par1Str;
-		isConnected = par2;
-		ping = par3;
+		playerName = p_i1453_1_;
+		isConnected = p_i1453_2_;
+		ping = p_i1453_3_;
 	}
 	
 	@Override public int getPacketSize()
@@ -31,14 +31,14 @@
 		par1NetHandler.handlePlayerInfo(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		playerName = readString(par1DataInputStream, 16);
 		isConnected = par1DataInputStream.readByte() != 0;
 		ping = par1DataInputStream.readShort();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(playerName, par1DataOutputStream);
 		par1DataOutputStream.writeByte(isConnected ? 1 : 0);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet202PlayerAbilities.java b/RMCClient/minecraft/net/minecraft/src/Packet202PlayerAbilities.java
index 661cde3..14ff60c 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet202PlayerAbilities.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet202PlayerAbilities.java
@@ -1,15 +1,15 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet202PlayerAbilities extends Packet
 {
-	private boolean disableDamage = false;
-	private boolean isFlying = false;
-	private boolean allowFlying = false;
-	private boolean isCreativeMode = false;
+	private boolean disableDamage;
+	private boolean isFlying;
+	private boolean allowFlying;
+	private boolean isCreativeMode;
 	private float flySpeed;
 	private float walkSpeed;
 	
@@ -17,14 +17,14 @@
 	{
 	}
 	
-	public Packet202PlayerAbilities(PlayerCapabilities par1PlayerCapabilities)
+	public Packet202PlayerAbilities(PlayerCapabilities p_i1449_1_)
 	{
-		setDisableDamage(par1PlayerCapabilities.disableDamage);
-		setFlying(par1PlayerCapabilities.isFlying);
-		setAllowFlying(par1PlayerCapabilities.allowFlying);
-		setCreativeMode(par1PlayerCapabilities.isCreativeMode);
-		setFlySpeed(par1PlayerCapabilities.getFlySpeed());
-		setWalkSpeed(par1PlayerCapabilities.getWalkSpeed());
+		setDisableDamage(p_i1449_1_.disableDamage);
+		setFlying(p_i1449_1_.isFlying);
+		setAllowFlying(p_i1449_1_.allowFlying);
+		setCreativeMode(p_i1449_1_.isCreativeMode);
+		setFlySpeed(p_i1449_1_.getFlySpeed());
+		setWalkSpeed(p_i1449_1_.getWalkSpeed());
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -77,15 +77,15 @@
 		par1NetHandler.handlePlayerAbilities(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		byte var2 = par1DataInputStream.readByte();
 		setDisableDamage((var2 & 1) > 0);
 		setFlying((var2 & 2) > 0);
 		setAllowFlying((var2 & 4) > 0);
 		setCreativeMode((var2 & 8) > 0);
-		setFlySpeed(par1DataInputStream.readByte() / 255.0F);
-		setWalkSpeed(par1DataInputStream.readByte() / 255.0F);
+		setFlySpeed(par1DataInputStream.readFloat());
+		setWalkSpeed(par1DataInputStream.readFloat());
 	}
 	
 	public void setAllowFlying(boolean par1)
@@ -118,7 +118,7 @@
 		walkSpeed = par1;
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		byte var2 = 0;
 		if(getDisableDamage())
@@ -138,7 +138,7 @@
 			var2 = (byte) (var2 | 8);
 		}
 		par1DataOutputStream.writeByte(var2);
-		par1DataOutputStream.writeByte((int) (flySpeed * 255.0F));
-		par1DataOutputStream.writeByte((int) (walkSpeed * 255.0F));
+		par1DataOutputStream.writeFloat(flySpeed);
+		par1DataOutputStream.writeFloat(walkSpeed);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet203AutoComplete.java b/RMCClient/minecraft/net/minecraft/src/Packet203AutoComplete.java
index 875d91f..ee3e3f7 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet203AutoComplete.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet203AutoComplete.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet203AutoComplete extends Packet
@@ -12,9 +12,9 @@
 	{
 	}
 	
-	public Packet203AutoComplete(String par1Str)
+	public Packet203AutoComplete(String p_i1409_1_)
 	{
-		text = par1Str;
+		text = p_i1409_1_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -42,13 +42,13 @@
 		par1NetHandler.handleAutoComplete(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
-		text = readString(par1DataInputStream, Packet3Chat.maxChatLength);
+		text = readString(par1DataInputStream, 32767);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
-		writeString(text, par1DataOutputStream);
+		writeString(org.apache.commons.lang3.StringUtils.substring(text, 0, 32767), par1DataOutputStream);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet204ClientInfo.java b/RMCClient/minecraft/net/minecraft/src/Packet204ClientInfo.java
index af3fa81..aec81ec 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet204ClientInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet204ClientInfo.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet204ClientInfo extends Packet
@@ -17,14 +17,14 @@
 	{
 	}
 	
-	public Packet204ClientInfo(String par1Str, int par2, int par3, boolean par4, int par5, boolean par6)
+	public Packet204ClientInfo(String p_i1416_1_, int p_i1416_2_, int p_i1416_3_, boolean p_i1416_4_, int p_i1416_5_, boolean p_i1416_6_)
 	{
-		language = par1Str;
-		renderDistance = par2;
-		chatVisisble = par3;
-		chatColours = par4;
-		gameDifficulty = par5;
-		showCape = par6;
+		language = p_i1416_1_;
+		renderDistance = p_i1416_2_;
+		chatVisisble = p_i1416_3_;
+		chatColours = p_i1416_4_;
+		gameDifficulty = p_i1416_5_;
+		showCape = p_i1416_6_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -77,7 +77,7 @@
 		par1NetHandler.handleClientInfo(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		language = readString(par1DataInputStream, 7);
 		renderDistance = par1DataInputStream.readByte();
@@ -88,7 +88,7 @@
 		showCape = par1DataInputStream.readBoolean();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(language, par1DataOutputStream);
 		par1DataOutputStream.writeByte(renderDistance);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet205ClientCommand.java b/RMCClient/minecraft/net/minecraft/src/Packet205ClientCommand.java
index 02d0e74..22fbc2f 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet205ClientCommand.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet205ClientCommand.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet205ClientCommand extends Packet
@@ -12,9 +12,9 @@
 	{
 	}
 	
-	public Packet205ClientCommand(int par1)
+	public Packet205ClientCommand(int p_i1415_1_)
 	{
-		forceRespawn = par1;
+		forceRespawn = p_i1415_1_;
 	}
 	
 	@Override public int getPacketSize()
@@ -27,12 +27,12 @@
 		par1NetHandler.handleClientCommand(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		forceRespawn = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(forceRespawn & 255);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet206SetObjective.java b/RMCClient/minecraft/net/minecraft/src/Packet206SetObjective.java
index 00a9bc9..2faa112 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet206SetObjective.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet206SetObjective.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet206SetObjective extends Packet
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet206SetObjective(ScoreObjective par1, int par2)
+	public Packet206SetObjective(ScoreObjective p_i1470_1_, int p_i1470_2_)
 	{
-		objectiveName = par1.getName();
-		objectiveDisplayName = par1.getDisplayName();
-		change = par2;
+		objectiveName = p_i1470_1_.getName();
+		objectiveDisplayName = p_i1470_1_.getDisplayName();
+		change = p_i1470_2_;
 	}
 	
 	@Override public int getPacketSize()
@@ -31,14 +31,14 @@
 		par1NetHandler.handleSetObjective(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		objectiveName = readString(par1DataInputStream, 16);
 		objectiveDisplayName = readString(par1DataInputStream, 32);
 		change = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(objectiveName, par1DataOutputStream);
 		writeString(objectiveDisplayName, par1DataOutputStream);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet207SetScore.java b/RMCClient/minecraft/net/minecraft/src/Packet207SetScore.java
index cda568e..437cfb8 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet207SetScore.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet207SetScore.java
@@ -1,31 +1,31 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet207SetScore extends Packet
 {
 	public String itemName = "";
 	public String scoreName = "";
-	public int value = 0;
-	public int updateOrRemove = 0;
+	public int value;
+	public int updateOrRemove;
 	
 	public Packet207SetScore()
 	{
 	}
 	
-	public Packet207SetScore(Score par1, int par2)
+	public Packet207SetScore(Score p_i1473_1_, int p_i1473_2_)
 	{
-		itemName = par1.func_96653_e();
-		scoreName = par1.func_96645_d().getName();
-		value = par1.func_96652_c();
-		updateOrRemove = par2;
+		itemName = p_i1473_1_.func_96653_e();
+		scoreName = p_i1473_1_.func_96645_d().getName();
+		value = p_i1473_1_.func_96652_c();
+		updateOrRemove = p_i1473_2_;
 	}
 	
-	public Packet207SetScore(String par1)
+	public Packet207SetScore(String p_i1474_1_)
 	{
-		itemName = par1;
+		itemName = p_i1474_1_;
 		scoreName = "";
 		value = 0;
 		updateOrRemove = 1;
@@ -33,7 +33,7 @@
 	
 	@Override public int getPacketSize()
 	{
-		return 2 + itemName.length() + 2 + scoreName.length() + 4 + 1;
+		return 2 + (itemName == null ? 0 : itemName.length()) + 2 + (scoreName == null ? 0 : scoreName.length()) + 4 + 1;
 	}
 	
 	@Override public void processPacket(NetHandler par1NetHandler)
@@ -41,7 +41,7 @@
 		par1NetHandler.handleSetScore(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		itemName = readString(par1DataInputStream, 16);
 		updateOrRemove = par1DataInputStream.readByte();
@@ -52,7 +52,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(itemName, par1DataOutputStream);
 		par1DataOutputStream.writeByte(updateOrRemove);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet208SetDisplayObjective.java b/RMCClient/minecraft/net/minecraft/src/Packet208SetDisplayObjective.java
index c8d72c3..d8050d6 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet208SetDisplayObjective.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet208SetDisplayObjective.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet208SetDisplayObjective extends Packet
@@ -13,15 +13,15 @@
 	{
 	}
 	
-	public Packet208SetDisplayObjective(int par1, ScoreObjective par2ScoreObjective)
+	public Packet208SetDisplayObjective(int p_i1462_1_, ScoreObjective p_i1462_2_)
 	{
-		scoreboardPosition = par1;
-		if(par2ScoreObjective == null)
+		scoreboardPosition = p_i1462_1_;
+		if(p_i1462_2_ == null)
 		{
 			scoreName = "";
 		} else
 		{
-			scoreName = par2ScoreObjective.getName();
+			scoreName = p_i1462_2_.getName();
 		}
 	}
 	
@@ -35,13 +35,13 @@
 		par1NetHandler.handleSetDisplayObjective(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		scoreboardPosition = par1DataInputStream.readByte();
 		scoreName = readString(par1DataInputStream, 16);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(scoreboardPosition);
 		writeString(scoreName, par1DataOutputStream);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet209SetPlayerTeam.java b/RMCClient/minecraft/net/minecraft/src/Packet209SetPlayerTeam.java
index 70bf230..616ddba 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet209SetPlayerTeam.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet209SetPlayerTeam.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collection;
@@ -14,38 +14,38 @@
 	public String teamPrefix = "";
 	public String teamSuffix = "";
 	public Collection playerNames = new ArrayList();
-	public int mode = 0;
+	public int mode;
 	public int friendlyFire;
 	
 	public Packet209SetPlayerTeam()
 	{
 	}
 	
-	public Packet209SetPlayerTeam(ScorePlayerTeam par1ScorePlayerTeam, Collection par2Collection, int par3)
+	public Packet209SetPlayerTeam(ScorePlayerTeam p_i1472_1_, Collection p_i1472_2_, int p_i1472_3_)
 	{
-		if(par3 != 3 && par3 != 4) throw new IllegalArgumentException("Method must be join or leave for player constructor");
-		else if(par2Collection != null && !par2Collection.isEmpty())
+		if(p_i1472_3_ != 3 && p_i1472_3_ != 4) throw new IllegalArgumentException("Method must be join or leave for player constructor");
+		else if(p_i1472_2_ != null && !p_i1472_2_.isEmpty())
 		{
-			mode = par3;
-			teamName = par1ScorePlayerTeam.func_96661_b();
-			playerNames.addAll(par2Collection);
+			mode = p_i1472_3_;
+			teamName = p_i1472_1_.func_96661_b();
+			playerNames.addAll(p_i1472_2_);
 		} else throw new IllegalArgumentException("Players cannot be null/empty");
 	}
 	
-	public Packet209SetPlayerTeam(ScorePlayerTeam par1, int par2)
+	public Packet209SetPlayerTeam(ScorePlayerTeam p_i1471_1_, int p_i1471_2_)
 	{
-		teamName = par1.func_96661_b();
-		mode = par2;
-		if(par2 == 0 || par2 == 2)
+		teamName = p_i1471_1_.func_96661_b();
+		mode = p_i1471_2_;
+		if(p_i1471_2_ == 0 || p_i1471_2_ == 2)
 		{
-			teamDisplayName = par1.func_96669_c();
-			teamPrefix = par1.func_96668_e();
-			teamSuffix = par1.func_96663_f();
-			friendlyFire = par1.func_98299_i();
+			teamDisplayName = p_i1471_1_.func_96669_c();
+			teamPrefix = p_i1471_1_.func_96668_e();
+			teamSuffix = p_i1471_1_.func_96663_f();
+			friendlyFire = p_i1471_1_.func_98299_i();
 		}
-		if(par2 == 0)
+		if(p_i1471_2_ == 0)
 		{
-			playerNames.addAll(par1.getMembershipCollection());
+			playerNames.addAll(p_i1471_1_.getMembershipCollection());
 		}
 	}
 	
@@ -59,7 +59,7 @@
 		par1NetHandler.handleSetPlayerTeam(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		teamName = readString(par1DataInputStream, 16);
 		mode = par1DataInputStream.readByte();
@@ -80,7 +80,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(teamName, par1DataOutputStream);
 		par1DataOutputStream.writeByte(mode);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet20NamedEntitySpawn.java b/RMCClient/minecraft/net/minecraft/src/Packet20NamedEntitySpawn.java
index 5fb2585..492741d 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet20NamedEntitySpawn.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet20NamedEntitySpawn.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.util.List;
 
@@ -22,18 +22,18 @@
 	{
 	}
 	
-	public Packet20NamedEntitySpawn(EntityPlayer par1EntityPlayer)
+	public Packet20NamedEntitySpawn(EntityPlayer p_i1406_1_)
 	{
-		entityId = par1EntityPlayer.entityId;
-		name = par1EntityPlayer.username;
-		xPosition = MathHelper.floor_double(par1EntityPlayer.posX * 32.0D);
-		yPosition = MathHelper.floor_double(par1EntityPlayer.posY * 32.0D);
-		zPosition = MathHelper.floor_double(par1EntityPlayer.posZ * 32.0D);
-		rotation = (byte) (int) (par1EntityPlayer.rotationYaw * 256.0F / 360.0F);
-		pitch = (byte) (int) (par1EntityPlayer.rotationPitch * 256.0F / 360.0F);
-		ItemStack var2 = par1EntityPlayer.inventory.getCurrentItem();
+		entityId = p_i1406_1_.entityId;
+		name = p_i1406_1_.getCommandSenderName();
+		xPosition = MathHelper.floor_double(p_i1406_1_.posX * 32.0D);
+		yPosition = MathHelper.floor_double(p_i1406_1_.posY * 32.0D);
+		zPosition = MathHelper.floor_double(p_i1406_1_.posZ * 32.0D);
+		rotation = (byte) (int) (p_i1406_1_.rotationYaw * 256.0F / 360.0F);
+		pitch = (byte) (int) (p_i1406_1_.rotationPitch * 256.0F / 360.0F);
+		ItemStack var2 = p_i1406_1_.inventory.getCurrentItem();
 		currentItem = var2 == null ? 0 : var2.itemID;
-		metadata = par1EntityPlayer.getDataWatcher();
+		metadata = p_i1406_1_.getDataWatcher();
 	}
 	
 	@Override public int getPacketSize()
@@ -55,7 +55,7 @@
 		par1NetHandler.handleNamedEntitySpawn(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		name = readString(par1DataInputStream, 16);
@@ -68,7 +68,7 @@
 		metadataWatchableObjects = DataWatcher.readWatchableObjects(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		writeString(name, par1DataOutputStream);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet22Collect.java b/RMCClient/minecraft/net/minecraft/src/Packet22Collect.java
index f6d9d47..13f8339 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet22Collect.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet22Collect.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet22Collect extends Packet
@@ -13,10 +13,10 @@
 	{
 	}
 	
-	public Packet22Collect(int par1, int par2)
+	public Packet22Collect(int p_i1479_1_, int p_i1479_2_)
 	{
-		collectedEntityId = par1;
-		collectorEntityId = par2;
+		collectedEntityId = p_i1479_1_;
+		collectorEntityId = p_i1479_2_;
 	}
 	
 	@Override public int getPacketSize()
@@ -29,13 +29,13 @@
 		par1NetHandler.handleCollect(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		collectedEntityId = par1DataInputStream.readInt();
 		collectorEntityId = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(collectedEntityId);
 		par1DataOutputStream.writeInt(collectorEntityId);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet23VehicleSpawn.java b/RMCClient/minecraft/net/minecraft/src/Packet23VehicleSpawn.java
index b2c8fb6..605a404 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet23VehicleSpawn.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet23VehicleSpawn.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet23VehicleSpawn extends Packet
@@ -22,26 +22,26 @@
 	{
 	}
 	
-	public Packet23VehicleSpawn(Entity par1Entity, int par2)
+	public Packet23VehicleSpawn(Entity p_i1400_1_, int p_i1400_2_)
 	{
-		this(par1Entity, par2, 0);
+		this(p_i1400_1_, p_i1400_2_, 0);
 	}
 	
-	public Packet23VehicleSpawn(Entity par1Entity, int par2, int par3)
+	public Packet23VehicleSpawn(Entity p_i1401_1_, int p_i1401_2_, int p_i1401_3_)
 	{
-		entityId = par1Entity.entityId;
-		xPosition = MathHelper.floor_double(par1Entity.posX * 32.0D);
-		yPosition = MathHelper.floor_double(par1Entity.posY * 32.0D);
-		zPosition = MathHelper.floor_double(par1Entity.posZ * 32.0D);
-		pitch = MathHelper.floor_float(par1Entity.rotationPitch * 256.0F / 360.0F);
-		yaw = MathHelper.floor_float(par1Entity.rotationYaw * 256.0F / 360.0F);
-		type = par2;
-		throwerEntityId = par3;
-		if(par3 > 0)
+		entityId = p_i1401_1_.entityId;
+		xPosition = MathHelper.floor_double(p_i1401_1_.posX * 32.0D);
+		yPosition = MathHelper.floor_double(p_i1401_1_.posY * 32.0D);
+		zPosition = MathHelper.floor_double(p_i1401_1_.posZ * 32.0D);
+		pitch = MathHelper.floor_float(p_i1401_1_.rotationPitch * 256.0F / 360.0F);
+		yaw = MathHelper.floor_float(p_i1401_1_.rotationYaw * 256.0F / 360.0F);
+		type = p_i1401_2_;
+		throwerEntityId = p_i1401_3_;
+		if(p_i1401_3_ > 0)
 		{
-			double var4 = par1Entity.motionX;
-			double var6 = par1Entity.motionY;
-			double var8 = par1Entity.motionZ;
+			double var4 = p_i1401_1_.motionX;
+			double var6 = p_i1401_1_.motionY;
+			double var8 = p_i1401_1_.motionZ;
 			double var10 = 3.9D;
 			if(var4 < -var10)
 			{
@@ -83,7 +83,7 @@
 		par1NetHandler.handleVehicleSpawn(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		type = par1DataInputStream.readByte();
@@ -101,7 +101,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeByte(type);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet24MobSpawn.java b/RMCClient/minecraft/net/minecraft/src/Packet24MobSpawn.java
index dd7b9ed..c67bfe3 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet24MobSpawn.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet24MobSpawn.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.util.List;
 
@@ -25,20 +25,20 @@
 	{
 	}
 	
-	public Packet24MobSpawn(EntityLiving par1EntityLiving)
+	public Packet24MobSpawn(EntityLivingBase p_i1404_1_)
 	{
-		entityId = par1EntityLiving.entityId;
-		type = (byte) EntityList.getEntityID(par1EntityLiving);
-		xPosition = par1EntityLiving.myEntitySize.multiplyBy32AndRound(par1EntityLiving.posX);
-		yPosition = MathHelper.floor_double(par1EntityLiving.posY * 32.0D);
-		zPosition = par1EntityLiving.myEntitySize.multiplyBy32AndRound(par1EntityLiving.posZ);
-		yaw = (byte) (int) (par1EntityLiving.rotationYaw * 256.0F / 360.0F);
-		pitch = (byte) (int) (par1EntityLiving.rotationPitch * 256.0F / 360.0F);
-		headYaw = (byte) (int) (par1EntityLiving.rotationYawHead * 256.0F / 360.0F);
+		entityId = p_i1404_1_.entityId;
+		type = (byte) EntityList.getEntityID(p_i1404_1_);
+		xPosition = p_i1404_1_.myEntitySize.multiplyBy32AndRound(p_i1404_1_.posX);
+		yPosition = MathHelper.floor_double(p_i1404_1_.posY * 32.0D);
+		zPosition = p_i1404_1_.myEntitySize.multiplyBy32AndRound(p_i1404_1_.posZ);
+		yaw = (byte) (int) (p_i1404_1_.rotationYaw * 256.0F / 360.0F);
+		pitch = (byte) (int) (p_i1404_1_.rotationPitch * 256.0F / 360.0F);
+		headYaw = (byte) (int) (p_i1404_1_.rotationYawHead * 256.0F / 360.0F);
 		double var2 = 3.9D;
-		double var4 = par1EntityLiving.motionX;
-		double var6 = par1EntityLiving.motionY;
-		double var8 = par1EntityLiving.motionZ;
+		double var4 = p_i1404_1_.motionX;
+		double var6 = p_i1404_1_.motionY;
+		double var8 = p_i1404_1_.motionZ;
 		if(var4 < -var2)
 		{
 			var4 = -var2;
@@ -66,7 +66,7 @@
 		velocityX = (int) (var4 * 8000.0D);
 		velocityY = (int) (var6 * 8000.0D);
 		velocityZ = (int) (var8 * 8000.0D);
-		metaData = par1EntityLiving.getDataWatcher();
+		metaData = p_i1404_1_.getDataWatcher();
 	}
 	
 	public List getMetadata()
@@ -88,7 +88,7 @@
 		par1NetHandler.handleMobSpawn(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		type = par1DataInputStream.readByte() & 255;
@@ -104,7 +104,7 @@
 		metadata = DataWatcher.readWatchableObjects(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeByte(type & 255);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet250CustomPayload.java b/RMCClient/minecraft/net/minecraft/src/Packet250CustomPayload.java
index a3c438c..7870a5e 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet250CustomPayload.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet250CustomPayload.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet250CustomPayload extends Packet
@@ -14,13 +14,13 @@
 	{
 	}
 	
-	public Packet250CustomPayload(String par1Str, byte[] par2ArrayOfByte)
+	public Packet250CustomPayload(String p_i1428_1_, byte[] p_i1428_2_)
 	{
-		channel = par1Str;
-		data = par2ArrayOfByte;
-		if(par2ArrayOfByte != null)
+		channel = p_i1428_1_;
+		data = p_i1428_2_;
+		if(p_i1428_2_ != null)
 		{
-			length = par2ArrayOfByte.length;
+			length = p_i1428_2_.length;
 			if(length > 32767) throw new IllegalArgumentException("Payload may not be larger than 32k");
 		}
 	}
@@ -35,7 +35,7 @@
 		par1NetHandler.handleCustomPayload(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		channel = readString(par1DataInputStream, 20);
 		length = par1DataInputStream.readShort();
@@ -46,7 +46,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(channel, par1DataOutputStream);
 		par1DataOutputStream.writeShort((short) length);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet252SharedKey.java b/RMCClient/minecraft/net/minecraft/src/Packet252SharedKey.java
index 1ea2a93..e96ac39 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet252SharedKey.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet252SharedKey.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.security.PrivateKey;
 import java.security.PublicKey;
@@ -18,11 +18,11 @@
 	{
 	}
 	
-	public Packet252SharedKey(SecretKey par1SecretKey, PublicKey par2PublicKey, byte[] par3ArrayOfByte)
+	public Packet252SharedKey(SecretKey p_i1477_1_, PublicKey p_i1477_2_, byte[] p_i1477_3_)
 	{
-		sharedKey = par1SecretKey;
-		sharedSecret = CryptManager.encryptData(par2PublicKey, par1SecretKey.getEncoded());
-		verifyToken = CryptManager.encryptData(par2PublicKey, par3ArrayOfByte);
+		sharedKey = p_i1477_1_;
+		sharedSecret = CryptManager.encryptData(p_i1477_2_, p_i1477_1_.getEncoded());
+		verifyToken = CryptManager.encryptData(p_i1477_2_, p_i1477_3_);
 	}
 	
 	@Override public int getPacketSize()
@@ -50,13 +50,13 @@
 		par1NetHandler.handleSharedKey(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		sharedSecret = readBytesFromStream(par1DataInputStream);
 		verifyToken = readBytesFromStream(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeByteArray(par1DataOutputStream, sharedSecret);
 		writeByteArray(par1DataOutputStream, verifyToken);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet253ServerAuthData.java b/RMCClient/minecraft/net/minecraft/src/Packet253ServerAuthData.java
index 08f23d7..adfab48 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet253ServerAuthData.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet253ServerAuthData.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.security.PublicKey;
 
@@ -15,11 +15,11 @@
 	{
 	}
 	
-	public Packet253ServerAuthData(String par1Str, PublicKey par2PublicKey, byte[] par3ArrayOfByte)
+	public Packet253ServerAuthData(String p_i1459_1_, PublicKey p_i1459_2_, byte[] p_i1459_3_)
 	{
-		serverId = par1Str;
-		publicKey = par2PublicKey;
-		verifyToken = par3ArrayOfByte;
+		serverId = p_i1459_1_;
+		publicKey = p_i1459_2_;
+		verifyToken = p_i1459_3_;
 	}
 	
 	@Override public int getPacketSize()
@@ -47,14 +47,14 @@
 		par1NetHandler.handleServerAuthData(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		serverId = readString(par1DataInputStream, 20);
 		publicKey = CryptManager.decodePublicKey(readBytesFromStream(par1DataInputStream));
 		verifyToken = readBytesFromStream(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(serverId, par1DataOutputStream);
 		writeByteArray(par1DataOutputStream, publicKey.getEncoded());
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet254ServerPing.java b/RMCClient/minecraft/net/minecraft/src/Packet254ServerPing.java
index e143b94..b7a4e8f 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet254ServerPing.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet254ServerPing.java
@@ -1,16 +1,35 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet254ServerPing extends Packet
 {
-	public int readSuccessfully = 0;
+	private static final int field_140051_d = new Packet250CustomPayload().getPacketId();
+	public int readSuccessfully;
+	public String field_140052_b;
+	public int field_140053_c;
+	
+	public Packet254ServerPing()
+	{
+	}
+	
+	public Packet254ServerPing(int p_i2330_1_, String p_i2330_2_, int p_i2330_3_)
+	{
+		readSuccessfully = p_i2330_1_;
+		field_140052_b = p_i2330_2_;
+		field_140053_c = p_i2330_3_;
+	}
+	
+	public boolean func_140050_d()
+	{
+		return readSuccessfully == 0;
+	}
 	
 	@Override public int getPacketSize()
 	{
-		return 0;
+		return 3 + field_140052_b.length() * 2 + 4;
 	}
 	
 	@Override public void processPacket(NetHandler par1NetHandler)
@@ -18,18 +37,41 @@
 		par1NetHandler.handleServerPing(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		try
 		{
 			readSuccessfully = par1DataInputStream.readByte();
-		} catch(Throwable var3)
+			try
+			{
+				par1DataInputStream.readByte();
+				readString(par1DataInputStream, 255);
+				par1DataInputStream.readShort();
+				readSuccessfully = par1DataInputStream.readByte();
+				if(readSuccessfully >= 73)
+				{
+					field_140052_b = readString(par1DataInputStream, 255);
+					field_140053_c = par1DataInputStream.readInt();
+				}
+			} catch(Throwable var3)
+			{
+				field_140052_b = "";
+			}
+		} catch(Throwable var4)
 		{
 			readSuccessfully = 0;
+			field_140052_b = "";
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
+		par1DataOutputStream.writeByte(1);
+		par1DataOutputStream.writeByte(field_140051_d);
+		Packet.writeString("MC|PingHost", par1DataOutputStream);
+		par1DataOutputStream.writeShort(3 + 2 * field_140052_b.length() + 4);
+		par1DataOutputStream.writeByte(readSuccessfully);
+		Packet.writeString(field_140052_b, par1DataOutputStream);
+		par1DataOutputStream.writeInt(field_140053_c);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet255KickDisconnect.java b/RMCClient/minecraft/net/minecraft/src/Packet255KickDisconnect.java
index 1963bad..df69478 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet255KickDisconnect.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet255KickDisconnect.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet255KickDisconnect extends Packet
@@ -12,9 +12,9 @@
 	{
 	}
 	
-	public Packet255KickDisconnect(String par1Str)
+	public Packet255KickDisconnect(String p_i1429_1_)
 	{
-		reason = par1Str;
+		reason = p_i1429_1_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -37,12 +37,12 @@
 		par1NetHandler.handleKickDisconnect(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		reason = readString(par1DataInputStream, 256);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(reason, par1DataOutputStream);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet25EntityPainting.java b/RMCClient/minecraft/net/minecraft/src/Packet25EntityPainting.java
index bc78d30..9f55795 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet25EntityPainting.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet25EntityPainting.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet25EntityPainting extends Packet
@@ -17,14 +17,14 @@
 	{
 	}
 	
-	public Packet25EntityPainting(EntityPainting par1EntityPainting)
+	public Packet25EntityPainting(EntityPainting p_i1405_1_)
 	{
-		entityId = par1EntityPainting.entityId;
-		xPosition = par1EntityPainting.xPosition;
-		yPosition = par1EntityPainting.yPosition;
-		zPosition = par1EntityPainting.zPosition;
-		direction = par1EntityPainting.hangingDirection;
-		title = par1EntityPainting.art.title;
+		entityId = p_i1405_1_.entityId;
+		xPosition = p_i1405_1_.xPosition;
+		yPosition = p_i1405_1_.yPosition;
+		zPosition = p_i1405_1_.zPosition;
+		direction = p_i1405_1_.hangingDirection;
+		title = p_i1405_1_.art.title;
 	}
 	
 	@Override public int getPacketSize()
@@ -37,7 +37,7 @@
 		par1NetHandler.handleEntityPainting(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		title = readString(par1DataInputStream, EnumArt.maxArtTitleLength);
@@ -47,7 +47,7 @@
 		direction = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		writeString(title, par1DataOutputStream);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet26EntityExpOrb.java b/RMCClient/minecraft/net/minecraft/src/Packet26EntityExpOrb.java
index 1b09fe1..c0a31c9 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet26EntityExpOrb.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet26EntityExpOrb.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet26EntityExpOrb extends Packet
@@ -16,13 +16,13 @@
 	{
 	}
 	
-	public Packet26EntityExpOrb(EntityXPOrb par1EntityXPOrb)
+	public Packet26EntityExpOrb(EntityXPOrb p_i1402_1_)
 	{
-		entityId = par1EntityXPOrb.entityId;
-		posX = MathHelper.floor_double(par1EntityXPOrb.posX * 32.0D);
-		posY = MathHelper.floor_double(par1EntityXPOrb.posY * 32.0D);
-		posZ = MathHelper.floor_double(par1EntityXPOrb.posZ * 32.0D);
-		xpValue = par1EntityXPOrb.getXpValue();
+		entityId = p_i1402_1_.entityId;
+		posX = MathHelper.floor_double(p_i1402_1_.posX * 32.0D);
+		posY = MathHelper.floor_double(p_i1402_1_.posY * 32.0D);
+		posZ = MathHelper.floor_double(p_i1402_1_.posZ * 32.0D);
+		xpValue = p_i1402_1_.getXpValue();
 	}
 	
 	@Override public int getPacketSize()
@@ -35,7 +35,7 @@
 		par1NetHandler.handleEntityExpOrb(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		posX = par1DataInputStream.readInt();
@@ -44,7 +44,7 @@
 		xpValue = par1DataInputStream.readShort();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeInt(posX);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet27PlayerInput.java b/RMCClient/minecraft/net/minecraft/src/Packet27PlayerInput.java
new file mode 100644
index 0000000..7ad0e96
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Packet27PlayerInput.java
@@ -0,0 +1,71 @@
+package net.minecraft.src;
+
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+
+public class Packet27PlayerInput extends Packet
+{
+	private float field_111017_a;
+	private float field_111015_b;
+	private boolean field_111016_c;
+	private boolean field_111014_d;
+	
+	public Packet27PlayerInput()
+	{
+	}
+	
+	public Packet27PlayerInput(float p_i1454_1_, float p_i1454_2_, boolean p_i1454_3_, boolean p_i1454_4_)
+	{
+		field_111017_a = p_i1454_1_;
+		field_111015_b = p_i1454_2_;
+		field_111016_c = p_i1454_3_;
+		field_111014_d = p_i1454_4_;
+	}
+	
+	public float func_111010_d()
+	{
+		return field_111017_a;
+	}
+	
+	public boolean func_111011_h()
+	{
+		return field_111014_d;
+	}
+	
+	public float func_111012_f()
+	{
+		return field_111015_b;
+	}
+	
+	public boolean func_111013_g()
+	{
+		return field_111016_c;
+	}
+	
+	@Override public int getPacketSize()
+	{
+		return 10;
+	}
+	
+	@Override public void processPacket(NetHandler par1NetHandler)
+	{
+		par1NetHandler.func_110774_a(this);
+	}
+	
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
+	{
+		field_111017_a = par1DataInputStream.readFloat();
+		field_111015_b = par1DataInputStream.readFloat();
+		field_111016_c = par1DataInputStream.readBoolean();
+		field_111014_d = par1DataInputStream.readBoolean();
+	}
+	
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
+	{
+		par1DataOutputStream.writeFloat(field_111017_a);
+		par1DataOutputStream.writeFloat(field_111015_b);
+		par1DataOutputStream.writeBoolean(field_111016_c);
+		par1DataOutputStream.writeBoolean(field_111014_d);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet28EntityVelocity.java b/RMCClient/minecraft/net/minecraft/src/Packet28EntityVelocity.java
index f31f80d..342ecad 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet28EntityVelocity.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet28EntityVelocity.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet28EntityVelocity extends Packet
@@ -15,42 +15,42 @@
 	{
 	}
 	
-	public Packet28EntityVelocity(Entity par1Entity)
+	public Packet28EntityVelocity(Entity p_i1465_1_)
 	{
-		this(par1Entity.entityId, par1Entity.motionX, par1Entity.motionY, par1Entity.motionZ);
+		this(p_i1465_1_.entityId, p_i1465_1_.motionX, p_i1465_1_.motionY, p_i1465_1_.motionZ);
 	}
 	
-	public Packet28EntityVelocity(int par1, double par2, double par4, double par6)
+	public Packet28EntityVelocity(int p_i1466_1_, double p_i1466_2_, double p_i1466_4_, double p_i1466_6_)
 	{
-		entityId = par1;
+		entityId = p_i1466_1_;
 		double var8 = 3.9D;
-		if(par2 < -var8)
+		if(p_i1466_2_ < -var8)
 		{
-			par2 = -var8;
+			p_i1466_2_ = -var8;
 		}
-		if(par4 < -var8)
+		if(p_i1466_4_ < -var8)
 		{
-			par4 = -var8;
+			p_i1466_4_ = -var8;
 		}
-		if(par6 < -var8)
+		if(p_i1466_6_ < -var8)
 		{
-			par6 = -var8;
+			p_i1466_6_ = -var8;
 		}
-		if(par2 > var8)
+		if(p_i1466_2_ > var8)
 		{
-			par2 = var8;
+			p_i1466_2_ = var8;
 		}
-		if(par4 > var8)
+		if(p_i1466_4_ > var8)
 		{
-			par4 = var8;
+			p_i1466_4_ = var8;
 		}
-		if(par6 > var8)
+		if(p_i1466_6_ > var8)
 		{
-			par6 = var8;
+			p_i1466_6_ = var8;
 		}
-		motionX = (int) (par2 * 8000.0D);
-		motionY = (int) (par4 * 8000.0D);
-		motionZ = (int) (par6 * 8000.0D);
+		motionX = (int) (p_i1466_2_ * 8000.0D);
+		motionY = (int) (p_i1466_4_ * 8000.0D);
+		motionZ = (int) (p_i1466_6_ * 8000.0D);
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -74,7 +74,7 @@
 		par1NetHandler.handleEntityVelocity(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		motionX = par1DataInputStream.readShort();
@@ -82,7 +82,7 @@
 		motionZ = par1DataInputStream.readShort();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeShort(motionX);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet29DestroyEntity.java b/RMCClient/minecraft/net/minecraft/src/Packet29DestroyEntity.java
index 91f531a..4de16c9 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet29DestroyEntity.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet29DestroyEntity.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet29DestroyEntity extends Packet
@@ -12,9 +12,9 @@
 	{
 	}
 	
-	public Packet29DestroyEntity(int ... par1ArrayOfInteger)
+	public Packet29DestroyEntity(int ... p_i1455_1_)
 	{
-		entityId = par1ArrayOfInteger;
+		entityId = p_i1455_1_;
 	}
 	
 	@Override public int getPacketSize()
@@ -27,7 +27,7 @@
 		par1NetHandler.handleDestroyEntity(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = new int[par1DataInputStream.readByte()];
 		for(int var2 = 0; var2 < entityId.length; ++var2)
@@ -36,7 +36,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(entityId.length);
 		for(int element : entityId)
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet2ClientProtocol.java b/RMCClient/minecraft/net/minecraft/src/Packet2ClientProtocol.java
index d00db28..22dc081 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet2ClientProtocol.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet2ClientProtocol.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet2ClientProtocol extends Packet
@@ -15,12 +15,12 @@
 	{
 	}
 	
-	public Packet2ClientProtocol(int par1, String par2Str, String par3Str, int par4)
+	public Packet2ClientProtocol(int p_i1417_1_, String p_i1417_2_, String p_i1417_3_, int p_i1417_4_)
 	{
-		protocolVersion = par1;
-		username = par2Str;
-		serverHost = par3Str;
-		serverPort = par4;
+		protocolVersion = p_i1417_1_;
+		username = p_i1417_2_;
+		serverHost = p_i1417_3_;
+		serverPort = p_i1417_4_;
 	}
 	
 	@Override public int getPacketSize()
@@ -43,7 +43,7 @@
 		par1NetHandler.handleClientProtocol(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		protocolVersion = par1DataInputStream.readByte();
 		username = readString(par1DataInputStream, 16);
@@ -51,7 +51,7 @@
 		serverPort = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(protocolVersion);
 		writeString(username, par1DataOutputStream);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet30Entity.java b/RMCClient/minecraft/net/minecraft/src/Packet30Entity.java
index ac1eb07..9649f5d 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet30Entity.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet30Entity.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet30Entity extends Packet
@@ -12,15 +12,15 @@
 	public byte zPosition;
 	public byte yaw;
 	public byte pitch;
-	public boolean rotating = false;
+	public boolean rotating;
 	
 	public Packet30Entity()
 	{
 	}
 	
-	public Packet30Entity(int par1)
+	public Packet30Entity(int p_i1444_1_)
 	{
-		entityId = par1;
+		entityId = p_i1444_1_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -44,7 +44,7 @@
 		par1NetHandler.handleEntity(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 	}
@@ -54,7 +54,7 @@
 		return "Entity_" + super.toString();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet31RelEntityMove.java b/RMCClient/minecraft/net/minecraft/src/Packet31RelEntityMove.java
index 781c076..e9700e7 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet31RelEntityMove.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet31RelEntityMove.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet31RelEntityMove extends Packet30Entity
@@ -10,12 +10,12 @@
 	{
 	}
 	
-	public Packet31RelEntityMove(int par1, byte par2, byte par3, byte par4)
+	public Packet31RelEntityMove(int p_i1441_1_, byte p_i1441_2_, byte p_i1441_3_, byte p_i1441_4_)
 	{
-		super(par1);
-		xPosition = par2;
-		yPosition = par3;
-		zPosition = par4;
+		super(p_i1441_1_);
+		xPosition = p_i1441_2_;
+		yPosition = p_i1441_3_;
+		zPosition = p_i1441_4_;
 	}
 	
 	@Override public int getPacketSize()
@@ -23,7 +23,7 @@
 		return 7;
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		super.readPacketData(par1DataInputStream);
 		xPosition = par1DataInputStream.readByte();
@@ -31,7 +31,7 @@
 		zPosition = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		super.writePacketData(par1DataOutputStream);
 		par1DataOutputStream.writeByte(xPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet32EntityLook.java b/RMCClient/minecraft/net/minecraft/src/Packet32EntityLook.java
index 9881621..50e472a 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet32EntityLook.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet32EntityLook.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet32EntityLook extends Packet30Entity
@@ -11,11 +11,11 @@
 		rotating = true;
 	}
 	
-	public Packet32EntityLook(int par1, byte par2, byte par3)
+	public Packet32EntityLook(int p_i1443_1_, byte p_i1443_2_, byte p_i1443_3_)
 	{
-		super(par1);
-		yaw = par2;
-		pitch = par3;
+		super(p_i1443_1_);
+		yaw = p_i1443_2_;
+		pitch = p_i1443_3_;
 		rotating = true;
 	}
 	
@@ -24,14 +24,14 @@
 		return 6;
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		super.readPacketData(par1DataInputStream);
 		yaw = par1DataInputStream.readByte();
 		pitch = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		super.writePacketData(par1DataOutputStream);
 		par1DataOutputStream.writeByte(yaw);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet33RelEntityMoveLook.java b/RMCClient/minecraft/net/minecraft/src/Packet33RelEntityMoveLook.java
index ccaed0a..1bb016f 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet33RelEntityMoveLook.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet33RelEntityMoveLook.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet33RelEntityMoveLook extends Packet30Entity
@@ -11,14 +11,14 @@
 		rotating = true;
 	}
 	
-	public Packet33RelEntityMoveLook(int par1, byte par2, byte par3, byte par4, byte par5, byte par6)
+	public Packet33RelEntityMoveLook(int p_i1442_1_, byte p_i1442_2_, byte p_i1442_3_, byte p_i1442_4_, byte p_i1442_5_, byte p_i1442_6_)
 	{
-		super(par1);
-		xPosition = par2;
-		yPosition = par3;
-		zPosition = par4;
-		yaw = par5;
-		pitch = par6;
+		super(p_i1442_1_);
+		xPosition = p_i1442_2_;
+		yPosition = p_i1442_3_;
+		zPosition = p_i1442_4_;
+		yaw = p_i1442_5_;
+		pitch = p_i1442_6_;
 		rotating = true;
 	}
 	
@@ -27,7 +27,7 @@
 		return 9;
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		super.readPacketData(par1DataInputStream);
 		xPosition = par1DataInputStream.readByte();
@@ -37,7 +37,7 @@
 		pitch = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		super.writePacketData(par1DataOutputStream);
 		par1DataOutputStream.writeByte(xPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet34EntityTeleport.java b/RMCClient/minecraft/net/minecraft/src/Packet34EntityTeleport.java
index a056599..d6fcaad 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet34EntityTeleport.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet34EntityTeleport.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet34EntityTeleport extends Packet
@@ -17,24 +17,24 @@
 	{
 	}
 	
-	public Packet34EntityTeleport(Entity par1Entity)
+	public Packet34EntityTeleport(Entity p_i1480_1_)
 	{
-		entityId = par1Entity.entityId;
-		xPosition = MathHelper.floor_double(par1Entity.posX * 32.0D);
-		yPosition = MathHelper.floor_double(par1Entity.posY * 32.0D);
-		zPosition = MathHelper.floor_double(par1Entity.posZ * 32.0D);
-		yaw = (byte) (int) (par1Entity.rotationYaw * 256.0F / 360.0F);
-		pitch = (byte) (int) (par1Entity.rotationPitch * 256.0F / 360.0F);
+		entityId = p_i1480_1_.entityId;
+		xPosition = MathHelper.floor_double(p_i1480_1_.posX * 32.0D);
+		yPosition = MathHelper.floor_double(p_i1480_1_.posY * 32.0D);
+		zPosition = MathHelper.floor_double(p_i1480_1_.posZ * 32.0D);
+		yaw = (byte) (int) (p_i1480_1_.rotationYaw * 256.0F / 360.0F);
+		pitch = (byte) (int) (p_i1480_1_.rotationPitch * 256.0F / 360.0F);
 	}
 	
-	public Packet34EntityTeleport(int par1, int par2, int par3, int par4, byte par5, byte par6)
+	public Packet34EntityTeleport(int p_i1481_1_, int p_i1481_2_, int p_i1481_3_, int p_i1481_4_, byte p_i1481_5_, byte p_i1481_6_)
 	{
-		entityId = par1;
-		xPosition = par2;
-		yPosition = par3;
-		zPosition = par4;
-		yaw = par5;
-		pitch = par6;
+		entityId = p_i1481_1_;
+		xPosition = p_i1481_2_;
+		yPosition = p_i1481_3_;
+		zPosition = p_i1481_4_;
+		yaw = p_i1481_5_;
+		pitch = p_i1481_6_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -58,17 +58,17 @@
 		par1NetHandler.handleEntityTeleport(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		xPosition = par1DataInputStream.readInt();
 		yPosition = par1DataInputStream.readInt();
 		zPosition = par1DataInputStream.readInt();
-		yaw = (byte) par1DataInputStream.read();
-		pitch = (byte) par1DataInputStream.read();
+		yaw = par1DataInputStream.readByte();
+		pitch = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeInt(xPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet35EntityHeadRotation.java b/RMCClient/minecraft/net/minecraft/src/Packet35EntityHeadRotation.java
index e025608..c480ec2 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet35EntityHeadRotation.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet35EntityHeadRotation.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet35EntityHeadRotation extends Packet
@@ -13,10 +13,10 @@
 	{
 	}
 	
-	public Packet35EntityHeadRotation(int par1, byte par2)
+	public Packet35EntityHeadRotation(int p_i1458_1_, byte p_i1458_2_)
 	{
-		entityId = par1;
-		headRotationYaw = par2;
+		entityId = p_i1458_1_;
+		headRotationYaw = p_i1458_2_;
 	}
 	
 	@Override public boolean canProcessAsync()
@@ -45,13 +45,13 @@
 		par1NetHandler.handleEntityHeadRotation(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		headRotationYaw = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeByte(headRotationYaw);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet38EntityStatus.java b/RMCClient/minecraft/net/minecraft/src/Packet38EntityStatus.java
index d2da3fc..9d07c13 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet38EntityStatus.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet38EntityStatus.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet38EntityStatus extends Packet
@@ -13,10 +13,10 @@
 	{
 	}
 	
-	public Packet38EntityStatus(int par1, byte par2)
+	public Packet38EntityStatus(int p_i1431_1_, byte p_i1431_2_)
 	{
-		entityId = par1;
-		entityStatus = par2;
+		entityId = p_i1431_1_;
+		entityStatus = p_i1431_2_;
 	}
 	
 	@Override public int getPacketSize()
@@ -29,13 +29,13 @@
 		par1NetHandler.handleEntityStatus(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		entityStatus = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeByte(entityStatus);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet39AttachEntity.java b/RMCClient/minecraft/net/minecraft/src/Packet39AttachEntity.java
index 6ca4507..0b554b4 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet39AttachEntity.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet39AttachEntity.java
@@ -1,28 +1,30 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet39AttachEntity extends Packet
 {
-	public int entityId;
+	public int field_111007_a;
+	public int field_111006_b;
 	public int vehicleEntityId;
 	
 	public Packet39AttachEntity()
 	{
 	}
 	
-	public Packet39AttachEntity(Entity par1Entity, Entity par2Entity)
+	public Packet39AttachEntity(int p_i1464_1_, Entity p_i1464_2_, Entity p_i1464_3_)
 	{
-		entityId = par1Entity.entityId;
-		vehicleEntityId = par2Entity != null ? par2Entity.entityId : -1;
+		field_111007_a = p_i1464_1_;
+		field_111006_b = p_i1464_2_.entityId;
+		vehicleEntityId = p_i1464_3_ != null ? p_i1464_3_.entityId : -1;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
 	{
 		Packet39AttachEntity var2 = (Packet39AttachEntity) par1Packet;
-		return var2.entityId == entityId;
+		return var2.field_111006_b == field_111006_b;
 	}
 	
 	@Override public int getPacketSize()
@@ -40,15 +42,17 @@
 		par1NetHandler.handleAttachEntity(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
-		entityId = par1DataInputStream.readInt();
+		field_111006_b = par1DataInputStream.readInt();
 		vehicleEntityId = par1DataInputStream.readInt();
+		field_111007_a = par1DataInputStream.readUnsignedByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
-		par1DataOutputStream.writeInt(entityId);
+		par1DataOutputStream.writeInt(field_111006_b);
 		par1DataOutputStream.writeInt(vehicleEntityId);
+		par1DataOutputStream.writeByte(field_111007_a);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet3Chat.java b/RMCClient/minecraft/net/minecraft/src/Packet3Chat.java
index fe76953..83b12cc 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet3Chat.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet3Chat.java
@@ -1,12 +1,11 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet3Chat extends Packet
 {
-	public static int maxChatLength = 119;
 	public String message;
 	private boolean isServer;
 	
@@ -15,25 +14,30 @@
 		isServer = true;
 	}
 	
-	public Packet3Chat(String par1Str)
+	public Packet3Chat(ChatMessageComponent p_i1410_1_)
 	{
-		this(par1Str, true);
+		this(p_i1410_1_.func_111062_i());
 	}
 	
-	public Packet3Chat(String par1Str, boolean par2)
+	public Packet3Chat(ChatMessageComponent p_i1411_1_, boolean p_i1411_2_)
+	{
+		this(p_i1411_1_.func_111062_i(), p_i1411_2_);
+	}
+	
+	public Packet3Chat(String p_i1412_1_)
+	{
+		this(p_i1412_1_, true);
+	}
+	
+	public Packet3Chat(String p_i1413_1_, boolean p_i1413_2_)
 	{
 		isServer = true;
-		if(par1Str.length() > maxChatLength)
+		if(p_i1413_1_.length() > 32767)
 		{
-			par1Str = par1Str.substring(0, maxChatLength);
+			p_i1413_1_ = p_i1413_1_.substring(0, 32767);
 		}
-		message = par1Str;
-		isServer = par2;
-	}
-	
-	@Override public boolean canProcessAsync()
-	{
-		return !message.startsWith("/");
+		message = p_i1413_1_;
+		isServer = p_i1413_2_;
 	}
 	
 	public boolean getIsServer()
@@ -51,12 +55,12 @@
 		par1NetHandler.handleChat(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
-		message = readString(par1DataInputStream, maxChatLength);
+		message = readString(par1DataInputStream, 32767);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(message, par1DataOutputStream);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet40EntityMetadata.java b/RMCClient/minecraft/net/minecraft/src/Packet40EntityMetadata.java
index 4c9e44b..12ae2d9 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet40EntityMetadata.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet40EntityMetadata.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.util.List;
 
@@ -14,15 +14,15 @@
 	{
 	}
 	
-	public Packet40EntityMetadata(int par1, DataWatcher par2DataWatcher, boolean par3)
+	public Packet40EntityMetadata(int p_i1463_1_, DataWatcher p_i1463_2_, boolean p_i1463_3_)
 	{
-		entityId = par1;
-		if(par3)
+		entityId = p_i1463_1_;
+		if(p_i1463_3_)
 		{
-			metadata = par2DataWatcher.getAllWatched();
+			metadata = p_i1463_2_.getAllWatched();
 		} else
 		{
-			metadata = par2DataWatcher.unwatchAndReturnAllWatched();
+			metadata = p_i1463_2_.unwatchAndReturnAllWatched();
 		}
 	}
 	
@@ -41,13 +41,13 @@
 		par1NetHandler.handleEntityMetadata(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		metadata = DataWatcher.readWatchableObjects(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		DataWatcher.writeObjectsInListToStream(metadata, par1DataOutputStream);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet41EntityEffect.java b/RMCClient/minecraft/net/minecraft/src/Packet41EntityEffect.java
index e63e6f1..11d527c 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet41EntityEffect.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet41EntityEffect.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet41EntityEffect extends Packet
@@ -15,17 +15,17 @@
 	{
 	}
 	
-	public Packet41EntityEffect(int par1, PotionEffect par2PotionEffect)
+	public Packet41EntityEffect(int p_i1487_1_, PotionEffect p_i1487_2_)
 	{
-		entityId = par1;
-		effectId = (byte) (par2PotionEffect.getPotionID() & 255);
-		effectAmplifier = (byte) (par2PotionEffect.getAmplifier() & 255);
-		if(par2PotionEffect.getDuration() > 32767)
+		entityId = p_i1487_1_;
+		effectId = (byte) (p_i1487_2_.getPotionID() & 255);
+		effectAmplifier = (byte) (p_i1487_2_.getAmplifier() & 255);
+		if(p_i1487_2_.getDuration() > 32767)
 		{
 			duration = 32767;
 		} else
 		{
-			duration = (short) par2PotionEffect.getDuration();
+			duration = (short) p_i1487_2_.getDuration();
 		}
 	}
 	
@@ -55,7 +55,7 @@
 		par1NetHandler.handleEntityEffect(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		effectId = par1DataInputStream.readByte();
@@ -63,7 +63,7 @@
 		duration = par1DataInputStream.readShort();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeByte(effectId);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet42RemoveEntityEffect.java b/RMCClient/minecraft/net/minecraft/src/Packet42RemoveEntityEffect.java
index e9ba9dd..69b76f4 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet42RemoveEntityEffect.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet42RemoveEntityEffect.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet42RemoveEntityEffect extends Packet
@@ -13,10 +13,10 @@
 	{
 	}
 	
-	public Packet42RemoveEntityEffect(int par1, PotionEffect par2PotionEffect)
+	public Packet42RemoveEntityEffect(int p_i1456_1_, PotionEffect p_i1456_2_)
 	{
-		entityId = par1;
-		effectId = (byte) (par2PotionEffect.getPotionID() & 255);
+		entityId = p_i1456_1_;
+		effectId = (byte) (p_i1456_2_.getPotionID() & 255);
 	}
 	
 	@Override public int getPacketSize()
@@ -29,13 +29,13 @@
 		par1NetHandler.handleRemoveEntityEffect(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		effectId = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeByte(effectId);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet43Experience.java b/RMCClient/minecraft/net/minecraft/src/Packet43Experience.java
index b58afed..6bcd4f7 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet43Experience.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet43Experience.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet43Experience extends Packet
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet43Experience(float par1, int par2, int par3)
+	public Packet43Experience(float p_i1468_1_, int p_i1468_2_, int p_i1468_3_)
 	{
-		experience = par1;
-		experienceTotal = par2;
-		experienceLevel = par3;
+		experience = p_i1468_1_;
+		experienceTotal = p_i1468_2_;
+		experienceLevel = p_i1468_3_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -41,14 +41,14 @@
 		par1NetHandler.handleExperience(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		experience = par1DataInputStream.readFloat();
 		experienceLevel = par1DataInputStream.readShort();
 		experienceTotal = par1DataInputStream.readShort();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeFloat(experience);
 		par1DataOutputStream.writeShort(experienceLevel);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet44UpdateAttributes.java b/RMCClient/minecraft/net/minecraft/src/Packet44UpdateAttributes.java
new file mode 100644
index 0000000..db5bfad
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Packet44UpdateAttributes.java
@@ -0,0 +1,93 @@
+package net.minecraft.src;
+
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.List;
+import java.util.UUID;
+
+public class Packet44UpdateAttributes extends Packet
+{
+	private int field_111005_a;
+	private final List field_111004_b = new ArrayList();
+	
+	public Packet44UpdateAttributes()
+	{
+	}
+	
+	public Packet44UpdateAttributes(int p_i1486_1_, Collection p_i1486_2_)
+	{
+		field_111005_a = p_i1486_1_;
+		Iterator var3 = p_i1486_2_.iterator();
+		while(var3.hasNext())
+		{
+			AttributeInstance var4 = (AttributeInstance) var3.next();
+			field_111004_b.add(new Packet44UpdateAttributesSnapshot(this, var4.func_111123_a().func_111108_a(), var4.func_111125_b(), var4.func_111122_c()));
+		}
+	}
+	
+	public int func_111002_d()
+	{
+		return field_111005_a;
+	}
+	
+	public List func_111003_f()
+	{
+		return field_111004_b;
+	}
+	
+	@Override public int getPacketSize()
+	{
+		return 8 + field_111004_b.size() * 24;
+	}
+	
+	@Override public void processPacket(NetHandler par1NetHandler)
+	{
+		par1NetHandler.func_110773_a(this);
+	}
+	
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
+	{
+		field_111005_a = par1DataInputStream.readInt();
+		int var2 = par1DataInputStream.readInt();
+		for(int var3 = 0; var3 < var2; ++var3)
+		{
+			String var4 = readString(par1DataInputStream, 64);
+			double var5 = par1DataInputStream.readDouble();
+			ArrayList var7 = new ArrayList();
+			short var8 = par1DataInputStream.readShort();
+			for(int var9 = 0; var9 < var8; ++var9)
+			{
+				UUID var10 = new UUID(par1DataInputStream.readLong(), par1DataInputStream.readLong());
+				var7.add(new AttributeModifier(var10, "Unknown synced attribute modifier", par1DataInputStream.readDouble(), par1DataInputStream.readByte()));
+			}
+			field_111004_b.add(new Packet44UpdateAttributesSnapshot(this, var4, var5, var7));
+		}
+	}
+	
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
+	{
+		par1DataOutputStream.writeInt(field_111005_a);
+		par1DataOutputStream.writeInt(field_111004_b.size());
+		Iterator var2 = field_111004_b.iterator();
+		while(var2.hasNext())
+		{
+			Packet44UpdateAttributesSnapshot var3 = (Packet44UpdateAttributesSnapshot) var2.next();
+			writeString(var3.func_142040_a(), par1DataOutputStream);
+			par1DataOutputStream.writeDouble(var3.func_142041_b());
+			par1DataOutputStream.writeShort(var3.func_142039_c().size());
+			Iterator var4 = var3.func_142039_c().iterator();
+			while(var4.hasNext())
+			{
+				AttributeModifier var5 = (AttributeModifier) var4.next();
+				par1DataOutputStream.writeLong(var5.func_111167_a().getMostSignificantBits());
+				par1DataOutputStream.writeLong(var5.func_111167_a().getLeastSignificantBits());
+				par1DataOutputStream.writeDouble(var5.func_111164_d());
+				par1DataOutputStream.writeByte(var5.func_111169_c());
+			}
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet44UpdateAttributesSnapshot.java b/RMCClient/minecraft/net/minecraft/src/Packet44UpdateAttributesSnapshot.java
new file mode 100644
index 0000000..a49b44a
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Packet44UpdateAttributesSnapshot.java
@@ -0,0 +1,34 @@
+package net.minecraft.src;
+
+import java.util.Collection;
+
+public class Packet44UpdateAttributesSnapshot
+{
+	private final String field_142043_b;
+	private final double field_142044_c;
+	private final Collection field_142042_d;
+	final Packet44UpdateAttributes field_142045_a;
+	
+	public Packet44UpdateAttributesSnapshot(Packet44UpdateAttributes p_i2346_1_, String p_i2346_2_, double p_i2346_3_, Collection p_i2346_5_)
+	{
+		field_142045_a = p_i2346_1_;
+		field_142043_b = p_i2346_2_;
+		field_142044_c = p_i2346_3_;
+		field_142042_d = p_i2346_5_;
+	}
+	
+	public Collection func_142039_c()
+	{
+		return field_142042_d;
+	}
+	
+	public String func_142040_a()
+	{
+		return field_142043_b;
+	}
+	
+	public double func_142041_b()
+	{
+		return field_142044_c;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet4UpdateTime.java b/RMCClient/minecraft/net/minecraft/src/Packet4UpdateTime.java
index d3439d5..be9027f 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet4UpdateTime.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet4UpdateTime.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet4UpdateTime extends Packet
@@ -13,10 +13,18 @@
 	{
 	}
 	
-	public Packet4UpdateTime(long par1, long par3)
+	public Packet4UpdateTime(long p_i1476_1_, long p_i1476_3_, boolean p_i1476_5_)
 	{
-		worldAge = par1;
-		time = par3;
+		worldAge = p_i1476_1_;
+		time = p_i1476_3_;
+		if(!p_i1476_5_)
+		{
+			time = -time;
+			if(time == 0L)
+			{
+				time = -1L;
+			}
+		}
 	}
 	
 	@Override public boolean canProcessAsync()
@@ -44,13 +52,13 @@
 		par1NetHandler.handleUpdateTime(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		worldAge = par1DataInputStream.readLong();
 		time = par1DataInputStream.readLong();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeLong(worldAge);
 		par1DataOutputStream.writeLong(time);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet51MapChunk.java b/RMCClient/minecraft/net/minecraft/src/Packet51MapChunk.java
index 6b50556..356231b 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet51MapChunk.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet51MapChunk.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.util.zip.DataFormatException;
 import java.util.zip.Deflater;
@@ -24,13 +24,13 @@
 		isChunkDataPacket = true;
 	}
 	
-	public Packet51MapChunk(Chunk par1Chunk, boolean par2, int par3)
+	public Packet51MapChunk(Chunk p_i1436_1_, boolean p_i1436_2_, int p_i1436_3_)
 	{
 		isChunkDataPacket = true;
-		xCh = par1Chunk.xPosition;
-		zCh = par1Chunk.zPosition;
-		includeInitialize = par2;
-		Packet51MapChunkData var4 = getMapChunkData(par1Chunk, par2, par3);
+		xCh = p_i1436_1_.xPosition;
+		zCh = p_i1436_1_.zPosition;
+		includeInitialize = p_i1436_2_;
+		Packet51MapChunkData var4 = getMapChunkData(p_i1436_1_, p_i1436_2_, p_i1436_3_);
 		Deflater var5 = new Deflater(-1);
 		yChMax = var4.chunkHasAddSectionFlag;
 		yChMin = var4.chunkExistFlag;
@@ -62,7 +62,7 @@
 		par1NetHandler.handleMapChunk(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xCh = par1DataInputStream.readInt();
 		zCh = par1DataInputStream.readInt();
@@ -101,7 +101,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(xCh);
 		par1DataOutputStream.writeInt(zCh);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet52MultiBlockChange.java b/RMCClient/minecraft/net/minecraft/src/Packet52MultiBlockChange.java
index 745db86..21df348 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet52MultiBlockChange.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet52MultiBlockChange.java
@@ -1,7 +1,8 @@
 package net.minecraft.src;
 
 import java.io.ByteArrayOutputStream;
-import java.io.DataInputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.DataOutputStream;
 import java.io.IOException;
 
@@ -18,19 +19,19 @@
 		isChunkDataPacket = true;
 	}
 	
-	public Packet52MultiBlockChange(int par1, int par2, short[] par3ArrayOfShort, int par4, World par5World)
+	public Packet52MultiBlockChange(int p_i1414_1_, int p_i1414_2_, short[] p_i1414_3_, int p_i1414_4_, World p_i1414_5_)
 	{
 		isChunkDataPacket = true;
-		xPosition = par1;
-		zPosition = par2;
-		size = par4;
-		int var6 = 4 * par4;
-		Chunk var7 = par5World.getChunkFromChunkCoords(par1, par2);
+		xPosition = p_i1414_1_;
+		zPosition = p_i1414_2_;
+		size = p_i1414_4_;
+		int var6 = 4 * p_i1414_4_;
+		Chunk var7 = p_i1414_5_.getChunkFromChunkCoords(p_i1414_1_, p_i1414_2_);
 		try
 		{
-			if(par4 >= 64)
+			if(p_i1414_4_ >= 64)
 			{
-				field_98193_m.logInfo("ChunkTilesUpdatePacket compress " + par4);
+				field_98193_m.logInfo("ChunkTilesUpdatePacket compress " + p_i1414_4_);
 				if(field_73449_e.length < var6)
 				{
 					field_73449_e = new byte[var6];
@@ -39,12 +40,12 @@
 			{
 				ByteArrayOutputStream var8 = new ByteArrayOutputStream(var6);
 				DataOutputStream var9 = new DataOutputStream(var8);
-				for(int var10 = 0; var10 < par4; ++var10)
+				for(int var10 = 0; var10 < p_i1414_4_; ++var10)
 				{
-					int var11 = par3ArrayOfShort[var10] >> 12 & 15;
-					int var12 = par3ArrayOfShort[var10] >> 8 & 15;
-					int var13 = par3ArrayOfShort[var10] & 255;
-					var9.writeShort(par3ArrayOfShort[var10]);
+					int var11 = p_i1414_3_[var10] >> 12 & 15;
+					int var12 = p_i1414_3_[var10] >> 8 & 15;
+					int var13 = p_i1414_3_[var10] & 255;
+					var9.writeShort(p_i1414_3_[var10]);
 					var9.writeShort((short) ((var7.getBlockID(var11, var13, var12) & 4095) << 4 | var7.getBlockMetadata(var11, var13, var12) & 15));
 				}
 				metadataArray = var8.toByteArray();
@@ -67,7 +68,7 @@
 		par1NetHandler.handleMultiBlockChange(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xPosition = par1DataInputStream.readInt();
 		zPosition = par1DataInputStream.readInt();
@@ -80,7 +81,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(xPosition);
 		par1DataOutputStream.writeInt(zPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet53BlockChange.java b/RMCClient/minecraft/net/minecraft/src/Packet53BlockChange.java
index f86fdc0..7672c40 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet53BlockChange.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet53BlockChange.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet53BlockChange extends Packet
@@ -17,14 +17,14 @@
 		isChunkDataPacket = true;
 	}
 	
-	public Packet53BlockChange(int par1, int par2, int par3, World par4World)
+	public Packet53BlockChange(int p_i1485_1_, int p_i1485_2_, int p_i1485_3_, World p_i1485_4_)
 	{
 		isChunkDataPacket = true;
-		xPosition = par1;
-		yPosition = par2;
-		zPosition = par3;
-		type = par4World.getBlockId(par1, par2, par3);
-		metadata = par4World.getBlockMetadata(par1, par2, par3);
+		xPosition = p_i1485_1_;
+		yPosition = p_i1485_2_;
+		zPosition = p_i1485_3_;
+		type = p_i1485_4_.getBlockId(p_i1485_1_, p_i1485_2_, p_i1485_3_);
+		metadata = p_i1485_4_.getBlockMetadata(p_i1485_1_, p_i1485_2_, p_i1485_3_);
 	}
 	
 	@Override public int getPacketSize()
@@ -37,16 +37,16 @@
 		par1NetHandler.handleBlockChange(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xPosition = par1DataInputStream.readInt();
-		yPosition = par1DataInputStream.read();
+		yPosition = par1DataInputStream.readUnsignedByte();
 		zPosition = par1DataInputStream.readInt();
 		type = par1DataInputStream.readShort();
-		metadata = par1DataInputStream.read();
+		metadata = par1DataInputStream.readUnsignedByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(xPosition);
 		par1DataOutputStream.write(yPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet54PlayNoteBlock.java b/RMCClient/minecraft/net/minecraft/src/Packet54PlayNoteBlock.java
index 49bc6f9..0550db2 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet54PlayNoteBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet54PlayNoteBlock.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet54PlayNoteBlock extends Packet
@@ -17,14 +17,14 @@
 	{
 	}
 	
-	public Packet54PlayNoteBlock(int par1, int par2, int par3, int par4, int par5, int par6)
+	public Packet54PlayNoteBlock(int p_i1484_1_, int p_i1484_2_, int p_i1484_3_, int p_i1484_4_, int p_i1484_5_, int p_i1484_6_)
 	{
-		xLocation = par1;
-		yLocation = par2;
-		zLocation = par3;
-		instrumentType = par5;
-		pitch = par6;
-		blockId = par4;
+		xLocation = p_i1484_1_;
+		yLocation = p_i1484_2_;
+		zLocation = p_i1484_3_;
+		instrumentType = p_i1484_5_;
+		pitch = p_i1484_6_;
+		blockId = p_i1484_4_;
 	}
 	
 	@Override public int getPacketSize()
@@ -37,17 +37,17 @@
 		par1NetHandler.handleBlockEvent(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xLocation = par1DataInputStream.readInt();
 		yLocation = par1DataInputStream.readShort();
 		zLocation = par1DataInputStream.readInt();
-		instrumentType = par1DataInputStream.read();
-		pitch = par1DataInputStream.read();
+		instrumentType = par1DataInputStream.readUnsignedByte();
+		pitch = par1DataInputStream.readUnsignedByte();
 		blockId = par1DataInputStream.readShort() & 4095;
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(xLocation);
 		par1DataOutputStream.writeShort(yLocation);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet55BlockDestroy.java b/RMCClient/minecraft/net/minecraft/src/Packet55BlockDestroy.java
index 940874f..f7b05d0 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet55BlockDestroy.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet55BlockDestroy.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet55BlockDestroy extends Packet
@@ -16,13 +16,13 @@
 	{
 	}
 	
-	public Packet55BlockDestroy(int par1, int par2, int par3, int par4, int par5)
+	public Packet55BlockDestroy(int p_i1482_1_, int p_i1482_2_, int p_i1482_3_, int p_i1482_4_, int p_i1482_5_)
 	{
-		entityId = par1;
-		posX = par2;
-		posY = par3;
-		posZ = par4;
-		destroyedStage = par5;
+		entityId = p_i1482_1_;
+		posX = p_i1482_2_;
+		posY = p_i1482_3_;
+		posZ = p_i1482_4_;
+		destroyedStage = p_i1482_5_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -71,16 +71,16 @@
 		par1NetHandler.handleBlockDestroy(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityId = par1DataInputStream.readInt();
 		posX = par1DataInputStream.readInt();
 		posY = par1DataInputStream.readInt();
 		posZ = par1DataInputStream.readInt();
-		destroyedStage = par1DataInputStream.read();
+		destroyedStage = par1DataInputStream.readUnsignedByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityId);
 		par1DataOutputStream.writeInt(posX);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet56MapChunks.java b/RMCClient/minecraft/net/minecraft/src/Packet56MapChunks.java
index 35ce77c..70c9c63 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet56MapChunks.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet56MapChunks.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.util.List;
 import java.util.zip.DataFormatException;
@@ -24,19 +24,19 @@
 	{
 	}
 	
-	public Packet56MapChunks(List par1List)
+	public Packet56MapChunks(List p_i1437_1_)
 	{
-		int var2 = par1List.size();
+		int var2 = p_i1437_1_.size();
 		chunkPostX = new int[var2];
 		chunkPosZ = new int[var2];
 		field_73590_a = new int[var2];
 		field_73588_b = new int[var2];
 		field_73584_f = new byte[var2][];
-		skyLightSent = !par1List.isEmpty() && !((Chunk) par1List.get(0)).worldObj.provider.hasNoSky;
+		skyLightSent = !p_i1437_1_.isEmpty() && !((Chunk) p_i1437_1_.get(0)).worldObj.provider.hasNoSky;
 		int var3 = 0;
 		for(int var4 = 0; var4 < var2; ++var4)
 		{
-			Chunk var5 = (Chunk) par1List.get(var4);
+			Chunk var5 = (Chunk) p_i1437_1_.get(var4);
 			Packet51MapChunkData var6 = Packet51MapChunk.getMapChunkData(var5, true, 65535);
 			if(chunkDataNotCompressed.length < var3 + var6.compressedData.length)
 			{
@@ -95,7 +95,7 @@
 		par1NetHandler.handleMapChunks(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		short var2 = par1DataInputStream.readShort();
 		dataLength = par1DataInputStream.readInt();
@@ -150,7 +150,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeShort(chunkPostX.length);
 		par1DataOutputStream.writeInt(dataLength);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet5PlayerInventory.java b/RMCClient/minecraft/net/minecraft/src/Packet5PlayerInventory.java
index d7b82fa..1357762 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet5PlayerInventory.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet5PlayerInventory.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet5PlayerInventory extends Packet
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet5PlayerInventory(int par1, int par2, ItemStack par3ItemStack)
+	public Packet5PlayerInventory(int p_i1467_1_, int p_i1467_2_, ItemStack p_i1467_3_)
 	{
-		entityID = par1;
-		slot = par2;
-		itemSlot = par3ItemStack == null ? null : par3ItemStack.copy();
+		entityID = p_i1467_1_;
+		slot = p_i1467_2_;
+		itemSlot = p_i1467_3_ == null ? null : p_i1467_3_.copy();
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -47,14 +47,14 @@
 		par1NetHandler.handlePlayerInventory(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityID = par1DataInputStream.readInt();
 		slot = par1DataInputStream.readShort();
 		itemSlot = readItemStack(par1DataInputStream);
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityID);
 		par1DataOutputStream.writeShort(slot);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet60Explosion.java b/RMCClient/minecraft/net/minecraft/src/Packet60Explosion.java
index 313c7ff..b293f81 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet60Explosion.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet60Explosion.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Iterator;
@@ -22,18 +22,18 @@
 	{
 	}
 	
-	public Packet60Explosion(double par1, double par3, double par5, float par7, List par8List, Vec3 par9Vec3)
+	public Packet60Explosion(double p_i1432_1_, double p_i1432_3_, double p_i1432_5_, float p_i1432_7_, List p_i1432_8_, Vec3 p_i1432_9_)
 	{
-		explosionX = par1;
-		explosionY = par3;
-		explosionZ = par5;
-		explosionSize = par7;
-		chunkPositionRecords = new ArrayList(par8List);
-		if(par9Vec3 != null)
+		explosionX = p_i1432_1_;
+		explosionY = p_i1432_3_;
+		explosionZ = p_i1432_5_;
+		explosionSize = p_i1432_7_;
+		chunkPositionRecords = new ArrayList(p_i1432_8_);
+		if(p_i1432_9_ != null)
 		{
-			playerVelocityX = (float) par9Vec3.xCoord;
-			playerVelocityY = (float) par9Vec3.yCoord;
-			playerVelocityZ = (float) par9Vec3.zCoord;
+			playerVelocityX = (float) p_i1432_9_.xCoord;
+			playerVelocityY = (float) p_i1432_9_.yCoord;
+			playerVelocityZ = (float) p_i1432_9_.zCoord;
 		}
 	}
 	
@@ -62,7 +62,7 @@
 		par1NetHandler.handleExplosion(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		explosionX = par1DataInputStream.readDouble();
 		explosionY = par1DataInputStream.readDouble();
@@ -85,7 +85,7 @@
 		playerVelocityZ = par1DataInputStream.readFloat();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeDouble(explosionX);
 		par1DataOutputStream.writeDouble(explosionY);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet61DoorChange.java b/RMCClient/minecraft/net/minecraft/src/Packet61DoorChange.java
index 96cbb0b..46f9383 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet61DoorChange.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet61DoorChange.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet61DoorChange extends Packet
@@ -17,14 +17,14 @@
 	{
 	}
 	
-	public Packet61DoorChange(int par1, int par2, int par3, int par4, int par5, boolean par6)
+	public Packet61DoorChange(int p_i1438_1_, int p_i1438_2_, int p_i1438_3_, int p_i1438_4_, int p_i1438_5_, boolean p_i1438_6_)
 	{
-		sfxID = par1;
-		posX = par2;
-		posY = par3;
-		posZ = par4;
-		auxData = par5;
-		disableRelativeVolume = par6;
+		sfxID = p_i1438_1_;
+		posX = p_i1438_2_;
+		posY = p_i1438_3_;
+		posZ = p_i1438_4_;
+		auxData = p_i1438_5_;
+		disableRelativeVolume = p_i1438_6_;
 	}
 	
 	@Override public int getPacketSize()
@@ -42,7 +42,7 @@
 		par1NetHandler.handleDoorChange(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		sfxID = par1DataInputStream.readInt();
 		posX = par1DataInputStream.readInt();
@@ -52,7 +52,7 @@
 		disableRelativeVolume = par1DataInputStream.readBoolean();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(sfxID);
 		par1DataOutputStream.writeInt(posX);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet62LevelSound.java b/RMCClient/minecraft/net/minecraft/src/Packet62LevelSound.java
index 52398fd..e6fc0cc 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet62LevelSound.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet62LevelSound.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet62LevelSound extends Packet
@@ -17,14 +17,14 @@
 	{
 	}
 	
-	public Packet62LevelSound(String par1Str, double par2, double par4, double par6, float par8, float par9)
+	public Packet62LevelSound(String p_i1439_1_, double p_i1439_2_, double p_i1439_4_, double p_i1439_6_, float p_i1439_8_, float p_i1439_9_)
 	{
-		soundName = par1Str;
-		effectX = (int) (par2 * 8.0D);
-		effectY = (int) (par4 * 8.0D);
-		effectZ = (int) (par6 * 8.0D);
-		volume = par8;
-		pitch = (int) (par9 * 63.0F);
+		soundName = p_i1439_1_;
+		effectX = (int) (p_i1439_2_ * 8.0D);
+		effectY = (int) (p_i1439_4_ * 8.0D);
+		effectZ = (int) (p_i1439_6_ * 8.0D);
+		volume = p_i1439_8_;
+		pitch = (int) (p_i1439_9_ * 63.0F);
 		if(pitch < 0)
 		{
 			pitch = 0;
@@ -75,9 +75,9 @@
 		par1NetHandler.handleLevelSound(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
-		soundName = readString(par1DataInputStream, 32);
+		soundName = readString(par1DataInputStream, 256);
 		effectX = par1DataInputStream.readInt();
 		effectY = par1DataInputStream.readInt();
 		effectZ = par1DataInputStream.readInt();
@@ -85,7 +85,7 @@
 		pitch = par1DataInputStream.readUnsignedByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(soundName, par1DataOutputStream);
 		par1DataOutputStream.writeInt(effectX);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet63WorldParticles.java b/RMCClient/minecraft/net/minecraft/src/Packet63WorldParticles.java
index 776785d..ed9085f 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet63WorldParticles.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet63WorldParticles.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet63WorldParticles extends Packet
@@ -71,7 +71,7 @@
 		par1NetHandler.handleWorldParticles(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		particleName = readString(par1DataInputStream, 64);
 		posX = par1DataInputStream.readFloat();
@@ -84,7 +84,7 @@
 		quantity = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		writeString(particleName, par1DataOutputStream);
 		par1DataOutputStream.writeFloat(posX);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet6SpawnPosition.java b/RMCClient/minecraft/net/minecraft/src/Packet6SpawnPosition.java
index 72bf4bb..8c36d14 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet6SpawnPosition.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet6SpawnPosition.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet6SpawnPosition extends Packet
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet6SpawnPosition(int par1, int par2, int par3)
+	public Packet6SpawnPosition(int p_i1475_1_, int p_i1475_2_, int p_i1475_3_)
 	{
-		xPosition = par1;
-		yPosition = par2;
-		zPosition = par3;
+		xPosition = p_i1475_1_;
+		yPosition = p_i1475_2_;
+		zPosition = p_i1475_3_;
 	}
 	
 	@Override public boolean canProcessAsync()
@@ -46,14 +46,14 @@
 		par1NetHandler.handleSpawnPosition(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		xPosition = par1DataInputStream.readInt();
 		yPosition = par1DataInputStream.readInt();
 		zPosition = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(xPosition);
 		par1DataOutputStream.writeInt(yPosition);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet70GameEvent.java b/RMCClient/minecraft/net/minecraft/src/Packet70GameEvent.java
index 691cc1a..eec8d16 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet70GameEvent.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet70GameEvent.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet70GameEvent extends Packet
@@ -14,10 +14,10 @@
 	{
 	}
 	
-	public Packet70GameEvent(int par1, int par2)
+	public Packet70GameEvent(int p_i1433_1_, int p_i1433_2_)
 	{
-		eventType = par1;
-		gameMode = par2;
+		eventType = p_i1433_1_;
+		gameMode = p_i1433_2_;
 	}
 	
 	@Override public int getPacketSize()
@@ -30,13 +30,13 @@
 		par1NetHandler.handleGameEvent(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		eventType = par1DataInputStream.readByte();
 		gameMode = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeByte(eventType);
 		par1DataOutputStream.writeByte(gameMode);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet71Weather.java b/RMCClient/minecraft/net/minecraft/src/Packet71Weather.java
index faa2351..ec5cb3d 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet71Weather.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet71Weather.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet71Weather extends Packet
@@ -16,13 +16,13 @@
 	{
 	}
 	
-	public Packet71Weather(Entity par1Entity)
+	public Packet71Weather(Entity p_i1403_1_)
 	{
-		entityID = par1Entity.entityId;
-		posX = MathHelper.floor_double(par1Entity.posX * 32.0D);
-		posY = MathHelper.floor_double(par1Entity.posY * 32.0D);
-		posZ = MathHelper.floor_double(par1Entity.posZ * 32.0D);
-		if(par1Entity instanceof EntityLightningBolt)
+		entityID = p_i1403_1_.entityId;
+		posX = MathHelper.floor_double(p_i1403_1_.posX * 32.0D);
+		posY = MathHelper.floor_double(p_i1403_1_.posY * 32.0D);
+		posZ = MathHelper.floor_double(p_i1403_1_.posZ * 32.0D);
+		if(p_i1403_1_ instanceof EntityLightningBolt)
 		{
 			isLightningBolt = 1;
 		}
@@ -38,7 +38,7 @@
 		par1NetHandler.handleWeather(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		entityID = par1DataInputStream.readInt();
 		isLightningBolt = par1DataInputStream.readByte();
@@ -47,7 +47,7 @@
 		posZ = par1DataInputStream.readInt();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(entityID);
 		par1DataOutputStream.writeByte(isLightningBolt);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet7UseEntity.java b/RMCClient/minecraft/net/minecraft/src/Packet7UseEntity.java
index 2f6b898..3b01881 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet7UseEntity.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet7UseEntity.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet7UseEntity extends Packet
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet7UseEntity(int par1, int par2, int par3)
+	public Packet7UseEntity(int p_i1434_1_, int p_i1434_2_, int p_i1434_3_)
 	{
-		playerEntityId = par1;
-		targetEntity = par2;
-		isLeftClick = par3;
+		playerEntityId = p_i1434_1_;
+		targetEntity = p_i1434_2_;
+		isLeftClick = p_i1434_3_;
 	}
 	
 	@Override public int getPacketSize()
@@ -31,14 +31,14 @@
 		par1NetHandler.handleUseEntity(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		playerEntityId = par1DataInputStream.readInt();
 		targetEntity = par1DataInputStream.readInt();
 		isLeftClick = par1DataInputStream.readByte();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(playerEntityId);
 		par1DataOutputStream.writeInt(targetEntity);
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet8UpdateHealth.java b/RMCClient/minecraft/net/minecraft/src/Packet8UpdateHealth.java
index bdd0a31..e844753 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet8UpdateHealth.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet8UpdateHealth.java
@@ -1,12 +1,12 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet8UpdateHealth extends Packet
 {
-	public int healthMP;
+	public float healthMP;
 	public int food;
 	public float foodSaturation;
 	
@@ -14,11 +14,11 @@
 	{
 	}
 	
-	public Packet8UpdateHealth(int par1, int par2, float par3)
+	public Packet8UpdateHealth(float p_i1469_1_, int p_i1469_2_, float p_i1469_3_)
 	{
-		healthMP = par1;
-		food = par2;
-		foodSaturation = par3;
+		healthMP = p_i1469_1_;
+		food = p_i1469_2_;
+		foodSaturation = p_i1469_3_;
 	}
 	
 	@Override public boolean containsSameEntityIDAs(Packet par1Packet)
@@ -41,16 +41,16 @@
 		par1NetHandler.handleUpdateHealth(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
-		healthMP = par1DataInputStream.readShort();
+		healthMP = par1DataInputStream.readFloat();
 		food = par1DataInputStream.readShort();
 		foodSaturation = par1DataInputStream.readFloat();
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
-		par1DataOutputStream.writeShort(healthMP);
+		par1DataOutputStream.writeFloat(healthMP);
 		par1DataOutputStream.writeShort(food);
 		par1DataOutputStream.writeFloat(foodSaturation);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/Packet9Respawn.java b/RMCClient/minecraft/net/minecraft/src/Packet9Respawn.java
index a611667..8e4c48c 100644
--- a/RMCClient/minecraft/net/minecraft/src/Packet9Respawn.java
+++ b/RMCClient/minecraft/net/minecraft/src/Packet9Respawn.java
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
+import java.io.DataInput;
+import java.io.DataOutput;
 import java.io.IOException;
 
 public class Packet9Respawn extends Packet
@@ -16,13 +16,13 @@
 	{
 	}
 	
-	public Packet9Respawn(int par1, byte par2, WorldType par3WorldType, int par4, EnumGameType par5EnumGameType)
+	public Packet9Respawn(int p_i1457_1_, byte p_i1457_2_, WorldType p_i1457_3_, int p_i1457_4_, EnumGameType p_i1457_5_)
 	{
-		respawnDimension = par1;
-		difficulty = par2;
-		worldHeight = par4;
-		gameType = par5EnumGameType;
-		terrainType = par3WorldType;
+		respawnDimension = p_i1457_1_;
+		difficulty = p_i1457_2_;
+		worldHeight = p_i1457_4_;
+		gameType = p_i1457_5_;
+		terrainType = p_i1457_3_;
 	}
 	
 	@Override public int getPacketSize()
@@ -35,7 +35,7 @@
 		par1NetHandler.handleRespawn(this);
 	}
 	
-	@Override public void readPacketData(DataInputStream par1DataInputStream) throws IOException
+	@Override public void readPacketData(DataInput par1DataInputStream) throws IOException
 	{
 		respawnDimension = par1DataInputStream.readInt();
 		difficulty = par1DataInputStream.readByte();
@@ -49,7 +49,7 @@
 		}
 	}
 	
-	@Override public void writePacketData(DataOutputStream par1DataOutputStream) throws IOException
+	@Override public void writePacketData(DataOutput par1DataOutputStream) throws IOException
 	{
 		par1DataOutputStream.writeInt(respawnDimension);
 		par1DataOutputStream.writeByte(difficulty);
diff --git a/RMCClient/minecraft/net/minecraft/src/PanelCrashReport.java b/RMCClient/minecraft/net/minecraft/src/PanelCrashReport.java
deleted file mode 100644
index 4ead437..0000000
--- a/RMCClient/minecraft/net/minecraft/src/PanelCrashReport.java
+++ /dev/null
@@ -1,103 +0,0 @@
-package net.minecraft.src;
-
-import java.awt.BorderLayout;
-import java.awt.Color;
-import java.awt.Font;
-import java.awt.Panel;
-import java.awt.TextArea;
-import java.io.File;
-import java.io.PrintWriter;
-import java.io.StringWriter;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-
-import net.minecraft.client.Minecraft;
-
-import org.lwjgl.opengl.GL11;
-
-public class PanelCrashReport extends Panel
-{
-	private static final long serialVersionUID = 1L;
-	
-	public PanelCrashReport(CrashReport par1CrashReport)
-	{
-		setBackground(new Color(3028036));
-		setLayout(new BorderLayout());
-		StringWriter var2 = new StringWriter();
-		par1CrashReport.getCrashCause().printStackTrace(new PrintWriter(var2));
-		String var3 = var2.toString();
-		String var4 = "";
-		String var5 = "";
-		try
-		{
-			var5 = var5 + "Generated " + new SimpleDateFormat().format(new Date()) + "\n";
-			var5 = var5 + "\n";
-			var5 = var5 + par1CrashReport.func_90021_c();
-			var4 = GL11.glGetString(GL11.GL_VENDOR);
-		} catch(Throwable var9)
-		{
-			var5 = var5 + "[failed to get system properties (" + var9 + ")]\n";
-		}
-		var5 = var5 + "\n\n";
-		var5 = var5 + var3;
-		String var6 = "";
-		var6 = var6 + "\n";
-		var6 = var6 + "\n";
-		if(var3.contains("Pixel format not accelerated"))
-		{
-			var6 = var6 + "      Bad video card drivers!      \n";
-			var6 = var6 + "      -----------------------      \n";
-			var6 = var6 + "\n";
-			var6 = var6 + "Minecraft was unable to start because it failed to find an accelerated OpenGL mode.\n";
-			var6 = var6 + "This can usually be fixed by updating the video card drivers.\n";
-			if(var4.toLowerCase().contains("nvidia"))
-			{
-				var6 = var6 + "\n";
-				var6 = var6 + "You might be able to find drivers for your video card here:\n";
-				var6 = var6 + "  http://www.nvidia.com/\n";
-			} else if(var4.toLowerCase().contains("ati"))
-			{
-				var6 = var6 + "\n";
-				var6 = var6 + "You might be able to find drivers for your video card here:\n";
-				var6 = var6 + "  http://www.amd.com/\n";
-			}
-		} else
-		{
-			var6 = var6 + "      Minecraft has crashed!      \n";
-			var6 = var6 + "      ----------------------      \n";
-			var6 = var6 + "\n";
-			var6 = var6 + "Minecraft has stopped running because it encountered a problem; " + par1CrashReport.getDescription() + "\n\n";
-			File var7 = par1CrashReport.getFile();
-			if(var7 == null)
-			{
-				par1CrashReport.saveToFile(new File(new File(Minecraft.getMinecraftDir(), "crash-reports"), "crash-" + new SimpleDateFormat("yyyy-MM-dd_HH.mm.ss").format(new Date()) + "-client.txt"), Minecraft.getMinecraft().getLogAgent());
-				var7 = par1CrashReport.getFile();
-			}
-			if(var7 != null)
-			{
-				String var8 = var7.getAbsolutePath();
-				var6 = var6 + "A full error report has been saved to " + var8 + " - Please include a copy of that file (Not this screen!) if you report this crash to anyone; without it, they will not be able to help fix the crash :(";
-				var5 = "Full report at:\n" + var8 + "\nPlease show that file to Mojang, NOT just this screen!\n\n" + var5;
-			} else
-			{
-				var6 = var6 + "We were unable to save this report to a file.";
-			}
-			var6 = var6 + "\n";
-		}
-		var6 = var6 + "\n";
-		var6 = var6 + "\n";
-		var6 = var6 + "\n";
-		var6 = var6 + "--- BEGIN ERROR REPORT " + Integer.toHexString(var6.hashCode()) + " --------\n";
-		var6 = var6 + var5;
-		var6 = var6 + "--- END ERROR REPORT " + Integer.toHexString(var6.hashCode()) + " ----------\n";
-		var6 = var6 + "\n";
-		var6 = var6 + "\n";
-		TextArea var10 = new TextArea(var6, 0, 0, 1);
-		var10.setFont(new Font("Monospaced", 0, 12));
-		this.add(new CanvasMojangLogo(), "North");
-		this.add(new CanvasCrashReport(80), "East");
-		this.add(new CanvasCrashReport(80), "West");
-		this.add(new CanvasCrashReport(100), "South");
-		this.add(var10, "Center");
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/Particle.java b/RMCClient/minecraft/net/minecraft/src/Particle.java
deleted file mode 100644
index 6e608d4..0000000
--- a/RMCClient/minecraft/net/minecraft/src/Particle.java
+++ /dev/null
@@ -1,61 +0,0 @@
-package net.minecraft.src;
-
-import java.util.Random;
-
-public class Particle
-{
-	private static Random rand = new Random();
-	public double posX;
-	public double posY;
-	public double prevPosX;
-	public double prevPosY;
-	public double velocityX;
-	public double velocityY;
-	public double accelScale;
-	public boolean isDead;
-	public int timeTick;
-	public int timeLimit;
-	public double tintRed;
-	public double tintGreen;
-	public double tintBlue;
-	public double tintAlpha;
-	public double prevTintRed;
-	public double prevTintGreen;
-	public double prevTintBlue;
-	public double prevTintAlpha;
-	
-	public void preUpdate()
-	{
-		prevTintRed = tintRed;
-		prevTintGreen = tintGreen;
-		prevTintBlue = tintBlue;
-		prevTintAlpha = tintAlpha;
-		prevPosX = posX;
-		prevPosY = posY;
-	}
-	
-	public void setDead()
-	{
-		isDead = true;
-	}
-	
-	public void update(GuiParticle par1GuiParticle)
-	{
-		posX += velocityX;
-		posY += velocityY;
-		velocityX *= accelScale;
-		velocityY *= accelScale;
-		velocityY += 0.1D;
-		if(++timeTick > timeLimit)
-		{
-			setDead();
-		}
-		tintAlpha = 2.0D - (double) timeTick / (double) timeLimit * 2.0D;
-		if(tintAlpha > 1.0D)
-		{
-			tintAlpha = 1.0D;
-		}
-		tintAlpha *= tintAlpha;
-		tintAlpha *= 0.5D;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/Path.java b/RMCClient/minecraft/net/minecraft/src/Path.java
index a806fb6..8550b50 100644
--- a/RMCClient/minecraft/net/minecraft/src/Path.java
+++ b/RMCClient/minecraft/net/minecraft/src/Path.java
@@ -3,7 +3,7 @@
 public class Path
 {
 	private PathPoint[] pathPoints = new PathPoint[1024];
-	private int count = 0;
+	private int count;
 	
 	public PathPoint addPoint(PathPoint par1PathPoint)
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/PathEntity.java b/RMCClient/minecraft/net/minecraft/src/PathEntity.java
index 787bd3d..b8fbea3 100644
--- a/RMCClient/minecraft/net/minecraft/src/PathEntity.java
+++ b/RMCClient/minecraft/net/minecraft/src/PathEntity.java
@@ -6,10 +6,10 @@
 	private int currentPathIndex;
 	private int pathLength;
 	
-	public PathEntity(PathPoint[] par1ArrayOfPathPoint)
+	public PathEntity(PathPoint[] p_i2136_1_)
 	{
-		points = par1ArrayOfPathPoint;
-		pathLength = par1ArrayOfPathPoint.length;
+		points = p_i2136_1_;
+		pathLength = p_i2136_1_.length;
 	}
 	
 	public int getCurrentPathIndex()
diff --git a/RMCClient/minecraft/net/minecraft/src/PathFinder.java b/RMCClient/minecraft/net/minecraft/src/PathFinder.java
index a786864..04213cf 100644
--- a/RMCClient/minecraft/net/minecraft/src/PathFinder.java
+++ b/RMCClient/minecraft/net/minecraft/src/PathFinder.java
@@ -11,13 +11,13 @@
 	private boolean isPathingInWater;
 	private boolean canEntityDrown;
 	
-	public PathFinder(IBlockAccess par1IBlockAccess, boolean par2, boolean par3, boolean par4, boolean par5)
+	public PathFinder(IBlockAccess p_i2137_1_, boolean p_i2137_2_, boolean p_i2137_3_, boolean p_i2137_4_, boolean p_i2137_5_)
 	{
-		worldMap = par1IBlockAccess;
-		isWoddenDoorAllowed = par2;
-		isMovementBlockAllowed = par3;
-		isPathingInWater = par4;
-		canEntityDrown = par5;
+		worldMap = p_i2137_1_;
+		isWoddenDoorAllowed = p_i2137_2_;
+		isMovementBlockAllowed = p_i2137_3_;
+		isPathingInWater = p_i2137_4_;
+		canEntityDrown = p_i2137_5_;
 	}
 	
 	private PathEntity addToPath(Entity par1Entity, PathPoint par2PathPoint, PathPoint par3PathPoint, PathPoint par4PathPoint, float par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/PathNavigate.java b/RMCClient/minecraft/net/minecraft/src/PathNavigate.java
index 2770f24..86392fd 100644
--- a/RMCClient/minecraft/net/minecraft/src/PathNavigate.java
+++ b/RMCClient/minecraft/net/minecraft/src/PathNavigate.java
@@ -5,22 +5,22 @@
 	private EntityLiving theEntity;
 	private World worldObj;
 	private PathEntity currentPath;
-	private float speed;
-	private float pathSearchRange;
-	private boolean noSunPathfind = false;
+	private double speed;
+	private AttributeInstance pathSearchRange;
+	private boolean noSunPathfind;
 	private int totalTicks;
 	private int ticksAtLastPos;
 	private Vec3 lastPosCheck = Vec3.createVectorHelper(0.0D, 0.0D, 0.0D);
 	private boolean canPassOpenWoodenDoors = true;
-	private boolean canPassClosedWoodenDoors = false;
-	private boolean avoidsWater = false;
-	private boolean canSwim = false;
+	private boolean canPassClosedWoodenDoors;
+	private boolean avoidsWater;
+	private boolean canSwim;
 	
-	public PathNavigate(EntityLiving par1EntityLiving, World par2World, float par3)
+	public PathNavigate(EntityLiving p_i1671_1_, World p_i1671_2_)
 	{
-		theEntity = par1EntityLiving;
-		worldObj = par2World;
-		pathSearchRange = par3;
+		theEntity = p_i1671_1_;
+		worldObj = p_i1671_2_;
+		pathSearchRange = p_i1671_1_.func_110148_a(SharedMonsterAttributes.field_111265_b);
 	}
 	
 	private boolean canNavigate()
@@ -31,6 +31,11 @@
 	public void clearPathEntity()
 	{
 		currentPath = null;
+	}
+	
+	public float func_111269_d()
+	{
+		return (float) pathSearchRange.func_111126_e();
 	}
 	
 	public boolean getAvoidsWater()
@@ -71,14 +76,14 @@
 		} else return (int) (theEntity.boundingBox.minY + 0.5D);
 	}
 	
-	public PathEntity getPathToEntityLiving(EntityLiving par1EntityLiving)
+	public PathEntity getPathToEntityLiving(Entity par1EntityLiving)
 	{
-		return !canNavigate() ? null : worldObj.getPathEntityToEntity(theEntity, par1EntityLiving, pathSearchRange, canPassOpenWoodenDoors, canPassClosedWoodenDoors, avoidsWater, canSwim);
+		return !canNavigate() ? null : worldObj.getPathEntityToEntity(theEntity, par1EntityLiving, func_111269_d(), canPassOpenWoodenDoors, canPassClosedWoodenDoors, avoidsWater, canSwim);
 	}
 	
 	public PathEntity getPathToXYZ(double par1, double par3, double par5)
 	{
-		return !canNavigate() ? null : worldObj.getEntityPathToXYZ(theEntity, MathHelper.floor_double(par1), (int) par3, MathHelper.floor_double(par5), pathSearchRange, canPassOpenWoodenDoors, canPassClosedWoodenDoors, avoidsWater, canSwim);
+		return !canNavigate() ? null : worldObj.getEntityPathToXYZ(theEntity, MathHelper.floor_double(par1), (int) par3, MathHelper.floor_double(par5), func_111269_d(), canPassOpenWoodenDoors, canPassClosedWoodenDoors, avoidsWater, canSwim);
 	}
 	
 	private boolean isDirectPathBetweenPoints(Vec3 par1Vec3, Vec3 par2Vec3, int par3, int par4, int par5)
@@ -305,7 +310,7 @@
 		canPassOpenWoodenDoors = par1;
 	}
 	
-	public boolean setPath(PathEntity par1PathEntity, float par2)
+	public boolean setPath(PathEntity par1PathEntity, double par2)
 	{
 		if(par1PathEntity == null)
 		{
@@ -325,30 +330,30 @@
 			else
 			{
 				speed = par2;
-				Vec3 var3 = getEntityPosition();
+				Vec3 var4 = getEntityPosition();
 				ticksAtLastPos = totalTicks;
-				lastPosCheck.xCoord = var3.xCoord;
-				lastPosCheck.yCoord = var3.yCoord;
-				lastPosCheck.zCoord = var3.zCoord;
+				lastPosCheck.xCoord = var4.xCoord;
+				lastPosCheck.yCoord = var4.yCoord;
+				lastPosCheck.zCoord = var4.zCoord;
 				return true;
 			}
 		}
 	}
 	
-	public void setSpeed(float par1)
+	public void setSpeed(double par1)
 	{
 		speed = par1;
 	}
 	
-	public boolean tryMoveToEntityLiving(EntityLiving par1EntityLiving, float par2)
+	public boolean tryMoveToEntityLiving(Entity par1EntityLiving, double par2)
 	{
-		PathEntity var3 = getPathToEntityLiving(par1EntityLiving);
-		return var3 != null ? setPath(var3, par2) : false;
+		PathEntity var4 = getPathToEntityLiving(par1EntityLiving);
+		return var4 != null ? setPath(var4, par2) : false;
 	}
 	
-	public boolean tryMoveToXYZ(double par1, double par3, double par5, float par7)
+	public boolean tryMoveToXYZ(double par1, double par3, double par5, double par7)
 	{
-		PathEntity var8 = getPathToXYZ(MathHelper.floor_double(par1), (int) par3, MathHelper.floor_double(par5));
-		return setPath(var8, par7);
+		PathEntity var9 = getPathToXYZ(MathHelper.floor_double(par1), (int) par3, MathHelper.floor_double(par5));
+		return setPath(var9, par7);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/PathPoint.java b/RMCClient/minecraft/net/minecraft/src/PathPoint.java
index 6a51004..c116b40 100644
--- a/RMCClient/minecraft/net/minecraft/src/PathPoint.java
+++ b/RMCClient/minecraft/net/minecraft/src/PathPoint.java
@@ -11,14 +11,14 @@
 	float distanceToNext;
 	float distanceToTarget;
 	PathPoint previous;
-	public boolean isFirst = false;
+	public boolean isFirst;
 	
-	public PathPoint(int par1, int par2, int par3)
+	public PathPoint(int p_i2135_1_, int p_i2135_2_, int p_i2135_3_)
 	{
-		xCoord = par1;
-		yCoord = par2;
-		zCoord = par3;
-		hash = makeHash(par1, par2, par3);
+		xCoord = p_i2135_1_;
+		yCoord = p_i2135_2_;
+		zCoord = p_i2135_3_;
+		hash = makeHash(p_i2135_1_, p_i2135_2_, p_i2135_3_);
 	}
 	
 	public float distanceTo(PathPoint par1PathPoint)
diff --git a/RMCClient/minecraft/net/minecraft/src/PendingInvite.java b/RMCClient/minecraft/net/minecraft/src/PendingInvite.java
new file mode 100644
index 0000000..5b550f1
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/PendingInvite.java
@@ -0,0 +1,24 @@
+package net.minecraft.src;
+
+
+public class PendingInvite extends ValueObject
+{
+	public String field_130094_a;
+	public String field_130092_b;
+	public String field_130093_c;
+	
+	public static PendingInvite func_130091_a(JsonNode p_130091_0_)
+	{
+		PendingInvite var1 = new PendingInvite();
+		try
+		{
+			var1.field_130094_a = p_130091_0_.getStringValue(new Object[] { "invitationId" });
+			var1.field_130092_b = p_130091_0_.getStringValue(new Object[] { "worldName" });
+			var1.field_130093_c = p_130091_0_.getStringValue(new Object[] { "worldOwnerName" });
+		} catch(Exception var3)
+		{
+			;
+		}
+		return var1;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/PendingInvitesList.java b/RMCClient/minecraft/net/minecraft/src/PendingInvitesList.java
new file mode 100644
index 0000000..0b592a9
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/PendingInvitesList.java
@@ -0,0 +1,31 @@
+package net.minecraft.src;
+
+import java.util.Iterator;
+import java.util.List;
+
+public class PendingInvitesList extends ValueObject
+{
+	public List field_130096_a = Lists.newArrayList();
+	
+	public static PendingInvitesList func_130095_a(String p_130095_0_)
+	{
+		PendingInvitesList var1 = new PendingInvitesList();
+		try
+		{
+			JsonRootNode var2 = new JdomParser().parse(p_130095_0_);
+			if(var2.isArrayNode(new Object[] { "invites" }))
+			{
+				Iterator var3 = var2.getArrayNode(new Object[] { "invites" }).iterator();
+				while(var3.hasNext())
+				{
+					JsonNode var4 = (JsonNode) var3.next();
+					var1.field_130096_a.add(PendingInvite.func_130091_a(var4));
+				}
+			}
+		} catch(InvalidSyntaxException var5)
+		{
+			;
+		}
+		return var1;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/PlayerCapabilities.java b/RMCClient/minecraft/net/minecraft/src/PlayerCapabilities.java
index 5969508..ac053e3 100644
--- a/RMCClient/minecraft/net/minecraft/src/PlayerCapabilities.java
+++ b/RMCClient/minecraft/net/minecraft/src/PlayerCapabilities.java
@@ -2,10 +2,10 @@
 
 public class PlayerCapabilities
 {
-	public boolean disableDamage = false;
-	public boolean isFlying = false;
-	public boolean allowFlying = false;
-	public boolean isCreativeMode = false;
+	public boolean disableDamage;
+	public boolean isFlying;
+	public boolean allowFlying;
+	public boolean isCreativeMode;
 	public boolean allowEdit = true;
 	private float flySpeed = 0.05F;
 	private float walkSpeed = 0.1F;
diff --git a/RMCClient/minecraft/net/minecraft/src/PlayerControllerMP.java b/RMCClient/minecraft/net/minecraft/src/PlayerControllerMP.java
index e380c35..c6912c3 100644
--- a/RMCClient/minecraft/net/minecraft/src/PlayerControllerMP.java
+++ b/RMCClient/minecraft/net/minecraft/src/PlayerControllerMP.java
@@ -9,20 +9,19 @@
 	private int currentBlockX = -1;
 	private int currentBlockY = -1;
 	private int currentblockZ = -1;
-	private ItemStack field_85183_f = null;
-	private float curBlockDamageMP = 0.0F;
-	private float stepSoundTickCounter = 0.0F;
-	private int blockHitDelay = 0;
-	private boolean isHittingBlock = false;
+	private ItemStack field_85183_f;
+	private float curBlockDamageMP;
+	private float stepSoundTickCounter;
+	private int blockHitDelay;
+	private boolean isHittingBlock;
 	private EnumGameType currentGameType;
 	private int currentPlayerItem;
 	
-	public PlayerControllerMP(Minecraft par1Minecraft, NetClientHandler par2NetClientHandler)
+	public PlayerControllerMP(Minecraft p_i1185_1_, NetClientHandler p_i1185_2_)
 	{
 		currentGameType = EnumGameType.SURVIVAL;
-		currentPlayerItem = 0;
-		mc = par1Minecraft;
-		netClientHandler = par2NetClientHandler;
+		mc = p_i1185_1_;
+		netClientHandler = p_i1185_2_;
 	}
 	
 	public void attackEntity(EntityPlayer par1EntityPlayer, Entity par2Entity)
@@ -86,6 +85,11 @@
 		par1EntityPlayer.rotationYaw = -180.0F;
 	}
 	
+	public boolean func_110738_j()
+	{
+		return mc.thePlayer.isRiding() && mc.thePlayer.ridingEntity instanceof EntityHorse;
+	}
+	
 	public void func_78752_a(ItemStack par1ItemStack)
 	{
 		if(currentGameType.isCreative() && par1ItemStack != null)
@@ -96,12 +100,12 @@
 	
 	public EntityClientPlayerMP func_78754_a(World par1World)
 	{
-		return new EntityClientPlayerMP(mc, par1World, mc.session, netClientHandler);
+		return new EntityClientPlayerMP(mc, par1World, mc.func_110432_I(), netClientHandler);
 	}
 	
 	public boolean func_78763_f()
 	{
-		return true;
+		return currentGameType.isSurvivalOrAdventure();
 	}
 	
 	public boolean func_78768_b(EntityPlayer par1EntityPlayer, Entity par2Entity)
@@ -174,6 +178,7 @@
 	public boolean onPlayerDestroyBlock(int par1, int par2, int par3, int par4)
 	{
 		if(currentGameType.isAdventure() && !mc.thePlayer.canCurrentToolHarvestBlock(par1, par2, par3)) return false;
+		else if(currentGameType.isCreative() && mc.thePlayer.getHeldItem() != null && mc.thePlayer.getHeldItem().getItem() instanceof ItemSword) return false;
 		else
 		{
 			WorldClient var5 = mc.theWorld;
diff --git a/RMCClient/minecraft/net/minecraft/src/PlayerInstance.java b/RMCClient/minecraft/net/minecraft/src/PlayerInstance.java
index 3d7adc5..fd91e40 100644
--- a/RMCClient/minecraft/net/minecraft/src/PlayerInstance.java
+++ b/RMCClient/minecraft/net/minecraft/src/PlayerInstance.java
@@ -10,16 +10,16 @@
 	private short[] locationOfBlockChange;
 	private int numberOfTilesToUpdate;
 	private int field_73260_f;
+	private long field_111198_g;
 	final PlayerManager thePlayerManager;
 	
-	public PlayerInstance(PlayerManager par1PlayerManager, int par2, int par3)
+	public PlayerInstance(PlayerManager p_i1518_1_, int p_i1518_2_, int p_i1518_3_)
 	{
-		thePlayerManager = par1PlayerManager;
+		thePlayerManager = p_i1518_1_;
 		playersInChunk = new ArrayList();
 		locationOfBlockChange = new short[64];
-		numberOfTilesToUpdate = 0;
-		chunkLocation = new ChunkCoordIntPair(par2, par3);
-		par1PlayerManager.getWorldServer().theChunkProviderServer.loadChunk(par2, par3);
+		chunkLocation = new ChunkCoordIntPair(p_i1518_2_, p_i1518_3_);
+		p_i1518_1_.getWorldServer().theChunkProviderServer.loadChunk(p_i1518_2_, p_i1518_3_);
 	}
 	
 	public void addPlayerToChunkWatchingList(EntityPlayerMP par1EntityPlayerMP)
@@ -27,6 +27,10 @@
 		if(playersInChunk.contains(par1EntityPlayerMP)) throw new IllegalStateException("Failed to add player. " + par1EntityPlayerMP + " already is in chunk " + chunkLocation.chunkXPos + ", " + chunkLocation.chunkZPos);
 		else
 		{
+			if(playersInChunk.isEmpty())
+			{
+				field_111198_g = PlayerManager.getWorldServer(thePlayerManager).getTotalWorldTime();
+			}
 			playersInChunk.add(par1EntityPlayerMP);
 			par1EntityPlayerMP.loadedChunks.add(chunkLocation);
 		}
@@ -48,6 +52,17 @@
 			}
 			locationOfBlockChange[numberOfTilesToUpdate++] = var4;
 		}
+	}
+	
+	public void func_111194_a()
+	{
+		func_111196_a(PlayerManager.getWorldServer(thePlayerManager).getChunkFromChunkCoords(chunkLocation.chunkXPos, chunkLocation.chunkZPos));
+	}
+	
+	private void func_111196_a(Chunk p_111196_1_)
+	{
+		p_111196_1_.field_111204_q += PlayerManager.getWorldServer(thePlayerManager).getTotalWorldTime() - field_111198_g;
+		field_111198_g = PlayerManager.getWorldServer(thePlayerManager).getTotalWorldTime();
 	}
 	
 	public void sendChunkUpdate()
@@ -111,13 +126,16 @@
 	{
 		if(playersInChunk.contains(par1EntityPlayerMP))
 		{
-			par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet51MapChunk(PlayerManager.getWorldServer(thePlayerManager).getChunkFromChunkCoords(chunkLocation.chunkXPos, chunkLocation.chunkZPos), true, 0));
+			Chunk var2 = PlayerManager.getWorldServer(thePlayerManager).getChunkFromChunkCoords(chunkLocation.chunkXPos, chunkLocation.chunkZPos);
+			par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet51MapChunk(var2, true, 0));
 			playersInChunk.remove(par1EntityPlayerMP);
 			par1EntityPlayerMP.loadedChunks.remove(chunkLocation);
 			if(playersInChunk.isEmpty())
 			{
-				long var2 = chunkLocation.chunkXPos + 2147483647L | chunkLocation.chunkZPos + 2147483647L << 32;
-				PlayerManager.getChunkWatchers(thePlayerManager).remove(var2);
+				long var3 = chunkLocation.chunkXPos + 2147483647L | chunkLocation.chunkZPos + 2147483647L << 32;
+				func_111196_a(var2);
+				PlayerManager.getChunkWatchers(thePlayerManager).remove(var3);
+				PlayerManager.func_111191_d(thePlayerManager).remove(this);
 				if(numberOfTilesToUpdate > 0)
 				{
 					PlayerManager.getChunkWatchersWithPlayers(thePlayerManager).remove(this);
diff --git a/RMCClient/minecraft/net/minecraft/src/PlayerManager.java b/RMCClient/minecraft/net/minecraft/src/PlayerManager.java
index 4742f3f..72c565c 100644
--- a/RMCClient/minecraft/net/minecraft/src/PlayerManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/PlayerManager.java
@@ -9,17 +9,19 @@
 	private final List players = new ArrayList();
 	private final LongHashMap playerInstances = new LongHashMap();
 	private final List chunkWatcherWithPlayers = new ArrayList();
+	private final List field_111193_e = new ArrayList();
 	private final int playerViewRadius;
+	private long field_111192_g;
 	private final int[][] xzDirectionsConst = new int[][] { { 1, 0 }, { 0, 1 }, { -1, 0 }, { 0, -1 } };
 	
-	public PlayerManager(WorldServer par1WorldServer, int par2)
+	public PlayerManager(WorldServer p_i1519_1_, int p_i1519_2_)
 	{
-		if(par2 > 15) throw new IllegalArgumentException("Too big view radius!");
-		else if(par2 < 3) throw new IllegalArgumentException("Too small view radius!");
+		if(p_i1519_2_ > 15) throw new IllegalArgumentException("Too big view radius!");
+		else if(p_i1519_2_ < 3) throw new IllegalArgumentException("Too small view radius!");
 		else
 		{
-			playerViewRadius = par2;
-			theWorldServer = par1WorldServer;
+			playerViewRadius = p_i1519_2_;
+			theWorldServer = p_i1519_1_;
 		}
 	}
 	
@@ -112,6 +114,7 @@
 		{
 			var6 = new PlayerInstance(this, par1, par2);
 			playerInstances.add(var4, var6);
+			field_111193_e.add(var6);
 		}
 		return var6;
 	}
@@ -188,21 +191,42 @@
 	
 	public void updatePlayerInstances()
 	{
-		for(int var1 = 0; var1 < chunkWatcherWithPlayers.size(); ++var1)
+		long var1 = theWorldServer.getTotalWorldTime();
+		int var3;
+		PlayerInstance var4;
+		if(var1 - field_111192_g > 8000L)
 		{
-			((PlayerInstance) chunkWatcherWithPlayers.get(var1)).sendChunkUpdate();
+			field_111192_g = var1;
+			for(var3 = 0; var3 < field_111193_e.size(); ++var3)
+			{
+				var4 = (PlayerInstance) field_111193_e.get(var3);
+				var4.sendChunkUpdate();
+				var4.func_111194_a();
+			}
+		} else
+		{
+			for(var3 = 0; var3 < chunkWatcherWithPlayers.size(); ++var3)
+			{
+				var4 = (PlayerInstance) chunkWatcherWithPlayers.get(var3);
+				var4.sendChunkUpdate();
+			}
 		}
 		chunkWatcherWithPlayers.clear();
 		if(players.isEmpty())
 		{
-			WorldProvider var2 = theWorldServer.provider;
-			if(!var2.canRespawnHere())
+			WorldProvider var5 = theWorldServer.provider;
+			if(!var5.canRespawnHere())
 			{
 				theWorldServer.theChunkProviderServer.unloadAllChunks();
 			}
 		}
 	}
 	
+	static List func_111191_d(PlayerManager p_111191_0_)
+	{
+		return p_111191_0_.field_111193_e;
+	}
+	
 	static LongHashMap getChunkWatchers(PlayerManager par0PlayerManager)
 	{
 		return par0PlayerManager.playerInstances;
diff --git a/RMCClient/minecraft/net/minecraft/src/PlayerNotFoundException.java b/RMCClient/minecraft/net/minecraft/src/PlayerNotFoundException.java
index 2915ced..fcec56b 100644
--- a/RMCClient/minecraft/net/minecraft/src/PlayerNotFoundException.java
+++ b/RMCClient/minecraft/net/minecraft/src/PlayerNotFoundException.java
@@ -9,8 +9,8 @@
 		this("commands.generic.player.notFound", new Object[0]);
 	}
 	
-	public PlayerNotFoundException(String par1Str, Object ... par2ArrayOfObj)
+	public PlayerNotFoundException(String p_i1362_1_, Object ... p_i1362_2_)
 	{
-		super(par1Str, par2ArrayOfObj);
+		super(p_i1362_1_, p_i1362_2_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/PlayerPositionComparator.java b/RMCClient/minecraft/net/minecraft/src/PlayerPositionComparator.java
index ed601b9..7de10ec 100644
--- a/RMCClient/minecraft/net/minecraft/src/PlayerPositionComparator.java
+++ b/RMCClient/minecraft/net/minecraft/src/PlayerPositionComparator.java
@@ -6,9 +6,9 @@
 {
 	private final ChunkCoordinates theChunkCoordinates;
 	
-	public PlayerPositionComparator(ChunkCoordinates par1ChunkCoordinates)
+	public PlayerPositionComparator(ChunkCoordinates p_i1499_1_)
 	{
-		theChunkCoordinates = par1ChunkCoordinates;
+		theChunkCoordinates = p_i1499_1_;
 	}
 	
 	@Override public int compare(Object par1Obj, Object par2Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/PlayerSelector.java b/RMCClient/minecraft/net/minecraft/src/PlayerSelector.java
index cd3d4f8..5e60f14 100644
--- a/RMCClient/minecraft/net/minecraft/src/PlayerSelector.java
+++ b/RMCClient/minecraft/net/minecraft/src/PlayerSelector.java
@@ -13,8 +13,8 @@
 public class PlayerSelector
 {
 	private static final Pattern tokenPattern = Pattern.compile("^@([parf])(?:\\[([\\w=,!-]*)\\])?$");
-	private static final Pattern intListPattern = Pattern.compile("\\G([-!]?\\w*)(?:$|,)");
-	private static final Pattern keyValueListPattern = Pattern.compile("\\G(\\w+)=([-!]?\\w*)(?:$|,)");
+	private static final Pattern intListPattern = Pattern.compile("\\G([-!]?[\\w-]*)(?:$|,)");
+	private static final Pattern keyValueListPattern = Pattern.compile("\\G(\\w+)=([-!]?[\\w-]*)(?:$|,)");
 	
 	public static Map func_96560_a(Map par0Map)
 	{
@@ -140,7 +140,8 @@
 	public static EntityPlayerMP[] matchPlayers(ICommandSender par0ICommandSender, String par1Str)
 	{
 		Matcher var2 = tokenPattern.matcher(par1Str);
-		if(var2.matches())
+		if(!var2.matches()) return null;
+		else
 		{
 			Map var3 = getArgumentMap(var2.group(2));
 			String var4 = var2.group(1);
@@ -154,13 +155,16 @@
 			Map var12 = func_96560_a(var3);
 			String var13 = null;
 			String var14 = null;
+			boolean var15 = false;
 			if(var3.containsKey("rm"))
 			{
 				var5 = MathHelper.parseIntWithDefault((String) var3.get("rm"), var5);
+				var15 = true;
 			}
 			if(var3.containsKey("r"))
 			{
 				var6 = MathHelper.parseIntWithDefault((String) var3.get("r"), var6);
+				var15 = true;
 			}
 			if(var3.containsKey("lm"))
 			{
@@ -173,14 +177,17 @@
 			if(var3.containsKey("x"))
 			{
 				var11.posX = MathHelper.parseIntWithDefault((String) var3.get("x"), var11.posX);
+				var15 = true;
 			}
 			if(var3.containsKey("y"))
 			{
 				var11.posY = MathHelper.parseIntWithDefault((String) var3.get("y"), var11.posY);
+				var15 = true;
 			}
 			if(var3.containsKey("z"))
 			{
 				var11.posZ = MathHelper.parseIntWithDefault((String) var3.get("z"), var11.posZ);
+				var15 = true;
 			}
 			if(var3.containsKey("m"))
 			{
@@ -198,23 +205,24 @@
 			{
 				var13 = (String) var3.get("name");
 			}
-			List var15;
+			World var16 = var15 ? par0ICommandSender.func_130014_f_() : null;
+			List var17;
 			if(!var4.equals("p") && !var4.equals("a"))
 			{
 				if(!var4.equals("r")) return null;
 				else
 				{
-					var15 = MinecraftServer.getServer().getConfigurationManager().findPlayers(var11, var5, var6, 0, var10, var7, var8, var12, var13, var14);
-					Collections.shuffle(var15);
-					var15 = var15.subList(0, Math.min(var9, var15.size()));
-					return var15 != null && !var15.isEmpty() ? (EntityPlayerMP[]) var15.toArray(new EntityPlayerMP[0]) : new EntityPlayerMP[0];
+					var17 = MinecraftServer.getServer().getConfigurationManager().findPlayers(var11, var5, var6, 0, var10, var7, var8, var12, var13, var14, var16);
+					Collections.shuffle(var17);
+					var17 = var17.subList(0, Math.min(var9, var17.size()));
+					return var17 != null && !var17.isEmpty() ? (EntityPlayerMP[]) var17.toArray(new EntityPlayerMP[0]) : new EntityPlayerMP[0];
 				}
 			} else
 			{
-				var15 = MinecraftServer.getServer().getConfigurationManager().findPlayers(var11, var5, var6, var9, var10, var7, var8, var12, var13, var14);
-				return var15 != null && !var15.isEmpty() ? (EntityPlayerMP[]) var15.toArray(new EntityPlayerMP[0]) : new EntityPlayerMP[0];
+				var17 = MinecraftServer.getServer().getConfigurationManager().findPlayers(var11, var5, var6, var9, var10, var7, var8, var12, var13, var14, var16);
+				return var17 != null && !var17.isEmpty() ? (EntityPlayerMP[]) var17.toArray(new EntityPlayerMP[0]) : new EntityPlayerMP[0];
 			}
-		} else return null;
+		}
 	}
 	
 	public static String matchPlayersAsString(ICommandSender par0ICommandSender, String par1Str)
diff --git a/RMCClient/minecraft/net/minecraft/src/PlayerUsageSnooper.java b/RMCClient/minecraft/net/minecraft/src/PlayerUsageSnooper.java
index 032bc94..f78ceb3 100644
--- a/RMCClient/minecraft/net/minecraft/src/PlayerUsageSnooper.java
+++ b/RMCClient/minecraft/net/minecraft/src/PlayerUsageSnooper.java
@@ -20,20 +20,21 @@
 	private final IPlayerUsage playerStatsCollector;
 	private final java.util.Timer threadTrigger = new java.util.Timer("Snooper Timer", true);
 	private final Object syncLock = new Object();
-	private final long field_98224_g = System.currentTimeMillis();
-	private boolean isRunning = false;
-	private int selfCounter = 0;
+	private final long field_98224_g;
+	private boolean isRunning;
+	private int selfCounter;
 	
-	public PlayerUsageSnooper(String par1Str, IPlayerUsage par2IPlayerUsage)
+	public PlayerUsageSnooper(String p_i1563_1_, IPlayerUsage p_i1563_2_, long p_i1563_3_)
 	{
 		try
 		{
-			serverUrl = new URL("http://snoop.minecraft.net/" + par1Str + "?version=" + 1);
-		} catch(MalformedURLException var4)
+			serverUrl = new URL("http://snoop.minecraft.net/" + p_i1563_1_ + "?version=" + 1);
+		} catch(MalformedURLException var6)
 		{
 			throw new IllegalArgumentException();
 		}
-		playerStatsCollector = par2IPlayerUsage;
+		playerStatsCollector = p_i1563_2_;
+		field_98224_g = p_i1563_3_;
 	}
 	
 	private void addBaseDataToSnooper()
@@ -44,7 +45,7 @@
 		addData("os_version", System.getProperty("os.version"));
 		addData("os_architecture", System.getProperty("os.arch"));
 		addData("java_version", System.getProperty("java.version"));
-		addData("version", "1.5.2");
+		addData("version", "1.6.2");
 		playerStatsCollector.addServerTypeToSnooper(this);
 	}
 	
@@ -80,10 +81,14 @@
 		addData("memory_max", Long.valueOf(Runtime.getRuntime().maxMemory()));
 		addData("memory_free", Long.valueOf(Runtime.getRuntime().freeMemory()));
 		addData("cpu_cores", Integer.valueOf(Runtime.getRuntime().availableProcessors()));
-		addData("run_time", Long.valueOf((System.currentTimeMillis() - field_98224_g) / 60L * 1000L));
 		playerStatsCollector.addServerStatsToSnooper(this);
 	}
 	
+	public long func_130105_g()
+	{
+		return field_98224_g;
+	}
+	
 	public Map getCurrentStats()
 	{
 		LinkedHashMap var1 = new LinkedHashMap();
diff --git a/RMCClient/minecraft/net/minecraft/src/PlayerUsageSnooperThread.java b/RMCClient/minecraft/net/minecraft/src/PlayerUsageSnooperThread.java
index b7c8f3e..077f24b 100644
--- a/RMCClient/minecraft/net/minecraft/src/PlayerUsageSnooperThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/PlayerUsageSnooperThread.java
@@ -7,9 +7,9 @@
 {
 	final PlayerUsageSnooper snooper;
 	
-	PlayerUsageSnooperThread(PlayerUsageSnooper par1PlayerUsageSnooper)
+	PlayerUsageSnooperThread(PlayerUsageSnooper p_i1562_1_)
 	{
-		snooper = par1PlayerUsageSnooper;
+		snooper = p_i1562_1_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/PortalPosition.java b/RMCClient/minecraft/net/minecraft/src/PortalPosition.java
index cfb569e..a93b173 100644
--- a/RMCClient/minecraft/net/minecraft/src/PortalPosition.java
+++ b/RMCClient/minecraft/net/minecraft/src/PortalPosition.java
@@ -5,10 +5,10 @@
 	public long lastUpdateTime;
 	final Teleporter teleporterInstance;
 	
-	public PortalPosition(Teleporter par1Teleporter, int par2, int par3, int par4, long par5)
+	public PortalPosition(Teleporter p_i1962_1_, int p_i1962_2_, int p_i1962_3_, int p_i1962_4_, long p_i1962_5_)
 	{
-		super(par2, par3, par4);
-		teleporterInstance = par1Teleporter;
-		lastUpdateTime = par5;
+		super(p_i1962_2_, p_i1962_3_, p_i1962_4_);
+		teleporterInstance = p_i1962_1_;
+		lastUpdateTime = p_i1962_5_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/PositionImpl.java b/RMCClient/minecraft/net/minecraft/src/PositionImpl.java
index 41e2a5a..8aaa993 100644
--- a/RMCClient/minecraft/net/minecraft/src/PositionImpl.java
+++ b/RMCClient/minecraft/net/minecraft/src/PositionImpl.java
@@ -6,11 +6,11 @@
 	protected final double y;
 	protected final double z;
 	
-	public PositionImpl(double par1, double par3, double par5)
+	public PositionImpl(double p_i1368_1_, double p_i1368_3_, double p_i1368_5_)
 	{
-		x = par1;
-		y = par3;
-		z = par5;
+		x = p_i1368_1_;
+		y = p_i1368_3_;
+		z = p_i1368_5_;
 	}
 	
 	@Override public double getX()
diff --git a/RMCClient/minecraft/net/minecraft/src/PositionTextureVertex.java b/RMCClient/minecraft/net/minecraft/src/PositionTextureVertex.java
index 5c99104..a4598bc 100644
--- a/RMCClient/minecraft/net/minecraft/src/PositionTextureVertex.java
+++ b/RMCClient/minecraft/net/minecraft/src/PositionTextureVertex.java
@@ -6,23 +6,23 @@
 	public float texturePositionX;
 	public float texturePositionY;
 	
-	public PositionTextureVertex(float par1, float par2, float par3, float par4, float par5)
+	public PositionTextureVertex(float p_i1158_1_, float p_i1158_2_, float p_i1158_3_, float p_i1158_4_, float p_i1158_5_)
 	{
-		this(Vec3.createVectorHelper(par1, par2, par3), par4, par5);
+		this(Vec3.createVectorHelper(p_i1158_1_, p_i1158_2_, p_i1158_3_), p_i1158_4_, p_i1158_5_);
 	}
 	
-	public PositionTextureVertex(PositionTextureVertex par1PositionTextureVertex, float par2, float par3)
+	public PositionTextureVertex(PositionTextureVertex p_i1159_1_, float p_i1159_2_, float p_i1159_3_)
 	{
-		vector3D = par1PositionTextureVertex.vector3D;
-		texturePositionX = par2;
-		texturePositionY = par3;
+		vector3D = p_i1159_1_.vector3D;
+		texturePositionX = p_i1159_2_;
+		texturePositionY = p_i1159_3_;
 	}
 	
-	public PositionTextureVertex(Vec3 par1Vec3, float par2, float par3)
+	public PositionTextureVertex(Vec3 p_i1160_1_, float p_i1160_2_, float p_i1160_3_)
 	{
-		vector3D = par1Vec3;
-		texturePositionX = par2;
-		texturePositionY = par3;
+		vector3D = p_i1160_1_;
+		texturePositionX = p_i1160_2_;
+		texturePositionY = p_i1160_3_;
 	}
 	
 	public PositionTextureVertex setTexturePosition(float par1, float par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/Potion.java b/RMCClient/minecraft/net/minecraft/src/Potion.java
index d166aac..88c02df 100644
--- a/RMCClient/minecraft/net/minecraft/src/Potion.java
+++ b/RMCClient/minecraft/net/minecraft/src/Potion.java
@@ -1,14 +1,19 @@
 package net.minecraft.src;
 
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.UUID;
+
 public class Potion
 {
 	public static final Potion[] potionTypes = new Potion[32];
 	public static final Potion field_76423_b = null;
-	public static final Potion moveSpeed = new Potion(1, false, 8171462).setPotionName("potion.moveSpeed").setIconIndex(0, 0);
-	public static final Potion moveSlowdown = new Potion(2, true, 5926017).setPotionName("potion.moveSlowdown").setIconIndex(1, 0);
+	public static final Potion moveSpeed = new Potion(1, false, 8171462).setPotionName("potion.moveSpeed").setIconIndex(0, 0).func_111184_a(SharedMonsterAttributes.field_111263_d, "91AEAA56-376B-4498-935B-2F7F68070635", 0.20000000298023224D, 2);
+	public static final Potion moveSlowdown = new Potion(2, true, 5926017).setPotionName("potion.moveSlowdown").setIconIndex(1, 0).func_111184_a(SharedMonsterAttributes.field_111263_d, "7107DE5E-7CE8-4030-940E-514C1F160890", -0.15000000596046448D, 2);
 	public static final Potion digSpeed = new Potion(3, false, 14270531).setPotionName("potion.digSpeed").setIconIndex(2, 0).setEffectiveness(1.5D);
 	public static final Potion digSlowdown = new Potion(4, true, 4866583).setPotionName("potion.digSlowDown").setIconIndex(3, 0);
-	public static final Potion damageBoost = new Potion(5, false, 9643043).setPotionName("potion.damageBoost").setIconIndex(4, 0);
+	public static final Potion damageBoost = new PotionAttackDamage(5, false, 9643043).setPotionName("potion.damageBoost").setIconIndex(4, 0).func_111184_a(SharedMonsterAttributes.field_111264_e, "648D7064-6A60-4F59-8ABE-C2C23A6DD7A9", 3.0D, 2);
 	public static final Potion heal = new PotionHealth(6, false, 16262179).setPotionName("potion.heal");
 	public static final Potion harm = new PotionHealth(7, true, 4393481).setPotionName("potion.harm");
 	public static final Potion jump = new Potion(8, false, 7889559).setPotionName("potion.jump").setIconIndex(2, 1);
@@ -21,12 +26,12 @@
 	public static final Potion blindness = new Potion(15, true, 2039587).setPotionName("potion.blindness").setIconIndex(5, 1).setEffectiveness(0.25D);
 	public static final Potion nightVision = new Potion(16, false, 2039713).setPotionName("potion.nightVision").setIconIndex(4, 1);
 	public static final Potion hunger = new Potion(17, true, 5797459).setPotionName("potion.hunger").setIconIndex(1, 1);
-	public static final Potion weakness = new Potion(18, true, 4738376).setPotionName("potion.weakness").setIconIndex(5, 0);
+	public static final Potion weakness = new PotionAttackDamage(18, true, 4738376).setPotionName("potion.weakness").setIconIndex(5, 0).func_111184_a(SharedMonsterAttributes.field_111264_e, "22653B89-116E-49DC-9B6B-9971489B5BE5", 2.0D, 0);
 	public static final Potion poison = new Potion(19, true, 5149489).setPotionName("potion.poison").setIconIndex(6, 0).setEffectiveness(0.25D);
 	public static final Potion wither = new Potion(20, true, 3484199).setPotionName("potion.wither").setIconIndex(1, 2).setEffectiveness(0.25D);
-	public static final Potion field_76434_w = null;
-	public static final Potion field_76444_x = null;
-	public static final Potion field_76443_y = null;
+	public static final Potion field_76434_w = new PotionHealthBoost(21, false, 16284963).setPotionName("potion.healthBoost").setIconIndex(2, 2).func_111184_a(SharedMonsterAttributes.field_111267_a, "5D6F0BA2-1186-46AC-B896-C61C5CEE99CC", 4.0D, 0);
+	public static final Potion field_76444_x = new PotionAbsoption(22, false, 2445989).setPotionName("potion.absorption").setIconIndex(2, 2);
+	public static final Potion field_76443_y = new PotionHealth(23, false, 16262179).setPotionName("potion.saturation");
 	public static final Potion field_76442_z = null;
 	public static final Potion field_76409_A = null;
 	public static final Potion field_76410_B = null;
@@ -36,29 +41,30 @@
 	public static final Potion field_76407_F = null;
 	public static final Potion field_76408_G = null;
 	public final int id;
+	private final Map field_111188_I = Maps.newHashMap();
+	private final boolean isBadEffect;
+	private final int liquidColor;
 	private String name = "";
 	private int statusIconIndex = -1;
-	private final boolean isBadEffect;
 	private double effectiveness;
 	private boolean usable;
-	private final int liquidColor;
 	
-	protected Potion(int par1, boolean par2, int par3)
+	protected Potion(int p_i1573_1_, boolean p_i1573_2_, int p_i1573_3_)
 	{
-		id = par1;
-		potionTypes[par1] = this;
-		isBadEffect = par2;
-		if(par2)
+		id = p_i1573_1_;
+		potionTypes[p_i1573_1_] = this;
+		isBadEffect = p_i1573_2_;
+		if(p_i1573_2_)
 		{
 			effectiveness = 0.5D;
 		} else
 		{
 			effectiveness = 1.0D;
 		}
-		liquidColor = par3;
+		liquidColor = p_i1573_3_;
 	}
 	
-	public void affectEntity(EntityLiving par1EntityLiving, EntityLiving par2EntityLiving, int par3, double par4)
+	public void affectEntity(EntityLivingBase par1EntityLiving, EntityLivingBase par2EntityLiving, int par3, double par4)
 	{
 		int var6;
 		if((id != heal.id || par2EntityLiving.isEntityUndead()) && (id != harm.id || !par2EntityLiving.isEntityUndead()))
@@ -76,8 +82,55 @@
 			}
 		} else
 		{
-			var6 = (int) (par4 * (6 << par3) + 0.5D);
+			var6 = (int) (par4 * (4 << par3) + 0.5D);
 			par2EntityLiving.heal(var6);
+		}
+	}
+	
+	public double func_111183_a(int p_111183_1_, AttributeModifier p_111183_2_)
+	{
+		return p_111183_2_.func_111164_d() * (p_111183_1_ + 1);
+	}
+	
+	public Potion func_111184_a(Attribute p_111184_1_, String p_111184_2_, double p_111184_3_, int p_111184_5_)
+	{
+		AttributeModifier var6 = new AttributeModifier(UUID.fromString(p_111184_2_), getName(), p_111184_3_, p_111184_5_);
+		field_111188_I.put(p_111184_1_, var6);
+		return this;
+	}
+	
+	public void func_111185_a(EntityLivingBase p_111185_1_, BaseAttributeMap p_111185_2_, int p_111185_3_)
+	{
+		Iterator var4 = field_111188_I.entrySet().iterator();
+		while(var4.hasNext())
+		{
+			Entry var5 = (Entry) var4.next();
+			AttributeInstance var6 = p_111185_2_.func_111151_a((Attribute) var5.getKey());
+			if(var6 != null)
+			{
+				AttributeModifier var7 = (AttributeModifier) var5.getValue();
+				var6.func_111124_b(var7);
+				var6.func_111121_a(new AttributeModifier(var7.func_111167_a(), getName() + " " + p_111185_3_, func_111183_a(p_111185_3_, var7), var7.func_111169_c()));
+			}
+		}
+	}
+	
+	public Map func_111186_k()
+	{
+		return field_111188_I;
+	}
+	
+	public void func_111187_a(EntityLivingBase p_111187_1_, BaseAttributeMap p_111187_2_, int p_111187_3_)
+	{
+		Iterator var4 = field_111188_I.entrySet().iterator();
+		while(var4.hasNext())
+		{
+			Entry var5 = (Entry) var4.next();
+			AttributeInstance var6 = p_111187_2_.func_111151_a((Attribute) var5.getKey());
+			if(var6 != null)
+			{
+				var6.func_111124_b((AttributeModifier) var5.getValue());
+			}
 		}
 	}
 	
@@ -124,18 +177,19 @@
 	public boolean isReady(int par1, int par2)
 	{
 		int var3;
-		if(id != regeneration.id && id != poison.id)
+		if(id == regeneration.id)
 		{
-			if(id == wither.id)
-			{
-				var3 = 40 >> par2;
-				return var3 > 0 ? par1 % var3 == 0 : true;
-			} else return id == hunger.id;
-		} else
+			var3 = 50 >> par2;
+			return var3 > 0 ? par1 % var3 == 0 : true;
+		} else if(id == poison.id)
 		{
 			var3 = 25 >> par2;
 			return var3 > 0 ? par1 % var3 == 0 : true;
-		}
+		} else if(id == wither.id)
+		{
+			var3 = 40 >> par2;
+			return var3 > 0 ? par1 % var3 == 0 : true;
+		} else return id == hunger.id;
 	}
 	
 	public boolean isUsable()
@@ -143,26 +197,32 @@
 		return usable;
 	}
 	
-	public void performEffect(EntityLiving par1EntityLiving, int par2)
+	public void performEffect(EntityLivingBase par1EntityLiving, int par2)
 	{
 		if(id == regeneration.id)
 		{
-			if(par1EntityLiving.getHealth() < par1EntityLiving.getMaxHealth())
+			if(par1EntityLiving.func_110143_aJ() < par1EntityLiving.func_110138_aP())
 			{
-				par1EntityLiving.heal(1);
+				par1EntityLiving.heal(1.0F);
 			}
 		} else if(id == poison.id)
 		{
-			if(par1EntityLiving.getHealth() > 1)
+			if(par1EntityLiving.func_110143_aJ() > 1.0F)
 			{
-				par1EntityLiving.attackEntityFrom(DamageSource.magic, 1);
+				par1EntityLiving.attackEntityFrom(DamageSource.magic, 1.0F);
 			}
 		} else if(id == wither.id)
 		{
-			par1EntityLiving.attackEntityFrom(DamageSource.wither, 1);
+			par1EntityLiving.attackEntityFrom(DamageSource.wither, 1.0F);
 		} else if(id == hunger.id && par1EntityLiving instanceof EntityPlayer)
 		{
 			((EntityPlayer) par1EntityLiving).addExhaustion(0.025F * (par2 + 1));
+		} else if(id == field_76443_y.id && par1EntityLiving instanceof EntityPlayer)
+		{
+			if(!par1EntityLiving.worldObj.isRemote)
+			{
+				((EntityPlayer) par1EntityLiving).getFoodStats().addStats(par2 + 1, 1.0F);
+			}
 		} else if((id != heal.id || par1EntityLiving.isEntityUndead()) && (id != harm.id || !par1EntityLiving.isEntityUndead()))
 		{
 			if(id == harm.id && !par1EntityLiving.isEntityUndead() || id == heal.id && par1EntityLiving.isEntityUndead())
@@ -171,7 +231,7 @@
 			}
 		} else
 		{
-			par1EntityLiving.heal(6 << par2);
+			par1EntityLiving.heal(Math.max(4 << par2, 0));
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/PotionAbsoption.java b/RMCClient/minecraft/net/minecraft/src/PotionAbsoption.java
new file mode 100644
index 0000000..90516e4
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/PotionAbsoption.java
@@ -0,0 +1,21 @@
+package net.minecraft.src;
+
+public class PotionAbsoption extends Potion
+{
+	protected PotionAbsoption(int p_i1569_1_, boolean p_i1569_2_, int p_i1569_3_)
+	{
+		super(p_i1569_1_, p_i1569_2_, p_i1569_3_);
+	}
+	
+	@Override public void func_111185_a(EntityLivingBase p_111185_1_, BaseAttributeMap p_111185_2_, int p_111185_3_)
+	{
+		p_111185_1_.func_110149_m(p_111185_1_.func_110139_bj() + 4 * (p_111185_3_ + 1));
+		super.func_111185_a(p_111185_1_, p_111185_2_, p_111185_3_);
+	}
+	
+	@Override public void func_111187_a(EntityLivingBase p_111187_1_, BaseAttributeMap p_111187_2_, int p_111187_3_)
+	{
+		p_111187_1_.func_110149_m(p_111187_1_.func_110139_bj() - 4 * (p_111187_3_ + 1));
+		super.func_111187_a(p_111187_1_, p_111187_2_, p_111187_3_);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/PotionAttackDamage.java b/RMCClient/minecraft/net/minecraft/src/PotionAttackDamage.java
new file mode 100644
index 0000000..19339a1
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/PotionAttackDamage.java
@@ -0,0 +1,14 @@
+package net.minecraft.src;
+
+public class PotionAttackDamage extends Potion
+{
+	protected PotionAttackDamage(int p_i1570_1_, boolean p_i1570_2_, int p_i1570_3_)
+	{
+		super(p_i1570_1_, p_i1570_2_, p_i1570_3_);
+	}
+	
+	@Override public double func_111183_a(int p_111183_1_, AttributeModifier p_111183_2_)
+	{
+		return id == Potion.weakness.id ? (double) (-0.5F * (p_111183_1_ + 1)) : 1.3D * (p_111183_1_ + 1);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/PotionEffect.java b/RMCClient/minecraft/net/minecraft/src/PotionEffect.java
index ccdcde7..920a48d 100644
--- a/RMCClient/minecraft/net/minecraft/src/PotionEffect.java
+++ b/RMCClient/minecraft/net/minecraft/src/PotionEffect.java
@@ -9,29 +9,29 @@
 	private boolean isAmbient;
 	private boolean isPotionDurationMax;
 	
-	public PotionEffect(int par1, int par2)
+	public PotionEffect(int p_i1574_1_, int p_i1574_2_)
 	{
-		this(par1, par2, 0);
+		this(p_i1574_1_, p_i1574_2_, 0);
 	}
 	
-	public PotionEffect(int par1, int par2, int par3)
+	public PotionEffect(int p_i1575_1_, int p_i1575_2_, int p_i1575_3_)
 	{
-		this(par1, par2, par3, false);
+		this(p_i1575_1_, p_i1575_2_, p_i1575_3_, false);
 	}
 	
-	public PotionEffect(int par1, int par2, int par3, boolean par4)
+	public PotionEffect(int p_i1576_1_, int p_i1576_2_, int p_i1576_3_, boolean p_i1576_4_)
 	{
-		potionID = par1;
-		duration = par2;
-		amplifier = par3;
-		isAmbient = par4;
+		potionID = p_i1576_1_;
+		duration = p_i1576_2_;
+		amplifier = p_i1576_3_;
+		isAmbient = p_i1576_4_;
 	}
 	
-	public PotionEffect(PotionEffect par1PotionEffect)
+	public PotionEffect(PotionEffect p_i1577_1_)
 	{
-		potionID = par1PotionEffect.potionID;
-		duration = par1PotionEffect.duration;
-		amplifier = par1PotionEffect.amplifier;
+		potionID = p_i1577_1_.potionID;
+		duration = p_i1577_1_.duration;
+		amplifier = p_i1577_1_.amplifier;
 	}
 	
 	public void combine(PotionEffect par1PotionEffect)
@@ -103,12 +103,7 @@
 		return potionID;
 	}
 	
-	public boolean isSplashPotionEffect()
-	{
-		return isSplashPotion;
-	}
-	
-	public boolean onUpdate(EntityLiving par1EntityLiving)
+	public boolean onUpdate(EntityLivingBase par1EntityLiving)
 	{
 		if(duration > 0)
 		{
@@ -121,7 +116,7 @@
 		return duration > 0;
 	}
 	
-	public void performEffect(EntityLiving par1EntityLiving)
+	public void performEffect(EntityLivingBase par1EntityLiving)
 	{
 		if(duration > 0)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/PotionHealth.java b/RMCClient/minecraft/net/minecraft/src/PotionHealth.java
index efecb6a..0752efe 100644
--- a/RMCClient/minecraft/net/minecraft/src/PotionHealth.java
+++ b/RMCClient/minecraft/net/minecraft/src/PotionHealth.java
@@ -2,9 +2,9 @@
 
 public class PotionHealth extends Potion
 {
-	public PotionHealth(int par1, boolean par2, int par3)
+	public PotionHealth(int p_i1572_1_, boolean p_i1572_2_, int p_i1572_3_)
 	{
-		super(par1, par2, par3);
+		super(p_i1572_1_, p_i1572_2_, p_i1572_3_);
 	}
 	
 	@Override public boolean isInstant()
diff --git a/RMCClient/minecraft/net/minecraft/src/PotionHealthBoost.java b/RMCClient/minecraft/net/minecraft/src/PotionHealthBoost.java
new file mode 100644
index 0000000..4df844d
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/PotionHealthBoost.java
@@ -0,0 +1,18 @@
+package net.minecraft.src;
+
+public class PotionHealthBoost extends Potion
+{
+	public PotionHealthBoost(int p_i1571_1_, boolean p_i1571_2_, int p_i1571_3_)
+	{
+		super(p_i1571_1_, p_i1571_2_, p_i1571_3_);
+	}
+	
+	@Override public void func_111187_a(EntityLivingBase p_111187_1_, BaseAttributeMap p_111187_2_, int p_111187_3_)
+	{
+		super.func_111187_a(p_111187_1_, p_111187_2_, p_111187_3_);
+		if(p_111187_1_.func_110143_aJ() > p_111187_1_.func_110138_aP())
+		{
+			p_111187_1_.setEntityHealth(p_111187_1_.func_110138_aP());
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Profiler.java b/RMCClient/minecraft/net/minecraft/src/Profiler.java
index 81c8cbf..f4f9ada 100644
--- a/RMCClient/minecraft/net/minecraft/src/Profiler.java
+++ b/RMCClient/minecraft/net/minecraft/src/Profiler.java
@@ -11,7 +11,7 @@
 {
 	private final List sectionList = new ArrayList();
 	private final List timestampList = new ArrayList();
-	public boolean profilingEnabled = false;
+	public boolean profilingEnabled;
 	private String profilingSection = "";
 	private final Map profilingMap = new HashMap();
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ProfilerResult.java b/RMCClient/minecraft/net/minecraft/src/ProfilerResult.java
index 0a17672..0ec7b0d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ProfilerResult.java
+++ b/RMCClient/minecraft/net/minecraft/src/ProfilerResult.java
@@ -6,11 +6,11 @@
 	public double field_76330_b;
 	public String field_76331_c;
 	
-	public ProfilerResult(String par1Str, double par2, double par4)
+	public ProfilerResult(String p_i1554_1_, double p_i1554_2_, double p_i1554_4_)
 	{
-		field_76331_c = par1Str;
-		field_76332_a = par2;
-		field_76330_b = par4;
+		field_76331_c = p_i1554_1_;
+		field_76332_a = p_i1554_2_;
+		field_76330_b = p_i1554_4_;
 	}
 	
 	@Override public int compareTo(Object par1Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/PropertyManager.java b/RMCClient/minecraft/net/minecraft/src/PropertyManager.java
index d7833ac..345cf0d 100644
--- a/RMCClient/minecraft/net/minecraft/src/PropertyManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/PropertyManager.java
@@ -12,20 +12,20 @@
 	private final ILogAgent logger;
 	private final File associatedFile;
 	
-	public PropertyManager(File par1File, ILogAgent par2ILogAgent)
+	public PropertyManager(File p_i1502_1_, ILogAgent p_i1502_2_)
 	{
-		associatedFile = par1File;
-		logger = par2ILogAgent;
-		if(par1File.exists())
+		associatedFile = p_i1502_1_;
+		logger = p_i1502_2_;
+		if(p_i1502_1_.exists())
 		{
 			FileInputStream var3 = null;
 			try
 			{
-				var3 = new FileInputStream(par1File);
+				var3 = new FileInputStream(p_i1502_1_);
 				properties.load(var3);
 			} catch(Exception var13)
 			{
-				par2ILogAgent.logWarningException("Failed to load " + par1File, var13);
+				p_i1502_2_.logWarningException("Failed to load " + p_i1502_1_, var13);
 				logMessageAndSave();
 			} finally
 			{
@@ -42,7 +42,7 @@
 			}
 		} else
 		{
-			par2ILogAgent.logWarning(par1File + " does not exist");
+			p_i1502_2_.logWarning(p_i1502_1_ + " does not exist");
 			logMessageAndSave();
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RConConsoleSource.java b/RMCClient/minecraft/net/minecraft/src/RConConsoleSource.java
index 43eaaf8..088d7d6 100644
--- a/RMCClient/minecraft/net/minecraft/src/RConConsoleSource.java
+++ b/RMCClient/minecraft/net/minecraft/src/RConConsoleSource.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import net.minecraft.server.MinecraftServer;
+
 public class RConConsoleSource implements ICommandSender
 {
 	public static final RConConsoleSource consoleBuffer = new RConConsoleSource();
@@ -8,6 +10,11 @@
 	@Override public boolean canCommandSenderUseCommand(int par1, String par2Str)
 	{
 		return true;
+	}
+	
+	@Override public World func_130014_f_()
+	{
+		return MinecraftServer.getServer().func_130014_f_();
 	}
 	
 	public String getChatBuffer()
@@ -30,13 +37,8 @@
 		buffer.setLength(0);
 	}
 	
-	@Override public void sendChatToPlayer(String par1Str)
+	@Override public void sendChatToPlayer(ChatMessageComponent par1Str)
 	{
-		buffer.append(par1Str);
-	}
-	
-	@Override public String translateString(String par1Str, Object ... par2ArrayOfObj)
-	{
-		return StringTranslate.getInstance().translateKeyFormat(par1Str, par2ArrayOfObj);
+		buffer.append(par1Str.toString());
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RConOutputStream.java b/RMCClient/minecraft/net/minecraft/src/RConOutputStream.java
index 9ba700e..5a177c8 100644
--- a/RMCClient/minecraft/net/minecraft/src/RConOutputStream.java
+++ b/RMCClient/minecraft/net/minecraft/src/RConOutputStream.java
@@ -9,9 +9,9 @@
 	private ByteArrayOutputStream byteArrayOutput;
 	private DataOutputStream output;
 	
-	public RConOutputStream(int par1)
+	public RConOutputStream(int p_i1533_1_)
 	{
-		byteArrayOutput = new ByteArrayOutputStream(par1);
+		byteArrayOutput = new ByteArrayOutputStream(p_i1533_1_);
 		output = new DataOutputStream(byteArrayOutput);
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/RConThreadBase.java b/RMCClient/minecraft/net/minecraft/src/RConThreadBase.java
index 307894c..c1b4014 100644
--- a/RMCClient/minecraft/net/minecraft/src/RConThreadBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/RConThreadBase.java
@@ -9,16 +9,16 @@
 
 public abstract class RConThreadBase implements Runnable
 {
-	protected boolean running = false;
+	protected boolean running;
 	protected IServer server;
 	protected Thread rconThread;
 	protected int field_72615_d = 5;
 	protected List socketList = new ArrayList();
 	protected List serverSocketList = new ArrayList();
 	
-	RConThreadBase(IServer par1IServer)
+	RConThreadBase(IServer p_i1534_1_)
 	{
-		server = par1IServer;
+		server = p_i1534_1_;
 		if(server.isDebuggingEnabled())
 		{
 			logWarning("Debugging is enabled, performance maybe reduced!");
diff --git a/RMCClient/minecraft/net/minecraft/src/RConThreadClient.java b/RMCClient/minecraft/net/minecraft/src/RConThreadClient.java
index 23ffd4e..7495d7f 100644
--- a/RMCClient/minecraft/net/minecraft/src/RConThreadClient.java
+++ b/RMCClient/minecraft/net/minecraft/src/RConThreadClient.java
@@ -9,15 +9,15 @@
 
 public class RConThreadClient extends RConThreadBase
 {
-	private boolean loggedIn = false;
+	private boolean loggedIn;
 	private Socket clientSocket;
 	private byte[] buffer = new byte[1460];
 	private String rconPassword;
 	
-	RConThreadClient(IServer par1IServer, Socket par2Socket)
+	RConThreadClient(IServer p_i1537_1_, Socket p_i1537_2_)
 	{
-		super(par1IServer);
-		clientSocket = par2Socket;
+		super(p_i1537_1_);
+		clientSocket = p_i1537_2_;
 		try
 		{
 			clientSocket.setSoTimeout(0);
@@ -25,8 +25,8 @@
 		{
 			running = false;
 		}
-		rconPassword = par1IServer.getStringProperty("rcon.password", "");
-		logInfo("Rcon connection from: " + par2Socket.getInetAddress());
+		rconPassword = p_i1537_1_.getStringProperty("rcon.password", "");
+		logInfo("Rcon connection from: " + p_i1537_2_.getInetAddress());
 	}
 	
 	private void closeSocket()
@@ -135,10 +135,11 @@
 	{
 		ByteArrayOutputStream var4 = new ByteArrayOutputStream(1248);
 		DataOutputStream var5 = new DataOutputStream(var4);
-		var5.writeInt(Integer.reverseBytes(par3Str.length() + 10));
+		byte[] var6 = par3Str.getBytes("UTF-8");
+		var5.writeInt(Integer.reverseBytes(var6.length + 10));
 		var5.writeInt(Integer.reverseBytes(par1));
 		var5.writeInt(Integer.reverseBytes(par2));
-		var5.writeBytes(par3Str);
+		var5.write(var6);
 		var5.write(0);
 		var5.write(0);
 		clientSocket.getOutputStream().write(var4.toByteArray());
diff --git a/RMCClient/minecraft/net/minecraft/src/RConThreadMain.java b/RMCClient/minecraft/net/minecraft/src/RConThreadMain.java
index bcc080f..e1dd577 100644
--- a/RMCClient/minecraft/net/minecraft/src/RConThreadMain.java
+++ b/RMCClient/minecraft/net/minecraft/src/RConThreadMain.java
@@ -15,27 +15,27 @@
 	private int rconPort;
 	private int serverPort;
 	private String hostname;
-	private ServerSocket serverSocket = null;
+	private ServerSocket serverSocket;
 	private String rconPassword;
 	private Map clientThreads;
 	
-	public RConThreadMain(IServer par1IServer)
+	public RConThreadMain(IServer p_i1538_1_)
 	{
-		super(par1IServer);
-		rconPort = par1IServer.getIntProperty("rcon.port", 0);
-		rconPassword = par1IServer.getStringProperty("rcon.password", "");
-		hostname = par1IServer.getHostname();
-		serverPort = par1IServer.getPort();
+		super(p_i1538_1_);
+		rconPort = p_i1538_1_.getIntProperty("rcon.port", 0);
+		rconPassword = p_i1538_1_.getStringProperty("rcon.password", "");
+		hostname = p_i1538_1_.getHostname();
+		serverPort = p_i1538_1_.getPort();
 		if(0 == rconPort)
 		{
 			rconPort = serverPort + 10;
 			logInfo("Setting default rcon port to " + rconPort);
-			par1IServer.setProperty("rcon.port", Integer.valueOf(rconPort));
+			p_i1538_1_.setProperty("rcon.port", Integer.valueOf(rconPort));
 			if(0 == rconPassword.length())
 			{
-				par1IServer.setProperty("rcon.password", "");
+				p_i1538_1_.setProperty("rcon.password", "");
 			}
-			par1IServer.saveProperties();
+			p_i1538_1_.saveProperties();
 		}
 		if(0 == hostname.length())
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/RConThreadQuery.java b/RMCClient/minecraft/net/minecraft/src/RConThreadQuery.java
index f8e1b78..1883bb5 100644
--- a/RMCClient/minecraft/net/minecraft/src/RConThreadQuery.java
+++ b/RMCClient/minecraft/net/minecraft/src/RConThreadQuery.java
@@ -15,6 +15,8 @@
 import java.util.Map;
 import java.util.Map.Entry;
 
+import net.minecraft.server.MinecraftServer;
+
 public class RConThreadQuery extends RConThreadBase
 {
 	private long lastAuthCheckTime;
@@ -23,9 +25,9 @@
 	private int maxPlayers;
 	private String serverMotd;
 	private String worldName;
-	private DatagramSocket querySocket = null;
+	private DatagramSocket querySocket;
 	private byte[] buffer = new byte[1460];
-	private DatagramPacket incomingPacket = null;
+	private DatagramPacket incomingPacket;
 	private Map field_72644_p;
 	private String queryHostname;
 	private String serverHostname;
@@ -34,15 +36,15 @@
 	private RConOutputStream output;
 	private long lastQueryResponseTime;
 	
-	public RConThreadQuery(IServer par1IServer)
+	public RConThreadQuery(IServer p_i1536_1_)
 	{
-		super(par1IServer);
-		queryPort = par1IServer.getIntProperty("query.port", 0);
-		serverHostname = par1IServer.getHostname();
-		serverPort = par1IServer.getPort();
-		serverMotd = par1IServer.getServerMOTD();
-		maxPlayers = par1IServer.getMaxPlayers();
-		worldName = par1IServer.getFolderName();
+		super(p_i1536_1_);
+		queryPort = p_i1536_1_.getIntProperty("query.port", 0);
+		serverHostname = p_i1536_1_.getHostname();
+		serverPort = p_i1536_1_.getPort();
+		serverMotd = p_i1536_1_.getServerMOTD();
+		maxPlayers = p_i1536_1_.getMaxPlayers();
+		worldName = p_i1536_1_.getFolderName();
 		lastQueryResponseTime = 0L;
 		queryHostname = "0.0.0.0";
 		if(0 != serverHostname.length() && !queryHostname.equals(serverHostname))
@@ -57,16 +59,16 @@
 				queryHostname = var2.getHostAddress();
 			} catch(UnknownHostException var3)
 			{
-				logWarning("Unable to determine local host IP, please set server-ip in \'" + par1IServer.getSettingsFilename() + "\' : " + var3.getMessage());
+				logWarning("Unable to determine local host IP, please set server-ip in \'" + p_i1536_1_.getSettingsFilename() + "\' : " + var3.getMessage());
 			}
 		}
 		if(0 == queryPort)
 		{
 			queryPort = serverPort;
 			logInfo("Setting default query port to " + queryPort);
-			par1IServer.setProperty("query.port", Integer.valueOf(queryPort));
-			par1IServer.setProperty("debug", Boolean.valueOf(false));
-			par1IServer.saveProperties();
+			p_i1536_1_.setProperty("query.port", Integer.valueOf(queryPort));
+			p_i1536_1_.setProperty("debug", Boolean.valueOf(false));
+			p_i1536_1_.saveProperties();
 		}
 		field_72644_p = new HashMap();
 		output = new RConOutputStream(1460);
@@ -78,7 +80,7 @@
 	{
 		if(running)
 		{
-			long var1 = System.currentTimeMillis();
+			long var1 = MinecraftServer.func_130071_aq();
 			if(var1 >= lastAuthCheckTime + 30000L)
 			{
 				lastAuthCheckTime = var1;
@@ -97,7 +99,7 @@
 	
 	private byte[] createQueryResponse(DatagramPacket par1DatagramPacket) throws IOException
 	{
-		long var2 = System.currentTimeMillis();
+		long var2 = MinecraftServer.func_130071_aq();
 		if(var2 < lastQueryResponseTime + 5000L)
 		{
 			byte[] var7 = output.toByteArray();
@@ -229,7 +231,7 @@
 	@Override public void run()
 	{
 		logInfo("Query running on " + serverHostname + ":" + queryPort);
-		lastAuthCheckTime = System.currentTimeMillis();
+		lastAuthCheckTime = MinecraftServer.func_130071_aq();
 		incomingPacket = new DatagramPacket(buffer, buffer.length);
 		try
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/RConThreadQueryAuth.java b/RMCClient/minecraft/net/minecraft/src/RConThreadQueryAuth.java
index b30cfa7..604c2f0 100644
--- a/RMCClient/minecraft/net/minecraft/src/RConThreadQueryAuth.java
+++ b/RMCClient/minecraft/net/minecraft/src/RConThreadQueryAuth.java
@@ -13,11 +13,11 @@
 	private String requestIdAsString;
 	final RConThreadQuery queryThread;
 	
-	public RConThreadQueryAuth(RConThreadQuery par1RConThreadQuery, DatagramPacket par2DatagramPacket)
+	public RConThreadQueryAuth(RConThreadQuery p_i1535_1_, DatagramPacket p_i1535_2_)
 	{
-		queryThread = par1RConThreadQuery;
+		queryThread = p_i1535_1_;
 		timestamp = new Date().getTime();
-		byte[] var3 = par2DatagramPacket.getData();
+		byte[] var3 = p_i1535_2_.getData();
 		requestId = new byte[4];
 		requestId[0] = var3[3];
 		requestId[1] = var3[4];
diff --git a/RMCClient/minecraft/net/minecraft/src/RConUtils.java b/RMCClient/minecraft/net/minecraft/src/RConUtils.java
index d5d9ed8..41ffc45 100644
--- a/RMCClient/minecraft/net/minecraft/src/RConUtils.java
+++ b/RMCClient/minecraft/net/minecraft/src/RConUtils.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import java.io.UnsupportedEncodingException;
+
 public class RConUtils
 {
 	public static char[] hexDigits = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };
@@ -27,7 +29,14 @@
 		{
 			;
 		}
-		return new String(par0ArrayOfByte, par1, var4 - par1);
+		try
+		{
+			return new String(par0ArrayOfByte, par1, var4 - par1, "UTF-8");
+		} catch(UnsupportedEncodingException var6)
+		{
+			var6.printStackTrace();
+			return null;
+		}
 	}
 	
 	public static int getRemainingBytesAsLEInt(byte[] par0ArrayOfByte, int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/RandomPositionGenerator.java b/RMCClient/minecraft/net/minecraft/src/RandomPositionGenerator.java
index a5b8722..f059535 100644
--- a/RMCClient/minecraft/net/minecraft/src/RandomPositionGenerator.java
+++ b/RMCClient/minecraft/net/minecraft/src/RandomPositionGenerator.java
@@ -20,10 +20,10 @@
 		int var8 = 0;
 		float var9 = -99999.0F;
 		boolean var10;
-		if(par0EntityCreature.hasHome())
+		if(par0EntityCreature.func_110175_bO())
 		{
-			double var11 = par0EntityCreature.getHomePosition().getDistanceSquared(MathHelper.floor_double(par0EntityCreature.posX), MathHelper.floor_double(par0EntityCreature.posY), MathHelper.floor_double(par0EntityCreature.posZ)) + 4.0F;
-			double var13 = par0EntityCreature.getMaximumHomeDistance() + par1;
+			double var11 = par0EntityCreature.func_110172_bL().getDistanceSquared(MathHelper.floor_double(par0EntityCreature.posX), MathHelper.floor_double(par0EntityCreature.posY), MathHelper.floor_double(par0EntityCreature.posZ)) + 4.0F;
+			double var13 = par0EntityCreature.func_110174_bM() + par1;
 			var10 = var11 < var13 * var13;
 		} else
 		{
@@ -39,7 +39,7 @@
 				var12 += MathHelper.floor_double(par0EntityCreature.posX);
 				var17 += MathHelper.floor_double(par0EntityCreature.posY);
 				var14 += MathHelper.floor_double(par0EntityCreature.posZ);
-				if(!var10 || par0EntityCreature.isWithinHomeDistance(var12, var17, var14))
+				if(!var10 || par0EntityCreature.func_110176_b(var12, var17, var14))
 				{
 					float var15 = par0EntityCreature.getBlockPathWeight(var12, var17, var14);
 					if(var15 > var9)
diff --git a/RMCClient/minecraft/net/minecraft/src/RangedAttribute.java b/RMCClient/minecraft/net/minecraft/src/RangedAttribute.java
new file mode 100644
index 0000000..2cc010f
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/RangedAttribute.java
@@ -0,0 +1,42 @@
+package net.minecraft.src;
+
+public class RangedAttribute extends BaseAttribute
+{
+	private final double field_111120_a;
+	private final double field_111118_b;
+	private String field_111119_c;
+	
+	public RangedAttribute(String p_i1609_1_, double p_i1609_2_, double p_i1609_4_, double p_i1609_6_)
+	{
+		super(p_i1609_1_, p_i1609_2_);
+		field_111120_a = p_i1609_4_;
+		field_111118_b = p_i1609_6_;
+		if(p_i1609_4_ > p_i1609_6_) throw new IllegalArgumentException("Minimum value cannot be bigger than maximum value!");
+		else if(p_i1609_2_ < p_i1609_4_) throw new IllegalArgumentException("Default value cannot be lower than minimum value!");
+		else if(p_i1609_2_ > p_i1609_6_) throw new IllegalArgumentException("Default value cannot be bigger than maximum value!");
+	}
+	
+	@Override public double func_111109_a(double p_111109_1_)
+	{
+		if(p_111109_1_ < field_111120_a)
+		{
+			p_111109_1_ = field_111120_a;
+		}
+		if(p_111109_1_ > field_111118_b)
+		{
+			p_111109_1_ = field_111118_b;
+		}
+		return p_111109_1_;
+	}
+	
+	public String func_111116_f()
+	{
+		return field_111119_c;
+	}
+	
+	public RangedAttribute func_111117_a(String p_111117_1_)
+	{
+		field_111119_c = p_111117_1_;
+		return this;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/RecipeSorter.java b/RMCClient/minecraft/net/minecraft/src/RecipeSorter.java
index 5cce585..4bc5ffe 100644
--- a/RMCClient/minecraft/net/minecraft/src/RecipeSorter.java
+++ b/RMCClient/minecraft/net/minecraft/src/RecipeSorter.java
@@ -6,9 +6,9 @@
 {
 	final CraftingManager craftingManager;
 	
-	RecipeSorter(CraftingManager par1CraftingManager)
+	RecipeSorter(CraftingManager p_i1916_1_)
 	{
-		craftingManager = par1CraftingManager;
+		craftingManager = p_i1916_1_;
 	}
 	
 	@Override public int compare(Object par1Obj, Object par2Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/RecipesArmorDyes.java b/RMCClient/minecraft/net/minecraft/src/RecipesArmorDyes.java
index b17098b..4ef682c 100644
--- a/RMCClient/minecraft/net/minecraft/src/RecipesArmorDyes.java
+++ b/RMCClient/minecraft/net/minecraft/src/RecipesArmorDyes.java
@@ -42,7 +42,7 @@
 				} else
 				{
 					if(var8.itemID != Item.dyePowder.itemID) return null;
-					float[] var14 = EntitySheep.fleeceColorTable[BlockCloth.getBlockFromDye(var8.getItemDamage())];
+					float[] var14 = EntitySheep.fleeceColorTable[BlockColored.getBlockFromDye(var8.getItemDamage())];
 					int var16 = (int) (var14[0] * 255.0F);
 					int var15 = (int) (var14[1] * 255.0F);
 					var17 = (int) (var14[2] * 255.0F);
diff --git a/RMCClient/minecraft/net/minecraft/src/RecipesDyes.java b/RMCClient/minecraft/net/minecraft/src/RecipesDyes.java
index aeef1de..54ace12 100644
--- a/RMCClient/minecraft/net/minecraft/src/RecipesDyes.java
+++ b/RMCClient/minecraft/net/minecraft/src/RecipesDyes.java
@@ -4,9 +4,11 @@
 {
 	public void addRecipes(CraftingManager par1CraftingManager)
 	{
-		for(int var2 = 0; var2 < 16; ++var2)
+		int var2;
+		for(var2 = 0; var2 < 16; ++var2)
 		{
-			par1CraftingManager.addShapelessRecipe(new ItemStack(Block.cloth, 1, BlockCloth.getDyeFromBlock(var2)), new Object[] { new ItemStack(Item.dyePowder, 1, var2), new ItemStack(Item.itemsList[Block.cloth.blockID], 1, 0) });
+			par1CraftingManager.addShapelessRecipe(new ItemStack(Block.cloth, 1, BlockColored.getDyeFromBlock(var2)), new Object[] { new ItemStack(Item.dyePowder, 1, var2), new ItemStack(Item.itemsList[Block.cloth.blockID], 1, 0) });
+			par1CraftingManager.addRecipe(new ItemStack(Block.field_111039_cA, 8, BlockColored.getDyeFromBlock(var2)), new Object[] { "###", "#X#", "###", '#', new ItemStack(Block.field_111032_cD), 'X', new ItemStack(Item.dyePowder, 1, var2) });
 		}
 		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.dyePowder, 2, 11), new Object[] { Block.plantYellow });
 		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.dyePowder, 2, 1), new Object[] { Block.plantRed });
@@ -23,5 +25,9 @@
 		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.dyePowder, 2, 13), new Object[] { new ItemStack(Item.dyePowder, 1, 5), new ItemStack(Item.dyePowder, 1, 9) });
 		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.dyePowder, 3, 13), new Object[] { new ItemStack(Item.dyePowder, 1, 4), new ItemStack(Item.dyePowder, 1, 1), new ItemStack(Item.dyePowder, 1, 9) });
 		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.dyePowder, 4, 13), new Object[] { new ItemStack(Item.dyePowder, 1, 4), new ItemStack(Item.dyePowder, 1, 1), new ItemStack(Item.dyePowder, 1, 1), new ItemStack(Item.dyePowder, 1, 15) });
+		for(var2 = 0; var2 < 16; ++var2)
+		{
+			par1CraftingManager.addRecipe(new ItemStack(Block.field_111031_cC, 3, var2), new Object[] { "##", '#', new ItemStack(Block.cloth, 1, var2) });
+		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RecipesFood.java b/RMCClient/minecraft/net/minecraft/src/RecipesFood.java
index 1b276dc..4b059a1 100644
--- a/RMCClient/minecraft/net/minecraft/src/RecipesFood.java
+++ b/RMCClient/minecraft/net/minecraft/src/RecipesFood.java
@@ -11,7 +11,6 @@
 		par1CraftingManager.addRecipe(new ItemStack(Item.pumpkinSeeds, 4), new Object[] { "M", 'M', Block.pumpkin });
 		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.pumpkinPie), new Object[] { Block.pumpkin, Item.sugar, Item.egg });
 		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.fermentedSpiderEye), new Object[] { Item.spiderEye, Block.mushroomBrown, Item.sugar });
-		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.speckledMelon), new Object[] { Item.melon, Item.goldNugget });
 		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.blazePowder, 2), new Object[] { Item.blazeRod });
 		par1CraftingManager.addShapelessRecipe(new ItemStack(Item.magmaCream), new Object[] { Item.blazePowder, Item.slimeBall });
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RecipesIngots.java b/RMCClient/minecraft/net/minecraft/src/RecipesIngots.java
index 2317da7..184195f 100644
--- a/RMCClient/minecraft/net/minecraft/src/RecipesIngots.java
+++ b/RMCClient/minecraft/net/minecraft/src/RecipesIngots.java
@@ -6,7 +6,7 @@
 	
 	public RecipesIngots()
 	{
-		recipeItems = new Object[][] { { Block.blockGold, new ItemStack(Item.ingotGold, 9) }, { Block.blockIron, new ItemStack(Item.ingotIron, 9) }, { Block.blockDiamond, new ItemStack(Item.diamond, 9) }, { Block.blockEmerald, new ItemStack(Item.emerald, 9) }, { Block.blockLapis, new ItemStack(Item.dyePowder, 9, 4) }, { Block.blockRedstone, new ItemStack(Item.redstone, 9) } };
+		recipeItems = new Object[][] { { Block.blockGold, new ItemStack(Item.ingotGold, 9) }, { Block.blockIron, new ItemStack(Item.ingotIron, 9) }, { Block.blockDiamond, new ItemStack(Item.diamond, 9) }, { Block.blockEmerald, new ItemStack(Item.emerald, 9) }, { Block.blockLapis, new ItemStack(Item.dyePowder, 9, 4) }, { Block.blockRedstone, new ItemStack(Item.redstone, 9) }, { Block.field_111034_cE, new ItemStack(Item.coal, 9, 0) }, { Block.field_111038_cB, new ItemStack(Item.wheat, 9) } };
 	}
 	
 	public void addRecipes(CraftingManager par1CraftingManager)
diff --git a/RMCClient/minecraft/net/minecraft/src/Rect2i.java b/RMCClient/minecraft/net/minecraft/src/Rect2i.java
deleted file mode 100644
index aef3600..0000000
--- a/RMCClient/minecraft/net/minecraft/src/Rect2i.java
+++ /dev/null
@@ -1,54 +0,0 @@
-package net.minecraft.src;
-
-public class Rect2i
-{
-	private int rectX;
-	private int rectY;
-	private int rectWidth;
-	private int rectHeight;
-	
-	public Rect2i(int par1, int par2, int par3, int par4)
-	{
-		rectX = par1;
-		rectY = par2;
-		rectWidth = par3;
-		rectHeight = par4;
-	}
-	
-	public int getRectHeight()
-	{
-		return rectHeight;
-	}
-	
-	public int getRectWidth()
-	{
-		return rectWidth;
-	}
-	
-	public int getRectX()
-	{
-		return rectX;
-	}
-	
-	public int getRectY()
-	{
-		return rectY;
-	}
-	
-	public Rect2i intersection(Rect2i par1Rect2i)
-	{
-		int var2 = rectX;
-		int var3 = rectY;
-		int var4 = rectX + rectWidth;
-		int var5 = rectY + rectHeight;
-		int var6 = par1Rect2i.getRectX();
-		int var7 = par1Rect2i.getRectY();
-		int var8 = var6 + par1Rect2i.getRectWidth();
-		int var9 = var7 + par1Rect2i.getRectHeight();
-		rectX = Math.max(var2, var6);
-		rectY = Math.max(var3, var7);
-		rectWidth = Math.max(0, Math.min(var4, var8) - rectX);
-		rectHeight = Math.max(0, Math.min(var5, var9) - rectY);
-		return this;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/RedstoneUpdateInfo.java b/RMCClient/minecraft/net/minecraft/src/RedstoneUpdateInfo.java
index 17de3cc..1e02e81 100644
--- a/RMCClient/minecraft/net/minecraft/src/RedstoneUpdateInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/RedstoneUpdateInfo.java
@@ -7,11 +7,11 @@
 	int z;
 	long updateTime;
 	
-	public RedstoneUpdateInfo(int par1, int par2, int par3, long par4)
+	public RedstoneUpdateInfo(int p_i2231_1_, int p_i2231_2_, int p_i2231_3_, long p_i2231_4_)
 	{
-		x = par1;
-		y = par2;
-		z = par3;
-		updateTime = par4;
+		x = p_i2231_1_;
+		y = p_i2231_2_;
+		z = p_i2231_3_;
+		updateTime = p_i2231_4_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RegionFile.java b/RMCClient/minecraft/net/minecraft/src/RegionFile.java
index 5591fcd..bfba8c2 100644
--- a/RMCClient/minecraft/net/minecraft/src/RegionFile.java
+++ b/RMCClient/minecraft/net/minecraft/src/RegionFile.java
@@ -12,6 +12,8 @@
 import java.util.zip.GZIPInputStream;
 import java.util.zip.InflaterInputStream;
 
+import net.minecraft.server.MinecraftServer;
+
 public class RegionFile
 {
 	private static final byte[] emptySector = new byte[4096];
@@ -21,19 +23,19 @@
 	private final int[] chunkTimestamps = new int[1024];
 	private ArrayList sectorFree;
 	private int sizeDelta;
-	private long lastModified = 0L;
+	private long lastModified;
 	
-	public RegionFile(File par1File)
+	public RegionFile(File p_i2001_1_)
 	{
-		fileName = par1File;
+		fileName = p_i2001_1_;
 		sizeDelta = 0;
 		try
 		{
-			if(par1File.exists())
+			if(p_i2001_1_.exists())
 			{
-				lastModified = par1File.lastModified();
+				lastModified = p_i2001_1_.lastModified();
 			}
-			dataFile = new RandomAccessFile(par1File, "rw");
+			dataFile = new RandomAccessFile(p_i2001_1_, "rw");
 			int var2;
 			if(dataFile.length() < 4096L)
 			{
@@ -252,7 +254,7 @@
 					setOffset(par1, par2, var6 << 8 | var8);
 				}
 			}
-			setChunkTimestamp(par1, par2, (int) (System.currentTimeMillis() / 1000L));
+			setChunkTimestamp(par1, par2, (int) (MinecraftServer.func_130071_aq() / 1000L));
 		} catch(IOException var12)
 		{
 			var12.printStackTrace();
diff --git a/RMCClient/minecraft/net/minecraft/src/RegionFileChunkBuffer.java b/RMCClient/minecraft/net/minecraft/src/RegionFileChunkBuffer.java
index 497dd8b..fad356b 100644
--- a/RMCClient/minecraft/net/minecraft/src/RegionFileChunkBuffer.java
+++ b/RMCClient/minecraft/net/minecraft/src/RegionFileChunkBuffer.java
@@ -9,12 +9,12 @@
 	private int chunkZ;
 	final RegionFile regionFile;
 	
-	public RegionFileChunkBuffer(RegionFile par1RegionFile, int par2, int par3)
+	public RegionFileChunkBuffer(RegionFile p_i2000_1_, int p_i2000_2_, int p_i2000_3_)
 	{
 		super(8096);
-		regionFile = par1RegionFile;
-		chunkX = par2;
-		chunkZ = par3;
+		regionFile = p_i2000_1_;
+		chunkX = p_i2000_2_;
+		chunkZ = p_i2000_3_;
 	}
 	
 	@Override public void close() throws IOException
diff --git a/RMCClient/minecraft/net/minecraft/src/RegistryDefaulted.java b/RMCClient/minecraft/net/minecraft/src/RegistryDefaulted.java
index e28840d..5807de0 100644
--- a/RMCClient/minecraft/net/minecraft/src/RegistryDefaulted.java
+++ b/RMCClient/minecraft/net/minecraft/src/RegistryDefaulted.java
@@ -4,9 +4,9 @@
 {
 	private final Object defaultObject;
 	
-	public RegistryDefaulted(Object par1Obj)
+	public RegistryDefaulted(Object p_i1366_1_)
 	{
-		defaultObject = par1Obj;
+		defaultObject = p_i1366_1_;
 	}
 	
 	@Override public Object func_82594_a(Object par1Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/RegistrySimple.java b/RMCClient/minecraft/net/minecraft/src/RegistrySimple.java
index a7e073e..752b337 100644
--- a/RMCClient/minecraft/net/minecraft/src/RegistrySimple.java
+++ b/RMCClient/minecraft/net/minecraft/src/RegistrySimple.java
@@ -5,7 +5,12 @@
 
 public class RegistrySimple implements IRegistry
 {
-	protected final Map registryObjects = new HashMap();
+	protected final Map registryObjects = func_111054_a();
+	
+	protected HashMap func_111054_a()
+	{
+		return Maps.newHashMap();
+	}
 	
 	@Override public Object func_82594_a(Object par1Obj)
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/ReloadableResourceManager.java b/RMCClient/minecraft/net/minecraft/src/ReloadableResourceManager.java
new file mode 100644
index 0000000..b217c37
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ReloadableResourceManager.java
@@ -0,0 +1,10 @@
+package net.minecraft.src;
+
+import java.util.List;
+
+public interface ReloadableResourceManager extends ResourceManager
+{
+	void func_110541_a(List var1);
+	
+	void func_110542_a(ResourceManagerReloadListener var1);
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Render.java b/RMCClient/minecraft/net/minecraft/src/Render.java
index ce51de6..55b8114 100644
--- a/RMCClient/minecraft/net/minecraft/src/Render.java
+++ b/RMCClient/minecraft/net/minecraft/src/Render.java
@@ -4,10 +4,10 @@
 
 public abstract class Render
 {
+	private static final ResourceLocation field_110778_a = new ResourceLocation("textures/misc/shadow.png");
 	protected RenderManager renderManager;
-	private ModelBase modelBase = new ModelBiped();
 	protected RenderBlocks renderBlocks = new RenderBlocks();
-	protected float shadowSize = 0.0F;
+	protected float shadowSize;
 	protected float shadowOpaque = 1.0F;
 	
 	public abstract void doRender(Entity var1, double var2, double var4, double var6, float var8, float var9);
@@ -29,6 +29,18 @@
 		}
 	}
 	
+	protected abstract ResourceLocation func_110775_a(Entity var1);
+	
+	protected void func_110776_a(ResourceLocation p_110776_1_)
+	{
+		renderManager.renderEngine.func_110577_a(p_110776_1_);
+	}
+	
+	protected void func_110777_b(Entity p_110777_1_)
+	{
+		func_110776_a(func_110775_a(p_110777_1_));
+	}
+	
 	public FontRenderer getFontRendererFromRenderManager()
 	{
 		return renderManager.getFontRenderer();
@@ -37,23 +49,6 @@
 	private World getWorldFromRenderManager()
 	{
 		return renderManager.worldObj;
-	}
-	
-	protected boolean loadDownloadableImageTexture(String par1Str, String par2Str)
-	{
-		RenderEngine var3 = renderManager.renderEngine;
-		int var4 = var3.getTextureForDownloadableImage(par1Str, par2Str);
-		if(var4 >= 0)
-		{
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var4);
-			var3.resetBoundTexture();
-			return true;
-		} else return false;
-	}
-	
-	protected void loadTexture(String par1Str)
-	{
-		renderManager.renderEngine.bindTexture(par1Str);
 	}
 	
 	private void renderEntityOnFire(Entity par1Entity, double par2, double par4, double par6, float par8)
@@ -65,7 +60,6 @@
 		GL11.glTranslatef((float) par2, (float) par4, (float) par6);
 		float var11 = par1Entity.width * 1.4F;
 		GL11.glScalef(var11, var11, var11);
-		loadTexture("/terrain.png");
 		Tessellator var12 = Tessellator.instance;
 		float var13 = 0.5F;
 		float var14 = 0.0F;
@@ -79,14 +73,8 @@
 		var12.startDrawingQuads();
 		while(var15 > 0.0F)
 		{
-			Icon var19;
-			if(var18 % 2 == 0)
-			{
-				var19 = var9;
-			} else
-			{
-				var19 = var10;
-			}
+			Icon var19 = var18 % 2 == 0 ? var9 : var10;
+			func_110776_a(TextureMap.field_110575_b);
 			float var20 = var19.getMinU();
 			float var21 = var19.getMinV();
 			float var22 = var19.getMaxU();
@@ -116,7 +104,7 @@
 	{
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-		renderManager.renderEngine.bindTexture("%clamp%/misc/shadow.png");
+		renderManager.renderEngine.func_110577_a(field_110778_a);
 		World var10 = getWorldFromRenderManager();
 		GL11.glDepthMask(false);
 		float var11 = shadowSize;
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderArrow.java b/RMCClient/minecraft/net/minecraft/src/RenderArrow.java
index 265c192..784f449 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderArrow.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderArrow.java
@@ -5,14 +5,26 @@
 
 public class RenderArrow extends Render
 {
+	private static final ResourceLocation field_110780_a = new ResourceLocation("textures/entity/arrow.png");
+	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
 	{
 		renderArrow((EntityArrow) par1Entity, par2, par4, par6, par8, par9);
 	}
 	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110779_a((EntityArrow) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110779_a(EntityArrow p_110779_1_)
+	{
+		return field_110780_a;
+	}
+	
 	public void renderArrow(EntityArrow par1EntityArrow, double par2, double par4, double par6, float par8, float par9)
 	{
-		loadTexture("/item/arrows.png");
+		func_110777_b(par1EntityArrow);
 		GL11.glPushMatrix();
 		GL11.glTranslatef((float) par2, (float) par4, (float) par6);
 		GL11.glRotatef(par1EntityArrow.prevRotationYaw + (par1EntityArrow.rotationYaw - par1EntityArrow.prevRotationYaw) * par9 - 90.0F, 0.0F, 1.0F, 0.0F);
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderBat.java b/RMCClient/minecraft/net/minecraft/src/RenderBat.java
index 083ec38..72f4488 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderBat.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderBat.java
@@ -4,6 +4,7 @@
 
 public class RenderBat extends RenderLiving
 {
+	private static final ResourceLocation field_110835_a = new ResourceLocation("textures/entity/bat.png");
 	private int renderedBatSize;
 	
 	public RenderBat()
@@ -20,6 +21,21 @@
 	@Override public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
 	{
 		func_82443_a((EntityBat) par1EntityLiving, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110834_a((EntityBat) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110834_a(EntityBat p_110834_1_)
+	{
+		return field_110835_a;
+	}
+	
+	@Override public void func_130000_a(EntityLivingBase p_130000_1_, double p_130000_2_, double p_130000_4_, double p_130000_6_, float p_130000_8_, float p_130000_9_)
+	{
+		func_82443_a((EntityBat) p_130000_1_, p_130000_2_, p_130000_4_, p_130000_6_, p_130000_8_, p_130000_9_);
 	}
 	
 	protected void func_82442_a(EntityBat par1EntityBat, float par2)
@@ -55,17 +71,17 @@
 		super.renderLivingAt(par1EntityBat, par2, par4, par6);
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		func_82442_a((EntityBat) par1EntityLiving, par2);
 	}
 	
-	@Override protected void renderLivingAt(EntityLiving par1EntityLiving, double par2, double par4, double par6)
+	@Override protected void renderLivingAt(EntityLivingBase par1EntityLiving, double par2, double par4, double par6)
 	{
 		func_82445_a((EntityBat) par1EntityLiving, par2, par4, par6);
 	}
 	
-	@Override protected void rotateCorpse(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override protected void rotateCorpse(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		func_82444_a((EntityBat) par1EntityLiving, par2, par3, par4);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderBiped.java b/RMCClient/minecraft/net/minecraft/src/RenderBiped.java
index d7a9196..770937c 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderBiped.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderBiped.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import java.util.Map;
+
 import org.lwjgl.opengl.GL11;
 
 public class RenderBiped extends RenderLiving
@@ -8,18 +10,19 @@
 	protected float field_77070_b;
 	protected ModelBiped field_82423_g;
 	protected ModelBiped field_82425_h;
-	private static final String[] bipedArmorFilenamePrefix = new String[] { "cloth", "chain", "iron", "diamond", "gold" };
+	private static final Map field_110859_k = Maps.newHashMap();
+	private static final String[] bipedArmorFilenamePrefix = new String[] { "leather", "chainmail", "iron", "diamond", "gold" };
 	
-	public RenderBiped(ModelBiped par1ModelBiped, float par2)
+	public RenderBiped(ModelBiped p_i1257_1_, float p_i1257_2_)
 	{
-		this(par1ModelBiped, par2, 1.0F);
+		this(p_i1257_1_, p_i1257_2_, 1.0F);
 	}
 	
-	public RenderBiped(ModelBiped par1ModelBiped, float par2, float par3)
+	public RenderBiped(ModelBiped p_i1258_1_, float p_i1258_2_, float p_i1258_3_)
 	{
-		super(par1ModelBiped, par2);
-		modelBipedMain = par1ModelBiped;
-		field_77070_b = par3;
+		super(p_i1258_1_, p_i1258_2_);
+		modelBipedMain = p_i1258_1_;
+		field_77070_b = p_i1258_3_;
 		func_82421_b();
 	}
 	
@@ -35,7 +38,7 @@
 		ItemStack var11 = par1EntityLiving.getHeldItem();
 		func_82420_a(par1EntityLiving, var11);
 		double var12 = par4 - par1EntityLiving.yOffset;
-		if(par1EntityLiving.isSneaking() && !(par1EntityLiving instanceof EntityPlayerSP))
+		if(par1EntityLiving.isSneaking())
 		{
 			var12 -= 0.125D;
 		}
@@ -45,46 +48,23 @@
 		field_82423_g.heldItemRight = field_82425_h.heldItemRight = modelBipedMain.heldItemRight = 0;
 	}
 	
-	@Override protected void func_82408_c(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
 	{
-		ItemStack var4 = par1EntityLiving.getCurrentArmor(3 - par2);
-		if(var4 != null)
-		{
-			Item var5 = var4.getItem();
-			if(var5 instanceof ItemArmor)
-			{
-				ItemArmor var6 = (ItemArmor) var5;
-				loadTexture("/armor/" + bipedArmorFilenamePrefix[var6.renderIndex] + "_" + (par2 == 2 ? 2 : 1) + "_b.png");
-				float var7 = 1.0F;
-				GL11.glColor3f(var7, var7, var7);
-			}
-		}
+		return func_110856_a((EntityLiving) p_110775_1_);
 	}
 	
-	protected void func_82420_a(EntityLiving par1EntityLiving, ItemStack par2ItemStack)
+	protected ResourceLocation func_110856_a(EntityLiving p_110856_1_)
 	{
-		field_82423_g.heldItemRight = field_82425_h.heldItemRight = modelBipedMain.heldItemRight = par2ItemStack != null ? 1 : 0;
-		field_82423_g.isSneak = field_82425_h.isSneak = modelBipedMain.isSneak = par1EntityLiving.isSneaking();
+		return null;
 	}
 	
-	protected void func_82421_b()
-	{
-		field_82423_g = new ModelBiped(1.0F);
-		field_82425_h = new ModelBiped(0.5F);
-	}
-	
-	protected void func_82422_c()
-	{
-		GL11.glTranslatef(0.0F, 0.1875F, 0.0F);
-	}
-	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
+	protected void func_130005_c(EntityLiving p_130005_1_, float p_130005_2_)
 	{
 		float var3 = 1.0F;
 		GL11.glColor3f(var3, var3, var3);
-		super.renderEquippedItems(par1EntityLiving, par2);
-		ItemStack var4 = par1EntityLiving.getHeldItem();
-		ItemStack var5 = par1EntityLiving.getCurrentArmor(3);
+		super.renderEquippedItems(p_130005_1_, p_130005_2_);
+		ItemStack var4 = p_130005_1_.getHeldItem();
+		ItemStack var5 = p_130005_1_.func_130225_q(3);
 		float var6;
 		if(var5 != null)
 		{
@@ -99,7 +79,7 @@
 					GL11.glRotatef(90.0F, 0.0F, 1.0F, 0.0F);
 					GL11.glScalef(var6, -var6, -var6);
 				}
-				renderManager.itemRenderer.renderItem(par1EntityLiving, var5, 0);
+				renderManager.itemRenderer.renderItem(p_130005_1_, var5, 0);
 			} else if(var5.getItem().itemID == Item.skull.itemID)
 			{
 				var6 = 1.0625F;
@@ -162,46 +142,37 @@
 				GL11.glRotatef(-90.0F, 1.0F, 0.0F, 0.0F);
 				GL11.glRotatef(20.0F, 0.0F, 0.0F, 1.0F);
 			}
-			renderManager.itemRenderer.renderItem(par1EntityLiving, var4, 0);
+			renderManager.itemRenderer.renderItem(p_130005_1_, var4, 0);
 			if(var4.getItem().requiresMultipleRenderPasses())
 			{
-				renderManager.itemRenderer.renderItem(par1EntityLiving, var4, 1);
+				renderManager.itemRenderer.renderItem(p_130005_1_, var4, 1);
 			}
 			GL11.glPopMatrix();
 		}
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	protected int func_130006_a(EntityLiving p_130006_1_, int p_130006_2_, float p_130006_3_)
 	{
-		ItemStack var4 = par1EntityLiving.getCurrentArmor(3 - par2);
+		ItemStack var4 = p_130006_1_.func_130225_q(3 - p_130006_2_);
 		if(var4 != null)
 		{
 			Item var5 = var4.getItem();
 			if(var5 instanceof ItemArmor)
 			{
 				ItemArmor var6 = (ItemArmor) var5;
-				loadTexture("/armor/" + bipedArmorFilenamePrefix[var6.renderIndex] + "_" + (par2 == 2 ? 2 : 1) + ".png");
-				ModelBiped var7 = par2 == 2 ? field_82425_h : field_82423_g;
-				var7.bipedHead.showModel = par2 == 0;
-				var7.bipedHeadwear.showModel = par2 == 0;
-				var7.bipedBody.showModel = par2 == 1 || par2 == 2;
-				var7.bipedRightArm.showModel = par2 == 1;
-				var7.bipedLeftArm.showModel = par2 == 1;
-				var7.bipedRightLeg.showModel = par2 == 2 || par2 == 3;
-				var7.bipedLeftLeg.showModel = par2 == 2 || par2 == 3;
+				func_110776_a(func_110857_a(var6, p_130006_2_));
+				ModelBiped var7 = p_130006_2_ == 2 ? field_82425_h : field_82423_g;
+				var7.bipedHead.showModel = p_130006_2_ == 0;
+				var7.bipedHeadwear.showModel = p_130006_2_ == 0;
+				var7.bipedBody.showModel = p_130006_2_ == 1 || p_130006_2_ == 2;
+				var7.bipedRightArm.showModel = p_130006_2_ == 1;
+				var7.bipedLeftArm.showModel = p_130006_2_ == 1;
+				var7.bipedRightLeg.showModel = p_130006_2_ == 2 || p_130006_2_ == 3;
+				var7.bipedLeftLeg.showModel = p_130006_2_ == 2 || p_130006_2_ == 3;
 				setRenderPassModel(var7);
-				if(var7 != null)
-				{
-					var7.onGround = mainModel.onGround;
-				}
-				if(var7 != null)
-				{
-					var7.isRiding = mainModel.isRiding;
-				}
-				if(var7 != null)
-				{
-					var7.isChild = mainModel.isChild;
-				}
+				var7.onGround = mainModel.onGround;
+				var7.isRiding = mainModel.isRiding;
+				var7.isChild = mainModel.isChild;
 				float var8 = 1.0F;
 				if(var6.getArmorMaterial() == EnumArmorMaterial.CLOTH)
 				{
@@ -220,4 +191,73 @@
 		}
 		return -1;
 	}
+	
+	protected void func_130013_c(EntityLiving p_130013_1_, int p_130013_2_, float p_130013_3_)
+	{
+		ItemStack var4 = p_130013_1_.func_130225_q(3 - p_130013_2_);
+		if(var4 != null)
+		{
+			Item var5 = var4.getItem();
+			if(var5 instanceof ItemArmor)
+			{
+				func_110776_a(func_110858_a((ItemArmor) var5, p_130013_2_, "overlay"));
+				float var6 = 1.0F;
+				GL11.glColor3f(var6, var6, var6);
+			}
+		}
+	}
+	
+	protected void func_82420_a(EntityLiving par1EntityLiving, ItemStack par2ItemStack)
+	{
+		field_82423_g.heldItemRight = field_82425_h.heldItemRight = modelBipedMain.heldItemRight = par2ItemStack != null ? 1 : 0;
+		field_82423_g.isSneak = field_82425_h.isSneak = modelBipedMain.isSneak = par1EntityLiving.isSneaking();
+	}
+	
+	protected void func_82421_b()
+	{
+		field_82423_g = new ModelBiped(1.0F);
+		field_82425_h = new ModelBiped(0.5F);
+	}
+	
+	protected void func_82422_c()
+	{
+		GL11.glTranslatef(0.0F, 0.1875F, 0.0F);
+	}
+	
+	protected void func_82439_b(EntityLivingBase par1EntityPlayer, int par2, float par3)
+	{
+		func_130013_c((EntityLiving) par1EntityPlayer, par2, par3);
+	}
+	
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
+	{
+		func_130005_c((EntityLiving) par1EntityLiving, par2);
+	}
+	
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		doRenderLiving((EntityLiving) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
+	{
+		return func_130006_a((EntityLiving) par1EntityLiving, par2, par3);
+	}
+	
+	public static ResourceLocation func_110857_a(ItemArmor p_110857_0_, int p_110857_1_)
+	{
+		return func_110858_a(p_110857_0_, p_110857_1_, (String) null);
+	}
+	
+	public static ResourceLocation func_110858_a(ItemArmor p_110858_0_, int p_110858_1_, String p_110858_2_)
+	{
+		String var3 = String.format("textures/models/armor/%s_layer_%d%s.png", new Object[] { bipedArmorFilenamePrefix[p_110858_0_.renderIndex], Integer.valueOf(p_110858_1_ == 2 ? 2 : 1), p_110858_2_ == null ? "" : String.format("_%s", new Object[] { p_110858_2_ }) });
+		ResourceLocation var4 = (ResourceLocation) field_110859_k.get(var3);
+		if(var4 == null)
+		{
+			var4 = new ResourceLocation(var3);
+			field_110859_k.put(var3, var4);
+		}
+		return var4;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderBlaze.java b/RMCClient/minecraft/net/minecraft/src/RenderBlaze.java
index 902cd94..5786fbf 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderBlaze.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderBlaze.java
@@ -2,6 +2,7 @@
 
 public class RenderBlaze extends RenderLiving
 {
+	private static final ResourceLocation field_110837_a = new ResourceLocation("textures/entity/blaze.png");
 	private int field_77068_a;
 	
 	public RenderBlaze()
@@ -20,6 +21,16 @@
 		renderBlaze((EntityBlaze) par1EntityLiving, par2, par4, par6, par8, par9);
 	}
 	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110836_a((EntityBlaze) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110836_a(EntityBlaze p_110836_1_)
+	{
+		return field_110837_a;
+	}
+	
 	public void renderBlaze(EntityBlaze par1EntityBlaze, double par2, double par4, double par6, float par8, float par9)
 	{
 		int var10 = ((ModelBlaze) mainModel).func_78104_a();
@@ -30,4 +41,9 @@
 		}
 		super.doRenderLiving(par1EntityBlaze, par2, par4, par6, par8, par9);
 	}
+	
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		renderBlaze((EntityBlaze) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderBlocks.java b/RMCClient/minecraft/net/minecraft/src/RenderBlocks.java
index e5026e9..edf8789 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderBlocks.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderBlocks.java
@@ -8,9 +8,9 @@
 public class RenderBlocks
 {
 	public IBlockAccess blockAccess;
-	private Icon overrideBlockTexture = null;
-	private boolean flipTexture = false;
-	private boolean renderAllFaces = false;
+	private Icon overrideBlockTexture;
+	private boolean flipTexture;
+	private boolean renderAllFaces;
 	public static boolean fancyGrass = true;
 	public boolean useInventoryTint = true;
 	private double renderMinX;
@@ -19,15 +19,15 @@
 	private double renderMaxY;
 	private double renderMinZ;
 	private double renderMaxZ;
-	private boolean lockBlockBounds = false;
-	private boolean partialRenderBounds = false;
+	private boolean lockBlockBounds;
+	private boolean partialRenderBounds;
 	private final Minecraft minecraftRB;
-	private int uvRotateEast = 0;
-	private int uvRotateWest = 0;
-	private int uvRotateSouth = 0;
-	private int uvRotateNorth = 0;
-	private int uvRotateTop = 0;
-	private int uvRotateBottom = 0;
+	private int uvRotateEast;
+	private int uvRotateWest;
+	private int uvRotateSouth;
+	private int uvRotateNorth;
+	private int uvRotateTop;
+	private int uvRotateBottom;
 	private boolean enableAO;
 	private float aoLightValueScratchXYZNNN;
 	private float aoLightValueScratchXYNN;
@@ -91,9 +91,9 @@
 		minecraftRB = Minecraft.getMinecraft();
 	}
 	
-	public RenderBlocks(IBlockAccess par1IBlockAccess)
+	public RenderBlocks(IBlockAccess p_i1251_1_)
 	{
-		blockAccess = par1IBlockAccess;
+		blockAccess = p_i1251_1_;
 		minecraftRB = Minecraft.getMinecraft();
 	}
 	
@@ -923,7 +923,11 @@
 	
 	public Icon getIconSafe(Icon par1Icon)
 	{
-		return par1Icon == null ? minecraftRB.renderEngine.getMissingIcon(0) : par1Icon;
+		if(par1Icon == null)
+		{
+			par1Icon = ((TextureMap) Minecraft.getMinecraft().func_110434_K().func_110581_b(TextureMap.field_110575_b)).func_110572_b("missingno");
+		}
+		return par1Icon;
 	}
 	
 	public boolean hasOverrideBlockTexture()
@@ -1422,7 +1426,7 @@
 			} else if(var6 == 35)
 			{
 				GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
-				renderBlockAnvilOrient((BlockAnvil) par1Block, 0, 0, 0, par2, true);
+				renderBlockAnvilOrient((BlockAnvil) par1Block, 0, 0, 0, par2 << 2, true);
 				GL11.glTranslatef(0.5F, 0.5F, 0.5F);
 			} else if(var6 == 34)
 			{
@@ -1435,7 +1439,7 @@
 					} else if(var14 == 1)
 					{
 						setRenderBounds(0.1875D, 0.1875D, 0.1875D, 0.8125D, 0.875D, 0.8125D);
-						setOverrideBlockTexture(Block.beacon.getBeaconIcon());
+						setOverrideBlockTexture(this.getBlockIcon(Block.beacon));
 					} else if(var14 == 2)
 					{
 						setRenderBounds(0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 1.0D);
@@ -1529,15 +1533,17 @@
 	private boolean renderBlockBeacon(BlockBeacon par1BlockBeacon, int par2, int par3, int par4)
 	{
 		float var5 = 0.1875F;
-		setOverrideBlockTexture(this.getBlockIcon(Block.obsidian));
-		setRenderBounds(0.125D, 0.0062500000931322575D, 0.125D, 0.875D, var5, 0.875D);
-		renderStandardBlock(par1BlockBeacon, par2, par3, par4);
 		setOverrideBlockTexture(this.getBlockIcon(Block.glass));
 		setRenderBounds(0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 1.0D);
 		renderStandardBlock(par1BlockBeacon, par2, par3, par4);
-		setOverrideBlockTexture(par1BlockBeacon.getBeaconIcon());
+		renderAllFaces = true;
+		setOverrideBlockTexture(this.getBlockIcon(Block.obsidian));
+		setRenderBounds(0.125D, 0.0062500000931322575D, 0.125D, 0.875D, var5, 0.875D);
+		renderStandardBlock(par1BlockBeacon, par2, par3, par4);
+		setOverrideBlockTexture(this.getBlockIcon(Block.beacon));
 		setRenderBounds(0.1875D, var5, 0.1875D, 0.8125D, 0.875D, 0.8125D);
 		renderStandardBlock(par1BlockBeacon, par2, par3, par4);
+		renderAllFaces = false;
 		clearOverrideBlockTexture();
 		return true;
 	}
@@ -1672,12 +1678,14 @@
 		setRenderBounds(0.4375D, 0.0D, 0.4375D, 0.5625D, 0.875D, 0.5625D);
 		renderStandardBlock(par1BlockBrewingStand, par2, par3, par4);
 		setOverrideBlockTexture(par1BlockBrewingStand.getBrewingStandIcon());
+		renderAllFaces = true;
 		setRenderBounds(0.5625D, 0.0D, 0.3125D, 0.9375D, 0.125D, 0.6875D);
 		renderStandardBlock(par1BlockBrewingStand, par2, par3, par4);
 		setRenderBounds(0.125D, 0.0D, 0.0625D, 0.5D, 0.125D, 0.4375D);
 		renderStandardBlock(par1BlockBrewingStand, par2, par3, par4);
 		setRenderBounds(0.125D, 0.0D, 0.5625D, 0.5D, 0.125D, 0.9375D);
 		renderStandardBlock(par1BlockBrewingStand, par2, par3, par4);
+		renderAllFaces = false;
 		clearOverrideBlockTexture();
 		Tessellator var5 = Tessellator.instance;
 		var5.setBrightness(par1BlockBrewingStand.getMixedBrightnessForBlock(blockAccess, par2, par3, par4));
@@ -1781,58 +1789,35 @@
 		float var24 = var12 * par7;
 		float var25 = var13 * par7;
 		float var26 = 0.0625F;
-		int var28 = par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4);
+		int var27 = par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4);
 		if(renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2, par3 - 1, par4, 0))
 		{
-			var8.setBrightness(renderMinY > 0.0D ? var28 : par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3 - 1, par4));
+			var8.setBrightness(renderMinY > 0.0D ? var27 : par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3 - 1, par4));
 			var8.setColorOpaque_F(var14, var18, var22);
 			renderFaceYNeg(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 0));
-			var9 = true;
 		}
 		if(renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2, par3 + 1, par4, 1))
 		{
-			var8.setBrightness(renderMaxY < 1.0D ? var28 : par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3 + 1, par4));
+			var8.setBrightness(renderMaxY < 1.0D ? var27 : par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3 + 1, par4));
 			var8.setColorOpaque_F(var15, var19, var23);
 			renderFaceYPos(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 1));
-			var9 = true;
 		}
-		if(renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2, par3, par4 - 1, 2))
-		{
-			var8.setBrightness(renderMinZ > 0.0D ? var28 : par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4 - 1));
-			var8.setColorOpaque_F(var16, var20, var24);
-			var8.addTranslation(0.0F, 0.0F, var26);
-			renderFaceZNeg(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 2));
-			var8.addTranslation(0.0F, 0.0F, -var26);
-			var9 = true;
-		}
-		if(renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2, par3, par4 + 1, 3))
-		{
-			var8.setBrightness(renderMaxZ < 1.0D ? var28 : par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4 + 1));
-			var8.setColorOpaque_F(var16, var20, var24);
-			var8.addTranslation(0.0F, 0.0F, -var26);
-			renderFaceZPos(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 3));
-			var8.addTranslation(0.0F, 0.0F, var26);
-			var9 = true;
-		}
-		if(renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2 - 1, par3, par4, 4))
-		{
-			var8.setBrightness(renderMinX > 0.0D ? var28 : par1Block.getMixedBrightnessForBlock(blockAccess, par2 - 1, par3, par4));
-			var8.setColorOpaque_F(var17, var21, var25);
-			var8.addTranslation(var26, 0.0F, 0.0F);
-			renderFaceXNeg(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 4));
-			var8.addTranslation(-var26, 0.0F, 0.0F);
-			var9 = true;
-		}
-		if(renderAllFaces || par1Block.shouldSideBeRendered(blockAccess, par2 + 1, par3, par4, 5))
-		{
-			var8.setBrightness(renderMaxX < 1.0D ? var28 : par1Block.getMixedBrightnessForBlock(blockAccess, par2 + 1, par3, par4));
-			var8.setColorOpaque_F(var17, var21, var25);
-			var8.addTranslation(-var26, 0.0F, 0.0F);
-			renderFaceXPos(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 5));
-			var8.addTranslation(var26, 0.0F, 0.0F);
-			var9 = true;
-		}
-		return var9;
+		var8.setBrightness(var27);
+		var8.setColorOpaque_F(var16, var20, var24);
+		var8.addTranslation(0.0F, 0.0F, var26);
+		renderFaceZNeg(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 2));
+		var8.addTranslation(0.0F, 0.0F, -var26);
+		var8.addTranslation(0.0F, 0.0F, -var26);
+		renderFaceZPos(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 3));
+		var8.addTranslation(0.0F, 0.0F, var26);
+		var8.setColorOpaque_F(var17, var21, var25);
+		var8.addTranslation(var26, 0.0F, 0.0F);
+		renderFaceXNeg(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 4));
+		var8.addTranslation(-var26, 0.0F, 0.0F);
+		var8.addTranslation(-var26, 0.0F, 0.0F);
+		renderFaceXPos(par1Block, par2, par3, par4, this.getBlockIcon(par1Block, blockAccess, par2, par3, par4, 5));
+		var8.addTranslation(var26, 0.0F, 0.0F);
+		return true;
 	}
 	
 	private boolean renderBlockCauldron(BlockCauldron par1BlockCauldron, int par2, int par3, int par4)
@@ -1862,13 +1847,13 @@
 		renderFaceXNeg(par1BlockCauldron, par2 + 1.0F - var12, par3, par4, var16);
 		renderFaceZPos(par1BlockCauldron, par2, par3, par4 - 1.0F + var12, var16);
 		renderFaceZNeg(par1BlockCauldron, par2, par3, par4 + 1.0F - var12, var16);
-		Icon var17 = BlockCauldron.func_94375_b("cauldron_inner");
+		Icon var17 = BlockCauldron.func_94375_b("inner");
 		renderFaceYPos(par1BlockCauldron, par2, par3 - 1.0F + 0.25F, par4, var17);
 		renderFaceYNeg(par1BlockCauldron, par2, par3 + 1.0F - 0.75F, par4, var17);
 		int var14 = blockAccess.getBlockMetadata(par2, par3, par4);
 		if(var14 > 0)
 		{
-			Icon var15 = BlockFluid.func_94424_b("water");
+			Icon var15 = BlockFluid.func_94424_b("water_still");
 			if(var14 > 3)
 			{
 				var14 = 3;
@@ -2394,8 +2379,18 @@
 			{
 				uvRotateTop = 1;
 			}
+			float var19;
+			float var21;
+			float var20;
 			if(var8 == 3)
 			{
+				var15 = 0.0F;
+				var16 = 0.125F;
+				var17 = 0.875F;
+				var18 = 1.0F;
+				var19 = 0.5625F;
+				var20 = 0.8125F;
+				var21 = 0.9375F;
 				setRenderBounds(0.8125D, var9, 0.0D, 0.9375D, var12, 0.125D);
 				renderStandardBlock(par1BlockFenceGate, par2, par3, par4);
 				setRenderBounds(0.8125D, var9, 0.875D, 0.9375D, var12, 1.0D);
@@ -2410,6 +2405,13 @@
 				renderStandardBlock(par1BlockFenceGate, par2, par3, par4);
 			} else if(var8 == 1)
 			{
+				var15 = 0.0F;
+				var16 = 0.125F;
+				var17 = 0.875F;
+				var18 = 1.0F;
+				var19 = 0.0625F;
+				var20 = 0.1875F;
+				var21 = 0.4375F;
 				setRenderBounds(0.0625D, var9, 0.0D, 0.1875D, var12, 0.125D);
 				renderStandardBlock(par1BlockFenceGate, par2, par3, par4);
 				setRenderBounds(0.0625D, var9, 0.875D, 0.1875D, var12, 1.0D);
@@ -2424,6 +2426,13 @@
 				renderStandardBlock(par1BlockFenceGate, par2, par3, par4);
 			} else if(var8 == 0)
 			{
+				var15 = 0.0F;
+				var16 = 0.125F;
+				var17 = 0.875F;
+				var18 = 1.0F;
+				var19 = 0.5625F;
+				var20 = 0.8125F;
+				var21 = 0.9375F;
 				setRenderBounds(0.0D, var9, 0.8125D, 0.125D, var12, 0.9375D);
 				renderStandardBlock(par1BlockFenceGate, par2, par3, par4);
 				setRenderBounds(0.875D, var9, 0.8125D, 1.0D, var12, 0.9375D);
@@ -2438,6 +2447,13 @@
 				renderStandardBlock(par1BlockFenceGate, par2, par3, par4);
 			} else if(var8 == 2)
 			{
+				var15 = 0.0F;
+				var16 = 0.125F;
+				var17 = 0.875F;
+				var18 = 1.0F;
+				var19 = 0.0625F;
+				var20 = 0.1875F;
+				var21 = 0.4375F;
 				setRenderBounds(0.0D, var9, 0.0625D, 0.125D, var12, 0.1875D);
 				renderStandardBlock(par1BlockFenceGate, par2, par3, par4);
 				setRenderBounds(0.875D, var9, 0.0625D, 1.0D, var12, 0.1875D);
@@ -2827,6 +2843,7 @@
 			double var28 = getFluidHeight(par2 + 1, par3, par4 + 1, var22);
 			double var30 = getFluidHeight(par2 + 1, par3, par4, var22);
 			double var32 = 0.0010000000474974513D;
+			float var54;
 			float var53;
 			float var52;
 			if(renderAllFaces || var10)
@@ -2864,6 +2881,7 @@
 				{
 					var52 = MathHelper.sin(var35) * 0.25F;
 					var53 = MathHelper.cos(var35) * 0.25F;
+					var54 = 8.0F;
 					var36 = var34.getInterpolatedU(8.0F + (-var53 - var52) * 16.0F);
 					var44 = var34.getInterpolatedV(8.0F + (-var53 + var52) * 16.0F);
 					var38 = var34.getInterpolatedU(8.0F + (-var53 + var52) * 16.0F);
@@ -2955,7 +2973,7 @@
 					float var51 = var60.getInterpolatedU(0.0D);
 					var52 = var60.getInterpolatedU(8.0D);
 					var53 = var60.getInterpolatedV((1.0D - var39) * 16.0D * 0.5D);
-					float var54 = var60.getInterpolatedV((1.0D - var41) * 16.0D * 0.5D);
+					var54 = var60.getInterpolatedV((1.0D - var41) * 16.0D * 0.5D);
 					float var55 = var60.getInterpolatedV(8.0D);
 					var5.setBrightness(par1Block.getMixedBrightnessForBlock(blockAccess, var59, par3, var37));
 					float var56 = 1.0F;
@@ -3057,7 +3075,7 @@
 			}
 			var7.setColorOpaque_F(var11 * var13, var11 * var14, var11 * var15);
 		}
-		Icon var24 = BlockHopper.getHopperIcon("hopper");
+		Icon var24 = BlockHopper.getHopperIcon("hopper_outside");
 		Icon var25 = BlockHopper.getHopperIcon("hopper_inside");
 		var13 = 0.125F;
 		if(par6)
@@ -3556,384 +3574,381 @@
 		var6.setColorOpaque_F(var7 * var9, var7 * var10, var7 * var11);
 		Icon var64;
 		Icon var65;
-		int var66;
 		if(hasOverrideBlockTexture())
 		{
 			var64 = overrideBlockTexture;
 			var65 = overrideBlockTexture;
 		} else
 		{
-			var66 = blockAccess.getBlockMetadata(par2, par3, par4);
+			int var66 = blockAccess.getBlockMetadata(par2, par3, par4);
 			var64 = getBlockIconFromSideAndMetadata(par1BlockPane, 0, var66);
 			var65 = par1BlockPane.getSideTextureIndex();
 		}
-		var66 = var64.getOriginX();
-		int var15 = var64.getOriginY();
-		double var16 = var64.getMinU();
-		double var18 = var64.getInterpolatedU(8.0D);
-		double var20 = var64.getMaxU();
-		double var22 = var64.getMinV();
-		double var24 = var64.getMaxV();
-		int var26 = var65.getOriginX();
-		int var27 = var65.getOriginY();
-		double var28 = var65.getInterpolatedU(7.0D);
-		double var30 = var65.getInterpolatedU(9.0D);
-		double var32 = var65.getMinV();
-		double var34 = var65.getInterpolatedV(8.0D);
-		double var36 = var65.getMaxV();
-		double var38 = par2;
-		double var40 = par2 + 0.5D;
-		double var42 = par2 + 1;
-		double var44 = par4;
-		double var46 = par4 + 0.5D;
-		double var48 = par4 + 1;
-		double var50 = par2 + 0.5D - 0.0625D;
-		double var52 = par2 + 0.5D + 0.0625D;
-		double var54 = par4 + 0.5D - 0.0625D;
-		double var56 = par4 + 0.5D + 0.0625D;
-		boolean var58 = par1BlockPane.canThisPaneConnectToThisBlockID(blockAccess.getBlockId(par2, par3, par4 - 1));
-		boolean var59 = par1BlockPane.canThisPaneConnectToThisBlockID(blockAccess.getBlockId(par2, par3, par4 + 1));
-		boolean var60 = par1BlockPane.canThisPaneConnectToThisBlockID(blockAccess.getBlockId(par2 - 1, par3, par4));
-		boolean var61 = par1BlockPane.canThisPaneConnectToThisBlockID(blockAccess.getBlockId(par2 + 1, par3, par4));
-		boolean var62 = par1BlockPane.shouldSideBeRendered(blockAccess, par2, par3 + 1, par4, 1);
-		boolean var63 = par1BlockPane.shouldSideBeRendered(blockAccess, par2, par3 - 1, par4, 0);
-		if((!var60 || !var61) && (var60 || var61 || var58 || var59))
+		double var67 = var64.getMinU();
+		double var16 = var64.getInterpolatedU(8.0D);
+		double var18 = var64.getMaxU();
+		double var20 = var64.getMinV();
+		double var22 = var64.getMaxV();
+		double var24 = var65.getInterpolatedU(7.0D);
+		double var26 = var65.getInterpolatedU(9.0D);
+		double var28 = var65.getMinV();
+		double var30 = var65.getInterpolatedV(8.0D);
+		double var32 = var65.getMaxV();
+		double var34 = par2;
+		double var36 = par2 + 0.5D;
+		double var38 = par2 + 1;
+		double var40 = par4;
+		double var42 = par4 + 0.5D;
+		double var44 = par4 + 1;
+		double var46 = par2 + 0.5D - 0.0625D;
+		double var48 = par2 + 0.5D + 0.0625D;
+		double var50 = par4 + 0.5D - 0.0625D;
+		double var52 = par4 + 0.5D + 0.0625D;
+		boolean var54 = par1BlockPane.canThisPaneConnectToThisBlockID(blockAccess.getBlockId(par2, par3, par4 - 1));
+		boolean var55 = par1BlockPane.canThisPaneConnectToThisBlockID(blockAccess.getBlockId(par2, par3, par4 + 1));
+		boolean var56 = par1BlockPane.canThisPaneConnectToThisBlockID(blockAccess.getBlockId(par2 - 1, par3, par4));
+		boolean var57 = par1BlockPane.canThisPaneConnectToThisBlockID(blockAccess.getBlockId(par2 + 1, par3, par4));
+		boolean var58 = par1BlockPane.shouldSideBeRendered(blockAccess, par2, par3 + 1, par4, 1);
+		boolean var59 = par1BlockPane.shouldSideBeRendered(blockAccess, par2, par3 - 1, par4, 0);
+		double var60 = 0.01D;
+		double var62 = 0.005D;
+		if((!var56 || !var57) && (var56 || var57 || var54 || var55))
 		{
-			if(var60 && !var61)
+			if(var56 && !var57)
 			{
-				var6.addVertexWithUV(var38, par3 + 1, var46, var16, var22);
-				var6.addVertexWithUV(var38, par3 + 0, var46, var16, var24);
-				var6.addVertexWithUV(var40, par3 + 0, var46, var18, var24);
-				var6.addVertexWithUV(var40, par3 + 1, var46, var18, var22);
-				var6.addVertexWithUV(var40, par3 + 1, var46, var16, var22);
-				var6.addVertexWithUV(var40, par3 + 0, var46, var16, var24);
-				var6.addVertexWithUV(var38, par3 + 0, var46, var18, var24);
-				var6.addVertexWithUV(var38, par3 + 1, var46, var18, var22);
-				if(!var59 && !var58)
+				var6.addVertexWithUV(var34, par3 + 1, var42, var67, var20);
+				var6.addVertexWithUV(var34, par3 + 0, var42, var67, var22);
+				var6.addVertexWithUV(var36, par3 + 0, var42, var16, var22);
+				var6.addVertexWithUV(var36, par3 + 1, var42, var16, var20);
+				var6.addVertexWithUV(var36, par3 + 1, var42, var67, var20);
+				var6.addVertexWithUV(var36, par3 + 0, var42, var67, var22);
+				var6.addVertexWithUV(var34, par3 + 0, var42, var16, var22);
+				var6.addVertexWithUV(var34, par3 + 1, var42, var16, var20);
+				if(!var55 && !var54)
 				{
-					var6.addVertexWithUV(var40, par3 + 1, var56, var28, var32);
-					var6.addVertexWithUV(var40, par3 + 0, var56, var28, var36);
-					var6.addVertexWithUV(var40, par3 + 0, var54, var30, var36);
-					var6.addVertexWithUV(var40, par3 + 1, var54, var30, var32);
-					var6.addVertexWithUV(var40, par3 + 1, var54, var28, var32);
-					var6.addVertexWithUV(var40, par3 + 0, var54, var28, var36);
-					var6.addVertexWithUV(var40, par3 + 0, var56, var30, var36);
-					var6.addVertexWithUV(var40, par3 + 1, var56, var30, var32);
+					var6.addVertexWithUV(var36, par3 + 1, var52, var24, var28);
+					var6.addVertexWithUV(var36, par3 + 0, var52, var24, var32);
+					var6.addVertexWithUV(var36, par3 + 0, var50, var26, var32);
+					var6.addVertexWithUV(var36, par3 + 1, var50, var26, var28);
+					var6.addVertexWithUV(var36, par3 + 1, var50, var24, var28);
+					var6.addVertexWithUV(var36, par3 + 0, var50, var24, var32);
+					var6.addVertexWithUV(var36, par3 + 0, var52, var26, var32);
+					var6.addVertexWithUV(var36, par3 + 1, var52, var26, var28);
 				}
-				if(var62 || par3 < var5 - 1 && blockAccess.isAirBlock(par2 - 1, par3 + 1, par4))
+				if(var58 || par3 < var5 - 1 && blockAccess.isAirBlock(par2 - 1, par3 + 1, par4))
 				{
-					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var56, var30, var36);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var54, var28, var36);
-					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var56, var30, var36);
-					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var54, var28, var36);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var54, var28, var34);
+					var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var52, var26, var32);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var50, var24, var32);
+					var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var52, var26, var32);
+					var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var50, var24, var32);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var50, var24, var30);
 				}
-				if(var63 || par3 > 1 && blockAccess.isAirBlock(par2 - 1, par3 - 1, par4))
+				if(var59 || par3 > 1 && blockAccess.isAirBlock(par2 - 1, par3 - 1, par4))
 				{
-					var6.addVertexWithUV(var38, par3 - 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var56, var30, var36);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var54, var28, var36);
-					var6.addVertexWithUV(var38, par3 - 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var38, par3 - 0.01D, var56, var30, var36);
-					var6.addVertexWithUV(var38, par3 - 0.01D, var54, var28, var36);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var54, var28, var34);
+					var6.addVertexWithUV(var34, par3 - 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var52, var26, var32);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var50, var24, var32);
+					var6.addVertexWithUV(var34, par3 - 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var34, par3 - 0.01D, var52, var26, var32);
+					var6.addVertexWithUV(var34, par3 - 0.01D, var50, var24, var32);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var50, var24, var30);
 				}
-			} else if(!var60 && var61)
+			} else if(!var56 && var57)
 			{
-				var6.addVertexWithUV(var40, par3 + 1, var46, var18, var22);
-				var6.addVertexWithUV(var40, par3 + 0, var46, var18, var24);
-				var6.addVertexWithUV(var42, par3 + 0, var46, var20, var24);
-				var6.addVertexWithUV(var42, par3 + 1, var46, var20, var22);
-				var6.addVertexWithUV(var42, par3 + 1, var46, var18, var22);
-				var6.addVertexWithUV(var42, par3 + 0, var46, var18, var24);
-				var6.addVertexWithUV(var40, par3 + 0, var46, var20, var24);
-				var6.addVertexWithUV(var40, par3 + 1, var46, var20, var22);
-				if(!var59 && !var58)
+				var6.addVertexWithUV(var36, par3 + 1, var42, var16, var20);
+				var6.addVertexWithUV(var36, par3 + 0, var42, var16, var22);
+				var6.addVertexWithUV(var38, par3 + 0, var42, var18, var22);
+				var6.addVertexWithUV(var38, par3 + 1, var42, var18, var20);
+				var6.addVertexWithUV(var38, par3 + 1, var42, var16, var20);
+				var6.addVertexWithUV(var38, par3 + 0, var42, var16, var22);
+				var6.addVertexWithUV(var36, par3 + 0, var42, var18, var22);
+				var6.addVertexWithUV(var36, par3 + 1, var42, var18, var20);
+				if(!var55 && !var54)
 				{
-					var6.addVertexWithUV(var40, par3 + 1, var54, var28, var32);
-					var6.addVertexWithUV(var40, par3 + 0, var54, var28, var36);
-					var6.addVertexWithUV(var40, par3 + 0, var56, var30, var36);
-					var6.addVertexWithUV(var40, par3 + 1, var56, var30, var32);
-					var6.addVertexWithUV(var40, par3 + 1, var56, var28, var32);
-					var6.addVertexWithUV(var40, par3 + 0, var56, var28, var36);
-					var6.addVertexWithUV(var40, par3 + 0, var54, var30, var36);
-					var6.addVertexWithUV(var40, par3 + 1, var54, var30, var32);
+					var6.addVertexWithUV(var36, par3 + 1, var50, var24, var28);
+					var6.addVertexWithUV(var36, par3 + 0, var50, var24, var32);
+					var6.addVertexWithUV(var36, par3 + 0, var52, var26, var32);
+					var6.addVertexWithUV(var36, par3 + 1, var52, var26, var28);
+					var6.addVertexWithUV(var36, par3 + 1, var52, var24, var28);
+					var6.addVertexWithUV(var36, par3 + 0, var52, var24, var32);
+					var6.addVertexWithUV(var36, par3 + 0, var50, var26, var32);
+					var6.addVertexWithUV(var36, par3 + 1, var50, var26, var28);
 				}
-				if(var62 || par3 < var5 - 1 && blockAccess.isAirBlock(par2 + 1, par3 + 1, par4))
+				if(var58 || par3 < var5 - 1 && blockAccess.isAirBlock(par2 + 1, par3 + 1, par4))
 				{
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var56, var30, var32);
-					var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var54, var28, var32);
-					var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var56, var30, var32);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var54, var28, var32);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var52, var26, var28);
+					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var50, var24, var28);
+					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var52, var26, var28);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var50, var24, var28);
 				}
-				if(var63 || par3 > 1 && blockAccess.isAirBlock(par2 + 1, par3 - 1, par4))
+				if(var59 || par3 > 1 && blockAccess.isAirBlock(par2 + 1, par3 - 1, par4))
 				{
-					var6.addVertexWithUV(var40, par3 - 0.01D, var56, var30, var32);
-					var6.addVertexWithUV(var42, par3 - 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var42, par3 - 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var54, var28, var32);
-					var6.addVertexWithUV(var42, par3 - 0.01D, var56, var30, var32);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var42, par3 - 0.01D, var54, var28, var32);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var52, var26, var28);
+					var6.addVertexWithUV(var38, par3 - 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var38, par3 - 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var50, var24, var28);
+					var6.addVertexWithUV(var38, par3 - 0.01D, var52, var26, var28);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var38, par3 - 0.01D, var50, var24, var28);
 				}
 			}
 		} else
 		{
-			var6.addVertexWithUV(var38, par3 + 1, var46, var16, var22);
-			var6.addVertexWithUV(var38, par3 + 0, var46, var16, var24);
-			var6.addVertexWithUV(var42, par3 + 0, var46, var20, var24);
-			var6.addVertexWithUV(var42, par3 + 1, var46, var20, var22);
-			var6.addVertexWithUV(var42, par3 + 1, var46, var16, var22);
-			var6.addVertexWithUV(var42, par3 + 0, var46, var16, var24);
-			var6.addVertexWithUV(var38, par3 + 0, var46, var20, var24);
-			var6.addVertexWithUV(var38, par3 + 1, var46, var20, var22);
-			if(var62)
+			var6.addVertexWithUV(var34, par3 + 1, var42, var67, var20);
+			var6.addVertexWithUV(var34, par3 + 0, var42, var67, var22);
+			var6.addVertexWithUV(var38, par3 + 0, var42, var18, var22);
+			var6.addVertexWithUV(var38, par3 + 1, var42, var18, var20);
+			var6.addVertexWithUV(var38, par3 + 1, var42, var67, var20);
+			var6.addVertexWithUV(var38, par3 + 0, var42, var67, var22);
+			var6.addVertexWithUV(var34, par3 + 0, var42, var18, var22);
+			var6.addVertexWithUV(var34, par3 + 1, var42, var18, var20);
+			if(var58)
 			{
-				var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var56, var30, var36);
-				var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var56, var30, var32);
-				var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var54, var28, var32);
-				var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var54, var28, var36);
-				var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var56, var30, var36);
-				var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var56, var30, var32);
-				var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var54, var28, var32);
-				var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var54, var28, var36);
+				var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var52, var26, var32);
+				var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var52, var26, var28);
+				var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var50, var24, var28);
+				var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var50, var24, var32);
+				var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var52, var26, var32);
+				var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var52, var26, var28);
+				var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var50, var24, var28);
+				var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var50, var24, var32);
 			} else
 			{
 				if(par3 < var5 - 1 && blockAccess.isAirBlock(par2 - 1, par3 + 1, par4))
 				{
-					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var56, var30, var36);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var54, var28, var36);
-					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var56, var30, var36);
-					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var54, var28, var36);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var54, var28, var34);
+					var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var52, var26, var32);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var50, var24, var32);
+					var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var52, var26, var32);
+					var6.addVertexWithUV(var34, par3 + 1 + 0.01D, var50, var24, var32);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var50, var24, var30);
 				}
 				if(par3 < var5 - 1 && blockAccess.isAirBlock(par2 + 1, par3 + 1, par4))
 				{
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var56, var30, var32);
-					var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var54, var28, var32);
-					var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var56, var30, var32);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var40, par3 + 1 + 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var42, par3 + 1 + 0.01D, var54, var28, var32);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var52, var26, var28);
+					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var50, var24, var28);
+					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var52, var26, var28);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var36, par3 + 1 + 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var38, par3 + 1 + 0.01D, var50, var24, var28);
 				}
 			}
-			if(var63)
+			if(var59)
 			{
-				var6.addVertexWithUV(var38, par3 - 0.01D, var56, var30, var36);
-				var6.addVertexWithUV(var42, par3 - 0.01D, var56, var30, var32);
-				var6.addVertexWithUV(var42, par3 - 0.01D, var54, var28, var32);
-				var6.addVertexWithUV(var38, par3 - 0.01D, var54, var28, var36);
-				var6.addVertexWithUV(var42, par3 - 0.01D, var56, var30, var36);
-				var6.addVertexWithUV(var38, par3 - 0.01D, var56, var30, var32);
-				var6.addVertexWithUV(var38, par3 - 0.01D, var54, var28, var32);
-				var6.addVertexWithUV(var42, par3 - 0.01D, var54, var28, var36);
+				var6.addVertexWithUV(var34, par3 - 0.01D, var52, var26, var32);
+				var6.addVertexWithUV(var38, par3 - 0.01D, var52, var26, var28);
+				var6.addVertexWithUV(var38, par3 - 0.01D, var50, var24, var28);
+				var6.addVertexWithUV(var34, par3 - 0.01D, var50, var24, var32);
+				var6.addVertexWithUV(var38, par3 - 0.01D, var52, var26, var32);
+				var6.addVertexWithUV(var34, par3 - 0.01D, var52, var26, var28);
+				var6.addVertexWithUV(var34, par3 - 0.01D, var50, var24, var28);
+				var6.addVertexWithUV(var38, par3 - 0.01D, var50, var24, var32);
 			} else
 			{
 				if(par3 > 1 && blockAccess.isAirBlock(par2 - 1, par3 - 1, par4))
 				{
-					var6.addVertexWithUV(var38, par3 - 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var56, var30, var36);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var54, var28, var36);
-					var6.addVertexWithUV(var38, par3 - 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var38, par3 - 0.01D, var56, var30, var36);
-					var6.addVertexWithUV(var38, par3 - 0.01D, var54, var28, var36);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var54, var28, var34);
+					var6.addVertexWithUV(var34, par3 - 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var52, var26, var32);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var50, var24, var32);
+					var6.addVertexWithUV(var34, par3 - 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var34, par3 - 0.01D, var52, var26, var32);
+					var6.addVertexWithUV(var34, par3 - 0.01D, var50, var24, var32);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var50, var24, var30);
 				}
 				if(par3 > 1 && blockAccess.isAirBlock(par2 + 1, par3 - 1, par4))
 				{
-					var6.addVertexWithUV(var40, par3 - 0.01D, var56, var30, var32);
-					var6.addVertexWithUV(var42, par3 - 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var42, par3 - 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var54, var28, var32);
-					var6.addVertexWithUV(var42, par3 - 0.01D, var56, var30, var32);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var56, var30, var34);
-					var6.addVertexWithUV(var40, par3 - 0.01D, var54, var28, var34);
-					var6.addVertexWithUV(var42, par3 - 0.01D, var54, var28, var32);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var52, var26, var28);
+					var6.addVertexWithUV(var38, par3 - 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var38, par3 - 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var50, var24, var28);
+					var6.addVertexWithUV(var38, par3 - 0.01D, var52, var26, var28);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var52, var26, var30);
+					var6.addVertexWithUV(var36, par3 - 0.01D, var50, var24, var30);
+					var6.addVertexWithUV(var38, par3 - 0.01D, var50, var24, var28);
 				}
 			}
 		}
-		if((!var58 || !var59) && (var60 || var61 || var58 || var59))
+		if((!var54 || !var55) && (var56 || var57 || var54 || var55))
 		{
-			if(var58 && !var59)
+			if(var54 && !var55)
 			{
-				var6.addVertexWithUV(var40, par3 + 1, var44, var16, var22);
-				var6.addVertexWithUV(var40, par3 + 0, var44, var16, var24);
-				var6.addVertexWithUV(var40, par3 + 0, var46, var18, var24);
-				var6.addVertexWithUV(var40, par3 + 1, var46, var18, var22);
-				var6.addVertexWithUV(var40, par3 + 1, var46, var16, var22);
-				var6.addVertexWithUV(var40, par3 + 0, var46, var16, var24);
-				var6.addVertexWithUV(var40, par3 + 0, var44, var18, var24);
-				var6.addVertexWithUV(var40, par3 + 1, var44, var18, var22);
-				if(!var61 && !var60)
+				var6.addVertexWithUV(var36, par3 + 1, var40, var67, var20);
+				var6.addVertexWithUV(var36, par3 + 0, var40, var67, var22);
+				var6.addVertexWithUV(var36, par3 + 0, var42, var16, var22);
+				var6.addVertexWithUV(var36, par3 + 1, var42, var16, var20);
+				var6.addVertexWithUV(var36, par3 + 1, var42, var67, var20);
+				var6.addVertexWithUV(var36, par3 + 0, var42, var67, var22);
+				var6.addVertexWithUV(var36, par3 + 0, var40, var16, var22);
+				var6.addVertexWithUV(var36, par3 + 1, var40, var16, var20);
+				if(!var57 && !var56)
 				{
-					var6.addVertexWithUV(var50, par3 + 1, var46, var28, var32);
-					var6.addVertexWithUV(var50, par3 + 0, var46, var28, var36);
-					var6.addVertexWithUV(var52, par3 + 0, var46, var30, var36);
-					var6.addVertexWithUV(var52, par3 + 1, var46, var30, var32);
-					var6.addVertexWithUV(var52, par3 + 1, var46, var28, var32);
-					var6.addVertexWithUV(var52, par3 + 0, var46, var28, var36);
-					var6.addVertexWithUV(var50, par3 + 0, var46, var30, var36);
-					var6.addVertexWithUV(var50, par3 + 1, var46, var30, var32);
+					var6.addVertexWithUV(var46, par3 + 1, var42, var24, var28);
+					var6.addVertexWithUV(var46, par3 + 0, var42, var24, var32);
+					var6.addVertexWithUV(var48, par3 + 0, var42, var26, var32);
+					var6.addVertexWithUV(var48, par3 + 1, var42, var26, var28);
+					var6.addVertexWithUV(var48, par3 + 1, var42, var24, var28);
+					var6.addVertexWithUV(var48, par3 + 0, var42, var24, var32);
+					var6.addVertexWithUV(var46, par3 + 0, var42, var26, var32);
+					var6.addVertexWithUV(var46, par3 + 1, var42, var26, var28);
 				}
-				if(var62 || par3 < var5 - 1 && blockAccess.isAirBlock(par2, par3 + 1, par4 - 1))
+				if(var58 || par3 < var5 - 1 && blockAccess.isAirBlock(par2, par3 + 1, par4 - 1))
 				{
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var44, var30, var32);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var46, var30, var34);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var46, var28, var34);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var44, var28, var32);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var46, var30, var32);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var44, var30, var34);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var44, var28, var34);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var46, var28, var32);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var40, var26, var28);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var42, var26, var30);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var42, var24, var30);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var40, var24, var28);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var42, var26, var28);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var40, var26, var30);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var40, var24, var30);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var42, var24, var28);
 				}
-				if(var63 || par3 > 1 && blockAccess.isAirBlock(par2, par3 - 1, par4 - 1))
+				if(var59 || par3 > 1 && blockAccess.isAirBlock(par2, par3 - 1, par4 - 1))
 				{
-					var6.addVertexWithUV(var50, par3 - 0.005D, var44, var30, var32);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var46, var30, var34);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var46, var28, var34);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var44, var28, var32);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var46, var30, var32);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var44, var30, var34);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var44, var28, var34);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var46, var28, var32);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var40, var26, var28);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var42, var26, var30);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var42, var24, var30);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var40, var24, var28);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var42, var26, var28);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var40, var26, var30);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var40, var24, var30);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var42, var24, var28);
 				}
-			} else if(!var58 && var59)
+			} else if(!var54 && var55)
 			{
-				var6.addVertexWithUV(var40, par3 + 1, var46, var18, var22);
-				var6.addVertexWithUV(var40, par3 + 0, var46, var18, var24);
-				var6.addVertexWithUV(var40, par3 + 0, var48, var20, var24);
-				var6.addVertexWithUV(var40, par3 + 1, var48, var20, var22);
-				var6.addVertexWithUV(var40, par3 + 1, var48, var18, var22);
-				var6.addVertexWithUV(var40, par3 + 0, var48, var18, var24);
-				var6.addVertexWithUV(var40, par3 + 0, var46, var20, var24);
-				var6.addVertexWithUV(var40, par3 + 1, var46, var20, var22);
-				if(!var61 && !var60)
+				var6.addVertexWithUV(var36, par3 + 1, var42, var16, var20);
+				var6.addVertexWithUV(var36, par3 + 0, var42, var16, var22);
+				var6.addVertexWithUV(var36, par3 + 0, var44, var18, var22);
+				var6.addVertexWithUV(var36, par3 + 1, var44, var18, var20);
+				var6.addVertexWithUV(var36, par3 + 1, var44, var16, var20);
+				var6.addVertexWithUV(var36, par3 + 0, var44, var16, var22);
+				var6.addVertexWithUV(var36, par3 + 0, var42, var18, var22);
+				var6.addVertexWithUV(var36, par3 + 1, var42, var18, var20);
+				if(!var57 && !var56)
 				{
-					var6.addVertexWithUV(var52, par3 + 1, var46, var28, var32);
-					var6.addVertexWithUV(var52, par3 + 0, var46, var28, var36);
-					var6.addVertexWithUV(var50, par3 + 0, var46, var30, var36);
-					var6.addVertexWithUV(var50, par3 + 1, var46, var30, var32);
-					var6.addVertexWithUV(var50, par3 + 1, var46, var28, var32);
-					var6.addVertexWithUV(var50, par3 + 0, var46, var28, var36);
-					var6.addVertexWithUV(var52, par3 + 0, var46, var30, var36);
-					var6.addVertexWithUV(var52, par3 + 1, var46, var30, var32);
+					var6.addVertexWithUV(var48, par3 + 1, var42, var24, var28);
+					var6.addVertexWithUV(var48, par3 + 0, var42, var24, var32);
+					var6.addVertexWithUV(var46, par3 + 0, var42, var26, var32);
+					var6.addVertexWithUV(var46, par3 + 1, var42, var26, var28);
+					var6.addVertexWithUV(var46, par3 + 1, var42, var24, var28);
+					var6.addVertexWithUV(var46, par3 + 0, var42, var24, var32);
+					var6.addVertexWithUV(var48, par3 + 0, var42, var26, var32);
+					var6.addVertexWithUV(var48, par3 + 1, var42, var26, var28);
 				}
-				if(var62 || par3 < var5 - 1 && blockAccess.isAirBlock(par2, par3 + 1, par4 + 1))
+				if(var58 || par3 < var5 - 1 && blockAccess.isAirBlock(par2, par3 + 1, par4 + 1))
 				{
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var46, var28, var34);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var48, var28, var36);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var48, var30, var36);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var46, var30, var34);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var48, var28, var34);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var46, var28, var36);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var46, var30, var36);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var48, var30, var34);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var42, var24, var30);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var44, var24, var32);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var44, var26, var32);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var42, var26, var30);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var44, var24, var30);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var42, var24, var32);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var42, var26, var32);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var44, var26, var30);
 				}
-				if(var63 || par3 > 1 && blockAccess.isAirBlock(par2, par3 - 1, par4 + 1))
+				if(var59 || par3 > 1 && blockAccess.isAirBlock(par2, par3 - 1, par4 + 1))
 				{
-					var6.addVertexWithUV(var50, par3 - 0.005D, var46, var28, var34);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var48, var28, var36);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var48, var30, var36);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var46, var30, var34);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var48, var28, var34);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var46, var28, var36);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var46, var30, var36);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var48, var30, var34);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var42, var24, var30);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var44, var24, var32);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var44, var26, var32);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var42, var26, var30);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var44, var24, var30);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var42, var24, var32);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var42, var26, var32);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var44, var26, var30);
 				}
 			}
 		} else
 		{
-			var6.addVertexWithUV(var40, par3 + 1, var48, var16, var22);
-			var6.addVertexWithUV(var40, par3 + 0, var48, var16, var24);
-			var6.addVertexWithUV(var40, par3 + 0, var44, var20, var24);
-			var6.addVertexWithUV(var40, par3 + 1, var44, var20, var22);
-			var6.addVertexWithUV(var40, par3 + 1, var44, var16, var22);
-			var6.addVertexWithUV(var40, par3 + 0, var44, var16, var24);
-			var6.addVertexWithUV(var40, par3 + 0, var48, var20, var24);
-			var6.addVertexWithUV(var40, par3 + 1, var48, var20, var22);
-			if(var62)
+			var6.addVertexWithUV(var36, par3 + 1, var44, var67, var20);
+			var6.addVertexWithUV(var36, par3 + 0, var44, var67, var22);
+			var6.addVertexWithUV(var36, par3 + 0, var40, var18, var22);
+			var6.addVertexWithUV(var36, par3 + 1, var40, var18, var20);
+			var6.addVertexWithUV(var36, par3 + 1, var40, var67, var20);
+			var6.addVertexWithUV(var36, par3 + 0, var40, var67, var22);
+			var6.addVertexWithUV(var36, par3 + 0, var44, var18, var22);
+			var6.addVertexWithUV(var36, par3 + 1, var44, var18, var20);
+			if(var58)
 			{
-				var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var48, var30, var36);
-				var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var44, var30, var32);
-				var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var44, var28, var32);
-				var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var48, var28, var36);
-				var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var44, var30, var36);
-				var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var48, var30, var32);
-				var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var48, var28, var32);
-				var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var44, var28, var36);
+				var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var44, var26, var32);
+				var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var40, var26, var28);
+				var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var40, var24, var28);
+				var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var44, var24, var32);
+				var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var40, var26, var32);
+				var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var44, var26, var28);
+				var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var44, var24, var28);
+				var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var40, var24, var32);
 			} else
 			{
 				if(par3 < var5 - 1 && blockAccess.isAirBlock(par2, par3 + 1, par4 - 1))
 				{
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var44, var30, var32);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var46, var30, var34);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var46, var28, var34);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var44, var28, var32);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var46, var30, var32);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var44, var30, var34);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var44, var28, var34);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var46, var28, var32);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var40, var26, var28);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var42, var26, var30);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var42, var24, var30);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var40, var24, var28);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var42, var26, var28);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var40, var26, var30);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var40, var24, var30);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var42, var24, var28);
 				}
 				if(par3 < var5 - 1 && blockAccess.isAirBlock(par2, par3 + 1, par4 + 1))
 				{
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var46, var28, var34);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var48, var28, var36);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var48, var30, var36);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var46, var30, var34);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var48, var28, var34);
-					var6.addVertexWithUV(var50, par3 + 1 + 0.005D, var46, var28, var36);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var46, var30, var36);
-					var6.addVertexWithUV(var52, par3 + 1 + 0.005D, var48, var30, var34);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var42, var24, var30);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var44, var24, var32);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var44, var26, var32);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var42, var26, var30);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var44, var24, var30);
+					var6.addVertexWithUV(var46, par3 + 1 + 0.005D, var42, var24, var32);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var42, var26, var32);
+					var6.addVertexWithUV(var48, par3 + 1 + 0.005D, var44, var26, var30);
 				}
 			}
-			if(var63)
+			if(var59)
 			{
-				var6.addVertexWithUV(var52, par3 - 0.005D, var48, var30, var36);
-				var6.addVertexWithUV(var52, par3 - 0.005D, var44, var30, var32);
-				var6.addVertexWithUV(var50, par3 - 0.005D, var44, var28, var32);
-				var6.addVertexWithUV(var50, par3 - 0.005D, var48, var28, var36);
-				var6.addVertexWithUV(var52, par3 - 0.005D, var44, var30, var36);
-				var6.addVertexWithUV(var52, par3 - 0.005D, var48, var30, var32);
-				var6.addVertexWithUV(var50, par3 - 0.005D, var48, var28, var32);
-				var6.addVertexWithUV(var50, par3 - 0.005D, var44, var28, var36);
+				var6.addVertexWithUV(var48, par3 - 0.005D, var44, var26, var32);
+				var6.addVertexWithUV(var48, par3 - 0.005D, var40, var26, var28);
+				var6.addVertexWithUV(var46, par3 - 0.005D, var40, var24, var28);
+				var6.addVertexWithUV(var46, par3 - 0.005D, var44, var24, var32);
+				var6.addVertexWithUV(var48, par3 - 0.005D, var40, var26, var32);
+				var6.addVertexWithUV(var48, par3 - 0.005D, var44, var26, var28);
+				var6.addVertexWithUV(var46, par3 - 0.005D, var44, var24, var28);
+				var6.addVertexWithUV(var46, par3 - 0.005D, var40, var24, var32);
 			} else
 			{
 				if(par3 > 1 && blockAccess.isAirBlock(par2, par3 - 1, par4 - 1))
 				{
-					var6.addVertexWithUV(var50, par3 - 0.005D, var44, var30, var32);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var46, var30, var34);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var46, var28, var34);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var44, var28, var32);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var46, var30, var32);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var44, var30, var34);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var44, var28, var34);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var46, var28, var32);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var40, var26, var28);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var42, var26, var30);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var42, var24, var30);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var40, var24, var28);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var42, var26, var28);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var40, var26, var30);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var40, var24, var30);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var42, var24, var28);
 				}
 				if(par3 > 1 && blockAccess.isAirBlock(par2, par3 - 1, par4 + 1))
 				{
-					var6.addVertexWithUV(var50, par3 - 0.005D, var46, var28, var34);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var48, var28, var36);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var48, var30, var36);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var46, var30, var34);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var48, var28, var34);
-					var6.addVertexWithUV(var50, par3 - 0.005D, var46, var28, var36);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var46, var30, var36);
-					var6.addVertexWithUV(var52, par3 - 0.005D, var48, var30, var34);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var42, var24, var30);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var44, var24, var32);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var44, var26, var32);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var42, var26, var30);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var44, var24, var30);
+					var6.addVertexWithUV(var46, par3 - 0.005D, var42, var24, var32);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var42, var26, var32);
+					var6.addVertexWithUV(var48, par3 - 0.005D, var44, var26, var30);
 				}
 			}
 		}
@@ -4022,10 +4037,10 @@
 	{
 		Tessellator var5 = Tessellator.instance;
 		int var6 = blockAccess.getBlockMetadata(par2, par3, par4);
-		Icon var7 = BlockRedstoneWire.func_94409_b("redstoneDust_cross");
-		Icon var8 = BlockRedstoneWire.func_94409_b("redstoneDust_line");
-		Icon var9 = BlockRedstoneWire.func_94409_b("redstoneDust_cross_overlay");
-		Icon var10 = BlockRedstoneWire.func_94409_b("redstoneDust_line_overlay");
+		Icon var7 = BlockRedstoneWire.func_94409_b("cross");
+		Icon var8 = BlockRedstoneWire.func_94409_b("line");
+		Icon var9 = BlockRedstoneWire.func_94409_b("cross_overlay");
+		Icon var10 = BlockRedstoneWire.func_94409_b("line_overlay");
 		var5.setBrightness(par1Block.getMixedBrightnessForBlock(blockAccess, par2, par3, par4));
 		float var11 = 1.0F;
 		float var12 = var6 / 15.0F;
@@ -4045,6 +4060,8 @@
 			var15 = 0.0F;
 		}
 		var5.setColorOpaque_F(var13, var14, var15);
+		double var16 = 0.015625D;
+		double var18 = 0.015625D;
 		boolean var20 = BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2 - 1, par3, par4, 1) || !blockAccess.isBlockNormalCube(par2 - 1, par3, par4) && BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2 - 1, par3 - 1, par4, -1);
 		boolean var21 = BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2 + 1, par3, par4, 3) || !blockAccess.isBlockNormalCube(par2 + 1, par3, par4) && BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2 + 1, par3 - 1, par4, -1);
 		boolean var22 = BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2, par3, par4 - 1, 2) || !blockAccess.isBlockNormalCube(par2, par3, par4 - 1) && BlockRedstoneWire.isPowerProviderOrWire(blockAccess, par2, par3 - 1, par4 - 1, -1);
@@ -4087,6 +4104,7 @@
 			int var30 = 0;
 			int var31 = 16;
 			int var32 = 16;
+			boolean var33 = true;
 			if(!var20)
 			{
 				var24 += 0.3125F;
@@ -4153,6 +4171,7 @@
 		}
 		if(!blockAccess.isBlockNormalCube(par2, par3 + 1, par4))
 		{
+			float var34 = 0.021875F;
 			if(blockAccess.isBlockNormalCube(par2 - 1, par3, par4) && blockAccess.getBlockId(par2 - 1, par3 + 1, par4) == Block.redstoneWire.blockID)
 			{
 				var5.setColorOpaque_F(var11 * var13, var11 * var14, var11 * var15);
@@ -5669,6 +5688,7 @@
 		int var6 = blockAccess.getBlockMetadata(par2, par3, par4);
 		boolean var7 = par5 || (var6 & 8) != 0;
 		int var8 = BlockPistonBase.getOrientation(var6);
+		float var9 = 0.25F;
 		if(var7)
 		{
 			switch(var8)
@@ -5775,6 +5795,9 @@
 	{
 		int var6 = blockAccess.getBlockMetadata(par2, par3, par4);
 		int var7 = BlockPistonExtension.getDirectionMeta(var6);
+		float var8 = 0.25F;
+		float var9 = 0.375F;
+		float var10 = 0.625F;
 		float var11 = par1Block.getBlockBrightness(blockAccess, par2, par3, par4);
 		float var12 = par5 ? 1.0F : 0.5F;
 		double var13 = par5 ? 16.0D : 8.0D;
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderBoat.java b/RMCClient/minecraft/net/minecraft/src/RenderBoat.java
index ac276ff..95ba262 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderBoat.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderBoat.java
@@ -4,6 +4,7 @@
 
 public class RenderBoat extends Render
 {
+	private static final ResourceLocation field_110782_f = new ResourceLocation("textures/entity/boat.png");
 	protected ModelBase modelBoat;
 	
 	public RenderBoat()
@@ -15,6 +16,16 @@
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
 	{
 		renderBoat((EntityBoat) par1Entity, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110781_a((EntityBoat) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110781_a(EntityBoat p_110781_1_)
+	{
+		return field_110782_f;
 	}
 	
 	public void renderBoat(EntityBoat par1EntityBoat, double par2, double par4, double par6, float par8, float par9)
@@ -32,11 +43,10 @@
 		{
 			GL11.glRotatef(MathHelper.sin(var10) * var10 * var11 / 10.0F * par1EntityBoat.getForwardDirection(), 1.0F, 0.0F, 0.0F);
 		}
-		loadTexture("/terrain.png");
 		float var12 = 0.75F;
 		GL11.glScalef(var12, var12, var12);
 		GL11.glScalef(1.0F / var12, 1.0F / var12, 1.0F / var12);
-		loadTexture("/item/boat.png");
+		func_110777_b(par1EntityBoat);
 		GL11.glScalef(-1.0F, -1.0F, 1.0F);
 		modelBoat.render(par1EntityBoat, 0.0F, 0.0F, -0.1F, 0.0F, 0.0F, 0.0625F);
 		GL11.glPopMatrix();
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderCaveSpider.java b/RMCClient/minecraft/net/minecraft/src/RenderCaveSpider.java
new file mode 100644
index 0000000..2be2f46
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/RenderCaveSpider.java
@@ -0,0 +1,38 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+
+public class RenderCaveSpider extends RenderSpider
+{
+	private static final ResourceLocation field_110893_a = new ResourceLocation("textures/entity/spider/cave_spider.png");
+	
+	public RenderCaveSpider()
+	{
+		shadowSize *= 0.7F;
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110892_a((EntityCaveSpider) p_110775_1_);
+	}
+	
+	@Override protected ResourceLocation func_110889_a(EntitySpider p_110889_1_)
+	{
+		return func_110892_a((EntityCaveSpider) p_110889_1_);
+	}
+	
+	protected ResourceLocation func_110892_a(EntityCaveSpider p_110892_1_)
+	{
+		return field_110893_a;
+	}
+	
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
+	{
+		scaleSpider((EntityCaveSpider) par1EntityLiving, par2);
+	}
+	
+	protected void scaleSpider(EntityCaveSpider par1EntitySpider, float par2)
+	{
+		GL11.glScalef(0.7F, 0.7F, 0.7F);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderChicken.java b/RMCClient/minecraft/net/minecraft/src/RenderChicken.java
index cb59baa..17ac6a9 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderChicken.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderChicken.java
@@ -2,9 +2,11 @@
 
 public class RenderChicken extends RenderLiving
 {
-	public RenderChicken(ModelBase par1ModelBase, float par2)
+	private static final ResourceLocation field_110920_a = new ResourceLocation("textures/entity/chicken.png");
+	
+	public RenderChicken(ModelBase p_i1252_1_, float p_i1252_2_)
 	{
-		super(par1ModelBase, par2);
+		super(p_i1252_1_, p_i1252_2_);
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
@@ -17,6 +19,16 @@
 		renderChicken((EntityChicken) par1EntityLiving, par2, par4, par6, par8, par9);
 	}
 	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110919_a((EntityChicken) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110919_a(EntityChicken p_110919_1_)
+	{
+		return field_110920_a;
+	}
+	
 	protected float getWingRotation(EntityChicken par1EntityChicken, float par2)
 	{
 		float var3 = par1EntityChicken.field_70888_h + (par1EntityChicken.field_70886_e - par1EntityChicken.field_70888_h) * par2;
@@ -24,7 +36,7 @@
 		return (MathHelper.sin(var3) + 1.0F) * var4;
 	}
 	
-	@Override protected float handleRotationFloat(EntityLiving par1EntityLiving, float par2)
+	@Override protected float handleRotationFloat(EntityLivingBase par1EntityLiving, float par2)
 	{
 		return getWingRotation((EntityChicken) par1EntityLiving, par2);
 	}
@@ -33,4 +45,9 @@
 	{
 		super.doRenderLiving(par1EntityChicken, par2, par4, par6, par8, par9);
 	}
+	
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		renderChicken((EntityChicken) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderCow.java b/RMCClient/minecraft/net/minecraft/src/RenderCow.java
index 6ac02f2..94a94ae 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderCow.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderCow.java
@@ -2,23 +2,20 @@
 
 public class RenderCow extends RenderLiving
 {
-	public RenderCow(ModelBase par1ModelBase, float par2)
+	private static final ResourceLocation field_110833_a = new ResourceLocation("textures/entity/cow/cow.png");
+	
+	public RenderCow(ModelBase p_i1253_1_, float p_i1253_2_)
 	{
-		super(par1ModelBase, par2);
+		super(p_i1253_1_, p_i1253_2_);
 	}
 	
-	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
 	{
-		renderCow((EntityCow) par1Entity, par2, par4, par6, par8, par9);
+		return func_110832_a((EntityCow) p_110775_1_);
 	}
 	
-	@Override public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
+	protected ResourceLocation func_110832_a(EntityCow p_110832_1_)
 	{
-		renderCow((EntityCow) par1EntityLiving, par2, par4, par6, par8, par9);
-	}
-	
-	public void renderCow(EntityCow par1EntityCow, double par2, double par4, double par6, float par8, float par9)
-	{
-		super.doRenderLiving(par1EntityCow, par2, par4, par6, par8, par9);
+		return field_110833_a;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderCreeper.java b/RMCClient/minecraft/net/minecraft/src/RenderCreeper.java
index b957e1f..2fb0f04 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderCreeper.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderCreeper.java
@@ -4,6 +4,8 @@
 
 public class RenderCreeper extends RenderLiving
 {
+	private static final ResourceLocation field_110831_a = new ResourceLocation("textures/entity/creeper/creeper_armor.png");
+	private static final ResourceLocation field_110830_f = new ResourceLocation("textures/entity/creeper/creeper.png");
 	private ModelBase creeperModel = new ModelCreeper(2.0F);
 	
 	public RenderCreeper()
@@ -11,22 +13,32 @@
 		super(new ModelCreeper(), 0.5F);
 	}
 	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110829_a((EntityCreeper) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110829_a(EntityCreeper p_110829_1_)
+	{
+		return field_110830_f;
+	}
+	
 	protected int func_77061_b(EntityCreeper par1EntityCreeper, int par2, float par3)
 	{
 		return -1;
 	}
 	
-	@Override protected int getColorMultiplier(EntityLiving par1EntityLiving, float par2, float par3)
+	@Override protected int getColorMultiplier(EntityLivingBase par1EntityLiving, float par2, float par3)
 	{
 		return updateCreeperColorMultiplier((EntityCreeper) par1EntityLiving, par2, par3);
 	}
 	
-	@Override protected int inheritRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int inheritRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return func_77061_b((EntityCreeper) par1EntityLiving, par2, par3);
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		updateCreeperScale((EntityCreeper) par1EntityLiving, par2);
 	}
@@ -45,7 +57,7 @@
 			if(par2 == 1)
 			{
 				float var4 = par1EntityCreeper.ticksExisted + par3;
-				loadTexture("/armor/power.png");
+				func_110776_a(field_110831_a);
 				GL11.glMatrixMode(GL11.GL_TEXTURE);
 				GL11.glLoadIdentity();
 				float var5 = var4 * 0.01F;
@@ -72,49 +84,49 @@
 		return -1;
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return renderCreeperPassModel((EntityCreeper) par1EntityLiving, par2, par3);
 	}
 	
 	protected int updateCreeperColorMultiplier(EntityCreeper par1EntityCreeper, float par2, float par3)
 	{
-		float var5 = par1EntityCreeper.getCreeperFlashIntensity(par3);
-		if((int) (var5 * 10.0F) % 2 == 0) return 0;
+		float var4 = par1EntityCreeper.getCreeperFlashIntensity(par3);
+		if((int) (var4 * 10.0F) % 2 == 0) return 0;
 		else
 		{
-			int var6 = (int) (var5 * 0.2F * 255.0F);
-			if(var6 < 0)
+			int var5 = (int) (var4 * 0.2F * 255.0F);
+			if(var5 < 0)
 			{
-				var6 = 0;
+				var5 = 0;
 			}
-			if(var6 > 255)
+			if(var5 > 255)
 			{
-				var6 = 255;
+				var5 = 255;
 			}
+			short var6 = 255;
 			short var7 = 255;
 			short var8 = 255;
-			short var9 = 255;
-			return var6 << 24 | var7 << 16 | var8 << 8 | var9;
+			return var5 << 24 | var6 << 16 | var7 << 8 | var8;
 		}
 	}
 	
 	protected void updateCreeperScale(EntityCreeper par1EntityCreeper, float par2)
 	{
-		float var4 = par1EntityCreeper.getCreeperFlashIntensity(par2);
-		float var5 = 1.0F + MathHelper.sin(var4 * 100.0F) * var4 * 0.01F;
-		if(var4 < 0.0F)
+		float var3 = par1EntityCreeper.getCreeperFlashIntensity(par2);
+		float var4 = 1.0F + MathHelper.sin(var3 * 100.0F) * var3 * 0.01F;
+		if(var3 < 0.0F)
 		{
-			var4 = 0.0F;
+			var3 = 0.0F;
 		}
-		if(var4 > 1.0F)
+		if(var3 > 1.0F)
 		{
-			var4 = 1.0F;
+			var3 = 1.0F;
 		}
-		var4 *= var4;
-		var4 *= var4;
-		float var6 = (1.0F + var4 * 0.4F) * var5;
-		float var7 = (1.0F + var4 * 0.1F) / var5;
-		GL11.glScalef(var6, var7, var6);
+		var3 *= var3;
+		var3 *= var3;
+		float var5 = (1.0F + var3 * 0.4F) * var4;
+		float var6 = (1.0F + var3 * 0.1F) / var4;
+		GL11.glScalef(var5, var6, var5);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderDragon.java b/RMCClient/minecraft/net/minecraft/src/RenderDragon.java
index ab45131..5216fdb 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderDragon.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderDragon.java
@@ -6,7 +6,10 @@
 
 public class RenderDragon extends RenderLiving
 {
-	private static int updateModelState = 0;
+	private static final ResourceLocation field_110842_f = new ResourceLocation("textures/entity/enderdragon/dragon_exploding.png");
+	private static final ResourceLocation field_110843_g = new ResourceLocation("textures/entity/endercrystal/endercrystal_beam.png");
+	private static final ResourceLocation field_110845_h = new ResourceLocation("textures/entity/enderdragon/dragon_eyes.png");
+	private static final ResourceLocation field_110844_k = new ResourceLocation("textures/entity/enderdragon/dragon.png");
 	protected ModelDragon modelDragon;
 	
 	public RenderDragon()
@@ -26,14 +29,19 @@
 		renderDragon((EntityDragon) par1EntityLiving, par2, par4, par6, par8, par9);
 	}
 	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110841_a((EntityDragon) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110841_a(EntityDragon p_110841_1_)
+	{
+		return field_110844_k;
+	}
+	
 	public void renderDragon(EntityDragon par1EntityDragon, double par2, double par4, double par6, float par8, float par9)
 	{
 		BossStatus.func_82824_a(par1EntityDragon, false);
-		if(updateModelState != 4)
-		{
-			mainModel = new ModelDragon(0.0F);
-			updateModelState = 4;
-		}
 		super.doRenderLiving(par1EntityDragon, par2, par4, par6, par8, par9);
 		if(par1EntityDragon.healingEnderCrystal != null)
 		{
@@ -52,7 +60,7 @@
 			Tessellator var17 = Tessellator.instance;
 			RenderHelper.disableStandardItemLighting();
 			GL11.glDisable(GL11.GL_CULL_FACE);
-			loadTexture("/mob/enderdragon/beam.png");
+			func_110776_a(field_110843_g);
 			GL11.glShadeModel(GL11.GL_SMOOTH);
 			float var18 = 0.0F - (par1EntityDragon.ticksExisted + par9) * 0.01F;
 			float var19 = MathHelper.sqrt_float(var12 * var12 + var13 * var13 + var14 * var14) / 32.0F - (par1EntityDragon.ticksExisted + par9) * 0.01F;
@@ -139,12 +147,12 @@
 			GL11.glDepthFunc(GL11.GL_LEQUAL);
 			GL11.glEnable(GL11.GL_ALPHA_TEST);
 			GL11.glAlphaFunc(GL11.GL_GREATER, var8);
-			loadTexture("/mob/enderdragon/shuffle.png");
+			func_110776_a(field_110842_f);
 			mainModel.render(par1EntityDragon, par2, par3, par4, par5, par6, par7);
 			GL11.glAlphaFunc(GL11.GL_GREATER, 0.1F);
 			GL11.glDepthFunc(GL11.GL_EQUAL);
 		}
-		loadTexture(par1EntityDragon.getTexture());
+		func_110777_b(par1EntityDragon);
 		mainModel.render(par1EntityDragon, par2, par3, par4, par5, par6, par7);
 		if(par1EntityDragon.hurtTime > 0)
 		{
@@ -160,7 +168,7 @@
 		}
 	}
 	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
 	{
 		renderDragonDying((EntityDragon) par1EntityLiving, par2);
 	}
@@ -174,7 +182,7 @@
 		if(par2 != 0) return -1;
 		else
 		{
-			loadTexture("/mob/enderdragon/ender_eyes.png");
+			func_110776_a(field_110845_h);
 			float var4 = 1.0F;
 			GL11.glEnable(GL11.GL_BLEND);
 			GL11.glDisable(GL11.GL_ALPHA_TEST);
@@ -192,12 +200,17 @@
 		}
 	}
 	
-	@Override protected void renderModel(EntityLiving par1EntityLiving, float par2, float par3, float par4, float par5, float par6, float par7)
+	@Override protected void renderModel(EntityLivingBase par1EntityLiving, float par2, float par3, float par4, float par5, float par6, float par7)
 	{
 		renderDragonModel((EntityDragon) par1EntityLiving, par2, par3, par4, par5, par6, par7);
 	}
 	
-	@Override protected void rotateCorpse(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		renderDragon((EntityDragon) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected void rotateCorpse(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		rotateDragonBody((EntityDragon) par1EntityLiving, par2, par3, par4);
 	}
@@ -221,7 +234,7 @@
 		}
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return renderGlow((EntityDragon) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderEnchantmentTable.java b/RMCClient/minecraft/net/minecraft/src/RenderEnchantmentTable.java
index 1cf3c4f..eb36462 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderEnchantmentTable.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderEnchantmentTable.java
@@ -4,6 +4,7 @@
 
 public class RenderEnchantmentTable extends TileEntitySpecialRenderer
 {
+	private static final ResourceLocation field_110636_a = new ResourceLocation("textures/entity/enchanting_table_book.png");
 	private ModelBook enchantmentBook = new ModelBook();
 	
 	@Override public void renderTileEntityAt(TileEntity par1TileEntity, double par2, double par4, double par6, float par8)
@@ -29,7 +30,7 @@
 		float var11 = par1TileEntityEnchantmentTable.bookRotationPrev + var10 * par8;
 		GL11.glRotatef(-var11 * 180.0F / (float) Math.PI, 0.0F, 1.0F, 0.0F);
 		GL11.glRotatef(80.0F, 0.0F, 0.0F, 1.0F);
-		bindTextureByName("/item/book.png");
+		func_110628_a(field_110636_a);
 		float var12 = par1TileEntityEnchantmentTable.pageFlipPrev + (par1TileEntityEnchantmentTable.pageFlip - par1TileEntityEnchantmentTable.pageFlipPrev) * par8 + 0.25F;
 		float var13 = par1TileEntityEnchantmentTable.pageFlipPrev + (par1TileEntityEnchantmentTable.pageFlip - par1TileEntityEnchantmentTable.pageFlipPrev) * par8 + 0.75F;
 		var12 = (var12 - MathHelper.truncateDoubleToInt(var12)) * 1.6F - 0.3F;
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderEndPortal.java b/RMCClient/minecraft/net/minecraft/src/RenderEndPortal.java
index 9721ff3..af956ec 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderEndPortal.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderEndPortal.java
@@ -9,6 +9,9 @@
 
 public class RenderEndPortal extends TileEntitySpecialRenderer
 {
+	private static final ResourceLocation field_110645_c = new ResourceLocation("textures/environment/end_sky.png");
+	private static final ResourceLocation field_110643_d = new ResourceLocation("textures/entity/end_portal.png");
+	private static final Random field_110644_e = new Random(31100L);
 	FloatBuffer field_76908_a = GLAllocation.createDirectFloatBuffer(16);
 	
 	private FloatBuffer func_76907_a(float par1, float par2, float par3, float par4)
@@ -25,36 +28,36 @@
 		float var10 = (float) tileEntityRenderer.playerY;
 		float var11 = (float) tileEntityRenderer.playerZ;
 		GL11.glDisable(GL11.GL_LIGHTING);
-		Random var12 = new Random(31100L);
-		float var13 = 0.75F;
-		for(int var14 = 0; var14 < 16; ++var14)
+		field_110644_e.setSeed(31100L);
+		float var12 = 0.75F;
+		for(int var13 = 0; var13 < 16; ++var13)
 		{
 			GL11.glPushMatrix();
-			float var15 = 16 - var14;
-			float var16 = 0.0625F;
-			float var17 = 1.0F / (var15 + 1.0F);
-			if(var14 == 0)
+			float var14 = 16 - var13;
+			float var15 = 0.0625F;
+			float var16 = 1.0F / (var14 + 1.0F);
+			if(var13 == 0)
 			{
-				bindTextureByName("/misc/tunnel.png");
-				var17 = 0.1F;
-				var15 = 65.0F;
-				var16 = 0.125F;
+				func_110628_a(field_110645_c);
+				var16 = 0.1F;
+				var14 = 65.0F;
+				var15 = 0.125F;
 				GL11.glEnable(GL11.GL_BLEND);
 				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 			}
-			if(var14 == 1)
+			if(var13 == 1)
 			{
-				bindTextureByName("/misc/particlefield.png");
+				func_110628_a(field_110643_d);
 				GL11.glEnable(GL11.GL_BLEND);
 				GL11.glBlendFunc(GL11.GL_ONE, GL11.GL_ONE);
-				var16 = 0.5F;
+				var15 = 0.5F;
 			}
-			float var18 = (float) -(par4 + var13);
-			float var19 = var18 + ActiveRenderInfo.objectY;
-			float var20 = var18 + var15 + ActiveRenderInfo.objectY;
-			float var21 = var19 / var20;
-			var21 += (float) (par4 + var13);
-			GL11.glTranslatef(var9, var21, var11);
+			float var17 = (float) -(par4 + var12);
+			float var18 = var17 + ActiveRenderInfo.objectY;
+			float var19 = var17 + var14 + ActiveRenderInfo.objectY;
+			float var20 = var18 / var19;
+			var20 += (float) (par4 + var12);
+			GL11.glTranslatef(var9, var20, var11);
 			GL11.glTexGeni(GL11.GL_S, GL11.GL_TEXTURE_GEN_MODE, GL11.GL_OBJECT_LINEAR);
 			GL11.glTexGeni(GL11.GL_T, GL11.GL_TEXTURE_GEN_MODE, GL11.GL_OBJECT_LINEAR);
 			GL11.glTexGeni(GL11.GL_R, GL11.GL_TEXTURE_GEN_MODE, GL11.GL_OBJECT_LINEAR);
@@ -72,30 +75,30 @@
 			GL11.glPushMatrix();
 			GL11.glLoadIdentity();
 			GL11.glTranslatef(0.0F, Minecraft.getSystemTime() % 700000L / 700000.0F, 0.0F);
-			GL11.glScalef(var16, var16, var16);
+			GL11.glScalef(var15, var15, var15);
 			GL11.glTranslatef(0.5F, 0.5F, 0.0F);
-			GL11.glRotatef((var14 * var14 * 4321 + var14 * 9) * 2.0F, 0.0F, 0.0F, 1.0F);
+			GL11.glRotatef((var13 * var13 * 4321 + var13 * 9) * 2.0F, 0.0F, 0.0F, 1.0F);
 			GL11.glTranslatef(-0.5F, -0.5F, 0.0F);
 			GL11.glTranslatef(-var9, -var11, -var10);
-			var19 = var18 + ActiveRenderInfo.objectY;
-			GL11.glTranslatef(ActiveRenderInfo.objectX * var15 / var19, ActiveRenderInfo.objectZ * var15 / var19, -var10);
-			Tessellator var24 = Tessellator.instance;
-			var24.startDrawingQuads();
-			var21 = var12.nextFloat() * 0.5F + 0.1F;
-			float var22 = var12.nextFloat() * 0.5F + 0.4F;
-			float var23 = var12.nextFloat() * 0.5F + 0.5F;
-			if(var14 == 0)
+			var18 = var17 + ActiveRenderInfo.objectY;
+			GL11.glTranslatef(ActiveRenderInfo.objectX * var14 / var18, ActiveRenderInfo.objectZ * var14 / var18, -var10);
+			Tessellator var23 = Tessellator.instance;
+			var23.startDrawingQuads();
+			var20 = field_110644_e.nextFloat() * 0.5F + 0.1F;
+			float var21 = field_110644_e.nextFloat() * 0.5F + 0.4F;
+			float var22 = field_110644_e.nextFloat() * 0.5F + 0.5F;
+			if(var13 == 0)
 			{
-				var23 = 1.0F;
 				var22 = 1.0F;
 				var21 = 1.0F;
+				var20 = 1.0F;
 			}
-			var24.setColorRGBA_F(var21 * var17, var22 * var17, var23 * var17, 1.0F);
-			var24.addVertex(par2, par4 + var13, par6);
-			var24.addVertex(par2, par4 + var13, par6 + 1.0D);
-			var24.addVertex(par2 + 1.0D, par4 + var13, par6 + 1.0D);
-			var24.addVertex(par2 + 1.0D, par4 + var13, par6);
-			var24.draw();
+			var23.setColorRGBA_F(var20 * var16, var21 * var16, var22 * var16, 1.0F);
+			var23.addVertex(par2, par4 + var12, par6);
+			var23.addVertex(par2, par4 + var12, par6 + 1.0D);
+			var23.addVertex(par2 + 1.0D, par4 + var12, par6 + 1.0D);
+			var23.addVertex(par2 + 1.0D, par4 + var12, par6);
+			var23.draw();
 			GL11.glPopMatrix();
 			GL11.glMatrixMode(GL11.GL_MODELVIEW);
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderEnderCrystal.java b/RMCClient/minecraft/net/minecraft/src/RenderEnderCrystal.java
index 28073ae..6ee640a 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderEnderCrystal.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderEnderCrystal.java
@@ -4,12 +4,13 @@
 
 public class RenderEnderCrystal extends Render
 {
-	private int field_76996_a = -1;
+	private static final ResourceLocation field_110787_a = new ResourceLocation("textures/entity/endercrystal/endercrystal.png");
 	private ModelBase field_76995_b;
 	
 	public RenderEnderCrystal()
 	{
 		shadowSize = 0.5F;
+		field_76995_b = new ModelEnderCrystal(0.0F, true);
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
@@ -19,18 +20,23 @@
 	
 	public void doRenderEnderCrystal(EntityEnderCrystal par1EntityEnderCrystal, double par2, double par4, double par6, float par8, float par9)
 	{
-		if(field_76996_a != 1)
-		{
-			field_76995_b = new ModelEnderCrystal(0.0F, true);
-			field_76996_a = 1;
-		}
 		float var10 = par1EntityEnderCrystal.innerRotation + par9;
 		GL11.glPushMatrix();
 		GL11.glTranslatef((float) par2, (float) par4, (float) par6);
-		loadTexture("/mob/enderdragon/crystal.png");
+		func_110776_a(field_110787_a);
 		float var11 = MathHelper.sin(var10 * 0.2F) / 2.0F + 0.5F;
 		var11 += var11 * var11;
 		field_76995_b.render(par1EntityEnderCrystal, 0.0F, var10 * 3.0F, var11 * 0.2F, 0.0F, 0.0F, 0.0625F);
 		GL11.glPopMatrix();
 	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110786_a((EntityEnderCrystal) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110786_a(EntityEnderCrystal p_110786_1_)
+	{
+		return field_110787_a;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderEnderman.java b/RMCClient/minecraft/net/minecraft/src/RenderEnderman.java
index fb1b8af..d223347 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderEnderman.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderEnderman.java
@@ -7,6 +7,8 @@
 
 public class RenderEnderman extends RenderLiving
 {
+	private static final ResourceLocation field_110840_a = new ResourceLocation("textures/entity/enderman/enderman_eyes.png");
+	private static final ResourceLocation field_110839_f = new ResourceLocation("textures/entity/enderman/enderman.png");
 	private ModelEnderman endermanModel;
 	private Random rnd = new Random();
 	
@@ -25,6 +27,16 @@
 	@Override public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
 	{
 		renderEnderman((EntityEnderman) par1EntityLiving, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110838_a((EntityEnderman) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110838_a(EntityEnderman p_110838_1_)
+	{
+		return field_110839_f;
 	}
 	
 	protected void renderCarrying(EntityEnderman par1EntityEnderman, float par2)
@@ -46,7 +58,7 @@
 			OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, var5 / 1.0F, var6 / 1.0F);
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-			loadTexture("/terrain.png");
+			func_110776_a(TextureMap.field_110575_b);
 			renderBlocks.renderBlockAsItem(Block.blocksList[par1EntityEnderman.getCarried()], par1EntityEnderman.getCarryingData(), 1.0F);
 			GL11.glPopMatrix();
 			GL11.glDisable(GL12.GL_RESCALE_NORMAL);
@@ -66,7 +78,7 @@
 		super.doRenderLiving(par1EntityEnderman, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
 	{
 		renderCarrying((EntityEnderman) par1EntityLiving, par2);
 	}
@@ -76,7 +88,7 @@
 		if(par2 != 0) return -1;
 		else
 		{
-			loadTexture("/mob/enderman_eyes.png");
+			func_110776_a(field_110840_a);
 			float var4 = 1.0F;
 			GL11.glEnable(GL11.GL_BLEND);
 			GL11.glDisable(GL11.GL_ALPHA_TEST);
@@ -100,7 +112,12 @@
 		}
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		renderEnderman((EntityEnderman) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return renderEyes((EntityEnderman) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderEngine.java b/RMCClient/minecraft/net/minecraft/src/RenderEngine.java
deleted file mode 100644
index c2a0509..0000000
--- a/RMCClient/minecraft/net/minecraft/src/RenderEngine.java
+++ /dev/null
@@ -1,400 +0,0 @@
-package net.minecraft.src;
-
-import java.awt.Color;
-import java.awt.Graphics;
-import java.awt.image.BufferedImage;
-import java.io.IOException;
-import java.io.InputStream;
-import java.nio.IntBuffer;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.Map;
-
-import javax.imageio.ImageIO;
-
-import net.minecraft.client.Minecraft;
-
-import org.lwjgl.opengl.GL11;
-import org.lwjgl.opengl.GL12;
-
-public class RenderEngine
-{
-	private HashMap textureMap = new HashMap();
-	private HashMap textureContentsMap = new HashMap();
-	private IntHashMap textureNameToImageMap = new IntHashMap();
-	private IntBuffer imageData = GLAllocation.createDirectIntBuffer(4194304);
-	private Map urlToImageDataMap = new HashMap();
-	private GameSettings options;
-	private TexturePackList texturePack;
-	private BufferedImage missingTextureImage = new BufferedImage(64, 64, 2);
-	private final TextureMap textureMapBlocks;
-	private final TextureMap textureMapItems;
-	private int boundTexture;
-	
-	public RenderEngine(TexturePackList par1TexturePackList, GameSettings par2GameSettings)
-	{
-		texturePack = par1TexturePackList;
-		options = par2GameSettings;
-		Graphics var3 = missingTextureImage.getGraphics();
-		var3.setColor(Color.WHITE);
-		var3.fillRect(0, 0, 64, 64);
-		var3.setColor(Color.BLACK);
-		int var4 = 10;
-		int var5 = 0;
-		while(var4 < 64)
-		{
-			String var6 = var5++ % 2 == 0 ? "missing" : "texture";
-			var3.drawString(var6, 1, var4);
-			var4 += var3.getFont().getSize();
-			if(var5 % 2 == 0)
-			{
-				var4 += 5;
-			}
-		}
-		var3.dispose();
-		textureMapBlocks = new TextureMap(0, "terrain", "textures/blocks/", missingTextureImage);
-		textureMapItems = new TextureMap(1, "items", "textures/items/", missingTextureImage);
-	}
-	
-	public int allocateAndSetupTexture(BufferedImage par1BufferedImage)
-	{
-		int var2 = GLAllocation.generateTextureNames();
-		setupTexture(par1BufferedImage, var2);
-		textureNameToImageMap.addKey(var2, par1BufferedImage);
-		return var2;
-	}
-	
-	private void bindTexture(int par1)
-	{
-		if(par1 != boundTexture)
-		{
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, par1);
-			boundTexture = par1;
-		}
-	}
-	
-	public void bindTexture(String par1Str)
-	{
-		this.bindTexture(getTexture(par1Str));
-	}
-	
-	private int[] colorToAnaglyph(int[] par1ArrayOfInteger)
-	{
-		int[] var2 = new int[par1ArrayOfInteger.length];
-		for(int var3 = 0; var3 < par1ArrayOfInteger.length; ++var3)
-		{
-			int var4 = par1ArrayOfInteger[var3] >> 24 & 255;
-			int var5 = par1ArrayOfInteger[var3] >> 16 & 255;
-			int var6 = par1ArrayOfInteger[var3] >> 8 & 255;
-			int var7 = par1ArrayOfInteger[var3] & 255;
-			int var8 = (var5 * 30 + var6 * 59 + var7 * 11) / 100;
-			int var9 = (var5 * 30 + var6 * 70) / 100;
-			int var10 = (var5 * 30 + var7 * 70) / 100;
-			var2[var3] = var4 << 24 | var8 << 16 | var9 << 8 | var10;
-		}
-		return var2;
-	}
-	
-	public void createTextureFromBytes(int[] par1ArrayOfInteger, int par2, int par3, int par4)
-	{
-		this.bindTexture(par4);
-		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_NEAREST);
-		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_NEAREST);
-		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_S, GL11.GL_REPEAT);
-		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, GL11.GL_REPEAT);
-		if(options != null && options.anaglyph)
-		{
-			par1ArrayOfInteger = colorToAnaglyph(par1ArrayOfInteger);
-		}
-		imageData.clear();
-		imageData.put(par1ArrayOfInteger);
-		imageData.position(0).limit(par1ArrayOfInteger.length);
-		GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, par2, par3, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, imageData);
-	}
-	
-	public void deleteTexture(int par1)
-	{
-		textureNameToImageMap.removeObject(par1);
-		GL11.glDeleteTextures(par1);
-	}
-	
-	private int[] getImageContents(BufferedImage par1BufferedImage, int[] par2ArrayOfInteger)
-	{
-		int var3 = par1BufferedImage.getWidth();
-		int var4 = par1BufferedImage.getHeight();
-		par1BufferedImage.getRGB(0, 0, var3, var4, par2ArrayOfInteger, 0, var3);
-		return par2ArrayOfInteger;
-	}
-	
-	private int[] getImageContentsAndAllocate(BufferedImage par1BufferedImage)
-	{
-		return getImageContents(par1BufferedImage, new int[par1BufferedImage.getWidth() * par1BufferedImage.getHeight()]);
-	}
-	
-	public Icon getMissingIcon(int par1)
-	{
-		switch(par1)
-		{
-			case 0:
-				return textureMapBlocks.getMissingIcon();
-			case 1:
-			default:
-				return textureMapItems.getMissingIcon();
-		}
-	}
-	
-	private int getTexture(String par1Str)
-	{
-		if(par1Str.equals("/terrain.png"))
-		{
-			textureMapBlocks.getTexture().bindTexture(0);
-			return textureMapBlocks.getTexture().getGlTextureId();
-		} else if(par1Str.equals("/gui/items.png"))
-		{
-			textureMapItems.getTexture().bindTexture(0);
-			return textureMapItems.getTexture().getGlTextureId();
-		} else
-		{
-			Integer var2 = (Integer) textureMap.get(par1Str);
-			if(var2 != null) return var2.intValue();
-			else
-			{
-				String var8 = par1Str;
-				try
-				{
-					int var3 = GLAllocation.generateTextureNames();
-					boolean var9 = par1Str.startsWith("%blur%");
-					if(var9)
-					{
-						par1Str = par1Str.substring(6);
-					}
-					boolean var5 = par1Str.startsWith("%clamp%");
-					if(var5)
-					{
-						par1Str = par1Str.substring(7);
-					}
-					InputStream var6 = texturePack.getSelectedTexturePack().getResourceAsStream(par1Str);
-					if(var6 == null)
-					{
-						setupTextureExt(missingTextureImage, var3, var9, var5);
-					} else
-					{
-						setupTextureExt(readTextureImage(var6), var3, var9, var5);
-					}
-					textureMap.put(var8, Integer.valueOf(var3));
-					return var3;
-				} catch(Exception var7)
-				{
-					var7.printStackTrace();
-					int var4 = GLAllocation.generateTextureNames();
-					setupTexture(missingTextureImage, var4);
-					textureMap.put(par1Str, Integer.valueOf(var4));
-					return var4;
-				}
-			}
-		}
-	}
-	
-	public int[] getTextureContents(String par1Str)
-	{
-		ITexturePack var2 = texturePack.getSelectedTexturePack();
-		int[] var3 = (int[]) textureContentsMap.get(par1Str);
-		if(var3 != null) return var3;
-		else
-		{
-			try
-			{
-				InputStream var7 = var2.getResourceAsStream(par1Str);
-				int[] var4;
-				if(var7 == null)
-				{
-					var4 = getImageContentsAndAllocate(missingTextureImage);
-				} else
-				{
-					var4 = getImageContentsAndAllocate(readTextureImage(var7));
-				}
-				textureContentsMap.put(par1Str, var4);
-				return var4;
-			} catch(IOException var6)
-			{
-				var6.printStackTrace();
-				int[] var5 = getImageContentsAndAllocate(missingTextureImage);
-				textureContentsMap.put(par1Str, var5);
-				return var5;
-			}
-		}
-	}
-	
-	public int getTextureForDownloadableImage(String par1Str, String par2Str)
-	{
-		ThreadDownloadImageData var3 = (ThreadDownloadImageData) urlToImageDataMap.get(par1Str);
-		if(var3 != null && var3.image != null && !var3.textureSetupComplete)
-		{
-			if(var3.textureName < 0)
-			{
-				var3.textureName = allocateAndSetupTexture(var3.image);
-			} else
-			{
-				setupTexture(var3.image, var3.textureName);
-			}
-			var3.textureSetupComplete = true;
-		}
-		return var3 != null && var3.textureName >= 0 ? var3.textureName : par2Str == null ? -1 : getTexture(par2Str);
-	}
-	
-	public boolean hasImageData(String par1Str)
-	{
-		return urlToImageDataMap.containsKey(par1Str);
-	}
-	
-	public ThreadDownloadImageData obtainImageData(String par1Str, IImageBuffer par2IImageBuffer)
-	{
-		ThreadDownloadImageData var3 = (ThreadDownloadImageData) urlToImageDataMap.get(par1Str);
-		if(var3 == null)
-		{
-			urlToImageDataMap.put(par1Str, new ThreadDownloadImageData(par1Str, par2IImageBuffer));
-		} else
-		{
-			++var3.referenceCount;
-		}
-		return var3;
-	}
-	
-	private BufferedImage readTextureImage(InputStream par1InputStream) throws IOException
-	{
-		BufferedImage var2 = ImageIO.read(par1InputStream);
-		par1InputStream.close();
-		return var2;
-	}
-	
-	public void refreshTextureMaps()
-	{
-		textureMapBlocks.refreshTextures();
-		textureMapItems.refreshTextures();
-	}
-	
-	public void refreshTextures()
-	{
-		ITexturePack var1 = texturePack.getSelectedTexturePack();
-		refreshTextureMaps();
-		Iterator var2 = textureNameToImageMap.getKeySet().iterator();
-		BufferedImage var4;
-		while(var2.hasNext())
-		{
-			int var3 = ((Integer) var2.next()).intValue();
-			var4 = (BufferedImage) textureNameToImageMap.lookup(var3);
-			setupTexture(var4, var3);
-		}
-		ThreadDownloadImageData var10;
-		for(var2 = urlToImageDataMap.values().iterator(); var2.hasNext(); var10.textureSetupComplete = false)
-		{
-			var10 = (ThreadDownloadImageData) var2.next();
-		}
-		var2 = textureMap.keySet().iterator();
-		String var11;
-		while(var2.hasNext())
-		{
-			var11 = (String) var2.next();
-			try
-			{
-				int var12 = ((Integer) textureMap.get(var11)).intValue();
-				boolean var6 = var11.startsWith("%blur%");
-				if(var6)
-				{
-					var11 = var11.substring(6);
-				}
-				boolean var7 = var11.startsWith("%clamp%");
-				if(var7)
-				{
-					var11 = var11.substring(7);
-				}
-				BufferedImage var5 = readTextureImage(var1.getResourceAsStream(var11));
-				setupTextureExt(var5, var12, var6, var7);
-			} catch(IOException var9)
-			{
-				var9.printStackTrace();
-			}
-		}
-		var2 = textureContentsMap.keySet().iterator();
-		while(var2.hasNext())
-		{
-			var11 = (String) var2.next();
-			try
-			{
-				var4 = readTextureImage(var1.getResourceAsStream(var11));
-				getImageContents(var4, (int[]) textureContentsMap.get(var11));
-			} catch(IOException var8)
-			{
-				var8.printStackTrace();
-			}
-		}
-		Minecraft.getMinecraft().fontRenderer.readFontData();
-		Minecraft.getMinecraft().standardGalacticFontRenderer.readFontData();
-	}
-	
-	public void releaseImageData(String par1Str)
-	{
-		ThreadDownloadImageData var2 = (ThreadDownloadImageData) urlToImageDataMap.get(par1Str);
-		if(var2 != null)
-		{
-			--var2.referenceCount;
-			if(var2.referenceCount == 0)
-			{
-				if(var2.textureName >= 0)
-				{
-					deleteTexture(var2.textureName);
-				}
-				urlToImageDataMap.remove(par1Str);
-			}
-		}
-	}
-	
-	public void resetBoundTexture()
-	{
-		boundTexture = -1;
-	}
-	
-	public void setupTexture(BufferedImage par1BufferedImage, int par2)
-	{
-		setupTextureExt(par1BufferedImage, par2, false, false);
-	}
-	
-	public void setupTextureExt(BufferedImage par1BufferedImage, int par2, boolean par3, boolean par4)
-	{
-		this.bindTexture(par2);
-		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_NEAREST);
-		GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_NEAREST);
-		if(par3)
-		{
-			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_LINEAR);
-			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_LINEAR);
-		}
-		if(par4)
-		{
-			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_S, GL11.GL_CLAMP);
-			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, GL11.GL_CLAMP);
-		} else
-		{
-			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_S, GL11.GL_REPEAT);
-			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, GL11.GL_REPEAT);
-		}
-		int var5 = par1BufferedImage.getWidth();
-		int var6 = par1BufferedImage.getHeight();
-		int[] var7 = new int[var5 * var6];
-		par1BufferedImage.getRGB(0, 0, var5, var6, var7, 0, var5);
-		if(options != null && options.anaglyph)
-		{
-			var7 = colorToAnaglyph(var7);
-		}
-		imageData.clear();
-		imageData.put(var7);
-		imageData.position(0).limit(var7.length);
-		GL11.glTexImage2D(GL11.GL_TEXTURE_2D, 0, GL11.GL_RGBA, var5, var6, 0, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, imageData);
-	}
-	
-	public void updateDynamicTextures()
-	{
-		textureMapBlocks.updateAnimations();
-		textureMapItems.updateAnimations();
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderEntity.java b/RMCClient/minecraft/net/minecraft/src/RenderEntity.java
index b555b7e..1585185 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderEntity.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderEntity.java
@@ -10,4 +10,9 @@
 		renderOffsetAABB(par1Entity.boundingBox, par2 - par1Entity.lastTickPosX, par4 - par1Entity.lastTickPosY, par6 - par1Entity.lastTickPosZ);
 		GL11.glPopMatrix();
 	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return null;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderFallingSand.java b/RMCClient/minecraft/net/minecraft/src/RenderFallingSand.java
index c1bf1f3..63eec10 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderFallingSand.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderFallingSand.java
@@ -4,7 +4,7 @@
 
 public class RenderFallingSand extends Render
 {
-	private RenderBlocks sandRenderBlocks = new RenderBlocks();
+	private final RenderBlocks sandRenderBlocks = new RenderBlocks();
 	
 	public RenderFallingSand()
 	{
@@ -24,7 +24,7 @@
 		{
 			GL11.glPushMatrix();
 			GL11.glTranslatef((float) par2, (float) par4, (float) par6);
-			loadTexture("/terrain.png");
+			func_110777_b(par1EntityFallingSand);
 			GL11.glDisable(GL11.GL_LIGHTING);
 			Tessellator var12;
 			if(var11 instanceof BlockAnvil && var11.getRenderType() == 35)
@@ -54,4 +54,14 @@
 			GL11.glPopMatrix();
 		}
 	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110783_a((EntityFallingSand) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110783_a(EntityFallingSand p_110783_1_)
+	{
+		return TextureMap.field_110575_b;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderFireball.java b/RMCClient/minecraft/net/minecraft/src/RenderFireball.java
index 037480d..1b69b17 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderFireball.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderFireball.java
@@ -7,9 +7,9 @@
 {
 	private float field_77002_a;
 	
-	public RenderFireball(float par1)
+	public RenderFireball(float p_i1254_1_)
 	{
-		field_77002_a = par1;
+		field_77002_a = p_i1254_1_;
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
@@ -20,12 +20,12 @@
 	public void doRenderFireball(EntityFireball par1EntityFireball, double par2, double par4, double par6, float par8, float par9)
 	{
 		GL11.glPushMatrix();
+		func_110777_b(par1EntityFireball);
 		GL11.glTranslatef((float) par2, (float) par4, (float) par6);
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 		float var10 = field_77002_a;
 		GL11.glScalef(var10 / 1.0F, var10 / 1.0F, var10 / 1.0F);
 		Icon var11 = Item.fireballCharge.getIconFromDamage(0);
-		loadTexture("/gui/items.png");
 		Tessellator var12 = Tessellator.instance;
 		float var13 = var11.getMinU();
 		float var14 = var11.getMaxU();
@@ -46,4 +46,14 @@
 		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
 		GL11.glPopMatrix();
 	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110790_a((EntityFireball) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110790_a(EntityFireball p_110790_1_)
+	{
+		return TextureMap.field_110576_c;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderFish.java b/RMCClient/minecraft/net/minecraft/src/RenderFish.java
index 7a87de3..1daef66 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderFish.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderFish.java
@@ -7,6 +7,8 @@
 
 public class RenderFish extends Render
 {
+	private static final ResourceLocation field_110792_a = new ResourceLocation("textures/particle/particles.png");
+	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
 	{
 		doRenderFishHook((EntityFishHook) par1Entity, par2, par4, par6, par8, par9);
@@ -18,26 +20,26 @@
 		GL11.glTranslatef((float) par2, (float) par4, (float) par6);
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 		GL11.glScalef(0.5F, 0.5F, 0.5F);
-		byte var10 = 1;
-		byte var11 = 2;
-		loadTexture("/particles.png");
-		Tessellator var12 = Tessellator.instance;
-		float var13 = (var10 * 8 + 0) / 128.0F;
-		float var14 = (var10 * 8 + 8) / 128.0F;
-		float var15 = (var11 * 8 + 0) / 128.0F;
-		float var16 = (var11 * 8 + 8) / 128.0F;
+		func_110777_b(par1EntityFishHook);
+		Tessellator var10 = Tessellator.instance;
+		byte var11 = 1;
+		byte var12 = 2;
+		float var13 = (var11 * 8 + 0) / 128.0F;
+		float var14 = (var11 * 8 + 8) / 128.0F;
+		float var15 = (var12 * 8 + 0) / 128.0F;
+		float var16 = (var12 * 8 + 8) / 128.0F;
 		float var17 = 1.0F;
 		float var18 = 0.5F;
 		float var19 = 0.5F;
 		GL11.glRotatef(180.0F - renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
 		GL11.glRotatef(-renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
-		var12.startDrawingQuads();
-		var12.setNormal(0.0F, 1.0F, 0.0F);
-		var12.addVertexWithUV(0.0F - var18, 0.0F - var19, 0.0D, var13, var16);
-		var12.addVertexWithUV(var17 - var18, 0.0F - var19, 0.0D, var14, var16);
-		var12.addVertexWithUV(var17 - var18, 1.0F - var19, 0.0D, var14, var15);
-		var12.addVertexWithUV(0.0F - var18, 1.0F - var19, 0.0D, var13, var15);
-		var12.draw();
+		var10.startDrawingQuads();
+		var10.setNormal(0.0F, 1.0F, 0.0F);
+		var10.addVertexWithUV(0.0F - var18, 0.0F - var19, 0.0D, var13, var16);
+		var10.addVertexWithUV(var17 - var18, 0.0F - var19, 0.0D, var14, var16);
+		var10.addVertexWithUV(var17 - var18, 1.0F - var19, 0.0D, var14, var15);
+		var10.addVertexWithUV(0.0F - var18, 1.0F - var19, 0.0D, var13, var15);
+		var10.draw();
 		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
 		GL11.glPopMatrix();
 		if(par1EntityFishHook.angler != null)
@@ -52,7 +54,7 @@
 			double var23 = par1EntityFishHook.angler.prevPosX + (par1EntityFishHook.angler.posX - par1EntityFishHook.angler.prevPosX) * par9 + var22.xCoord;
 			double var25 = par1EntityFishHook.angler.prevPosY + (par1EntityFishHook.angler.posY - par1EntityFishHook.angler.prevPosY) * par9 + var22.yCoord;
 			double var27 = par1EntityFishHook.angler.prevPosZ + (par1EntityFishHook.angler.posZ - par1EntityFishHook.angler.prevPosZ) * par9 + var22.zCoord;
-			double var29 = par1EntityFishHook.angler != Minecraft.getMinecraft().thePlayer ? (double) par1EntityFishHook.angler.getEyeHeight() : 0.0D;
+			double var29 = par1EntityFishHook.angler == Minecraft.getMinecraft().thePlayer ? 0.0D : (double) par1EntityFishHook.angler.getEyeHeight();
 			if(renderManager.options.thirdPersonView > 0 || par1EntityFishHook.angler != Minecraft.getMinecraft().thePlayer)
 			{
 				float var31 = (par1EntityFishHook.angler.prevRenderYawOffset + (par1EntityFishHook.angler.renderYawOffset - par1EntityFishHook.angler.prevRenderYawOffset) * par9) * (float) Math.PI / 180.0F;
@@ -70,17 +72,27 @@
 			double var41 = (float) (var27 - var35);
 			GL11.glDisable(GL11.GL_TEXTURE_2D);
 			GL11.glDisable(GL11.GL_LIGHTING);
-			var12.startDrawing(3);
-			var12.setColorOpaque_I(0);
+			var10.startDrawing(3);
+			var10.setColorOpaque_I(0);
 			byte var43 = 16;
 			for(int var44 = 0; var44 <= var43; ++var44)
 			{
 				float var45 = (float) var44 / (float) var43;
-				var12.addVertex(par2 + var37 * var45, par4 + var39 * (var45 * var45 + var45) * 0.5D + 0.25D, par6 + var41 * var45);
+				var10.addVertex(par2 + var37 * var45, par4 + var39 * (var45 * var45 + var45) * 0.5D + 0.25D, par6 + var41 * var45);
 			}
-			var12.draw();
+			var10.draw();
 			GL11.glEnable(GL11.GL_LIGHTING);
 			GL11.glEnable(GL11.GL_TEXTURE_2D);
 		}
 	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110791_a((EntityFishHook) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110791_a(EntityFishHook p_110791_1_)
+	{
+		return field_110792_a;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderGhast.java b/RMCClient/minecraft/net/minecraft/src/RenderGhast.java
index c91d813..6523466 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderGhast.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderGhast.java
@@ -4,12 +4,25 @@
 
 public class RenderGhast extends RenderLiving
 {
+	private static final ResourceLocation field_110869_a = new ResourceLocation("textures/entity/ghast/ghast.png");
+	private static final ResourceLocation field_110868_f = new ResourceLocation("textures/entity/ghast/ghast_shooting.png");
+	
 	public RenderGhast()
 	{
 		super(new ModelGhast(), 0.5F);
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110867_a((EntityGhast) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110867_a(EntityGhast p_110867_1_)
+	{
+		return p_110867_1_.func_110182_bF() ? field_110868_f : field_110869_a;
+	}
+	
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		preRenderGhast((EntityGhast) par1EntityLiving, par2);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderGiantZombie.java b/RMCClient/minecraft/net/minecraft/src/RenderGiantZombie.java
index c432e27..3b2dea7 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderGiantZombie.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderGiantZombie.java
@@ -4,15 +4,26 @@
 
 public class RenderGiantZombie extends RenderLiving
 {
+	private static final ResourceLocation field_110871_a = new ResourceLocation("textures/entity/zombie/zombie.png");
 	private float scale;
 	
-	public RenderGiantZombie(ModelBase par1ModelBase, float par2, float par3)
+	public RenderGiantZombie(ModelBase p_i1255_1_, float p_i1255_2_, float p_i1255_3_)
 	{
-		super(par1ModelBase, par2 * par3);
-		scale = par3;
+		super(p_i1255_1_, p_i1255_2_ * p_i1255_3_);
+		scale = p_i1255_3_;
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110870_a((EntityGiantZombie) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110870_a(EntityGiantZombie p_110870_1_)
+	{
+		return field_110871_a;
+	}
+	
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		preRenderScale((EntityGiantZombie) par1EntityLiving, par2);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderGlobal.java b/RMCClient/minecraft/net/minecraft/src/RenderGlobal.java
index f65949a..2a0f860 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderGlobal.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderGlobal.java
@@ -17,9 +17,13 @@
 
 public class RenderGlobal implements IWorldAccess
 {
+	private static final ResourceLocation field_110927_h = new ResourceLocation("textures/environment/moon_phases.png");
+	private static final ResourceLocation field_110928_i = new ResourceLocation("textures/environment/sun.png");
+	private static final ResourceLocation field_110925_j = new ResourceLocation("textures/environment/clouds.png");
+	private static final ResourceLocation field_110926_k = new ResourceLocation("textures/environment/end_sky.png");
 	public List tileEntities = new ArrayList();
 	private WorldClient theWorld;
-	private final RenderEngine renderEngine;
+	private final TextureManager renderEngine;
 	private List worldRenderersToUpdate = new ArrayList();
 	private WorldRenderer[] sortedWorldRenderers;
 	private WorldRenderer[] worldRenderers;
@@ -30,8 +34,8 @@
 	private Minecraft mc;
 	private RenderBlocks globalRenderBlocks;
 	private IntBuffer glOcclusionQueryBase;
-	private boolean occlusionEnabled = false;
-	private int cloudTickCounter = 0;
+	private boolean occlusionEnabled;
+	private int cloudTickCounter;
 	private int starGLCallList;
 	private int glSkyList;
 	private int glSkyList2;
@@ -48,7 +52,6 @@
 	private int countEntitiesTotal;
 	private int countEntitiesRendered;
 	private int countEntitiesHidden;
-	int[] dummyBuf50k = new int[50000];
 	IntBuffer occlusionResult = GLAllocation.createDirectIntBuffer(64);
 	private int renderersLoaded;
 	private int renderersBeingClipped;
@@ -62,23 +65,23 @@
 	double prevSortX = -9999.0D;
 	double prevSortY = -9999.0D;
 	double prevSortZ = -9999.0D;
-	int frustumCheckOffset = 0;
+	int frustumCheckOffset;
 	
-	public RenderGlobal(Minecraft par1Minecraft, RenderEngine par2RenderEngine)
+	public RenderGlobal(Minecraft p_i1249_1_)
 	{
-		mc = par1Minecraft;
-		renderEngine = par2RenderEngine;
-		byte var3 = 34;
-		byte var4 = 32;
-		glRenderListBase = GLAllocation.generateDisplayLists(var3 * var3 * var4 * 3);
+		mc = p_i1249_1_;
+		renderEngine = p_i1249_1_.func_110434_K();
+		byte var2 = 34;
+		byte var3 = 32;
+		glRenderListBase = GLAllocation.generateDisplayLists(var2 * var2 * var3 * 3);
 		occlusionEnabled = OpenGlCapsChecker.checkARBOcclusion();
 		if(occlusionEnabled)
 		{
 			occlusionResult.clear();
-			glOcclusionQueryBase = GLAllocation.createDirectIntBuffer(var3 * var3 * var4);
+			glOcclusionQueryBase = GLAllocation.createDirectIntBuffer(var2 * var2 * var3);
 			glOcclusionQueryBase.clear();
 			glOcclusionQueryBase.position(0);
-			glOcclusionQueryBase.limit(var3 * var3 * var4);
+			glOcclusionQueryBase.limit(var2 * var2 * var3);
 			ARBOcclusionQuery.glGenQueriesARB(glOcclusionQueryBase);
 		}
 		starGLCallList = GLAllocation.generateDisplayLists(3);
@@ -87,42 +90,42 @@
 		renderStars();
 		GL11.glEndList();
 		GL11.glPopMatrix();
-		Tessellator var5 = Tessellator.instance;
+		Tessellator var4 = Tessellator.instance;
 		glSkyList = starGLCallList + 1;
 		GL11.glNewList(glSkyList, GL11.GL_COMPILE);
-		byte var7 = 64;
-		int var8 = 256 / var7 + 2;
-		float var6 = 16.0F;
+		byte var6 = 64;
+		int var7 = 256 / var6 + 2;
+		float var5 = 16.0F;
+		int var8;
 		int var9;
-		int var10;
-		for(var9 = -var7 * var8; var9 <= var7 * var8; var9 += var7)
+		for(var8 = -var6 * var7; var8 <= var6 * var7; var8 += var6)
 		{
-			for(var10 = -var7 * var8; var10 <= var7 * var8; var10 += var7)
+			for(var9 = -var6 * var7; var9 <= var6 * var7; var9 += var6)
 			{
-				var5.startDrawingQuads();
-				var5.addVertex(var9 + 0, var6, var10 + 0);
-				var5.addVertex(var9 + var7, var6, var10 + 0);
-				var5.addVertex(var9 + var7, var6, var10 + var7);
-				var5.addVertex(var9 + 0, var6, var10 + var7);
-				var5.draw();
+				var4.startDrawingQuads();
+				var4.addVertex(var8 + 0, var5, var9 + 0);
+				var4.addVertex(var8 + var6, var5, var9 + 0);
+				var4.addVertex(var8 + var6, var5, var9 + var6);
+				var4.addVertex(var8 + 0, var5, var9 + var6);
+				var4.draw();
 			}
 		}
 		GL11.glEndList();
 		glSkyList2 = starGLCallList + 2;
 		GL11.glNewList(glSkyList2, GL11.GL_COMPILE);
-		var6 = -16.0F;
-		var5.startDrawingQuads();
-		for(var9 = -var7 * var8; var9 <= var7 * var8; var9 += var7)
+		var5 = -16.0F;
+		var4.startDrawingQuads();
+		for(var8 = -var6 * var7; var8 <= var6 * var7; var8 += var6)
 		{
-			for(var10 = -var7 * var8; var10 <= var7 * var8; var10 += var7)
+			for(var9 = -var6 * var7; var9 <= var6 * var7; var9 += var6)
 			{
-				var5.addVertex(var9 + var7, var6, var10 + 0);
-				var5.addVertex(var9 + 0, var6, var10 + 0);
-				var5.addVertex(var9 + 0, var6, var10 + var7);
-				var5.addVertex(var9 + var7, var6, var10 + var7);
+				var4.addVertex(var8 + var6, var5, var9 + 0);
+				var4.addVertex(var8 + 0, var5, var9 + 0);
+				var4.addVertex(var8 + 0, var5, var9 + var6);
+				var4.addVertex(var8 + var6, var5, var9 + var6);
 			}
 		}
-		var5.draw();
+		var4.draw();
 		GL11.glEndList();
 	}
 	
@@ -325,7 +328,7 @@
 						var21 = new EntityReddustFX(theWorld, par2, par4, par6, (float) par8, (float) par10, (float) par12);
 					} else if(par1Str.equals("snowballpoof"))
 					{
-						var21 = new EntityBreakingFX(theWorld, par2, par4, par6, Item.snowball, renderEngine);
+						var21 = new EntityBreakingFX(theWorld, par2, par4, par6, Item.snowball);
 					} else if(par1Str.equals("dripWater"))
 					{
 						var21 = new EntityDropParticleFX(theWorld, par2, par4, par6, Material.water);
@@ -337,7 +340,7 @@
 						var21 = new EntitySnowShovelFX(theWorld, par2, par4, par6, par8, par10, par12);
 					} else if(par1Str.equals("slime"))
 					{
-						var21 = new EntityBreakingFX(theWorld, par2, par4, par6, Item.slimeBall, renderEngine);
+						var21 = new EntityBreakingFX(theWorld, par2, par4, par6, Item.slimeBall);
 					} else if(par1Str.equals("heart"))
 					{
 						var21 = new EntityHeartFX(theWorld, par2, par4, par6, par8, par10, par12);
@@ -351,16 +354,30 @@
 						var21 = new EntityAuraFX(theWorld, par2, par4, par6, par8, par10, par12);
 						var21.setParticleTextureIndex(82);
 						var21.setRBGColorF(1.0F, 1.0F, 1.0F);
-					} else if(par1Str.startsWith("iconcrack_"))
+					} else
 					{
-						int var27 = Integer.parseInt(par1Str.substring(par1Str.indexOf("_") + 1));
-						var21 = new EntityBreakingFX(theWorld, par2, par4, par6, par8, par10, par12, Item.itemsList[var27], renderEngine);
-					} else if(par1Str.startsWith("tilecrack_"))
-					{
-						String[] var28 = par1Str.split("_", 3);
-						int var25 = Integer.parseInt(var28[1]);
-						int var26 = Integer.parseInt(var28[2]);
-						var21 = new EntityDiggingFX(theWorld, par2, par4, par6, par8, par10, par12, Block.blocksList[var25], 0, var26, renderEngine).applyRenderColor(var26);
+						int var25;
+						String[] var27;
+						int var26;
+						if(par1Str.startsWith("iconcrack_"))
+						{
+							var27 = par1Str.split("_", 3);
+							var25 = Integer.parseInt(var27[1]);
+							if(var27.length > 2)
+							{
+								var26 = Integer.parseInt(var27[2]);
+								var21 = new EntityBreakingFX(theWorld, par2, par4, par6, par8, par10, par12, Item.itemsList[var25], var26);
+							} else
+							{
+								var21 = new EntityBreakingFX(theWorld, par2, par4, par6, par8, par10, par12, Item.itemsList[var25], 0);
+							}
+						} else if(par1Str.startsWith("tilecrack_"))
+						{
+							var27 = par1Str.split("_", 3);
+							var25 = Integer.parseInt(var27[1]);
+							var26 = Integer.parseInt(var27[2]);
+							var21 = new EntityDiggingFX(theWorld, par2, par4, par6, par8, par10, par12, Block.blocksList[var25], var26).applyRenderColor(var26);
+						}
 					}
 					if(var21 != null)
 					{
@@ -372,24 +389,6 @@
 		} else return null;
 	}
 	
-	public void drawBlockBreaking(EntityPlayer par1EntityPlayer, MovingObjectPosition par2MovingObjectPosition, int par3, ItemStack par4ItemStack, float par5)
-	{
-		Tessellator var6 = Tessellator.instance;
-		GL11.glEnable(GL11.GL_BLEND);
-		GL11.glEnable(GL11.GL_ALPHA_TEST);
-		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE);
-		GL11.glColor4f(1.0F, 1.0F, 1.0F, (MathHelper.sin(Minecraft.getSystemTime() / 100.0F) * 0.2F + 0.4F) * 0.5F);
-		if(par3 != 0 && par4ItemStack != null)
-		{
-			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-			float var7 = MathHelper.sin(Minecraft.getSystemTime() / 100.0F) * 0.2F + 0.8F;
-			GL11.glColor4f(var7, var7, var7, MathHelper.sin(Minecraft.getSystemTime() / 200.0F) * 0.2F + 0.5F);
-			renderEngine.bindTexture("/terrain.png");
-		}
-		GL11.glDisable(GL11.GL_BLEND);
-		GL11.glDisable(GL11.GL_ALPHA_TEST);
-	}
-	
 	public void drawBlockDamageTexture(Tessellator par1Tessellator, EntityPlayer par2EntityPlayer, float par3)
 	{
 		double var4 = par2EntityPlayer.lastTickPosX + (par2EntityPlayer.posX - par2EntityPlayer.lastTickPosX) * par3;
@@ -398,7 +397,7 @@
 		if(!damagedBlocks.isEmpty())
 		{
 			GL11.glBlendFunc(GL11.GL_DST_COLOR, GL11.GL_SRC_COLOR);
-			renderEngine.bindTexture("/terrain.png");
+			renderEngine.func_110577_a(TextureMap.field_110575_b);
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 0.5F);
 			GL11.glPushMatrix();
 			GL11.glDisable(GL11.GL_ALPHA_TEST);
@@ -469,7 +468,7 @@
 		var2.draw();
 	}
 	
-	public void drawSelectionBox(EntityPlayer par1EntityPlayer, MovingObjectPosition par2MovingObjectPosition, int par3, ItemStack par4ItemStack, float par5)
+	public void drawSelectionBox(EntityPlayer par1EntityPlayer, MovingObjectPosition par2MovingObjectPosition, int par3, float par4ItemStack)
 	{
 		if(par3 == 0 && par2MovingObjectPosition.typeOfHit == EnumMovingObjectType.TILE)
 		{
@@ -479,15 +478,15 @@
 			GL11.glLineWidth(2.0F);
 			GL11.glDisable(GL11.GL_TEXTURE_2D);
 			GL11.glDepthMask(false);
-			float var6 = 0.002F;
-			int var7 = theWorld.getBlockId(par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ);
-			if(var7 > 0)
+			float var5 = 0.002F;
+			int var6 = theWorld.getBlockId(par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ);
+			if(var6 > 0)
 			{
-				Block.blocksList[var7].setBlockBoundsBasedOnState(theWorld, par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ);
-				double var8 = par1EntityPlayer.lastTickPosX + (par1EntityPlayer.posX - par1EntityPlayer.lastTickPosX) * par5;
-				double var10 = par1EntityPlayer.lastTickPosY + (par1EntityPlayer.posY - par1EntityPlayer.lastTickPosY) * par5;
-				double var12 = par1EntityPlayer.lastTickPosZ + (par1EntityPlayer.posZ - par1EntityPlayer.lastTickPosZ) * par5;
-				drawOutlinedBoundingBox(Block.blocksList[var7].getSelectedBoundingBoxFromPool(theWorld, par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ).expand(var6, var6, var6).getOffsetBoundingBox(-var8, -var10, -var12));
+				Block.blocksList[var6].setBlockBoundsBasedOnState(theWorld, par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ);
+				double var7 = par1EntityPlayer.lastTickPosX + (par1EntityPlayer.posX - par1EntityPlayer.lastTickPosX) * par4ItemStack;
+				double var9 = par1EntityPlayer.lastTickPosY + (par1EntityPlayer.posY - par1EntityPlayer.lastTickPosY) * par4ItemStack;
+				double var11 = par1EntityPlayer.lastTickPosZ + (par1EntityPlayer.posZ - par1EntityPlayer.lastTickPosZ) * par4ItemStack;
+				drawOutlinedBoundingBox(Block.blocksList[var6].getSelectedBoundingBoxFromPool(theWorld, par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ).expand(var5, var5, var5).getOffsetBoundingBox(-var7, -var9, -var11));
 			}
 			GL11.glDepthMask(true);
 			GL11.glEnable(GL11.GL_TEXTURE_2D);
@@ -573,7 +572,7 @@
 			}
 			if(theWorld != null)
 			{
-				EntityLiving var7 = mc.renderViewEntity;
+				EntityLivingBase var7 = mc.renderViewEntity;
 				if(var7 != null)
 				{
 					markRenderersForNewPosition(MathHelper.floor_double(var7.posX), MathHelper.floor_double(var7.posY), MathHelper.floor_double(var7.posZ));
@@ -714,27 +713,10 @@
 	
 	@Override public void onEntityCreate(Entity par1Entity)
 	{
-		par1Entity.updateCloak();
-		if(par1Entity.skinUrl != null)
-		{
-			renderEngine.obtainImageData(par1Entity.skinUrl, new ImageBufferDownload());
-		}
-		if(par1Entity.cloakUrl != null)
-		{
-			renderEngine.obtainImageData(par1Entity.cloakUrl, new ImageBufferDownload());
-		}
 	}
 	
 	@Override public void onEntityDestroy(Entity par1Entity)
 	{
-		if(par1Entity.skinUrl != null)
-		{
-			renderEngine.releaseImageData(par1Entity.skinUrl);
-		}
-		if(par1Entity.cloakUrl != null)
-		{
-			renderEngine.releaseImageData(par1Entity.cloakUrl);
-		}
 	}
 	
 	@Override public void playAuxSFX(EntityPlayer par1EntityPlayer, int par2, int par3, int par4, int par5, int par6)
@@ -853,7 +835,7 @@
 				var8 = par3;
 				var10 = par4;
 				var12 = par5;
-				var14 = "iconcrack_" + Item.potion.itemID;
+				var14 = "iconcrack_" + Item.potion.itemID + "_" + par6;
 				for(var15 = 0; var15 < 8; ++var15)
 				{
 					spawnParticle(var14, var8, var10, var12, var7.nextGaussian() * 0.15D, var7.nextDouble() * 0.2D, var7.nextGaussian() * 0.15D);
@@ -937,7 +919,7 @@
 		destroyBlockIcons = new Icon[10];
 		for(int var2 = 0; var2 < destroyBlockIcons.length; ++var2)
 		{
-			destroyBlockIcons[var2] = par1IconRegister.registerIcon("destroy_" + var2);
+			destroyBlockIcons[var2] = par1IconRegister.registerIcon("destroy_stage_" + var2);
 		}
 	}
 	
@@ -965,7 +947,7 @@
 				byte var3 = 32;
 				int var4 = 256 / var3;
 				Tessellator var5 = Tessellator.instance;
-				renderEngine.bindTexture("/environment/clouds.png");
+				renderEngine.func_110577_a(field_110925_j);
 				GL11.glEnable(GL11.GL_BLEND);
 				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 				Vec3 var6 = theWorld.getCloudColour(par1);
@@ -1028,7 +1010,7 @@
 		int var14 = MathHelper.floor_double(var10 / 2048.0D);
 		var8 -= var13 * 2048;
 		var10 -= var14 * 2048;
-		renderEngine.bindTexture("/environment/clouds.png");
+		renderEngine.func_110577_a(field_110925_j);
 		GL11.glEnable(GL11.GL_BLEND);
 		GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 		Vec3 var15 = theWorld.getCloudColour(par1);
@@ -1167,12 +1149,12 @@
 		} else
 		{
 			theWorld.theProfiler.startSection("prepare");
-			TileEntityRenderer.instance.cacheActiveRenderInfo(theWorld, renderEngine, mc.fontRenderer, mc.renderViewEntity, par3);
-			RenderManager.instance.cacheActiveRenderInfo(theWorld, renderEngine, mc.fontRenderer, mc.renderViewEntity, mc.pointedEntityLiving, mc.gameSettings, par3);
+			TileEntityRenderer.instance.cacheActiveRenderInfo(theWorld, mc.func_110434_K(), mc.fontRenderer, mc.renderViewEntity, par3);
+			RenderManager.instance.cacheActiveRenderInfo(theWorld, mc.func_110434_K(), mc.fontRenderer, mc.renderViewEntity, mc.pointedEntityLiving, mc.gameSettings, par3);
 			countEntitiesTotal = 0;
 			countEntitiesRendered = 0;
 			countEntitiesHidden = 0;
-			EntityLiving var4 = mc.renderViewEntity;
+			EntityLivingBase var4 = mc.renderViewEntity;
 			RenderManager.renderPosX = var4.lastTickPosX + (var4.posX - var4.lastTickPosX) * par3;
 			RenderManager.renderPosY = var4.lastTickPosY + (var4.posY - var4.lastTickPosY) * par3;
 			RenderManager.renderPosZ = var4.lastTickPosZ + (var4.posZ - var4.lastTickPosZ) * par3;
@@ -1198,7 +1180,17 @@
 			for(var6 = 0; var6 < var5.size(); ++var6)
 			{
 				var7 = (Entity) var5.get(var6);
-				if(var7.isInRangeToRenderVec3D(par1Vec3) && (var7.ignoreFrustumCheck || par2ICamera.isBoundingBoxInFrustum(var7.boundingBox) || var7.riddenByEntity == mc.thePlayer) && (var7 != mc.renderViewEntity || mc.gameSettings.thirdPersonView != 0 || mc.renderViewEntity.isPlayerSleeping()) && theWorld.blockExists(MathHelper.floor_double(var7.posX), 0, MathHelper.floor_double(var7.posZ)))
+				boolean var8 = var7.isInRangeToRenderVec3D(par1Vec3) && (var7.ignoreFrustumCheck || par2ICamera.isBoundingBoxInFrustum(var7.boundingBox) || var7.riddenByEntity == mc.thePlayer);
+				if(!var8 && var7 instanceof EntityLiving)
+				{
+					EntityLiving var9 = (EntityLiving) var7;
+					if(var9.func_110167_bD() && var9.func_110166_bE() != null)
+					{
+						Entity var10 = var9.func_110166_bE();
+						var8 = par2ICamera.isBoundingBoxInFrustum(var10.boundingBox);
+					}
+				}
+				if(var8 && (var7 != mc.renderViewEntity || mc.gameSettings.thirdPersonView != 0 || mc.renderViewEntity.isPlayerSleeping()) && theWorld.blockExists(MathHelper.floor_double(var7.posX), 0, MathHelper.floor_double(var7.posZ)))
 				{
 					++countEntitiesRendered;
 					RenderManager.instance.renderEntity(var7, par3);
@@ -1225,7 +1217,7 @@
 			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 			RenderHelper.disableStandardItemLighting();
 			GL11.glDepthMask(false);
-			renderEngine.bindTexture("/misc/tunnel.png");
+			renderEngine.func_110577_a(field_110926_k);
 			Tessellator var21 = Tessellator.instance;
 			for(int var22 = 0; var22 < 6; ++var22)
 			{
@@ -1344,7 +1336,7 @@
 			GL11.glRotatef(-90.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glRotatef(theWorld.getCelestialAngle(par1) * 360.0F, 1.0F, 0.0F, 0.0F);
 			var12 = 30.0F;
-			renderEngine.bindTexture("/environment/sun.png");
+			renderEngine.func_110577_a(field_110928_i);
 			var23.startDrawingQuads();
 			var23.addVertexWithUV(-var12, 100.0D, -var12, 0.0D, 0.0D);
 			var23.addVertexWithUV(var12, 100.0D, -var12, 1.0D, 0.0D);
@@ -1352,7 +1344,7 @@
 			var23.addVertexWithUV(-var12, 100.0D, var12, 0.0D, 1.0D);
 			var23.draw();
 			var12 = 20.0F;
-			renderEngine.bindTexture("/environment/moon_phases.png");
+			renderEngine.func_110577_a(field_110927_h);
 			int var28 = theWorld.getMoonPhase();
 			int var30 = var28 % 4;
 			int var29 = var28 / 4 % 2;
@@ -1463,7 +1455,7 @@
 				}
 			}
 		}
-		EntityLiving var19 = mc.renderViewEntity;
+		EntityLivingBase var19 = mc.renderViewEntity;
 		double var20 = var19.lastTickPosX + (var19.posX - var19.lastTickPosX) * par4;
 		double var10 = var19.lastTickPosY + (var19.posY - var19.lastTickPosY) * par4;
 		double var12 = var19.lastTickPosZ + (var19.posZ - var19.lastTickPosZ) * par4;
@@ -1562,7 +1554,7 @@
 		}
 	}
 	
-	public int sortAndRender(EntityLiving par1EntityLiving, int par2, double par3)
+	public int sortAndRender(EntityLivingBase par1EntityLiving, int par2, double par3)
 	{
 		theWorld.theProfiler.startSection("sortchunks");
 		for(int var5 = 0; var5 < 10; ++var5)
@@ -1741,7 +1733,7 @@
 		}
 	}
 	
-	public boolean updateRenderers(EntityLiving par1EntityLiving, boolean par2)
+	public boolean updateRenderers(EntityLivingBase par1EntityLiving, boolean par2)
 	{
 		byte var3 = 2;
 		RenderSorter var4 = new RenderSorter(par1EntityLiving);
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderHorse.java b/RMCClient/minecraft/net/minecraft/src/RenderHorse.java
new file mode 100644
index 0000000..e64bbed
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/RenderHorse.java
@@ -0,0 +1,98 @@
+package net.minecraft.src;
+
+import java.util.Map;
+
+import net.minecraft.client.Minecraft;
+
+import org.lwjgl.opengl.GL11;
+
+public class RenderHorse extends RenderLiving
+{
+	private static final Map field_110852_a = Maps.newHashMap();
+	private static final ResourceLocation field_110850_f = new ResourceLocation("textures/entity/horse/horse_white.png");
+	private static final ResourceLocation field_110851_g = new ResourceLocation("textures/entity/horse/mule.png");
+	private static final ResourceLocation field_110855_h = new ResourceLocation("textures/entity/horse/donkey.png");
+	private static final ResourceLocation field_110854_k = new ResourceLocation("textures/entity/horse/horse_zombie.png");
+	private static final ResourceLocation field_110853_l = new ResourceLocation("textures/entity/horse/horse_skeleton.png");
+	
+	public RenderHorse(ModelBase p_i1256_1_, float p_i1256_2_)
+	{
+		super(p_i1256_1_, p_i1256_2_);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110849_a((EntityHorse) p_110775_1_);
+	}
+	
+	protected void func_110846_a(EntityHorse p_110846_1_, float p_110846_2_, float p_110846_3_, float p_110846_4_, float p_110846_5_, float p_110846_6_, float p_110846_7_)
+	{
+		if(p_110846_1_.isInvisible())
+		{
+			mainModel.setRotationAngles(p_110846_2_, p_110846_3_, p_110846_4_, p_110846_5_, p_110846_6_, p_110846_7_, p_110846_1_);
+		} else
+		{
+			func_110777_b(p_110846_1_);
+			mainModel.render(p_110846_1_, p_110846_2_, p_110846_3_, p_110846_4_, p_110846_5_, p_110846_6_, p_110846_7_);
+		}
+	}
+	
+	protected void func_110847_a(EntityHorse p_110847_1_, float p_110847_2_)
+	{
+		float var3 = 1.0F;
+		int var4 = p_110847_1_.func_110265_bP();
+		if(var4 == 1)
+		{
+			var3 *= 0.87F;
+		} else if(var4 == 2)
+		{
+			var3 *= 0.92F;
+		}
+		GL11.glScalef(var3, var3, var3);
+		super.preRenderCallback(p_110847_1_, p_110847_2_);
+	}
+	
+	private ResourceLocation func_110848_b(EntityHorse p_110848_1_)
+	{
+		String var2 = p_110848_1_.func_110264_co();
+		ResourceLocation var3 = (ResourceLocation) field_110852_a.get(var2);
+		if(var3 == null)
+		{
+			var3 = new ResourceLocation(var2);
+			Minecraft.getMinecraft().func_110434_K().func_110579_a(var3, new LayeredTexture(p_110848_1_.func_110212_cp()));
+			field_110852_a.put(var2, var3);
+		}
+		return var3;
+	}
+	
+	protected ResourceLocation func_110849_a(EntityHorse p_110849_1_)
+	{
+		if(!p_110849_1_.func_110239_cn())
+		{
+			switch(p_110849_1_.func_110265_bP())
+			{
+				case 0:
+				default:
+					return field_110850_f;
+				case 1:
+					return field_110855_h;
+				case 2:
+					return field_110851_g;
+				case 3:
+					return field_110854_k;
+				case 4:
+					return field_110853_l;
+			}
+		} else return func_110848_b(p_110849_1_);
+	}
+	
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
+	{
+		func_110847_a((EntityHorse) par1EntityLiving, par2);
+	}
+	
+	@Override protected void renderModel(EntityLivingBase par1EntityLiving, float par2, float par3, float par4, float par5, float par6, float par7)
+	{
+		func_110846_a((EntityHorse) par1EntityLiving, par2, par3, par4, par5, par6, par7);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderIronGolem.java b/RMCClient/minecraft/net/minecraft/src/RenderIronGolem.java
index 8dc4172..66697c3 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderIronGolem.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderIronGolem.java
@@ -5,7 +5,8 @@
 
 public class RenderIronGolem extends RenderLiving
 {
-	private ModelIronGolem ironGolemModel;
+	private static final ResourceLocation field_110899_a = new ResourceLocation("textures/entity/iron_golem.png");
+	private final ModelIronGolem ironGolemModel;
 	
 	public RenderIronGolem()
 	{
@@ -28,7 +29,17 @@
 		doRenderIronGolem((EntityIronGolem) par1EntityLiving, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110898_a((EntityIronGolem) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110898_a(EntityIronGolem p_110898_1_)
+	{
+		return field_110899_a;
+	}
+	
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
 	{
 		renderIronGolemEquippedItems((EntityIronGolem) par1EntityLiving, par2);
 	}
@@ -51,14 +62,19 @@
 			OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, var5 / 1.0F, var6 / 1.0F);
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-			loadTexture("/terrain.png");
+			func_110776_a(TextureMap.field_110575_b);
 			renderBlocks.renderBlockAsItem(Block.plantRed, 0, 1.0F);
 			GL11.glPopMatrix();
 			GL11.glDisable(GL12.GL_RESCALE_NORMAL);
 		}
 	}
 	
-	@Override protected void rotateCorpse(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		doRenderIronGolem((EntityIronGolem) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected void rotateCorpse(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		rotateIronGolemCorpse((EntityIronGolem) par1EntityLiving, par2, par3, par4);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderItem.java b/RMCClient/minecraft/net/minecraft/src/RenderItem.java
index 2c9d07c..1b9e5d1 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderItem.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderItem.java
@@ -9,11 +9,12 @@
 
 public class RenderItem extends Render
 {
+	private static final ResourceLocation field_110798_h = new ResourceLocation("textures/misc/enchanted_item_glint.png");
 	private RenderBlocks itemRenderBlocks = new RenderBlocks();
 	private Random random = new Random();
 	public boolean renderWithColor = true;
-	public float zLevel = 0.0F;
-	public static boolean renderInFrame = false;
+	public float zLevel;
+	public static boolean renderInFrame;
 	
 	public RenderItem()
 	{
@@ -28,6 +29,7 @@
 	
 	public void doRenderItem(EntityItem par1EntityItem, double par2, double par4, double par6, float par8, float par9)
 	{
+		func_110777_b(par1EntityItem);
 		random.setSeed(187L);
 		ItemStack var10 = par1EntityItem.getEntityItem();
 		if(var10.getItem() != null)
@@ -54,11 +56,11 @@
 			}
 			GL11.glTranslatef((float) par2, (float) par4 + var11, (float) par6);
 			GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-			int var17;
 			float var19;
 			float var18;
 			float var20;
-			if(var10.getItemSpriteNumber() == 0 && Block.blocksList[var10.itemID] != null && RenderBlocks.renderItemIn3d(Block.blocksList[var10.itemID].getRenderType()))
+			int var26;
+			if(var10.getItemSpriteNumber() == 0 && var10.itemID < Block.blocksList.length && Block.blocksList[var10.itemID] != null && RenderBlocks.renderItemIn3d(Block.blocksList[var10.itemID].getRenderType()))
 			{
 				Block var21 = Block.blocksList[var10.itemID];
 				GL11.glRotatef(var12, 0.0F, 1.0F, 0.0F);
@@ -68,7 +70,6 @@
 					GL11.glTranslatef(0.0F, 0.05F, 0.0F);
 					GL11.glRotatef(-90.0F, 0.0F, 1.0F, 0.0F);
 				}
-				loadTexture("/terrain.png");
 				float var25 = 0.25F;
 				int var24 = var21.getRenderType();
 				if(var24 == 1 || var24 == 19 || var24 == 12 || var24 == 2)
@@ -76,10 +77,10 @@
 					var25 = 0.5F;
 				}
 				GL11.glScalef(var25, var25, var25);
-				for(var17 = 0; var17 < var13; ++var17)
+				for(var26 = 0; var26 < var13; ++var26)
 				{
 					GL11.glPushMatrix();
-					if(var17 > 0)
+					if(var26 > 0)
 					{
 						var18 = (random.nextFloat() * 2.0F - 1.0F) * 0.2F / var25;
 						var19 = (random.nextFloat() * 2.0F - 1.0F) * 0.2F / var25;
@@ -93,7 +94,7 @@
 			} else
 			{
 				float var16;
-				if(var10.getItem().requiresMultipleRenderPasses())
+				if(var10.getItemSpriteNumber() == 1 && var10.getItem().requiresMultipleRenderPasses())
 				{
 					if(renderInFrame)
 					{
@@ -103,23 +104,22 @@
 					{
 						GL11.glScalef(0.5F, 0.5F, 0.5F);
 					}
-					loadTexture("/gui/items.png");
-					for(int var14 = 0; var14 <= 1; ++var14)
+					for(int var23 = 0; var23 <= 1; ++var23)
 					{
 						random.setSeed(187L);
-						Icon var15 = var10.getItem().getIconFromDamageForRenderPass(var10.getItemDamage(), var14);
+						Icon var22 = var10.getItem().getIconFromDamageForRenderPass(var10.getItemDamage(), var23);
 						var16 = 1.0F;
 						if(renderWithColor)
 						{
-							var17 = Item.itemsList[var10.itemID].getColorFromItemStack(var10, var14);
-							var18 = (var17 >> 16 & 255) / 255.0F;
-							var19 = (var17 >> 8 & 255) / 255.0F;
-							var20 = (var17 & 255) / 255.0F;
+							var26 = Item.itemsList[var10.itemID].getColorFromItemStack(var10, var23);
+							var18 = (var26 >> 16 & 255) / 255.0F;
+							var19 = (var26 >> 8 & 255) / 255.0F;
+							var20 = (var26 & 255) / 255.0F;
 							GL11.glColor4f(var18 * var16, var19 * var16, var20 * var16, 1.0F);
-							renderDroppedItem(par1EntityItem, var15, var13, par9, var18 * var16, var19 * var16, var20 * var16);
+							renderDroppedItem(par1EntityItem, var22, var13, par9, var18 * var16, var19 * var16, var20 * var16);
 						} else
 						{
-							renderDroppedItem(par1EntityItem, var15, var13, par9, 1.0F, 1.0F, 1.0F);
+							renderDroppedItem(par1EntityItem, var22, var13, par9, 1.0F, 1.0F, 1.0F);
 						}
 					}
 				} else
@@ -132,25 +132,18 @@
 					{
 						GL11.glScalef(0.5F, 0.5F, 0.5F);
 					}
-					Icon var23 = var10.getIconIndex();
-					if(var10.getItemSpriteNumber() == 0)
-					{
-						loadTexture("/terrain.png");
-					} else
-					{
-						loadTexture("/gui/items.png");
-					}
+					Icon var14 = var10.getIconIndex();
 					if(renderWithColor)
 					{
-						int var22 = Item.itemsList[var10.itemID].getColorFromItemStack(var10, 0);
-						var16 = (var22 >> 16 & 255) / 255.0F;
-						float var26 = (var22 >> 8 & 255) / 255.0F;
-						var18 = (var22 & 255) / 255.0F;
+						int var15 = Item.itemsList[var10.itemID].getColorFromItemStack(var10, 0);
+						var16 = (var15 >> 16 & 255) / 255.0F;
+						float var17 = (var15 >> 8 & 255) / 255.0F;
+						var18 = (var15 & 255) / 255.0F;
 						var19 = 1.0F;
-						renderDroppedItem(par1EntityItem, var23, var13, par9, var16 * var19, var26 * var19, var18 * var19);
+						renderDroppedItem(par1EntityItem, var14, var13, par9, var16 * var19, var17 * var19, var18 * var19);
 					} else
 					{
-						renderDroppedItem(par1EntityItem, var23, var13, par9, 1.0F, 1.0F, 1.0F);
+						renderDroppedItem(par1EntityItem, var14, var13, par9, 1.0F, 1.0F, 1.0F);
 					}
 				}
 			}
@@ -159,15 +152,27 @@
 		}
 	}
 	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110796_a((EntityItem) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110796_a(EntityItem p_110796_1_)
+	{
+		return renderManager.renderEngine.func_130087_a(p_110796_1_.getEntityItem().getItemSpriteNumber());
+	}
+	
 	private void renderDroppedItem(EntityItem par1EntityItem, Icon par2Icon, int par3, float par4, float par5, float par6, float par7)
 	{
 		Tessellator var8 = Tessellator.instance;
 		if(par2Icon == null)
 		{
-			par2Icon = renderManager.renderEngine.getMissingIcon(par1EntityItem.getEntityItem().getItemSpriteNumber());
+			TextureManager var9 = Minecraft.getMinecraft().func_110434_K();
+			ResourceLocation var10 = var9.func_130087_a(par1EntityItem.getEntityItem().getItemSpriteNumber());
+			par2Icon = ((TextureMap) var9.func_110581_b(var10)).func_110572_b("missingno");
 		}
-		float var9 = par2Icon.getMinU();
-		float var10 = par2Icon.getMaxU();
+		float var25 = par2Icon.getMinU();
+		float var26 = par2Icon.getMaxU();
 		float var11 = par2Icon.getMinV();
 		float var12 = par2Icon.getMaxV();
 		float var13 = 1.0F;
@@ -208,18 +213,18 @@
 				GL11.glTranslatef(0.0F, 0.0F, var16 + var17);
 				if(var18.getItemSpriteNumber() == 0 && Block.blocksList[var18.itemID] != null)
 				{
-					loadTexture("/terrain.png");
+					func_110776_a(TextureMap.field_110575_b);
 				} else
 				{
-					loadTexture("/gui/items.png");
+					func_110776_a(TextureMap.field_110576_c);
 				}
 				GL11.glColor4f(par5, par6, par7, 1.0F);
-				ItemRenderer.renderItemIn2D(var8, var10, var11, var9, var12, par2Icon.getSheetWidth(), par2Icon.getSheetHeight(), var16);
-				if(var18 != null && var18.hasEffect())
+				ItemRenderer.renderItemIn2D(var8, var26, var11, var25, var12, par2Icon.getOriginX(), par2Icon.getOriginY(), var16);
+				if(var18.hasEffect())
 				{
 					GL11.glDepthFunc(GL11.GL_EQUAL);
 					GL11.glDisable(GL11.GL_LIGHTING);
-					renderManager.renderEngine.bindTexture("%blur%/misc/glint.png");
+					renderManager.renderEngine.func_110577_a(field_110798_h);
 					GL11.glEnable(GL11.GL_BLEND);
 					GL11.glBlendFunc(GL11.GL_SRC_COLOR, GL11.GL_ONE);
 					float var21 = 0.76F;
@@ -249,15 +254,15 @@
 			GL11.glPopMatrix();
 		} else
 		{
-			for(int var25 = 0; var25 < par3; ++var25)
+			for(int var27 = 0; var27 < par3; ++var27)
 			{
 				GL11.glPushMatrix();
-				if(var25 > 0)
+				if(var27 > 0)
 				{
 					var17 = (random.nextFloat() * 2.0F - 1.0F) * 0.3F;
-					float var27 = (random.nextFloat() * 2.0F - 1.0F) * 0.3F;
-					float var26 = (random.nextFloat() * 2.0F - 1.0F) * 0.3F;
-					GL11.glTranslatef(var17, var27, var26);
+					float var29 = (random.nextFloat() * 2.0F - 1.0F) * 0.3F;
+					float var28 = (random.nextFloat() * 2.0F - 1.0F) * 0.3F;
+					GL11.glTranslatef(var17, var29, var28);
 				}
 				if(!renderInFrame)
 				{
@@ -266,10 +271,10 @@
 				GL11.glColor4f(par5, par6, par7, 1.0F);
 				var8.startDrawingQuads();
 				var8.setNormal(0.0F, 1.0F, 0.0F);
-				var8.addVertexWithUV(0.0F - var14, 0.0F - var15, 0.0D, var9, var12);
-				var8.addVertexWithUV(var13 - var14, 0.0F - var15, 0.0D, var10, var12);
-				var8.addVertexWithUV(var13 - var14, 1.0F - var15, 0.0D, var10, var11);
-				var8.addVertexWithUV(0.0F - var14, 1.0F - var15, 0.0D, var9, var11);
+				var8.addVertexWithUV(0.0F - var14, 0.0F - var15, 0.0D, var25, var12);
+				var8.addVertexWithUV(var13 - var14, 0.0F - var15, 0.0D, var26, var12);
+				var8.addVertexWithUV(var13 - var14, 1.0F - var15, 0.0D, var26, var11);
+				var8.addVertexWithUV(0.0F - var14, 1.0F - var15, 0.0D, var25, var11);
 				var8.draw();
 				GL11.glPopMatrix();
 			}
@@ -318,7 +323,7 @@
 		var6.draw();
 	}
 	
-	public void renderItemAndEffectIntoGUI(FontRenderer par1FontRenderer, RenderEngine par2RenderEngine, ItemStack par3ItemStack, int par4, int par5)
+	public void renderItemAndEffectIntoGUI(FontRenderer par1FontRenderer, TextureManager par2RenderEngine, ItemStack par3ItemStack, int par4, int par5)
 	{
 		if(par3ItemStack != null)
 		{
@@ -328,7 +333,7 @@
 				GL11.glDepthFunc(GL11.GL_GREATER);
 				GL11.glDisable(GL11.GL_LIGHTING);
 				GL11.glDepthMask(false);
-				par2RenderEngine.bindTexture("%blur%/misc/glint.png");
+				par2RenderEngine.func_110577_a(field_110798_h);
 				zLevel -= 50.0F;
 				GL11.glEnable(GL11.GL_BLEND);
 				GL11.glBlendFunc(GL11.GL_DST_COLOR, GL11.GL_DST_COLOR);
@@ -343,17 +348,18 @@
 		}
 	}
 	
-	public void renderItemIntoGUI(FontRenderer par1FontRenderer, RenderEngine par2RenderEngine, ItemStack par3ItemStack, int par4, int par5)
+	public void renderItemIntoGUI(FontRenderer par1FontRenderer, TextureManager par2RenderEngine, ItemStack par3ItemStack, int par4, int par5)
 	{
 		int var6 = par3ItemStack.itemID;
 		int var7 = par3ItemStack.getItemDamage();
-		Icon var8 = par3ItemStack.getIconIndex();
+		Object var8 = par3ItemStack.getIconIndex();
+		float var17;
+		int var18;
 		float var12;
 		float var13;
-		float var16;
 		if(par3ItemStack.getItemSpriteNumber() == 0 && RenderBlocks.renderItemIn3d(Block.blocksList[var6].getRenderType()))
 		{
-			par2RenderEngine.bindTexture("/terrain.png");
+			par2RenderEngine.func_110577_a(TextureMap.field_110575_b);
 			Block var15 = Block.blocksList[var6];
 			GL11.glPushMatrix();
 			GL11.glTranslatef(par4 - 2, par5 + 3, -3.0F + zLevel);
@@ -362,75 +368,66 @@
 			GL11.glScalef(1.0F, 1.0F, -1.0F);
 			GL11.glRotatef(210.0F, 1.0F, 0.0F, 0.0F);
 			GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
-			int var18 = Item.itemsList[var6].getColorFromItemStack(par3ItemStack, 0);
-			var16 = (var18 >> 16 & 255) / 255.0F;
+			var18 = Item.itemsList[var6].getColorFromItemStack(par3ItemStack, 0);
+			var17 = (var18 >> 16 & 255) / 255.0F;
 			var12 = (var18 >> 8 & 255) / 255.0F;
 			var13 = (var18 & 255) / 255.0F;
 			if(renderWithColor)
 			{
-				GL11.glColor4f(var16, var12, var13, 1.0F);
+				GL11.glColor4f(var17, var12, var13, 1.0F);
 			}
 			GL11.glRotatef(-90.0F, 0.0F, 1.0F, 0.0F);
 			itemRenderBlocks.useInventoryTint = renderWithColor;
 			itemRenderBlocks.renderBlockAsItem(var15, var7, 1.0F);
 			itemRenderBlocks.useInventoryTint = true;
 			GL11.glPopMatrix();
-		} else
+		} else if(Item.itemsList[var6].requiresMultipleRenderPasses())
 		{
-			int var9;
-			if(Item.itemsList[var6].requiresMultipleRenderPasses())
+			GL11.glDisable(GL11.GL_LIGHTING);
+			par2RenderEngine.func_110577_a(TextureMap.field_110576_c);
+			for(int var9 = 0; var9 <= 1; ++var9)
 			{
-				GL11.glDisable(GL11.GL_LIGHTING);
-				par2RenderEngine.bindTexture("/gui/items.png");
-				for(var9 = 0; var9 <= 1; ++var9)
-				{
-					Icon var10 = Item.itemsList[var6].getIconFromDamageForRenderPass(var7, var9);
-					int var11 = Item.itemsList[var6].getColorFromItemStack(par3ItemStack, var9);
-					var12 = (var11 >> 16 & 255) / 255.0F;
-					var13 = (var11 >> 8 & 255) / 255.0F;
-					float var14 = (var11 & 255) / 255.0F;
-					if(renderWithColor)
-					{
-						GL11.glColor4f(var12, var13, var14, 1.0F);
-					}
-					renderIcon(par4, par5, var10, 16, 16);
-				}
-				GL11.glEnable(GL11.GL_LIGHTING);
-			} else
-			{
-				GL11.glDisable(GL11.GL_LIGHTING);
-				if(par3ItemStack.getItemSpriteNumber() == 0)
-				{
-					par2RenderEngine.bindTexture("/terrain.png");
-				} else
-				{
-					par2RenderEngine.bindTexture("/gui/items.png");
-				}
-				if(var8 == null)
-				{
-					var8 = par2RenderEngine.getMissingIcon(par3ItemStack.getItemSpriteNumber());
-				}
-				var9 = Item.itemsList[var6].getColorFromItemStack(par3ItemStack, 0);
-				float var17 = (var9 >> 16 & 255) / 255.0F;
-				var16 = (var9 >> 8 & 255) / 255.0F;
-				var12 = (var9 & 255) / 255.0F;
+				Icon var10 = Item.itemsList[var6].getIconFromDamageForRenderPass(var7, var9);
+				int var11 = Item.itemsList[var6].getColorFromItemStack(par3ItemStack, var9);
+				var12 = (var11 >> 16 & 255) / 255.0F;
+				var13 = (var11 >> 8 & 255) / 255.0F;
+				float var14 = (var11 & 255) / 255.0F;
 				if(renderWithColor)
 				{
-					GL11.glColor4f(var17, var16, var12, 1.0F);
+					GL11.glColor4f(var12, var13, var14, 1.0F);
 				}
-				renderIcon(par4, par5, var8, 16, 16);
-				GL11.glEnable(GL11.GL_LIGHTING);
+				renderIcon(par4, par5, var10, 16, 16);
 			}
+			GL11.glEnable(GL11.GL_LIGHTING);
+		} else
+		{
+			GL11.glDisable(GL11.GL_LIGHTING);
+			ResourceLocation var16 = par2RenderEngine.func_130087_a(par3ItemStack.getItemSpriteNumber());
+			par2RenderEngine.func_110577_a(var16);
+			if(var8 == null)
+			{
+				var8 = ((TextureMap) Minecraft.getMinecraft().func_110434_K().func_110581_b(var16)).func_110572_b("missingno");
+			}
+			var18 = Item.itemsList[var6].getColorFromItemStack(par3ItemStack, 0);
+			var17 = (var18 >> 16 & 255) / 255.0F;
+			var12 = (var18 >> 8 & 255) / 255.0F;
+			var13 = (var18 & 255) / 255.0F;
+			if(renderWithColor)
+			{
+				GL11.glColor4f(var17, var12, var13, 1.0F);
+			}
+			renderIcon(par4, par5, (Icon) var8, 16, 16);
+			GL11.glEnable(GL11.GL_LIGHTING);
 		}
 		GL11.glEnable(GL11.GL_CULL_FACE);
 	}
 	
-	public void renderItemOverlayIntoGUI(FontRenderer par1FontRenderer, RenderEngine par2RenderEngine, ItemStack par3ItemStack, int par4, int par5)
+	public void renderItemOverlayIntoGUI(FontRenderer par1FontRenderer, TextureManager par2RenderEngine, ItemStack par3ItemStack, int par4, int par5)
 	{
 		this.renderItemOverlayIntoGUI(par1FontRenderer, par2RenderEngine, par3ItemStack, par4, par5, (String) null);
 	}
 	
-	public void renderItemOverlayIntoGUI(FontRenderer par1FontRenderer, RenderEngine par2RenderEngine, ItemStack par3ItemStack, int par4, int par5, String par6Str)
+	public void renderItemOverlayIntoGUI(FontRenderer par1FontRenderer, TextureManager par2RenderEngine, ItemStack par3ItemStack, int par4, int par5, String par6Str)
 	{
 		if(par3ItemStack != null)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderItemFrame.java b/RMCClient/minecraft/net/minecraft/src/RenderItemFrame.java
index 0c015ab..7a5d184 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderItemFrame.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderItemFrame.java
@@ -1,15 +1,28 @@
 package net.minecraft.src;
 
+import net.minecraft.client.Minecraft;
+
 import org.lwjgl.opengl.GL11;
 
 public class RenderItemFrame extends Render
 {
+	private static final ResourceLocation field_110789_a = new ResourceLocation("textures/map/map_background.png");
 	private final RenderBlocks renderBlocksInstance = new RenderBlocks();
 	private Icon field_94147_f;
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
 	{
 		func_82404_a((EntityItemFrame) par1Entity, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110788_a((EntityItemFrame) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110788_a(EntityItemFrame p_110788_1_)
+	{
+		return null;
 	}
 	
 	private void func_82402_b(EntityItemFrame par1EntityItemFrame)
@@ -37,7 +50,7 @@
 			}
 			if(var3.getEntityItem().getItem() == Item.map)
 			{
-				renderManager.renderEngine.bindTexture("/misc/mapbg.png");
+				renderManager.renderEngine.func_110577_a(field_110789_a);
 				Tessellator var4 = Tessellator.instance;
 				GL11.glRotatef(180.0F, 0.0F, 1.0F, 0.0F);
 				GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
@@ -59,25 +72,33 @@
 				}
 			} else
 			{
-				TextureCompass var9;
 				if(var3.getEntityItem().getItem() == Item.compass)
 				{
-					var9 = TextureCompass.compassTexture;
-					double var10 = var9.currentAngle;
-					double var7 = var9.angleDelta;
-					var9.currentAngle = 0.0D;
-					var9.angleDelta = 0.0D;
-					var9.updateCompass(par1EntityItemFrame.worldObj, par1EntityItemFrame.posX, par1EntityItemFrame.posZ, MathHelper.wrapAngleTo180_float(180 + par1EntityItemFrame.hangingDirection * 90), false, true);
-					var9.currentAngle = var10;
-					var9.angleDelta = var7;
+					TextureManager var11 = Minecraft.getMinecraft().func_110434_K();
+					var11.func_110577_a(TextureMap.field_110576_c);
+					TextureAtlasSprite var13 = ((TextureMap) var11.func_110581_b(TextureMap.field_110576_c)).func_110572_b(Item.compass.getIconIndex(var3.getEntityItem()).getIconName());
+					if(var13 instanceof TextureCompass)
+					{
+						TextureCompass var14 = (TextureCompass) var13;
+						double var7 = var14.currentAngle;
+						double var9 = var14.angleDelta;
+						var14.currentAngle = 0.0D;
+						var14.angleDelta = 0.0D;
+						var14.updateCompass(par1EntityItemFrame.worldObj, par1EntityItemFrame.posX, par1EntityItemFrame.posZ, MathHelper.wrapAngleTo180_float(180 + par1EntityItemFrame.hangingDirection * 90), false, true);
+						var14.currentAngle = var7;
+						var14.angleDelta = var9;
+					}
 				}
 				RenderItem.renderInFrame = true;
 				RenderManager.instance.renderEntityWithPosYaw(var3, 0.0D, 0.0D, 0.0D, 0.0F, 0.0F);
 				RenderItem.renderInFrame = false;
 				if(var3.getEntityItem().getItem() == Item.compass)
 				{
-					var9 = TextureCompass.compassTexture;
-					var9.updateAnimation();
+					TextureAtlasSprite var12 = ((TextureMap) Minecraft.getMinecraft().func_110434_K().func_110581_b(TextureMap.field_110576_c)).func_110572_b(Item.compass.getIconIndex(var3.getEntityItem()).getIconName());
+					if(var12.func_110970_k() > 0)
+					{
+						var12.updateAnimation();
+					}
 				}
 			}
 			GL11.glPopMatrix();
@@ -102,8 +123,8 @@
 	private void renderFrameItemAsBlock(EntityItemFrame par1EntityItemFrame)
 	{
 		GL11.glPushMatrix();
-		renderManager.renderEngine.bindTexture("/terrain.png");
 		GL11.glRotatef(par1EntityItemFrame.rotationYaw, 0.0F, 1.0F, 0.0F);
+		renderManager.renderEngine.func_110577_a(TextureMap.field_110575_b);
 		Block var2 = Block.planks;
 		float var3 = 0.0625F;
 		float var4 = 0.75F;
@@ -139,6 +160,6 @@
 	
 	@Override public void updateIcons(IconRegister par1IconRegister)
 	{
-		field_94147_f = par1IconRegister.registerIcon("itemframe_back");
+		field_94147_f = par1IconRegister.registerIcon("itemframe_background");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderLeashKnot.java b/RMCClient/minecraft/net/minecraft/src/RenderLeashKnot.java
new file mode 100644
index 0000000..f4d719a
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/RenderLeashKnot.java
@@ -0,0 +1,39 @@
+package net.minecraft.src;
+
+import org.lwjgl.opengl.GL11;
+import org.lwjgl.opengl.GL12;
+
+public class RenderLeashKnot extends Render
+{
+	private static final ResourceLocation field_110802_a = new ResourceLocation("textures/entity/lead_knot.png");
+	private ModelLeashKnot field_110801_f = new ModelLeashKnot();
+	
+	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
+	{
+		func_110799_a((EntityLeashKnot) par1Entity, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110800_a((EntityLeashKnot) p_110775_1_);
+	}
+	
+	public void func_110799_a(EntityLeashKnot p_110799_1_, double p_110799_2_, double p_110799_4_, double p_110799_6_, float p_110799_8_, float p_110799_9_)
+	{
+		GL11.glPushMatrix();
+		GL11.glDisable(GL11.GL_CULL_FACE);
+		GL11.glTranslatef((float) p_110799_2_, (float) p_110799_4_, (float) p_110799_6_);
+		float var10 = 0.0625F;
+		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
+		GL11.glScalef(-1.0F, -1.0F, 1.0F);
+		GL11.glEnable(GL11.GL_ALPHA_TEST);
+		func_110777_b(p_110799_1_);
+		field_110801_f.render(p_110799_1_, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, var10);
+		GL11.glPopMatrix();
+	}
+	
+	protected ResourceLocation func_110800_a(EntityLeashKnot p_110800_1_)
+	{
+		return field_110802_a;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderLightningBolt.java b/RMCClient/minecraft/net/minecraft/src/RenderLightningBolt.java
index 7403bba..f6e195e 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderLightningBolt.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderLightningBolt.java
@@ -106,4 +106,14 @@
 		GL11.glEnable(GL11.GL_LIGHTING);
 		GL11.glEnable(GL11.GL_TEXTURE_2D);
 	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110805_a((EntityLightningBolt) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110805_a(EntityLightningBolt p_110805_1_)
+	{
+		return null;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderList.java b/RMCClient/minecraft/net/minecraft/src/RenderList.java
index baf10c0..8f944cf 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderList.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderList.java
@@ -13,8 +13,8 @@
 	private double field_78426_e;
 	private double field_78423_f;
 	private IntBuffer field_78424_g = GLAllocation.createDirectIntBuffer(65536);
-	private boolean field_78430_h = false;
-	private boolean field_78431_i = false;
+	private boolean field_78430_h;
+	private boolean field_78431_i;
 	
 	public boolean func_78418_a(int par1, int par2, int par3)
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderLiving.java b/RMCClient/minecraft/net/minecraft/src/RenderLiving.java
index 626ed46..f4cf550 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderLiving.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderLiving.java
@@ -1,21 +1,12 @@
 package net.minecraft.src;
 
-import java.util.Random;
-
-import net.minecraft.client.Minecraft;
-
 import org.lwjgl.opengl.GL11;
-import org.lwjgl.opengl.GL12;
 
-public class RenderLiving extends Render
+public abstract class RenderLiving extends RendererLivingEntity
 {
-	protected ModelBase mainModel;
-	protected ModelBase renderPassModel;
-	
-	public RenderLiving(ModelBase par1ModelBase, float par2)
+	public RenderLiving(ModelBase p_i1262_1_, float p_i1262_2_)
 	{
-		mainModel = par1ModelBase;
-		shadowSize = par2;
+		super(p_i1262_1_, p_i1262_2_);
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
@@ -25,421 +16,103 @@
 	
 	public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
 	{
-		GL11.glPushMatrix();
-		GL11.glDisable(GL11.GL_CULL_FACE);
-		mainModel.onGround = renderSwingProgress(par1EntityLiving, par9);
-		if(renderPassModel != null)
+		super.func_130000_a(par1EntityLiving, par2, par4, par6, par8, par9);
+		func_110827_b(par1EntityLiving, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected boolean func_110813_b(EntityLivingBase p_110813_1_)
+	{
+		return func_130007_b((EntityLiving) p_110813_1_);
+	}
+	
+	protected void func_110827_b(EntityLiving p_110827_1_, double p_110827_2_, double p_110827_4_, double p_110827_6_, float p_110827_8_, float p_110827_9_)
+	{
+		Entity var10 = p_110827_1_.func_110166_bE();
+		if(var10 != null)
 		{
-			renderPassModel.onGround = mainModel.onGround;
-		}
-		mainModel.isRiding = par1EntityLiving.isRiding();
-		if(renderPassModel != null)
-		{
-			renderPassModel.isRiding = mainModel.isRiding;
-		}
-		mainModel.isChild = par1EntityLiving.isChild();
-		if(renderPassModel != null)
-		{
-			renderPassModel.isChild = mainModel.isChild;
-		}
-		try
-		{
-			float var10 = interpolateRotation(par1EntityLiving.prevRenderYawOffset, par1EntityLiving.renderYawOffset, par9);
-			float var11 = interpolateRotation(par1EntityLiving.prevRotationYawHead, par1EntityLiving.rotationYawHead, par9);
-			float var12 = par1EntityLiving.prevRotationPitch + (par1EntityLiving.rotationPitch - par1EntityLiving.prevRotationPitch) * par9;
-			renderLivingAt(par1EntityLiving, par2, par4, par6);
-			float var13 = handleRotationFloat(par1EntityLiving, par9);
-			rotateCorpse(par1EntityLiving, var13, var10, par9);
-			float var14 = 0.0625F;
-			GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-			GL11.glScalef(-1.0F, -1.0F, 1.0F);
-			preRenderCallback(par1EntityLiving, par9);
-			GL11.glTranslatef(0.0F, -24.0F * var14 - 0.0078125F, 0.0F);
-			float var15 = par1EntityLiving.prevLimbYaw + (par1EntityLiving.limbYaw - par1EntityLiving.prevLimbYaw) * par9;
-			float var16 = par1EntityLiving.limbSwing - par1EntityLiving.limbYaw * (1.0F - par9);
-			if(par1EntityLiving.isChild())
+			p_110827_4_ -= (1.6D - p_110827_1_.height) * 0.5D;
+			Tessellator var11 = Tessellator.instance;
+			double var12 = func_110828_a(var10.prevRotationYaw, var10.rotationYaw, p_110827_9_ * 0.5F) * 0.01745329238474369D;
+			double var14 = func_110828_a(var10.prevRotationPitch, var10.rotationPitch, p_110827_9_ * 0.5F) * 0.01745329238474369D;
+			double var16 = Math.cos(var12);
+			double var18 = Math.sin(var12);
+			double var20 = Math.sin(var14);
+			if(var10 instanceof EntityHanging)
 			{
-				var16 *= 3.0F;
+				var16 = 0.0D;
+				var18 = 0.0D;
+				var20 = -1.0D;
 			}
-			if(var15 > 1.0F)
-			{
-				var15 = 1.0F;
-			}
-			GL11.glEnable(GL11.GL_ALPHA_TEST);
-			mainModel.setLivingAnimations(par1EntityLiving, var16, var15, par9);
-			renderModel(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
-			float var19;
-			int var18;
-			float var20;
-			float var22;
-			for(int var17 = 0; var17 < 4; ++var17)
-			{
-				var18 = shouldRenderPass(par1EntityLiving, var17, par9);
-				if(var18 > 0)
-				{
-					renderPassModel.setLivingAnimations(par1EntityLiving, var16, var15, par9);
-					renderPassModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
-					if((var18 & 240) == 16)
-					{
-						func_82408_c(par1EntityLiving, var17, par9);
-						renderPassModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
-					}
-					if((var18 & 15) == 15)
-					{
-						var19 = par1EntityLiving.ticksExisted + par9;
-						loadTexture("%blur%/misc/glint.png");
-						GL11.glEnable(GL11.GL_BLEND);
-						var20 = 0.5F;
-						GL11.glColor4f(var20, var20, var20, 1.0F);
-						GL11.glDepthFunc(GL11.GL_EQUAL);
-						GL11.glDepthMask(false);
-						for(int var21 = 0; var21 < 2; ++var21)
-						{
-							GL11.glDisable(GL11.GL_LIGHTING);
-							var22 = 0.76F;
-							GL11.glColor4f(0.5F * var22, 0.25F * var22, 0.8F * var22, 1.0F);
-							GL11.glBlendFunc(GL11.GL_SRC_COLOR, GL11.GL_ONE);
-							GL11.glMatrixMode(GL11.GL_TEXTURE);
-							GL11.glLoadIdentity();
-							float var23 = var19 * (0.001F + var21 * 0.003F) * 20.0F;
-							float var24 = 0.33333334F;
-							GL11.glScalef(var24, var24, var24);
-							GL11.glRotatef(30.0F - var21 * 60.0F, 0.0F, 0.0F, 1.0F);
-							GL11.glTranslatef(0.0F, var23, 0.0F);
-							GL11.glMatrixMode(GL11.GL_MODELVIEW);
-							renderPassModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
-						}
-						GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-						GL11.glMatrixMode(GL11.GL_TEXTURE);
-						GL11.glDepthMask(true);
-						GL11.glLoadIdentity();
-						GL11.glMatrixMode(GL11.GL_MODELVIEW);
-						GL11.glEnable(GL11.GL_LIGHTING);
-						GL11.glDisable(GL11.GL_BLEND);
-						GL11.glDepthFunc(GL11.GL_LEQUAL);
-					}
-					GL11.glDisable(GL11.GL_BLEND);
-					GL11.glEnable(GL11.GL_ALPHA_TEST);
-				}
-			}
-			GL11.glDepthMask(true);
-			renderEquippedItems(par1EntityLiving, par9);
-			float var26 = par1EntityLiving.getBrightness(par9);
-			var18 = getColorMultiplier(par1EntityLiving, var26, par9);
-			OpenGlHelper.setActiveTexture(OpenGlHelper.lightmapTexUnit);
+			double var22 = Math.cos(var14);
+			double var24 = func_110828_a(var10.prevPosX, var10.posX, p_110827_9_) - var16 * 0.7D - var18 * 0.5D * var22;
+			double var26 = func_110828_a(var10.prevPosY + var10.getEyeHeight() * 0.7D, var10.posY + var10.getEyeHeight() * 0.7D, p_110827_9_) - var20 * 0.5D - 0.25D;
+			double var28 = func_110828_a(var10.prevPosZ, var10.posZ, p_110827_9_) - var18 * 0.7D + var16 * 0.5D * var22;
+			double var30 = func_110828_a(p_110827_1_.prevRenderYawOffset, p_110827_1_.renderYawOffset, p_110827_9_) * 0.01745329238474369D + Math.PI / 2D;
+			var16 = Math.cos(var30) * p_110827_1_.width * 0.4D;
+			var18 = Math.sin(var30) * p_110827_1_.width * 0.4D;
+			double var32 = func_110828_a(p_110827_1_.prevPosX, p_110827_1_.posX, p_110827_9_) + var16;
+			double var34 = func_110828_a(p_110827_1_.prevPosY, p_110827_1_.posY, p_110827_9_);
+			double var36 = func_110828_a(p_110827_1_.prevPosZ, p_110827_1_.posZ, p_110827_9_) + var18;
+			p_110827_2_ += var16;
+			p_110827_6_ += var18;
+			double var38 = (float) (var24 - var32);
+			double var40 = (float) (var26 - var34);
+			double var42 = (float) (var28 - var36);
 			GL11.glDisable(GL11.GL_TEXTURE_2D);
-			OpenGlHelper.setActiveTexture(OpenGlHelper.defaultTexUnit);
-			if((var18 >> 24 & 255) > 0 || par1EntityLiving.hurtTime > 0 || par1EntityLiving.deathTime > 0)
+			GL11.glDisable(GL11.GL_LIGHTING);
+			GL11.glDisable(GL11.GL_CULL_FACE);
+			boolean var44 = true;
+			double var45 = 0.025D;
+			var11.startDrawing(5);
+			int var47;
+			float var48;
+			for(var47 = 0; var47 <= 24; ++var47)
 			{
-				GL11.glDisable(GL11.GL_TEXTURE_2D);
-				GL11.glDisable(GL11.GL_ALPHA_TEST);
-				GL11.glEnable(GL11.GL_BLEND);
-				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-				GL11.glDepthFunc(GL11.GL_EQUAL);
-				if(par1EntityLiving.hurtTime > 0 || par1EntityLiving.deathTime > 0)
+				if(var47 % 2 == 0)
 				{
-					GL11.glColor4f(var26, 0.0F, 0.0F, 0.4F);
-					mainModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
-					for(int var27 = 0; var27 < 4; ++var27)
-					{
-						if(inheritRenderPass(par1EntityLiving, var27, par9) >= 0)
-						{
-							GL11.glColor4f(var26, 0.0F, 0.0F, 0.4F);
-							renderPassModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
-						}
-					}
-				}
-				if((var18 >> 24 & 255) > 0)
-				{
-					var19 = (var18 >> 16 & 255) / 255.0F;
-					var20 = (var18 >> 8 & 255) / 255.0F;
-					float var29 = (var18 & 255) / 255.0F;
-					var22 = (var18 >> 24 & 255) / 255.0F;
-					GL11.glColor4f(var19, var20, var29, var22);
-					mainModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
-					for(int var28 = 0; var28 < 4; ++var28)
-					{
-						if(inheritRenderPass(par1EntityLiving, var28, par9) >= 0)
-						{
-							GL11.glColor4f(var19, var20, var29, var22);
-							renderPassModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
-						}
-					}
-				}
-				GL11.glDepthFunc(GL11.GL_LEQUAL);
-				GL11.glDisable(GL11.GL_BLEND);
-				GL11.glEnable(GL11.GL_ALPHA_TEST);
-				GL11.glEnable(GL11.GL_TEXTURE_2D);
-			}
-			GL11.glDisable(GL12.GL_RESCALE_NORMAL);
-		} catch(Exception var25)
-		{
-			var25.printStackTrace();
-		}
-		OpenGlHelper.setActiveTexture(OpenGlHelper.lightmapTexUnit);
-		GL11.glEnable(GL11.GL_TEXTURE_2D);
-		OpenGlHelper.setActiveTexture(OpenGlHelper.defaultTexUnit);
-		GL11.glEnable(GL11.GL_CULL_FACE);
-		GL11.glPopMatrix();
-		passSpecialRender(par1EntityLiving, par2, par4, par6);
-	}
-	
-	protected void func_82408_c(EntityLiving par1EntityLiving, int par2, float par3)
-	{
-	}
-	
-	protected void func_96449_a(EntityLiving par1EntityLiving, double par2, double par4, double par6, String par8Str, float par9, double par10)
-	{
-		if(par1EntityLiving.isPlayerSleeping())
-		{
-			renderLivingLabel(par1EntityLiving, par8Str, par2, par4 - 1.5D, par6, 64);
-		} else
-		{
-			renderLivingLabel(par1EntityLiving, par8Str, par2, par4, par6, 64);
-		}
-	}
-	
-	protected void func_98190_a(EntityLiving par1EntityLiving)
-	{
-		loadTexture(par1EntityLiving.getTexture());
-	}
-	
-	protected int getColorMultiplier(EntityLiving par1EntityLiving, float par2, float par3)
-	{
-		return 0;
-	}
-	
-	protected float getDeathMaxRotation(EntityLiving par1EntityLiving)
-	{
-		return 90.0F;
-	}
-	
-	protected float handleRotationFloat(EntityLiving par1EntityLiving, float par2)
-	{
-		return par1EntityLiving.ticksExisted + par2;
-	}
-	
-	protected int inheritRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
-	{
-		return shouldRenderPass(par1EntityLiving, par2, par3);
-	}
-	
-	private float interpolateRotation(float par1, float par2, float par3)
-	{
-		float var4;
-		for(var4 = par2 - par1; var4 < -180.0F; var4 += 360.0F)
-		{
-			;
-		}
-		while(var4 >= 180.0F)
-		{
-			var4 -= 360.0F;
-		}
-		return par1 + par3 * var4;
-	}
-	
-	protected void passSpecialRender(EntityLiving par1EntityLiving, double par2, double par4, double par6)
-	{
-		if(Minecraft.isGuiEnabled() && par1EntityLiving != renderManager.livingPlayer && !par1EntityLiving.func_98034_c(Minecraft.getMinecraft().thePlayer) && (par1EntityLiving.func_94059_bO() || par1EntityLiving.func_94056_bM() && par1EntityLiving == renderManager.field_96451_i))
-		{
-			float var8 = 1.6F;
-			float var9 = 0.016666668F * var8;
-			double var10 = par1EntityLiving.getDistanceSqToEntity(renderManager.livingPlayer);
-			float var12 = par1EntityLiving.isSneaking() ? 32.0F : 64.0F;
-			if(var10 < var12 * var12)
-			{
-				String var13 = par1EntityLiving.getTranslatedEntityName();
-				if(par1EntityLiving.isSneaking())
-				{
-					FontRenderer var14 = getFontRendererFromRenderManager();
-					GL11.glPushMatrix();
-					GL11.glTranslatef((float) par2 + 0.0F, (float) par4 + par1EntityLiving.height + 0.5F, (float) par6);
-					GL11.glNormal3f(0.0F, 1.0F, 0.0F);
-					GL11.glRotatef(-renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
-					GL11.glRotatef(renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
-					GL11.glScalef(-var9, -var9, var9);
-					GL11.glDisable(GL11.GL_LIGHTING);
-					GL11.glTranslatef(0.0F, 0.25F / var9, 0.0F);
-					GL11.glDepthMask(false);
-					GL11.glEnable(GL11.GL_BLEND);
-					GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-					Tessellator var15 = Tessellator.instance;
-					GL11.glDisable(GL11.GL_TEXTURE_2D);
-					var15.startDrawingQuads();
-					int var16 = var14.getStringWidth(var13) / 2;
-					var15.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
-					var15.addVertex(-var16 - 1, -1.0D, 0.0D);
-					var15.addVertex(-var16 - 1, 8.0D, 0.0D);
-					var15.addVertex(var16 + 1, 8.0D, 0.0D);
-					var15.addVertex(var16 + 1, -1.0D, 0.0D);
-					var15.draw();
-					GL11.glEnable(GL11.GL_TEXTURE_2D);
-					GL11.glDepthMask(true);
-					var14.drawString(var13, -var14.getStringWidth(var13) / 2, 0, 553648127);
-					GL11.glEnable(GL11.GL_LIGHTING);
-					GL11.glDisable(GL11.GL_BLEND);
-					GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-					GL11.glPopMatrix();
+					var11.setColorRGBA_F(0.5F, 0.4F, 0.3F, 1.0F);
 				} else
 				{
-					func_96449_a(par1EntityLiving, par2, par4, par6, var13, var9, var10);
+					var11.setColorRGBA_F(0.35F, 0.28F, 0.21000001F, 1.0F);
 				}
+				var48 = var47 / 24.0F;
+				var11.addVertex(p_110827_2_ + var38 * var48 + 0.0D, p_110827_4_ + var40 * (var48 * var48 + var48) * 0.5D + ((24.0F - var47) / 18.0F + 0.125F), p_110827_6_ + var42 * var48);
+				var11.addVertex(p_110827_2_ + var38 * var48 + 0.025D, p_110827_4_ + var40 * (var48 * var48 + var48) * 0.5D + ((24.0F - var47) / 18.0F + 0.125F) + 0.025D, p_110827_6_ + var42 * var48);
 			}
-		}
-	}
-	
-	protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
-	{
-	}
-	
-	protected void renderArrowsStuckInEntity(EntityLiving par1EntityLiving, float par2)
-	{
-		int var3 = par1EntityLiving.getArrowCountInEntity();
-		if(var3 > 0)
-		{
-			EntityArrow var4 = new EntityArrow(par1EntityLiving.worldObj, par1EntityLiving.posX, par1EntityLiving.posY, par1EntityLiving.posZ);
-			Random var5 = new Random(par1EntityLiving.entityId);
-			RenderHelper.disableStandardItemLighting();
-			for(int var6 = 0; var6 < var3; ++var6)
+			var11.draw();
+			var11.startDrawing(5);
+			for(var47 = 0; var47 <= 24; ++var47)
 			{
-				GL11.glPushMatrix();
-				ModelRenderer var7 = mainModel.getRandomModelBox(var5);
-				ModelBox var8 = (ModelBox) var7.cubeList.get(var5.nextInt(var7.cubeList.size()));
-				var7.postRender(0.0625F);
-				float var9 = var5.nextFloat();
-				float var10 = var5.nextFloat();
-				float var11 = var5.nextFloat();
-				float var12 = (var8.posX1 + (var8.posX2 - var8.posX1) * var9) / 16.0F;
-				float var13 = (var8.posY1 + (var8.posY2 - var8.posY1) * var10) / 16.0F;
-				float var14 = (var8.posZ1 + (var8.posZ2 - var8.posZ1) * var11) / 16.0F;
-				GL11.glTranslatef(var12, var13, var14);
-				var9 = var9 * 2.0F - 1.0F;
-				var10 = var10 * 2.0F - 1.0F;
-				var11 = var11 * 2.0F - 1.0F;
-				var9 *= -1.0F;
-				var10 *= -1.0F;
-				var11 *= -1.0F;
-				float var15 = MathHelper.sqrt_float(var9 * var9 + var11 * var11);
-				var4.prevRotationYaw = var4.rotationYaw = (float) (Math.atan2(var9, var11) * 180.0D / Math.PI);
-				var4.prevRotationPitch = var4.rotationPitch = (float) (Math.atan2(var10, var15) * 180.0D / Math.PI);
-				double var16 = 0.0D;
-				double var18 = 0.0D;
-				double var20 = 0.0D;
-				float var22 = 0.0F;
-				renderManager.renderEntityWithPosYaw(var4, var16, var18, var20, var22, par2);
-				GL11.glPopMatrix();
+				if(var47 % 2 == 0)
+				{
+					var11.setColorRGBA_F(0.5F, 0.4F, 0.3F, 1.0F);
+				} else
+				{
+					var11.setColorRGBA_F(0.35F, 0.28F, 0.21000001F, 1.0F);
+				}
+				var48 = var47 / 24.0F;
+				var11.addVertex(p_110827_2_ + var38 * var48 + 0.0D, p_110827_4_ + var40 * (var48 * var48 + var48) * 0.5D + ((24.0F - var47) / 18.0F + 0.125F) + 0.025D, p_110827_6_ + var42 * var48);
+				var11.addVertex(p_110827_2_ + var38 * var48 + 0.025D, p_110827_4_ + var40 * (var48 * var48 + var48) * 0.5D + ((24.0F - var47) / 18.0F + 0.125F), p_110827_6_ + var42 * var48 + 0.025D);
 			}
-			RenderHelper.enableStandardItemLighting();
-		}
-	}
-	
-	protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
-	{
-	}
-	
-	protected void renderLivingAt(EntityLiving par1EntityLiving, double par2, double par4, double par6)
-	{
-		GL11.glTranslatef((float) par2, (float) par4, (float) par6);
-	}
-	
-	protected void renderLivingLabel(EntityLiving par1EntityLiving, String par2Str, double par3, double par5, double par7, int par9)
-	{
-		double var10 = par1EntityLiving.getDistanceSqToEntity(renderManager.livingPlayer);
-		if(var10 <= par9 * par9)
-		{
-			FontRenderer var12 = getFontRendererFromRenderManager();
-			float var13 = 1.6F;
-			float var14 = 0.016666668F * var13;
-			GL11.glPushMatrix();
-			GL11.glTranslatef((float) par3 + 0.0F, (float) par5 + par1EntityLiving.height + 0.5F, (float) par7);
-			GL11.glNormal3f(0.0F, 1.0F, 0.0F);
-			GL11.glRotatef(-renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
-			GL11.glRotatef(renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
-			GL11.glScalef(-var14, -var14, var14);
-			GL11.glDisable(GL11.GL_LIGHTING);
-			GL11.glDepthMask(false);
-			GL11.glDisable(GL11.GL_DEPTH_TEST);
-			GL11.glEnable(GL11.GL_BLEND);
-			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-			Tessellator var15 = Tessellator.instance;
-			byte var16 = 0;
-			if(par2Str.equals("deadmau5"))
-			{
-				var16 = -10;
-			}
-			GL11.glDisable(GL11.GL_TEXTURE_2D);
-			var15.startDrawingQuads();
-			int var17 = var12.getStringWidth(par2Str) / 2;
-			var15.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
-			var15.addVertex(-var17 - 1, -1 + var16, 0.0D);
-			var15.addVertex(-var17 - 1, 8 + var16, 0.0D);
-			var15.addVertex(var17 + 1, 8 + var16, 0.0D);
-			var15.addVertex(var17 + 1, -1 + var16, 0.0D);
-			var15.draw();
-			GL11.glEnable(GL11.GL_TEXTURE_2D);
-			var12.drawString(par2Str, -var12.getStringWidth(par2Str) / 2, var16, 553648127);
-			GL11.glEnable(GL11.GL_DEPTH_TEST);
-			GL11.glDepthMask(true);
-			var12.drawString(par2Str, -var12.getStringWidth(par2Str) / 2, var16, -1);
+			var11.draw();
 			GL11.glEnable(GL11.GL_LIGHTING);
-			GL11.glDisable(GL11.GL_BLEND);
-			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-			GL11.glPopMatrix();
+			GL11.glEnable(GL11.GL_TEXTURE_2D);
+			GL11.glEnable(GL11.GL_CULL_FACE);
 		}
 	}
 	
-	protected void renderModel(EntityLiving par1EntityLiving, float par2, float par3, float par4, float par5, float par6, float par7)
+	private double func_110828_a(double p_110828_1_, double p_110828_3_, double p_110828_5_)
 	{
-		func_98190_a(par1EntityLiving);
-		if(!par1EntityLiving.isInvisible())
-		{
-			mainModel.render(par1EntityLiving, par2, par3, par4, par5, par6, par7);
-		} else if(!par1EntityLiving.func_98034_c(Minecraft.getMinecraft().thePlayer))
-		{
-			GL11.glPushMatrix();
-			GL11.glColor4f(1.0F, 1.0F, 1.0F, 0.15F);
-			GL11.glDepthMask(false);
-			GL11.glEnable(GL11.GL_BLEND);
-			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
-			GL11.glAlphaFunc(GL11.GL_GREATER, 0.003921569F);
-			mainModel.render(par1EntityLiving, par2, par3, par4, par5, par6, par7);
-			GL11.glDisable(GL11.GL_BLEND);
-			GL11.glAlphaFunc(GL11.GL_GREATER, 0.1F);
-			GL11.glPopMatrix();
-			GL11.glDepthMask(true);
-		} else
-		{
-			mainModel.setRotationAngles(par2, par3, par4, par5, par6, par7, par1EntityLiving);
-		}
+		return p_110828_1_ + (p_110828_3_ - p_110828_1_) * p_110828_5_;
 	}
 	
-	protected float renderSwingProgress(EntityLiving par1EntityLiving, float par2)
+	protected boolean func_130007_b(EntityLiving p_130007_1_)
 	{
-		return par1EntityLiving.getSwingProgress(par2);
+		return super.func_110813_b(p_130007_1_) && (p_130007_1_.func_94059_bO() || p_130007_1_.func_94056_bM() && p_130007_1_ == renderManager.field_96451_i);
 	}
 	
-	protected void rotateCorpse(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
 	{
-		GL11.glRotatef(180.0F - par3, 0.0F, 1.0F, 0.0F);
-		if(par1EntityLiving.deathTime > 0)
-		{
-			float var5 = (par1EntityLiving.deathTime + par4 - 1.0F) / 20.0F * 1.6F;
-			var5 = MathHelper.sqrt_float(var5);
-			if(var5 > 1.0F)
-			{
-				var5 = 1.0F;
-			}
-			GL11.glRotatef(var5 * getDeathMaxRotation(par1EntityLiving), 0.0F, 0.0F, 1.0F);
-		}
-	}
-	
-	public void setRenderPassModel(ModelBase par1ModelBase)
-	{
-		renderPassModel = par1ModelBase;
-	}
-	
-	protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
-	{
-		return -1;
+		doRenderLiving((EntityLiving) par1EntityPlayer, par2, par4, par6, par8, par9);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderMagmaCube.java b/RMCClient/minecraft/net/minecraft/src/RenderMagmaCube.java
index ef916a7..0167d41 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderMagmaCube.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderMagmaCube.java
@@ -1,44 +1,29 @@
 package net.minecraft.src;
 
-import net.minecraft.client.Minecraft;
-
 import org.lwjgl.opengl.GL11;
 
 public class RenderMagmaCube extends RenderLiving
 {
-	private int field_77120_a;
+	private static final ResourceLocation field_110873_a = new ResourceLocation("textures/entity/slime/magmacube.png");
 	
 	public RenderMagmaCube()
 	{
 		super(new ModelMagmaCube(), 0.25F);
-		field_77120_a = ((ModelMagmaCube) mainModel).func_78107_a();
 	}
 	
-	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
 	{
-		renderMagmaCube((EntityMagmaCube) par1Entity, par2, par4, par6, par8, par9);
+		return func_110872_a((EntityMagmaCube) p_110775_1_);
 	}
 	
-	@Override public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
+	protected ResourceLocation func_110872_a(EntityMagmaCube p_110872_1_)
 	{
-		renderMagmaCube((EntityMagmaCube) par1EntityLiving, par2, par4, par6, par8, par9);
+		return field_110873_a;
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		scaleMagmaCube((EntityMagmaCube) par1EntityLiving, par2);
-	}
-	
-	public void renderMagmaCube(EntityMagmaCube par1EntityMagmaCube, double par2, double par4, double par6, float par8, float par9)
-	{
-		int var10 = ((ModelMagmaCube) mainModel).func_78107_a();
-		if(var10 != field_77120_a)
-		{
-			field_77120_a = var10;
-			mainModel = new ModelMagmaCube();
-			Minecraft.getMinecraft().getLogAgent().logInfo("Loaded new lava slime model");
-		}
-		super.doRenderLiving(par1EntityMagmaCube, par2, par4, par6, par8, par9);
 	}
 	
 	protected void scaleMagmaCube(EntityMagmaCube par1EntityMagmaCube, float par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderManager.java b/RMCClient/minecraft/net/minecraft/src/RenderManager.java
index 2abc50b..452afce 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderManager.java
@@ -14,23 +14,23 @@
 	public static double renderPosX;
 	public static double renderPosY;
 	public static double renderPosZ;
-	public RenderEngine renderEngine;
+	public TextureManager renderEngine;
 	public ItemRenderer itemRenderer;
 	public World worldObj;
-	public EntityLiving livingPlayer;
-	public EntityLiving field_96451_i;
+	public EntityLivingBase livingPlayer;
+	public EntityLivingBase field_96451_i;
 	public float playerViewY;
 	public float playerViewX;
 	public GameSettings options;
 	public double viewerPosX;
 	public double viewerPosY;
 	public double viewerPosZ;
-	public static boolean field_85095_o = false;
+	public static boolean field_85095_o;
 	
 	private RenderManager()
 	{
+		entityRenderMap.put(EntityCaveSpider.class, new RenderCaveSpider());
 		entityRenderMap.put(EntitySpider.class, new RenderSpider());
-		entityRenderMap.put(EntityCaveSpider.class, new RenderSpider());
 		entityRenderMap.put(EntityPig.class, new RenderPig(new ModelPig(), new ModelPig(0.5F), 0.7F));
 		entityRenderMap.put(EntitySheep.class, new RenderSheep(new ModelSheep2(), new ModelSheep1(), 0.7F));
 		entityRenderMap.put(EntityCow.class, new RenderCow(new ModelCow(), 0.7F));
@@ -54,7 +54,6 @@
 		entityRenderMap.put(EntitySquid.class, new RenderSquid(new ModelSquid(), 0.7F));
 		entityRenderMap.put(EntityVillager.class, new RenderVillager());
 		entityRenderMap.put(EntityIronGolem.class, new RenderIronGolem());
-		entityRenderMap.put(EntityLiving.class, new RenderLiving(new ModelBiped(), 0.5F));
 		entityRenderMap.put(EntityBat.class, new RenderBat());
 		entityRenderMap.put(EntityDragon.class, new RenderDragon());
 		entityRenderMap.put(EntityEnderCrystal.class, new RenderEnderCrystal());
@@ -62,6 +61,7 @@
 		entityRenderMap.put(Entity.class, new RenderEntity());
 		entityRenderMap.put(EntityPainting.class, new RenderPainting());
 		entityRenderMap.put(EntityItemFrame.class, new RenderItemFrame());
+		entityRenderMap.put(EntityLeashKnot.class, new RenderLeashKnot());
 		entityRenderMap.put(EntityArrow.class, new RenderArrow());
 		entityRenderMap.put(EntitySnowball.class, new RenderSnowball(Item.snowball));
 		entityRenderMap.put(EntityEnderPearl.class, new RenderSnowball(Item.enderPearl));
@@ -82,6 +82,7 @@
 		entityRenderMap.put(EntityMinecart.class, new RenderMinecart());
 		entityRenderMap.put(EntityBoat.class, new RenderBoat());
 		entityRenderMap.put(EntityFishHook.class, new RenderFish());
+		entityRenderMap.put(EntityHorse.class, new RenderHorse(new ModelHorse(), 0.75F));
 		entityRenderMap.put(EntityLightningBolt.class, new RenderLightningBolt());
 		Iterator var1 = entityRenderMap.values().iterator();
 		while(var1.hasNext())
@@ -91,7 +92,7 @@
 		}
 	}
 	
-	public void cacheActiveRenderInfo(World par1World, RenderEngine par2RenderEngine, FontRenderer par3FontRenderer, EntityLiving par4EntityLiving, EntityLiving par5EntityLiving, GameSettings par6GameSettings, float par7)
+	public void cacheActiveRenderInfo(World par1World, TextureManager par2RenderEngine, FontRenderer par3FontRenderer, EntityLivingBase par4EntityLiving, EntityLivingBase par5EntityLiving, GameSettings par6GameSettings, float par7)
 	{
 		worldObj = par1World;
 		renderEngine = par2RenderEngine;
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderMinecart.java b/RMCClient/minecraft/net/minecraft/src/RenderMinecart.java
index baaf852..6b2c857 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderMinecart.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderMinecart.java
@@ -4,19 +4,29 @@
 
 public class RenderMinecart extends Render
 {
-	protected ModelBase modelMinecart;
+	private static final ResourceLocation field_110804_g = new ResourceLocation("textures/entity/minecart.png");
+	protected ModelBase modelMinecart = new ModelMinecart();
 	protected final RenderBlocks field_94145_f;
 	
 	public RenderMinecart()
 	{
 		shadowSize = 0.5F;
-		modelMinecart = new ModelMinecart();
 		field_94145_f = new RenderBlocks();
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
 	{
 		renderTheMinecart((EntityMinecart) par1Entity, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110803_a((EntityMinecart) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110803_a(EntityMinecart p_110803_1_)
+	{
+		return field_110804_g;
 	}
 	
 	protected void renderBlockInMinecart(EntityMinecart par1EntityMinecart, float par2, Block par3Block, int par4)
@@ -30,6 +40,7 @@
 	public void renderTheMinecart(EntityMinecart par1EntityMinecart, double par2, double par4, double par6, float par8, float par9)
 	{
 		GL11.glPushMatrix();
+		func_110777_b(par1EntityMinecart);
 		long var10 = par1EntityMinecart.entityId * 493286711L;
 		var10 = var10 * var10 * 4392167121L + var10 * 98761L;
 		float var12 = (((var10 >> 16 & 7L) + 0.5F) / 8.0F - 0.5F) * 0.004F;
@@ -84,15 +95,15 @@
 		if(var28 != null)
 		{
 			GL11.glPushMatrix();
-			loadTexture("/terrain.png");
+			func_110776_a(TextureMap.field_110575_b);
 			float var30 = 0.75F;
 			GL11.glScalef(var30, var30, var30);
 			GL11.glTranslatef(0.0F, var32 / 16.0F, 0.0F);
 			renderBlockInMinecart(par1EntityMinecart, par9, var28, var29);
 			GL11.glPopMatrix();
 			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+			func_110777_b(par1EntityMinecart);
 		}
-		loadTexture("/item/cart.png");
 		GL11.glScalef(-1.0F, -1.0F, 1.0F);
 		modelMinecart.render(par1EntityMinecart, 0.0F, 0.0F, -0.1F, 0.0F, 0.0F, 0.0625F);
 		GL11.glPopMatrix();
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderMooshroom.java b/RMCClient/minecraft/net/minecraft/src/RenderMooshroom.java
index 390b9a2..377e672 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderMooshroom.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderMooshroom.java
@@ -4,9 +4,11 @@
 
 public class RenderMooshroom extends RenderLiving
 {
-	public RenderMooshroom(ModelBase par1ModelBase, float par2)
+	private static final ResourceLocation field_110880_a = new ResourceLocation("textures/entity/cow/mooshroom.png");
+	
+	public RenderMooshroom(ModelBase p_i1263_1_, float p_i1263_2_)
 	{
-		super(par1ModelBase, par2);
+		super(p_i1263_1_, p_i1263_2_);
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
@@ -19,7 +21,17 @@
 		renderLivingMooshroom((EntityMooshroom) par1EntityLiving, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110879_a((EntityMooshroom) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110879_a(EntityMooshroom p_110879_1_)
+	{
+		return field_110880_a;
+	}
+	
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
 	{
 		renderMooshroomEquippedItems((EntityMooshroom) par1EntityLiving, par2);
 	}
@@ -34,7 +46,7 @@
 		super.renderEquippedItems(par1EntityMooshroom, par2);
 		if(!par1EntityMooshroom.isChild())
 		{
-			loadTexture("/terrain.png");
+			func_110776_a(TextureMap.field_110575_b);
 			GL11.glEnable(GL11.GL_CULL_FACE);
 			GL11.glPushMatrix();
 			GL11.glScalef(1.0F, -1.0F, 1.0F);
@@ -55,4 +67,9 @@
 			GL11.glDisable(GL11.GL_CULL_FACE);
 		}
 	}
+	
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		renderLivingMooshroom((EntityMooshroom) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderOcelot.java b/RMCClient/minecraft/net/minecraft/src/RenderOcelot.java
index da3226b..26b4769 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderOcelot.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderOcelot.java
@@ -4,9 +4,14 @@
 
 public class RenderOcelot extends RenderLiving
 {
-	public RenderOcelot(ModelBase par1ModelBase, float par2)
+	private static final ResourceLocation field_110877_a = new ResourceLocation("textures/entity/cat/black.png");
+	private static final ResourceLocation field_110875_f = new ResourceLocation("textures/entity/cat/ocelot.png");
+	private static final ResourceLocation field_110876_g = new ResourceLocation("textures/entity/cat/red.png");
+	private static final ResourceLocation field_110878_h = new ResourceLocation("textures/entity/cat/siamese.png");
+	
+	public RenderOcelot(ModelBase p_i1264_1_, float p_i1264_2_)
 	{
-		super(par1ModelBase, par2);
+		super(p_i1264_1_, p_i1264_2_);
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
@@ -19,7 +24,28 @@
 		renderLivingOcelot((EntityOcelot) par1EntityLiving, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110874_a((EntityOcelot) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110874_a(EntityOcelot p_110874_1_)
+	{
+		switch(p_110874_1_.getTameSkin())
+		{
+			case 0:
+			default:
+				return field_110875_f;
+			case 1:
+				return field_110877_a;
+			case 2:
+				return field_110876_g;
+			case 3:
+				return field_110878_h;
+		}
+	}
+	
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		preRenderOcelot((EntityOcelot) par1EntityLiving, par2);
 	}
@@ -37,4 +63,9 @@
 	{
 		super.doRenderLiving(par1EntityOcelot, par2, par4, par6, par8, par9);
 	}
+	
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		renderLivingOcelot((EntityOcelot) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderPainting.java b/RMCClient/minecraft/net/minecraft/src/RenderPainting.java
index 36e8d8c..af2467a 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderPainting.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderPainting.java
@@ -5,9 +5,21 @@
 
 public class RenderPainting extends Render
 {
+	private static final ResourceLocation field_110807_a = new ResourceLocation("textures/painting/paintings_kristoffer_zetterstrand.png");
+	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
 	{
 		renderThePainting((EntityPainting) par1Entity, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110806_a((EntityPainting) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110806_a(EntityPainting p_110806_1_)
+	{
+		return field_110807_a;
 	}
 	
 	private void func_77008_a(EntityPainting par1EntityPainting, float par2, float par3)
@@ -111,7 +123,7 @@
 		GL11.glTranslatef((float) par2, (float) par4, (float) par6);
 		GL11.glRotatef(par8, 0.0F, 1.0F, 0.0F);
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-		loadTexture("/art/kz.png");
+		func_110777_b(par1EntityPainting);
 		EnumArt var10 = par1EntityPainting.art;
 		float var11 = 0.0625F;
 		GL11.glScalef(var11, var11, var11);
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderPig.java b/RMCClient/minecraft/net/minecraft/src/RenderPig.java
index 0a9e2b4..213b25c 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderPig.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderPig.java
@@ -2,37 +2,35 @@
 
 public class RenderPig extends RenderLiving
 {
-	public RenderPig(ModelBase par1ModelBase, ModelBase par2ModelBase, float par3)
+	private static final ResourceLocation field_110888_a = new ResourceLocation("textures/entity/pig/pig_saddle.png");
+	private static final ResourceLocation field_110887_f = new ResourceLocation("textures/entity/pig/pig.png");
+	
+	public RenderPig(ModelBase p_i1265_1_, ModelBase p_i1265_2_, float p_i1265_3_)
 	{
-		super(par1ModelBase, par3);
-		setRenderPassModel(par2ModelBase);
+		super(p_i1265_1_, p_i1265_3_);
+		setRenderPassModel(p_i1265_2_);
 	}
 	
-	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
 	{
-		renderLivingPig((EntityPig) par1Entity, par2, par4, par6, par8, par9);
+		return func_110886_a((EntityPig) p_110775_1_);
 	}
 	
-	@Override public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
+	protected ResourceLocation func_110886_a(EntityPig p_110886_1_)
 	{
-		renderLivingPig((EntityPig) par1EntityLiving, par2, par4, par6, par8, par9);
-	}
-	
-	public void renderLivingPig(EntityPig par1EntityPig, double par2, double par4, double par6, float par8, float par9)
-	{
-		super.doRenderLiving(par1EntityPig, par2, par4, par6, par8, par9);
+		return field_110887_f;
 	}
 	
 	protected int renderSaddledPig(EntityPig par1EntityPig, int par2, float par3)
 	{
 		if(par2 == 0 && par1EntityPig.getSaddled())
 		{
-			loadTexture("/mob/saddle.png");
+			func_110776_a(field_110888_a);
 			return 1;
 		} else return -1;
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return renderSaddledPig((EntityPig) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderPlayer.java b/RMCClient/minecraft/net/minecraft/src/RenderPlayer.java
index 948879a..bd443ef 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderPlayer.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderPlayer.java
@@ -2,12 +2,12 @@
 
 import org.lwjgl.opengl.GL11;
 
-public class RenderPlayer extends RenderLiving
+public class RenderPlayer extends RendererLivingEntity
 {
+	private static final ResourceLocation field_110826_a = new ResourceLocation("textures/entity/steve.png");
 	private ModelBiped modelBipedMain;
 	private ModelBiped modelArmorChestplate;
 	private ModelBiped modelArmor;
-	private static final String[] armorFilenamePrefix = new String[] { "cloth", "chain", "iron", "diamond", "gold" };
 	
 	public RenderPlayer()
 	{
@@ -19,41 +19,79 @@
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
 	{
-		renderPlayer((EntityPlayer) par1Entity, par2, par4, par6, par8, par9);
+		func_130009_a((AbstractClientPlayer) par1Entity, par2, par4, par6, par8, par9);
 	}
 	
-	@Override public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
 	{
-		renderPlayer((EntityPlayer) par1EntityLiving, par2, par4, par6, par8, par9);
+		return func_110817_a((AbstractClientPlayer) p_110775_1_);
 	}
 	
-	@Override protected void func_82408_c(EntityLiving par1EntityLiving, int par2, float par3)
+	protected ResourceLocation func_110817_a(AbstractClientPlayer p_110817_1_)
 	{
-		func_82439_b((EntityPlayer) par1EntityLiving, par2, par3);
+		return p_110817_1_.func_110306_p();
 	}
 	
-	protected void func_82439_b(EntityPlayer par1EntityPlayer, int par2, float par3)
+	@Override public void func_130000_a(EntityLivingBase p_130000_1_, double p_130000_2_, double p_130000_4_, double p_130000_6_, float p_130000_8_, float p_130000_9_)
 	{
-		ItemStack var4 = par1EntityPlayer.inventory.armorItemInSlot(3 - par2);
+		func_130009_a((AbstractClientPlayer) p_130000_1_, p_130000_2_, p_130000_4_, p_130000_6_, p_130000_8_, p_130000_9_);
+	}
+	
+	public void func_130009_a(AbstractClientPlayer p_130009_1_, double p_130009_2_, double p_130009_4_, double p_130009_6_, float p_130009_8_, float p_130009_9_)
+	{
+		float var10 = 1.0F;
+		GL11.glColor3f(var10, var10, var10);
+		ItemStack var11 = p_130009_1_.inventory.getCurrentItem();
+		modelArmorChestplate.heldItemRight = modelArmor.heldItemRight = modelBipedMain.heldItemRight = var11 != null ? 1 : 0;
+		if(var11 != null && p_130009_1_.getItemInUseCount() > 0)
+		{
+			EnumAction var12 = var11.getItemUseAction();
+			if(var12 == EnumAction.block)
+			{
+				modelArmorChestplate.heldItemRight = modelArmor.heldItemRight = modelBipedMain.heldItemRight = 3;
+			} else if(var12 == EnumAction.bow)
+			{
+				modelArmorChestplate.aimedBow = modelArmor.aimedBow = modelBipedMain.aimedBow = true;
+			}
+		}
+		modelArmorChestplate.isSneak = modelArmor.isSneak = modelBipedMain.isSneak = p_130009_1_.isSneaking();
+		double var14 = p_130009_4_ - p_130009_1_.yOffset;
+		if(p_130009_1_.isSneaking() && !(p_130009_1_ instanceof EntityPlayerSP))
+		{
+			var14 -= 0.125D;
+		}
+		super.func_130000_a(p_130009_1_, p_130009_2_, var14, p_130009_6_, p_130009_8_, p_130009_9_);
+		modelArmorChestplate.aimedBow = modelArmor.aimedBow = modelBipedMain.aimedBow = false;
+		modelArmorChestplate.isSneak = modelArmor.isSneak = modelBipedMain.isSneak = false;
+		modelArmorChestplate.heldItemRight = modelArmor.heldItemRight = modelBipedMain.heldItemRight = 0;
+	}
+	
+	protected void func_130220_b(AbstractClientPlayer p_130220_1_, int p_130220_2_, float p_130220_3_)
+	{
+		ItemStack var4 = p_130220_1_.inventory.armorItemInSlot(3 - p_130220_2_);
 		if(var4 != null)
 		{
 			Item var5 = var4.getItem();
 			if(var5 instanceof ItemArmor)
 			{
-				ItemArmor var6 = (ItemArmor) var5;
-				loadTexture("/armor/" + armorFilenamePrefix[var6.renderIndex] + "_" + (par2 == 2 ? 2 : 1) + "_b.png");
-				float var7 = 1.0F;
-				GL11.glColor3f(var7, var7, var7);
+				func_110776_a(RenderBiped.func_110858_a((ItemArmor) var5, p_130220_2_, "overlay"));
+				float var6 = 1.0F;
+				GL11.glColor3f(var6, var6, var6);
 			}
 		}
 	}
 	
-	@Override protected void func_96449_a(EntityLiving par1EntityLiving, double par2, double par4, double par6, String par8Str, float par9, double par10)
+	@Override protected void func_82408_c(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
-		func_96450_a((EntityPlayer) par1EntityLiving, par2, par4, par6, par8Str, par9, par10);
+		func_130220_b((AbstractClientPlayer) par1EntityLiving, par2, par3);
 	}
 	
-	protected void func_96450_a(EntityPlayer par1EntityPlayer, double par2, double par4, double par6, String par8Str, float par9, double par10)
+	@Override protected void func_96449_a(EntityLivingBase par1EntityLiving, double par2, double par4, double par6, String par8Str, float par9, double par10)
+	{
+		func_96450_a((AbstractClientPlayer) par1EntityLiving, par2, par4, par6, par8Str, par9, par10);
+	}
+	
+	protected void func_96450_a(AbstractClientPlayer par1EntityPlayer, double par2, double par4, double par6, String par8Str, float par9, double par10)
 	{
 		if(par10 < 100.0D)
 		{
@@ -75,24 +113,14 @@
 		super.func_96449_a(par1EntityPlayer, par2, par4, par6, par8Str, par9, par10);
 	}
 	
-	@Override protected void func_98190_a(EntityLiving par1EntityLiving)
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
-		func_98191_a((EntityPlayer) par1EntityLiving);
+		renderPlayerScale((AbstractClientPlayer) par1EntityLiving, par2);
 	}
 	
-	protected void func_98191_a(EntityPlayer par1EntityPlayer)
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
 	{
-		loadDownloadableImageTexture(par1EntityPlayer.skinUrl, par1EntityPlayer.getTexture());
-	}
-	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
-	{
-		renderPlayerScale((EntityPlayer) par1EntityLiving, par2);
-	}
-	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
-	{
-		renderSpecials((EntityPlayer) par1EntityLiving, par2);
+		renderSpecials((AbstractClientPlayer) par1EntityLiving, par2);
 	}
 	
 	public void renderFirstPersonArm(EntityPlayer par1EntityPlayer)
@@ -104,47 +132,18 @@
 		modelBipedMain.bipedRightArm.render(0.0625F);
 	}
 	
-	@Override protected void renderLivingAt(EntityLiving par1EntityLiving, double par2, double par4, double par6)
+	@Override protected void renderLivingAt(EntityLivingBase par1EntityLiving, double par2, double par4, double par6)
 	{
-		renderPlayerSleep((EntityPlayer) par1EntityLiving, par2, par4, par6);
+		renderPlayerSleep((AbstractClientPlayer) par1EntityLiving, par2, par4, par6);
 	}
 	
-	public void renderPlayer(EntityPlayer par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
-	{
-		float var10 = 1.0F;
-		GL11.glColor3f(var10, var10, var10);
-		ItemStack var11 = par1EntityPlayer.inventory.getCurrentItem();
-		modelArmorChestplate.heldItemRight = modelArmor.heldItemRight = modelBipedMain.heldItemRight = var11 != null ? 1 : 0;
-		if(var11 != null && par1EntityPlayer.getItemInUseCount() > 0)
-		{
-			EnumAction var12 = var11.getItemUseAction();
-			if(var12 == EnumAction.block)
-			{
-				modelArmorChestplate.heldItemRight = modelArmor.heldItemRight = modelBipedMain.heldItemRight = 3;
-			} else if(var12 == EnumAction.bow)
-			{
-				modelArmorChestplate.aimedBow = modelArmor.aimedBow = modelBipedMain.aimedBow = true;
-			}
-		}
-		modelArmorChestplate.isSneak = modelArmor.isSneak = modelBipedMain.isSneak = par1EntityPlayer.isSneaking();
-		double var14 = par4 - par1EntityPlayer.yOffset;
-		if(par1EntityPlayer.isSneaking() && !(par1EntityPlayer instanceof EntityPlayerSP))
-		{
-			var14 -= 0.125D;
-		}
-		super.doRenderLiving(par1EntityPlayer, par2, var14, par6, par8, par9);
-		modelArmorChestplate.aimedBow = modelArmor.aimedBow = modelBipedMain.aimedBow = false;
-		modelArmorChestplate.isSneak = modelArmor.isSneak = modelBipedMain.isSneak = false;
-		modelArmorChestplate.heldItemRight = modelArmor.heldItemRight = modelBipedMain.heldItemRight = 0;
-	}
-	
-	protected void renderPlayerScale(EntityPlayer par1EntityPlayer, float par2)
+	protected void renderPlayerScale(AbstractClientPlayer par1EntityPlayer, float par2)
 	{
 		float var3 = 0.9375F;
 		GL11.glScalef(var3, var3, var3);
 	}
 	
-	protected void renderPlayerSleep(EntityPlayer par1EntityPlayer, double par2, double par4, double par6)
+	protected void renderPlayerSleep(AbstractClientPlayer par1EntityPlayer, double par2, double par4, double par6)
 	{
 		if(par1EntityPlayer.isEntityAlive() && par1EntityPlayer.isPlayerSleeping())
 		{
@@ -155,7 +154,7 @@
 		}
 	}
 	
-	protected void renderSpecials(EntityPlayer par1EntityPlayer, float par2)
+	protected void renderSpecials(AbstractClientPlayer par1EntityPlayer, float par2)
 	{
 		float var3 = 1.0F;
 		GL11.glColor3f(var3, var3, var3);
@@ -190,106 +189,110 @@
 			}
 			GL11.glPopMatrix();
 		}
-		float var7;
-		float var8;
-		if(par1EntityPlayer.username.equals("deadmau5") && loadDownloadableImageTexture(par1EntityPlayer.skinUrl, (String) null))
+		if(par1EntityPlayer.getCommandSenderName().equals("deadmau5") && par1EntityPlayer.func_110309_l().func_110557_a())
 		{
-			for(int var20 = 0; var20 < 2; ++var20)
+			func_110776_a(par1EntityPlayer.func_110306_p());
+			for(int var23 = 0; var23 < 2; ++var23)
 			{
-				float var25 = par1EntityPlayer.prevRotationYaw + (par1EntityPlayer.rotationYaw - par1EntityPlayer.prevRotationYaw) * par2 - (par1EntityPlayer.prevRenderYawOffset + (par1EntityPlayer.renderYawOffset - par1EntityPlayer.prevRenderYawOffset) * par2);
-				var7 = par1EntityPlayer.prevRotationPitch + (par1EntityPlayer.rotationPitch - par1EntityPlayer.prevRotationPitch) * par2;
+				float var27 = par1EntityPlayer.prevRotationYaw + (par1EntityPlayer.rotationYaw - par1EntityPlayer.prevRotationYaw) * par2 - (par1EntityPlayer.prevRenderYawOffset + (par1EntityPlayer.renderYawOffset - par1EntityPlayer.prevRenderYawOffset) * par2);
+				float var7 = par1EntityPlayer.prevRotationPitch + (par1EntityPlayer.rotationPitch - par1EntityPlayer.prevRotationPitch) * par2;
 				GL11.glPushMatrix();
-				GL11.glRotatef(var25, 0.0F, 1.0F, 0.0F);
+				GL11.glRotatef(var27, 0.0F, 1.0F, 0.0F);
 				GL11.glRotatef(var7, 1.0F, 0.0F, 0.0F);
-				GL11.glTranslatef(0.375F * (var20 * 2 - 1), 0.0F, 0.0F);
+				GL11.glTranslatef(0.375F * (var23 * 2 - 1), 0.0F, 0.0F);
 				GL11.glTranslatef(0.0F, -0.375F, 0.0F);
 				GL11.glRotatef(-var7, 1.0F, 0.0F, 0.0F);
-				GL11.glRotatef(-var25, 0.0F, 1.0F, 0.0F);
-				var8 = 1.3333334F;
+				GL11.glRotatef(-var27, 0.0F, 1.0F, 0.0F);
+				float var8 = 1.3333334F;
 				GL11.glScalef(var8, var8, var8);
 				modelBipedMain.renderEars(0.0625F);
 				GL11.glPopMatrix();
 			}
 		}
-		float var11;
-		if(loadDownloadableImageTexture(par1EntityPlayer.cloakUrl, (String) null) && !par1EntityPlayer.isInvisible() && !par1EntityPlayer.getHideCape())
+		boolean var24 = par1EntityPlayer.func_110310_o().func_110557_a();
+		boolean var25 = !par1EntityPlayer.isInvisible();
+		boolean var26 = !par1EntityPlayer.getHideCape();
+		float var14;
+		if(var24 && var25 && var26)
 		{
+			func_110776_a(par1EntityPlayer.func_110303_q());
 			GL11.glPushMatrix();
 			GL11.glTranslatef(0.0F, 0.0F, 0.125F);
-			double var22 = par1EntityPlayer.field_71091_bM + (par1EntityPlayer.field_71094_bP - par1EntityPlayer.field_71091_bM) * par2 - (par1EntityPlayer.prevPosX + (par1EntityPlayer.posX - par1EntityPlayer.prevPosX) * par2);
-			double var24 = par1EntityPlayer.field_71096_bN + (par1EntityPlayer.field_71095_bQ - par1EntityPlayer.field_71096_bN) * par2 - (par1EntityPlayer.prevPosY + (par1EntityPlayer.posY - par1EntityPlayer.prevPosY) * par2);
-			double var9 = par1EntityPlayer.field_71097_bO + (par1EntityPlayer.field_71085_bR - par1EntityPlayer.field_71097_bO) * par2 - (par1EntityPlayer.prevPosZ + (par1EntityPlayer.posZ - par1EntityPlayer.prevPosZ) * par2);
-			var11 = par1EntityPlayer.prevRenderYawOffset + (par1EntityPlayer.renderYawOffset - par1EntityPlayer.prevRenderYawOffset) * par2;
-			double var12 = MathHelper.sin(var11 * (float) Math.PI / 180.0F);
-			double var14 = -MathHelper.cos(var11 * (float) Math.PI / 180.0F);
-			float var16 = (float) var24 * 10.0F;
-			if(var16 < -6.0F)
+			double var29 = par1EntityPlayer.field_71091_bM + (par1EntityPlayer.field_71094_bP - par1EntityPlayer.field_71091_bM) * par2 - (par1EntityPlayer.prevPosX + (par1EntityPlayer.posX - par1EntityPlayer.prevPosX) * par2);
+			double var10 = par1EntityPlayer.field_71096_bN + (par1EntityPlayer.field_71095_bQ - par1EntityPlayer.field_71096_bN) * par2 - (par1EntityPlayer.prevPosY + (par1EntityPlayer.posY - par1EntityPlayer.prevPosY) * par2);
+			double var12 = par1EntityPlayer.field_71097_bO + (par1EntityPlayer.field_71085_bR - par1EntityPlayer.field_71097_bO) * par2 - (par1EntityPlayer.prevPosZ + (par1EntityPlayer.posZ - par1EntityPlayer.prevPosZ) * par2);
+			var14 = par1EntityPlayer.prevRenderYawOffset + (par1EntityPlayer.renderYawOffset - par1EntityPlayer.prevRenderYawOffset) * par2;
+			double var15 = MathHelper.sin(var14 * (float) Math.PI / 180.0F);
+			double var17 = -MathHelper.cos(var14 * (float) Math.PI / 180.0F);
+			float var19 = (float) var10 * 10.0F;
+			if(var19 < -6.0F)
 			{
-				var16 = -6.0F;
+				var19 = -6.0F;
 			}
-			if(var16 > 32.0F)
+			if(var19 > 32.0F)
 			{
-				var16 = 32.0F;
+				var19 = 32.0F;
 			}
-			float var17 = (float) (var22 * var12 + var9 * var14) * 100.0F;
-			float var18 = (float) (var22 * var14 - var9 * var12) * 100.0F;
-			if(var17 < 0.0F)
+			float var20 = (float) (var29 * var15 + var12 * var17) * 100.0F;
+			float var21 = (float) (var29 * var17 - var12 * var15) * 100.0F;
+			if(var20 < 0.0F)
 			{
-				var17 = 0.0F;
+				var20 = 0.0F;
 			}
-			float var19 = par1EntityPlayer.prevCameraYaw + (par1EntityPlayer.cameraYaw - par1EntityPlayer.prevCameraYaw) * par2;
-			var16 += MathHelper.sin((par1EntityPlayer.prevDistanceWalkedModified + (par1EntityPlayer.distanceWalkedModified - par1EntityPlayer.prevDistanceWalkedModified) * par2) * 6.0F) * 32.0F * var19;
+			float var22 = par1EntityPlayer.prevCameraYaw + (par1EntityPlayer.cameraYaw - par1EntityPlayer.prevCameraYaw) * par2;
+			var19 += MathHelper.sin((par1EntityPlayer.prevDistanceWalkedModified + (par1EntityPlayer.distanceWalkedModified - par1EntityPlayer.prevDistanceWalkedModified) * par2) * 6.0F) * 32.0F * var22;
 			if(par1EntityPlayer.isSneaking())
 			{
-				var16 += 25.0F;
+				var19 += 25.0F;
 			}
-			GL11.glRotatef(6.0F + var17 / 2.0F + var16, 1.0F, 0.0F, 0.0F);
-			GL11.glRotatef(var18 / 2.0F, 0.0F, 0.0F, 1.0F);
-			GL11.glRotatef(-var18 / 2.0F, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(6.0F + var20 / 2.0F + var19, 1.0F, 0.0F, 0.0F);
+			GL11.glRotatef(var21 / 2.0F, 0.0F, 0.0F, 1.0F);
+			GL11.glRotatef(-var21 / 2.0F, 0.0F, 1.0F, 0.0F);
 			GL11.glRotatef(180.0F, 0.0F, 1.0F, 0.0F);
 			modelBipedMain.renderCloak(0.0625F);
 			GL11.glPopMatrix();
 		}
-		ItemStack var21 = par1EntityPlayer.inventory.getCurrentItem();
-		if(var21 != null)
+		ItemStack var28 = par1EntityPlayer.inventory.getCurrentItem();
+		if(var28 != null)
 		{
 			GL11.glPushMatrix();
 			modelBipedMain.bipedRightArm.postRender(0.0625F);
 			GL11.glTranslatef(-0.0625F, 0.4375F, 0.0625F);
 			if(par1EntityPlayer.fishEntity != null)
 			{
-				var21 = new ItemStack(Item.stick);
+				var28 = new ItemStack(Item.stick);
 			}
-			EnumAction var23 = null;
+			EnumAction var9 = null;
 			if(par1EntityPlayer.getItemInUseCount() > 0)
 			{
-				var23 = var21.getItemUseAction();
+				var9 = var28.getItemUseAction();
 			}
-			if(var21.itemID < 256 && RenderBlocks.renderItemIn3d(Block.blocksList[var21.itemID].getRenderType()))
+			float var31;
+			if(var28.itemID < 256 && RenderBlocks.renderItemIn3d(Block.blocksList[var28.itemID].getRenderType()))
 			{
-				var7 = 0.5F;
+				var31 = 0.5F;
 				GL11.glTranslatef(0.0F, 0.1875F, -0.3125F);
-				var7 *= 0.75F;
+				var31 *= 0.75F;
 				GL11.glRotatef(20.0F, 1.0F, 0.0F, 0.0F);
 				GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
-				GL11.glScalef(-var7, -var7, var7);
-			} else if(var21.itemID == Item.bow.itemID)
+				GL11.glScalef(-var31, -var31, var31);
+			} else if(var28.itemID == Item.bow.itemID)
 			{
-				var7 = 0.625F;
+				var31 = 0.625F;
 				GL11.glTranslatef(0.0F, 0.125F, 0.3125F);
 				GL11.glRotatef(-20.0F, 0.0F, 1.0F, 0.0F);
-				GL11.glScalef(var7, -var7, var7);
+				GL11.glScalef(var31, -var31, var31);
 				GL11.glRotatef(-100.0F, 1.0F, 0.0F, 0.0F);
 				GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
-			} else if(Item.itemsList[var21.itemID].isFull3D())
+			} else if(Item.itemsList[var28.itemID].isFull3D())
 			{
-				var7 = 0.625F;
-				if(Item.itemsList[var21.itemID].shouldRotateAroundWhenRendering())
+				var31 = 0.625F;
+				if(Item.itemsList[var28.itemID].shouldRotateAroundWhenRendering())
 				{
 					GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
 					GL11.glTranslatef(0.0F, -0.125F, 0.0F);
 				}
-				if(par1EntityPlayer.getItemInUseCount() > 0 && var23 == EnumAction.block)
+				if(par1EntityPlayer.getItemInUseCount() > 0 && var9 == EnumAction.block)
 				{
 					GL11.glTranslatef(0.05F, 0.0F, -0.1F);
 					GL11.glRotatef(-50.0F, 0.0F, 1.0F, 0.0F);
@@ -297,51 +300,51 @@
 					GL11.glRotatef(-60.0F, 0.0F, 0.0F, 1.0F);
 				}
 				GL11.glTranslatef(0.0F, 0.1875F, 0.0F);
-				GL11.glScalef(var7, -var7, var7);
+				GL11.glScalef(var31, -var31, var31);
 				GL11.glRotatef(-100.0F, 1.0F, 0.0F, 0.0F);
 				GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
 			} else
 			{
-				var7 = 0.375F;
+				var31 = 0.375F;
 				GL11.glTranslatef(0.25F, 0.1875F, -0.1875F);
-				GL11.glScalef(var7, var7, var7);
+				GL11.glScalef(var31, var31, var31);
 				GL11.glRotatef(60.0F, 0.0F, 0.0F, 1.0F);
 				GL11.glRotatef(-90.0F, 1.0F, 0.0F, 0.0F);
 				GL11.glRotatef(20.0F, 0.0F, 0.0F, 1.0F);
 			}
-			float var10;
-			int var27;
-			float var28;
-			if(var21.getItem().requiresMultipleRenderPasses())
+			float var13;
+			float var32;
+			int var33;
+			if(var28.getItem().requiresMultipleRenderPasses())
 			{
-				for(var27 = 0; var27 <= 1; ++var27)
+				for(var33 = 0; var33 <= 1; ++var33)
 				{
-					int var26 = var21.getItem().getColorFromItemStack(var21, var27);
-					var28 = (var26 >> 16 & 255) / 255.0F;
-					var10 = (var26 >> 8 & 255) / 255.0F;
-					var11 = (var26 & 255) / 255.0F;
-					GL11.glColor4f(var28, var10, var11, 1.0F);
-					renderManager.itemRenderer.renderItem(par1EntityPlayer, var21, var27);
+					int var11 = var28.getItem().getColorFromItemStack(var28, var33);
+					var32 = (var11 >> 16 & 255) / 255.0F;
+					var13 = (var11 >> 8 & 255) / 255.0F;
+					var14 = (var11 & 255) / 255.0F;
+					GL11.glColor4f(var32, var13, var14, 1.0F);
+					renderManager.itemRenderer.renderItem(par1EntityPlayer, var28, var33);
 				}
 			} else
 			{
-				var27 = var21.getItem().getColorFromItemStack(var21, 0);
-				var8 = (var27 >> 16 & 255) / 255.0F;
-				var28 = (var27 >> 8 & 255) / 255.0F;
-				var10 = (var27 & 255) / 255.0F;
-				GL11.glColor4f(var8, var28, var10, 1.0F);
-				renderManager.itemRenderer.renderItem(par1EntityPlayer, var21, 0);
+				var33 = var28.getItem().getColorFromItemStack(var28, 0);
+				float var30 = (var33 >> 16 & 255) / 255.0F;
+				var32 = (var33 >> 8 & 255) / 255.0F;
+				var13 = (var33 & 255) / 255.0F;
+				GL11.glColor4f(var30, var32, var13, 1.0F);
+				renderManager.itemRenderer.renderItem(par1EntityPlayer, var28, 0);
 			}
 			GL11.glPopMatrix();
 		}
 	}
 	
-	@Override protected void rotateCorpse(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override protected void rotateCorpse(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
-		rotatePlayer((EntityPlayer) par1EntityLiving, par2, par3, par4);
+		rotatePlayer((AbstractClientPlayer) par1EntityLiving, par2, par3, par4);
 	}
 	
-	protected void rotatePlayer(EntityPlayer par1EntityPlayer, float par2, float par3, float par4)
+	protected void rotatePlayer(AbstractClientPlayer par1EntityPlayer, float par2, float par3, float par4)
 	{
 		if(par1EntityPlayer.isEntityAlive() && par1EntityPlayer.isPlayerSleeping())
 		{
@@ -354,7 +357,7 @@
 		}
 	}
 	
-	protected int setArmorModel(EntityPlayer par1EntityPlayer, int par2, float par3)
+	protected int setArmorModel(AbstractClientPlayer par1EntityPlayer, int par2, float par3)
 	{
 		ItemStack var4 = par1EntityPlayer.inventory.armorItemInSlot(3 - par2);
 		if(var4 != null)
@@ -363,7 +366,7 @@
 			if(var5 instanceof ItemArmor)
 			{
 				ItemArmor var6 = (ItemArmor) var5;
-				loadTexture("/armor/" + armorFilenamePrefix[var6.renderIndex] + "_" + (par2 == 2 ? 2 : 1) + ".png");
+				func_110776_a(RenderBiped.func_110857_a(var6, par2));
 				ModelBiped var7 = par2 == 2 ? modelArmor : modelArmorChestplate;
 				var7.bipedHead.showModel = par2 == 0;
 				var7.bipedHeadwear.showModel = par2 == 0;
@@ -373,18 +376,9 @@
 				var7.bipedRightLeg.showModel = par2 == 2 || par2 == 3;
 				var7.bipedLeftLeg.showModel = par2 == 2 || par2 == 3;
 				setRenderPassModel(var7);
-				if(var7 != null)
-				{
-					var7.onGround = mainModel.onGround;
-				}
-				if(var7 != null)
-				{
-					var7.isRiding = mainModel.isRiding;
-				}
-				if(var7 != null)
-				{
-					var7.isChild = mainModel.isChild;
-				}
+				var7.onGround = mainModel.onGround;
+				var7.isRiding = mainModel.isRiding;
+				var7.isChild = mainModel.isChild;
 				float var8 = 1.0F;
 				if(var6.getArmorMaterial() == EnumArmorMaterial.CLOTH)
 				{
@@ -404,8 +398,8 @@
 		return -1;
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
-		return setArmorModel((EntityPlayer) par1EntityLiving, par2, par3);
+		return setArmorModel((AbstractClientPlayer) par1EntityLiving, par2, par3);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderSheep.java b/RMCClient/minecraft/net/minecraft/src/RenderSheep.java
index c5f8438..4c1bef6 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderSheep.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderSheep.java
@@ -4,17 +4,30 @@
 
 public class RenderSheep extends RenderLiving
 {
-	public RenderSheep(ModelBase par1ModelBase, ModelBase par2ModelBase, float par3)
+	private static final ResourceLocation field_110885_a = new ResourceLocation("textures/entity/sheep/sheep_fur.png");
+	private static final ResourceLocation field_110884_f = new ResourceLocation("textures/entity/sheep/sheep.png");
+	
+	public RenderSheep(ModelBase p_i1266_1_, ModelBase p_i1266_2_, float p_i1266_3_)
 	{
-		super(par1ModelBase, par3);
-		setRenderPassModel(par2ModelBase);
+		super(p_i1266_1_, p_i1266_3_);
+		setRenderPassModel(p_i1266_2_);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110883_a((EntitySheep) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110883_a(EntitySheep p_110883_1_)
+	{
+		return field_110884_f;
 	}
 	
 	protected int setWoolColorAndRender(EntitySheep par1EntitySheep, int par2, float par3)
 	{
 		if(par2 == 0 && !par1EntitySheep.getSheared())
 		{
-			loadTexture("/mob/sheep_fur.png");
+			func_110776_a(field_110885_a);
 			float var4 = 1.0F;
 			int var5 = par1EntitySheep.getFleeceColor();
 			GL11.glColor3f(var4 * EntitySheep.fleeceColorTable[var5][0], var4 * EntitySheep.fleeceColorTable[var5][1], var4 * EntitySheep.fleeceColorTable[var5][2]);
@@ -22,7 +35,7 @@
 		} else return -1;
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return setWoolColorAndRender((EntitySheep) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderSilverfish.java b/RMCClient/minecraft/net/minecraft/src/RenderSilverfish.java
index f927637..7726eb3 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderSilverfish.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderSilverfish.java
@@ -2,6 +2,8 @@
 
 public class RenderSilverfish extends RenderLiving
 {
+	private static final ResourceLocation field_110882_a = new ResourceLocation("textures/entity/silverfish.png");
+	
 	public RenderSilverfish()
 	{
 		super(new ModelSilverfish(), 0.3F);
@@ -17,7 +19,17 @@
 		renderSilverfish((EntitySilverfish) par1EntityLiving, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected float getDeathMaxRotation(EntityLiving par1EntityLiving)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110881_b((EntitySilverfish) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110881_b(EntitySilverfish p_110881_1_)
+	{
+		return field_110882_a;
+	}
+	
+	@Override protected float getDeathMaxRotation(EntityLivingBase par1EntityLiving)
 	{
 		return getSilverfishDeathRotation((EntitySilverfish) par1EntityLiving);
 	}
@@ -27,12 +39,17 @@
 		return 180.0F;
 	}
 	
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		renderSilverfish((EntitySilverfish) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
+	
 	public void renderSilverfish(EntitySilverfish par1EntitySilverfish, double par2, double par4, double par6, float par8, float par9)
 	{
 		super.doRenderLiving(par1EntitySilverfish, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return shouldSilverfishRenderPass((EntitySilverfish) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderSkeleton.java b/RMCClient/minecraft/net/minecraft/src/RenderSkeleton.java
index 0bf8673..9edcd6f 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderSkeleton.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderSkeleton.java
@@ -4,9 +4,27 @@
 
 public class RenderSkeleton extends RenderBiped
 {
+	private static final ResourceLocation field_110862_k = new ResourceLocation("textures/entity/skeleton/skeleton.png");
+	private static final ResourceLocation field_110861_l = new ResourceLocation("textures/entity/skeleton/wither_skeleton.png");
+	
 	public RenderSkeleton()
 	{
 		super(new ModelSkeleton(), 0.5F);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110860_a((EntitySkeleton) p_110775_1_);
+	}
+	
+	@Override protected ResourceLocation func_110856_a(EntityLiving p_110856_1_)
+	{
+		return func_110860_a((EntitySkeleton) p_110856_1_);
+	}
+	
+	protected ResourceLocation func_110860_a(EntitySkeleton p_110860_1_)
+	{
+		return p_110860_1_.getSkeletonType() == 1 ? field_110861_l : field_110862_k;
 	}
 	
 	@Override protected void func_82422_c()
@@ -22,7 +40,7 @@
 		}
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		func_82438_a((EntitySkeleton) par1EntityLiving, par2);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderSlime.java b/RMCClient/minecraft/net/minecraft/src/RenderSlime.java
index 82eb374..e7a1561 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderSlime.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderSlime.java
@@ -4,15 +4,26 @@
 
 public class RenderSlime extends RenderLiving
 {
+	private static final ResourceLocation field_110897_a = new ResourceLocation("textures/entity/slime/slime.png");
 	private ModelBase scaleAmount;
 	
-	public RenderSlime(ModelBase par1ModelBase, ModelBase par2ModelBase, float par3)
+	public RenderSlime(ModelBase p_i1267_1_, ModelBase p_i1267_2_, float p_i1267_3_)
 	{
-		super(par1ModelBase, par3);
-		scaleAmount = par2ModelBase;
+		super(p_i1267_1_, p_i1267_3_);
+		scaleAmount = p_i1267_2_;
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110896_a((EntitySlime) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110896_a(EntitySlime p_110896_1_)
+	{
+		return field_110897_a;
+	}
+	
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		scaleSlime((EntitySlime) par1EntityLiving, par2);
 	}
@@ -25,7 +36,7 @@
 		GL11.glScalef(var5 * var3, 1.0F / var5 * var3, var5 * var3);
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return shouldSlimeRenderPass((EntitySlime) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderSnowMan.java b/RMCClient/minecraft/net/minecraft/src/RenderSnowMan.java
index 60368a3..6d5d75b 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderSnowMan.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderSnowMan.java
@@ -4,6 +4,7 @@
 
 public class RenderSnowMan extends RenderLiving
 {
+	private static final ResourceLocation field_110895_a = new ResourceLocation("textures/entity/snowman.png");
 	private ModelSnowMan snowmanModel;
 	
 	public RenderSnowMan()
@@ -13,7 +14,17 @@
 		setRenderPassModel(snowmanModel);
 	}
 	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110894_a((EntitySnowman) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110894_a(EntitySnowman p_110894_1_)
+	{
+		return field_110895_a;
+	}
+	
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
 	{
 		renderSnowmanPumpkin((EntitySnowman) par1EntityLiving, par2);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderSnowball.java b/RMCClient/minecraft/net/minecraft/src/RenderSnowball.java
index 865399e..7db1c8b 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderSnowball.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderSnowball.java
@@ -8,15 +8,15 @@
 	private Item field_94151_a;
 	private int field_94150_f;
 	
-	public RenderSnowball(Item par1)
+	public RenderSnowball(Item p_i1260_1_)
 	{
-		this(par1, 0);
+		this(p_i1260_1_, 0);
 	}
 	
-	public RenderSnowball(Item par1, int par2)
+	public RenderSnowball(Item p_i1259_1_, int p_i1259_2_)
 	{
-		field_94151_a = par1;
-		field_94150_f = par2;
+		field_94151_a = p_i1259_1_;
+		field_94150_f = p_i1259_2_;
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
@@ -28,9 +28,9 @@
 			GL11.glTranslatef((float) par2, (float) par4, (float) par6);
 			GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 			GL11.glScalef(0.5F, 0.5F, 0.5F);
-			loadTexture("/gui/items.png");
+			func_110777_b(par1Entity);
 			Tessellator var11 = Tessellator.instance;
-			if(var10 == ItemPotion.func_94589_d("potion_splash"))
+			if(var10 == ItemPotion.func_94589_d("bottle_splash"))
 			{
 				int var12 = PotionHelper.func_77915_a(((EntityPotion) par1Entity).getPotionDamage(), false);
 				float var13 = (var12 >> 16 & 255) / 255.0F;
@@ -38,7 +38,7 @@
 				float var15 = (var12 & 255) / 255.0F;
 				GL11.glColor3f(var13, var14, var15);
 				GL11.glPushMatrix();
-				func_77026_a(var11, ItemPotion.func_94589_d("potion_contents"));
+				func_77026_a(var11, ItemPotion.func_94589_d("overlay"));
 				GL11.glPopMatrix();
 				GL11.glColor3f(1.0F, 1.0F, 1.0F);
 			}
@@ -48,6 +48,11 @@
 		}
 	}
 	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return TextureMap.field_110576_c;
+	}
+	
 	private void func_77026_a(Tessellator par1Tessellator, Icon par2Icon)
 	{
 		float var3 = par2Icon.getMinU();
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderSorter.java b/RMCClient/minecraft/net/minecraft/src/RenderSorter.java
index 698919d..796a2f4 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderSorter.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderSorter.java
@@ -4,11 +4,11 @@
 
 public class RenderSorter implements Comparator
 {
-	private EntityLiving baseEntity;
+	private EntityLivingBase baseEntity;
 	
-	public RenderSorter(EntityLiving par1EntityLiving)
+	public RenderSorter(EntityLivingBase p_i1241_1_)
 	{
-		baseEntity = par1EntityLiving;
+		baseEntity = p_i1241_1_;
 	}
 	
 	@Override public int compare(Object par1Obj, Object par2Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderSpider.java b/RMCClient/minecraft/net/minecraft/src/RenderSpider.java
index 3a3721d..91c1515 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderSpider.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderSpider.java
@@ -4,26 +4,28 @@
 
 public class RenderSpider extends RenderLiving
 {
+	private static final ResourceLocation field_110891_a = new ResourceLocation("textures/entity/spider_eyes.png");
+	private static final ResourceLocation field_110890_f = new ResourceLocation("textures/entity/spider/spider.png");
+	
 	public RenderSpider()
 	{
 		super(new ModelSpider(), 1.0F);
 		setRenderPassModel(new ModelSpider());
 	}
 	
-	@Override protected float getDeathMaxRotation(EntityLiving par1EntityLiving)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110889_a((EntitySpider) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110889_a(EntitySpider p_110889_1_)
+	{
+		return field_110890_f;
+	}
+	
+	@Override protected float getDeathMaxRotation(EntityLivingBase par1EntityLiving)
 	{
 		return setSpiderDeathMaxRotation((EntitySpider) par1EntityLiving);
-	}
-	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
-	{
-		scaleSpider((EntitySpider) par1EntityLiving, par2);
-	}
-	
-	protected void scaleSpider(EntitySpider par1EntitySpider, float par2)
-	{
-		float var3 = par1EntitySpider.spiderScaleAmount();
-		GL11.glScalef(var3, var3, var3);
 	}
 	
 	protected float setSpiderDeathMaxRotation(EntitySpider par1EntitySpider)
@@ -36,7 +38,7 @@
 		if(par2 != 0) return -1;
 		else
 		{
-			loadTexture("/mob/spider_eyes.png");
+			func_110776_a(field_110891_a);
 			float var4 = 1.0F;
 			GL11.glEnable(GL11.GL_BLEND);
 			GL11.glDisable(GL11.GL_ALPHA_TEST);
@@ -58,7 +60,7 @@
 		}
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return setSpiderEyeBrightness((EntitySpider) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderSquid.java b/RMCClient/minecraft/net/minecraft/src/RenderSquid.java
index c09ffdd..d3aae71 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderSquid.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderSquid.java
@@ -4,9 +4,11 @@
 
 public class RenderSquid extends RenderLiving
 {
-	public RenderSquid(ModelBase par1ModelBase, float par2)
+	private static final ResourceLocation field_110901_a = new ResourceLocation("textures/entity/squid.png");
+	
+	public RenderSquid(ModelBase p_i1268_1_, float p_i1268_2_)
 	{
-		super(par1ModelBase, par2);
+		super(p_i1268_1_, p_i1268_2_);
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
@@ -19,7 +21,17 @@
 		renderLivingSquid((EntitySquid) par1EntityLiving, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected float handleRotationFloat(EntityLiving par1EntityLiving, float par2)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110900_a((EntitySquid) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110900_a(EntitySquid p_110900_1_)
+	{
+		return field_110901_a;
+	}
+	
+	@Override protected float handleRotationFloat(EntityLivingBase par1EntityLiving, float par2)
 	{
 		return this.handleRotationFloat((EntitySquid) par1EntityLiving, par2);
 	}
@@ -34,7 +46,12 @@
 		super.doRenderLiving(par1EntitySquid, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected void rotateCorpse(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		renderLivingSquid((EntitySquid) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected void rotateCorpse(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		rotateSquidsCorpse((EntitySquid) par1EntityLiving, par2, par3, par4);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderTNTPrimed.java b/RMCClient/minecraft/net/minecraft/src/RenderTNTPrimed.java
index 3807cbd..8ba256f 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderTNTPrimed.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderTNTPrimed.java
@@ -16,6 +16,16 @@
 		renderPrimedTNT((EntityTNTPrimed) par1Entity, par2, par4, par6, par8, par9);
 	}
 	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110808_a((EntityTNTPrimed) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110808_a(EntityTNTPrimed p_110808_1_)
+	{
+		return TextureMap.field_110575_b;
+	}
+	
 	public void renderPrimedTNT(EntityTNTPrimed par1EntityTNTPrimed, double par2, double par4, double par6, float par8, float par9)
 	{
 		GL11.glPushMatrix();
@@ -38,7 +48,7 @@
 			GL11.glScalef(var11, var11, var11);
 		}
 		var10 = (1.0F - (par1EntityTNTPrimed.fuse - par9 + 1.0F) / 100.0F) * 0.8F;
-		loadTexture("/terrain.png");
+		func_110777_b(par1EntityTNTPrimed);
 		blockRenderer.renderBlockAsItem(Block.tnt, 0, par1EntityTNTPrimed.getBrightness(par9));
 		if(par1EntityTNTPrimed.fuse / 5 % 2 == 0)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderVillager.java b/RMCClient/minecraft/net/minecraft/src/RenderVillager.java
index 62f986c..020a1d5 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderVillager.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderVillager.java
@@ -4,6 +4,12 @@
 
 public class RenderVillager extends RenderLiving
 {
+	private static final ResourceLocation field_110903_f = new ResourceLocation("textures/entity/villager/villager.png");
+	private static final ResourceLocation field_110904_g = new ResourceLocation("textures/entity/villager/farmer.png");
+	private static final ResourceLocation field_110908_h = new ResourceLocation("textures/entity/villager/librarian.png");
+	private static final ResourceLocation field_110907_k = new ResourceLocation("textures/entity/villager/priest.png");
+	private static final ResourceLocation field_110905_l = new ResourceLocation("textures/entity/villager/smith.png");
+	private static final ResourceLocation field_110906_m = new ResourceLocation("textures/entity/villager/butcher.png");
 	protected ModelVillager villagerModel;
 	
 	public RenderVillager()
@@ -22,7 +28,31 @@
 		renderVillager((EntityVillager) par1EntityLiving, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110902_a((EntityVillager) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110902_a(EntityVillager p_110902_1_)
+	{
+		switch(p_110902_1_.getProfession())
+		{
+			case 0:
+				return field_110904_g;
+			case 1:
+				return field_110908_h;
+			case 2:
+				return field_110907_k;
+			case 3:
+				return field_110905_l;
+			case 4:
+				return field_110906_m;
+			default:
+				return field_110903_f;
+		}
+	}
+	
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		preRenderVillager((EntityVillager) par1EntityLiving, par2);
 	}
@@ -41,9 +71,14 @@
 		GL11.glScalef(var3, var3, var3);
 	}
 	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
 	{
 		renderVillagerEquipedItems((EntityVillager) par1EntityLiving, par2);
+	}
+	
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		renderVillager((EntityVillager) par1EntityPlayer, par2, par4, par6, par8, par9);
 	}
 	
 	public void renderVillager(EntityVillager par1EntityVillager, double par2, double par4, double par6, float par8, float par9)
@@ -56,7 +91,7 @@
 		super.renderEquippedItems(par1EntityVillager, par2);
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return shouldVillagerRenderPass((EntityVillager) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderWitch.java b/RMCClient/minecraft/net/minecraft/src/RenderWitch.java
index d4ecb2c..00f51fa 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderWitch.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderWitch.java
@@ -1,19 +1,16 @@
 package net.minecraft.src;
 
-import net.minecraft.client.Minecraft;
-
 import org.lwjgl.opengl.GL11;
 
 public class RenderWitch extends RenderLiving
 {
-	private ModelWitch field_82414_a;
-	private int field_82413_f;
+	private static final ResourceLocation field_110910_a = new ResourceLocation("textures/entity/witch.png");
+	private final ModelWitch field_82414_a;
 	
 	public RenderWitch()
 	{
 		super(new ModelWitch(0.0F), 0.5F);
 		field_82414_a = (ModelWitch) mainModel;
-		field_82413_f = field_82414_a.func_82899_a();
 	}
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
@@ -24,6 +21,16 @@
 	@Override public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
 	{
 		func_82412_a((EntityWitch) par1EntityLiving, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110909_a((EntityWitch) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110909_a(EntityWitch p_110909_1_)
+	{
+		return field_110910_a;
 	}
 	
 	protected void func_82409_b(EntityWitch par1EntityWitch, float par2)
@@ -107,23 +114,22 @@
 	public void func_82412_a(EntityWitch par1EntityWitch, double par2, double par4, double par6, float par8, float par9)
 	{
 		ItemStack var10 = par1EntityWitch.getHeldItem();
-		if(field_82414_a.func_82899_a() != field_82413_f)
-		{
-			Minecraft.getMinecraft().getLogAgent().logInfo("Loaded new witch model");
-			mainModel = field_82414_a = new ModelWitch(0.0F);
-			field_82413_f = field_82414_a.func_82899_a();
-		}
 		field_82414_a.field_82900_g = var10 != null;
 		super.doRenderLiving(par1EntityWitch, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		func_82409_b((EntityWitch) par1EntityLiving, par2);
 	}
 	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
 	{
 		func_82411_a((EntityWitch) par1EntityLiving, par2);
 	}
+	
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		func_82412_a((EntityWitch) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderWither.java b/RMCClient/minecraft/net/minecraft/src/RenderWither.java
index 998b9d8..3437fd7 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderWither.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderWither.java
@@ -4,6 +4,8 @@
 
 public class RenderWither extends RenderLiving
 {
+	private static final ResourceLocation field_110913_a = new ResourceLocation("textures/entity/wither/wither_invulnerable.png");
+	private static final ResourceLocation field_110912_f = new ResourceLocation("textures/entity/wither/wither.png");
 	private int field_82419_a;
 	
 	public RenderWither()
@@ -20,6 +22,17 @@
 	@Override public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
 	{
 		func_82418_a((EntityWither) par1EntityLiving, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110911_a((EntityWither) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110911_a(EntityWither p_110911_1_)
+	{
+		int var2 = p_110911_1_.func_82212_n();
+		return var2 > 0 && (var2 > 80 || var2 / 5 % 2 != 1) ? field_110913_a : field_110912_f;
 	}
 	
 	protected void func_82415_a(EntityWither par1EntityWither, float par2)
@@ -54,7 +67,7 @@
 			if(par2 == 1)
 			{
 				float var4 = par1EntityWither.ticksExisted + par3;
-				loadTexture("/armor/witherarmor.png");
+				func_110776_a(field_110913_a);
 				GL11.glMatrixMode(GL11.GL_TEXTURE);
 				GL11.glLoadIdentity();
 				float var5 = MathHelper.cos(var4 * 0.02F) * 3.0F;
@@ -95,17 +108,22 @@
 		super.doRenderLiving(par1EntityWither, par2, par4, par6, par8, par9);
 	}
 	
-	@Override protected int inheritRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int inheritRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return func_82416_b((EntityWither) par1EntityLiving, par2, par3);
 	}
 	
-	@Override protected void preRenderCallback(EntityLiving par1EntityLiving, float par2)
+	@Override protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
 	{
 		func_82415_a((EntityWither) par1EntityLiving, par2);
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		func_82418_a((EntityWither) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return func_82417_a((EntityWither) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderWitherSkull.java b/RMCClient/minecraft/net/minecraft/src/RenderWitherSkull.java
index 036ae63..a9ce9cd 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderWitherSkull.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderWitherSkull.java
@@ -5,11 +5,23 @@
 
 public class RenderWitherSkull extends Render
 {
-	ModelSkeletonHead skeletonHeadModel = new ModelSkeletonHead();
+	private static final ResourceLocation field_110811_a = new ResourceLocation("textures/entity/wither/wither_invulnerable.png");
+	private static final ResourceLocation field_110810_f = new ResourceLocation("textures/entity/wither/wither.png");
+	private final ModelSkeletonHead skeletonHeadModel = new ModelSkeletonHead();
 	
 	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
 	{
 		func_82399_a((EntityWitherSkull) par1Entity, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110809_a((EntityWitherSkull) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110809_a(EntityWitherSkull p_110809_1_)
+	{
+		return p_110809_1_.isInvulnerable() ? field_110811_a : field_110810_f;
 	}
 	
 	public void func_82399_a(EntityWitherSkull par1EntityWitherSkull, double par2, double par4, double par6, float par8, float par9)
@@ -23,13 +35,7 @@
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 		GL11.glScalef(-1.0F, -1.0F, 1.0F);
 		GL11.glEnable(GL11.GL_ALPHA_TEST);
-		if(par1EntityWitherSkull.isInvulnerable())
-		{
-			loadTexture("/mob/wither_invul.png");
-		} else
-		{
-			loadTexture("/mob/wither.png");
-		}
+		func_110777_b(par1EntityWitherSkull);
 		skeletonHeadModel.render(par1EntityWitherSkull, 0.0F, 0.0F, 0.0F, var10, var11, var12);
 		GL11.glPopMatrix();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderWolf.java b/RMCClient/minecraft/net/minecraft/src/RenderWolf.java
index 6eccf6e..10c054b 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderWolf.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderWolf.java
@@ -4,10 +4,25 @@
 
 public class RenderWolf extends RenderLiving
 {
-	public RenderWolf(ModelBase par1ModelBase, ModelBase par2ModelBase, float par3)
+	private static final ResourceLocation field_110917_a = new ResourceLocation("textures/entity/wolf/wolf.png");
+	private static final ResourceLocation field_110915_f = new ResourceLocation("textures/entity/wolf/wolf_tame.png");
+	private static final ResourceLocation field_110916_g = new ResourceLocation("textures/entity/wolf/wolf_angry.png");
+	private static final ResourceLocation field_110918_h = new ResourceLocation("textures/entity/wolf/wolf_collar.png");
+	
+	public RenderWolf(ModelBase p_i1269_1_, ModelBase p_i1269_2_, float p_i1269_3_)
 	{
-		super(par1ModelBase, par3);
-		setRenderPassModel(par2ModelBase);
+		super(p_i1269_1_, p_i1269_3_);
+		setRenderPassModel(p_i1269_2_);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110914_a((EntityWolf) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110914_a(EntityWolf p_110914_1_)
+	{
+		return p_110914_1_.isTamed() ? field_110915_f : p_110914_1_.isAngry() ? field_110916_g : field_110917_a;
 	}
 	
 	protected int func_82447_a(EntityWolf par1EntityWolf, int par2, float par3)
@@ -16,12 +31,12 @@
 		if(par2 == 0 && par1EntityWolf.getWolfShaking())
 		{
 			var4 = par1EntityWolf.getBrightness(par3) * par1EntityWolf.getShadingWhileShaking(par3);
-			loadTexture(par1EntityWolf.getTexture());
+			func_110776_a(field_110917_a);
 			GL11.glColor3f(var4, var4, var4);
 			return 1;
 		} else if(par2 == 1 && par1EntityWolf.isTamed())
 		{
-			loadTexture("/mob/wolf_collar.png");
+			func_110776_a(field_110918_h);
 			var4 = 1.0F;
 			int var5 = par1EntityWolf.getCollarColor();
 			GL11.glColor3f(var4 * EntitySheep.fleeceColorTable[var5][0], var4 * EntitySheep.fleeceColorTable[var5][1], var4 * EntitySheep.fleeceColorTable[var5][2]);
@@ -34,12 +49,12 @@
 		return par1EntityWolf.getTailRotation();
 	}
 	
-	@Override protected float handleRotationFloat(EntityLiving par1EntityLiving, float par2)
+	@Override protected float handleRotationFloat(EntityLivingBase par1EntityLiving, float par2)
 	{
 		return getTailRotation((EntityWolf) par1EntityLiving, par2);
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return func_82447_a((EntityWolf) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderXPOrb.java b/RMCClient/minecraft/net/minecraft/src/RenderXPOrb.java
index 52cb533..4476fc7 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderXPOrb.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderXPOrb.java
@@ -5,6 +5,8 @@
 
 public class RenderXPOrb extends Render
 {
+	private static final ResourceLocation field_110785_a = new ResourceLocation("textures/entity/experience_orb.png");
+	
 	public RenderXPOrb()
 	{
 		shadowSize = 0.15F;
@@ -16,43 +18,53 @@
 		renderTheXPOrb((EntityXPOrb) par1Entity, par2, par4, par6, par8, par9);
 	}
 	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110784_a((EntityXPOrb) p_110775_1_);
+	}
+	
+	protected ResourceLocation func_110784_a(EntityXPOrb p_110784_1_)
+	{
+		return field_110785_a;
+	}
+	
 	public void renderTheXPOrb(EntityXPOrb par1EntityXPOrb, double par2, double par4, double par6, float par8, float par9)
 	{
 		GL11.glPushMatrix();
 		GL11.glTranslatef((float) par2, (float) par4, (float) par6);
+		func_110777_b(par1EntityXPOrb);
 		int var10 = par1EntityXPOrb.getTextureByXP();
-		loadTexture("/item/xporb.png");
-		Tessellator var11 = Tessellator.instance;
-		float var12 = (var10 % 4 * 16 + 0) / 64.0F;
-		float var13 = (var10 % 4 * 16 + 16) / 64.0F;
-		float var14 = (var10 / 4 * 16 + 0) / 64.0F;
-		float var15 = (var10 / 4 * 16 + 16) / 64.0F;
-		float var16 = 1.0F;
-		float var17 = 0.5F;
-		float var18 = 0.25F;
-		int var19 = par1EntityXPOrb.getBrightnessForRender(par9);
-		int var20 = var19 % 65536;
-		int var21 = var19 / 65536;
-		OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, var20 / 1.0F, var21 / 1.0F);
+		float var11 = (var10 % 4 * 16 + 0) / 64.0F;
+		float var12 = (var10 % 4 * 16 + 16) / 64.0F;
+		float var13 = (var10 / 4 * 16 + 0) / 64.0F;
+		float var14 = (var10 / 4 * 16 + 16) / 64.0F;
+		float var15 = 1.0F;
+		float var16 = 0.5F;
+		float var17 = 0.25F;
+		int var18 = par1EntityXPOrb.getBrightnessForRender(par9);
+		int var19 = var18 % 65536;
+		int var20 = var18 / 65536;
+		OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, var19 / 1.0F, var20 / 1.0F);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		float var26 = 255.0F;
-		float var27 = (par1EntityXPOrb.xpColor + par9) / 2.0F;
-		var21 = (int) ((MathHelper.sin(var27 + 0.0F) + 1.0F) * 0.5F * var26);
-		int var22 = (int) var26;
-		int var23 = (int) ((MathHelper.sin(var27 + 4.1887903F) + 1.0F) * 0.1F * var26);
-		int var24 = var21 << 16 | var22 << 8 | var23;
+		float var27 = 255.0F;
+		float var26 = (par1EntityXPOrb.xpColor + par9) / 2.0F;
+		var20 = (int) ((MathHelper.sin(var26 + 0.0F) + 1.0F) * 0.5F * var27);
+		int var21 = (int) var27;
+		int var22 = (int) ((MathHelper.sin(var26 + 4.1887903F) + 1.0F) * 0.1F * var27);
+		int var23 = var20 << 16 | var21 << 8 | var22;
 		GL11.glRotatef(180.0F - renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
 		GL11.glRotatef(-renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
-		float var25 = 0.3F;
-		GL11.glScalef(var25, var25, var25);
-		var11.startDrawingQuads();
-		var11.setColorRGBA_I(var24, 128);
-		var11.setNormal(0.0F, 1.0F, 0.0F);
-		var11.addVertexWithUV(0.0F - var17, 0.0F - var18, 0.0D, var12, var15);
-		var11.addVertexWithUV(var16 - var17, 0.0F - var18, 0.0D, var13, var15);
-		var11.addVertexWithUV(var16 - var17, 1.0F - var18, 0.0D, var13, var14);
-		var11.addVertexWithUV(0.0F - var17, 1.0F - var18, 0.0D, var12, var14);
-		var11.draw();
+		float var24 = 0.3F;
+		GL11.glScalef(var24, var24, var24);
+		Tessellator var25 = Tessellator.instance;
+		var25.startDrawingQuads();
+		var25.setColorRGBA_I(var23, 128);
+		var25.setNormal(0.0F, 1.0F, 0.0F);
+		var25.addVertexWithUV(0.0F - var16, 0.0F - var17, 0.0D, var11, var14);
+		var25.addVertexWithUV(var15 - var16, 0.0F - var17, 0.0D, var12, var14);
+		var25.addVertexWithUV(var15 - var16, 1.0F - var17, 0.0D, var12, var13);
+		var25.addVertexWithUV(0.0F - var16, 1.0F - var17, 0.0D, var11, var13);
+		var25.draw();
 		GL11.glDisable(GL11.GL_BLEND);
 		GL11.glDisable(GL12.GL_RESCALE_NORMAL);
 		GL11.glPopMatrix();
diff --git a/RMCClient/minecraft/net/minecraft/src/RenderZombie.java b/RMCClient/minecraft/net/minecraft/src/RenderZombie.java
index bc4d633..cc6391f 100644
--- a/RMCClient/minecraft/net/minecraft/src/RenderZombie.java
+++ b/RMCClient/minecraft/net/minecraft/src/RenderZombie.java
@@ -2,6 +2,9 @@
 
 public class RenderZombie extends RenderBiped
 {
+	private static final ResourceLocation field_110866_o = new ResourceLocation("textures/entity/zombie_pigman.png");
+	private static final ResourceLocation field_110865_p = new ResourceLocation("textures/entity/zombie/zombie.png");
+	private static final ResourceLocation field_110864_q = new ResourceLocation("textures/entity/zombie/zombie_villager.png");
 	private ModelBiped field_82434_o;
 	private ModelZombieVillager field_82432_p;
 	protected ModelBiped field_82437_k;
@@ -25,6 +28,31 @@
 	@Override public void doRenderLiving(EntityLiving par1EntityLiving, double par2, double par4, double par6, float par8, float par9)
 	{
 		func_82426_a((EntityZombie) par1EntityLiving, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected ResourceLocation func_110775_a(Entity p_110775_1_)
+	{
+		return func_110863_a((EntityZombie) p_110775_1_);
+	}
+	
+	@Override protected ResourceLocation func_110856_a(EntityLiving p_110856_1_)
+	{
+		return func_110863_a((EntityZombie) p_110856_1_);
+	}
+	
+	protected ResourceLocation func_110863_a(EntityZombie p_110863_1_)
+	{
+		return p_110863_1_ instanceof EntityPigZombie ? field_110866_o : p_110863_1_.isVillager() ? field_110864_q : field_110865_p;
+	}
+	
+	@Override protected void func_130005_c(EntityLiving p_130005_1_, float p_130005_2_)
+	{
+		func_82428_a((EntityZombie) p_130005_1_, p_130005_2_);
+	}
+	
+	@Override protected int func_130006_a(EntityLiving p_130006_1_, int p_130006_2_, float p_130006_3_)
+	{
+		return func_82429_a((EntityZombie) p_130006_1_, p_130006_2_, p_130006_3_);
 	}
 	
 	@Override protected void func_82421_b()
@@ -69,13 +97,13 @@
 	protected void func_82428_a(EntityZombie par1EntityZombie, float par2)
 	{
 		func_82427_a(par1EntityZombie);
-		super.renderEquippedItems(par1EntityZombie, par2);
+		super.func_130005_c(par1EntityZombie, par2);
 	}
 	
 	protected int func_82429_a(EntityZombie par1EntityZombie, int par2, float par3)
 	{
 		func_82427_a(par1EntityZombie);
-		return super.shouldRenderPass(par1EntityZombie, par2, par3);
+		return super.func_130006_a(par1EntityZombie, par2, par3);
 	}
 	
 	protected void func_82430_a(EntityZombie par1EntityZombie, float par2, float par3, float par4)
@@ -87,17 +115,22 @@
 		super.rotateCorpse(par1EntityZombie, par2, par3, par4);
 	}
 	
-	@Override protected void renderEquippedItems(EntityLiving par1EntityLiving, float par2)
+	@Override protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
 	{
 		func_82428_a((EntityZombie) par1EntityLiving, par2);
 	}
 	
-	@Override protected void rotateCorpse(EntityLiving par1EntityLiving, float par2, float par3, float par4)
+	@Override public void renderPlayer(EntityLivingBase par1EntityPlayer, double par2, double par4, double par6, float par8, float par9)
+	{
+		func_82426_a((EntityZombie) par1EntityPlayer, par2, par4, par6, par8, par9);
+	}
+	
+	@Override protected void rotateCorpse(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
 	{
 		func_82430_a((EntityZombie) par1EntityLiving, par2, par3, par4);
 	}
 	
-	@Override protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+	@Override protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
 	{
 		return func_82429_a((EntityZombie) par1EntityLiving, par2, par3);
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/RendererLivingEntity.java b/RMCClient/minecraft/net/minecraft/src/RendererLivingEntity.java
new file mode 100644
index 0000000..87c9e4f
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/RendererLivingEntity.java
@@ -0,0 +1,470 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+import net.minecraft.client.Minecraft;
+
+import org.lwjgl.opengl.GL11;
+import org.lwjgl.opengl.GL12;
+
+public abstract class RendererLivingEntity extends Render
+{
+	private static final ResourceLocation field_110814_a = new ResourceLocation("textures/misc/enchanted_item_glint.png");
+	protected ModelBase mainModel;
+	protected ModelBase renderPassModel;
+	
+	public RendererLivingEntity(ModelBase p_i1261_1_, float p_i1261_2_)
+	{
+		mainModel = p_i1261_1_;
+		shadowSize = p_i1261_2_;
+	}
+	
+	@Override public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
+	{
+		func_130000_a((EntityLivingBase) par1Entity, par2, par4, par6, par8, par9);
+	}
+	
+	protected boolean func_110813_b(EntityLivingBase p_110813_1_)
+	{
+		return Minecraft.isGuiEnabled() && p_110813_1_ != renderManager.livingPlayer && !p_110813_1_.func_98034_c(Minecraft.getMinecraft().thePlayer) && p_110813_1_.riddenByEntity == null;
+	}
+	
+	public void func_130000_a(EntityLivingBase p_130000_1_, double p_130000_2_, double p_130000_4_, double p_130000_6_, float p_130000_8_, float p_130000_9_)
+	{
+		GL11.glPushMatrix();
+		GL11.glDisable(GL11.GL_CULL_FACE);
+		mainModel.onGround = renderSwingProgress(p_130000_1_, p_130000_9_);
+		if(renderPassModel != null)
+		{
+			renderPassModel.onGround = mainModel.onGround;
+		}
+		mainModel.isRiding = p_130000_1_.isRiding();
+		if(renderPassModel != null)
+		{
+			renderPassModel.isRiding = mainModel.isRiding;
+		}
+		mainModel.isChild = p_130000_1_.isChild();
+		if(renderPassModel != null)
+		{
+			renderPassModel.isChild = mainModel.isChild;
+		}
+		try
+		{
+			float var10 = interpolateRotation(p_130000_1_.prevRenderYawOffset, p_130000_1_.renderYawOffset, p_130000_9_);
+			float var11 = interpolateRotation(p_130000_1_.prevRotationYawHead, p_130000_1_.rotationYawHead, p_130000_9_);
+			float var13;
+			if(p_130000_1_.isRiding() && p_130000_1_.ridingEntity instanceof EntityLivingBase)
+			{
+				EntityLivingBase var12 = (EntityLivingBase) p_130000_1_.ridingEntity;
+				var10 = interpolateRotation(var12.prevRenderYawOffset, var12.renderYawOffset, p_130000_9_);
+				var13 = MathHelper.wrapAngleTo180_float(var11 - var10);
+				if(var13 < -85.0F)
+				{
+					var13 = -85.0F;
+				}
+				if(var13 >= 85.0F)
+				{
+					var13 = 85.0F;
+				}
+				var10 = var11 - var13;
+				if(var13 * var13 > 2500.0F)
+				{
+					var10 += var13 * 0.2F;
+				}
+			}
+			float var26 = p_130000_1_.prevRotationPitch + (p_130000_1_.rotationPitch - p_130000_1_.prevRotationPitch) * p_130000_9_;
+			renderLivingAt(p_130000_1_, p_130000_2_, p_130000_4_, p_130000_6_);
+			var13 = handleRotationFloat(p_130000_1_, p_130000_9_);
+			rotateCorpse(p_130000_1_, var13, var10, p_130000_9_);
+			float var14 = 0.0625F;
+			GL11.glEnable(GL12.GL_RESCALE_NORMAL);
+			GL11.glScalef(-1.0F, -1.0F, 1.0F);
+			preRenderCallback(p_130000_1_, p_130000_9_);
+			GL11.glTranslatef(0.0F, -24.0F * var14 - 0.0078125F, 0.0F);
+			float var15 = p_130000_1_.prevLimbYaw + (p_130000_1_.limbYaw - p_130000_1_.prevLimbYaw) * p_130000_9_;
+			float var16 = p_130000_1_.limbSwing - p_130000_1_.limbYaw * (1.0F - p_130000_9_);
+			if(p_130000_1_.isChild())
+			{
+				var16 *= 3.0F;
+			}
+			if(var15 > 1.0F)
+			{
+				var15 = 1.0F;
+			}
+			GL11.glEnable(GL11.GL_ALPHA_TEST);
+			mainModel.setLivingAnimations(p_130000_1_, var16, var15, p_130000_9_);
+			renderModel(p_130000_1_, var16, var15, var13, var11 - var10, var26, var14);
+			float var19;
+			int var18;
+			float var20;
+			float var22;
+			for(int var17 = 0; var17 < 4; ++var17)
+			{
+				var18 = shouldRenderPass(p_130000_1_, var17, p_130000_9_);
+				if(var18 > 0)
+				{
+					renderPassModel.setLivingAnimations(p_130000_1_, var16, var15, p_130000_9_);
+					renderPassModel.render(p_130000_1_, var16, var15, var13, var11 - var10, var26, var14);
+					if((var18 & 240) == 16)
+					{
+						func_82408_c(p_130000_1_, var17, p_130000_9_);
+						renderPassModel.render(p_130000_1_, var16, var15, var13, var11 - var10, var26, var14);
+					}
+					if((var18 & 15) == 15)
+					{
+						var19 = p_130000_1_.ticksExisted + p_130000_9_;
+						func_110776_a(field_110814_a);
+						GL11.glEnable(GL11.GL_BLEND);
+						var20 = 0.5F;
+						GL11.glColor4f(var20, var20, var20, 1.0F);
+						GL11.glDepthFunc(GL11.GL_EQUAL);
+						GL11.glDepthMask(false);
+						for(int var21 = 0; var21 < 2; ++var21)
+						{
+							GL11.glDisable(GL11.GL_LIGHTING);
+							var22 = 0.76F;
+							GL11.glColor4f(0.5F * var22, 0.25F * var22, 0.8F * var22, 1.0F);
+							GL11.glBlendFunc(GL11.GL_SRC_COLOR, GL11.GL_ONE);
+							GL11.glMatrixMode(GL11.GL_TEXTURE);
+							GL11.glLoadIdentity();
+							float var23 = var19 * (0.001F + var21 * 0.003F) * 20.0F;
+							float var24 = 0.33333334F;
+							GL11.glScalef(var24, var24, var24);
+							GL11.glRotatef(30.0F - var21 * 60.0F, 0.0F, 0.0F, 1.0F);
+							GL11.glTranslatef(0.0F, var23, 0.0F);
+							GL11.glMatrixMode(GL11.GL_MODELVIEW);
+							renderPassModel.render(p_130000_1_, var16, var15, var13, var11 - var10, var26, var14);
+						}
+						GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+						GL11.glMatrixMode(GL11.GL_TEXTURE);
+						GL11.glDepthMask(true);
+						GL11.glLoadIdentity();
+						GL11.glMatrixMode(GL11.GL_MODELVIEW);
+						GL11.glEnable(GL11.GL_LIGHTING);
+						GL11.glDisable(GL11.GL_BLEND);
+						GL11.glDepthFunc(GL11.GL_LEQUAL);
+					}
+					GL11.glDisable(GL11.GL_BLEND);
+					GL11.glEnable(GL11.GL_ALPHA_TEST);
+				}
+			}
+			GL11.glDepthMask(true);
+			renderEquippedItems(p_130000_1_, p_130000_9_);
+			float var27 = p_130000_1_.getBrightness(p_130000_9_);
+			var18 = getColorMultiplier(p_130000_1_, var27, p_130000_9_);
+			OpenGlHelper.setActiveTexture(OpenGlHelper.lightmapTexUnit);
+			GL11.glDisable(GL11.GL_TEXTURE_2D);
+			OpenGlHelper.setActiveTexture(OpenGlHelper.defaultTexUnit);
+			if((var18 >> 24 & 255) > 0 || p_130000_1_.hurtTime > 0 || p_130000_1_.deathTime > 0)
+			{
+				GL11.glDisable(GL11.GL_TEXTURE_2D);
+				GL11.glDisable(GL11.GL_ALPHA_TEST);
+				GL11.glEnable(GL11.GL_BLEND);
+				GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+				GL11.glDepthFunc(GL11.GL_EQUAL);
+				if(p_130000_1_.hurtTime > 0 || p_130000_1_.deathTime > 0)
+				{
+					GL11.glColor4f(var27, 0.0F, 0.0F, 0.4F);
+					mainModel.render(p_130000_1_, var16, var15, var13, var11 - var10, var26, var14);
+					for(int var28 = 0; var28 < 4; ++var28)
+					{
+						if(inheritRenderPass(p_130000_1_, var28, p_130000_9_) >= 0)
+						{
+							GL11.glColor4f(var27, 0.0F, 0.0F, 0.4F);
+							renderPassModel.render(p_130000_1_, var16, var15, var13, var11 - var10, var26, var14);
+						}
+					}
+				}
+				if((var18 >> 24 & 255) > 0)
+				{
+					var19 = (var18 >> 16 & 255) / 255.0F;
+					var20 = (var18 >> 8 & 255) / 255.0F;
+					float var30 = (var18 & 255) / 255.0F;
+					var22 = (var18 >> 24 & 255) / 255.0F;
+					GL11.glColor4f(var19, var20, var30, var22);
+					mainModel.render(p_130000_1_, var16, var15, var13, var11 - var10, var26, var14);
+					for(int var29 = 0; var29 < 4; ++var29)
+					{
+						if(inheritRenderPass(p_130000_1_, var29, p_130000_9_) >= 0)
+						{
+							GL11.glColor4f(var19, var20, var30, var22);
+							renderPassModel.render(p_130000_1_, var16, var15, var13, var11 - var10, var26, var14);
+						}
+					}
+				}
+				GL11.glDepthFunc(GL11.GL_LEQUAL);
+				GL11.glDisable(GL11.GL_BLEND);
+				GL11.glEnable(GL11.GL_ALPHA_TEST);
+				GL11.glEnable(GL11.GL_TEXTURE_2D);
+			}
+			GL11.glDisable(GL12.GL_RESCALE_NORMAL);
+		} catch(Exception var25)
+		{
+			var25.printStackTrace();
+		}
+		OpenGlHelper.setActiveTexture(OpenGlHelper.lightmapTexUnit);
+		GL11.glEnable(GL11.GL_TEXTURE_2D);
+		OpenGlHelper.setActiveTexture(OpenGlHelper.defaultTexUnit);
+		GL11.glEnable(GL11.GL_CULL_FACE);
+		GL11.glPopMatrix();
+		passSpecialRender(p_130000_1_, p_130000_2_, p_130000_4_, p_130000_6_);
+	}
+	
+	protected void func_82408_c(EntityLivingBase par1EntityLiving, int par2, float par3)
+	{
+	}
+	
+	protected void func_96449_a(EntityLivingBase par1EntityLiving, double par2, double par4, double par6, String par8Str, float par9, double par10)
+	{
+		if(par1EntityLiving.isPlayerSleeping())
+		{
+			renderLivingLabel(par1EntityLiving, par8Str, par2, par4 - 1.5D, par6, 64);
+		} else
+		{
+			renderLivingLabel(par1EntityLiving, par8Str, par2, par4, par6, 64);
+		}
+	}
+	
+	protected int getColorMultiplier(EntityLivingBase par1EntityLiving, float par2, float par3)
+	{
+		return 0;
+	}
+	
+	protected float getDeathMaxRotation(EntityLivingBase par1EntityLiving)
+	{
+		return 90.0F;
+	}
+	
+	protected float handleRotationFloat(EntityLivingBase par1EntityLiving, float par2)
+	{
+		return par1EntityLiving.ticksExisted + par2;
+	}
+	
+	protected int inheritRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
+	{
+		return shouldRenderPass(par1EntityLiving, par2, par3);
+	}
+	
+	private float interpolateRotation(float par1, float par2, float par3)
+	{
+		float var4;
+		for(var4 = par2 - par1; var4 < -180.0F; var4 += 360.0F)
+		{
+			;
+		}
+		while(var4 >= 180.0F)
+		{
+			var4 -= 360.0F;
+		}
+		return par1 + par3 * var4;
+	}
+	
+	protected void passSpecialRender(EntityLivingBase par1EntityLiving, double par2, double par4, double par6)
+	{
+		if(func_110813_b(par1EntityLiving))
+		{
+			float var8 = 1.6F;
+			float var9 = 0.016666668F * var8;
+			double var10 = par1EntityLiving.getDistanceSqToEntity(renderManager.livingPlayer);
+			float var12 = par1EntityLiving.isSneaking() ? 32.0F : 64.0F;
+			if(var10 < var12 * var12)
+			{
+				String var13 = par1EntityLiving.getTranslatedEntityName();
+				if(par1EntityLiving.isSneaking())
+				{
+					FontRenderer var14 = getFontRendererFromRenderManager();
+					GL11.glPushMatrix();
+					GL11.glTranslatef((float) par2 + 0.0F, (float) par4 + par1EntityLiving.height + 0.5F, (float) par6);
+					GL11.glNormal3f(0.0F, 1.0F, 0.0F);
+					GL11.glRotatef(-renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
+					GL11.glRotatef(renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
+					GL11.glScalef(-var9, -var9, var9);
+					GL11.glDisable(GL11.GL_LIGHTING);
+					GL11.glTranslatef(0.0F, 0.25F / var9, 0.0F);
+					GL11.glDepthMask(false);
+					GL11.glEnable(GL11.GL_BLEND);
+					GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+					Tessellator var15 = Tessellator.instance;
+					GL11.glDisable(GL11.GL_TEXTURE_2D);
+					var15.startDrawingQuads();
+					int var16 = var14.getStringWidth(var13) / 2;
+					var15.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
+					var15.addVertex(-var16 - 1, -1.0D, 0.0D);
+					var15.addVertex(-var16 - 1, 8.0D, 0.0D);
+					var15.addVertex(var16 + 1, 8.0D, 0.0D);
+					var15.addVertex(var16 + 1, -1.0D, 0.0D);
+					var15.draw();
+					GL11.glEnable(GL11.GL_TEXTURE_2D);
+					GL11.glDepthMask(true);
+					var14.drawString(var13, -var14.getStringWidth(var13) / 2, 0, 553648127);
+					GL11.glEnable(GL11.GL_LIGHTING);
+					GL11.glDisable(GL11.GL_BLEND);
+					GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+					GL11.glPopMatrix();
+				} else
+				{
+					func_96449_a(par1EntityLiving, par2, par4, par6, var13, var9, var10);
+				}
+			}
+		}
+	}
+	
+	protected void preRenderCallback(EntityLivingBase par1EntityLiving, float par2)
+	{
+	}
+	
+	protected void renderArrowsStuckInEntity(EntityLivingBase par1EntityLiving, float par2)
+	{
+		int var3 = par1EntityLiving.getArrowCountInEntity();
+		if(var3 > 0)
+		{
+			EntityArrow var4 = new EntityArrow(par1EntityLiving.worldObj, par1EntityLiving.posX, par1EntityLiving.posY, par1EntityLiving.posZ);
+			Random var5 = new Random(par1EntityLiving.entityId);
+			RenderHelper.disableStandardItemLighting();
+			for(int var6 = 0; var6 < var3; ++var6)
+			{
+				GL11.glPushMatrix();
+				ModelRenderer var7 = mainModel.getRandomModelBox(var5);
+				ModelBox var8 = (ModelBox) var7.cubeList.get(var5.nextInt(var7.cubeList.size()));
+				var7.postRender(0.0625F);
+				float var9 = var5.nextFloat();
+				float var10 = var5.nextFloat();
+				float var11 = var5.nextFloat();
+				float var12 = (var8.posX1 + (var8.posX2 - var8.posX1) * var9) / 16.0F;
+				float var13 = (var8.posY1 + (var8.posY2 - var8.posY1) * var10) / 16.0F;
+				float var14 = (var8.posZ1 + (var8.posZ2 - var8.posZ1) * var11) / 16.0F;
+				GL11.glTranslatef(var12, var13, var14);
+				var9 = var9 * 2.0F - 1.0F;
+				var10 = var10 * 2.0F - 1.0F;
+				var11 = var11 * 2.0F - 1.0F;
+				var9 *= -1.0F;
+				var10 *= -1.0F;
+				var11 *= -1.0F;
+				float var15 = MathHelper.sqrt_float(var9 * var9 + var11 * var11);
+				var4.prevRotationYaw = var4.rotationYaw = (float) (Math.atan2(var9, var11) * 180.0D / Math.PI);
+				var4.prevRotationPitch = var4.rotationPitch = (float) (Math.atan2(var10, var15) * 180.0D / Math.PI);
+				double var16 = 0.0D;
+				double var18 = 0.0D;
+				double var20 = 0.0D;
+				float var22 = 0.0F;
+				renderManager.renderEntityWithPosYaw(var4, var16, var18, var20, var22, par2);
+				GL11.glPopMatrix();
+			}
+			RenderHelper.enableStandardItemLighting();
+		}
+	}
+	
+	protected void renderEquippedItems(EntityLivingBase par1EntityLiving, float par2)
+	{
+	}
+	
+	protected void renderLivingAt(EntityLivingBase par1EntityLiving, double par2, double par4, double par6)
+	{
+		GL11.glTranslatef((float) par2, (float) par4, (float) par6);
+	}
+	
+	protected void renderLivingLabel(EntityLivingBase par1EntityLiving, String par2Str, double par3, double par5, double par7, int par9)
+	{
+		double var10 = par1EntityLiving.getDistanceSqToEntity(renderManager.livingPlayer);
+		if(var10 <= par9 * par9)
+		{
+			FontRenderer var12 = getFontRendererFromRenderManager();
+			float var13 = 1.6F;
+			float var14 = 0.016666668F * var13;
+			GL11.glPushMatrix();
+			GL11.glTranslatef((float) par3 + 0.0F, (float) par5 + par1EntityLiving.height + 0.5F, (float) par7);
+			GL11.glNormal3f(0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(-renderManager.playerViewY, 0.0F, 1.0F, 0.0F);
+			GL11.glRotatef(renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
+			GL11.glScalef(-var14, -var14, var14);
+			GL11.glDisable(GL11.GL_LIGHTING);
+			GL11.glDepthMask(false);
+			GL11.glDisable(GL11.GL_DEPTH_TEST);
+			GL11.glEnable(GL11.GL_BLEND);
+			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+			Tessellator var15 = Tessellator.instance;
+			byte var16 = 0;
+			if(par2Str.equals("deadmau5"))
+			{
+				var16 = -10;
+			}
+			GL11.glDisable(GL11.GL_TEXTURE_2D);
+			var15.startDrawingQuads();
+			int var17 = var12.getStringWidth(par2Str) / 2;
+			var15.setColorRGBA_F(0.0F, 0.0F, 0.0F, 0.25F);
+			var15.addVertex(-var17 - 1, -1 + var16, 0.0D);
+			var15.addVertex(-var17 - 1, 8 + var16, 0.0D);
+			var15.addVertex(var17 + 1, 8 + var16, 0.0D);
+			var15.addVertex(var17 + 1, -1 + var16, 0.0D);
+			var15.draw();
+			GL11.glEnable(GL11.GL_TEXTURE_2D);
+			var12.drawString(par2Str, -var12.getStringWidth(par2Str) / 2, var16, 553648127);
+			GL11.glEnable(GL11.GL_DEPTH_TEST);
+			GL11.glDepthMask(true);
+			var12.drawString(par2Str, -var12.getStringWidth(par2Str) / 2, var16, -1);
+			GL11.glEnable(GL11.GL_LIGHTING);
+			GL11.glDisable(GL11.GL_BLEND);
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+			GL11.glPopMatrix();
+		}
+	}
+	
+	protected void renderModel(EntityLivingBase par1EntityLiving, float par2, float par3, float par4, float par5, float par6, float par7)
+	{
+		func_110777_b(par1EntityLiving);
+		if(!par1EntityLiving.isInvisible())
+		{
+			mainModel.render(par1EntityLiving, par2, par3, par4, par5, par6, par7);
+		} else if(!par1EntityLiving.func_98034_c(Minecraft.getMinecraft().thePlayer))
+		{
+			GL11.glPushMatrix();
+			GL11.glColor4f(1.0F, 1.0F, 1.0F, 0.15F);
+			GL11.glDepthMask(false);
+			GL11.glEnable(GL11.GL_BLEND);
+			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
+			GL11.glAlphaFunc(GL11.GL_GREATER, 0.003921569F);
+			mainModel.render(par1EntityLiving, par2, par3, par4, par5, par6, par7);
+			GL11.glDisable(GL11.GL_BLEND);
+			GL11.glAlphaFunc(GL11.GL_GREATER, 0.1F);
+			GL11.glPopMatrix();
+			GL11.glDepthMask(true);
+		} else
+		{
+			mainModel.setRotationAngles(par2, par3, par4, par5, par6, par7, par1EntityLiving);
+		}
+	}
+	
+	protected float renderSwingProgress(EntityLivingBase par1EntityLiving, float par2)
+	{
+		return par1EntityLiving.getSwingProgress(par2);
+	}
+	
+	protected void rotateCorpse(EntityLivingBase par1EntityLiving, float par2, float par3, float par4)
+	{
+		GL11.glRotatef(180.0F - par3, 0.0F, 1.0F, 0.0F);
+		if(par1EntityLiving.deathTime > 0)
+		{
+			float var5 = (par1EntityLiving.deathTime + par4 - 1.0F) / 20.0F * 1.6F;
+			var5 = MathHelper.sqrt_float(var5);
+			if(var5 > 1.0F)
+			{
+				var5 = 1.0F;
+			}
+			GL11.glRotatef(var5 * getDeathMaxRotation(par1EntityLiving), 0.0F, 0.0F, 1.0F);
+		} else if((par1EntityLiving.getEntityName().equals("Dinnerbone") || par1EntityLiving.getEntityName().equals("Grumm")) && (!(par1EntityLiving instanceof EntityPlayer) || !((EntityPlayer) par1EntityLiving).getHideCape()))
+		{
+			GL11.glTranslatef(0.0F, par1EntityLiving.height + 0.1F, 0.0F);
+			GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
+		}
+	}
+	
+	public void setRenderPassModel(ModelBase par1ModelBase)
+	{
+		renderPassModel = par1ModelBase;
+	}
+	
+	protected int shouldRenderPass(EntityLivingBase par1EntityLiving, int par2, float par3)
+	{
+		return -1;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ReportedException.java b/RMCClient/minecraft/net/minecraft/src/ReportedException.java
index b33001c..08b2c5e 100644
--- a/RMCClient/minecraft/net/minecraft/src/ReportedException.java
+++ b/RMCClient/minecraft/net/minecraft/src/ReportedException.java
@@ -5,9 +5,9 @@
 	private static final long serialVersionUID = 1L;
 	private final CrashReport theReportedExceptionCrashReport;
 	
-	public ReportedException(CrashReport par1CrashReport)
+	public ReportedException(CrashReport p_i1356_1_)
 	{
-		theReportedExceptionCrashReport = par1CrashReport;
+		theReportedExceptionCrashReport = p_i1356_1_;
 	}
 	
 	@Override public Throwable getCause()
diff --git a/RMCClient/minecraft/net/minecraft/src/Request.java b/RMCClient/minecraft/net/minecraft/src/Request.java
index d67be7a..5e569ac 100644
--- a/RMCClient/minecraft/net/minecraft/src/Request.java
+++ b/RMCClient/minecraft/net/minecraft/src/Request.java
@@ -5,23 +5,25 @@
 import java.net.HttpURLConnection;
 import java.net.URL;
 
+import net.minecraft.client.Minecraft;
+
 public abstract class Request
 {
 	protected HttpURLConnection field_96367_a;
 	private boolean field_96366_c;
 	protected String field_96365_b;
 	
-	public Request(String par1Str, int par2, int par3)
+	public Request(String p_i1144_1_, int p_i1144_2_, int p_i1144_3_)
 	{
 		try
 		{
-			field_96365_b = par1Str;
-			field_96367_a = (HttpURLConnection) new URL(par1Str).openConnection();
-			field_96367_a.setConnectTimeout(par2);
-			field_96367_a.setReadTimeout(par3);
+			field_96365_b = p_i1144_1_;
+			field_96367_a = (HttpURLConnection) new URL(p_i1144_1_).openConnection(Minecraft.getMinecraft().func_110437_J());
+			field_96367_a.setConnectTimeout(p_i1144_2_);
+			field_96367_a.setReadTimeout(p_i1144_3_);
 		} catch(Exception var5)
 		{
-			throw new ExceptionMcoHttp("Failed URL: " + par1Str, var5);
+			throw new ExceptionMcoHttp("Failed URL: " + p_i1144_1_, var5);
 		}
 	}
 	
@@ -37,9 +39,33 @@
 		}
 	}
 	
+	public int func_111221_b()
+	{
+		String var1 = field_96367_a.getHeaderField("Retry-After");
+		try
+		{
+			return Integer.valueOf(var1).intValue();
+		} catch(Exception var3)
+		{
+			return 5;
+		}
+	}
+	
+	public int func_130110_g()
+	{
+		String var1 = field_96367_a.getHeaderField("Error-Code");
+		try
+		{
+			return Integer.valueOf(var1).intValue();
+		} catch(Exception var3)
+		{
+			return -1;
+		}
+	}
+	
 	private String func_96352_a(InputStream par1InputStream) throws IOException
 	{
-		if(par1InputStream == null) throw new IllegalArgumentException("input stream cannot be null");
+		if(par1InputStream == null) throw new IOException("No response (null)");
 		else
 		{
 			StringBuilder var2 = new StringBuilder();
@@ -124,17 +150,6 @@
 		{
 			throw new ExceptionMcoHttp("Failed URL: " + field_96365_b, var2);
 		}
-	}
-	
-	public McoOption func_98175_b()
-	{
-		String var1 = field_96367_a.getHeaderField("Set-Cookie");
-		if(var1 != null)
-		{
-			String var2 = var1.substring(0, var1.indexOf("="));
-			String var3 = var1.substring(var1.indexOf("=") + 1, var1.indexOf(";"));
-			return McoOption.func_98153_a(McoPair.func_98157_a(var2, var3));
-		} else return McoOption.func_98154_b();
 	}
 	
 	public static Request func_104064_a(String par0Str, String par1Str, int par2, int par3)
diff --git a/RMCClient/minecraft/net/minecraft/src/RequestDelete.java b/RMCClient/minecraft/net/minecraft/src/RequestDelete.java
index 65b996d..9e8e8c8 100644
--- a/RMCClient/minecraft/net/minecraft/src/RequestDelete.java
+++ b/RMCClient/minecraft/net/minecraft/src/RequestDelete.java
@@ -2,9 +2,9 @@
 
 public class RequestDelete extends Request
 {
-	public RequestDelete(String par1Str, int par2, int par3)
+	public RequestDelete(String p_i1140_1_, int p_i1140_2_, int p_i1140_3_)
 	{
-		super(par1Str, par2, par3);
+		super(p_i1140_1_, p_i1140_2_, p_i1140_3_);
 	}
 	
 	@Override public Request func_96359_e()
diff --git a/RMCClient/minecraft/net/minecraft/src/RequestGet.java b/RMCClient/minecraft/net/minecraft/src/RequestGet.java
index d0ce957..28ba8f5 100644
--- a/RMCClient/minecraft/net/minecraft/src/RequestGet.java
+++ b/RMCClient/minecraft/net/minecraft/src/RequestGet.java
@@ -2,9 +2,9 @@
 
 public class RequestGet extends Request
 {
-	public RequestGet(String par1Str, int par2, int par3)
+	public RequestGet(String p_i1141_1_, int p_i1141_2_, int p_i1141_3_)
 	{
-		super(par1Str, par2, par3);
+		super(p_i1141_1_, p_i1141_2_, p_i1141_3_);
 	}
 	
 	@Override public Request func_96359_e()
diff --git a/RMCClient/minecraft/net/minecraft/src/RequestPost.java b/RMCClient/minecraft/net/minecraft/src/RequestPost.java
index 59cd788..4e0dd7a 100644
--- a/RMCClient/minecraft/net/minecraft/src/RequestPost.java
+++ b/RMCClient/minecraft/net/minecraft/src/RequestPost.java
@@ -6,10 +6,10 @@
 {
 	private byte[] field_96373_c;
 	
-	public RequestPost(String par1Str, byte[] par2ArrayOfByte, int par3, int par4)
+	public RequestPost(String p_i1142_1_, byte[] p_i1142_2_, int p_i1142_3_, int p_i1142_4_)
 	{
-		super(par1Str, par3, par4);
-		field_96373_c = par2ArrayOfByte;
+		super(p_i1142_1_, p_i1142_3_, p_i1142_4_);
+		field_96373_c = p_i1142_2_;
 	}
 	
 	@Override public Request func_96359_e()
diff --git a/RMCClient/minecraft/net/minecraft/src/RequestPut.java b/RMCClient/minecraft/net/minecraft/src/RequestPut.java
index 1df780e..33bab7d 100644
--- a/RMCClient/minecraft/net/minecraft/src/RequestPut.java
+++ b/RMCClient/minecraft/net/minecraft/src/RequestPut.java
@@ -6,10 +6,10 @@
 {
 	private byte[] field_96369_c;
 	
-	public RequestPut(String par1Str, byte[] par2ArrayOfByte, int par3, int par4)
+	public RequestPut(String p_i1143_1_, byte[] p_i1143_2_, int p_i1143_3_, int p_i1143_4_)
 	{
-		super(par1Str, par3, par4);
-		field_96369_c = par2ArrayOfByte;
+		super(p_i1143_1_, p_i1143_3_, p_i1143_4_);
+		field_96369_c = p_i1143_2_;
 	}
 	
 	@Override public Request func_96359_e()
diff --git a/RMCClient/minecraft/net/minecraft/src/Resource.java b/RMCClient/minecraft/net/minecraft/src/Resource.java
new file mode 100644
index 0000000..ed9c219
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Resource.java
@@ -0,0 +1,12 @@
+package net.minecraft.src;
+
+import java.io.InputStream;
+
+public interface Resource
+{
+	MetadataSection func_110526_a(String var1);
+	
+	InputStream func_110527_b();
+	
+	boolean func_110528_c();
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ResourceLocation.java b/RMCClient/minecraft/net/minecraft/src/ResourceLocation.java
new file mode 100644
index 0000000..f070b17
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ResourceLocation.java
@@ -0,0 +1,69 @@
+package net.minecraft.src;
+
+
+public class ResourceLocation
+{
+	private final String field_110626_a;
+	private final String field_110625_b;
+	
+	public ResourceLocation(String p_i1293_1_)
+	{
+		String var2 = "minecraft";
+		String var3 = p_i1293_1_;
+		int var4 = p_i1293_1_.indexOf(58);
+		if(var4 >= 0)
+		{
+			var3 = p_i1293_1_.substring(var4 + 1, p_i1293_1_.length());
+			if(var4 > 1)
+			{
+				var2 = p_i1293_1_.substring(0, var4);
+			}
+		}
+		field_110626_a = var2.toLowerCase();
+		field_110625_b = var3;
+	}
+	
+	public ResourceLocation(String p_i1292_1_, String p_i1292_2_)
+	{
+		Validate.notNull(p_i1292_2_);
+		if(p_i1292_1_ != null && p_i1292_1_.length() != 0)
+		{
+			field_110626_a = p_i1292_1_;
+		} else
+		{
+			field_110626_a = "minecraft";
+		}
+		field_110625_b = p_i1292_2_;
+	}
+	
+	@Override public boolean equals(Object par1Obj)
+	{
+		if(this == par1Obj) return true;
+		else if(!(par1Obj instanceof ResourceLocation)) return false;
+		else
+		{
+			ResourceLocation var2 = (ResourceLocation) par1Obj;
+			return field_110626_a.equals(var2.field_110626_a) && field_110625_b.equals(var2.field_110625_b);
+		}
+	}
+	
+	public String func_110623_a()
+	{
+		return field_110625_b;
+	}
+	
+	public String func_110624_b()
+	{
+		return field_110626_a;
+	}
+	
+	@Override public int hashCode()
+	{
+		return 31 * field_110626_a.hashCode() + field_110625_b.hashCode();
+	}
+	
+	@Override public String toString()
+	{
+		return field_110626_a + ":" + field_110625_b;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ResourceManager.java b/RMCClient/minecraft/net/minecraft/src/ResourceManager.java
new file mode 100644
index 0000000..64df2bd
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ResourceManager.java
@@ -0,0 +1,14 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+import java.util.List;
+import java.util.Set;
+
+public interface ResourceManager
+{
+	Resource func_110536_a(ResourceLocation var1) throws IOException;
+	
+	Set func_135055_a();
+	
+	List func_135056_b(ResourceLocation var1) throws IOException;
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ResourceManagerReloadListener.java b/RMCClient/minecraft/net/minecraft/src/ResourceManagerReloadListener.java
new file mode 100644
index 0000000..30b0c38
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ResourceManagerReloadListener.java
@@ -0,0 +1,6 @@
+package net.minecraft.src;
+
+public interface ResourceManagerReloadListener
+{
+	void func_110549_a(ResourceManager var1);
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ResourcePack.java b/RMCClient/minecraft/net/minecraft/src/ResourcePack.java
new file mode 100644
index 0000000..509dc99
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ResourcePack.java
@@ -0,0 +1,21 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.Set;
+
+public interface ResourcePack
+{
+	BufferedImage func_110586_a() throws IOException;
+	
+	Set func_110587_b();
+	
+	boolean func_110589_b(ResourceLocation var1);
+	
+	InputStream func_110590_a(ResourceLocation var1) throws IOException;
+	
+	String func_130077_b();
+	
+	MetadataSection func_135058_a(MetadataSerializer var1, String var2) throws IOException;
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ResourcePackFileNotFoundException.java b/RMCClient/minecraft/net/minecraft/src/ResourcePackFileNotFoundException.java
new file mode 100644
index 0000000..b2d4c90
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ResourcePackFileNotFoundException.java
@@ -0,0 +1,14 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+
+public class ResourcePackFileNotFoundException extends FileNotFoundException
+{
+	private static final long serialVersionUID = 1L;
+	
+	public ResourcePackFileNotFoundException(File p_i1294_1_, String p_i1294_2_)
+	{
+		super(String.format("\'%s\' in ResourcePack \'%s\'", new Object[] { p_i1294_2_, p_i1294_1_ }));
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ResourcePackRepository.java b/RMCClient/minecraft/net/minecraft/src/ResourcePackRepository.java
new file mode 100644
index 0000000..14c81f1
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ResourcePackRepository.java
@@ -0,0 +1,110 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.io.FileFilter;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.Iterator;
+import java.util.List;
+
+public class ResourcePackRepository
+{
+	protected static final FileFilter field_110622_a = new ResourcePackRepositoryFilter();
+	private final File field_110618_d;
+	public final ResourcePack field_110620_b;
+	public final MetadataSerializer field_110621_c;
+	private List field_110619_e = Lists.newArrayList();
+	private List field_110617_f = Lists.newArrayList();
+	
+	public ResourcePackRepository(File p_i1297_1_, ResourcePack p_i1297_2_, MetadataSerializer p_i1297_3_, GameSettings p_i1297_4_)
+	{
+		field_110618_d = p_i1297_1_;
+		field_110620_b = p_i1297_2_;
+		field_110621_c = p_i1297_3_;
+		func_110616_f();
+		func_110611_a();
+		Iterator var5 = field_110619_e.iterator();
+		while(var5.hasNext())
+		{
+			ResourcePackRepositoryEntry var6 = (ResourcePackRepositoryEntry) var5.next();
+			if(var6.func_110515_d().equals(p_i1297_4_.skin))
+			{
+				field_110617_f.add(var6);
+			}
+		}
+	}
+	
+	public List func_110609_b()
+	{
+		return ImmutableList.copyOf(field_110619_e);
+	}
+	
+	public String func_110610_d()
+	{
+		return field_110617_f.isEmpty() ? "Default" : ((ResourcePackRepositoryEntry) field_110617_f.get(0)).func_110515_d();
+	}
+	
+	public void func_110611_a()
+	{
+		ArrayList var1 = Lists.newArrayList();
+		Iterator var2 = func_110614_g().iterator();
+		while(var2.hasNext())
+		{
+			File var3 = (File) var2.next();
+			ResourcePackRepositoryEntry var4 = new ResourcePackRepositoryEntry(this, var3, (ResourcePackRepositoryFilter) null);
+			if(!field_110619_e.contains(var4))
+			{
+				try
+				{
+					var4.func_110516_a();
+					var1.add(var4);
+				} catch(Exception var6)
+				{
+					var1.remove(var4);
+				}
+			} else
+			{
+				var1.add(field_110619_e.get(field_110619_e.indexOf(var4)));
+			}
+		}
+		field_110619_e.removeAll(var1);
+		var2 = field_110619_e.iterator();
+		while(var2.hasNext())
+		{
+			ResourcePackRepositoryEntry var7 = (ResourcePackRepositoryEntry) var2.next();
+			var7.func_110517_b();
+		}
+		field_110619_e = var1;
+	}
+	
+	public File func_110612_e()
+	{
+		return field_110618_d;
+	}
+	
+	public List func_110613_c()
+	{
+		return ImmutableList.copyOf(field_110617_f);
+	}
+	
+	private List func_110614_g()
+	{
+		return field_110618_d.isDirectory() ? Arrays.asList(field_110618_d.listFiles(field_110622_a)) : Collections.emptyList();
+	}
+	
+	public void func_110615_a(ResourcePackRepositoryEntry ... p_110615_1_)
+	{
+		field_110617_f.clear();
+		Collections.addAll(field_110617_f, p_110615_1_);
+	}
+	
+	private void func_110616_f()
+	{
+		if(!field_110618_d.isDirectory())
+		{
+			field_110618_d.delete();
+			field_110618_d.mkdirs();
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ResourcePackRepositoryEntry.java b/RMCClient/minecraft/net/minecraft/src/ResourcePackRepositoryEntry.java
new file mode 100644
index 0000000..a79312c
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ResourcePackRepositoryEntry.java
@@ -0,0 +1,92 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.Closeable;
+import java.io.File;
+import java.io.IOException;
+
+public class ResourcePackRepositoryEntry
+{
+	private final File field_110523_b;
+	private ResourcePack field_110524_c;
+	private PackMetadataSection field_110521_d;
+	private BufferedImage field_110522_e;
+	private ResourceLocation field_110520_f;
+	final ResourcePackRepository field_110525_a;
+	
+	private ResourcePackRepositoryEntry(ResourcePackRepository p_i1295_1_, File p_i1295_2_)
+	{
+		field_110525_a = p_i1295_1_;
+		field_110523_b = p_i1295_2_;
+	}
+	
+	ResourcePackRepositoryEntry(ResourcePackRepository p_i1296_1_, File p_i1296_2_, ResourcePackRepositoryFilter p_i1296_3_)
+	{
+		this(p_i1296_1_, p_i1296_2_);
+	}
+	
+	@Override public boolean equals(Object par1Obj)
+	{
+		return this == par1Obj ? true : par1Obj instanceof ResourcePackRepositoryEntry ? toString().equals(par1Obj.toString()) : false;
+	}
+	
+	public ResourcePack func_110514_c()
+	{
+		return field_110524_c;
+	}
+	
+	public String func_110515_d()
+	{
+		return field_110524_c.func_130077_b();
+	}
+	
+	public void func_110516_a() throws IOException
+	{
+		field_110524_c = field_110523_b.isDirectory() ? new FolderResourcePack(field_110523_b) : new FileResourcePack(field_110523_b);
+		field_110521_d = (PackMetadataSection) field_110524_c.func_135058_a(field_110525_a.field_110621_c, "pack");
+		try
+		{
+			field_110522_e = field_110524_c.func_110586_a();
+		} catch(IOException var2)
+		{
+			;
+		}
+		if(field_110522_e == null)
+		{
+			field_110522_e = field_110525_a.field_110620_b.func_110586_a();
+		}
+		func_110517_b();
+	}
+	
+	public void func_110517_b()
+	{
+		if(field_110524_c instanceof Closeable)
+		{
+			IOUtils.closeQuietly((Closeable) field_110524_c);
+		}
+	}
+	
+	public void func_110518_a(TextureManager p_110518_1_)
+	{
+		if(field_110520_f == null)
+		{
+			field_110520_f = p_110518_1_.func_110578_a("texturepackicon", new DynamicTexture(field_110522_e));
+		}
+		p_110518_1_.func_110577_a(field_110520_f);
+	}
+	
+	public String func_110519_e()
+	{
+		return field_110521_d == null ? EnumChatFormatting.RED + "Invalid pack.mcmeta (or missing \'pack\' section)" : field_110521_d.func_110461_a();
+	}
+	
+	@Override public int hashCode()
+	{
+		return toString().hashCode();
+	}
+	
+	@Override public String toString()
+	{
+		return String.format("%s:%s:%d", new Object[] { field_110523_b.getName(), field_110523_b.isDirectory() ? "folder" : "zip", Long.valueOf(field_110523_b.lastModified()) });
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ResourcePackRepositoryFilter.java b/RMCClient/minecraft/net/minecraft/src/ResourcePackRepositoryFilter.java
new file mode 100644
index 0000000..8e7a2ec
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ResourcePackRepositoryFilter.java
@@ -0,0 +1,14 @@
+package net.minecraft.src;
+
+import java.io.File;
+import java.io.FileFilter;
+
+final class ResourcePackRepositoryFilter implements FileFilter
+{
+	@Override public boolean accept(File par1File)
+	{
+		boolean var2 = par1File.isFile() && par1File.getName().endsWith(".zip");
+		boolean var3 = par1File.isDirectory() && new File(par1File, "pack.mcmeta").isFile();
+		return var2 || var3;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/RunnableTitleScreen.java b/RMCClient/minecraft/net/minecraft/src/RunnableTitleScreen.java
index 7e5abbd..14a896b 100644
--- a/RMCClient/minecraft/net/minecraft/src/RunnableTitleScreen.java
+++ b/RMCClient/minecraft/net/minecraft/src/RunnableTitleScreen.java
@@ -1,40 +1,51 @@
 package net.minecraft.src;
 
-import java.net.URL;
+import java.io.IOException;
 
-class RunnableTitleScreen implements Runnable
+class RunnableTitleScreen extends Thread
 {
 	final GuiMainMenu field_104058_d;
 	
-	RunnableTitleScreen(GuiMainMenu par1GuiMainMenu)
+	RunnableTitleScreen(GuiMainMenu p_i1331_1_)
 	{
-		field_104058_d = par1GuiMainMenu;
+		field_104058_d = p_i1331_1_;
 	}
 	
 	@Override public void run()
 	{
-		try
+		McoClient var1 = new McoClient(GuiMainMenu.func_110348_a(field_104058_d).func_110432_I());
+		boolean var2 = false;
+		for(int var3 = 0; var3 < 3; ++var3)
 		{
-			String var1 = HttpUtil.func_104145_a(new URL("http://assets.minecraft.net/1_6_has_been_released.flag"));
-			if(var1 != null && var1.length() > 0)
+			try
 			{
-				var1 = var1.trim();
-				synchronized(GuiMainMenu.func_104004_a(field_104058_d))
+				Boolean var4 = var1.func_96375_b();
+				if(var4.booleanValue())
 				{
-					GuiMainMenu.func_104005_a(field_104058_d, EnumChatFormatting.BOLD + "Notice!" + EnumChatFormatting.RESET + " Minecraft 1.6 is available for manual download.");
-					GuiMainMenu.func_104013_b(field_104058_d, var1);
-					GuiMainMenu.func_104006_a(field_104058_d, GuiMainMenu.func_104022_c(field_104058_d).getStringWidth(GuiMainMenu.func_104023_b(field_104058_d)));
-					GuiMainMenu.func_104014_b(field_104058_d, GuiMainMenu.func_104007_d(field_104058_d).getStringWidth(GuiMainMenu.field_96138_a));
-					int var3 = Math.max(GuiMainMenu.func_104016_e(field_104058_d), GuiMainMenu.func_104015_f(field_104058_d));
-					GuiMainMenu.func_104008_c(field_104058_d, (field_104058_d.width - var3) / 2);
-					GuiMainMenu.func_104009_d(field_104058_d, ((GuiButton) GuiMainMenu.func_104019_g(field_104058_d).get(0)).yPosition - 24);
-					GuiMainMenu.func_104011_e(field_104058_d, GuiMainMenu.func_104018_h(field_104058_d) + var3);
-					GuiMainMenu.func_104012_f(field_104058_d, GuiMainMenu.func_104020_i(field_104058_d) + 24);
+					GuiMainMenu.func_130021_b(field_104058_d);
 				}
+				GuiMainMenu.func_110349_a(var4.booleanValue());
+			} catch(ExceptionRetryCall var6)
+			{
+				var2 = true;
+			} catch(ExceptionMcoService var7)
+			{
+				GuiMainMenu.func_130018_c(field_104058_d).getLogAgent().logSevere(var7.toString());
+			} catch(IOException var8)
+			{
+				GuiMainMenu.func_130019_d(field_104058_d).getLogAgent().logWarning("Realms: could not parse response");
 			}
-		} catch(Throwable var6)
-		{
-			var6.printStackTrace();
+			if(!var2)
+			{
+				break;
+			}
+			try
+			{
+				Thread.sleep(10000L);
+			} catch(InterruptedException var5)
+			{
+				Thread.currentThread().interrupt();
+			}
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/SaveFormatComparator.java b/RMCClient/minecraft/net/minecraft/src/SaveFormatComparator.java
index 3486eeb..550614e 100644
--- a/RMCClient/minecraft/net/minecraft/src/SaveFormatComparator.java
+++ b/RMCClient/minecraft/net/minecraft/src/SaveFormatComparator.java
@@ -11,16 +11,16 @@
 	private final boolean hardcore;
 	private final boolean cheatsEnabled;
 	
-	public SaveFormatComparator(String par1Str, String par2Str, long par3, long par5, EnumGameType par7EnumGameType, boolean par8, boolean par9, boolean par10)
+	public SaveFormatComparator(String p_i2161_1_, String p_i2161_2_, long p_i2161_3_, long p_i2161_5_, EnumGameType p_i2161_7_, boolean p_i2161_8_, boolean p_i2161_9_, boolean p_i2161_10_)
 	{
-		fileName = par1Str;
-		displayName = par2Str;
-		lastTimePlayed = par3;
-		sizeOnDisk = par5;
-		theEnumGameType = par7EnumGameType;
-		requiresConversion = par8;
-		hardcore = par9;
-		cheatsEnabled = par10;
+		fileName = p_i2161_1_;
+		displayName = p_i2161_2_;
+		lastTimePlayed = p_i2161_3_;
+		sizeOnDisk = p_i2161_5_;
+		theEnumGameType = p_i2161_7_;
+		requiresConversion = p_i2161_8_;
+		hardcore = p_i2161_9_;
+		cheatsEnabled = p_i2161_10_;
 	}
 	
 	@Override public int compareTo(Object par1Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/SaveFormatOld.java b/RMCClient/minecraft/net/minecraft/src/SaveFormatOld.java
index a9943d7..4a67393 100644
--- a/RMCClient/minecraft/net/minecraft/src/SaveFormatOld.java
+++ b/RMCClient/minecraft/net/minecraft/src/SaveFormatOld.java
@@ -10,13 +10,13 @@
 {
 	protected final File savesDirectory;
 	
-	public SaveFormatOld(File par1File)
+	public SaveFormatOld(File p_i2147_1_)
 	{
-		if(!par1File.exists())
+		if(!p_i2147_1_.exists())
 		{
-			par1File.mkdirs();
+			p_i2147_1_.mkdirs();
 		}
-		savesDirectory = par1File;
+		savesDirectory = p_i2147_1_;
 	}
 	
 	@Override public boolean canLoadWorld(String par1Str)
diff --git a/RMCClient/minecraft/net/minecraft/src/SaveHandler.java b/RMCClient/minecraft/net/minecraft/src/SaveHandler.java
index dcaeea5..ebd9480 100644
--- a/RMCClient/minecraft/net/minecraft/src/SaveHandler.java
+++ b/RMCClient/minecraft/net/minecraft/src/SaveHandler.java
@@ -14,18 +14,18 @@
 	private final File worldDirectory;
 	private final File playersDirectory;
 	private final File mapDataDir;
-	private final long initializationTime = System.currentTimeMillis();
+	private final long initializationTime = MinecraftServer.func_130071_aq();
 	private final String saveDirectoryName;
 	
-	public SaveHandler(File par1File, String par2Str, boolean par3)
+	public SaveHandler(File p_i2146_1_, String p_i2146_2_, boolean p_i2146_3_)
 	{
-		worldDirectory = new File(par1File, par2Str);
+		worldDirectory = new File(p_i2146_1_, p_i2146_2_);
 		worldDirectory.mkdirs();
 		playersDirectory = new File(worldDirectory, "players");
 		mapDataDir = new File(worldDirectory, "data");
 		mapDataDir.mkdirs();
-		saveDirectoryName = par2Str;
-		if(par3)
+		saveDirectoryName = p_i2146_2_;
+		if(p_i2146_3_)
 		{
 			playersDirectory.mkdirs();
 		}
@@ -141,7 +141,7 @@
 	
 	@Override public NBTTagCompound readPlayerData(EntityPlayer par1EntityPlayer)
 	{
-		NBTTagCompound var2 = getPlayerData(par1EntityPlayer.username);
+		NBTTagCompound var2 = getPlayerData(par1EntityPlayer.getCommandSenderName());
 		if(var2 != null)
 		{
 			par1EntityPlayer.readFromNBT(var2);
@@ -237,8 +237,8 @@
 		{
 			NBTTagCompound var2 = new NBTTagCompound();
 			par1EntityPlayer.writeToNBT(var2);
-			File var3 = new File(playersDirectory, par1EntityPlayer.username + ".dat.tmp");
-			File var4 = new File(playersDirectory, par1EntityPlayer.username + ".dat");
+			File var3 = new File(playersDirectory, par1EntityPlayer.getCommandSenderName() + ".dat.tmp");
+			File var4 = new File(playersDirectory, par1EntityPlayer.getCommandSenderName() + ".dat");
 			CompressedStreamTools.writeCompressed(var2, new FileOutputStream(var3));
 			if(var4.exists())
 			{
@@ -247,7 +247,7 @@
 			var3.renameTo(var4);
 		} catch(Exception var5)
 		{
-			MinecraftServer.getServer().getLogAgent().logWarning("Failed to save player data for " + par1EntityPlayer.username);
+			MinecraftServer.getServer().getLogAgent().logWarning("Failed to save player data for " + par1EntityPlayer.getCommandSenderName());
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ScaledResolution.java b/RMCClient/minecraft/net/minecraft/src/ScaledResolution.java
index 8f698ed..bb5bcda 100644
--- a/RMCClient/minecraft/net/minecraft/src/ScaledResolution.java
+++ b/RMCClient/minecraft/net/minecraft/src/ScaledResolution.java
@@ -8,12 +8,12 @@
 	private double scaledHeightD;
 	private int scaleFactor;
 	
-	public ScaledResolution(GameSettings par1GameSettings, int par2, int par3)
+	public ScaledResolution(GameSettings p_i1051_1_, int p_i1051_2_, int p_i1051_3_)
 	{
-		scaledWidth = par2;
-		scaledHeight = par3;
+		scaledWidth = p_i1051_2_;
+		scaledHeight = p_i1051_3_;
 		scaleFactor = 1;
-		int var4 = par1GameSettings.guiScale;
+		int var4 = p_i1051_1_.guiScale;
 		if(var4 == 0)
 		{
 			var4 = 1000;
diff --git a/RMCClient/minecraft/net/minecraft/src/ScheduledSound.java b/RMCClient/minecraft/net/minecraft/src/ScheduledSound.java
index aadceaf..aec3432 100644
--- a/RMCClient/minecraft/net/minecraft/src/ScheduledSound.java
+++ b/RMCClient/minecraft/net/minecraft/src/ScheduledSound.java
@@ -10,14 +10,14 @@
 	float field_92063_f;
 	int field_92064_g;
 	
-	public ScheduledSound(String par1Str, float par2, float par3, float par4, float par5, float par6, int par7)
+	public ScheduledSound(String p_i1325_1_, float p_i1325_2_, float p_i1325_3_, float p_i1325_4_, float p_i1325_5_, float p_i1325_6_, int p_i1325_7_)
 	{
-		field_92069_a = par1Str;
-		field_92067_b = par2;
-		field_92068_c = par3;
-		field_92065_d = par4;
-		field_92066_e = par5;
-		field_92063_f = par6;
-		field_92064_g = par7;
+		field_92069_a = p_i1325_1_;
+		field_92067_b = p_i1325_2_;
+		field_92068_c = p_i1325_3_;
+		field_92065_d = p_i1325_4_;
+		field_92066_e = p_i1325_5_;
+		field_92063_f = p_i1325_6_;
+		field_92064_g = p_i1325_7_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Score.java b/RMCClient/minecraft/net/minecraft/src/Score.java
index 247664a..c6c2c38 100644
--- a/RMCClient/minecraft/net/minecraft/src/Score.java
+++ b/RMCClient/minecraft/net/minecraft/src/Score.java
@@ -11,11 +11,11 @@
 	private final String field_96654_d;
 	private int field_96655_e;
 	
-	public Score(Scoreboard par1Scoreboard, ScoreObjective par2ScoreObjective, String par3Str)
+	public Score(Scoreboard p_i2309_1_, ScoreObjective p_i2309_2_, String p_i2309_3_)
 	{
-		theScoreboard = par1Scoreboard;
-		field_96657_c = par2ScoreObjective;
-		field_96654_d = par3Str;
+		theScoreboard = p_i2309_1_;
+		field_96657_c = p_i2309_2_;
+		field_96654_d = p_i2309_3_;
 	}
 	
 	public ScoreObjective func_96645_d()
diff --git a/RMCClient/minecraft/net/minecraft/src/ScoreDummyCriteria.java b/RMCClient/minecraft/net/minecraft/src/ScoreDummyCriteria.java
index edcbb12..dd478a0 100644
--- a/RMCClient/minecraft/net/minecraft/src/ScoreDummyCriteria.java
+++ b/RMCClient/minecraft/net/minecraft/src/ScoreDummyCriteria.java
@@ -6,10 +6,10 @@
 {
 	private final String field_96644_g;
 	
-	public ScoreDummyCriteria(String par1Str)
+	public ScoreDummyCriteria(String p_i2311_1_)
 	{
-		field_96644_g = par1Str;
-		ScoreObjectiveCriteria.field_96643_a.put(par1Str, this);
+		field_96644_g = p_i2311_1_;
+		ScoreObjectiveCriteria.field_96643_a.put(p_i2311_1_, this);
 	}
 	
 	@Override public int func_96635_a(List par1List)
diff --git a/RMCClient/minecraft/net/minecraft/src/ScoreHealthCriteria.java b/RMCClient/minecraft/net/minecraft/src/ScoreHealthCriteria.java
index 4aba351..b4ce483 100644
--- a/RMCClient/minecraft/net/minecraft/src/ScoreHealthCriteria.java
+++ b/RMCClient/minecraft/net/minecraft/src/ScoreHealthCriteria.java
@@ -5,35 +5,24 @@
 
 public class ScoreHealthCriteria extends ScoreDummyCriteria
 {
-	public ScoreHealthCriteria(String par1Str)
+	public ScoreHealthCriteria(String p_i2312_1_)
 	{
-		super(par1Str);
+		super(p_i2312_1_);
 	}
 	
 	@Override public int func_96635_a(List par1List)
 	{
 		float var2 = 0.0F;
-		int var5;
-		float var6;
-		for(Iterator var3 = par1List.iterator(); var3.hasNext(); var2 += var5 / var6)
+		EntityPlayer var4;
+		for(Iterator var3 = par1List.iterator(); var3.hasNext(); var2 += var4.func_110143_aJ() + var4.func_110139_bj())
 		{
-			EntityPlayer var4 = (EntityPlayer) var3.next();
-			var5 = var4.getHealth();
-			var6 = var4.getMaxHealth();
-			if(var5 < 0)
-			{
-				var5 = 0;
-			}
-			if(var5 > var6)
-			{
-				var5 = var4.getMaxHealth();
-			}
+			var4 = (EntityPlayer) var3.next();
 		}
 		if(par1List.size() > 0)
 		{
 			var2 /= par1List.size();
 		}
-		return MathHelper.floor_float(var2 * 19.0F) + (var2 > 0.0F ? 1 : 0);
+		return MathHelper.ceiling_float_int(var2);
 	}
 	
 	@Override public boolean isReadOnly()
diff --git a/RMCClient/minecraft/net/minecraft/src/ScoreObjective.java b/RMCClient/minecraft/net/minecraft/src/ScoreObjective.java
index 8206fc5..5b6b0de 100644
--- a/RMCClient/minecraft/net/minecraft/src/ScoreObjective.java
+++ b/RMCClient/minecraft/net/minecraft/src/ScoreObjective.java
@@ -7,12 +7,12 @@
 	private final ScoreObjectiveCriteria objectiveCriteria;
 	private String displayName;
 	
-	public ScoreObjective(Scoreboard par1Scoreboard, String par2Str, ScoreObjectiveCriteria par3ScoreObjectiveCriteria)
+	public ScoreObjective(Scoreboard p_i2307_1_, String p_i2307_2_, ScoreObjectiveCriteria p_i2307_3_)
 	{
-		theScoreboard = par1Scoreboard;
-		name = par2Str;
-		objectiveCriteria = par3ScoreObjectiveCriteria;
-		displayName = par2Str;
+		theScoreboard = p_i2307_1_;
+		name = p_i2307_2_;
+		objectiveCriteria = p_i2307_3_;
+		displayName = p_i2307_2_;
 	}
 	
 	public ScoreObjectiveCriteria getCriteria()
diff --git a/RMCClient/minecraft/net/minecraft/src/ScorePlayerTeam.java b/RMCClient/minecraft/net/minecraft/src/ScorePlayerTeam.java
index efad614..7e7950d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ScorePlayerTeam.java
+++ b/RMCClient/minecraft/net/minecraft/src/ScorePlayerTeam.java
@@ -4,7 +4,7 @@
 import java.util.HashSet;
 import java.util.Set;
 
-public class ScorePlayerTeam
+public class ScorePlayerTeam extends Team
 {
 	private final Scoreboard theScoreboard;
 	private final String field_96675_b;
@@ -15,11 +15,16 @@
 	private boolean field_96672_g = true;
 	private boolean field_98301_h = true;
 	
-	public ScorePlayerTeam(Scoreboard par1Scoreboard, String par2Str)
+	public ScorePlayerTeam(Scoreboard p_i2308_1_, String p_i2308_2_)
 	{
-		theScoreboard = par1Scoreboard;
-		field_96675_b = par2Str;
-		field_96673_d = par2Str;
+		theScoreboard = p_i2308_1_;
+		field_96675_b = p_i2308_2_;
+		field_96673_d = p_i2308_2_;
+	}
+	
+	@Override public String func_142053_d(String p_142053_1_)
+	{
+		return func_96668_e() + p_142053_1_ + func_96663_f();
 	}
 	
 	public void func_96660_a(boolean par1)
@@ -28,7 +33,7 @@
 		theScoreboard.func_96538_b(this);
 	}
 	
-	public String func_96661_b()
+	@Override public String func_96661_b()
 	{
 		return field_96675_b;
 	}
@@ -58,7 +63,7 @@
 		}
 	}
 	
-	public boolean func_96665_g()
+	@Override public boolean func_96665_g()
 	{
 		return field_96672_g;
 	}
@@ -83,30 +88,27 @@
 		return field_96673_d;
 	}
 	
-	public boolean func_98297_h()
+	@Override public boolean func_98297_h()
 	{
 		return field_98301_h;
 	}
 	
 	public void func_98298_a(int par1)
 	{
-		byte var2 = 0;
-		int var4 = var2 + 1;
-		func_96660_a((par1 & 1 << var2) > 0);
-		func_98300_b((par1 & 1 << var4++) > 0);
+		func_96660_a((par1 & 1) > 0);
+		func_98300_b((par1 & 2) > 0);
 	}
 	
 	public int func_98299_i()
 	{
 		int var1 = 0;
-		int var2 = 0;
 		if(func_96665_g())
 		{
-			var1 |= 1 << var2++;
+			var1 |= 1;
 		}
 		if(func_98297_h())
 		{
-			var1 |= 1 << var2++;
+			var1 |= 2;
 		}
 		return var1;
 	}
@@ -122,8 +124,8 @@
 		return membershipSet;
 	}
 	
-	public static String func_96667_a(ScorePlayerTeam par0ScorePlayerTeam, String par1Str)
+	public static String func_96667_a(Team par0ScorePlayerTeam, String par1Str)
 	{
-		return par0ScorePlayerTeam == null ? par1Str : par0ScorePlayerTeam.func_96668_e() + par1Str + par0ScorePlayerTeam.func_96663_f();
+		return par0ScorePlayerTeam == null ? par1Str : par0ScorePlayerTeam.func_142053_d(par1Str);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/Scoreboard.java b/RMCClient/minecraft/net/minecraft/src/Scoreboard.java
index a21e8f0..6d4a4a6 100644
--- a/RMCClient/minecraft/net/minecraft/src/Scoreboard.java
+++ b/RMCClient/minecraft/net/minecraft/src/Scoreboard.java
@@ -141,14 +141,11 @@
 	{
 		Collection var1 = field_96544_c.values();
 		ArrayList var2 = new ArrayList();
-		if(var1 != null)
+		Iterator var3 = var1.iterator();
+		while(var3.hasNext())
 		{
-			Iterator var3 = var1.iterator();
-			while(var3.hasNext())
-			{
-				Map var4 = (Map) var3.next();
-				var2.addAll(var4.values());
-			}
+			Map var4 = (Map) var3.next();
+			var2.addAll(var4.values());
 		}
 		return var2;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ScoreboardSaveData.java b/RMCClient/minecraft/net/minecraft/src/ScoreboardSaveData.java
index 2083cc1..0150dd2 100644
--- a/RMCClient/minecraft/net/minecraft/src/ScoreboardSaveData.java
+++ b/RMCClient/minecraft/net/minecraft/src/ScoreboardSaveData.java
@@ -15,9 +15,9 @@
 		this("scoreboard");
 	}
 	
-	public ScoreboardSaveData(String par1Str)
+	public ScoreboardSaveData(String p_i2310_1_)
 	{
-		super(par1Str);
+		super(p_i2310_1_);
 	}
 	
 	protected NBTTagList func_96496_a()
diff --git a/RMCClient/minecraft/net/minecraft/src/ScreenChatOptions.java b/RMCClient/minecraft/net/minecraft/src/ScreenChatOptions.java
index 6626cc8..aac8f7e 100644
--- a/RMCClient/minecraft/net/minecraft/src/ScreenChatOptions.java
+++ b/RMCClient/minecraft/net/minecraft/src/ScreenChatOptions.java
@@ -8,12 +8,12 @@
 	private final GameSettings theSettings;
 	private String theChatOptions;
 	private String field_82268_n;
-	private int field_82269_o = 0;
+	private int field_82269_o;
 	
-	public ScreenChatOptions(GuiScreen par1GuiScreen, GameSettings par2GameSettings)
+	public ScreenChatOptions(GuiScreen p_i1023_1_, GameSettings p_i1023_2_)
 	{
-		theGuiScreen = par1GuiScreen;
-		theSettings = par2GameSettings;
+		theGuiScreen = p_i1023_1_;
+		theSettings = p_i1023_2_;
 	}
 	
 	@Override protected void actionPerformed(GuiButton par1GuiButton)
@@ -43,46 +43,45 @@
 	
 	@Override public void initGui()
 	{
-		StringTranslate var1 = StringTranslate.getInstance();
-		int var2 = 0;
-		theChatOptions = var1.translateKey("options.chat.title");
-		field_82268_n = var1.translateKey("options.multiplayer.title");
-		EnumOptions[] var3 = allScreenChatOptions;
-		int var4 = var3.length;
-		int var5;
-		EnumOptions var6;
-		for(var5 = 0; var5 < var4; ++var5)
+		int var1 = 0;
+		theChatOptions = I18n.func_135053_a("options.chat.title");
+		field_82268_n = I18n.func_135053_a("options.multiplayer.title");
+		EnumOptions[] var2 = allScreenChatOptions;
+		int var3 = var2.length;
+		int var4;
+		EnumOptions var5;
+		for(var4 = 0; var4 < var3; ++var4)
 		{
-			var6 = var3[var5];
-			if(var6.getEnumFloat())
+			var5 = var2[var4];
+			if(var5.getEnumFloat())
 			{
-				buttonList.add(new GuiSlider(var6.returnEnumOrdinal(), width / 2 - 155 + var2 % 2 * 160, height / 6 + 24 * (var2 >> 1), var6, theSettings.getKeyBinding(var6), theSettings.getOptionFloatValue(var6)));
+				buttonList.add(new GuiSlider(var5.returnEnumOrdinal(), width / 2 - 155 + var1 % 2 * 160, height / 6 + 24 * (var1 >> 1), var5, theSettings.getKeyBinding(var5), theSettings.getOptionFloatValue(var5)));
 			} else
 			{
-				buttonList.add(new GuiSmallButton(var6.returnEnumOrdinal(), width / 2 - 155 + var2 % 2 * 160, height / 6 + 24 * (var2 >> 1), var6, theSettings.getKeyBinding(var6)));
+				buttonList.add(new GuiSmallButton(var5.returnEnumOrdinal(), width / 2 - 155 + var1 % 2 * 160, height / 6 + 24 * (var1 >> 1), var5, theSettings.getKeyBinding(var5)));
 			}
-			++var2;
+			++var1;
 		}
-		if(var2 % 2 == 1)
+		if(var1 % 2 == 1)
 		{
-			++var2;
+			++var1;
 		}
-		field_82269_o = height / 6 + 24 * (var2 >> 1);
-		var2 += 2;
-		var3 = allMultiplayerOptions;
-		var4 = var3.length;
-		for(var5 = 0; var5 < var4; ++var5)
+		field_82269_o = height / 6 + 24 * (var1 >> 1);
+		var1 += 2;
+		var2 = allMultiplayerOptions;
+		var3 = var2.length;
+		for(var4 = 0; var4 < var3; ++var4)
 		{
-			var6 = var3[var5];
-			if(var6.getEnumFloat())
+			var5 = var2[var4];
+			if(var5.getEnumFloat())
 			{
-				buttonList.add(new GuiSlider(var6.returnEnumOrdinal(), width / 2 - 155 + var2 % 2 * 160, height / 6 + 24 * (var2 >> 1), var6, theSettings.getKeyBinding(var6), theSettings.getOptionFloatValue(var6)));
+				buttonList.add(new GuiSlider(var5.returnEnumOrdinal(), width / 2 - 155 + var1 % 2 * 160, height / 6 + 24 * (var1 >> 1), var5, theSettings.getKeyBinding(var5), theSettings.getOptionFloatValue(var5)));
 			} else
 			{
-				buttonList.add(new GuiSmallButton(var6.returnEnumOrdinal(), width / 2 - 155 + var2 % 2 * 160, height / 6 + 24 * (var2 >> 1), var6, theSettings.getKeyBinding(var6)));
+				buttonList.add(new GuiSmallButton(var5.returnEnumOrdinal(), width / 2 - 155 + var1 % 2 * 160, height / 6 + 24 * (var1 >> 1), var5, theSettings.getKeyBinding(var5)));
 			}
-			++var2;
+			++var1;
 		}
-		buttonList.add(new GuiButton(200, width / 2 - 100, height / 6 + 168, var1.translateKey("gui.done")));
+		buttonList.add(new GuiButton(200, width / 2 - 100, height / 6 + 168, I18n.func_135053_a("gui.done")));
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ScreenWithCallback.java b/RMCClient/minecraft/net/minecraft/src/ScreenWithCallback.java
new file mode 100644
index 0000000..8414576
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ScreenWithCallback.java
@@ -0,0 +1,6 @@
+package net.minecraft.src;
+
+public abstract class ScreenWithCallback extends GuiScreen
+{
+	abstract void func_110354_a(Object var1);
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/SelectionListBase.java b/RMCClient/minecraft/net/minecraft/src/SelectionListBase.java
index 310461e..d457e9a 100644
--- a/RMCClient/minecraft/net/minecraft/src/SelectionListBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/SelectionListBase.java
@@ -19,16 +19,16 @@
 	private float field_96625_j;
 	private float field_96626_k;
 	private int field_96623_l = -1;
-	private long field_96624_m = 0L;
+	private long field_96624_m;
 	
-	public SelectionListBase(Minecraft par1Minecraft, int par2, int par3, int par4, int par5, int par6)
+	public SelectionListBase(Minecraft p_i1117_1_, int p_i1117_2_, int p_i1117_3_, int p_i1117_4_, int p_i1117_5_, int p_i1117_6_)
 	{
-		field_96622_a = par1Minecraft;
-		field_96616_f = par3;
-		field_96627_h = par3 + par5;
-		field_96620_b = par6;
-		field_96619_e = par2;
-		field_96617_g = par2 + par4;
+		field_96622_a = p_i1117_1_;
+		field_96616_f = p_i1117_3_;
+		field_96627_h = p_i1117_3_ + p_i1117_5_;
+		field_96620_b = p_i1117_6_;
+		field_96619_e = p_i1117_2_;
+		field_96617_g = p_i1117_2_ + p_i1117_4_;
 	}
 	
 	protected int func_96606_e()
@@ -144,7 +144,7 @@
 		GL11.glDisable(GL11.GL_LIGHTING);
 		GL11.glDisable(GL11.GL_FOG);
 		Tessellator var18 = Tessellator.instance;
-		field_96622_a.renderEngine.bindTexture("/gui/background.png");
+		field_96622_a.func_110434_K().func_110577_a(Gui.field_110325_k);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
 		float var17 = 32.0F;
 		var18.startDrawingQuads();
diff --git a/RMCClient/minecraft/net/minecraft/src/SelectionListInvited.java b/RMCClient/minecraft/net/minecraft/src/SelectionListInvited.java
index c0bbb69..ecef698 100644
--- a/RMCClient/minecraft/net/minecraft/src/SelectionListInvited.java
+++ b/RMCClient/minecraft/net/minecraft/src/SelectionListInvited.java
@@ -4,10 +4,10 @@
 {
 	final GuiScreenConfigureWorld field_98264_a;
 	
-	public SelectionListInvited(GuiScreenConfigureWorld par1GuiScreenConfigureWorld)
+	public SelectionListInvited(GuiScreenConfigureWorld p_i1104_1_)
 	{
-		super(GuiScreenConfigureWorld.func_96265_a(par1GuiScreenConfigureWorld), GuiScreenConfigureWorld.func_96271_b(par1GuiScreenConfigureWorld), GuiScreenConfigureWorld.func_96274_a(par1GuiScreenConfigureWorld, 2), GuiScreenConfigureWorld.func_96269_c(par1GuiScreenConfigureWorld), GuiScreenConfigureWorld.func_96274_a(par1GuiScreenConfigureWorld, 9) - GuiScreenConfigureWorld.func_96274_a(par1GuiScreenConfigureWorld, 2), 12);
-		field_98264_a = par1GuiScreenConfigureWorld;
+		super(GuiScreenConfigureWorld.func_96265_a(p_i1104_1_), GuiScreenConfigureWorld.func_96271_b(p_i1104_1_), GuiScreenConfigureWorld.func_96274_a(p_i1104_1_, 2), GuiScreenConfigureWorld.func_96269_c(p_i1104_1_), GuiScreenConfigureWorld.func_96274_a(p_i1104_1_, 9) - GuiScreenConfigureWorld.func_96274_a(p_i1104_1_, 2), 12);
+		field_98264_a = p_i1104_1_;
 	}
 	
 	@Override protected int func_96608_a()
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerAddress.java b/RMCClient/minecraft/net/minecraft/src/ServerAddress.java
index 14001c1..a9c3ae2 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerAddress.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerAddress.java
@@ -10,10 +10,10 @@
 	private final String ipAddress;
 	private final int serverPort;
 	
-	private ServerAddress(String par1Str, int par2)
+	private ServerAddress(String p_i1192_1_, int p_i1192_2_)
 	{
-		ipAddress = par1Str;
-		serverPort = par2;
+		ipAddress = p_i1192_1_;
+		serverPort = p_i1192_2_;
 	}
 	
 	public String getIP()
@@ -69,6 +69,7 @@
 	{
 		try
 		{
+			String var1 = "com.sun.jndi.dns.DnsContextFactory";
 			Class.forName("com.sun.jndi.dns.DnsContextFactory");
 			Hashtable var2 = new Hashtable();
 			var2.put("java.naming.factory.initial", "com.sun.jndi.dns.DnsContextFactory");
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerBlockEventList.java b/RMCClient/minecraft/net/minecraft/src/ServerBlockEventList.java
index 7a137f9..42c51ae 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerBlockEventList.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerBlockEventList.java
@@ -10,7 +10,7 @@
 	{
 	}
 	
-	ServerBlockEventList(ServerBlockEvent par1ServerBlockEvent)
+	ServerBlockEventList(ServerBlockEvent p_i1521_1_)
 	{
 		this();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerCommand.java b/RMCClient/minecraft/net/minecraft/src/ServerCommand.java
index be98238..177243a 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerCommand.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerCommand.java
@@ -5,9 +5,9 @@
 	public final String command;
 	public final ICommandSender sender;
 	
-	public ServerCommand(String par1Str, ICommandSender par2ICommandSender)
+	public ServerCommand(String p_i1491_1_, ICommandSender p_i1491_2_)
 	{
-		command = par1Str;
-		sender = par2ICommandSender;
+		command = p_i1491_1_;
+		sender = p_i1491_2_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerCommandManager.java b/RMCClient/minecraft/net/minecraft/src/ServerCommandManager.java
index 170551b..f964600 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerCommandManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerCommandManager.java
@@ -30,6 +30,8 @@
 		registerCommand(new CommandGameRule());
 		registerCommand(new CommandClearInventory());
 		registerCommand(new ServerCommandTestFor());
+		registerCommand(new CommandSpreadPlayers());
+		registerCommand(new CommandPlaySound());
 		registerCommand(new ServerCommandScoreboard());
 		if(MinecraftServer.getServer().isDedicatedServer())
 		{
@@ -61,25 +63,28 @@
 		{
 			var5 = false;
 		}
+		ChatMessageComponent var6 = ChatMessageComponent.func_111082_b("chat.type.admin", new Object[] { par1ICommandSender.getCommandSenderName(), ChatMessageComponent.func_111082_b(par3Str, par4ArrayOfObj) });
+		var6.func_111059_a(EnumChatFormatting.GRAY);
+		var6.func_111063_b(Boolean.valueOf(true));
 		if(var5)
 		{
-			Iterator var6 = MinecraftServer.getServer().getConfigurationManager().playerEntityList.iterator();
-			while(var6.hasNext())
+			Iterator var7 = MinecraftServer.getServer().getConfigurationManager().playerEntityList.iterator();
+			while(var7.hasNext())
 			{
-				EntityPlayerMP var7 = (EntityPlayerMP) var6.next();
-				if(var7 != par1ICommandSender && MinecraftServer.getServer().getConfigurationManager().areCommandsAllowed(var7.username))
+				EntityPlayerMP var8 = (EntityPlayerMP) var7.next();
+				if(var8 != par1ICommandSender && MinecraftServer.getServer().getConfigurationManager().areCommandsAllowed(var8.getCommandSenderName()))
 				{
-					var7.sendChatToPlayer("" + EnumChatFormatting.GRAY + "" + EnumChatFormatting.ITALIC + "[" + par1ICommandSender.getCommandSenderName() + ": " + var7.translateString(par3Str, par4ArrayOfObj) + "]");
+					var8.sendChatToPlayer(var6);
 				}
 			}
 		}
 		if(par1ICommandSender != MinecraftServer.getServer())
 		{
-			MinecraftServer.getServer().getLogAgent().logInfo("[" + par1ICommandSender.getCommandSenderName() + ": " + MinecraftServer.getServer().translateString(par3Str, par4ArrayOfObj) + "]");
+			MinecraftServer.getServer().sendChatToPlayer(var6);
 		}
 		if((par2 & 1) != 1)
 		{
-			par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString(par3Str, par4ArrayOfObj));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b(par3Str, par4ArrayOfObj));
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerCommandScoreboard.java b/RMCClient/minecraft/net/minecraft/src/ServerCommandScoreboard.java
index 61852b8..e51685d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerCommandScoreboard.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerCommandScoreboard.java
@@ -20,21 +20,27 @@
 		ScoreObjectiveCriteria var7 = (ScoreObjectiveCriteria) ScoreObjectiveCriteria.field_96643_a.get(var5);
 		if(var7 == null)
 		{
-			String[] var10 = (String[]) ScoreObjectiveCriteria.field_96643_a.keySet().toArray(new String[0]);
-			throw new WrongUsageException("commands.scoreboard.objectives.add.wrongType", new Object[] { joinNiceString(var10) });
+			String[] var9 = (String[]) ScoreObjectiveCriteria.field_96643_a.keySet().toArray(new String[0]);
+			throw new WrongUsageException("commands.scoreboard.objectives.add.wrongType", new Object[] { joinNiceString(var9) });
 		} else if(var6.getObjective(var4) != null) throw new CommandException("commands.scoreboard.objectives.add.alreadyExists", new Object[] { var4 });
 		else if(var4.length() > 16) throw new SyntaxErrorException("commands.scoreboard.objectives.add.tooLong", new Object[] { var4, Integer.valueOf(16) });
+		else if(var4.length() == 0) throw new WrongUsageException("commands.scoreboard.objectives.add.usage", new Object[0]);
 		else
 		{
-			ScoreObjective var8 = var6.func_96535_a(var4, var7);
 			if(par2ArrayOfStr.length > par3)
 			{
-				String var9 = func_82360_a(par1ICommandSender, par2ArrayOfStr, par3);
-				if(var9.length() > 32) throw new SyntaxErrorException("commands.scoreboard.objectives.add.displayTooLong", new Object[] { var9, Integer.valueOf(32) });
-				if(var9.length() > 0)
+				String var8 = func_82360_a(par1ICommandSender, par2ArrayOfStr, par3);
+				if(var8.length() > 32) throw new SyntaxErrorException("commands.scoreboard.objectives.add.displayTooLong", new Object[] { var8, Integer.valueOf(32) });
+				if(var8.length() > 0)
 				{
-					var8.setDisplayName(var9);
+					var6.func_96535_a(var4, var7).setDisplayName(var8);
+				} else
+				{
+					var6.func_96535_a(var4, var7);
 				}
+			} else
+			{
+				var6.func_96535_a(var4, var7);
 			}
 			notifyAdmins(par1ICommandSender, "commands.scoreboard.objectives.add.success", new Object[] { var4 });
 		}
@@ -105,17 +111,23 @@
 		Scoreboard var5 = getScoreboardFromWorldServer();
 		if(var5.func_96508_e(var4) != null) throw new CommandException("commands.scoreboard.teams.add.alreadyExists", new Object[] { var4 });
 		else if(var4.length() > 16) throw new SyntaxErrorException("commands.scoreboard.teams.add.tooLong", new Object[] { var4, Integer.valueOf(16) });
+		else if(var4.length() == 0) throw new WrongUsageException("commands.scoreboard.teams.add.usage", new Object[0]);
 		else
 		{
-			ScorePlayerTeam var6 = var5.func_96527_f(var4);
 			if(par2ArrayOfStr.length > par3)
 			{
-				String var7 = func_82360_a(par1ICommandSender, par2ArrayOfStr, par3);
-				if(var7.length() > 32) throw new SyntaxErrorException("commands.scoreboard.teams.add.displayTooLong", new Object[] { var7, Integer.valueOf(32) });
-				if(var7.length() > 0)
+				String var6 = func_82360_a(par1ICommandSender, par2ArrayOfStr, par3);
+				if(var6.length() > 32) throw new SyntaxErrorException("commands.scoreboard.teams.add.displayTooLong", new Object[] { var6, Integer.valueOf(32) });
+				if(var6.length() > 0)
 				{
-					var6.func_96664_a(var7);
+					var5.func_96527_f(var4).func_96664_a(var6);
+				} else
+				{
+					var5.func_96527_f(var4);
 				}
+			} else
+			{
+				var5.func_96527_f(var4);
 			}
 			notifyAdmins(par1ICommandSender, "commands.scoreboard.teams.add.success", new Object[] { var4 });
 		}
@@ -144,6 +156,11 @@
 		return "scoreboard";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.scoreboard.usage";
+	}
+	
 	protected void getObjectivesList(ICommandSender par1ICommandSender)
 	{
 		Scoreboard var2 = getScoreboardFromWorldServer();
@@ -151,12 +168,12 @@
 		if(var3.size() <= 0) throw new CommandException("commands.scoreboard.objectives.list.empty", new Object[0]);
 		else
 		{
-			par1ICommandSender.sendChatToPlayer(EnumChatFormatting.DARK_GREEN + par1ICommandSender.translateString("commands.scoreboard.objectives.list.count", new Object[] { Integer.valueOf(var3.size()) }));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.scoreboard.objectives.list.count", new Object[] { Integer.valueOf(var3.size()) }).func_111059_a(EnumChatFormatting.DARK_GREEN));
 			Iterator var4 = var3.iterator();
 			while(var4.hasNext())
 			{
 				ScoreObjective var5 = (ScoreObjective) var4.next();
-				par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.scoreboard.objectives.list.entry", new Object[] { var5.getName(), var5.getDisplayName(), var5.getCriteria().func_96636_a() }));
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.scoreboard.objectives.list.entry", new Object[] { var5.getName(), var5.getDisplayName(), var5.getCriteria().func_96636_a() }));
 			}
 		}
 	}
@@ -212,18 +229,18 @@
 			ScorePlayerTeam var5 = getTeam(par2ArrayOfStr[par3++]);
 			Collection var6 = var5.getMembershipCollection();
 			if(var6.size() <= 0) throw new CommandException("commands.scoreboard.teams.list.player.empty", new Object[] { var5.func_96661_b() });
-			par1ICommandSender.sendChatToPlayer(EnumChatFormatting.DARK_GREEN + par1ICommandSender.translateString("commands.scoreboard.teams.list.player.count", new Object[] { Integer.valueOf(var6.size()), var5.func_96661_b() }));
-			par1ICommandSender.sendChatToPlayer(joinNiceString(var6.toArray()));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.scoreboard.teams.list.player.count", new Object[] { Integer.valueOf(var6.size()), var5.func_96661_b() }).func_111059_a(EnumChatFormatting.DARK_GREEN));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111066_d(joinNiceString(var6.toArray())));
 		} else
 		{
 			Collection var8 = var4.func_96525_g();
 			if(var8.size() <= 0) throw new CommandException("commands.scoreboard.teams.list.empty", new Object[0]);
-			par1ICommandSender.sendChatToPlayer(EnumChatFormatting.DARK_GREEN + par1ICommandSender.translateString("commands.scoreboard.teams.list.count", new Object[] { Integer.valueOf(var8.size()) }));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.scoreboard.teams.list.count", new Object[] { Integer.valueOf(var8.size()) }).func_111059_a(EnumChatFormatting.DARK_GREEN));
 			Iterator var9 = var8.iterator();
 			while(var9.hasNext())
 			{
 				ScorePlayerTeam var7 = (ScorePlayerTeam) var9.next();
-				par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.scoreboard.teams.list.entry", new Object[] { var7.func_96661_b(), var7.func_96669_c(), Integer.valueOf(var7.getMembershipCollection().size()) }));
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.scoreboard.teams.list.entry", new Object[] { var7.func_96661_b(), var7.func_96669_c(), Integer.valueOf(var7.getMembershipCollection().size()) }));
 			}
 		}
 	}
@@ -304,19 +321,19 @@
 			String var5 = func_96332_d(par1ICommandSender, par2ArrayOfStr[par3++]);
 			Map var6 = var4.func_96510_d(var5);
 			if(var6.size() <= 0) throw new CommandException("commands.scoreboard.players.list.player.empty", new Object[] { var5 });
-			par1ICommandSender.sendChatToPlayer(EnumChatFormatting.DARK_GREEN + par1ICommandSender.translateString("commands.scoreboard.players.list.player.count", new Object[] { Integer.valueOf(var6.size()), var5 }));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.scoreboard.players.list.player.count", new Object[] { Integer.valueOf(var6.size()), var5 }).func_111059_a(EnumChatFormatting.DARK_GREEN));
 			Iterator var7 = var6.values().iterator();
 			while(var7.hasNext())
 			{
 				Score var8 = (Score) var7.next();
-				par1ICommandSender.sendChatToPlayer(par1ICommandSender.translateString("commands.scoreboard.players.list.player.entry", new Object[] { Integer.valueOf(var8.func_96652_c()), var8.func_96645_d().getDisplayName(), var8.func_96645_d().getName() }));
+				par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.scoreboard.players.list.player.entry", new Object[] { Integer.valueOf(var8.func_96652_c()), var8.func_96645_d().getDisplayName(), var8.func_96645_d().getName() }));
 			}
 		} else
 		{
 			Collection var9 = var4.getObjectiveNames();
 			if(var9.size() <= 0) throw new CommandException("commands.scoreboard.players.list.empty", new Object[0]);
-			par1ICommandSender.sendChatToPlayer(EnumChatFormatting.DARK_GREEN + par1ICommandSender.translateString("commands.scoreboard.players.list.count", new Object[] { Integer.valueOf(var9.size()) }));
-			par1ICommandSender.sendChatToPlayer(joinNiceString(var9.toArray()));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111082_b("commands.scoreboard.players.list.count", new Object[] { Integer.valueOf(var9.size()) }).func_111059_a(EnumChatFormatting.DARK_GREEN));
+			par1ICommandSender.sendChatToPlayer(ChatMessageComponent.func_111066_d(joinNiceString(var9.toArray())));
 		}
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerCommandTestFor.java b/RMCClient/minecraft/net/minecraft/src/ServerCommandTestFor.java
index b6a7bcd..2f588a1 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerCommandTestFor.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerCommandTestFor.java
@@ -7,6 +7,11 @@
 		return "testfor";
 	}
 	
+	@Override public String getCommandUsage(ICommandSender par1ICommandSender)
+	{
+		return "commands.testfor.usage";
+	}
+	
 	@Override public int getRequiredPermissionLevel()
 	{
 		return 2;
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerConfigurationManager.java b/RMCClient/minecraft/net/minecraft/src/ServerConfigurationManager.java
index 1e650dc..6d0f4a8 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerConfigurationManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerConfigurationManager.java
@@ -29,11 +29,11 @@
 	protected int viewDistance;
 	private EnumGameType gameType;
 	private boolean commandsAllowedForAll;
-	private int playerPingIndex = 0;
+	private int playerPingIndex;
 	
-	public ServerConfigurationManager(MinecraftServer par1MinecraftServer)
+	public ServerConfigurationManager(MinecraftServer p_i1500_1_)
 	{
-		mcServer = par1MinecraftServer;
+		mcServer = p_i1500_1_;
 		bannedPlayers.setListActive(false);
 		bannedIPs.setListActive(false);
 		maxPlayers = 8;
@@ -91,7 +91,7 @@
 		for(int var3 = 0; var3 < playerEntityList.size(); ++var3)
 		{
 			var4 = (EntityPlayerMP) playerEntityList.get(var3);
-			if(var4.username.equalsIgnoreCase(par1Str))
+			if(var4.getCommandSenderName().equalsIgnoreCase(par1Str))
 			{
 				var2.add(var4);
 			}
@@ -113,73 +113,74 @@
 		return new EntityPlayerMP(mcServer, mcServer.worldServerForDimension(0), par1Str, (ItemInWorldManager) var6);
 	}
 	
-	public List findPlayers(ChunkCoordinates par1ChunkCoordinates, int par2, int par3, int par4, int par5, int par6, int par7, Map par8Map, String par9Str, String par10Str)
+	public List findPlayers(ChunkCoordinates par1ChunkCoordinates, int par2, int par3, int par4, int par5, int par6, int par7, Map par8Map, String par9Str, String par10Str, World p_82449_11_)
 	{
 		if(playerEntityList.isEmpty()) return null;
 		else
 		{
-			Object var11 = new ArrayList();
-			boolean var12 = par4 < 0;
-			int var13 = par2 * par2;
-			int var14 = par3 * par3;
+			Object var12 = new ArrayList();
+			boolean var13 = par4 < 0;
+			boolean var14 = par9Str != null && par9Str.startsWith("!");
+			boolean var15 = par10Str != null && par10Str.startsWith("!");
+			int var16 = par2 * par2;
+			int var17 = par3 * par3;
 			par4 = MathHelper.abs_int(par4);
-			for(int var15 = 0; var15 < playerEntityList.size(); ++var15)
+			if(var14)
 			{
-				EntityPlayerMP var16 = (EntityPlayerMP) playerEntityList.get(var15);
-				boolean var17;
-				if(par9Str != null)
+				par9Str = par9Str.substring(1);
+			}
+			if(var15)
+			{
+				par10Str = par10Str.substring(1);
+			}
+			for(int var18 = 0; var18 < playerEntityList.size(); ++var18)
+			{
+				EntityPlayerMP var19 = (EntityPlayerMP) playerEntityList.get(var18);
+				if((p_82449_11_ == null || var19.worldObj == p_82449_11_) && (par9Str == null || var14 != par9Str.equalsIgnoreCase(var19.getEntityName())))
 				{
-					var17 = par9Str.startsWith("!");
-					if(var17)
+					if(par10Str != null)
 					{
-						par9Str = par9Str.substring(1);
+						Team var20 = var19.getTeam();
+						String var21 = var20 == null ? "" : var20.func_96661_b();
+						if(var15 == par10Str.equalsIgnoreCase(var21))
+						{
+							continue;
+						}
 					}
-					if(var17 == par9Str.equalsIgnoreCase(var16.getEntityName()))
+					if(par1ChunkCoordinates != null && (par2 > 0 || par3 > 0))
 					{
-						continue;
+						float var22 = par1ChunkCoordinates.getDistanceSquaredToChunkCoordinates(var19.getPlayerCoordinates());
+						if(par2 > 0 && var22 < var16 || par3 > 0 && var22 > var17)
+						{
+							continue;
+						}
 					}
-				}
-				if(par10Str != null)
-				{
-					var17 = par10Str.startsWith("!");
-					if(var17)
+					if(func_96457_a(var19, par8Map) && (par5 == EnumGameType.NOT_SET.getID() || par5 == var19.theItemInWorldManager.getGameType().getID()) && (par6 <= 0 || var19.experienceLevel >= par6) && var19.experienceLevel <= par7)
 					{
-						par10Str = par10Str.substring(1);
+						((List) var12).add(var19);
 					}
-					ScorePlayerTeam var18 = var16.getTeam();
-					String var19 = var18 == null ? "" : var18.func_96661_b();
-					if(var17 == par10Str.equalsIgnoreCase(var19))
-					{
-						continue;
-					}
-				}
-				if(par1ChunkCoordinates != null && (par2 > 0 || par3 > 0))
-				{
-					float var20 = par1ChunkCoordinates.getDistanceSquaredToChunkCoordinates(var16.getPlayerCoordinates());
-					if(par2 > 0 && var20 < var13 || par3 > 0 && var20 > var14)
-					{
-						continue;
-					}
-				}
-				if(func_96457_a(var16, par8Map) && (par5 == EnumGameType.NOT_SET.getID() || par5 == var16.theItemInWorldManager.getGameType().getID()) && (par6 <= 0 || var16.experienceLevel >= par6) && var16.experienceLevel <= par7)
-				{
-					((List) var11).add(var16);
 				}
 			}
 			if(par1ChunkCoordinates != null)
 			{
-				Collections.sort((List) var11, new PlayerPositionComparator(par1ChunkCoordinates));
+				Collections.sort((List) var12, new PlayerPositionComparator(par1ChunkCoordinates));
 			}
-			if(var12)
+			if(var13)
 			{
-				Collections.reverse((List) var11);
+				Collections.reverse((List) var12);
 			}
 			if(par4 > 0)
 			{
-				var11 = ((List) var11).subList(0, Math.min(par4, ((List) var11).size()));
+				var12 = ((List) var12).subList(0, Math.min(par4, ((List) var12).size()));
 			}
-			return (List) var11;
+			return (List) var12;
 		}
+	}
+	
+	public void func_110459_a(ChatMessageComponent p_110459_1_, boolean p_110459_2_)
+	{
+		mcServer.sendChatToPlayer(p_110459_1_);
+		sendPacketToAllPlayers(new Packet3Chat(p_110459_1_, p_110459_2_));
 	}
 	
 	public void func_72375_a(EntityPlayerMP par1EntityPlayerMP, WorldServer par2WorldServer)
@@ -266,7 +267,7 @@
 		String[] var1 = new String[playerEntityList.size()];
 		for(int var2 = 0; var2 < playerEntityList.size(); ++var2)
 		{
-			var1[var2] = ((EntityPlayerMP) playerEntityList.get(var2)).username;
+			var1[var2] = ((EntityPlayerMP) playerEntityList.get(var2)).getCommandSenderName();
 		}
 		return var1;
 	}
@@ -319,7 +320,7 @@
 		{
 			if(!var2.hasNext()) return null;
 			var3 = (EntityPlayerMP) var2.next();
-		} while(!var3.username.equalsIgnoreCase(par1Str));
+		} while(!var3.getCommandSenderName().equalsIgnoreCase(par1Str));
 		return var3;
 	}
 	
@@ -347,7 +348,7 @@
 			{
 				var1 = var1 + ", ";
 			}
-			var1 = var1 + ((EntityPlayerMP) playerEntityList.get(var2)).username;
+			var1 = var1 + ((EntityPlayerMP) playerEntityList.get(var2)).getCommandSenderName();
 		}
 		return var1;
 	}
@@ -377,22 +378,23 @@
 		{
 			var4 = par1INetworkManager.getSocketAddress().toString();
 		}
-		mcServer.getLogAgent().logInfo(par2EntityPlayerMP.username + "[" + var4 + "] logged in with entity id " + par2EntityPlayerMP.entityId + " at (" + par2EntityPlayerMP.posX + ", " + par2EntityPlayerMP.posY + ", " + par2EntityPlayerMP.posZ + ")");
+		mcServer.getLogAgent().logInfo(par2EntityPlayerMP.getCommandSenderName() + "[" + var4 + "] logged in with entity id " + par2EntityPlayerMP.entityId + " at (" + par2EntityPlayerMP.posX + ", " + par2EntityPlayerMP.posY + ", " + par2EntityPlayerMP.posZ + ")");
 		WorldServer var5 = mcServer.worldServerForDimension(par2EntityPlayerMP.dimension);
 		ChunkCoordinates var6 = var5.getSpawnPoint();
 		func_72381_a(par2EntityPlayerMP, (EntityPlayerMP) null, var5);
 		NetServerHandler var7 = new NetServerHandler(mcServer, par1INetworkManager, par2EntityPlayerMP);
 		var7.sendPacketToPlayer(new Packet1Login(par2EntityPlayerMP.entityId, var5.getWorldInfo().getTerrainType(), par2EntityPlayerMP.theItemInWorldManager.getGameType(), var5.getWorldInfo().isHardcoreModeEnabled(), var5.provider.dimensionId, var5.difficultySetting, var5.getHeight(), getMaxPlayers()));
+		var7.sendPacketToPlayer(new Packet250CustomPayload("MC|Brand", getServerInstance().getServerModName().getBytes(Charsets.UTF_8)));
 		var7.sendPacketToPlayer(new Packet6SpawnPosition(var6.posX, var6.posY, var6.posZ));
 		var7.sendPacketToPlayer(new Packet202PlayerAbilities(par2EntityPlayerMP.capabilities));
 		var7.sendPacketToPlayer(new Packet16BlockItemSwitch(par2EntityPlayerMP.inventory.currentItem));
 		func_96456_a((ServerScoreboard) var5.getScoreboard(), par2EntityPlayerMP);
 		updateTimeAndWeatherForPlayer(par2EntityPlayerMP, var5);
-		sendPacketToAllPlayers(new Packet3Chat(EnumChatFormatting.YELLOW + par2EntityPlayerMP.getTranslatedEntityName() + EnumChatFormatting.YELLOW + " joined the game."));
+		sendChatMsg(ChatMessageComponent.func_111082_b("multiplayer.player.joined", new Object[] { par2EntityPlayerMP.getTranslatedEntityName() }).func_111059_a(EnumChatFormatting.YELLOW));
 		playerLoggedIn(par2EntityPlayerMP);
 		var7.setPlayerLocation(par2EntityPlayerMP.posX, par2EntityPlayerMP.posY, par2EntityPlayerMP.posZ, par2EntityPlayerMP.rotationYaw, par2EntityPlayerMP.rotationPitch);
 		mcServer.getNetworkThread().addPlayer(var7);
-		var7.sendPacketToPlayer(new Packet4UpdateTime(var5.getTotalWorldTime(), var5.getWorldTime()));
+		var7.sendPacketToPlayer(new Packet4UpdateTime(var5.getTotalWorldTime(), var5.getWorldTime(), var5.getGameRules().getGameRuleBooleanValue("doDaylightCycle")));
 		if(mcServer.getTexturePack().length() > 0)
 		{
 			par2EntityPlayerMP.requestTexturePackLoad(mcServer.getTexturePack(), mcServer.textureSize());
@@ -434,7 +436,7 @@
 	
 	public void playerLoggedIn(EntityPlayerMP par1EntityPlayerMP)
 	{
-		sendPacketToAllPlayers(new Packet201PlayerInfo(par1EntityPlayerMP.username, true, 1000));
+		sendPacketToAllPlayers(new Packet201PlayerInfo(par1EntityPlayerMP.getCommandSenderName(), true, 1000));
 		playerEntityList.add(par1EntityPlayerMP);
 		WorldServer var2 = mcServer.worldServerForDimension(par1EntityPlayerMP.dimension);
 		var2.spawnEntityInWorld(par1EntityPlayerMP);
@@ -442,7 +444,7 @@
 		for(int var3 = 0; var3 < playerEntityList.size(); ++var3)
 		{
 			EntityPlayerMP var4 = (EntityPlayerMP) playerEntityList.get(var3);
-			par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet201PlayerInfo(var4.username, true, var4.ping));
+			par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet201PlayerInfo(var4.getCommandSenderName(), true, var4.ping));
 		}
 	}
 	
@@ -452,13 +454,13 @@
 		WorldServer var2 = par1EntityPlayerMP.getServerForPlayer();
 		if(par1EntityPlayerMP.ridingEntity != null)
 		{
-			var2.removeEntity(par1EntityPlayerMP.ridingEntity);
+			var2.removePlayerEntityDangerously(par1EntityPlayerMP.ridingEntity);
 			System.out.println("removing player mount");
 		}
 		var2.removeEntity(par1EntityPlayerMP);
 		var2.getPlayerManager().removePlayer(par1EntityPlayerMP);
 		playerEntityList.remove(par1EntityPlayerMP);
-		sendPacketToAllPlayers(new Packet201PlayerInfo(par1EntityPlayerMP.username, false, 9999));
+		sendPacketToAllPlayers(new Packet201PlayerInfo(par1EntityPlayerMP.getCommandSenderName(), false, 9999));
 	}
 	
 	public NBTTagCompound readPlayerDataFromFile(EntityPlayerMP par1EntityPlayerMP)
@@ -513,7 +515,7 @@
 		{
 			var6 = new ItemInWorldManager(mcServer.worldServerForDimension(par1EntityPlayerMP.dimension));
 		}
-		EntityPlayerMP var7 = new EntityPlayerMP(mcServer, mcServer.worldServerForDimension(par1EntityPlayerMP.dimension), par1EntityPlayerMP.username, (ItemInWorldManager) var6);
+		EntityPlayerMP var7 = new EntityPlayerMP(mcServer, mcServer.worldServerForDimension(par1EntityPlayerMP.dimension), par1EntityPlayerMP.getCommandSenderName(), (ItemInWorldManager) var6);
 		var7.playerNetServerHandler = par1EntityPlayerMP.playerNetServerHandler;
 		var7.clonePlayer(par1EntityPlayerMP, par3);
 		var7.entityId = par1EntityPlayerMP.entityId;
@@ -547,7 +549,7 @@
 		var8.spawnEntityInWorld(var7);
 		playerEntityList.add(var7);
 		var7.addSelfToInternalCraftingInventory();
-		var7.setEntityHealth(var7.getHealth());
+		var7.setEntityHealth(var7.func_110143_aJ());
 		return var7;
 	}
 	
@@ -559,10 +561,9 @@
 		}
 	}
 	
-	public void sendChatMsg(String par1Str)
+	public void sendChatMsg(ChatMessageComponent par1Str)
 	{
-		mcServer.logInfo(par1Str);
-		sendPacketToAllPlayers(new Packet3Chat(par1Str));
+		func_110459_a(par1Str, true);
 	}
 	
 	public void sendPacketToAllPlayers(Packet par1Packet)
@@ -594,7 +595,7 @@
 		if(playerPingIndex < playerEntityList.size())
 		{
 			EntityPlayerMP var1 = (EntityPlayerMP) playerEntityList.get(playerPingIndex);
-			sendPacketToAllPlayers(new Packet201PlayerInfo(var1.username, true, var1.ping));
+			sendPacketToAllPlayers(new Packet201PlayerInfo(var1.getCommandSenderName(), true, var1.ping));
 		}
 	}
 	
@@ -743,7 +744,7 @@
 	
 	public void updateTimeAndWeatherForPlayer(EntityPlayerMP par1EntityPlayerMP, WorldServer par2WorldServer)
 	{
-		par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet4UpdateTime(par2WorldServer.getTotalWorldTime(), par2WorldServer.getWorldTime()));
+		par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet4UpdateTime(par2WorldServer.getTotalWorldTime(), par2WorldServer.getWorldTime(), par2WorldServer.getGameRules().getGameRuleBooleanValue("doDaylightCycle")));
 		if(par2WorldServer.isRaining())
 		{
 			par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet70GameEvent(1, 0));
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerData.java b/RMCClient/minecraft/net/minecraft/src/ServerData.java
index 501eb7b..b18835e 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerData.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerData.java
@@ -7,27 +7,17 @@
 	public String populationInfo;
 	public String serverMOTD;
 	public long pingToServer;
-	public int field_82821_f = 61;
-	public String gameVersion = "1.5.2";
-	public boolean field_78841_f = false;
+	public int field_82821_f = 74;
+	public String gameVersion = "1.6.2";
+	public boolean field_78841_f;
 	private boolean field_78842_g = true;
-	private boolean acceptsTextures = false;
-	private boolean hideAddress = false;
+	private boolean acceptsTextures;
+	private boolean hideAddress;
 	
-	public ServerData(String par1Str, String par2Str)
+	public ServerData(String p_i1193_1_, String p_i1193_2_)
 	{
-		serverName = par1Str;
-		serverIP = par2Str;
-	}
-	
-	public boolean func_78840_c()
-	{
-		return field_78842_g;
-	}
-	
-	public boolean getAcceptsTextures()
-	{
-		return acceptsTextures;
+		serverName = p_i1193_1_;
+		serverIP = p_i1193_2_;
 	}
 	
 	public NBTTagCompound getNBTCompound()
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerList.java b/RMCClient/minecraft/net/minecraft/src/ServerList.java
index b9b46e7..4ce2aed 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerList.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerList.java
@@ -12,9 +12,9 @@
 	private final Minecraft mc;
 	private final List servers = new ArrayList();
 	
-	public ServerList(Minecraft par1Minecraft)
+	public ServerList(Minecraft p_i1194_1_)
 	{
-		mc = par1Minecraft;
+		mc = p_i1194_1_;
 		loadServerList();
 	}
 	
@@ -37,9 +37,10 @@
 	{
 		try
 		{
-			NBTTagCompound var1 = CompressedStreamTools.read(new File(mc.mcDataDir, "servers.dat"));
-			NBTTagList var2 = var1.getTagList("servers");
 			servers.clear();
+			NBTTagCompound var1 = CompressedStreamTools.read(new File(mc.mcDataDir, "servers.dat"));
+			if(var1 == null) return;
+			NBTTagList var2 = var1.getTagList("servers");
 			for(int var3 = 0; var3 < var2.tagCount(); ++var3)
 			{
 				servers.add(ServerData.getServerDataFromNBTCompound((NBTTagCompound) var2.tagAt(var3)));
@@ -75,32 +76,11 @@
 		}
 	}
 	
-	public void setServer(int par1, ServerData par2ServerData)
-	{
-		servers.set(par1, par2ServerData);
-	}
-	
 	public void swapServers(int par1, int par2)
 	{
 		ServerData var3 = getServerData(par1);
 		servers.set(par1, getServerData(par2));
 		servers.set(par2, var3);
 		saveServerList();
-	}
-	
-	public static void func_78852_b(ServerData par0ServerData)
-	{
-		ServerList var1 = new ServerList(Minecraft.getMinecraft());
-		var1.loadServerList();
-		for(int var2 = 0; var2 < var1.countServers(); ++var2)
-		{
-			ServerData var3 = var1.getServerData(var2);
-			if(var3.serverName.equals(par0ServerData.serverName) && var3.serverIP.equals(par0ServerData.serverIP))
-			{
-				var1.setServer(var2, par0ServerData);
-				break;
-			}
-		}
-		var1.saveServerList();
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerListenThread.java b/RMCClient/minecraft/net/minecraft/src/ServerListenThread.java
index 11bdaa4..2cedef9 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerListenThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerListenThread.java
@@ -13,19 +13,19 @@
 {
 	private final List pendingConnections = Collections.synchronizedList(new ArrayList());
 	private final HashMap recentConnections = new HashMap();
-	private int connectionCounter = 0;
+	private int connectionCounter;
 	private final ServerSocket myServerSocket;
 	private NetworkListenThread myNetworkListenThread;
 	private final InetAddress myServerAddress;
 	private final int myPort;
 	
-	public ServerListenThread(NetworkListenThread par1NetworkListenThread, InetAddress par2InetAddress, int par3) throws IOException
+	public ServerListenThread(NetworkListenThread p_i1510_1_, InetAddress p_i1510_2_, int p_i1510_3_) throws IOException
 	{
 		super("Listen thread");
-		myNetworkListenThread = par1NetworkListenThread;
-		myPort = par3;
-		myServerSocket = new ServerSocket(par3, 0, par2InetAddress);
-		myServerAddress = par2InetAddress == null ? myServerSocket.getInetAddress() : par2InetAddress;
+		myNetworkListenThread = p_i1510_1_;
+		myPort = p_i1510_3_;
+		myServerSocket = new ServerSocket(p_i1510_3_, 0, p_i1510_2_);
+		myServerAddress = p_i1510_2_ == null ? myServerSocket.getInetAddress() : p_i1510_2_;
 		myServerSocket.setPerformancePreferences(0, 2, 1);
 	}
 	
@@ -63,11 +63,6 @@
 				recentConnections.remove(par1InetAddress);
 			}
 		}
-	}
-	
-	public InetAddress getInetAddress()
-	{
-		return myServerAddress;
 	}
 	
 	public int getMyPort()
diff --git a/RMCClient/minecraft/net/minecraft/src/ServerScoreboard.java b/RMCClient/minecraft/net/minecraft/src/ServerScoreboard.java
index 41299a9..0eabe4d 100644
--- a/RMCClient/minecraft/net/minecraft/src/ServerScoreboard.java
+++ b/RMCClient/minecraft/net/minecraft/src/ServerScoreboard.java
@@ -15,9 +15,9 @@
 	private final Set field_96553_b = new HashSet();
 	private ScoreboardSaveData field_96554_c;
 	
-	public ServerScoreboard(MinecraftServer par1MinecraftServer)
+	public ServerScoreboard(MinecraftServer p_i1501_1_)
 	{
-		field_96555_a = par1MinecraftServer;
+		field_96555_a = p_i1501_1_;
 	}
 	
 	@Override public void func_96513_c(ScorePlayerTeam par1ScorePlayerTeam)
diff --git a/RMCClient/minecraft/net/minecraft/src/ServersideAttributeMap.java b/RMCClient/minecraft/net/minecraft/src/ServersideAttributeMap.java
new file mode 100644
index 0000000..e63265d
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ServersideAttributeMap.java
@@ -0,0 +1,82 @@
+package net.minecraft.src;
+
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.Set;
+
+public class ServersideAttributeMap extends BaseAttributeMap
+{
+	private final Set field_111162_d = Sets.newHashSet();
+	protected final Map field_111163_c = new LowerStringMap();
+	
+	@Override public void func_111149_a(ModifiableAttributeInstance p_111149_1_)
+	{
+		if(p_111149_1_.func_111123_a().func_111111_c())
+		{
+			field_111162_d.add(p_111149_1_);
+		}
+	}
+	
+	@Override public AttributeInstance func_111150_b(Attribute p_111150_1_)
+	{
+		if(field_111153_b.containsKey(p_111150_1_.func_111108_a())) throw new IllegalArgumentException("Attribute is already registered!");
+		else
+		{
+			ModifiableAttributeInstance var2 = new ModifiableAttributeInstance(this, p_111150_1_);
+			field_111153_b.put(p_111150_1_.func_111108_a(), var2);
+			if(p_111150_1_ instanceof RangedAttribute && ((RangedAttribute) p_111150_1_).func_111116_f() != null)
+			{
+				field_111163_c.put(((RangedAttribute) p_111150_1_).func_111116_f(), var2);
+			}
+			field_111154_a.put(p_111150_1_, var2);
+			return var2;
+		}
+	}
+	
+	@Override public AttributeInstance func_111151_a(Attribute p_111151_1_)
+	{
+		return func_111159_c(p_111151_1_);
+	}
+	
+	@Override public AttributeInstance func_111152_a(String p_111152_1_)
+	{
+		return func_111158_b(p_111152_1_);
+	}
+	
+	public ModifiableAttributeInstance func_111158_b(String p_111158_1_)
+	{
+		AttributeInstance var2 = super.func_111152_a(p_111158_1_);
+		if(var2 == null)
+		{
+			var2 = (AttributeInstance) field_111163_c.get(p_111158_1_);
+		}
+		return (ModifiableAttributeInstance) var2;
+	}
+	
+	public ModifiableAttributeInstance func_111159_c(Attribute p_111159_1_)
+	{
+		return (ModifiableAttributeInstance) super.func_111151_a(p_111159_1_);
+	}
+	
+	public Collection func_111160_c()
+	{
+		HashSet var1 = Sets.newHashSet();
+		Iterator var2 = func_111146_a().iterator();
+		while(var2.hasNext())
+		{
+			AttributeInstance var3 = (AttributeInstance) var2.next();
+			if(var3.func_111123_a().func_111111_c())
+			{
+				var1.add(var3);
+			}
+		}
+		return var1;
+	}
+	
+	public Set func_111161_b()
+	{
+		return field_111162_d;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Session.java b/RMCClient/minecraft/net/minecraft/src/Session.java
index 6c6c4b0..e3822b0 100644
--- a/RMCClient/minecraft/net/minecraft/src/Session.java
+++ b/RMCClient/minecraft/net/minecraft/src/Session.java
@@ -2,12 +2,22 @@
 
 public class Session
 {
-	public String username;
-	public String sessionId;
+	private final String username;
+	private final String sessionId;
 	
-	public Session(String par1Str, String par2Str)
+	public Session(String p_i1019_1_, String p_i1019_2_)
 	{
-		username = par1Str;
-		sessionId = par2Str;
+		username = p_i1019_1_;
+		sessionId = p_i1019_2_;
+	}
+	
+	public String func_111285_a()
+	{
+		return username;
+	}
+	
+	public String func_111286_b()
+	{
+		return sessionId;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ShapedRecipes.java b/RMCClient/minecraft/net/minecraft/src/ShapedRecipes.java
index 54c0e08..fb6f627 100644
--- a/RMCClient/minecraft/net/minecraft/src/ShapedRecipes.java
+++ b/RMCClient/minecraft/net/minecraft/src/ShapedRecipes.java
@@ -7,15 +7,15 @@
 	private ItemStack[] recipeItems;
 	private ItemStack recipeOutput;
 	public final int recipeOutputItemID;
-	private boolean field_92101_f = false;
+	private boolean field_92101_f;
 	
-	public ShapedRecipes(int par1, int par2, ItemStack[] par3ArrayOfItemStack, ItemStack par4ItemStack)
+	public ShapedRecipes(int p_i1917_1_, int p_i1917_2_, ItemStack[] p_i1917_3_, ItemStack p_i1917_4_)
 	{
-		recipeOutputItemID = par4ItemStack.itemID;
-		recipeWidth = par1;
-		recipeHeight = par2;
-		recipeItems = par3ArrayOfItemStack;
-		recipeOutput = par4ItemStack;
+		recipeOutputItemID = p_i1917_4_.itemID;
+		recipeWidth = p_i1917_1_;
+		recipeHeight = p_i1917_2_;
+		recipeItems = p_i1917_3_;
+		recipeOutput = p_i1917_4_;
 	}
 	
 	private boolean checkMatch(InventoryCrafting par1InventoryCrafting, int par2, int par3, boolean par4)
diff --git a/RMCClient/minecraft/net/minecraft/src/ShapelessRecipes.java b/RMCClient/minecraft/net/minecraft/src/ShapelessRecipes.java
index fa60af6..4f8a0fc 100644
--- a/RMCClient/minecraft/net/minecraft/src/ShapelessRecipes.java
+++ b/RMCClient/minecraft/net/minecraft/src/ShapelessRecipes.java
@@ -9,10 +9,10 @@
 	private final ItemStack recipeOutput;
 	private final List recipeItems;
 	
-	public ShapelessRecipes(ItemStack par1ItemStack, List par2List)
+	public ShapelessRecipes(ItemStack p_i1918_1_, List p_i1918_2_)
 	{
-		recipeOutput = par1ItemStack;
-		recipeItems = par2List;
+		recipeOutput = p_i1918_1_;
+		recipeItems = p_i1918_2_;
 	}
 	
 	@Override public ItemStack getCraftingResult(InventoryCrafting par1InventoryCrafting)
diff --git a/RMCClient/minecraft/net/minecraft/src/SharedMonsterAttributes.java b/RMCClient/minecraft/net/minecraft/src/SharedMonsterAttributes.java
new file mode 100644
index 0000000..5115808
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/SharedMonsterAttributes.java
@@ -0,0 +1,102 @@
+package net.minecraft.src;
+
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.UUID;
+
+public class SharedMonsterAttributes
+{
+	public static final Attribute field_111267_a = new RangedAttribute("generic.maxHealth", 20.0D, 0.0D, Double.MAX_VALUE).func_111117_a("Max Health").func_111112_a(true);
+	public static final Attribute field_111265_b = new RangedAttribute("generic.followRange", 32.0D, 0.0D, 2048.0D).func_111117_a("Follow Range");
+	public static final Attribute field_111266_c = new RangedAttribute("generic.knockbackResistance", 0.0D, 0.0D, 1.0D).func_111117_a("Knockback Resistance");
+	public static final Attribute field_111263_d = new RangedAttribute("generic.movementSpeed", 0.699999988079071D, 0.0D, Double.MAX_VALUE).func_111117_a("Movement Speed").func_111112_a(true);
+	public static final Attribute field_111264_e = new RangedAttribute("generic.attackDamage", 2.0D, 0.0D, Double.MAX_VALUE);
+	
+	public static NBTTagList func_111257_a(BaseAttributeMap p_111257_0_)
+	{
+		NBTTagList var1 = new NBTTagList();
+		Iterator var2 = p_111257_0_.func_111146_a().iterator();
+		while(var2.hasNext())
+		{
+			AttributeInstance var3 = (AttributeInstance) var2.next();
+			var1.appendTag(func_111261_a(var3));
+		}
+		return var1;
+	}
+	
+	private static void func_111258_a(AttributeInstance p_111258_0_, NBTTagCompound p_111258_1_)
+	{
+		p_111258_0_.func_111128_a(p_111258_1_.getDouble("Base"));
+		if(p_111258_1_.hasKey("Modifiers"))
+		{
+			NBTTagList var2 = p_111258_1_.getTagList("Modifiers");
+			for(int var3 = 0; var3 < var2.tagCount(); ++var3)
+			{
+				AttributeModifier var4 = func_111259_a((NBTTagCompound) var2.tagAt(var3));
+				AttributeModifier var5 = p_111258_0_.func_111127_a(var4.func_111167_a());
+				if(var5 != null)
+				{
+					p_111258_0_.func_111124_b(var5);
+				}
+				p_111258_0_.func_111121_a(var4);
+			}
+		}
+	}
+	
+	public static AttributeModifier func_111259_a(NBTTagCompound p_111259_0_)
+	{
+		UUID var1 = new UUID(p_111259_0_.getLong("UUIDMost"), p_111259_0_.getLong("UUIDLeast"));
+		return new AttributeModifier(var1, p_111259_0_.getString("Name"), p_111259_0_.getDouble("Amount"), p_111259_0_.getInteger("Operation"));
+	}
+	
+	public static void func_111260_a(BaseAttributeMap p_111260_0_, NBTTagList p_111260_1_, ILogAgent p_111260_2_)
+	{
+		for(int var3 = 0; var3 < p_111260_1_.tagCount(); ++var3)
+		{
+			NBTTagCompound var4 = (NBTTagCompound) p_111260_1_.tagAt(var3);
+			AttributeInstance var5 = p_111260_0_.func_111152_a(var4.getString("Name"));
+			if(var5 != null)
+			{
+				func_111258_a(var5, var4);
+			} else if(p_111260_2_ != null)
+			{
+				p_111260_2_.logWarning("Ignoring unknown attribute \'" + var4.getString("Name") + "\'");
+			}
+		}
+	}
+	
+	private static NBTTagCompound func_111261_a(AttributeInstance p_111261_0_)
+	{
+		NBTTagCompound var1 = new NBTTagCompound();
+		Attribute var2 = p_111261_0_.func_111123_a();
+		var1.setString("Name", var2.func_111108_a());
+		var1.setDouble("Base", p_111261_0_.func_111125_b());
+		Collection var3 = p_111261_0_.func_111122_c();
+		if(var3 != null && !var3.isEmpty())
+		{
+			NBTTagList var4 = new NBTTagList();
+			Iterator var5 = var3.iterator();
+			while(var5.hasNext())
+			{
+				AttributeModifier var6 = (AttributeModifier) var5.next();
+				if(var6.func_111165_e())
+				{
+					var4.appendTag(func_111262_a(var6));
+				}
+			}
+			var1.setTag("Modifiers", var4);
+		}
+		return var1;
+	}
+	
+	private static NBTTagCompound func_111262_a(AttributeModifier p_111262_0_)
+	{
+		NBTTagCompound var1 = new NBTTagCompound();
+		var1.setString("Name", p_111262_0_.func_111166_b());
+		var1.setDouble("Amount", p_111262_0_.func_111164_d());
+		var1.setInteger("Operation", p_111262_0_.func_111169_c());
+		var1.setLong("UUIDMost", p_111262_0_.func_111167_a().getMostSignificantBits());
+		var1.setLong("UUIDLeast", p_111262_0_.func_111167_a().getLeastSignificantBits());
+		return var1;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/SimpleReloadableResourceManager.java b/RMCClient/minecraft/net/minecraft/src/SimpleReloadableResourceManager.java
new file mode 100644
index 0000000..4a729bc
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/SimpleReloadableResourceManager.java
@@ -0,0 +1,94 @@
+package net.minecraft.src;
+
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+import net.minecraft.client.Minecraft;
+
+public class SimpleReloadableResourceManager implements ReloadableResourceManager
+{
+	private static final Joiner field_130074_a = Joiner.on(", ");
+	private final Map field_110548_a = Maps.newHashMap();
+	private final List field_110546_b = Lists.newArrayList();
+	private final Set field_135057_d = Sets.newLinkedHashSet();
+	private final MetadataSerializer field_110547_c;
+	
+	public SimpleReloadableResourceManager(MetadataSerializer p_i1299_1_)
+	{
+		field_110547_c = p_i1299_1_;
+	}
+	
+	@Override public Resource func_110536_a(ResourceLocation p_110536_1_) throws IOException
+	{
+		ResourceManager var2 = (ResourceManager) field_110548_a.get(p_110536_1_.func_110624_b());
+		if(var2 != null) return var2.func_110536_a(p_110536_1_);
+		else throw new FileNotFoundException(p_110536_1_.toString());
+	}
+	
+	@Override public void func_110541_a(List p_110541_1_)
+	{
+		func_110543_a();
+		Minecraft.getMinecraft().getLogAgent().logInfo("Reloading ResourceManager: " + field_130074_a.join(Iterables.transform(p_110541_1_, new SimpleReloadableResourceManagerINNER1(this))));
+		Iterator var2 = p_110541_1_.iterator();
+		while(var2.hasNext())
+		{
+			ResourcePack var3 = (ResourcePack) var2.next();
+			func_110545_a(var3);
+		}
+		func_110544_b();
+	}
+	
+	@Override public void func_110542_a(ResourceManagerReloadListener p_110542_1_)
+	{
+		field_110546_b.add(p_110542_1_);
+		p_110542_1_.func_110549_a(this);
+	}
+	
+	private void func_110543_a()
+	{
+		field_110548_a.clear();
+		field_135057_d.clear();
+	}
+	
+	private void func_110544_b()
+	{
+		Iterator var1 = field_110546_b.iterator();
+		while(var1.hasNext())
+		{
+			ResourceManagerReloadListener var2 = (ResourceManagerReloadListener) var1.next();
+			var2.func_110549_a(this);
+		}
+	}
+	
+	public void func_110545_a(ResourcePack p_110545_1_)
+	{
+		FallbackResourceManager var4;
+		for(Iterator var2 = p_110545_1_.func_110587_b().iterator(); var2.hasNext(); var4.func_110538_a(p_110545_1_))
+		{
+			String var3 = (String) var2.next();
+			field_135057_d.add(var3);
+			var4 = (FallbackResourceManager) field_110548_a.get(var3);
+			if(var4 == null)
+			{
+				var4 = new FallbackResourceManager(field_110547_c);
+				field_110548_a.put(var3, var4);
+			}
+		}
+	}
+	
+	@Override public Set func_135055_a()
+	{
+		return field_135057_d;
+	}
+	
+	@Override public List func_135056_b(ResourceLocation p_135056_1_) throws IOException
+	{
+		ResourceManager var2 = (ResourceManager) field_110548_a.get(p_135056_1_.func_110624_b());
+		if(var2 != null) return var2.func_135056_b(p_135056_1_);
+		else throw new FileNotFoundException(p_135056_1_.toString());
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/SimpleReloadableResourceManagerINNER1.java b/RMCClient/minecraft/net/minecraft/src/SimpleReloadableResourceManagerINNER1.java
new file mode 100644
index 0000000..e15ac31
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/SimpleReloadableResourceManagerINNER1.java
@@ -0,0 +1,22 @@
+package net.minecraft.src;
+
+
+class SimpleReloadableResourceManagerINNER1 implements Function
+{
+	final SimpleReloadableResourceManager field_130076_a;
+	
+	SimpleReloadableResourceManagerINNER1(SimpleReloadableResourceManager p_i1298_1_)
+	{
+		field_130076_a = p_i1298_1_;
+	}
+	
+	public Object apply(Object p_apply_1_)
+	{
+		return func_130075_a((ResourcePack) p_apply_1_);
+	}
+	
+	public String func_130075_a(ResourcePack p_130075_1_)
+	{
+		return p_130075_1_.func_130077_b();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/SimpleResource.java b/RMCClient/minecraft/net/minecraft/src/SimpleResource.java
new file mode 100644
index 0000000..90cf29b
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/SimpleResource.java
@@ -0,0 +1,77 @@
+package net.minecraft.src;
+
+import java.io.BufferedReader;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.util.Map;
+
+public class SimpleResource implements Resource
+{
+	private final Map field_110535_a = Maps.newHashMap();
+	private final ResourceLocation field_110533_b;
+	private final InputStream field_110534_c;
+	private final InputStream field_110531_d;
+	private final MetadataSerializer field_110532_e;
+	private boolean field_110529_f;
+	private JsonObject field_110530_g;
+	
+	public SimpleResource(ResourceLocation p_i1300_1_, InputStream p_i1300_2_, InputStream p_i1300_3_, MetadataSerializer p_i1300_4_)
+	{
+		field_110533_b = p_i1300_1_;
+		field_110534_c = p_i1300_2_;
+		field_110531_d = p_i1300_3_;
+		field_110532_e = p_i1300_4_;
+	}
+	
+	@Override public boolean equals(Object par1Obj)
+	{
+		if(this == par1Obj) return true;
+		else if(par1Obj instanceof SimpleResource)
+		{
+			SimpleResource var2 = (SimpleResource) par1Obj;
+			return field_110533_b != null ? field_110533_b.equals(var2.field_110533_b) : var2.field_110533_b == null;
+		} else return false;
+	}
+	
+	@Override public MetadataSection func_110526_a(String p_110526_1_)
+	{
+		if(!func_110528_c()) return null;
+		else
+		{
+			if(field_110530_g == null && !field_110529_f)
+			{
+				field_110529_f = true;
+				BufferedReader var2 = null;
+				try
+				{
+					var2 = new BufferedReader(new InputStreamReader(field_110531_d));
+					field_110530_g = new JsonParser().parse(var2).getAsJsonObject();
+				} finally
+				{
+					IOUtils.closeQuietly(var2);
+				}
+			}
+			MetadataSection var6 = (MetadataSection) field_110535_a.get(p_110526_1_);
+			if(var6 == null)
+			{
+				var6 = field_110532_e.func_110503_a(p_110526_1_, field_110530_g);
+			}
+			return var6;
+		}
+	}
+	
+	@Override public InputStream func_110527_b()
+	{
+		return field_110534_c;
+	}
+	
+	@Override public boolean func_110528_c()
+	{
+		return field_110531_d != null;
+	}
+	
+	@Override public int hashCode()
+	{
+		return field_110533_b == null ? 0 : field_110533_b.hashCode();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/SimpleTexture.java b/RMCClient/minecraft/net/minecraft/src/SimpleTexture.java
new file mode 100644
index 0000000..feb6514
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/SimpleTexture.java
@@ -0,0 +1,54 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.IOException;
+import java.io.InputStream;
+
+import javax.imageio.ImageIO;
+
+import net.minecraft.client.Minecraft;
+
+public class SimpleTexture extends AbstractTexture
+{
+	private final ResourceLocation field_110568_b;
+	
+	public SimpleTexture(ResourceLocation p_i1275_1_)
+	{
+		field_110568_b = p_i1275_1_;
+	}
+	
+	@Override public void func_110551_a(ResourceManager p_110551_1_) throws IOException
+	{
+		InputStream var2 = null;
+		try
+		{
+			Resource var3 = p_110551_1_.func_110536_a(field_110568_b);
+			var2 = var3.func_110527_b();
+			BufferedImage var4 = ImageIO.read(var2);
+			boolean var5 = false;
+			boolean var6 = false;
+			if(var3.func_110528_c())
+			{
+				try
+				{
+					TextureMetadataSection var7 = (TextureMetadataSection) var3.func_110526_a("texture");
+					if(var7 != null)
+					{
+						var5 = var7.func_110479_a();
+						var6 = var7.func_110480_b();
+					}
+				} catch(RuntimeException var11)
+				{
+					Minecraft.getMinecraft().getLogAgent().logWarningException("Failed reading metadata of: " + field_110568_b, var11);
+				}
+			}
+			TextureUtil.func_110989_a(func_110552_b(), var4, var5, var6);
+		} finally
+		{
+			if(var2 != null)
+			{
+				var2.close();
+			}
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Slot.java b/RMCClient/minecraft/net/minecraft/src/Slot.java
index d130712..01cc461 100644
--- a/RMCClient/minecraft/net/minecraft/src/Slot.java
+++ b/RMCClient/minecraft/net/minecraft/src/Slot.java
@@ -8,12 +8,12 @@
 	public int xDisplayPosition;
 	public int yDisplayPosition;
 	
-	public Slot(IInventory par1IInventory, int par2, int par3, int par4)
+	public Slot(IInventory p_i1824_1_, int p_i1824_2_, int p_i1824_3_, int p_i1824_4_)
 	{
-		inventory = par1IInventory;
-		slotIndex = par2;
-		xDisplayPosition = par3;
-		yDisplayPosition = par4;
+		inventory = p_i1824_1_;
+		slotIndex = p_i1824_2_;
+		xDisplayPosition = p_i1824_3_;
+		yDisplayPosition = p_i1824_4_;
 	}
 	
 	public boolean canTakeStack(EntityPlayer par1EntityPlayer)
@@ -26,6 +26,11 @@
 		return inventory.decrStackSize(slotIndex, par1);
 	}
 	
+	public boolean func_111238_b()
+	{
+		return true;
+	}
+	
 	public Icon getBackgroundIconIndex()
 	{
 		return null;
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotArmor.java b/RMCClient/minecraft/net/minecraft/src/SlotArmor.java
index 2e4b89c..f5cdd30 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotArmor.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotArmor.java
@@ -5,11 +5,11 @@
 	final int armorType;
 	final ContainerPlayer parent;
 	
-	SlotArmor(ContainerPlayer par1ContainerPlayer, IInventory par2IInventory, int par3, int par4, int par5, int par6)
+	SlotArmor(ContainerPlayer p_i1818_1_, IInventory p_i1818_2_, int p_i1818_3_, int p_i1818_4_, int p_i1818_5_, int p_i1818_6_)
 	{
-		super(par2IInventory, par3, par4, par5);
-		parent = par1ContainerPlayer;
-		armorType = par6;
+		super(p_i1818_2_, p_i1818_3_, p_i1818_4_, p_i1818_5_);
+		parent = p_i1818_1_;
+		armorType = p_i1818_6_;
 	}
 	
 	@Override public Icon getBackgroundIconIndex()
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotBeacon.java b/RMCClient/minecraft/net/minecraft/src/SlotBeacon.java
index 7f3e846..7d5712b 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotBeacon.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotBeacon.java
@@ -4,10 +4,10 @@
 {
 	final ContainerBeacon beacon;
 	
-	public SlotBeacon(ContainerBeacon par1ContainerBeacon, IInventory par2IInventory, int par3, int par4, int par5)
+	public SlotBeacon(ContainerBeacon p_i1801_1_, IInventory p_i1801_2_, int p_i1801_3_, int p_i1801_4_, int p_i1801_5_)
 	{
-		super(par2IInventory, par3, par4, par5);
-		beacon = par1ContainerBeacon;
+		super(p_i1801_2_, p_i1801_3_, p_i1801_4_, p_i1801_5_);
+		beacon = p_i1801_1_;
 	}
 	
 	@Override public int getSlotStackLimit()
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotBrewingStandIngredient.java b/RMCClient/minecraft/net/minecraft/src/SlotBrewingStandIngredient.java
index f8f796b..f3fa71b 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotBrewingStandIngredient.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotBrewingStandIngredient.java
@@ -4,10 +4,10 @@
 {
 	final ContainerBrewingStand brewingStand;
 	
-	public SlotBrewingStandIngredient(ContainerBrewingStand par1ContainerBrewingStand, IInventory par2IInventory, int par3, int par4, int par5)
+	public SlotBrewingStandIngredient(ContainerBrewingStand p_i1803_1_, IInventory p_i1803_2_, int p_i1803_3_, int p_i1803_4_, int p_i1803_5_)
 	{
-		super(par2IInventory, par3, par4, par5);
-		brewingStand = par1ContainerBrewingStand;
+		super(p_i1803_2_, p_i1803_3_, p_i1803_4_, p_i1803_5_);
+		brewingStand = p_i1803_1_;
 	}
 	
 	@Override public int getSlotStackLimit()
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotBrewingStandPotion.java b/RMCClient/minecraft/net/minecraft/src/SlotBrewingStandPotion.java
index e04888a..686c9f6 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotBrewingStandPotion.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotBrewingStandPotion.java
@@ -4,10 +4,10 @@
 {
 	private EntityPlayer player;
 	
-	public SlotBrewingStandPotion(EntityPlayer par1EntityPlayer, IInventory par2IInventory, int par3, int par4, int par5)
+	public SlotBrewingStandPotion(EntityPlayer p_i1804_1_, IInventory p_i1804_2_, int p_i1804_3_, int p_i1804_4_, int p_i1804_5_)
 	{
-		super(par2IInventory, par3, par4, par5);
-		player = par1EntityPlayer;
+		super(p_i1804_2_, p_i1804_3_, p_i1804_4_, p_i1804_5_);
+		player = p_i1804_1_;
 	}
 	
 	@Override public int getSlotStackLimit()
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotCrafting.java b/RMCClient/minecraft/net/minecraft/src/SlotCrafting.java
index 2ee376b..f2c49c7 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotCrafting.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotCrafting.java
@@ -6,11 +6,11 @@
 	private EntityPlayer thePlayer;
 	private int amountCrafted;
 	
-	public SlotCrafting(EntityPlayer par1EntityPlayer, IInventory par2IInventory, IInventory par3IInventory, int par4, int par5, int par6)
+	public SlotCrafting(EntityPlayer p_i1823_1_, IInventory p_i1823_2_, IInventory p_i1823_3_, int p_i1823_4_, int p_i1823_5_, int p_i1823_6_)
 	{
-		super(par3IInventory, par4, par5, par6);
-		thePlayer = par1EntityPlayer;
-		craftMatrix = par2IInventory;
+		super(p_i1823_3_, p_i1823_4_, p_i1823_5_, p_i1823_6_);
+		thePlayer = p_i1823_1_;
+		craftMatrix = p_i1823_2_;
 	}
 	
 	@Override public ItemStack decrStackSize(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotCreativeInventory.java b/RMCClient/minecraft/net/minecraft/src/SlotCreativeInventory.java
index cb50b67..40f680a 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotCreativeInventory.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotCreativeInventory.java
@@ -5,11 +5,11 @@
 	private final Slot theSlot;
 	final GuiContainerCreative theCreativeInventory;
 	
-	public SlotCreativeInventory(GuiContainerCreative par1GuiContainerCreative, Slot par2Slot, int par3)
+	public SlotCreativeInventory(GuiContainerCreative p_i1087_1_, Slot p_i1087_2_, int p_i1087_3_)
 	{
-		super(par2Slot.inventory, par3, 0, 0);
-		theCreativeInventory = par1GuiContainerCreative;
-		theSlot = par2Slot;
+		super(p_i1087_2_.inventory, p_i1087_3_, 0, 0);
+		theCreativeInventory = p_i1087_1_;
+		theSlot = p_i1087_2_;
 	}
 	
 	@Override public ItemStack decrStackSize(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotEnchantment.java b/RMCClient/minecraft/net/minecraft/src/SlotEnchantment.java
index b131a11..487b6cd 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotEnchantment.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotEnchantment.java
@@ -4,10 +4,10 @@
 {
 	final ContainerEnchantment container;
 	
-	SlotEnchantment(ContainerEnchantment par1ContainerEnchantment, IInventory par2IInventory, int par3, int par4, int par5)
+	SlotEnchantment(ContainerEnchantment p_i1810_1_, IInventory p_i1810_2_, int p_i1810_3_, int p_i1810_4_, int p_i1810_5_)
 	{
-		super(par2IInventory, par3, par4, par5);
-		container = par1ContainerEnchantment;
+		super(p_i1810_2_, p_i1810_3_, p_i1810_4_, p_i1810_5_);
+		container = p_i1810_1_;
 	}
 	
 	@Override public boolean isItemValid(ItemStack par1ItemStack)
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotEnchantmentTable.java b/RMCClient/minecraft/net/minecraft/src/SlotEnchantmentTable.java
index a3ff27a..0a1f69b 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotEnchantmentTable.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotEnchantmentTable.java
@@ -4,10 +4,10 @@
 {
 	final ContainerEnchantment container;
 	
-	SlotEnchantmentTable(ContainerEnchantment par1ContainerEnchantment, String par2Str, boolean par3, int par4)
+	SlotEnchantmentTable(ContainerEnchantment p_i1809_1_, String p_i1809_2_, boolean p_i1809_3_, int p_i1809_4_)
 	{
-		super(par2Str, par3, par4);
-		container = par1ContainerEnchantment;
+		super(p_i1809_2_, p_i1809_3_, p_i1809_4_);
+		container = p_i1809_1_;
 	}
 	
 	@Override public int getInventoryStackLimit()
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotFurnace.java b/RMCClient/minecraft/net/minecraft/src/SlotFurnace.java
index f51f5e1..5cdc3d9 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotFurnace.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotFurnace.java
@@ -5,10 +5,10 @@
 	private EntityPlayer thePlayer;
 	private int field_75228_b;
 	
-	public SlotFurnace(EntityPlayer par1EntityPlayer, IInventory par2IInventory, int par3, int par4, int par5)
+	public SlotFurnace(EntityPlayer p_i1813_1_, IInventory p_i1813_2_, int p_i1813_3_, int p_i1813_4_, int p_i1813_5_)
 	{
-		super(par2IInventory, par3, par4, par5);
-		thePlayer = par1EntityPlayer;
+		super(p_i1813_2_, p_i1813_3_, p_i1813_4_, p_i1813_5_);
+		thePlayer = p_i1813_1_;
 	}
 	
 	@Override public ItemStack decrStackSize(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotMerchantResult.java b/RMCClient/minecraft/net/minecraft/src/SlotMerchantResult.java
index ef78131..2ca8f62 100644
--- a/RMCClient/minecraft/net/minecraft/src/SlotMerchantResult.java
+++ b/RMCClient/minecraft/net/minecraft/src/SlotMerchantResult.java
@@ -7,12 +7,12 @@
 	private int field_75231_g;
 	private final IMerchant theMerchant;
 	
-	public SlotMerchantResult(EntityPlayer par1EntityPlayer, IMerchant par2IMerchant, InventoryMerchant par3InventoryMerchant, int par4, int par5, int par6)
+	public SlotMerchantResult(EntityPlayer p_i1822_1_, IMerchant p_i1822_2_, InventoryMerchant p_i1822_3_, int p_i1822_4_, int p_i1822_5_, int p_i1822_6_)
 	{
-		super(par3InventoryMerchant, par4, par5, par6);
-		thePlayer = par1EntityPlayer;
-		theMerchant = par2IMerchant;
-		theMerchantInventory = par3InventoryMerchant;
+		super(p_i1822_3_, p_i1822_4_, p_i1822_5_, p_i1822_6_);
+		thePlayer = p_i1822_1_;
+		theMerchant = p_i1822_2_;
+		theMerchantInventory = p_i1822_3_;
 	}
 	
 	@Override public ItemStack decrStackSize(int par1)
@@ -72,6 +72,7 @@
 			ItemStack var5 = theMerchantInventory.getStackInSlot(1);
 			if(func_75230_a(var3, var4, var5) || func_75230_a(var3, var5, var4))
 			{
+				theMerchant.useRecipe(var3);
 				if(var4 != null && var4.stackSize <= 0)
 				{
 					var4 = null;
@@ -82,7 +83,6 @@
 				}
 				theMerchantInventory.setInventorySlotContents(0, var4);
 				theMerchantInventory.setInventorySlotContents(1, var5);
-				theMerchant.useRecipe(var3);
 			}
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/SlotRepair.java b/RMCClient/minecraft/net/minecraft/src/SlotRepair.java
deleted file mode 100644
index c7f4374..0000000
--- a/RMCClient/minecraft/net/minecraft/src/SlotRepair.java
+++ /dev/null
@@ -1,74 +0,0 @@
-package net.minecraft.src;
-
-class SlotRepair extends Slot
-{
-	final World theWorld;
-	final int blockPosX;
-	final int blockPosY;
-	final int blockPosZ;
-	final ContainerRepair anvil;
-	
-	SlotRepair(ContainerRepair par1ContainerRepair, IInventory par2IInventory, int par3, int par4, int par5, World par6World, int par7, int par8, int par9)
-	{
-		super(par2IInventory, par3, par4, par5);
-		anvil = par1ContainerRepair;
-		theWorld = par6World;
-		blockPosX = par7;
-		blockPosY = par8;
-		blockPosZ = par9;
-	}
-	
-	@Override public boolean canTakeStack(EntityPlayer par1EntityPlayer)
-	{
-		return (par1EntityPlayer.capabilities.isCreativeMode || par1EntityPlayer.experienceLevel >= anvil.maximumCost) && anvil.maximumCost > 0 && getHasStack();
-	}
-	
-	@Override public boolean isItemValid(ItemStack par1ItemStack)
-	{
-		return false;
-	}
-	
-	@Override public void onPickupFromSlot(EntityPlayer par1EntityPlayer, ItemStack par2ItemStack)
-	{
-		if(!par1EntityPlayer.capabilities.isCreativeMode)
-		{
-			par1EntityPlayer.addExperienceLevel(-anvil.maximumCost);
-		}
-		ContainerRepair.getRepairInputInventory(anvil).setInventorySlotContents(0, (ItemStack) null);
-		if(ContainerRepair.getStackSizeUsedInRepair(anvil) > 0)
-		{
-			ItemStack var3 = ContainerRepair.getRepairInputInventory(anvil).getStackInSlot(1);
-			if(var3 != null && var3.stackSize > ContainerRepair.getStackSizeUsedInRepair(anvil))
-			{
-				var3.stackSize -= ContainerRepair.getStackSizeUsedInRepair(anvil);
-				ContainerRepair.getRepairInputInventory(anvil).setInventorySlotContents(1, var3);
-			} else
-			{
-				ContainerRepair.getRepairInputInventory(anvil).setInventorySlotContents(1, (ItemStack) null);
-			}
-		} else
-		{
-			ContainerRepair.getRepairInputInventory(anvil).setInventorySlotContents(1, (ItemStack) null);
-		}
-		anvil.maximumCost = 0;
-		if(!par1EntityPlayer.capabilities.isCreativeMode && !theWorld.isRemote && theWorld.getBlockId(blockPosX, blockPosY, blockPosZ) == Block.anvil.blockID && par1EntityPlayer.getRNG().nextFloat() < 0.12F)
-		{
-			int var6 = theWorld.getBlockMetadata(blockPosX, blockPosY, blockPosZ);
-			int var4 = var6 & 3;
-			int var5 = var6 >> 2;
-			++var5;
-			if(var5 > 2)
-			{
-				theWorld.setBlockToAir(blockPosX, blockPosY, blockPosZ);
-				theWorld.playAuxSFX(1020, blockPosX, blockPosY, blockPosZ, 0);
-			} else
-			{
-				theWorld.setBlockMetadataWithNotify(blockPosX, blockPosY, blockPosZ, var4 | var5 << 2, 2);
-				theWorld.playAuxSFX(1021, blockPosX, blockPosY, blockPosZ, 0);
-			}
-		} else if(!theWorld.isRemote)
-		{
-			theWorld.playAuxSFX(1021, blockPosX, blockPosY, blockPosZ, 0);
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/SorterStatsBlock.java b/RMCClient/minecraft/net/minecraft/src/SorterStatsBlock.java
index 05db388..e22e185 100644
--- a/RMCClient/minecraft/net/minecraft/src/SorterStatsBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/SorterStatsBlock.java
@@ -7,10 +7,10 @@
 	final GuiStats statsGUI;
 	final GuiSlotStatsBlock slotStatsBlockGUI;
 	
-	SorterStatsBlock(GuiSlotStatsBlock par1GuiSlotStatsBlock, GuiStats par2GuiStats)
+	SorterStatsBlock(GuiSlotStatsBlock p_i1065_1_, GuiStats p_i1065_2_)
 	{
-		slotStatsBlockGUI = par1GuiSlotStatsBlock;
-		statsGUI = par2GuiStats;
+		slotStatsBlockGUI = p_i1065_1_;
+		statsGUI = p_i1065_2_;
 	}
 	
 	@Override public int compare(Object par1Obj, Object par2Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/SorterStatsItem.java b/RMCClient/minecraft/net/minecraft/src/SorterStatsItem.java
index 8cc6a0a..a82ed1b 100644
--- a/RMCClient/minecraft/net/minecraft/src/SorterStatsItem.java
+++ b/RMCClient/minecraft/net/minecraft/src/SorterStatsItem.java
@@ -7,10 +7,10 @@
 	final GuiStats statsGUI;
 	final GuiSlotStatsItem slotStatsItemGUI;
 	
-	SorterStatsItem(GuiSlotStatsItem par1GuiSlotStatsItem, GuiStats par2GuiStats)
+	SorterStatsItem(GuiSlotStatsItem p_i1068_1_, GuiStats p_i1068_2_)
 	{
-		slotStatsItemGUI = par1GuiSlotStatsItem;
-		statsGUI = par2GuiStats;
+		slotStatsItemGUI = p_i1068_1_;
+		statsGUI = p_i1068_2_;
 	}
 	
 	@Override public int compare(Object par1Obj, Object par2Obj)
diff --git a/RMCClient/minecraft/net/minecraft/src/SoundManager.java b/RMCClient/minecraft/net/minecraft/src/SoundManager.java
index 88516bb..29b5e30 100644
--- a/RMCClient/minecraft/net/minecraft/src/SoundManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/SoundManager.java
@@ -2,6 +2,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
@@ -10,41 +11,60 @@
 
 import paulscode.sound.SoundSystem;
 import paulscode.sound.SoundSystemConfig;
+import paulscode.sound.SoundSystemException;
 import paulscode.sound.codecs.CodecJOrbis;
 import paulscode.sound.libraries.LibraryLWJGLOpenAL;
 
-public class SoundManager
+public class SoundManager implements ResourceManagerReloadListener
 {
-	private static SoundSystem sndSystem;
-	private SoundPool soundPoolSounds = new SoundPool();
-	private SoundPool soundPoolStreaming = new SoundPool();
-	private SoundPool soundPoolMusic = new SoundPool();
-	private int latestSoundID = 0;
-	private GameSettings options;
-	private Set playingSounds = new HashSet();
-	private List field_92072_h = new ArrayList();
-	private static boolean loaded = false;
+	private static final String[] field_130084_a = new String[] { "ogg" };
+	private SoundSystem sndSystem;
+	private boolean loaded;
+	private final SoundPool soundPoolSounds;
+	private final SoundPool soundPoolStreaming;
+	private final SoundPool soundPoolMusic;
+	private int latestSoundID;
+	private final GameSettings options;
+	private final File field_130085_i;
+	private final Set playingSounds = new HashSet();
+	private final List field_92072_h = new ArrayList();
 	private Random rand = new Random();
 	private int ticksBeforeMusic;
 	
-	public SoundManager()
+	public SoundManager(ResourceManager p_i1326_1_, GameSettings p_i1326_2_, File p_i1326_3_)
 	{
 		ticksBeforeMusic = rand.nextInt(12000);
+		options = p_i1326_2_;
+		field_130085_i = p_i1326_3_;
+		soundPoolSounds = new SoundPool(p_i1326_1_, "sound", true);
+		soundPoolStreaming = new SoundPool(p_i1326_1_, "records", false);
+		soundPoolMusic = new SoundPool(p_i1326_1_, "music", true);
+		try
+		{
+			SoundSystemConfig.addLibrary(LibraryLWJGLOpenAL.class);
+			SoundSystemConfig.setCodec("ogg", CodecJOrbis.class);
+			SoundSystemConfig.setCodec("wav", CodecWav.class);
+		} catch(SoundSystemException var5)
+		{
+			var5.printStackTrace();
+			System.err.println("error linking with the LibraryJavaSound plug-in");
+		}
+		func_130083_h();
 	}
 	
-	public void addMusic(String par1Str, File par2File)
+	public void addMusic(String par1Str)
 	{
-		soundPoolMusic.addSound(par1Str, par2File);
+		soundPoolMusic.addSound(par1Str);
 	}
 	
-	public void addSound(String par1Str, File par2File)
+	public void addSound(String par1Str)
 	{
-		soundPoolSounds.addSound(par1Str, par2File);
+		soundPoolSounds.addSound(par1Str);
 	}
 	
-	public void addStreaming(String par1Str, File par2File)
+	public void addStreaming(String par1Str)
 	{
-		soundPoolStreaming.addSound(par1Str, par2File);
+		soundPoolStreaming.addSound(par1Str);
 	}
 	
 	public void closeMinecraft()
@@ -52,6 +72,49 @@
 		if(loaded)
 		{
 			sndSystem.cleanup();
+			loaded = false;
+		}
+	}
+	
+	@Override public void func_110549_a(ResourceManager p_110549_1_)
+	{
+		stopAllSounds();
+		closeMinecraft();
+		tryToSetLibraryAndCodecs();
+	}
+	
+	private void func_130081_a(File p_130081_1_)
+	{
+		String var2 = field_130085_i.toURI().relativize(p_130081_1_.toURI()).getPath();
+		int var3 = var2.indexOf("/");
+		if(var3 != -1)
+		{
+			String var4 = var2.substring(0, var3);
+			var2 = var2.substring(var3 + 1);
+			if("sound".equalsIgnoreCase(var4))
+			{
+				addSound(var2);
+			} else if("records".equalsIgnoreCase(var4))
+			{
+				addStreaming(var2);
+			} else if("music".equalsIgnoreCase(var4))
+			{
+				addMusic(var2);
+			}
+		}
+	}
+	
+	private void func_130083_h()
+	{
+		if(field_130085_i.isDirectory())
+		{
+			Collection var1 = FileUtils.listFiles(field_130085_i, field_130084_a, true);
+			Iterator var2 = var1.iterator();
+			while(var2.hasNext())
+			{
+				File var3 = (File) var2.next();
+				func_130081_a(var3);
+			}
 		}
 	}
 	
@@ -87,22 +150,8 @@
 		} else return false;
 	}
 	
-	public void loadSoundSettings(GameSettings par1GameSettings)
-	{
-		soundPoolStreaming.isGetRandomSound = false;
-		options = par1GameSettings;
-		if(!loaded && (par1GameSettings == null || par1GameSettings.soundVolume != 0.0F || par1GameSettings.musicVolume != 0.0F))
-		{
-			tryToSetLibraryAndCodecs();
-		}
-	}
-	
 	public void onSoundOptionsChanged()
 	{
-		if(!loaded && (options.soundVolume != 0.0F || options.musicVolume != 0.0F))
-		{
-			tryToSetLibraryAndCodecs();
-		}
 		if(loaded)
 		{
 			if(options.musicVolume == 0.0F)
@@ -129,21 +178,20 @@
 	
 	public void playEntitySound(String par1Str, Entity par2Entity, float par3, float par4, boolean par5)
 	{
-		if(par2Entity != null)
+		if(loaded && (options.soundVolume != 0.0F || par1Str == null) && par2Entity != null)
 		{
-			if(loaded && (options.soundVolume != 0.0F || par1Str == null))
+			String var6 = "entity_" + par2Entity.entityId;
+			if(playingSounds.contains(var6))
 			{
-				String var6 = "entity_" + par2Entity.entityId;
-				if(playingSounds.contains(var6))
+				this.updateSoundLocation(par2Entity);
+			} else
+			{
+				if(sndSystem.playing(var6))
 				{
-					this.updateSoundLocation(par2Entity);
-				} else
+					sndSystem.stop(var6);
+				}
+				if(par1Str != null)
 				{
-					if(sndSystem.playing(var6))
-					{
-						sndSystem.stop(var6);
-					}
-					if(par1Str == null) return;
 					SoundPoolEntry var7 = soundPoolSounds.getRandomSoundFromSoundPool(par1Str);
 					if(var7 != null && par3 > 0.0F)
 					{
@@ -152,7 +200,7 @@
 						{
 							var8 *= par3;
 						}
-						sndSystem.newSource(par5, var6, var7.soundUrl, var7.soundName, false, (float) par2Entity.posX, (float) par2Entity.posY, (float) par2Entity.posZ, 2, var8);
+						sndSystem.newSource(par5, var6, var7.func_110457_b(), var7.func_110458_a(), false, (float) par2Entity.posX, (float) par2Entity.posY, (float) par2Entity.posZ, 2, var8);
 						sndSystem.setLooping(var6, true);
 						sndSystem.setPitch(var6, par4);
 						if(par3 > 1.0F)
@@ -178,15 +226,16 @@
 				if(ticksBeforeMusic > 0)
 				{
 					--ticksBeforeMusic;
-					return;
-				}
-				SoundPoolEntry var1 = soundPoolMusic.getRandomSound();
-				if(var1 != null)
+				} else
 				{
-					ticksBeforeMusic = rand.nextInt(12000) + 12000;
-					sndSystem.backgroundMusic("BgMusic", var1.soundUrl, var1.soundName, false);
-					sndSystem.setVolume("BgMusic", options.musicVolume);
-					sndSystem.play("BgMusic");
+					SoundPoolEntry var1 = soundPoolMusic.getRandomSound();
+					if(var1 != null)
+					{
+						ticksBeforeMusic = rand.nextInt(12000) + 12000;
+						sndSystem.backgroundMusic("BgMusic", var1.func_110457_b(), var1.func_110458_a(), false);
+						sndSystem.setVolume("BgMusic", options.musicVolume);
+						sndSystem.play("BgMusic");
+					}
 				}
 			}
 		}
@@ -206,12 +255,12 @@
 				{
 					var9 *= par5;
 				}
-				sndSystem.newSource(par5 > 1.0F, var8, var7.soundUrl, var7.soundName, false, par2, par3, par4, 2, var9);
-				sndSystem.setPitch(var8, par6);
+				sndSystem.newSource(par5 > 1.0F, var8, var7.func_110457_b(), var7.func_110458_a(), false, par2, par3, par4, 2, var9);
 				if(par5 > 1.0F)
 				{
 					par5 = 1.0F;
 				}
+				sndSystem.setPitch(var8, par6);
 				sndSystem.setVolume(var8, par5 * options.soundVolume);
 				sndSystem.play(var8);
 			}
@@ -223,11 +272,11 @@
 		if(loaded && options.soundVolume != 0.0F)
 		{
 			SoundPoolEntry var4 = soundPoolSounds.getRandomSoundFromSoundPool(par1Str);
-			if(var4 != null)
+			if(var4 != null && par2 > 0.0F)
 			{
 				latestSoundID = (latestSoundID + 1) % 256;
 				String var5 = "sound_" + latestSoundID;
-				sndSystem.newSource(false, var5, var4.soundUrl, var4.soundName, false, 0.0F, 0.0F, 0.0F, 0, 0.0F);
+				sndSystem.newSource(false, var5, var4.func_110457_b(), var4.func_110458_a(), false, 0.0F, 0.0F, 0.0F, 0, 0.0F);
 				if(par2 > 1.0F)
 				{
 					par2 = 1.0F;
@@ -258,8 +307,7 @@
 					{
 						sndSystem.stop("BgMusic");
 					}
-					float var7 = 16.0F;
-					sndSystem.newStreamingSource(true, var5, var6.soundUrl, var6.soundName, false, par2, par3, par4, 2, var7 * 4.0F);
+					sndSystem.newStreamingSource(true, var5, var6.func_110457_b(), var6.func_110458_a(), false, par2, par3, par4, 2, 64.0F);
 					sndSystem.setVolume(var5, 0.5F * options.soundVolume);
 					sndSystem.play(var5);
 				}
@@ -279,68 +327,62 @@
 	
 	public void setEntitySoundPitch(Entity par1Entity, float par2)
 	{
-		if(par1Entity != null && loaded)
+		if(par1Entity != null && loaded && options.soundVolume != 0.0F)
 		{
-			if(loaded && options.soundVolume != 0.0F)
+			String var3 = "entity_" + par1Entity.entityId;
+			if(sndSystem.playing(var3))
 			{
-				String var3 = "entity_" + par1Entity.entityId;
-				if(sndSystem.playing(var3))
-				{
-					sndSystem.setPitch(var3, par2);
-				}
+				sndSystem.setPitch(var3, par2);
 			}
 		}
 	}
 	
 	public void setEntitySoundVolume(Entity par1Entity, float par2)
 	{
-		if(par1Entity != null && loaded)
+		if(par1Entity != null && loaded && options.soundVolume != 0.0F)
 		{
-			if(loaded && options.soundVolume != 0.0F)
+			String var3 = "entity_" + par1Entity.entityId;
+			if(sndSystem.playing(var3))
 			{
-				String var3 = "entity_" + par1Entity.entityId;
-				if(sndSystem.playing(var3))
-				{
-					sndSystem.setVolume(var3, par2 * options.soundVolume);
-				}
+				sndSystem.setVolume(var3, par2 * options.soundVolume);
 			}
 		}
 	}
 	
-	public void setListener(EntityLiving par1EntityLiving, float par2)
+	public void setListener(EntityLivingBase par1EntityLiving, float par2)
 	{
-		if(loaded && options.soundVolume != 0.0F)
+		if(loaded && options.soundVolume != 0.0F && par1EntityLiving != null)
 		{
-			if(par1EntityLiving != null)
-			{
-				float var3 = par1EntityLiving.prevRotationPitch + (par1EntityLiving.rotationPitch - par1EntityLiving.prevRotationPitch) * par2;
-				float var4 = par1EntityLiving.prevRotationYaw + (par1EntityLiving.rotationYaw - par1EntityLiving.prevRotationYaw) * par2;
-				double var5 = par1EntityLiving.prevPosX + (par1EntityLiving.posX - par1EntityLiving.prevPosX) * par2;
-				double var7 = par1EntityLiving.prevPosY + (par1EntityLiving.posY - par1EntityLiving.prevPosY) * par2;
-				double var9 = par1EntityLiving.prevPosZ + (par1EntityLiving.posZ - par1EntityLiving.prevPosZ) * par2;
-				float var11 = MathHelper.cos(-var4 * 0.017453292F - (float) Math.PI);
-				float var12 = MathHelper.sin(-var4 * 0.017453292F - (float) Math.PI);
-				float var13 = -var12;
-				float var14 = -MathHelper.sin(-var3 * 0.017453292F - (float) Math.PI);
-				float var15 = -var11;
-				float var16 = 0.0F;
-				float var17 = 1.0F;
-				float var18 = 0.0F;
-				sndSystem.setListenerPosition((float) var5, (float) var7, (float) var9);
-				sndSystem.setListenerOrientation(var13, var14, var15, var16, var17, var18);
-			}
+			float var3 = par1EntityLiving.prevRotationPitch + (par1EntityLiving.rotationPitch - par1EntityLiving.prevRotationPitch) * par2;
+			float var4 = par1EntityLiving.prevRotationYaw + (par1EntityLiving.rotationYaw - par1EntityLiving.prevRotationYaw) * par2;
+			double var5 = par1EntityLiving.prevPosX + (par1EntityLiving.posX - par1EntityLiving.prevPosX) * par2;
+			double var7 = par1EntityLiving.prevPosY + (par1EntityLiving.posY - par1EntityLiving.prevPosY) * par2;
+			double var9 = par1EntityLiving.prevPosZ + (par1EntityLiving.posZ - par1EntityLiving.prevPosZ) * par2;
+			float var11 = MathHelper.cos(-var4 * 0.017453292F - (float) Math.PI);
+			float var12 = MathHelper.sin(-var4 * 0.017453292F - (float) Math.PI);
+			float var13 = -var12;
+			float var14 = -MathHelper.sin(-var3 * 0.017453292F - (float) Math.PI);
+			float var15 = -var11;
+			float var16 = 0.0F;
+			float var17 = 1.0F;
+			float var18 = 0.0F;
+			sndSystem.setListenerPosition((float) var5, (float) var7, (float) var9);
+			sndSystem.setListenerOrientation(var13, var14, var15, var16, var17, var18);
 		}
 	}
 	
 	public void stopAllSounds()
 	{
-		Iterator var1 = playingSounds.iterator();
-		while(var1.hasNext())
+		if(loaded)
 		{
-			String var2 = (String) var1.next();
-			sndSystem.stop(var2);
+			Iterator var1 = playingSounds.iterator();
+			while(var1.hasNext())
+			{
+				String var2 = (String) var1.next();
+				sndSystem.stop(var2);
+			}
+			playingSounds.clear();
 		}
-		playingSounds.clear();
 	}
 	
 	public void stopEntitySound(Entity par1Entity)
@@ -359,29 +401,29 @@
 		}
 	}
 	
-	private void tryToSetLibraryAndCodecs()
+	private synchronized void tryToSetLibraryAndCodecs()
 	{
-		try
+		if(!loaded)
 		{
 			float var1 = options.soundVolume;
 			float var2 = options.musicVolume;
 			options.soundVolume = 0.0F;
 			options.musicVolume = 0.0F;
 			options.saveOptions();
-			SoundSystemConfig.addLibrary(LibraryLWJGLOpenAL.class);
-			SoundSystemConfig.setCodec("ogg", CodecJOrbis.class);
-			SoundSystemConfig.setCodec("mus", CodecMus.class);
-			SoundSystemConfig.setCodec("wav", CodecWav.class);
-			sndSystem = new SoundSystem();
-			options.soundVolume = var1;
-			options.musicVolume = var2;
+			try
+			{
+				new Thread(new SoundManagerINNER1(this)).start();
+				options.soundVolume = var1;
+				options.musicVolume = var2;
+			} catch(RuntimeException var4)
+			{
+				var4.printStackTrace();
+				System.err.println("error starting SoundSystem turning off sounds & music");
+				options.soundVolume = 0.0F;
+				options.musicVolume = 0.0F;
+			}
 			options.saveOptions();
-		} catch(Throwable var3)
-		{
-			var3.printStackTrace();
-			System.err.println("error linking with the LibraryJavaSound plug-in");
 		}
-		loaded = true;
 	}
 	
 	public void updateSoundLocation(Entity par1Entity)
@@ -404,4 +446,14 @@
 			}
 		}
 	}
+	
+	static SoundSystem func_130080_a(SoundManager p_130080_0_, SoundSystem p_130080_1_)
+	{
+		return p_130080_0_.sndSystem = p_130080_1_;
+	}
+	
+	static boolean func_130082_a(SoundManager p_130082_0_, boolean p_130082_1_)
+	{
+		return p_130082_0_.loaded = p_130082_1_;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/SoundManagerINNER1.java b/RMCClient/minecraft/net/minecraft/src/SoundManagerINNER1.java
new file mode 100644
index 0000000..ab3cc9a
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/SoundManagerINNER1.java
@@ -0,0 +1,19 @@
+package net.minecraft.src;
+
+import paulscode.sound.SoundSystem;
+
+class SoundManagerINNER1 implements Runnable
+{
+	final SoundManager field_130090_a;
+	
+	SoundManagerINNER1(SoundManager p_i1324_1_)
+	{
+		field_130090_a = p_i1324_1_;
+	}
+	
+	@Override public void run()
+	{
+		SoundManager.func_130080_a(field_130090_a, new SoundSystem());
+		SoundManager.func_130082_a(field_130090_a, true);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/SoundPool.java b/RMCClient/minecraft/net/minecraft/src/SoundPool.java
index a05e5e9..e9c35c5 100644
--- a/RMCClient/minecraft/net/minecraft/src/SoundPool.java
+++ b/RMCClient/minecraft/net/minecraft/src/SoundPool.java
@@ -1,26 +1,32 @@
 package net.minecraft.src;
 
-import java.io.File;
 import java.net.MalformedURLException;
+import java.net.URL;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Random;
 
 public class SoundPool
 {
-	private Random rand = new Random();
-	private Map nameToSoundPoolEntriesMapping = new HashMap();
-	private List allSoundPoolEntries = new ArrayList();
-	public int numberOfSoundPoolEntries = 0;
-	public boolean isGetRandomSound = true;
+	private final Random rand = new Random();
+	private final Map nameToSoundPoolEntriesMapping = Maps.newHashMap();
+	private final ResourceManager field_110657_c;
+	private final String field_110656_d;
+	private final boolean isGetRandomSound;
 	
-	public SoundPoolEntry addSound(String par1Str, File par2File)
+	public SoundPool(ResourceManager p_i1330_1_, String p_i1330_2_, boolean p_i1330_3_)
+	{
+		field_110657_c = p_i1330_1_;
+		field_110656_d = p_i1330_2_;
+		isGetRandomSound = p_i1330_3_;
+	}
+	
+	public void addSound(String par1Str)
 	{
 		try
 		{
-			String var3 = par1Str;
+			String var2 = par1Str;
 			par1Str = par1Str.substring(0, par1Str.indexOf("."));
 			if(isGetRandomSound)
 			{
@@ -30,25 +36,36 @@
 				}
 			}
 			par1Str = par1Str.replaceAll("/", ".");
-			if(!nameToSoundPoolEntriesMapping.containsKey(par1Str))
+			Object var3 = nameToSoundPoolEntriesMapping.get(par1Str);
+			if(var3 == null)
 			{
-				nameToSoundPoolEntriesMapping.put(par1Str, new ArrayList());
+				var3 = Lists.newArrayList();
+				nameToSoundPoolEntriesMapping.put(par1Str, var3);
 			}
-			SoundPoolEntry var4 = new SoundPoolEntry(var3, par2File.toURI().toURL());
-			((List) nameToSoundPoolEntriesMapping.get(par1Str)).add(var4);
-			allSoundPoolEntries.add(var4);
-			++numberOfSoundPoolEntries;
-			return var4;
-		} catch(MalformedURLException var5)
+			((List) var3).add(new SoundPoolEntry(var2, func_110654_c(var2)));
+		} catch(MalformedURLException var4)
 		{
-			var5.printStackTrace();
-			throw new RuntimeException(var5);
+			var4.printStackTrace();
+			throw new RuntimeException(var4);
 		}
+	}
+	
+	private URL func_110654_c(String p_110654_1_) throws MalformedURLException
+	{
+		ResourceLocation var2 = new ResourceLocation(p_110654_1_);
+		String var3 = String.format("%s:%s:%s/%s", new Object[] { "mcsounddomain", var2.func_110624_b(), field_110656_d, var2.func_110623_a() });
+		SoundPoolProtocolHandler var4 = new SoundPoolProtocolHandler(this);
+		return new URL((URL) null, var3, var4);
 	}
 	
 	public SoundPoolEntry getRandomSound()
 	{
-		return allSoundPoolEntries.isEmpty() ? null : (SoundPoolEntry) allSoundPoolEntries.get(rand.nextInt(allSoundPoolEntries.size()));
+		if(nameToSoundPoolEntriesMapping.isEmpty()) return null;
+		else
+		{
+			ArrayList var1 = Lists.newArrayList(nameToSoundPoolEntriesMapping.keySet());
+			return getRandomSoundFromSoundPool((String) var1.get(rand.nextInt(var1.size())));
+		}
 	}
 	
 	public SoundPoolEntry getRandomSoundFromSoundPool(String par1Str)
@@ -56,4 +73,9 @@
 		List var2 = (List) nameToSoundPoolEntriesMapping.get(par1Str);
 		return var2 == null ? null : (SoundPoolEntry) var2.get(rand.nextInt(var2.size()));
 	}
+	
+	static ResourceManager func_110655_a(SoundPool p_110655_0_)
+	{
+		return p_110655_0_.field_110657_c;
+	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/SoundPoolEntry.java b/RMCClient/minecraft/net/minecraft/src/SoundPoolEntry.java
index c43c494..4038bfd 100644
--- a/RMCClient/minecraft/net/minecraft/src/SoundPoolEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/SoundPoolEntry.java
@@ -4,12 +4,22 @@
 
 public class SoundPoolEntry
 {
-	public String soundName;
-	public URL soundUrl;
+	private final String soundName;
+	private final URL soundUrl;
 	
-	public SoundPoolEntry(String par1Str, URL par2URL)
+	public SoundPoolEntry(String p_i1323_1_, URL p_i1323_2_)
 	{
-		soundName = par1Str;
-		soundUrl = par2URL;
+		soundName = p_i1323_1_;
+		soundUrl = p_i1323_2_;
+	}
+	
+	public URL func_110457_b()
+	{
+		return soundUrl;
+	}
+	
+	public String func_110458_a()
+	{
+		return soundName;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/SoundPoolProtocolHandler.java b/RMCClient/minecraft/net/minecraft/src/SoundPoolProtocolHandler.java
new file mode 100644
index 0000000..8bf2639
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/SoundPoolProtocolHandler.java
@@ -0,0 +1,20 @@
+package net.minecraft.src;
+
+import java.net.URL;
+import java.net.URLConnection;
+import java.net.URLStreamHandler;
+
+class SoundPoolProtocolHandler extends URLStreamHandler
+{
+	final SoundPool field_110658_a;
+	
+	SoundPoolProtocolHandler(SoundPool p_i1327_1_)
+	{
+		field_110658_a = p_i1327_1_;
+	}
+	
+	@Override protected URLConnection openConnection(URL p_openConnection_1_)
+	{
+		return new SoundPoolURLConnection(field_110658_a, p_openConnection_1_, (SoundPoolProtocolHandler) null);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/SoundPoolURLConnection.java b/RMCClient/minecraft/net/minecraft/src/SoundPoolURLConnection.java
new file mode 100644
index 0000000..900676e
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/SoundPoolURLConnection.java
@@ -0,0 +1,38 @@
+package net.minecraft.src;
+
+import java.io.InputStream;
+import java.net.URL;
+import java.net.URLConnection;
+
+class SoundPoolURLConnection extends URLConnection
+{
+	private final ResourceLocation field_110659_b;
+	final SoundPool field_110660_a;
+	
+	private SoundPoolURLConnection(SoundPool p_i1328_1_, URL p_i1328_2_)
+	{
+		super(p_i1328_2_);
+		field_110660_a = p_i1328_1_;
+		field_110659_b = new ResourceLocation(p_i1328_2_.getPath());
+	}
+	
+	SoundPoolURLConnection(SoundPool p_i1329_1_, URL p_i1329_2_, SoundPoolProtocolHandler p_i1329_3_)
+	{
+		this(p_i1329_1_, p_i1329_2_);
+	}
+	
+	@Override public void connect()
+	{
+	}
+	
+	@Override public InputStream getInputStream()
+	{
+		try
+		{
+			return SoundPool.func_110655_a(field_110660_a).func_110536_a(field_110659_b).func_110527_b();
+		} catch(Exception ex)
+		{
+			return null;
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/SoundUpdaterMinecart.java b/RMCClient/minecraft/net/minecraft/src/SoundUpdaterMinecart.java
index 266e94b..19288df 100644
--- a/RMCClient/minecraft/net/minecraft/src/SoundUpdaterMinecart.java
+++ b/RMCClient/minecraft/net/minecraft/src/SoundUpdaterMinecart.java
@@ -5,20 +5,20 @@
 	private final SoundManager theSoundManager;
 	private final EntityMinecart theMinecart;
 	private final EntityPlayerSP thePlayer;
-	private boolean playerSPRidingMinecart = false;
-	private boolean minecartIsDead = false;
-	private boolean minecartIsMoving = false;
-	private boolean silent = false;
-	private float minecartSoundPitch = 0.0F;
-	private float minecartMoveSoundVolume = 0.0F;
-	private float minecartRideSoundVolume = 0.0F;
-	private double minecartSpeed = 0.0D;
+	private boolean playerSPRidingMinecart;
+	private boolean minecartIsDead;
+	private boolean minecartIsMoving;
+	private boolean silent;
+	private float minecartSoundPitch;
+	private float minecartMoveSoundVolume;
+	private float minecartRideSoundVolume;
+	private double minecartSpeed;
 	
-	public SoundUpdaterMinecart(SoundManager par1SoundManager, EntityMinecart par2EntityMinecart, EntityPlayerSP par3EntityPlayerSP)
+	public SoundUpdaterMinecart(SoundManager p_i1322_1_, EntityMinecart p_i1322_2_, EntityPlayerSP p_i1322_3_)
 	{
-		theSoundManager = par1SoundManager;
-		theMinecart = par2EntityMinecart;
-		thePlayer = par3EntityPlayerSP;
+		theSoundManager = p_i1322_1_;
+		theMinecart = p_i1322_2_;
+		thePlayer = p_i1322_3_;
 	}
 	
 	@Override public void update()
diff --git a/RMCClient/minecraft/net/minecraft/src/SpawnListEntry.java b/RMCClient/minecraft/net/minecraft/src/SpawnListEntry.java
index dd629f9..288916d 100644
--- a/RMCClient/minecraft/net/minecraft/src/SpawnListEntry.java
+++ b/RMCClient/minecraft/net/minecraft/src/SpawnListEntry.java
@@ -6,11 +6,11 @@
 	public int minGroupCount;
 	public int maxGroupCount;
 	
-	public SpawnListEntry(Class par1Class, int par2, int par3, int par4)
+	public SpawnListEntry(Class p_i1970_1_, int p_i1970_2_, int p_i1970_3_, int p_i1970_4_)
 	{
-		super(par2);
-		entityClass = par1Class;
-		minGroupCount = par3;
-		maxGroupCount = par4;
+		super(p_i1970_2_);
+		entityClass = p_i1970_1_;
+		minGroupCount = p_i1970_3_;
+		maxGroupCount = p_i1970_4_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/SpawnerAnimals.java b/RMCClient/minecraft/net/minecraft/src/SpawnerAnimals.java
index 3a23b2f..ec030de 100644
--- a/RMCClient/minecraft/net/minecraft/src/SpawnerAnimals.java
+++ b/RMCClient/minecraft/net/minecraft/src/SpawnerAnimals.java
@@ -7,8 +7,140 @@
 
 public final class SpawnerAnimals
 {
-	private static HashMap eligibleChunksForSpawning = new HashMap();
-	protected static final Class[] nightSpawnEntities = new Class[] { EntitySpider.class, EntityZombie.class, EntitySkeleton.class };
+	private HashMap eligibleChunksForSpawning = new HashMap();
+	
+	public int findChunksForSpawning(WorldServer par1, boolean par2, boolean par3, boolean p_77192_4_)
+	{
+		if(!par2 && !par3) return 0;
+		else
+		{
+			eligibleChunksForSpawning.clear();
+			int var5;
+			int var8;
+			for(var5 = 0; var5 < par1.playerEntities.size(); ++var5)
+			{
+				EntityPlayer var6 = (EntityPlayer) par1.playerEntities.get(var5);
+				int var7 = MathHelper.floor_double(var6.posX / 16.0D);
+				var8 = MathHelper.floor_double(var6.posZ / 16.0D);
+				byte var9 = 8;
+				for(int var10 = -var9; var10 <= var9; ++var10)
+				{
+					for(int var11 = -var9; var11 <= var9; ++var11)
+					{
+						boolean var12 = var10 == -var9 || var10 == var9 || var11 == -var9 || var11 == var9;
+						ChunkCoordIntPair var13 = new ChunkCoordIntPair(var10 + var7, var11 + var8);
+						if(!var12)
+						{
+							eligibleChunksForSpawning.put(var13, Boolean.valueOf(false));
+						} else if(!eligibleChunksForSpawning.containsKey(var13))
+						{
+							eligibleChunksForSpawning.put(var13, Boolean.valueOf(true));
+						}
+					}
+				}
+			}
+			var5 = 0;
+			ChunkCoordinates var34 = par1.getSpawnPoint();
+			EnumCreatureType[] var35 = EnumCreatureType.values();
+			var8 = var35.length;
+			for(int var36 = 0; var36 < var8; ++var36)
+			{
+				EnumCreatureType var37 = var35[var36];
+				if((!var37.getPeacefulCreature() || par3) && (var37.getPeacefulCreature() || par2) && (!var37.getAnimal() || p_77192_4_) && par1.countEntities(var37.getCreatureClass()) <= var37.getMaxNumberOfCreature() * eligibleChunksForSpawning.size() / 256)
+				{
+					Iterator var39 = eligibleChunksForSpawning.keySet().iterator();
+					label110: while(var39.hasNext())
+					{
+						ChunkCoordIntPair var38 = (ChunkCoordIntPair) var39.next();
+						if(!((Boolean) eligibleChunksForSpawning.get(var38)).booleanValue())
+						{
+							ChunkPosition var40 = getRandomSpawningPointInChunk(par1, var38.chunkXPos, var38.chunkZPos);
+							int var14 = var40.x;
+							int var15 = var40.y;
+							int var16 = var40.z;
+							if(!par1.isBlockNormalCube(var14, var15, var16) && par1.getBlockMaterial(var14, var15, var16) == var37.getCreatureMaterial())
+							{
+								int var17 = 0;
+								int var18 = 0;
+								while(var18 < 3)
+								{
+									int var19 = var14;
+									int var20 = var15;
+									int var21 = var16;
+									byte var22 = 6;
+									SpawnListEntry var23 = null;
+									EntityLivingData var24 = null;
+									int var25 = 0;
+									while(true)
+									{
+										if(var25 < 4)
+										{
+											label103:
+											{
+												var19 += par1.rand.nextInt(var22) - par1.rand.nextInt(var22);
+												var20 += par1.rand.nextInt(1) - par1.rand.nextInt(1);
+												var21 += par1.rand.nextInt(var22) - par1.rand.nextInt(var22);
+												if(canCreatureTypeSpawnAtLocation(var37, par1, var19, var20, var21))
+												{
+													float var26 = var19 + 0.5F;
+													float var27 = var20;
+													float var28 = var21 + 0.5F;
+													if(par1.getClosestPlayer(var26, var27, var28, 24.0D) == null)
+													{
+														float var29 = var26 - var34.posX;
+														float var30 = var27 - var34.posY;
+														float var31 = var28 - var34.posZ;
+														float var32 = var29 * var29 + var30 * var30 + var31 * var31;
+														if(var32 >= 576.0F)
+														{
+															if(var23 == null)
+															{
+																var23 = par1.spawnRandomCreature(var37, var19, var20, var21);
+																if(var23 == null)
+																{
+																	break label103;
+																}
+															}
+															EntityLiving var41;
+															try
+															{
+																var41 = (EntityLiving) var23.entityClass.getConstructor(new Class[] { World.class }).newInstance(new Object[] { par1 });
+															} catch(Exception var33)
+															{
+																var33.printStackTrace();
+																return var5;
+															}
+															var41.setLocationAndAngles(var26, var27, var28, par1.rand.nextFloat() * 360.0F, 0.0F);
+															if(var41.getCanSpawnHere())
+															{
+																++var17;
+																par1.spawnEntityInWorld(var41);
+																var24 = var41.func_110161_a(var24);
+																if(var17 >= var41.getMaxSpawnedInChunk())
+																{
+																	continue label110;
+																}
+															}
+															var5 += var17;
+														}
+													}
+												}
+												++var25;
+												continue;
+											}
+										}
+										++var18;
+										break;
+									}
+								}
+							}
+						}
+					}
+				}
+			}
+			return var5;
+		}
+	}
 	
 	public static boolean canCreatureTypeSpawnAtLocation(EnumCreatureType par0EnumCreatureType, World par1World, int par2, int par3, int par4)
 	{
@@ -18,143 +150,6 @@
 		{
 			int var5 = par1World.getBlockId(par2, par3 - 1, par4);
 			return var5 != Block.bedrock.blockID && !par1World.isBlockNormalCube(par2, par3, par4) && !par1World.getBlockMaterial(par2, par3, par4).isLiquid() && !par1World.isBlockNormalCube(par2, par3 + 1, par4);
-		}
-	}
-	
-	private static void creatureSpecificInit(EntityLiving par0EntityLiving, World par1World, float par2, float par3, float par4)
-	{
-		par0EntityLiving.initCreature();
-	}
-	
-	public static final int findChunksForSpawning(WorldServer par0WorldServer, boolean par1, boolean par2, boolean par3)
-	{
-		if(!par1 && !par2) return 0;
-		else
-		{
-			eligibleChunksForSpawning.clear();
-			int var4;
-			int var7;
-			for(var4 = 0; var4 < par0WorldServer.playerEntities.size(); ++var4)
-			{
-				EntityPlayer var5 = (EntityPlayer) par0WorldServer.playerEntities.get(var4);
-				int var6 = MathHelper.floor_double(var5.posX / 16.0D);
-				var7 = MathHelper.floor_double(var5.posZ / 16.0D);
-				byte var8 = 8;
-				for(int var9 = -var8; var9 <= var8; ++var9)
-				{
-					for(int var10 = -var8; var10 <= var8; ++var10)
-					{
-						boolean var11 = var9 == -var8 || var9 == var8 || var10 == -var8 || var10 == var8;
-						ChunkCoordIntPair var12 = new ChunkCoordIntPair(var9 + var6, var10 + var7);
-						if(!var11)
-						{
-							eligibleChunksForSpawning.put(var12, Boolean.valueOf(false));
-						} else if(!eligibleChunksForSpawning.containsKey(var12))
-						{
-							eligibleChunksForSpawning.put(var12, Boolean.valueOf(true));
-						}
-					}
-				}
-			}
-			var4 = 0;
-			ChunkCoordinates var32 = par0WorldServer.getSpawnPoint();
-			EnumCreatureType[] var33 = EnumCreatureType.values();
-			var7 = var33.length;
-			for(int var34 = 0; var34 < var7; ++var34)
-			{
-				EnumCreatureType var35 = var33[var34];
-				if((!var35.getPeacefulCreature() || par2) && (var35.getPeacefulCreature() || par1) && (!var35.getAnimal() || par3) && par0WorldServer.countEntities(var35.getCreatureClass()) <= var35.getMaxNumberOfCreature() * eligibleChunksForSpawning.size() / 256)
-				{
-					Iterator var37 = eligibleChunksForSpawning.keySet().iterator();
-					label110: while(var37.hasNext())
-					{
-						ChunkCoordIntPair var36 = (ChunkCoordIntPair) var37.next();
-						if(!((Boolean) eligibleChunksForSpawning.get(var36)).booleanValue())
-						{
-							ChunkPosition var38 = getRandomSpawningPointInChunk(par0WorldServer, var36.chunkXPos, var36.chunkZPos);
-							int var13 = var38.x;
-							int var14 = var38.y;
-							int var15 = var38.z;
-							if(!par0WorldServer.isBlockNormalCube(var13, var14, var15) && par0WorldServer.getBlockMaterial(var13, var14, var15) == var35.getCreatureMaterial())
-							{
-								int var16 = 0;
-								int var17 = 0;
-								while(var17 < 3)
-								{
-									int var18 = var13;
-									int var19 = var14;
-									int var20 = var15;
-									byte var21 = 6;
-									SpawnListEntry var22 = null;
-									int var23 = 0;
-									while(true)
-									{
-										if(var23 < 4)
-										{
-											label103:
-											{
-												var18 += par0WorldServer.rand.nextInt(var21) - par0WorldServer.rand.nextInt(var21);
-												var19 += par0WorldServer.rand.nextInt(1) - par0WorldServer.rand.nextInt(1);
-												var20 += par0WorldServer.rand.nextInt(var21) - par0WorldServer.rand.nextInt(var21);
-												if(canCreatureTypeSpawnAtLocation(var35, par0WorldServer, var18, var19, var20))
-												{
-													float var24 = var18 + 0.5F;
-													float var25 = var19;
-													float var26 = var20 + 0.5F;
-													if(par0WorldServer.getClosestPlayer(var24, var25, var26, 24.0D) == null)
-													{
-														float var27 = var24 - var32.posX;
-														float var28 = var25 - var32.posY;
-														float var29 = var26 - var32.posZ;
-														float var30 = var27 * var27 + var28 * var28 + var29 * var29;
-														if(var30 >= 576.0F)
-														{
-															if(var22 == null)
-															{
-																var22 = par0WorldServer.spawnRandomCreature(var35, var18, var19, var20);
-																if(var22 == null)
-																{
-																	break label103;
-																}
-															}
-															EntityLiving var39;
-															try
-															{
-																var39 = (EntityLiving) var22.entityClass.getConstructor(new Class[] { World.class }).newInstance(new Object[] { par0WorldServer });
-															} catch(Exception var31)
-															{
-																var31.printStackTrace();
-																return var4;
-															}
-															var39.setLocationAndAngles(var24, var25, var26, par0WorldServer.rand.nextFloat() * 360.0F, 0.0F);
-															if(var39.getCanSpawnHere())
-															{
-																++var16;
-																par0WorldServer.spawnEntityInWorld(var39);
-																creatureSpecificInit(var39, par0WorldServer, var24, var25, var26);
-																if(var16 >= var39.getMaxSpawnedInChunk())
-																{
-																	continue label110;
-																}
-															}
-															var4 += var16;
-														}
-													}
-												}
-												++var23;
-												continue;
-											}
-										}
-										++var17;
-										break;
-									}
-								}
-							}
-						}
-					}
-				}
-			}
-			return var4;
 		}
 	}
 	
@@ -175,40 +170,41 @@
 			while(par6Random.nextFloat() < par1BiomeGenBase.getSpawningChance())
 			{
 				SpawnListEntry var8 = (SpawnListEntry) WeightedRandom.getRandomItem(par0World.rand, var7);
-				int var9 = var8.minGroupCount + par6Random.nextInt(1 + var8.maxGroupCount - var8.minGroupCount);
-				int var10 = par2 + par6Random.nextInt(par4);
-				int var11 = par3 + par6Random.nextInt(par5);
-				int var12 = var10;
+				EntityLivingData var9 = null;
+				int var10 = var8.minGroupCount + par6Random.nextInt(1 + var8.maxGroupCount - var8.minGroupCount);
+				int var11 = par2 + par6Random.nextInt(par4);
+				int var12 = par3 + par6Random.nextInt(par5);
 				int var13 = var11;
-				for(int var14 = 0; var14 < var9; ++var14)
+				int var14 = var12;
+				for(int var15 = 0; var15 < var10; ++var15)
 				{
-					boolean var15 = false;
-					for(int var16 = 0; !var15 && var16 < 4; ++var16)
+					boolean var16 = false;
+					for(int var17 = 0; !var16 && var17 < 4; ++var17)
 					{
-						int var17 = par0World.getTopSolidOrLiquidBlock(var10, var11);
-						if(canCreatureTypeSpawnAtLocation(EnumCreatureType.creature, par0World, var10, var17, var11))
+						int var18 = par0World.getTopSolidOrLiquidBlock(var11, var12);
+						if(canCreatureTypeSpawnAtLocation(EnumCreatureType.creature, par0World, var11, var18, var12))
 						{
-							float var18 = var10 + 0.5F;
-							float var19 = var17;
-							float var20 = var11 + 0.5F;
-							EntityLiving var21;
+							float var19 = var11 + 0.5F;
+							float var20 = var18;
+							float var21 = var12 + 0.5F;
+							EntityLiving var22;
 							try
 							{
-								var21 = (EntityLiving) var8.entityClass.getConstructor(new Class[] { World.class }).newInstance(new Object[] { par0World });
-							} catch(Exception var23)
+								var22 = (EntityLiving) var8.entityClass.getConstructor(new Class[] { World.class }).newInstance(new Object[] { par0World });
+							} catch(Exception var24)
 							{
-								var23.printStackTrace();
+								var24.printStackTrace();
 								continue;
 							}
-							var21.setLocationAndAngles(var18, var19, var20, par6Random.nextFloat() * 360.0F, 0.0F);
-							par0World.spawnEntityInWorld(var21);
-							creatureSpecificInit(var21, par0World, var18, var19, var20);
-							var15 = true;
+							var22.setLocationAndAngles(var19, var20, var21, par6Random.nextFloat() * 360.0F, 0.0F);
+							par0World.spawnEntityInWorld(var22);
+							var9 = var22.func_110161_a(var9);
+							var16 = true;
 						}
-						var10 += par6Random.nextInt(5) - par6Random.nextInt(5);
-						for(var11 += par6Random.nextInt(5) - par6Random.nextInt(5); var10 < par2 || var10 >= par2 + par4 || var11 < par3 || var11 >= par3 + par4; var11 = var13 + par6Random.nextInt(5) - par6Random.nextInt(5))
+						var11 += par6Random.nextInt(5) - par6Random.nextInt(5);
+						for(var12 += par6Random.nextInt(5) - par6Random.nextInt(5); var11 < par2 || var11 >= par2 + par4 || var12 < par3 || var12 >= par3 + par4; var12 = var14 + par6Random.nextInt(5) - par6Random.nextInt(5))
 						{
-							var10 = var12 + par6Random.nextInt(5) - par6Random.nextInt(5);
+							var11 = var13 + par6Random.nextInt(5) - par6Random.nextInt(5);
 						}
 					}
 				}
diff --git a/RMCClient/minecraft/net/minecraft/src/SpiderEffectsGroupData.java b/RMCClient/minecraft/net/minecraft/src/SpiderEffectsGroupData.java
new file mode 100644
index 0000000..08c57b8
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/SpiderEffectsGroupData.java
@@ -0,0 +1,26 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class SpiderEffectsGroupData implements EntityLivingData
+{
+	public int field_111105_a;
+	
+	public void func_111104_a(Random p_111104_1_)
+	{
+		int var2 = p_111104_1_.nextInt(5);
+		if(var2 <= 1)
+		{
+			field_111105_a = Potion.moveSpeed.id;
+		} else if(var2 <= 2)
+		{
+			field_111105_a = Potion.damageBoost.id;
+		} else if(var2 <= 3)
+		{
+			field_111105_a = Potion.regeneration.id;
+		} else if(var2 <= 4)
+		{
+			field_111105_a = Potion.invisibility.id;
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/StatBase.java b/RMCClient/minecraft/net/minecraft/src/StatBase.java
index ee635d8..274a29a 100644
--- a/RMCClient/minecraft/net/minecraft/src/StatBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/StatBase.java
@@ -2,7 +2,6 @@
 
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
-import java.util.Locale;
 
 public class StatBase
 {
@@ -11,23 +10,23 @@
 	public boolean isIndependent;
 	public String statGuid;
 	private final IStatType type;
-	private static NumberFormat numberFormat = NumberFormat.getIntegerInstance(Locale.US);
+	private static NumberFormat numberFormat = NumberFormat.getIntegerInstance(java.util.Locale.US);
 	public static IStatType simpleStatType = new StatTypeSimple();
 	private static DecimalFormat decimalFormat = new DecimalFormat("########0.00");
 	public static IStatType timeStatType = new StatTypeTime();
 	public static IStatType distanceStatType = new StatTypeDistance();
+	public static IStatType field_111202_k = new StatTypeFloat();
 	
-	public StatBase(int par1, String par2Str)
+	public StatBase(int p_i1547_1_, String p_i1547_2_)
 	{
-		this(par1, par2Str, simpleStatType);
+		this(p_i1547_1_, p_i1547_2_, simpleStatType);
 	}
 	
-	public StatBase(int par1, String par2Str, IStatType par3IStatType)
+	public StatBase(int p_i1546_1_, String p_i1546_2_, IStatType p_i1546_3_)
 	{
-		isIndependent = false;
-		statId = par1;
-		statName = par2Str;
-		type = par3IStatType;
+		statId = p_i1546_1_;
+		statName = p_i1546_2_;
+		type = p_i1546_3_;
 	}
 	
 	public String func_75968_a(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/StatBasic.java b/RMCClient/minecraft/net/minecraft/src/StatBasic.java
index 12482f3..1e83746 100644
--- a/RMCClient/minecraft/net/minecraft/src/StatBasic.java
+++ b/RMCClient/minecraft/net/minecraft/src/StatBasic.java
@@ -2,14 +2,14 @@
 
 public class StatBasic extends StatBase
 {
-	public StatBasic(int par1, String par2Str)
+	public StatBasic(int p_i1543_1_, String p_i1543_2_)
 	{
-		super(par1, par2Str);
+		super(p_i1543_1_, p_i1543_2_);
 	}
 	
-	public StatBasic(int par1, String par2Str, IStatType par3IStatType)
+	public StatBasic(int p_i1542_1_, String p_i1542_2_, IStatType p_i1542_3_)
 	{
-		super(par1, par2Str, par3IStatType);
+		super(p_i1542_1_, p_i1542_2_, p_i1542_3_);
 	}
 	
 	@Override public StatBase registerStat()
diff --git a/RMCClient/minecraft/net/minecraft/src/StatCrafting.java b/RMCClient/minecraft/net/minecraft/src/StatCrafting.java
index b7b54b9..2bf3af1 100644
--- a/RMCClient/minecraft/net/minecraft/src/StatCrafting.java
+++ b/RMCClient/minecraft/net/minecraft/src/StatCrafting.java
@@ -4,10 +4,10 @@
 {
 	private final int itemID;
 	
-	public StatCrafting(int par1, String par2Str, int par3)
+	public StatCrafting(int p_i1544_1_, String p_i1544_2_, int p_i1544_3_)
 	{
-		super(par1, par2Str);
-		itemID = par3;
+		super(p_i1544_1_, p_i1544_2_);
+		itemID = p_i1544_3_;
 	}
 	
 	public int getItemID()
diff --git a/RMCClient/minecraft/net/minecraft/src/StatFileWriter.java b/RMCClient/minecraft/net/minecraft/src/StatFileWriter.java
index 080f391..431b64b 100644
--- a/RMCClient/minecraft/net/minecraft/src/StatFileWriter.java
+++ b/RMCClient/minecraft/net/minecraft/src/StatFileWriter.java
@@ -11,17 +11,17 @@
 {
 	private Map field_77457_a = new HashMap();
 	private Map field_77455_b = new HashMap();
-	private boolean field_77456_c = false;
+	private boolean field_77456_c;
 	private StatsSyncher statsSyncher;
 	
-	public StatFileWriter(Session par1Session, File par2File)
+	public StatFileWriter(Session p_i1332_1_, File p_i1332_2_)
 	{
-		File var3 = new File(par2File, "stats");
+		File var3 = new File(p_i1332_2_, "stats");
 		if(!var3.exists())
 		{
 			var3.mkdir();
 		}
-		File[] var4 = par2File.listFiles();
+		File[] var4 = p_i1332_2_.listFiles();
 		int var5 = var4.length;
 		for(int var6 = 0; var6 < var5; ++var6)
 		{
@@ -36,7 +36,7 @@
 				}
 			}
 		}
-		statsSyncher = new StatsSyncher(par1Session, this, var3);
+		statsSyncher = new StatsSyncher(p_i1332_1_, this, var3);
 	}
 	
 	public boolean canUnlockAchievement(Achievement par1Achievement)
@@ -189,26 +189,30 @@
 				Entry var9 = (Entry) var8.entrySet().iterator().next();
 				int var10 = Integer.parseInt(((JsonStringNode) var9.getKey()).getText());
 				int var11 = Integer.parseInt(((JsonNode) var9.getValue()).getText());
-				StatBase var12 = StatList.getOneShotStat(var10);
-				if(var12 == null)
+				boolean var12 = true;
+				StatBase var13 = StatList.getOneShotStat(var10);
+				if(var13 == null)
 				{
-					System.out.println(var10 + " is not a valid stat, creating place-holder");
-					var12 = new StatPlaceholder(var10).registerStat();
+					var12 = false;
+					var13 = new StatPlaceholder(var10).registerStat();
 				}
 				var3.append(StatList.getOneShotStat(var10).statGuid).append(",");
 				var3.append(var11).append(",");
-				var1.put(var12, Integer.valueOf(var11));
+				if(var12)
+				{
+					var1.put(var13, Integer.valueOf(var11));
+				}
 			}
-			MD5String var14 = new MD5String(var2);
-			String var15 = var14.getMD5String(var3.toString());
-			if(!var15.equals(var4.getStringValue(new Object[] { "checksum" })))
+			MD5String var15 = new MD5String(var2);
+			String var16 = var15.getMD5String(var3.toString());
+			if(!var16.equals(var4.getStringValue(new Object[] { "checksum" })))
 			{
 				System.out.println("CHECKSUM MISMATCH");
 				return null;
 			}
-		} catch(InvalidSyntaxException var13)
+		} catch(InvalidSyntaxException var14)
 		{
-			var13.printStackTrace();
+			var14.printStackTrace();
 		}
 		return var1;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/StatList.java b/RMCClient/minecraft/net/minecraft/src/StatList.java
index f3560f9..f9360cf 100644
--- a/RMCClient/minecraft/net/minecraft/src/StatList.java
+++ b/RMCClient/minecraft/net/minecraft/src/StatList.java
@@ -31,8 +31,8 @@
 	public static StatBase distanceByPigStat = new StatBasic(2008, "stat.pigOneCm", StatBase.distanceStatType).initIndependentStat().registerStat();
 	public static StatBase jumpStat = new StatBasic(2010, "stat.jump").initIndependentStat().registerStat();
 	public static StatBase dropStat = new StatBasic(2011, "stat.drop").initIndependentStat().registerStat();
-	public static StatBase damageDealtStat = new StatBasic(2020, "stat.damageDealt").registerStat();
-	public static StatBase damageTakenStat = new StatBasic(2021, "stat.damageTaken").registerStat();
+	public static StatBase damageDealtStat = new StatBasic(2020, "stat.damageDealt", StatBase.field_111202_k).registerStat();
+	public static StatBase damageTakenStat = new StatBasic(2021, "stat.damageTaken", StatBase.field_111202_k).registerStat();
 	public static StatBase deathsStat = new StatBasic(2022, "stat.deaths").registerStat();
 	public static StatBase mobKillsStat = new StatBasic(2023, "stat.mobKills").registerStat();
 	public static StatBase playerKillsStat = new StatBasic(2024, "stat.playerKills").registerStat();
@@ -193,7 +193,5 @@
 	static
 	{
 		AchievementList.init();
-		blockStatsInitialized = false;
-		itemStatsInitialized = false;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/StatPlaceholder.java b/RMCClient/minecraft/net/minecraft/src/StatPlaceholder.java
index bdb1421..31e1f29 100644
--- a/RMCClient/minecraft/net/minecraft/src/StatPlaceholder.java
+++ b/RMCClient/minecraft/net/minecraft/src/StatPlaceholder.java
@@ -2,8 +2,8 @@
 
 public class StatPlaceholder extends StatBase
 {
-	public StatPlaceholder(int par1)
+	public StatPlaceholder(int p_i1545_1_)
 	{
-		super(par1, "Unknown stat");
+		super(p_i1545_1_, "Unknown stat");
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/StatStringFormatKeyInv.java b/RMCClient/minecraft/net/minecraft/src/StatStringFormatKeyInv.java
index 1a3524f..da28742 100644
--- a/RMCClient/minecraft/net/minecraft/src/StatStringFormatKeyInv.java
+++ b/RMCClient/minecraft/net/minecraft/src/StatStringFormatKeyInv.java
@@ -2,13 +2,13 @@
 
 import net.minecraft.client.Minecraft;
 
-public class StatStringFormatKeyInv implements IStatStringFormat
+class StatStringFormatKeyInv implements IStatStringFormat
 {
 	final Minecraft mc;
 	
-	public StatStringFormatKeyInv(Minecraft par1Minecraft)
+	StatStringFormatKeyInv(Minecraft p_i1006_1_)
 	{
-		mc = par1Minecraft;
+		mc = p_i1006_1_;
 	}
 	
 	@Override public String formatString(String par1Str)
diff --git a/RMCClient/minecraft/net/minecraft/src/StatTypeFloat.java b/RMCClient/minecraft/net/minecraft/src/StatTypeFloat.java
new file mode 100644
index 0000000..c4242bb
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/StatTypeFloat.java
@@ -0,0 +1,9 @@
+package net.minecraft.src;
+
+final class StatTypeFloat implements IStatType
+{
+	@Override public String format(int par1)
+	{
+		return StatBase.getDecimalFormat().format(par1 * 0.1D);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/StatsSyncher.java b/RMCClient/minecraft/net/minecraft/src/StatsSyncher.java
index c1d6b48..4da31f1 100644
--- a/RMCClient/minecraft/net/minecraft/src/StatsSyncher.java
+++ b/RMCClient/minecraft/net/minecraft/src/StatsSyncher.java
@@ -10,9 +10,9 @@
 
 public class StatsSyncher
 {
-	private volatile boolean isBusy = false;
-	private volatile Map field_77430_b = null;
-	private volatile Map field_77431_c = null;
+	private volatile boolean isBusy;
+	private volatile Map field_77430_b;
+	private volatile Map field_77431_c;
 	private StatFileWriter statFileWriter;
 	private File unsentDataFile;
 	private File dataFile;
@@ -21,31 +21,33 @@
 	private File unsentOldFile;
 	private File oldFile;
 	private Session theSession;
-	private int field_77433_l = 0;
-	private int field_77434_m = 0;
+	private int field_77433_l;
+	private int field_77434_m;
 	
-	public StatsSyncher(Session par1Session, StatFileWriter par2StatFileWriter, File par3File)
+	public StatsSyncher(Session p_i1335_1_, StatFileWriter p_i1335_2_, File p_i1335_3_)
 	{
-		unsentDataFile = new File(par3File, "stats_" + par1Session.username.toLowerCase() + "_unsent.dat");
-		dataFile = new File(par3File, "stats_" + par1Session.username.toLowerCase() + ".dat");
-		unsentOldFile = new File(par3File, "stats_" + par1Session.username.toLowerCase() + "_unsent.old");
-		oldFile = new File(par3File, "stats_" + par1Session.username.toLowerCase() + ".old");
-		unsentTempFile = new File(par3File, "stats_" + par1Session.username.toLowerCase() + "_unsent.tmp");
-		tempFile = new File(par3File, "stats_" + par1Session.username.toLowerCase() + ".tmp");
-		if(!par1Session.username.toLowerCase().equals(par1Session.username))
+		String var4 = p_i1335_1_.func_111285_a();
+		String var5 = var4.toLowerCase();
+		unsentDataFile = new File(p_i1335_3_, "stats_" + var5 + "_unsent.dat");
+		dataFile = new File(p_i1335_3_, "stats_" + var5 + ".dat");
+		unsentOldFile = new File(p_i1335_3_, "stats_" + var5 + "_unsent.old");
+		oldFile = new File(p_i1335_3_, "stats_" + var5 + ".old");
+		unsentTempFile = new File(p_i1335_3_, "stats_" + var5 + "_unsent.tmp");
+		tempFile = new File(p_i1335_3_, "stats_" + var5 + ".tmp");
+		if(!var5.equals(var4))
 		{
-			func_77412_a(par3File, "stats_" + par1Session.username + "_unsent.dat", unsentDataFile);
-			func_77412_a(par3File, "stats_" + par1Session.username + ".dat", dataFile);
-			func_77412_a(par3File, "stats_" + par1Session.username + "_unsent.old", unsentOldFile);
-			func_77412_a(par3File, "stats_" + par1Session.username + ".old", oldFile);
-			func_77412_a(par3File, "stats_" + par1Session.username + "_unsent.tmp", unsentTempFile);
-			func_77412_a(par3File, "stats_" + par1Session.username + ".tmp", tempFile);
+			func_77412_a(p_i1335_3_, "stats_" + var4 + "_unsent.dat", unsentDataFile);
+			func_77412_a(p_i1335_3_, "stats_" + var4 + ".dat", dataFile);
+			func_77412_a(p_i1335_3_, "stats_" + var4 + "_unsent.old", unsentOldFile);
+			func_77412_a(p_i1335_3_, "stats_" + var4 + ".old", oldFile);
+			func_77412_a(p_i1335_3_, "stats_" + var4 + "_unsent.tmp", unsentTempFile);
+			func_77412_a(p_i1335_3_, "stats_" + var4 + ".tmp", tempFile);
 		}
-		statFileWriter = par2StatFileWriter;
-		theSession = par1Session;
+		statFileWriter = p_i1335_2_;
+		theSession = p_i1335_1_;
 		if(unsentDataFile.exists())
 		{
-			par2StatFileWriter.writeStats(func_77417_a(unsentDataFile, unsentTempFile, unsentOldFile));
+			p_i1335_2_.writeStats(func_77417_a(unsentDataFile, unsentTempFile, unsentOldFile));
 		}
 		beginReceiveStats();
 	}
@@ -124,7 +126,7 @@
 		PrintWriter var5 = new PrintWriter(new FileWriter(par3File, false));
 		try
 		{
-			var5.print(StatFileWriter.func_77441_a(theSession.username, "local", par1Map));
+			var5.print(StatFileWriter.func_77441_a(theSession.func_111285_a(), "local", par1Map));
 		} finally
 		{
 			var5.close();
diff --git a/RMCClient/minecraft/net/minecraft/src/StepSound.java b/RMCClient/minecraft/net/minecraft/src/StepSound.java
index 836898c..d89cc61 100644
--- a/RMCClient/minecraft/net/minecraft/src/StepSound.java
+++ b/RMCClient/minecraft/net/minecraft/src/StepSound.java
@@ -6,11 +6,11 @@
 	public final float stepSoundVolume;
 	public final float stepSoundPitch;
 	
-	public StepSound(String par1Str, float par2, float par3)
+	public StepSound(String p_i2272_1_, float p_i2272_2_, float p_i2272_3_)
 	{
-		stepSoundName = par1Str;
-		stepSoundVolume = par2;
-		stepSoundPitch = par3;
+		stepSoundName = p_i2272_1_;
+		stepSoundVolume = p_i2272_2_;
+		stepSoundPitch = p_i2272_3_;
 	}
 	
 	public String getBreakSound()
diff --git a/RMCClient/minecraft/net/minecraft/src/StepSoundAnvil.java b/RMCClient/minecraft/net/minecraft/src/StepSoundAnvil.java
index 38d26c1..f3925d3 100644
--- a/RMCClient/minecraft/net/minecraft/src/StepSoundAnvil.java
+++ b/RMCClient/minecraft/net/minecraft/src/StepSoundAnvil.java
@@ -2,9 +2,9 @@
 
 final class StepSoundAnvil extends StepSound
 {
-	StepSoundAnvil(String par1Str, float par2, float par3)
+	StepSoundAnvil(String p_i2271_1_, float p_i2271_2_, float p_i2271_3_)
 	{
-		super(par1Str, par2, par3);
+		super(p_i2271_1_, p_i2271_2_, p_i2271_3_);
 	}
 	
 	@Override public String getBreakSound()
diff --git a/RMCClient/minecraft/net/minecraft/src/StepSoundSand.java b/RMCClient/minecraft/net/minecraft/src/StepSoundSand.java
index a540c83..d7351a9 100644
--- a/RMCClient/minecraft/net/minecraft/src/StepSoundSand.java
+++ b/RMCClient/minecraft/net/minecraft/src/StepSoundSand.java
@@ -2,9 +2,9 @@
 
 final class StepSoundSand extends StepSound
 {
-	StepSoundSand(String par1Str, float par2, float par3)
+	StepSoundSand(String p_i2270_1_, float p_i2270_2_, float p_i2270_3_)
 	{
-		super(par1Str, par2, par3);
+		super(p_i2270_1_, p_i2270_2_, p_i2270_3_);
 	}
 	
 	@Override public String getBreakSound()
diff --git a/RMCClient/minecraft/net/minecraft/src/StepSoundStone.java b/RMCClient/minecraft/net/minecraft/src/StepSoundStone.java
index 23363f6..092ce2d 100644
--- a/RMCClient/minecraft/net/minecraft/src/StepSoundStone.java
+++ b/RMCClient/minecraft/net/minecraft/src/StepSoundStone.java
@@ -2,9 +2,9 @@
 
 final class StepSoundStone extends StepSound
 {
-	StepSoundStone(String par1Str, float par2, float par3)
+	StepSoundStone(String p_i2269_1_, float p_i2269_2_, float p_i2269_3_)
 	{
-		super(par1Str, par2, par3);
+		super(p_i2269_1_, p_i2269_2_, p_i2269_3_);
 	}
 	
 	@Override public String getBreakSound()
diff --git a/RMCClient/minecraft/net/minecraft/src/StitchHolder.java b/RMCClient/minecraft/net/minecraft/src/StitchHolder.java
index a0972e1..70eb03e 100644
--- a/RMCClient/minecraft/net/minecraft/src/StitchHolder.java
+++ b/RMCClient/minecraft/net/minecraft/src/StitchHolder.java
@@ -2,17 +2,17 @@
 
 public class StitchHolder implements Comparable
 {
-	private final Texture theTexture;
+	private final TextureAtlasSprite theTexture;
 	private final int width;
 	private final int height;
 	private boolean rotated;
 	private float scaleFactor = 1.0F;
 	
-	public StitchHolder(Texture par1Texture)
+	public StitchHolder(TextureAtlasSprite p_i1276_1_)
 	{
-		theTexture = par1Texture;
-		width = par1Texture.getWidth();
-		height = par1Texture.getHeight();
+		theTexture = p_i1276_1_;
+		width = p_i1276_1_.getOriginX();
+		height = p_i1276_1_.getOriginY();
 		rotated = ceil16(height) > ceil16(width);
 	}
 	
@@ -33,8 +33,8 @@
 		{
 			if(getWidth() == par1StitchHolder.getWidth())
 			{
-				if(theTexture.getTextureName() == null) return par1StitchHolder.theTexture.getTextureName() == null ? 0 : -1;
-				return theTexture.getTextureName().compareTo(par1StitchHolder.theTexture.getTextureName());
+				if(theTexture.getIconName() == null) return par1StitchHolder.theTexture.getIconName() == null ? 0 : -1;
+				return theTexture.getIconName().compareTo(par1StitchHolder.theTexture.getIconName());
 			}
 			var2 = getWidth() < par1StitchHolder.getWidth() ? 1 : -1;
 		} else
@@ -44,7 +44,7 @@
 		return var2;
 	}
 	
-	public Texture func_98150_a()
+	public TextureAtlasSprite func_98150_a()
 	{
 		return theTexture;
 	}
@@ -79,6 +79,6 @@
 	
 	@Override public String toString()
 	{
-		return "TextureHolder{width=" + width + ", height=" + height + '}';
+		return "Holder{width=" + width + ", height=" + height + '}';
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/StitchSlot.java b/RMCClient/minecraft/net/minecraft/src/StitchSlot.java
index 374a5c4..e51c560 100644
--- a/RMCClient/minecraft/net/minecraft/src/StitchSlot.java
+++ b/RMCClient/minecraft/net/minecraft/src/StitchSlot.java
@@ -13,12 +13,12 @@
 	private List subSlots;
 	private StitchHolder holder;
 	
-	public StitchSlot(int par1, int par2, int par3, int par4)
+	public StitchSlot(int p_i1277_1_, int p_i1277_2_, int p_i1277_3_, int p_i1277_4_)
 	{
-		originX = par1;
-		originY = par2;
-		width = par3;
-		height = par4;
+		originX = p_i1277_1_;
+		originY = p_i1277_2_;
+		width = p_i1277_3_;
+		height = p_i1277_4_;
 	}
 	
 	public boolean func_94182_a(StitchHolder par1StitchHolder)
diff --git a/RMCClient/minecraft/net/minecraft/src/Stitcher.java b/RMCClient/minecraft/net/minecraft/src/Stitcher.java
index 96b07b8..4e3d8d2 100644
--- a/RMCClient/minecraft/net/minecraft/src/Stitcher.java
+++ b/RMCClient/minecraft/net/minecraft/src/Stitcher.java
@@ -17,34 +17,20 @@
 	private final int maxHeight;
 	private final boolean forcePowerOf2;
 	private final int maxTileDimension;
-	private Texture atlasTexture;
-	private final String textureName;
 	
-	public Stitcher(String par1Str, int par2, int par3, boolean par4)
+	public Stitcher(int p_i1278_1_, int p_i1278_2_, boolean p_i1278_3_)
 	{
-		this(par1Str, par2, par3, par4, 0);
+		this(p_i1278_1_, p_i1278_2_, p_i1278_3_, 0);
 	}
 	
-	public Stitcher(String par1, int par2, int par3, boolean par4, int par5)
+	public Stitcher(int p_i1279_1_, int p_i1279_2_, boolean p_i1279_3_, int p_i1279_4_)
 	{
 		setStitchHolders = new HashSet(256);
 		stitchSlots = new ArrayList(256);
-		currentWidth = 0;
-		currentHeight = 0;
-		textureName = par1;
-		maxWidth = par2;
-		maxHeight = par3;
-		forcePowerOf2 = par4;
-		maxTileDimension = par5;
-	}
-	
-	public void addStitchHolder(StitchHolder par1StitchHolder)
-	{
-		if(maxTileDimension > 0)
-		{
-			par1StitchHolder.setNewDimension(maxTileDimension);
-		}
-		setStitchHolders.add(par1StitchHolder);
+		maxWidth = p_i1279_1_;
+		maxHeight = p_i1279_2_;
+		forcePowerOf2 = p_i1279_3_;
+		maxTileDimension = p_i1279_4_;
 	}
 	
 	private boolean allocateSlot(StitchHolder par1StitchHolder)
@@ -63,11 +49,21 @@
 	{
 		StitchHolder[] var1 = (StitchHolder[]) setStitchHolders.toArray(new StitchHolder[setStitchHolders.size()]);
 		Arrays.sort(var1);
-		atlasTexture = null;
-		for(StitchHolder element : var1)
+		StitchHolder[] var2 = var1;
+		int var3 = var1.length;
+		for(int var4 = 0; var4 < var3; ++var4)
 		{
-			StitchHolder var3 = element;
-			if(!allocateSlot(var3)) throw new StitcherException(var3);
+			StitchHolder var5 = var2[var4];
+			if(!allocateSlot(var5))
+			{
+				String var6 = String.format("Unable to fit: %s - size: %dx%d - Maybe try a lowerresolution texturepack?", new Object[] { var5.func_98150_a().getIconName(), Integer.valueOf(var5.func_98150_a().getOriginX()), Integer.valueOf(var5.func_98150_a().getOriginY()) });
+				throw new StitcherException(var5, var6);
+			}
+		}
+		if(forcePowerOf2)
+		{
+			currentWidth = getCeilPowerOf2(currentWidth);
+			currentHeight = getCeilPowerOf2(currentHeight);
 		}
 	}
 	
@@ -126,6 +122,26 @@
 		return true;
 	}
 	
+	public void func_110934_a(TextureAtlasSprite p_110934_1_)
+	{
+		StitchHolder var2 = new StitchHolder(p_110934_1_);
+		if(maxTileDimension > 0)
+		{
+			var2.setNewDimension(maxTileDimension);
+		}
+		setStitchHolders.add(var2);
+	}
+	
+	public int func_110935_a()
+	{
+		return currentWidth;
+	}
+	
+	public int func_110936_b()
+	{
+		return currentHeight;
+	}
+	
 	private int getCeilPowerOf2(int par1)
 	{
 		int var2 = par1 - 1;
@@ -139,33 +155,23 @@
 	
 	public List getStichSlots()
 	{
-		ArrayList var1 = new ArrayList();
+		ArrayList var1 = Lists.newArrayList();
 		Iterator var2 = stitchSlots.iterator();
 		while(var2.hasNext())
 		{
 			StitchSlot var3 = (StitchSlot) var2.next();
 			var3.getAllStitchSlots(var1);
 		}
-		return var1;
-	}
-	
-	public Texture getTexture()
-	{
-		if(forcePowerOf2)
+		ArrayList var7 = Lists.newArrayList();
+		Iterator var8 = var1.iterator();
+		while(var8.hasNext())
 		{
-			currentWidth = getCeilPowerOf2(currentWidth);
-			currentHeight = getCeilPowerOf2(currentHeight);
+			StitchSlot var4 = (StitchSlot) var8.next();
+			StitchHolder var5 = var4.getStitchHolder();
+			TextureAtlasSprite var6 = var5.func_98150_a();
+			var6.func_110971_a(currentWidth, currentHeight, var4.getOriginX(), var4.getOriginY(), var5.isRotated());
+			var7.add(var6);
 		}
-		atlasTexture = TextureManager.instance().createEmptyTexture(textureName, 1, currentWidth, currentHeight, 6408);
-		atlasTexture.fillRect(atlasTexture.getTextureRect(), -65536);
-		List var1 = getStichSlots();
-		for(int var2 = 0; var2 < var1.size(); ++var2)
-		{
-			StitchSlot var3 = (StitchSlot) var1.get(var2);
-			StitchHolder var4 = var3.getStitchHolder();
-			atlasTexture.copyFrom(var3.getOriginX(), var3.getOriginY(), var4.func_98150_a(), var4.isRotated());
-		}
-		TextureManager.instance().registerTexture(textureName, atlasTexture);
-		return atlasTexture;
+		return var7;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/StitcherException.java b/RMCClient/minecraft/net/minecraft/src/StitcherException.java
index 6f9fa29..f761b66 100644
--- a/RMCClient/minecraft/net/minecraft/src/StitcherException.java
+++ b/RMCClient/minecraft/net/minecraft/src/StitcherException.java
@@ -5,8 +5,9 @@
 	private static final long serialVersionUID = 1L;
 	private final StitchHolder field_98149_a;
 	
-	public StitcherException(StitchHolder par1StitchHolder)
+	public StitcherException(StitchHolder p_i2344_1_, String p_i2344_2_)
 	{
-		field_98149_a = par1StitchHolder;
+		super(p_i2344_2_);
+		field_98149_a = p_i2344_1_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/StringTranslate.java b/RMCClient/minecraft/net/minecraft/src/StringTranslate.java
index 429e9dd..03cace4 100644
--- a/RMCClient/minecraft/net/minecraft/src/StringTranslate.java
+++ b/RMCClient/minecraft/net/minecraft/src/StringTranslate.java
@@ -1,166 +1,64 @@
 package net.minecraft.src;
 
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileReader;
 import java.io.IOException;
-import java.io.InputStreamReader;
-import java.util.Enumeration;
+import java.io.InputStream;
 import java.util.IllegalFormatException;
-import java.util.Properties;
-import java.util.TreeMap;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.regex.Pattern;
 
 public class StringTranslate
 {
-	private static StringTranslate instance = new StringTranslate("en_US");
-	private Properties translateTable = new Properties();
-	private TreeMap languageList;
-	private TreeMap field_94521_d = new TreeMap();
-	private String currentLanguage;
-	private boolean isUnicode;
+	private static final Pattern field_111053_a = Pattern.compile("%(\\d+\\$)?[\\d\\.]*[df]");
+	private static final Splitter field_135065_b = Splitter.on('=').limit(2);
+	private static StringTranslate instance = new StringTranslate();
+	private Map languageList = Maps.newHashMap();
 	
-	public StringTranslate(String par1Str)
+	public StringTranslate()
 	{
-		loadLanguageList();
-		setLanguage(par1Str, false);
+		try
+		{
+			InputStream var1 = StringTranslate.class.getResourceAsStream("/assets/minecraft/lang/en_US.lang");
+			Iterator var2 = IOUtils.readLines(var1, Charsets.UTF_8).iterator();
+			while(var2.hasNext())
+			{
+				String var3 = (String) var2.next();
+				if(!var3.isEmpty() && var3.charAt(0) != 35)
+				{
+					String[] var4 = (String[]) Iterables.toArray(field_135065_b.split(var3), String.class);
+					if(var4 != null && var4.length == 2)
+					{
+						String var5 = var4[0];
+						String var6 = field_111053_a.matcher(var4[1]).replaceAll("%$1s");
+						languageList.put(var5, var6);
+					}
+				}
+			}
+		} catch(IOException var7)
+		{
+			;
+		}
 	}
 	
 	public synchronized boolean containsTranslateKey(String par1Str)
 	{
-		return translateTable.containsKey(par1Str);
+		return languageList.containsKey(par1Str);
 	}
 	
-	public synchronized void func_94519_a(String par1Str, File par2File)
+	private String func_135064_c(String p_135064_1_)
 	{
-		int var3 = par1Str.indexOf(46);
-		if(var3 > 0)
-		{
-			par1Str = par1Str.substring(0, var3);
-		}
-		field_94521_d.put(par1Str, par2File);
-		if(par1Str.contains(currentLanguage))
-		{
-			setLanguage(currentLanguage, true);
-		}
-	}
-	
-	public String getCurrentLanguage()
-	{
-		return currentLanguage;
-	}
-	
-	public TreeMap getLanguageList()
-	{
-		return languageList;
-	}
-	
-	public boolean isUnicode()
-	{
-		return isUnicode;
-	}
-	
-	private void loadLanguage(Properties par1Properties, String par2Str) throws IOException
-	{
-		BufferedReader var3 = null;
-		if(field_94521_d.containsKey(par2Str))
-		{
-			var3 = new BufferedReader(new FileReader((File) field_94521_d.get(par2Str)));
-		} else
-		{
-			var3 = new BufferedReader(new InputStreamReader(StringTranslate.class.getResourceAsStream("/lang/" + par2Str + ".lang"), "UTF-8"));
-		}
-		for(String var4 = var3.readLine(); var4 != null; var4 = var3.readLine())
-		{
-			var4 = var4.trim();
-			if(!var4.startsWith("#"))
-			{
-				String[] var5 = var4.split("=");
-				if(var5 != null && var5.length == 2)
-				{
-					par1Properties.setProperty(var5[0], var5[1]);
-				}
-			}
-		}
-	}
-	
-	private void loadLanguageList()
-	{
-		TreeMap var1 = new TreeMap();
-		try
-		{
-			BufferedReader var2 = new BufferedReader(new InputStreamReader(StringTranslate.class.getResourceAsStream("/lang/languages.txt"), "UTF-8"));
-			for(String var3 = var2.readLine(); var3 != null; var3 = var2.readLine())
-			{
-				String[] var4 = var3.trim().split("=");
-				if(var4 != null && var4.length == 2)
-				{
-					var1.put(var4[0], var4[1]);
-				}
-			}
-		} catch(IOException var5)
-		{
-			var5.printStackTrace();
-			return;
-		}
-		languageList = var1;
-		languageList.put("en_US", "English (US)");
-	}
-	
-	public synchronized void setLanguage(String par1Str, boolean par2)
-	{
-		if(par2 || !par1Str.equals(currentLanguage))
-		{
-			Properties var3 = new Properties();
-			try
-			{
-				loadLanguage(var3, "en_US");
-			} catch(IOException var9)
-			{
-				;
-			}
-			isUnicode = false;
-			if(!"en_US".equals(par1Str))
-			{
-				try
-				{
-					loadLanguage(var3, par1Str);
-					Enumeration var4 = var3.propertyNames();
-					while(var4.hasMoreElements() && !isUnicode)
-					{
-						Object var5 = var4.nextElement();
-						Object var6 = var3.get(var5);
-						if(var6 != null)
-						{
-							String var7 = var6.toString();
-							for(int var8 = 0; var8 < var7.length(); ++var8)
-							{
-								if(var7.charAt(var8) >= 256)
-								{
-									isUnicode = true;
-									break;
-								}
-							}
-						}
-					}
-				} catch(IOException var10)
-				{
-					var10.printStackTrace();
-					return;
-				}
-			}
-			currentLanguage = par1Str;
-			translateTable = var3;
-		}
+		String var2 = (String) languageList.get(p_135064_1_);
+		return var2 == null ? p_135064_1_ : var2;
 	}
 	
 	public synchronized String translateKey(String par1Str)
 	{
-		return translateTable.getProperty(par1Str, par1Str);
+		return func_135064_c(par1Str);
 	}
 	
 	public synchronized String translateKeyFormat(String par1Str, Object ... par2ArrayOfObj)
 	{
-		String var3 = translateTable.getProperty(par1Str, par1Str);
+		String var3 = func_135064_c(par1Str);
 		try
 		{
 			return String.format(var3, par2ArrayOfObj);
@@ -170,18 +68,14 @@
 		}
 	}
 	
-	public synchronized String translateNamedKey(String par1Str)
+	public static synchronized void func_135063_a(Map p_135063_0_)
 	{
-		return translateTable.getProperty(par1Str + ".name", "");
+		instance.languageList.clear();
+		instance.languageList.putAll(p_135063_0_);
 	}
 	
-	public static StringTranslate getInstance()
+	static StringTranslate getInstance()
 	{
 		return instance;
-	}
-	
-	public static boolean isBidirectional(String par0Str)
-	{
-		return "ar_SA".equals(par0Str) || "he_IL".equals(par0Str);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureBoundingBox.java b/RMCClient/minecraft/net/minecraft/src/StructureBoundingBox.java
index 4b57938..ae5747b 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureBoundingBox.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureBoundingBox.java
@@ -13,34 +13,34 @@
 	{
 	}
 	
-	public StructureBoundingBox(int par1, int par2, int par3, int par4)
+	public StructureBoundingBox(int p_i2033_1_, int p_i2033_2_, int p_i2033_3_, int p_i2033_4_)
 	{
-		minX = par1;
-		minZ = par2;
-		maxX = par3;
-		maxZ = par4;
+		minX = p_i2033_1_;
+		minZ = p_i2033_2_;
+		maxX = p_i2033_3_;
+		maxZ = p_i2033_4_;
 		minY = 1;
 		maxY = 512;
 	}
 	
-	public StructureBoundingBox(int par1, int par2, int par3, int par4, int par5, int par6)
+	public StructureBoundingBox(int p_i2032_1_, int p_i2032_2_, int p_i2032_3_, int p_i2032_4_, int p_i2032_5_, int p_i2032_6_)
 	{
-		minX = par1;
-		minY = par2;
-		minZ = par3;
-		maxX = par4;
-		maxY = par5;
-		maxZ = par6;
+		minX = p_i2032_1_;
+		minY = p_i2032_2_;
+		minZ = p_i2032_3_;
+		maxX = p_i2032_4_;
+		maxY = p_i2032_5_;
+		maxZ = p_i2032_6_;
 	}
 	
-	public StructureBoundingBox(StructureBoundingBox par1StructureBoundingBox)
+	public StructureBoundingBox(StructureBoundingBox p_i2031_1_)
 	{
-		minX = par1StructureBoundingBox.minX;
-		minY = par1StructureBoundingBox.minY;
-		minZ = par1StructureBoundingBox.minZ;
-		maxX = par1StructureBoundingBox.maxX;
-		maxY = par1StructureBoundingBox.maxY;
-		maxZ = par1StructureBoundingBox.maxZ;
+		minX = p_i2031_1_.minX;
+		minY = p_i2031_1_.minY;
+		minZ = p_i2031_1_.minZ;
+		maxX = p_i2031_1_.maxX;
+		maxY = p_i2031_1_.maxY;
+		maxZ = p_i2031_1_.maxZ;
 	}
 	
 	public void expandTo(StructureBoundingBox par1StructureBoundingBox)
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureComponent.java b/RMCClient/minecraft/net/minecraft/src/StructureComponent.java
index a0a239a..1fda070 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureComponent.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureComponent.java
@@ -10,9 +10,9 @@
 	protected int coordBaseMode;
 	protected int componentType;
 	
-	protected StructureComponent(int par1)
+	protected StructureComponent(int p_i2091_1_)
 	{
-		componentType = par1;
+		componentType = p_i2091_1_;
 		coordBaseMode = -1;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureMineshaftPieces.java b/RMCClient/minecraft/net/minecraft/src/StructureMineshaftPieces.java
index 6d142b2..c647ddf 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureMineshaftPieces.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureMineshaftPieces.java
@@ -5,7 +5,7 @@
 
 public class StructureMineshaftPieces
 {
-	private static final WeightedRandomChestContent[] mineshaftChestContents = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 1, 3, 5), new WeightedRandomChestContent(Item.redstone.itemID, 0, 4, 9, 5), new WeightedRandomChestContent(Item.dyePowder.itemID, 4, 4, 9, 5), new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 2, 3), new WeightedRandomChestContent(Item.coal.itemID, 0, 3, 8, 10), new WeightedRandomChestContent(Item.bread.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.pickaxeIron.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Block.rail.blockID, 0, 4, 8, 1), new WeightedRandomChestContent(Item.melonSeeds.itemID, 0, 2, 4, 10), new WeightedRandomChestContent(Item.pumpkinSeeds.itemID, 0, 2, 4, 10) };
+	private static final WeightedRandomChestContent[] mineshaftChestContents = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 5, 10), new WeightedRandomChestContent(Item.ingotGold.itemID, 0, 1, 3, 5), new WeightedRandomChestContent(Item.redstone.itemID, 0, 4, 9, 5), new WeightedRandomChestContent(Item.dyePowder.itemID, 4, 4, 9, 5), new WeightedRandomChestContent(Item.diamond.itemID, 0, 1, 2, 3), new WeightedRandomChestContent(Item.coal.itemID, 0, 3, 8, 10), new WeightedRandomChestContent(Item.bread.itemID, 0, 1, 3, 15), new WeightedRandomChestContent(Item.pickaxeIron.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Block.rail.blockID, 0, 4, 8, 1), new WeightedRandomChestContent(Item.melonSeeds.itemID, 0, 2, 4, 10), new WeightedRandomChestContent(Item.pumpkinSeeds.itemID, 0, 2, 4, 10), new WeightedRandomChestContent(Item.saddle.itemID, 0, 1, 1, 3), new WeightedRandomChestContent(Item.field_111215_ce.itemID, 0, 1, 1, 1) };
 	
 	static WeightedRandomChestContent[] func_78816_a()
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureMineshaftStart.java b/RMCClient/minecraft/net/minecraft/src/StructureMineshaftStart.java
index 125f827..98f4272 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureMineshaftStart.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureMineshaftStart.java
@@ -4,12 +4,12 @@
 
 public class StructureMineshaftStart extends StructureStart
 {
-	public StructureMineshaftStart(World par1World, Random par2Random, int par3, int par4)
+	public StructureMineshaftStart(World p_i2039_1_, Random p_i2039_2_, int p_i2039_3_, int p_i2039_4_)
 	{
-		ComponentMineshaftRoom var5 = new ComponentMineshaftRoom(0, par2Random, (par3 << 4) + 2, (par4 << 4) + 2);
+		ComponentMineshaftRoom var5 = new ComponentMineshaftRoom(0, p_i2039_2_, (p_i2039_3_ << 4) + 2, (p_i2039_4_ << 4) + 2);
 		components.add(var5);
-		var5.buildComponent(var5, components, par2Random);
+		var5.buildComponent(var5, components, p_i2039_2_);
 		updateBoundingBox();
-		markAvailableHeight(par1World, par2Random, 10);
+		markAvailableHeight(p_i2039_1_, p_i2039_2_, 10);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureNetherBridgePieceWeight.java b/RMCClient/minecraft/net/minecraft/src/StructureNetherBridgePieceWeight.java
index b03cb48..d4a80c1 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureNetherBridgePieceWeight.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureNetherBridgePieceWeight.java
@@ -8,17 +8,17 @@
 	public int field_78824_d;
 	public boolean field_78825_e;
 	
-	public StructureNetherBridgePieceWeight(Class par1Class, int par2, int par3)
+	public StructureNetherBridgePieceWeight(Class p_i2056_1_, int p_i2056_2_, int p_i2056_3_)
 	{
-		this(par1Class, par2, par3, false);
+		this(p_i2056_1_, p_i2056_2_, p_i2056_3_, false);
 	}
 	
-	public StructureNetherBridgePieceWeight(Class par1Class, int par2, int par3, boolean par4)
+	public StructureNetherBridgePieceWeight(Class p_i2055_1_, int p_i2055_2_, int p_i2055_3_, boolean p_i2055_4_)
 	{
-		weightClass = par1Class;
-		field_78826_b = par2;
-		field_78824_d = par3;
-		field_78825_e = par4;
+		weightClass = p_i2055_1_;
+		field_78826_b = p_i2055_2_;
+		field_78824_d = p_i2055_3_;
+		field_78825_e = p_i2055_4_;
 	}
 	
 	public boolean func_78822_a(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureNetherBridgeStart.java b/RMCClient/minecraft/net/minecraft/src/StructureNetherBridgeStart.java
index 8f01c07..0a8c76c 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureNetherBridgeStart.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureNetherBridgeStart.java
@@ -5,19 +5,19 @@
 
 class StructureNetherBridgeStart extends StructureStart
 {
-	public StructureNetherBridgeStart(World par1World, Random par2Random, int par3, int par4)
+	public StructureNetherBridgeStart(World p_i2040_1_, Random p_i2040_2_, int p_i2040_3_, int p_i2040_4_)
 	{
-		ComponentNetherBridgeStartPiece var5 = new ComponentNetherBridgeStartPiece(par2Random, (par3 << 4) + 2, (par4 << 4) + 2);
+		ComponentNetherBridgeStartPiece var5 = new ComponentNetherBridgeStartPiece(p_i2040_2_, (p_i2040_3_ << 4) + 2, (p_i2040_4_ << 4) + 2);
 		components.add(var5);
-		var5.buildComponent(var5, components, par2Random);
+		var5.buildComponent(var5, components, p_i2040_2_);
 		ArrayList var6 = var5.field_74967_d;
 		while(!var6.isEmpty())
 		{
-			int var7 = par2Random.nextInt(var6.size());
+			int var7 = p_i2040_2_.nextInt(var6.size());
 			StructureComponent var8 = (StructureComponent) var6.remove(var7);
-			var8.buildComponent(var5, components, par2Random);
+			var8.buildComponent(var5, components, p_i2040_2_);
 		}
 		updateBoundingBox();
-		setRandomHeight(par1World, par2Random, 48, 70);
+		setRandomHeight(p_i2040_1_, p_i2040_2_, 48, 70);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureScatteredFeatureStart.java b/RMCClient/minecraft/net/minecraft/src/StructureScatteredFeatureStart.java
index b216fa6..ff57340 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureScatteredFeatureStart.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureScatteredFeatureStart.java
@@ -4,23 +4,23 @@
 
 public class StructureScatteredFeatureStart extends StructureStart
 {
-	public StructureScatteredFeatureStart(World par1World, Random par2Random, int par3, int par4)
+	public StructureScatteredFeatureStart(World p_i2060_1_, Random p_i2060_2_, int p_i2060_3_, int p_i2060_4_)
 	{
-		BiomeGenBase var5 = par1World.getBiomeGenForCoords(par3 * 16 + 8, par4 * 16 + 8);
+		BiomeGenBase var5 = p_i2060_1_.getBiomeGenForCoords(p_i2060_3_ * 16 + 8, p_i2060_4_ * 16 + 8);
 		if(var5 != BiomeGenBase.jungle && var5 != BiomeGenBase.jungleHills)
 		{
 			if(var5 == BiomeGenBase.swampland)
 			{
-				ComponentScatteredFeatureSwampHut var8 = new ComponentScatteredFeatureSwampHut(par2Random, par3 * 16, par4 * 16);
+				ComponentScatteredFeatureSwampHut var8 = new ComponentScatteredFeatureSwampHut(p_i2060_2_, p_i2060_3_ * 16, p_i2060_4_ * 16);
 				components.add(var8);
 			} else
 			{
-				ComponentScatteredFeatureDesertPyramid var7 = new ComponentScatteredFeatureDesertPyramid(par2Random, par3 * 16, par4 * 16);
+				ComponentScatteredFeatureDesertPyramid var7 = new ComponentScatteredFeatureDesertPyramid(p_i2060_2_, p_i2060_3_ * 16, p_i2060_4_ * 16);
 				components.add(var7);
 			}
 		} else
 		{
-			ComponentScatteredFeatureJunglePyramid var6 = new ComponentScatteredFeatureJunglePyramid(par2Random, par3 * 16, par4 * 16);
+			ComponentScatteredFeatureJunglePyramid var6 = new ComponentScatteredFeatureJunglePyramid(p_i2060_2_, p_i2060_3_ * 16, p_i2060_4_ * 16);
 			components.add(var6);
 		}
 		updateBoundingBox();
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureScatteredFeatureStones.java b/RMCClient/minecraft/net/minecraft/src/StructureScatteredFeatureStones.java
index 0fb0a7e..2b61d24 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureScatteredFeatureStones.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureScatteredFeatureStones.java
@@ -8,7 +8,7 @@
 	{
 	}
 	
-	StructureScatteredFeatureStones(ComponentScatteredFeaturePieces2 par1ComponentScatteredFeaturePieces2)
+	StructureScatteredFeatureStones(ComponentScatteredFeaturePieces2 p_i2063_1_)
 	{
 		this();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight.java b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight.java
index b4e47bf..26cdeb6 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight.java
@@ -7,11 +7,11 @@
 	public int instancesSpawned;
 	public int instancesLimit;
 	
-	public StructureStrongholdPieceWeight(Class par1Class, int par2, int par3)
+	public StructureStrongholdPieceWeight(Class p_i2076_1_, int p_i2076_2_, int p_i2076_3_)
 	{
-		pieceClass = par1Class;
-		pieceWeight = par2;
-		instancesLimit = par3;
+		pieceClass = p_i2076_1_;
+		pieceWeight = p_i2076_2_;
+		instancesLimit = p_i2076_3_;
 	}
 	
 	public boolean canSpawnMoreStructures()
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight2.java b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight2.java
index 260b0a4..a786587 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight2.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight2.java
@@ -2,9 +2,9 @@
 
 final class StructureStrongholdPieceWeight2 extends StructureStrongholdPieceWeight
 {
-	StructureStrongholdPieceWeight2(Class par1Class, int par2, int par3)
+	StructureStrongholdPieceWeight2(Class p_i2069_1_, int p_i2069_2_, int p_i2069_3_)
 	{
-		super(par1Class, par2, par3);
+		super(p_i2069_1_, p_i2069_2_, p_i2069_3_);
 	}
 	
 	@Override public boolean canSpawnMoreStructuresOfType(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight3.java b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight3.java
index 7801c6c..f98bfba 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight3.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieceWeight3.java
@@ -2,9 +2,9 @@
 
 final class StructureStrongholdPieceWeight3 extends StructureStrongholdPieceWeight
 {
-	StructureStrongholdPieceWeight3(Class par1Class, int par2, int par3)
+	StructureStrongholdPieceWeight3(Class p_i2070_1_, int p_i2070_2_, int p_i2070_3_)
 	{
-		super(par1Class, par2, par3);
+		super(p_i2070_1_, p_i2070_2_, p_i2070_3_);
 	}
 	
 	@Override public boolean canSpawnMoreStructuresOfType(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieces.java b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieces.java
index b68a4a9..e5acd8d 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieces.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdPieces.java
@@ -10,7 +10,7 @@
 	private static final StructureStrongholdPieceWeight[] pieceWeightArray = new StructureStrongholdPieceWeight[] { new StructureStrongholdPieceWeight(ComponentStrongholdStraight.class, 40, 0), new StructureStrongholdPieceWeight(ComponentStrongholdPrison.class, 5, 5), new StructureStrongholdPieceWeight(ComponentStrongholdLeftTurn.class, 20, 0), new StructureStrongholdPieceWeight(ComponentStrongholdRightTurn.class, 20, 0), new StructureStrongholdPieceWeight(ComponentStrongholdRoomCrossing.class, 10, 6), new StructureStrongholdPieceWeight(ComponentStrongholdStairsStraight.class, 5, 5), new StructureStrongholdPieceWeight(ComponentStrongholdStairs.class, 5, 5), new StructureStrongholdPieceWeight(ComponentStrongholdCrossing.class, 5, 4), new StructureStrongholdPieceWeight(ComponentStrongholdChestCorridor.class, 5, 4), new StructureStrongholdPieceWeight2(ComponentStrongholdLibrary.class, 10, 2), new StructureStrongholdPieceWeight3(ComponentStrongholdPortalRoom.class, 20, 1) };
 	private static List structurePieceList;
 	private static Class strongComponentType;
-	static int totalWeight = 0;
+	static int totalWeight;
 	private static final StructureStrongholdStones strongholdStones = new StructureStrongholdStones((StructureStrongholdPieceWeight2) null);
 	
 	private static boolean canAddStructurePieces()
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdStart.java b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdStart.java
index a303d2a..adbf7c6 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdStart.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdStart.java
@@ -1,24 +1,24 @@
 package net.minecraft.src;
 
-import java.util.ArrayList;
+import java.util.List;
 import java.util.Random;
 
 class StructureStrongholdStart extends StructureStart
 {
-	public StructureStrongholdStart(World par1World, Random par2Random, int par3, int par4)
+	public StructureStrongholdStart(World p_i2067_1_, Random p_i2067_2_, int p_i2067_3_, int p_i2067_4_)
 	{
 		StructureStrongholdPieces.prepareStructurePieces();
-		ComponentStrongholdStairs2 var5 = new ComponentStrongholdStairs2(0, par2Random, (par3 << 4) + 2, (par4 << 4) + 2);
+		ComponentStrongholdStairs2 var5 = new ComponentStrongholdStairs2(0, p_i2067_2_, (p_i2067_3_ << 4) + 2, (p_i2067_4_ << 4) + 2);
 		components.add(var5);
-		var5.buildComponent(var5, components, par2Random);
-		ArrayList var6 = var5.field_75026_c;
+		var5.buildComponent(var5, components, p_i2067_2_);
+		List var6 = var5.field_75026_c;
 		while(!var6.isEmpty())
 		{
-			int var7 = par2Random.nextInt(var6.size());
+			int var7 = p_i2067_2_.nextInt(var6.size());
 			StructureComponent var8 = (StructureComponent) var6.remove(var7);
-			var8.buildComponent(var5, components, par2Random);
+			var8.buildComponent(var5, components, p_i2067_2_);
 		}
 		updateBoundingBox();
-		markAvailableHeight(par1World, par2Random, 10);
+		markAvailableHeight(p_i2067_1_, p_i2067_2_, 10);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdStones.java b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdStones.java
index 969668e..086b62d 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureStrongholdStones.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureStrongholdStones.java
@@ -8,7 +8,7 @@
 	{
 	}
 	
-	StructureStrongholdStones(StructureStrongholdPieceWeight2 par1StructureStrongholdPieceWeight2)
+	StructureStrongholdStones(StructureStrongholdPieceWeight2 p_i2080_1_)
 	{
 		this();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureVillagePieceWeight.java b/RMCClient/minecraft/net/minecraft/src/StructureVillagePieceWeight.java
index 7afcdb6..3493701 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureVillagePieceWeight.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureVillagePieceWeight.java
@@ -7,11 +7,11 @@
 	public int villagePiecesSpawned;
 	public int villagePiecesLimit;
 	
-	public StructureVillagePieceWeight(Class par1Class, int par2, int par3)
+	public StructureVillagePieceWeight(Class p_i2098_1_, int p_i2098_2_, int p_i2098_3_)
 	{
-		villagePieceClass = par1Class;
-		villagePieceWeight = par2;
-		villagePiecesLimit = par3;
+		villagePieceClass = p_i2098_1_;
+		villagePieceWeight = p_i2098_2_;
+		villagePiecesLimit = p_i2098_3_;
 	}
 	
 	public boolean canSpawnMoreVillagePieces()
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureVillagePieces.java b/RMCClient/minecraft/net/minecraft/src/StructureVillagePieces.java
index ff62152..7adcd86 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureVillagePieces.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureVillagePieces.java
@@ -159,7 +159,7 @@
 		} else return null;
 	}
 	
-	public static ArrayList getStructureVillageWeightedPieceList(Random par0Random, int par1)
+	public static List getStructureVillageWeightedPieceList(Random par0Random, int par1)
 	{
 		ArrayList var2 = new ArrayList();
 		var2.add(new StructureVillagePieceWeight(ComponentVillageHouse4_Garden.class, 4, MathHelper.getRandomIntegerInRange(par0Random, 2 + par1, 4 + par1 * 2)));
diff --git a/RMCClient/minecraft/net/minecraft/src/StructureVillageStart.java b/RMCClient/minecraft/net/minecraft/src/StructureVillageStart.java
index c9a296f..fef6b03 100644
--- a/RMCClient/minecraft/net/minecraft/src/StructureVillageStart.java
+++ b/RMCClient/minecraft/net/minecraft/src/StructureVillageStart.java
@@ -1,35 +1,35 @@
 package net.minecraft.src;
 
-import java.util.ArrayList;
 import java.util.Iterator;
+import java.util.List;
 import java.util.Random;
 
 class StructureVillageStart extends StructureStart
 {
-	private boolean hasMoreThanTwoComponents = false;
+	private boolean hasMoreThanTwoComponents;
 	
-	public StructureVillageStart(World par1World, Random par2Random, int par3, int par4, int par5)
+	public StructureVillageStart(World p_i2092_1_, Random p_i2092_2_, int p_i2092_3_, int p_i2092_4_, int p_i2092_5_)
 	{
-		ArrayList var6 = StructureVillagePieces.getStructureVillageWeightedPieceList(par2Random, par5);
-		ComponentVillageStartPiece var7 = new ComponentVillageStartPiece(par1World.getWorldChunkManager(), 0, par2Random, (par3 << 4) + 2, (par4 << 4) + 2, var6, par5);
+		List var6 = StructureVillagePieces.getStructureVillageWeightedPieceList(p_i2092_2_, p_i2092_5_);
+		ComponentVillageStartPiece var7 = new ComponentVillageStartPiece(p_i2092_1_.getWorldChunkManager(), 0, p_i2092_2_, (p_i2092_3_ << 4) + 2, (p_i2092_4_ << 4) + 2, var6, p_i2092_5_);
 		components.add(var7);
-		var7.buildComponent(var7, components, par2Random);
-		ArrayList var8 = var7.field_74930_j;
-		ArrayList var9 = var7.field_74932_i;
+		var7.buildComponent(var7, components, p_i2092_2_);
+		List var8 = var7.field_74930_j;
+		List var9 = var7.field_74932_i;
 		int var10;
 		while(!var8.isEmpty() || !var9.isEmpty())
 		{
 			StructureComponent var11;
 			if(var8.isEmpty())
 			{
-				var10 = par2Random.nextInt(var9.size());
+				var10 = p_i2092_2_.nextInt(var9.size());
 				var11 = (StructureComponent) var9.remove(var10);
-				var11.buildComponent(var7, components, par2Random);
+				var11.buildComponent(var7, components, p_i2092_2_);
 			} else
 			{
-				var10 = par2Random.nextInt(var8.size());
+				var10 = p_i2092_2_.nextInt(var8.size());
 				var11 = (StructureComponent) var8.remove(var10);
-				var11.buildComponent(var7, components, par2Random);
+				var11.buildComponent(var7, components, p_i2092_2_);
 			}
 		}
 		updateBoundingBox();
diff --git a/RMCClient/minecraft/net/minecraft/src/SyntaxErrorException.java b/RMCClient/minecraft/net/minecraft/src/SyntaxErrorException.java
index 2e4e587..31d0dc9 100644
--- a/RMCClient/minecraft/net/minecraft/src/SyntaxErrorException.java
+++ b/RMCClient/minecraft/net/minecraft/src/SyntaxErrorException.java
@@ -9,8 +9,8 @@
 		this("commands.generic.snytax", new Object[0]);
 	}
 	
-	public SyntaxErrorException(String par1Str, Object ... par2ArrayOfObj)
+	public SyntaxErrorException(String p_i1361_1_, Object ... p_i1361_2_)
 	{
-		super(par1Str, par2ArrayOfObj);
+		super(p_i1361_1_, p_i1361_2_);
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/TaskOnlineConnect.java b/RMCClient/minecraft/net/minecraft/src/TaskOnlineConnect.java
index 4799fe9..ce33738 100644
--- a/RMCClient/minecraft/net/minecraft/src/TaskOnlineConnect.java
+++ b/RMCClient/minecraft/net/minecraft/src/TaskOnlineConnect.java
@@ -2,16 +2,29 @@
 
 import java.io.IOException;
 
+import net.minecraft.client.Minecraft;
+
 public class TaskOnlineConnect extends TaskLongRunning
 {
 	private NetClientHandler field_96586_a;
 	private final McoServer field_96585_c;
 	private final GuiScreen field_96584_d;
 	
-	public TaskOnlineConnect(GuiScreen par1GuiScreen, McoServer par2McoServer)
+	public TaskOnlineConnect(GuiScreen p_i1119_1_, McoServer p_i1119_2_)
 	{
-		field_96584_d = par1GuiScreen;
-		field_96585_c = par2McoServer;
+		field_96584_d = p_i1119_1_;
+		field_96585_c = p_i1119_2_;
+	}
+	
+	private void func_111251_a(int p_111251_1_)
+	{
+		try
+		{
+			Thread.sleep(p_111251_1_ * 1000);
+		} catch(InterruptedException var3)
+		{
+			Minecraft.getMinecraft().getLogAgent().logWarning(var3.getLocalizedMessage());
+		}
 	}
 	
 	@Override public void func_96573_a()
@@ -22,17 +35,6 @@
 		}
 	}
 	
-	private void func_96581_e()
-	{
-		try
-		{
-			Thread.sleep(5000L);
-		} catch(InterruptedException var2)
-		{
-			System.err.println(var2);
-		}
-	}
-	
 	private void func_96582_a(String par1Str, int par2)
 	{
 		new ThreadOnlineConnect(this, par1Str, par2).start();
@@ -40,45 +42,47 @@
 	
 	@Override public void run()
 	{
-		func_96576_b(StringTranslate.getInstance().translateKey("mco.connect.connecting"));
-		McoClient var1 = new McoClient(func_96578_b().session);
+		func_96576_b(I18n.func_135053_a("mco.connect.connecting"));
+		McoClient var1 = new McoClient(func_96578_b().func_110432_I());
 		boolean var2 = false;
 		boolean var3 = false;
-		McoServerAddress var4 = null;
-		for(int var5 = 0; var5 < 10 && !func_96577_c(); ++var5)
+		int var4 = 5;
+		McoServerAddress var5 = null;
+		for(int var6 = 0; var6 < 10 && !func_96577_c(); ++var6)
 		{
 			try
 			{
-				var4 = var1.func_96374_a(field_96585_c.field_96408_a);
+				var5 = var1.func_96374_a(field_96585_c.field_96408_a);
 				var2 = true;
-			} catch(ExceptionRetryCall var7)
+			} catch(ExceptionRetryCall var8)
 			{
-				;
-			} catch(ExceptionMcoService var8)
+				var4 = var8.field_96393_c;
+			} catch(ExceptionMcoService var9)
 			{
 				var3 = true;
-				func_96575_a(var8.getLocalizedMessage());
+				func_96575_a(var9.toString());
+				Minecraft.getMinecraft().getLogAgent().logSevere(var9.toString());
 				break;
-			} catch(IOException var9)
+			} catch(IOException var10)
 			{
-				;
-			} catch(Exception var10)
+				Minecraft.getMinecraft().getLogAgent().logWarning("Realms: could not parse response");
+			} catch(Exception var11)
 			{
 				var3 = true;
-				func_96575_a(var10.getLocalizedMessage());
+				func_96575_a(var11.getLocalizedMessage());
 			}
 			if(var2)
 			{
 				break;
 			}
-			func_96581_e();
+			func_111251_a(var4);
 		}
 		if(!func_96577_c() && !var3)
 		{
 			if(var2)
 			{
-				ServerAddress var11 = ServerAddress.func_78860_a(var4.field_96417_a);
-				func_96582_a(var11.getIP(), var11.getPort());
+				ServerAddress var12 = ServerAddress.func_78860_a(var5.field_96417_a);
+				func_96582_a(var12.getIP(), var12.getPort());
 			} else
 			{
 				func_96578_b().displayGuiScreen(field_96584_d);
diff --git a/RMCClient/minecraft/net/minecraft/src/TaskResetWorld.java b/RMCClient/minecraft/net/minecraft/src/TaskResetWorld.java
index 8a5ad6a..6146cba 100644
--- a/RMCClient/minecraft/net/minecraft/src/TaskResetWorld.java
+++ b/RMCClient/minecraft/net/minecraft/src/TaskResetWorld.java
@@ -1,35 +1,43 @@
 package net.minecraft.src;
 
-import java.io.IOException;
-
 class TaskResetWorld extends TaskLongRunning
 {
 	private final long field_96591_c;
 	private final String field_104066_d;
+	private final WorldTemplate field_111252_e;
 	final GuiScreenResetWorld field_96592_a;
 	
-	public TaskResetWorld(GuiScreenResetWorld par1GuiScreenResetWorld, long par2, String par4Str)
+	public TaskResetWorld(GuiScreenResetWorld p_i1134_1_, long p_i1134_2_, String p_i1134_4_, WorldTemplate p_i1134_5_)
 	{
-		field_96592_a = par1GuiScreenResetWorld;
-		field_96591_c = par2;
-		field_104066_d = par4Str;
+		field_96592_a = p_i1134_1_;
+		field_96591_c = p_i1134_2_;
+		field_104066_d = p_i1134_4_;
+		field_111252_e = p_i1134_5_;
 	}
 	
 	@Override public void run()
 	{
-		McoClient var1 = new McoClient(func_96578_b().session);
-		String var2 = StringTranslate.getInstance().translateKey("mco.reset.world.resetting.screen.title");
+		McoClient var1 = new McoClient(func_96578_b().func_110432_I());
+		String var2 = I18n.func_135053_a("mco.reset.world.resetting.screen.title");
 		func_96576_b(var2);
 		try
 		{
-			var1.func_96376_d(field_96591_c, field_104066_d);
+			if(field_111252_e != null)
+			{
+				var1.func_111233_e(field_96591_c, field_111252_e.field_110734_a);
+			} else
+			{
+				var1.func_96376_d(field_96591_c, field_104066_d);
+			}
 			GuiScreenResetWorld.func_96147_b(field_96592_a).displayGuiScreen(GuiScreenResetWorld.func_96148_a(field_96592_a));
 		} catch(ExceptionMcoService var4)
 		{
-			func_96575_a(var4.field_96391_b);
-		} catch(IOException var5)
+			GuiScreenResetWorld.func_130025_c(field_96592_a).getLogAgent().logSevere(var4.toString());
+			func_96575_a(var4.toString());
+		} catch(Exception var5)
 		{
-			;
+			GuiScreenResetWorld.func_130024_d(field_96592_a).getLogAgent().logWarning("Realms: ");
+			func_96575_a(var5.toString());
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/TaskWorldCreation.java b/RMCClient/minecraft/net/minecraft/src/TaskWorldCreation.java
index 8066e4b..6550cd1 100644
--- a/RMCClient/minecraft/net/minecraft/src/TaskWorldCreation.java
+++ b/RMCClient/minecraft/net/minecraft/src/TaskWorldCreation.java
@@ -7,40 +7,49 @@
 {
 	private final String field_96589_c;
 	private final String field_96587_d;
-	private final String field_96588_e;
 	private final String field_104065_f;
+	private final WorldTemplate field_111253_f;
 	final GuiScreenCreateOnlineWorld field_96590_a;
 	
-	public TaskWorldCreation(GuiScreenCreateOnlineWorld par1GuiScreenCreateOnlineWorld, String par2Str, String par3Str, String par4Str, String par5Str)
+	public TaskWorldCreation(GuiScreenCreateOnlineWorld p_i1106_1_, String p_i1106_2_, String p_i1106_3_, String p_i1106_4_, WorldTemplate p_i1106_5_)
 	{
-		field_96590_a = par1GuiScreenCreateOnlineWorld;
-		field_96589_c = par2Str;
-		field_96587_d = par3Str;
-		field_96588_e = par4Str;
-		field_104065_f = par5Str;
+		field_96590_a = p_i1106_1_;
+		field_96589_c = p_i1106_2_;
+		field_96587_d = p_i1106_3_;
+		field_104065_f = p_i1106_4_;
+		field_111253_f = p_i1106_5_;
 	}
 	
 	@Override public void run()
 	{
-		String var1 = StringTranslate.getInstance().translateKey("mco.create.world.wait");
+		String var1 = I18n.func_135053_a("mco.create.world.wait");
 		func_96576_b(var1);
-		McoClient var2 = new McoClient(GuiScreenCreateOnlineWorld.func_96248_a(field_96590_a).session);
+		McoClient var2 = new McoClient(GuiScreenCreateOnlineWorld.func_96248_a(field_96590_a).func_110432_I());
 		try
 		{
-			var2.func_96386_a(field_96589_c, field_96587_d, field_96588_e, field_104065_f);
+			if(field_111253_f != null)
+			{
+				var2.func_96386_a(field_96589_c, field_96587_d, field_104065_f, field_111253_f.field_110734_a);
+			} else
+			{
+				var2.func_96386_a(field_96589_c, field_96587_d, field_104065_f, "-1");
+			}
 			GuiScreenCreateOnlineWorld.func_96246_c(field_96590_a).displayGuiScreen(GuiScreenCreateOnlineWorld.func_96247_b(field_96590_a));
 		} catch(ExceptionMcoService var4)
 		{
-			func_96575_a(var4.field_96391_b);
+			GuiScreenCreateOnlineWorld.func_130026_d(field_96590_a).getLogAgent().logSevere(var4.toString());
+			func_96575_a(var4.toString());
 		} catch(UnsupportedEncodingException var5)
 		{
-			;
+			GuiScreenCreateOnlineWorld.func_130027_e(field_96590_a).getLogAgent().logWarning("Realms: " + var5.getLocalizedMessage());
+			func_96575_a(var5.getLocalizedMessage());
 		} catch(IOException var6)
 		{
-			;
+			GuiScreenCreateOnlineWorld.func_130028_f(field_96590_a).getLogAgent().logWarning("Realms: could not parse response");
+			func_96575_a(var6.getLocalizedMessage());
 		} catch(Exception var7)
 		{
-			func_96575_a("Failed");
+			func_96575_a(var7.getLocalizedMessage());
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/TcpConnection.java b/RMCClient/minecraft/net/minecraft/src/TcpConnection.java
index f3613d5..aa0964e 100644
--- a/RMCClient/minecraft/net/minecraft/src/TcpConnection.java
+++ b/RMCClient/minecraft/net/minecraft/src/TcpConnection.java
@@ -13,9 +13,13 @@
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Queue;
+import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.atomic.AtomicInteger;
 
 import javax.crypto.SecretKey;
+
+import net.minecraft.server.MinecraftServer;
 
 public class TcpConnection implements INetworkManager
 {
@@ -29,7 +33,7 @@
 	private volatile DataOutputStream socketOutputStream;
 	private volatile boolean isRunning;
 	private volatile boolean isTerminating;
-	private List readPackets;
+	private Queue readPackets;
 	private List dataPackets;
 	private List chunkDataPackets;
 	private NetHandler theNetHandler;
@@ -49,46 +53,37 @@
 	private PrivateKey field_74463_A;
 	private int chunkDataPacketsDelay;
 	
-	public TcpConnection(ILogAgent par1ILogAgent, Socket par2Socket, String par3Str, NetHandler par4NetHandler) throws IOException
+	public TcpConnection(ILogAgent p_i1397_1_, Socket p_i1397_2_, String p_i1397_3_, NetHandler p_i1397_4_) throws IOException
 	{
-		this(par1ILogAgent, par2Socket, par3Str, par4NetHandler, (PrivateKey) null);
+		this(p_i1397_1_, p_i1397_2_, p_i1397_3_, p_i1397_4_, (PrivateKey) null);
 	}
 	
-	public TcpConnection(ILogAgent par1ILogAgent, Socket par2Socket, String par3Str, NetHandler par4NetHandler, PrivateKey par5PrivateKey) throws IOException
+	public TcpConnection(ILogAgent p_i1398_1_, Socket p_i1398_2_, String p_i1398_3_, NetHandler p_i1398_4_, PrivateKey p_i1398_5_) throws IOException
 	{
 		sendQueueLock = new Object();
 		isRunning = true;
-		isTerminating = false;
-		readPackets = Collections.synchronizedList(new ArrayList());
+		readPackets = new ConcurrentLinkedQueue();
 		dataPackets = Collections.synchronizedList(new ArrayList());
 		chunkDataPackets = Collections.synchronizedList(new ArrayList());
-		isServerTerminating = false;
 		terminationReason = "";
-		field_74490_x = 0;
-		sendQueueByteLength = 0;
-		field_74468_e = 0;
-		isInputBeingDecrypted = false;
-		isOutputEncrypted = false;
-		sharedKeyForEncryption = null;
-		field_74463_A = null;
 		chunkDataPacketsDelay = 50;
-		field_74463_A = par5PrivateKey;
-		networkSocket = par2Socket;
-		field_98215_i = par1ILogAgent;
-		remoteSocketAddress = par2Socket.getRemoteSocketAddress();
-		theNetHandler = par4NetHandler;
+		field_74463_A = p_i1398_5_;
+		networkSocket = p_i1398_2_;
+		field_98215_i = p_i1398_1_;
+		remoteSocketAddress = p_i1398_2_.getRemoteSocketAddress();
+		theNetHandler = p_i1398_4_;
 		try
 		{
-			par2Socket.setSoTimeout(30000);
-			par2Socket.setTrafficClass(24);
+			p_i1398_2_.setSoTimeout(30000);
+			p_i1398_2_.setTrafficClass(24);
 		} catch(SocketException var7)
 		{
 			System.err.println(var7.getMessage());
 		}
-		socketInputStream = new DataInputStream(par2Socket.getInputStream());
-		socketOutputStream = new DataOutputStream(new BufferedOutputStream(par2Socket.getOutputStream(), 5120));
-		readThread = new TcpReaderThread(this, par3Str + " read thread");
-		writeThread = new TcpWriterThread(this, par3Str + " write thread");
+		socketInputStream = new DataInputStream(p_i1398_2_.getInputStream());
+		socketOutputStream = new DataOutputStream(new BufferedOutputStream(p_i1398_2_.getOutputStream(), 5120));
+		readThread = new TcpReaderThread(this, p_i1398_3_ + " read thread");
+		writeThread = new TcpWriterThread(this, p_i1398_3_ + " write thread");
 		readThread.start();
 		writeThread.start();
 	}
@@ -239,10 +234,13 @@
 			field_74490_x = 0;
 		}
 		int var1 = 1000;
-		while(!readPackets.isEmpty() && var1-- >= 0)
+		while(var1-- >= 0)
 		{
-			Packet var2 = (Packet) readPackets.remove(0);
-			var2.processPacket(theNetHandler);
+			Packet var2 = (Packet) readPackets.poll();
+			if(var2 != null && !theNetHandler.func_142032_c())
+			{
+				var2.processPacket(theNetHandler);
+			}
 		}
 		wakeThreads();
 		if(isTerminating && readPackets.isEmpty())
@@ -305,7 +303,7 @@
 			Packet var2;
 			int var10001;
 			int[] var10000;
-			if(field_74468_e == 0 || !dataPackets.isEmpty() && System.currentTimeMillis() - ((Packet) dataPackets.get(0)).creationTimeMillis >= field_74468_e)
+			if(field_74468_e == 0 || !dataPackets.isEmpty() && MinecraftServer.func_130071_aq() - ((Packet) dataPackets.get(0)).creationTimeMillis >= field_74468_e)
 			{
 				var2 = func_74460_a(false);
 				if(var2 != null)
@@ -325,7 +323,7 @@
 					var1 = true;
 				}
 			}
-			if(chunkDataPacketsDelay-- <= 0 && (field_74468_e == 0 || !chunkDataPackets.isEmpty() && System.currentTimeMillis() - ((Packet) chunkDataPackets.get(0)).creationTimeMillis >= field_74468_e))
+			if(chunkDataPacketsDelay-- <= 0 && (field_74468_e == 0 || !chunkDataPackets.isEmpty() && MinecraftServer.func_130071_aq() - ((Packet) chunkDataPackets.get(0)).creationTimeMillis >= field_74468_e))
 			{
 				var2 = func_74460_a(true);
 				if(var2 != null)
diff --git a/RMCClient/minecraft/net/minecraft/src/TcpMasterThread.java b/RMCClient/minecraft/net/minecraft/src/TcpMasterThread.java
index 23b48ca..17d8674 100644
--- a/RMCClient/minecraft/net/minecraft/src/TcpMasterThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/TcpMasterThread.java
@@ -4,9 +4,9 @@
 {
 	final TcpConnection theTcpConnection;
 	
-	TcpMasterThread(TcpConnection par1TcpConnection)
+	TcpMasterThread(TcpConnection p_i1395_1_)
 	{
-		theTcpConnection = par1TcpConnection;
+		theTcpConnection = p_i1395_1_;
 	}
 	
 	@Override @SuppressWarnings("deprecation") public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/TcpMonitorThread.java b/RMCClient/minecraft/net/minecraft/src/TcpMonitorThread.java
index 056d535..08e1a35 100644
--- a/RMCClient/minecraft/net/minecraft/src/TcpMonitorThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/TcpMonitorThread.java
@@ -4,9 +4,9 @@
 {
 	final TcpConnection theTcpConnection;
 	
-	TcpMonitorThread(TcpConnection par1TcpConnection)
+	TcpMonitorThread(TcpConnection p_i1396_1_)
 	{
-		theTcpConnection = par1TcpConnection;
+		theTcpConnection = p_i1396_1_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/TcpReaderThread.java b/RMCClient/minecraft/net/minecraft/src/TcpReaderThread.java
index dd516bd..e850a46 100644
--- a/RMCClient/minecraft/net/minecraft/src/TcpReaderThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/TcpReaderThread.java
@@ -4,10 +4,10 @@
 {
 	final TcpConnection theTcpConnection;
 	
-	TcpReaderThread(TcpConnection par1TcpConnection, String par2Str)
+	TcpReaderThread(TcpConnection p_i1393_1_, String p_i1393_2_)
 	{
-		super(par2Str);
-		theTcpConnection = par1TcpConnection;
+		super(p_i1393_2_);
+		theTcpConnection = p_i1393_1_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/TcpWriterThread.java b/RMCClient/minecraft/net/minecraft/src/TcpWriterThread.java
index 0026ab6..f6d286c 100644
--- a/RMCClient/minecraft/net/minecraft/src/TcpWriterThread.java
+++ b/RMCClient/minecraft/net/minecraft/src/TcpWriterThread.java
@@ -6,10 +6,10 @@
 {
 	final TcpConnection theTcpConnection;
 	
-	TcpWriterThread(TcpConnection par1TcpConnection, String par2Str)
+	TcpWriterThread(TcpConnection p_i1394_1_, String p_i1394_2_)
 	{
-		super(par2Str);
-		theTcpConnection = par1TcpConnection;
+		super(p_i1394_2_);
+		theTcpConnection = p_i1394_1_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/Team.java b/RMCClient/minecraft/net/minecraft/src/Team.java
new file mode 100644
index 0000000..bae5a1f
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Team.java
@@ -0,0 +1,17 @@
+package net.minecraft.src;
+
+public abstract class Team
+{
+	public abstract String func_142053_d(String var1);
+	
+	public boolean func_142054_a(Team p_142054_1_)
+	{
+		return p_142054_1_ == null ? false : this == p_142054_1_;
+	}
+	
+	public abstract String func_96661_b();
+	
+	public abstract boolean func_96665_g();
+	
+	public abstract boolean func_98297_h();
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Teleporter.java b/RMCClient/minecraft/net/minecraft/src/Teleporter.java
index 416f951..f7c9de5 100644
--- a/RMCClient/minecraft/net/minecraft/src/Teleporter.java
+++ b/RMCClient/minecraft/net/minecraft/src/Teleporter.java
@@ -12,10 +12,10 @@
 	private final LongHashMap destinationCoordinateCache = new LongHashMap();
 	private final List destinationCoordinateKeys = new ArrayList();
 	
-	public Teleporter(WorldServer par1WorldServer)
+	public Teleporter(WorldServer p_i1963_1_)
 	{
-		worldServerInstance = par1WorldServer;
-		random = new Random(par1WorldServer.getSeed());
+		worldServerInstance = p_i1963_1_;
+		random = new Random(p_i1963_1_.getSeed());
 	}
 	
 	public boolean makePortal(Entity par1Entity)
diff --git a/RMCClient/minecraft/net/minecraft/src/Tessellator.java b/RMCClient/minecraft/net/minecraft/src/Tessellator.java
index edc658b..bfed022 100644
--- a/RMCClient/minecraft/net/minecraft/src/Tessellator.java
+++ b/RMCClient/minecraft/net/minecraft/src/Tessellator.java
@@ -13,46 +13,46 @@
 
 public class Tessellator
 {
-	private static boolean convertQuadsToTriangles = false;
-	private static boolean tryVBO = false;
+	private static boolean convertQuadsToTriangles;
+	private static boolean tryVBO;
 	private ByteBuffer byteBuffer;
 	private IntBuffer intBuffer;
 	private FloatBuffer floatBuffer;
 	private ShortBuffer shortBuffer;
 	private int[] rawBuffer;
-	private int vertexCount = 0;
+	private int vertexCount;
 	private double textureU;
 	private double textureV;
 	private int brightness;
 	private int color;
-	private boolean hasColor = false;
-	private boolean hasTexture = false;
-	private boolean hasBrightness = false;
-	private boolean hasNormals = false;
-	private int rawBufferIndex = 0;
-	private int addedVertices = 0;
-	private boolean isColorDisabled = false;
+	private boolean hasColor;
+	private boolean hasTexture;
+	private boolean hasBrightness;
+	private boolean hasNormals;
+	private int rawBufferIndex;
+	private int addedVertices;
+	private boolean isColorDisabled;
 	private int drawMode;
 	private double xOffset;
 	private double yOffset;
 	private double zOffset;
 	private int normal;
 	public static final Tessellator instance = new Tessellator(2097152);
-	private boolean isDrawing = false;
-	private boolean useVBO = false;
+	private boolean isDrawing;
+	private boolean useVBO;
 	private IntBuffer vertexBuffers;
-	private int vboIndex = 0;
+	private int vboIndex;
 	private int vboCount = 10;
 	private int bufferSize;
 	
-	private Tessellator(int par1)
+	private Tessellator(int p_i1250_1_)
 	{
-		bufferSize = par1;
-		byteBuffer = GLAllocation.createDirectByteBuffer(par1 * 4);
+		bufferSize = p_i1250_1_;
+		byteBuffer = GLAllocation.createDirectByteBuffer(p_i1250_1_ * 4);
 		intBuffer = byteBuffer.asIntBuffer();
 		floatBuffer = byteBuffer.asFloatBuffer();
 		shortBuffer = byteBuffer.asShortBuffer();
-		rawBuffer = new int[par1];
+		rawBuffer = new int[p_i1250_1_];
 		useVBO = tryVBO && GLContext.getCapabilities().GL_ARB_vertex_buffer_object;
 		if(useVBO)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/Texture.java b/RMCClient/minecraft/net/minecraft/src/Texture.java
deleted file mode 100644
index 7feaf90..0000000
--- a/RMCClient/minecraft/net/minecraft/src/Texture.java
+++ /dev/null
@@ -1,336 +0,0 @@
-package net.minecraft.src;
-
-import java.awt.image.BufferedImage;
-import java.io.File;
-import java.io.IOException;
-import java.nio.ByteBuffer;
-
-import javax.imageio.ImageIO;
-
-import net.minecraft.client.Minecraft;
-
-import org.lwjgl.opengl.GL11;
-import org.lwjgl.opengl.GL12;
-
-public class Texture
-{
-	private int glTextureId;
-	private int textureId;
-	private int textureType;
-	private final int width;
-	private final int height;
-	private final int textureDepth;
-	private final int textureFormat;
-	private final int textureTarget;
-	private final int textureMinFilter;
-	private final int textureMagFilter;
-	private final int textureWrap;
-	private final boolean mipmapActive;
-	private final String textureName;
-	private Rect2i textureRect;
-	private boolean transferred;
-	private boolean autoCreate;
-	private boolean textureNotModified;
-	private ByteBuffer textureData;
-	
-	public Texture(String par1Str, int par2, int par3, int par4, int par5, int par6, int par7, int par8, BufferedImage par9BufferedImage)
-	{
-		this(par1Str, par2, par3, par4, 1, par5, par6, par7, par8, par9BufferedImage);
-	}
-	
-	private Texture(String par1Str, int par2, int par3, int par4, int par5, int par6, int par7, int par8, int par9)
-	{
-		textureName = par1Str;
-		textureType = par2;
-		width = par3;
-		height = par4;
-		textureDepth = par5;
-		textureFormat = par7;
-		textureMinFilter = par8;
-		textureMagFilter = par9;
-		textureWrap = par6;
-		textureRect = new Rect2i(0, 0, par3, par4);
-		if(par4 == 1 && par5 == 1)
-		{
-			textureTarget = 3552;
-		} else if(par5 == 1)
-		{
-			textureTarget = 3553;
-		} else
-		{
-			textureTarget = 32879;
-		}
-		mipmapActive = par8 != 9728 && par8 != 9729 || par9 != 9728 && par9 != 9729;
-		if(par2 != 2)
-		{
-			glTextureId = GL11.glGenTextures();
-			GL11.glBindTexture(textureTarget, glTextureId);
-			GL11.glTexParameteri(textureTarget, GL11.GL_TEXTURE_MIN_FILTER, par8);
-			GL11.glTexParameteri(textureTarget, GL11.GL_TEXTURE_MAG_FILTER, par9);
-			GL11.glTexParameteri(textureTarget, GL11.GL_TEXTURE_WRAP_S, par6);
-			GL11.glTexParameteri(textureTarget, GL11.GL_TEXTURE_WRAP_T, par6);
-		} else
-		{
-			glTextureId = -1;
-		}
-		textureId = TextureManager.instance().getNextTextureId();
-	}
-	
-	public Texture(String par1Str, int par2, int par3, int par4, int par5, int par6, int par7, int par8, int par9, BufferedImage par10BufferedImage)
-	{
-		this(par1Str, par2, par3, par4, par5, par6, par7, par8, par9);
-		if(par10BufferedImage == null)
-		{
-			if(par3 != -1 && par4 != -1)
-			{
-				byte[] var11 = new byte[par3 * par4 * par5 * 4];
-				for(int var12 = 0; var12 < var11.length; ++var12)
-				{
-					var11[var12] = 0;
-				}
-				textureData = ByteBuffer.allocateDirect(var11.length);
-				textureData.clear();
-				textureData.put(var11);
-				textureData.position(0).limit(var11.length);
-				if(autoCreate)
-				{
-					uploadTexture();
-				} else
-				{
-					textureNotModified = false;
-				}
-			} else
-			{
-				transferred = false;
-			}
-		} else
-		{
-			transferred = true;
-			transferFromImage(par10BufferedImage);
-			if(par2 != 2)
-			{
-				uploadTexture();
-				autoCreate = false;
-			}
-		}
-	}
-	
-	public void bindTexture(int par1)
-	{
-		if(textureDepth == 1)
-		{
-			GL11.glEnable(GL11.GL_TEXTURE_2D);
-		} else
-		{
-			GL11.glEnable(GL12.GL_TEXTURE_3D);
-		}
-		OpenGlHelper.setActiveTexture(OpenGlHelper.defaultTexUnit + par1);
-		GL11.glBindTexture(textureTarget, glTextureId);
-		if(!textureNotModified)
-		{
-			uploadTexture();
-		}
-	}
-	
-	public void copyFrom(int par1, int par2, Texture par3Texture, boolean par4)
-	{
-		if(textureTarget != 32879)
-		{
-			ByteBuffer var5 = par3Texture.getTextureData();
-			textureData.position(0);
-			var5.position(0);
-			for(int var6 = 0; var6 < par3Texture.getHeight(); ++var6)
-			{
-				int var7 = par2 + var6;
-				int var8 = var6 * par3Texture.getWidth() * 4;
-				int var9 = var7 * width * 4;
-				if(par4)
-				{
-					var7 = par2 + par3Texture.getHeight() - var6;
-				}
-				for(int var10 = 0; var10 < par3Texture.getWidth(); ++var10)
-				{
-					int var11 = var9 + (var10 + par1) * 4;
-					int var12 = var8 + var10 * 4;
-					if(par4)
-					{
-						var11 = par1 + var10 * width * 4 + var7 * 4;
-					}
-					textureData.put(var11 + 0, var5.get(var12 + 0));
-					textureData.put(var11 + 1, var5.get(var12 + 1));
-					textureData.put(var11 + 2, var5.get(var12 + 2));
-					textureData.put(var11 + 3, var5.get(var12 + 3));
-				}
-			}
-			textureData.position(width * height * 4);
-			if(autoCreate)
-			{
-				uploadTexture();
-			} else
-			{
-				textureNotModified = false;
-			}
-		}
-	}
-	
-	public void fillRect(Rect2i par1Rect2i, int par2)
-	{
-		if(textureTarget != 32879)
-		{
-			Rect2i var3 = new Rect2i(0, 0, width, height);
-			var3.intersection(par1Rect2i);
-			textureData.position(0);
-			for(int var4 = var3.getRectY(); var4 < var3.getRectY() + var3.getRectHeight(); ++var4)
-			{
-				int var5 = var4 * width * 4;
-				for(int var6 = var3.getRectX(); var6 < var3.getRectX() + var3.getRectWidth(); ++var6)
-				{
-					textureData.put(var5 + var6 * 4 + 0, (byte) (par2 >> 24 & 255));
-					textureData.put(var5 + var6 * 4 + 1, (byte) (par2 >> 16 & 255));
-					textureData.put(var5 + var6 * 4 + 2, (byte) (par2 >> 8 & 255));
-					textureData.put(var5 + var6 * 4 + 3, (byte) (par2 >> 0 & 255));
-				}
-			}
-			if(autoCreate)
-			{
-				uploadTexture();
-			} else
-			{
-				textureNotModified = false;
-			}
-		}
-	}
-	
-	public void func_104062_b(int par1, int par2, Texture par3Texture)
-	{
-		GL11.glBindTexture(textureTarget, glTextureId);
-		GL11.glTexSubImage2D(textureTarget, 0, par1, par2, par3Texture.getWidth(), par3Texture.getHeight(), textureFormat, GL11.GL_UNSIGNED_BYTE, (ByteBuffer) par3Texture.getTextureData().position(0));
-		textureNotModified = true;
-	}
-	
-	public int getGlTextureId()
-	{
-		return glTextureId;
-	}
-	
-	public int getHeight()
-	{
-		return height;
-	}
-	
-	public ByteBuffer getTextureData()
-	{
-		return textureData;
-	}
-	
-	public int getTextureId()
-	{
-		return textureId;
-	}
-	
-	public String getTextureName()
-	{
-		return textureName;
-	}
-	
-	public final Rect2i getTextureRect()
-	{
-		return textureRect;
-	}
-	
-	public int getWidth()
-	{
-		return width;
-	}
-	
-	public void transferFromImage(BufferedImage par1BufferedImage)
-	{
-		if(textureTarget != 32879)
-		{
-			int var2 = par1BufferedImage.getWidth();
-			int var3 = par1BufferedImage.getHeight();
-			if(var2 <= width && var3 <= height)
-			{
-				int[] var4 = new int[] { 3, 0, 1, 2 };
-				int[] var5 = new int[] { 3, 2, 1, 0 };
-				int[] var6 = textureFormat == 32993 ? var5 : var4;
-				int[] var7 = new int[width * height];
-				int var8 = par1BufferedImage.getTransparency();
-				par1BufferedImage.getRGB(0, 0, width, height, var7, 0, var2);
-				byte[] var9 = new byte[width * height * 4];
-				for(int var10 = 0; var10 < height; ++var10)
-				{
-					for(int var11 = 0; var11 < width; ++var11)
-					{
-						int var12 = var10 * width + var11;
-						int var13 = var12 * 4;
-						var9[var13 + var6[0]] = (byte) (var7[var12] >> 24 & 255);
-						var9[var13 + var6[1]] = (byte) (var7[var12] >> 16 & 255);
-						var9[var13 + var6[2]] = (byte) (var7[var12] >> 8 & 255);
-						var9[var13 + var6[3]] = (byte) (var7[var12] >> 0 & 255);
-					}
-				}
-				textureData = ByteBuffer.allocateDirect(var9.length);
-				textureData.clear();
-				textureData.put(var9);
-				textureData.limit(var9.length);
-				if(autoCreate)
-				{
-					uploadTexture();
-				} else
-				{
-					textureNotModified = false;
-				}
-			} else
-			{
-				Minecraft.getMinecraft().getLogAgent().logWarning("transferFromImage called with a BufferedImage with dimensions (" + var2 + ", " + var3 + ") larger than the Texture dimensions (" + width + ", " + height + "). Ignoring.");
-			}
-		}
-	}
-	
-	public void uploadTexture()
-	{
-		textureData.flip();
-		if(height != 1 && textureDepth != 1)
-		{
-			GL12.glTexImage3D(textureTarget, 0, textureFormat, width, height, textureDepth, 0, textureFormat, GL11.GL_UNSIGNED_BYTE, textureData);
-		} else if(height != 1)
-		{
-			GL11.glTexImage2D(textureTarget, 0, textureFormat, width, height, 0, textureFormat, GL11.GL_UNSIGNED_BYTE, textureData);
-		} else
-		{
-			GL11.glTexImage1D(textureTarget, 0, textureFormat, width, 0, textureFormat, GL11.GL_UNSIGNED_BYTE, textureData);
-		}
-		textureNotModified = true;
-	}
-	
-	public void writeImage(String par1Str)
-	{
-		BufferedImage var2 = new BufferedImage(width, height, 2);
-		ByteBuffer var3 = getTextureData();
-		byte[] var4 = new byte[width * height * 4];
-		var3.position(0);
-		var3.get(var4);
-		for(int var5 = 0; var5 < width; ++var5)
-		{
-			for(int var6 = 0; var6 < height; ++var6)
-			{
-				int var7 = var6 * width * 4 + var5 * 4;
-				byte var8 = 0;
-				int var10 = var8 | (var4[var7 + 2] & 255) << 0;
-				var10 |= (var4[var7 + 1] & 255) << 8;
-				var10 |= (var4[var7 + 0] & 255) << 16;
-				var10 |= (var4[var7 + 3] & 255) << 24;
-				var2.setRGB(var5, var6, var10);
-			}
-		}
-		textureData.position(width * height * 4);
-		try
-		{
-			ImageIO.write(var2, "png", new File(Minecraft.getMinecraftDir(), par1Str));
-		} catch(IOException var9)
-		{
-			var9.printStackTrace();
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureAtlasSprite.java b/RMCClient/minecraft/net/minecraft/src/TextureAtlasSprite.java
new file mode 100644
index 0000000..0fe62d1
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/TextureAtlasSprite.java
@@ -0,0 +1,244 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+import javax.imageio.ImageIO;
+
+public class TextureAtlasSprite implements Icon
+{
+	private final String field_110984_i;
+	protected List field_110976_a = Lists.newArrayList();
+	private AnimationMetadataSection field_110982_k;
+	protected boolean field_130222_e;
+	protected int field_110975_c;
+	protected int field_110974_d;
+	protected int field_130223_c;
+	protected int field_130224_d;
+	private float field_110979_l;
+	private float field_110980_m;
+	private float field_110977_n;
+	private float field_110978_o;
+	protected int field_110973_g;
+	protected int field_110983_h;
+	
+	protected TextureAtlasSprite(String p_i1282_1_)
+	{
+		field_110984_i = p_i1282_1_;
+	}
+	
+	public void copyFrom(TextureAtlasSprite par1TextureStitched)
+	{
+		field_110975_c = par1TextureStitched.field_110975_c;
+		field_110974_d = par1TextureStitched.field_110974_d;
+		field_130223_c = par1TextureStitched.field_130223_c;
+		field_130224_d = par1TextureStitched.field_130224_d;
+		field_130222_e = par1TextureStitched.field_130222_e;
+		field_110979_l = par1TextureStitched.field_110979_l;
+		field_110980_m = par1TextureStitched.field_110980_m;
+		field_110977_n = par1TextureStitched.field_110977_n;
+		field_110978_o = par1TextureStitched.field_110978_o;
+	}
+	
+	public int[] func_110965_a(int p_110965_1_)
+	{
+		return (int[]) field_110976_a.get(p_110965_1_);
+	}
+	
+	public void func_110966_b(int p_110966_1_)
+	{
+		field_130223_c = p_110966_1_;
+	}
+	
+	public int func_110967_i()
+	{
+		return field_110974_d;
+	}
+	
+	public void func_110968_a(List p_110968_1_)
+	{
+		field_110976_a = p_110968_1_;
+	}
+	
+	public void func_110969_c(int p_110969_1_)
+	{
+		field_130224_d = p_110969_1_;
+	}
+	
+	public int func_110970_k()
+	{
+		return field_110976_a.size();
+	}
+	
+	public void func_110971_a(int p_110971_1_, int p_110971_2_, int p_110971_3_, int p_110971_4_, boolean p_110971_5_)
+	{
+		field_110975_c = p_110971_3_;
+		field_110974_d = p_110971_4_;
+		field_130222_e = p_110971_5_;
+		float var6 = (float) (0.009999999776482582D / p_110971_1_);
+		float var7 = (float) (0.009999999776482582D / p_110971_2_);
+		field_110979_l = p_110971_3_ / (float) p_110971_1_ + var6;
+		field_110980_m = (p_110971_3_ + field_130223_c) / (float) p_110971_1_ - var6;
+		field_110977_n = (float) p_110971_4_ / (float) p_110971_2_ + var7;
+		field_110978_o = (float) (p_110971_4_ + field_130224_d) / (float) p_110971_2_ - var7;
+	}
+	
+	public int func_130010_a()
+	{
+		return field_110975_c;
+	}
+	
+	public boolean func_130098_m()
+	{
+		return field_110982_k != null;
+	}
+	
+	private void func_130099_d(int p_130099_1_)
+	{
+		if(field_110976_a.size() <= p_130099_1_)
+		{
+			for(int var2 = field_110976_a.size(); var2 <= p_130099_1_; ++var2)
+			{
+				field_110976_a.add((Object) null);
+			}
+		}
+	}
+	
+	public void func_130100_a(Resource p_130100_1_) throws IOException
+	{
+		func_130102_n();
+		InputStream var2 = p_130100_1_.func_110527_b();
+		AnimationMetadataSection var3 = (AnimationMetadataSection) p_130100_1_.func_110526_a("animation");
+		BufferedImage var4 = ImageIO.read(var2);
+		field_130224_d = var4.getHeight();
+		field_130223_c = var4.getWidth();
+		int[] var5 = new int[field_130224_d * field_130223_c];
+		var4.getRGB(0, 0, field_130223_c, field_130224_d, var5, 0, field_130223_c);
+		if(var3 == null)
+		{
+			if(field_130224_d != field_130223_c) throw new RuntimeException("broken aspect ratio and not an animation");
+			field_110976_a.add(var5);
+		} else
+		{
+			int var6 = field_130224_d / field_130223_c;
+			int var7 = field_130223_c;
+			int var8 = field_130223_c;
+			field_130224_d = field_130223_c;
+			int var10;
+			if(var3.func_110473_c() > 0)
+			{
+				Iterator var9 = var3.func_130073_e().iterator();
+				while(var9.hasNext())
+				{
+					var10 = ((Integer) var9.next()).intValue();
+					if(var10 >= var6) throw new RuntimeException("invalid frameindex " + var10);
+					func_130099_d(var10);
+					field_110976_a.set(var10, func_130101_a(var5, var7, var8, var10));
+				}
+				field_110982_k = var3;
+			} else
+			{
+				ArrayList var11 = Lists.newArrayList();
+				for(var10 = 0; var10 < var6; ++var10)
+				{
+					field_110976_a.add(func_130101_a(var5, var7, var8, var10));
+					var11.add(new AnimationFrame(var10, -1));
+				}
+				field_110982_k = new AnimationMetadataSection(var11, field_130223_c, field_130224_d, var3.func_110469_d());
+			}
+		}
+	}
+	
+	private void func_130102_n()
+	{
+		field_110982_k = null;
+		func_110968_a(Lists.newArrayList());
+		field_110973_g = 0;
+		field_110983_h = 0;
+	}
+	
+	public void func_130103_l()
+	{
+		field_110976_a.clear();
+	}
+	
+	@Override public String getIconName()
+	{
+		return field_110984_i;
+	}
+	
+	@Override public float getInterpolatedU(double par1)
+	{
+		float var3 = field_110980_m - field_110979_l;
+		return field_110979_l + var3 * (float) par1 / 16.0F;
+	}
+	
+	@Override public float getInterpolatedV(double par1)
+	{
+		float var3 = field_110978_o - field_110977_n;
+		return field_110977_n + var3 * ((float) par1 / 16.0F);
+	}
+	
+	@Override public float getMaxU()
+	{
+		return field_110980_m;
+	}
+	
+	@Override public float getMaxV()
+	{
+		return field_110978_o;
+	}
+	
+	@Override public float getMinU()
+	{
+		return field_110979_l;
+	}
+	
+	@Override public float getMinV()
+	{
+		return field_110977_n;
+	}
+	
+	@Override public int getOriginX()
+	{
+		return field_130223_c;
+	}
+	
+	@Override public int getOriginY()
+	{
+		return field_130224_d;
+	}
+	
+	@Override public String toString()
+	{
+		return "TextureAtlasSprite{name=\'" + field_110984_i + '\'' + ", frameCount=" + field_110976_a.size() + ", rotated=" + field_130222_e + ", x=" + field_110975_c + ", y=" + field_110974_d + ", height=" + field_130224_d + ", width=" + field_130223_c + ", u0=" + field_110979_l + ", u1=" + field_110980_m + ", v0=" + field_110977_n + ", v1=" + field_110978_o + '}';
+	}
+	
+	public void updateAnimation()
+	{
+		++field_110983_h;
+		if(field_110983_h >= field_110982_k.func_110472_a(field_110973_g))
+		{
+			int var1 = field_110982_k.func_110468_c(field_110973_g);
+			int var2 = field_110982_k.func_110473_c() == 0 ? field_110976_a.size() : field_110982_k.func_110473_c();
+			field_110973_g = (field_110973_g + 1) % var2;
+			field_110983_h = 0;
+			int var3 = field_110982_k.func_110468_c(field_110973_g);
+			if(var1 != var3 && var3 >= 0 && var3 < field_110976_a.size())
+			{
+				TextureUtil.func_110998_a((int[]) field_110976_a.get(var3), field_130223_c, field_130224_d, field_110975_c, field_110974_d, false, false);
+			}
+		}
+	}
+	
+	private static int[] func_130101_a(int[] p_130101_0_, int p_130101_1_, int p_130101_2_, int p_130101_3_)
+	{
+		int[] var4 = new int[p_130101_1_ * p_130101_2_];
+		System.arraycopy(p_130101_0_, p_130101_3_ * var4.length, var4, 0, var4.length);
+		return var4;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureClock.java b/RMCClient/minecraft/net/minecraft/src/TextureClock.java
index 6147c41..5354e92 100644
--- a/RMCClient/minecraft/net/minecraft/src/TextureClock.java
+++ b/RMCClient/minecraft/net/minecraft/src/TextureClock.java
@@ -2,58 +2,61 @@
 
 import net.minecraft.client.Minecraft;
 
-public class TextureClock extends TextureStitched
+public class TextureClock extends TextureAtlasSprite
 {
 	private double field_94239_h;
 	private double field_94240_i;
 	
-	public TextureClock()
+	public TextureClock(String p_i1285_1_)
 	{
-		super("compass");
+		super(p_i1285_1_);
 	}
 	
 	@Override public void updateAnimation()
 	{
-		Minecraft var1 = Minecraft.getMinecraft();
-		double var2 = 0.0D;
-		if(var1.theWorld != null && var1.thePlayer != null)
+		if(!field_110976_a.isEmpty())
 		{
-			float var4 = var1.theWorld.getCelestialAngle(1.0F);
-			var2 = var4;
-			if(!var1.theWorld.provider.isSurfaceWorld())
+			Minecraft var1 = Minecraft.getMinecraft();
+			double var2 = 0.0D;
+			if(var1.theWorld != null && var1.thePlayer != null)
 			{
-				var2 = Math.random();
+				float var4 = var1.theWorld.getCelestialAngle(1.0F);
+				var2 = var4;
+				if(!var1.theWorld.provider.isSurfaceWorld())
+				{
+					var2 = Math.random();
+				}
 			}
-		}
-		double var7;
-		for(var7 = var2 - field_94239_h; var7 < -0.5D; ++var7)
-		{
-			;
-		}
-		while(var7 >= 0.5D)
-		{
-			--var7;
-		}
-		if(var7 < -1.0D)
-		{
-			var7 = -1.0D;
-		}
-		if(var7 > 1.0D)
-		{
-			var7 = 1.0D;
-		}
-		field_94240_i += var7 * 0.1D;
-		field_94240_i *= 0.8D;
-		field_94239_h += field_94240_i;
-		int var6;
-		for(var6 = (int) ((field_94239_h + 1.0D) * textureList.size()) % textureList.size(); var6 < 0; var6 = (var6 + textureList.size()) % textureList.size())
-		{
-			;
-		}
-		if(var6 != frameCounter)
-		{
-			frameCounter = var6;
-			textureSheet.copyFrom(originX, originY, (Texture) textureList.get(frameCounter), rotated);
+			double var7;
+			for(var7 = var2 - field_94239_h; var7 < -0.5D; ++var7)
+			{
+				;
+			}
+			while(var7 >= 0.5D)
+			{
+				--var7;
+			}
+			if(var7 < -1.0D)
+			{
+				var7 = -1.0D;
+			}
+			if(var7 > 1.0D)
+			{
+				var7 = 1.0D;
+			}
+			field_94240_i += var7 * 0.1D;
+			field_94240_i *= 0.8D;
+			field_94239_h += field_94240_i;
+			int var6;
+			for(var6 = (int) ((field_94239_h + 1.0D) * field_110976_a.size()) % field_110976_a.size(); var6 < 0; var6 = (var6 + field_110976_a.size()) % field_110976_a.size())
+			{
+				;
+			}
+			if(var6 != field_110973_g)
+			{
+				field_110973_g = var6;
+				TextureUtil.func_110998_a((int[]) field_110976_a.get(field_110973_g), field_130223_c, field_130224_d, field_110975_c, field_110974_d, false, false);
+			}
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureCompass.java b/RMCClient/minecraft/net/minecraft/src/TextureCompass.java
index 680979e..36b1337 100644
--- a/RMCClient/minecraft/net/minecraft/src/TextureCompass.java
+++ b/RMCClient/minecraft/net/minecraft/src/TextureCompass.java
@@ -2,16 +2,14 @@
 
 import net.minecraft.client.Minecraft;
 
-public class TextureCompass extends TextureStitched
+public class TextureCompass extends TextureAtlasSprite
 {
-	public static TextureCompass compassTexture;
 	public double currentAngle;
 	public double angleDelta;
 	
-	public TextureCompass()
+	public TextureCompass(String p_i1286_1_)
 	{
-		super("compass");
-		compassTexture = this;
+		super(p_i1286_1_);
 	}
 	
 	@Override public void updateAnimation()
@@ -28,54 +26,57 @@
 	
 	public void updateCompass(World par1World, double par2, double par4, double par6, boolean par8, boolean par9)
 	{
-		double var10 = 0.0D;
-		if(par1World != null && !par8)
+		if(!field_110976_a.isEmpty())
 		{
-			ChunkCoordinates var12 = par1World.getSpawnPoint();
-			double var13 = var12.posX - par2;
-			double var15 = var12.posZ - par4;
-			par6 %= 360.0D;
-			var10 = -((par6 - 90.0D) * Math.PI / 180.0D - Math.atan2(var15, var13));
-			if(!par1World.provider.isSurfaceWorld())
+			double var10 = 0.0D;
+			if(par1World != null && !par8)
 			{
-				var10 = Math.random() * Math.PI * 2.0D;
+				ChunkCoordinates var12 = par1World.getSpawnPoint();
+				double var13 = var12.posX - par2;
+				double var15 = var12.posZ - par4;
+				par6 %= 360.0D;
+				var10 = -((par6 - 90.0D) * Math.PI / 180.0D - Math.atan2(var15, var13));
+				if(!par1World.provider.isSurfaceWorld())
+				{
+					var10 = Math.random() * Math.PI * 2.0D;
+				}
 			}
-		}
-		if(par9)
-		{
-			currentAngle = var10;
-		} else
-		{
-			double var17;
-			for(var17 = var10 - currentAngle; var17 < -Math.PI; var17 += Math.PI * 2D)
+			if(par9)
+			{
+				currentAngle = var10;
+			} else
+			{
+				double var17;
+				for(var17 = var10 - currentAngle; var17 < -Math.PI; var17 += Math.PI * 2D)
+				{
+					;
+				}
+				while(var17 >= Math.PI)
+				{
+					var17 -= Math.PI * 2D;
+				}
+				if(var17 < -1.0D)
+				{
+					var17 = -1.0D;
+				}
+				if(var17 > 1.0D)
+				{
+					var17 = 1.0D;
+				}
+				angleDelta += var17 * 0.1D;
+				angleDelta *= 0.8D;
+				currentAngle += angleDelta;
+			}
+			int var18;
+			for(var18 = (int) ((currentAngle / (Math.PI * 2D) + 1.0D) * field_110976_a.size()) % field_110976_a.size(); var18 < 0; var18 = (var18 + field_110976_a.size()) % field_110976_a.size())
 			{
 				;
 			}
-			while(var17 >= Math.PI)
+			if(var18 != field_110973_g)
 			{
-				var17 -= Math.PI * 2D;
+				field_110973_g = var18;
+				TextureUtil.func_110998_a((int[]) field_110976_a.get(field_110973_g), field_130223_c, field_130224_d, field_110975_c, field_110974_d, false, false);
 			}
-			if(var17 < -1.0D)
-			{
-				var17 = -1.0D;
-			}
-			if(var17 > 1.0D)
-			{
-				var17 = 1.0D;
-			}
-			angleDelta += var17 * 0.1D;
-			angleDelta *= 0.8D;
-			currentAngle += angleDelta;
-		}
-		int var18;
-		for(var18 = (int) ((currentAngle / (Math.PI * 2D) + 1.0D) * textureList.size()) % textureList.size(); var18 < 0; var18 = (var18 + textureList.size()) % textureList.size())
-		{
-			;
-		}
-		if(var18 != frameCounter)
-		{
-			frameCounter = var18;
-			textureSheet.copyFrom(originX, originY, (Texture) textureList.get(frameCounter), rotated);
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureManager.java b/RMCClient/minecraft/net/minecraft/src/TextureManager.java
index d894e52..d3df720 100644
--- a/RMCClient/minecraft/net/minecraft/src/TextureManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/TextureManager.java
@@ -1,125 +1,122 @@
 package net.minecraft.src;
 
-import java.awt.image.BufferedImage;
-import java.io.File;
-import java.io.FileNotFoundException;
 import java.io.IOException;
-import java.util.ArrayList;
-import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
-
-import javax.imageio.ImageIO;
+import java.util.Map;
+import java.util.Map.Entry;
 
 import net.minecraft.client.Minecraft;
 
-public class TextureManager
+public class TextureManager implements Tickable, ResourceManagerReloadListener
 {
-	private static TextureManager instance;
-	private int nextTextureID = 0;
-	private final HashMap texturesMap = new HashMap();
-	private final HashMap mapNameToId = new HashMap();
+	private final Map field_110585_a = Maps.newHashMap();
+	private final Map field_130089_b = Maps.newHashMap();
+	private final List field_110583_b = Lists.newArrayList();
+	private final Map field_110584_c = Maps.newHashMap();
+	private ResourceManager field_110582_d;
 	
-	public Texture createEmptyTexture(String par1Str, int par2, int par3, int par4, int par5)
+	public TextureManager(ResourceManager p_i1284_1_)
 	{
-		return makeTexture(par1Str, par2, par3, par4, 10496, par5, 9728, 9728, false, (BufferedImage) null);
+		field_110582_d = p_i1284_1_;
 	}
 	
-	public Stitcher createStitcher(String par1Str)
+	@Override public void func_110549_a(ResourceManager p_110549_1_)
 	{
-		int var2 = Minecraft.getGLMaximumTextureSize();
-		return new Stitcher(par1Str, var2, var2, true);
-	}
-	
-	public List createTexture(String par1Str)
-	{
-		ArrayList var2 = new ArrayList();
-		ITexturePack var3 = Minecraft.getMinecraft().texturePackList.getSelectedTexturePack();
-		try
+		Iterator var2 = field_110585_a.entrySet().iterator();
+		while(var2.hasNext())
 		{
-			BufferedImage var9 = ImageIO.read(var3.getResourceAsStream("/" + par1Str));
-			int var10 = var9.getHeight();
-			int var11 = var9.getWidth();
-			String var12 = getBasename(par1Str);
-			if(hasAnimationTxt(par1Str, var3))
-			{
-				int var13 = var11;
-				int var14 = var11;
-				int var15 = var10 / var11;
-				for(int var16 = 0; var16 < var15; ++var16)
-				{
-					Texture var17 = makeTexture(var12, 2, var13, var14, 10496, 6408, 9728, 9728, false, var9.getSubimage(0, var14 * var16, var13, var14));
-					var2.add(var17);
-				}
-			} else if(var11 == var10)
-			{
-				var2.add(makeTexture(var12, 2, var11, var10, 10496, 6408, 9728, 9728, false, var9));
-			} else
-			{
-				Minecraft.getMinecraft().getLogAgent().logWarning("TextureManager.createTexture: Skipping " + par1Str + " because of broken aspect ratio and not animation");
-			}
-			return var2;
-		} catch(FileNotFoundException var18)
-		{
-			Minecraft.getMinecraft().getLogAgent().logWarning("TextureManager.createTexture called for file " + par1Str + ", but that file does not exist. Ignoring.");
-		} catch(IOException var19)
-		{
-			Minecraft.getMinecraft().getLogAgent().logWarning("TextureManager.createTexture encountered an IOException when trying to read file " + par1Str + ". Ignoring.");
-		}
-		return var2;
-	}
-	
-	private String getBasename(String par1Str)
-	{
-		File var2 = new File(par1Str);
-		return var2.getName().substring(0, var2.getName().lastIndexOf(46));
-	}
-	
-	public int getNextTextureId()
-	{
-		return nextTextureID++;
-	}
-	
-	private boolean hasAnimationTxt(String par1Str, ITexturePack par2ITexturePack)
-	{
-		String var3 = "/" + par1Str.substring(0, par1Str.lastIndexOf(46)) + ".txt";
-		boolean var4 = par2ITexturePack.func_98138_b("/" + par1Str, false);
-		return Minecraft.getMinecraft().texturePackList.getSelectedTexturePack().func_98138_b(var3, !var4);
-	}
-	
-	public Texture makeTexture(String par1Str, int par2, int par3, int par4, int par5, int par6, int par7, int par8, boolean par9, BufferedImage par10BufferedImage)
-	{
-		Texture var11 = new Texture(par1Str, par2, par3, par4, par5, par6, par7, par8, par10BufferedImage);
-		this.registerTexture(var11);
-		return var11;
-	}
-	
-	public void registerTexture(String par1Str, Texture par2Texture)
-	{
-		mapNameToId.put(par1Str, Integer.valueOf(par2Texture.getTextureId()));
-		if(!texturesMap.containsKey(Integer.valueOf(par2Texture.getTextureId())))
-		{
-			texturesMap.put(Integer.valueOf(par2Texture.getTextureId()), par2Texture);
+			Entry var3 = (Entry) var2.next();
+			func_110579_a((ResourceLocation) var3.getKey(), (TextureObject) var3.getValue());
 		}
 	}
 	
-	public void registerTexture(Texture par1Texture)
+	@Override public void func_110550_d()
 	{
-		if(texturesMap.containsValue(par1Texture))
+		Iterator var1 = field_110583_b.iterator();
+		while(var1.hasNext())
 		{
-			Minecraft.getMinecraft().getLogAgent().logWarning("TextureManager.registerTexture called, but this texture has already been registered. ignoring.");
+			Tickable var2 = (Tickable) var1.next();
+			var2.func_110550_d();
+		}
+	}
+	
+	public void func_110577_a(ResourceLocation p_110577_1_)
+	{
+		Object var2 = field_110585_a.get(p_110577_1_);
+		if(var2 == null)
+		{
+			var2 = new SimpleTexture(p_110577_1_);
+			func_110579_a(p_110577_1_, (TextureObject) var2);
+		}
+		TextureUtil.bindTexture(((TextureObject) var2).func_110552_b());
+	}
+	
+	public ResourceLocation func_110578_a(String p_110578_1_, DynamicTexture p_110578_2_)
+	{
+		Integer var3 = (Integer) field_110584_c.get(p_110578_1_);
+		if(var3 == null)
+		{
+			var3 = Integer.valueOf(1);
 		} else
 		{
-			texturesMap.put(Integer.valueOf(par1Texture.getTextureId()), par1Texture);
+			var3 = Integer.valueOf(var3.intValue() + 1);
 		}
+		field_110584_c.put(p_110578_1_, var3);
+		ResourceLocation var4 = new ResourceLocation(String.format("dynamic/%s_%d", new Object[] { p_110578_1_, var3 }));
+		func_110579_a(var4, p_110578_2_);
+		return var4;
 	}
 	
-	public static void init()
+	public boolean func_110579_a(ResourceLocation p_110579_1_, TextureObject p_110579_2_)
 	{
-		instance = new TextureManager();
+		boolean var3 = true;
+		try
+		{
+			p_110579_2_.func_110551_a(field_110582_d);
+		} catch(IOException var8)
+		{
+			Minecraft.getMinecraft().getLogAgent().logWarningException("Failed to load texture: " + p_110579_1_, var8);
+			p_110579_2_ = TextureUtil.field_111001_a;
+			field_110585_a.put(p_110579_1_, p_110579_2_);
+			var3 = false;
+		} catch(Throwable var9)
+		{
+			CrashReport var5 = CrashReport.makeCrashReport(var9, "Registering texture");
+			CrashReportCategory var6 = var5.makeCategory("Resource location being registered");
+			var6.addCrashSection("Resource location", p_110579_1_);
+			var6.addCrashSectionCallable("Texture object class", new TextureManagerINNER1(this, p_110579_2_));
+			throw new ReportedException(var5);
+		}
+		field_110585_a.put(p_110579_1_, p_110579_2_);
+		return var3;
 	}
 	
-	public static TextureManager instance()
+	public boolean func_110580_a(ResourceLocation p_110580_1_, TickableTextureObject p_110580_2_)
 	{
-		return instance;
+		if(func_110579_a(p_110580_1_, p_110580_2_))
+		{
+			field_110583_b.add(p_110580_2_);
+			return true;
+		} else return false;
+	}
+	
+	public TextureObject func_110581_b(ResourceLocation p_110581_1_)
+	{
+		return (TextureObject) field_110585_a.get(p_110581_1_);
+	}
+	
+	public ResourceLocation func_130087_a(int p_130087_1_)
+	{
+		return (ResourceLocation) field_130089_b.get(Integer.valueOf(p_130087_1_));
+	}
+	
+	public boolean func_130088_a(ResourceLocation p_130088_1_, TextureMap p_130088_2_)
+	{
+		if(func_110580_a(p_130088_1_, p_130088_2_))
+		{
+			field_130089_b.put(Integer.valueOf(p_130088_2_.func_130086_a()), p_130088_1_);
+			return true;
+		} else return false;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureManagerINNER1.java b/RMCClient/minecraft/net/minecraft/src/TextureManagerINNER1.java
new file mode 100644
index 0000000..f9eedd4
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/TextureManagerINNER1.java
@@ -0,0 +1,25 @@
+package net.minecraft.src;
+
+import java.util.concurrent.Callable;
+
+class TextureManagerINNER1 implements Callable
+{
+	final TextureObject field_135062_a;
+	final TextureManager field_135061_b;
+	
+	TextureManagerINNER1(TextureManager p_i1283_1_, TextureObject p_i1283_2_)
+	{
+		field_135061_b = p_i1283_1_;
+		field_135062_a = p_i1283_2_;
+	}
+	
+	@Override public Object call()
+	{
+		return func_135060_a();
+	}
+	
+	public String func_135060_a()
+	{
+		return field_135062_a.getClass().getName();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureMap.java b/RMCClient/minecraft/net/minecraft/src/TextureMap.java
index eb0dd79..bc09280 100644
--- a/RMCClient/minecraft/net/minecraft/src/TextureMap.java
+++ b/RMCClient/minecraft/net/minecraft/src/TextureMap.java
@@ -1,54 +1,135 @@
 package net.minecraft.src;
 
-import java.awt.image.BufferedImage;
-import java.io.BufferedReader;
 import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
+import java.util.Map.Entry;
 
 import net.minecraft.client.Minecraft;
 
-public class TextureMap implements IconRegister
+public class TextureMap extends AbstractTexture implements TickableTextureObject, IconRegister
 {
+	public static final ResourceLocation field_110575_b = new ResourceLocation("textures/atlas/blocks.png");
+	public static final ResourceLocation field_110576_c = new ResourceLocation("textures/atlas/items.png");
+	private final List listTextureStiched = Lists.newArrayList();
+	private final Map field_110574_e = Maps.newHashMap();
+	private final Map mapTexturesStiched = Maps.newHashMap();
 	private final int textureType;
-	private final String textureName;
 	private final String basePath;
-	private final String textureExt;
-	private final HashMap mapTexturesStiched = new HashMap();
-	private BufferedImage missingImage = new BufferedImage(64, 64, 2);
-	private TextureStitched missingTextureStiched;
-	private Texture atlasTexture;
-	private final List listTextureStiched = new ArrayList();
-	private final Map textureStichedMap = new HashMap();
+	private final TextureAtlasSprite missingImage = new TextureAtlasSprite("missingno");
 	
-	public TextureMap(int par1, String par2, String par3Str, BufferedImage par4BufferedImage)
+	public TextureMap(int p_i1281_1_, String p_i1281_2_)
 	{
-		textureType = par1;
-		textureName = par2;
-		basePath = par3Str;
-		textureExt = ".png";
-		missingImage = par4BufferedImage;
+		textureType = p_i1281_1_;
+		basePath = p_i1281_2_;
+		func_110573_f();
 	}
 	
-	public Icon getMissingIcon()
+	@Override public void func_110550_d()
 	{
-		return missingTextureStiched;
+		updateAnimations();
 	}
 	
-	public Texture getTexture()
+	@Override public void func_110551_a(ResourceManager p_110551_1_) throws IOException
 	{
-		return atlasTexture;
+		func_110569_e();
+		func_110571_b(p_110551_1_);
 	}
 	
-	public void refreshTextures()
+	private void func_110569_e()
 	{
-		textureStichedMap.clear();
+		missingImage.func_110968_a(Lists.newArrayList(new int[][] { TextureUtil.field_110999_b }));
+		missingImage.func_110966_b(16);
+		missingImage.func_110969_c(16);
+	}
+	
+	public void func_110571_b(ResourceManager p_110571_1_)
+	{
+		int var2 = Minecraft.getGLMaximumTextureSize();
+		Stitcher var3 = new Stitcher(var2, var2, true);
+		mapTexturesStiched.clear();
+		listTextureStiched.clear();
+		Iterator var4 = field_110574_e.entrySet().iterator();
+		while(var4.hasNext())
+		{
+			Entry var5 = (Entry) var4.next();
+			ResourceLocation var6 = new ResourceLocation((String) var5.getKey());
+			TextureAtlasSprite var7 = (TextureAtlasSprite) var5.getValue();
+			ResourceLocation var8 = new ResourceLocation(var6.func_110624_b(), String.format("%s/%s%s", new Object[] { basePath, var6.func_110623_a(), ".png" }));
+			try
+			{
+				var7.func_130100_a(p_110571_1_.func_110536_a(var8));
+			} catch(RuntimeException var13)
+			{
+				Minecraft.getMinecraft().getLogAgent().logSevere(String.format("Unable to parse animation metadata from %s: %s", new Object[] { var8, var13.getMessage() }));
+				continue;
+			} catch(IOException var14)
+			{
+				Minecraft.getMinecraft().getLogAgent().logSevere("Using missing texture, unable to load: " + var8);
+				continue;
+			}
+			var3.func_110934_a(var7);
+		}
+		var3.func_110934_a(missingImage);
+		try
+		{
+			var3.doStitch();
+		} catch(StitcherException var12)
+		{
+			throw var12;
+		}
+		TextureUtil.func_110991_a(func_110552_b(), var3.func_110935_a(), var3.func_110936_b());
+		HashMap var15 = Maps.newHashMap(field_110574_e);
+		Iterator var16 = var3.getStichSlots().iterator();
+		TextureAtlasSprite var17;
+		while(var16.hasNext())
+		{
+			var17 = (TextureAtlasSprite) var16.next();
+			String var18 = var17.getIconName();
+			var15.remove(var18);
+			mapTexturesStiched.put(var18, var17);
+			try
+			{
+				TextureUtil.func_110998_a(var17.func_110965_a(0), var17.getOriginX(), var17.getOriginY(), var17.func_130010_a(), var17.func_110967_i(), false, false);
+			} catch(Throwable var11)
+			{
+				CrashReport var9 = CrashReport.makeCrashReport(var11, "Stitching texture atlas");
+				CrashReportCategory var10 = var9.makeCategory("Texture being stitched together");
+				var10.addCrashSection("Atlas path", basePath);
+				var10.addCrashSection("Sprite", var17);
+				throw new ReportedException(var9);
+			}
+			if(var17.func_130098_m())
+			{
+				listTextureStiched.add(var17);
+			} else
+			{
+				var17.func_130103_l();
+			}
+		}
+		var16 = var15.values().iterator();
+		while(var16.hasNext())
+		{
+			var17 = (TextureAtlasSprite) var16.next();
+			var17.copyFrom(missingImage);
+		}
+	}
+	
+	public TextureAtlasSprite func_110572_b(String p_110572_1_)
+	{
+		TextureAtlasSprite var2 = (TextureAtlasSprite) mapTexturesStiched.get(p_110572_1_);
+		if(var2 == null)
+		{
+			var2 = missingImage;
+		}
+		return var2;
+	}
+	
+	private void func_110573_f()
+	{
+		field_110574_e.clear();
 		int var2;
 		int var3;
 		if(textureType == 0)
@@ -66,96 +147,21 @@
 			Minecraft.getMinecraft().renderGlobal.registerDestroyBlockIcons(this);
 			RenderManager.instance.updateIcons(this);
 		}
-		Item[] var19 = Item.itemsList;
-		var2 = var19.length;
+		Item[] var5 = Item.itemsList;
+		var2 = var5.length;
 		for(var3 = 0; var3 < var2; ++var3)
 		{
-			Item var22 = var19[var3];
-			if(var22 != null && var22.getSpriteNumber() == textureType)
+			Item var6 = var5[var3];
+			if(var6 != null && var6.getSpriteNumber() == textureType)
 			{
-				var22.registerIcons(this);
+				var6.registerIcons(this);
 			}
 		}
-		HashMap var20 = new HashMap();
-		Stitcher var21 = TextureManager.instance().createStitcher(textureName);
-		mapTexturesStiched.clear();
-		listTextureStiched.clear();
-		Texture var23 = TextureManager.instance().makeTexture("missingno", 2, missingImage.getWidth(), missingImage.getHeight(), 10496, 6408, 9728, 9728, false, missingImage);
-		StitchHolder var24 = new StitchHolder(var23);
-		var21.addStitchHolder(var24);
-		var20.put(var24, Arrays.asList(new Texture[] { var23 }));
-		Iterator var5 = textureStichedMap.keySet().iterator();
-		while(var5.hasNext())
-		{
-			String var6 = (String) var5.next();
-			String var7 = basePath + var6 + textureExt;
-			List var8 = TextureManager.instance().createTexture(var7);
-			if(!var8.isEmpty())
-			{
-				StitchHolder var9 = new StitchHolder((Texture) var8.get(0));
-				var21.addStitchHolder(var9);
-				var20.put(var9, var8);
-			}
-		}
-		try
-		{
-			var21.doStitch();
-		} catch(StitcherException var18)
-		{
-			throw var18;
-		}
-		atlasTexture = var21.getTexture();
-		var5 = var21.getStichSlots().iterator();
-		while(var5.hasNext())
-		{
-			StitchSlot var26 = (StitchSlot) var5.next();
-			StitchHolder var27 = var26.getStitchHolder();
-			Texture var28 = var27.func_98150_a();
-			String var29 = var28.getTextureName();
-			List var10 = (List) var20.get(var27);
-			TextureStitched var11 = (TextureStitched) textureStichedMap.get(var29);
-			boolean var12 = false;
-			if(var11 == null)
-			{
-				var12 = true;
-				var11 = TextureStitched.makeTextureStitched(var29);
-				if(!var29.equals("missingno"))
-				{
-					Minecraft.getMinecraft().getLogAgent().logWarning("Couldn\'t find premade icon for " + var29 + " doing " + textureName);
-				}
-			}
-			var11.init(atlasTexture, var10, var26.getOriginX(), var26.getOriginY(), var27.func_98150_a().getWidth(), var27.func_98150_a().getHeight(), var27.isRotated());
-			mapTexturesStiched.put(var29, var11);
-			if(!var12)
-			{
-				textureStichedMap.remove(var29);
-			}
-			if(var10.size() > 1)
-			{
-				listTextureStiched.add(var11);
-				String var13 = basePath + var29 + ".txt";
-				ITexturePack var14 = Minecraft.getMinecraft().texturePackList.getSelectedTexturePack();
-				boolean var15 = !var14.func_98138_b("/" + basePath + var29 + ".png", false);
-				try
-				{
-					InputStream var16 = var14.func_98137_a("/" + var13, var15);
-					Minecraft.getMinecraft().getLogAgent().logInfo("Found animation info for: " + var13);
-					var11.readAnimationInfo(new BufferedReader(new InputStreamReader(var16)));
-				} catch(IOException var17)
-				{
-					;
-				}
-			}
-		}
-		missingTextureStiched = (TextureStitched) mapTexturesStiched.get("missingno");
-		var5 = textureStichedMap.values().iterator();
-		while(var5.hasNext())
-		{
-			TextureStitched var25 = (TextureStitched) var5.next();
-			var25.copyFrom(missingTextureStiched);
-		}
-		atlasTexture.writeImage("debug.stitched_" + textureName + ".png");
-		atlasTexture.uploadTexture();
+	}
+	
+	public int func_130086_a()
+	{
+		return textureType;
 	}
 	
 	@Override public Icon registerIcon(String par1Str)
@@ -164,21 +170,37 @@
 		{
 			new RuntimeException("Don\'t register null!").printStackTrace();
 		}
-		TextureStitched var2 = (TextureStitched) textureStichedMap.get(par1Str);
+		Object var2 = field_110574_e.get(par1Str);
 		if(var2 == null)
 		{
-			var2 = TextureStitched.makeTextureStitched(par1Str);
-			textureStichedMap.put(par1Str, var2);
+			if(textureType == 1)
+			{
+				if("clock".equals(par1Str))
+				{
+					var2 = new TextureClock(par1Str);
+				} else if("compass".equals(par1Str))
+				{
+					var2 = new TextureCompass(par1Str);
+				} else
+				{
+					var2 = new TextureAtlasSprite(par1Str);
+				}
+			} else
+			{
+				var2 = new TextureAtlasSprite(par1Str);
+			}
+			field_110574_e.put(par1Str, var2);
 		}
-		return var2;
+		return (Icon) var2;
 	}
 	
 	public void updateAnimations()
 	{
+		TextureUtil.bindTexture(func_110552_b());
 		Iterator var1 = listTextureStiched.iterator();
 		while(var1.hasNext())
 		{
-			TextureStitched var2 = (TextureStitched) var1.next();
+			TextureAtlasSprite var2 = (TextureAtlasSprite) var1.next();
 			var2.updateAnimation();
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureMetadataSection.java b/RMCClient/minecraft/net/minecraft/src/TextureMetadataSection.java
new file mode 100644
index 0000000..14f6ca3
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/TextureMetadataSection.java
@@ -0,0 +1,23 @@
+package net.minecraft.src;
+
+public class TextureMetadataSection implements MetadataSection
+{
+	private final boolean field_110482_a;
+	private final boolean field_110481_b;
+	
+	public TextureMetadataSection(boolean p_i1313_1_, boolean p_i1313_2_)
+	{
+		field_110482_a = p_i1313_1_;
+		field_110481_b = p_i1313_2_;
+	}
+	
+	public boolean func_110479_a()
+	{
+		return field_110482_a;
+	}
+	
+	public boolean func_110480_b()
+	{
+		return field_110481_b;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureMetadataSectionSerializer.java b/RMCClient/minecraft/net/minecraft/src/TextureMetadataSectionSerializer.java
new file mode 100644
index 0000000..de33da4
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/TextureMetadataSectionSerializer.java
@@ -0,0 +1,24 @@
+package net.minecraft.src;
+
+import java.lang.reflect.Type;
+
+public class TextureMetadataSectionSerializer extends BaseMetadataSectionSerializer
+{
+	public Object deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_)
+	{
+		return func_110494_a(p_deserialize_1_, p_deserialize_2_, p_deserialize_3_);
+	}
+	
+	@Override public String func_110483_a()
+	{
+		return "texture";
+	}
+	
+	public TextureMetadataSection func_110494_a(JsonElement p_110494_1_, Type p_110494_2_, JsonDeserializationContext p_110494_3_)
+	{
+		JsonObject var4 = p_110494_1_.getAsJsonObject();
+		boolean var5 = func_110484_a(var4.get("blur"), "blur", Boolean.valueOf(false));
+		boolean var6 = func_110484_a(var4.get("clamp"), "clamp", Boolean.valueOf(false));
+		return new TextureMetadataSection(var5, var6);
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureObject.java b/RMCClient/minecraft/net/minecraft/src/TextureObject.java
new file mode 100644
index 0000000..437117e
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/TextureObject.java
@@ -0,0 +1,10 @@
+package net.minecraft.src;
+
+import java.io.IOException;
+
+public interface TextureObject
+{
+	void func_110551_a(ResourceManager var1) throws IOException;
+	
+	int func_110552_b();
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureOffset.java b/RMCClient/minecraft/net/minecraft/src/TextureOffset.java
index 5985b08..00170c4 100644
--- a/RMCClient/minecraft/net/minecraft/src/TextureOffset.java
+++ b/RMCClient/minecraft/net/minecraft/src/TextureOffset.java
@@ -5,9 +5,9 @@
 	public final int textureOffsetX;
 	public final int textureOffsetY;
 	
-	public TextureOffset(int par1, int par2)
+	public TextureOffset(int p_i1175_1_, int p_i1175_2_)
 	{
-		textureOffsetX = par1;
-		textureOffsetY = par2;
+		textureOffsetX = p_i1175_1_;
+		textureOffsetY = p_i1175_2_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/TexturePackCustom.java b/RMCClient/minecraft/net/minecraft/src/TexturePackCustom.java
deleted file mode 100644
index 69fba39..0000000
--- a/RMCClient/minecraft/net/minecraft/src/TexturePackCustom.java
+++ /dev/null
@@ -1,83 +0,0 @@
-package net.minecraft.src;
-
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.InputStream;
-import java.util.Enumeration;
-import java.util.zip.ZipEntry;
-import java.util.zip.ZipException;
-import java.util.zip.ZipFile;
-
-public class TexturePackCustom extends TexturePackImplementation
-{
-	private ZipFile texturePackZipFile;
-	
-	public TexturePackCustom(String par1Str, File par2File, ITexturePack par3ITexturePack)
-	{
-		super(par1Str, par2File, par2File.getName(), par3ITexturePack);
-	}
-	
-	@Override public void deleteTexturePack(RenderEngine par1RenderEngine)
-	{
-		super.deleteTexturePack(par1RenderEngine);
-		try
-		{
-			if(texturePackZipFile != null)
-			{
-				texturePackZipFile.close();
-			}
-		} catch(IOException var3)
-		{
-			;
-		}
-		texturePackZipFile = null;
-	}
-	
-	@Override protected InputStream func_98139_b(String par1Str) throws IOException
-	{
-		openTexturePackFile();
-		ZipEntry var2 = texturePackZipFile.getEntry(par1Str.substring(1));
-		if(var2 == null) throw new FileNotFoundException(par1Str);
-		else return texturePackZipFile.getInputStream(var2);
-	}
-	
-	@Override public boolean func_98140_c(String par1Str)
-	{
-		try
-		{
-			openTexturePackFile();
-			return texturePackZipFile.getEntry(par1Str.substring(1)) != null;
-		} catch(Exception var3)
-		{
-			return false;
-		}
-	}
-	
-	@Override public boolean isCompatible()
-	{
-		try
-		{
-			openTexturePackFile();
-			Enumeration var1 = texturePackZipFile.entries();
-			while(var1.hasMoreElements())
-			{
-				ZipEntry var2 = (ZipEntry) var1.nextElement();
-				if(var2.getName().startsWith("textures/")) return true;
-			}
-		} catch(Exception var3)
-		{
-			;
-		}
-		boolean var4 = func_98140_c("terrain.png") || func_98140_c("gui/items.png");
-		return !var4;
-	}
-	
-	private void openTexturePackFile() throws IOException, ZipException
-	{
-		if(texturePackZipFile == null)
-		{
-			texturePackZipFile = new ZipFile(texturePackFile);
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/TexturePackDefault.java b/RMCClient/minecraft/net/minecraft/src/TexturePackDefault.java
deleted file mode 100644
index 4809357..0000000
--- a/RMCClient/minecraft/net/minecraft/src/TexturePackDefault.java
+++ /dev/null
@@ -1,36 +0,0 @@
-package net.minecraft.src;
-
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.InputStream;
-
-public class TexturePackDefault extends TexturePackImplementation
-{
-	public TexturePackDefault()
-	{
-		super("default", (File) null, "Default", (ITexturePack) null);
-	}
-	
-	@Override protected InputStream func_98139_b(String par1Str) throws IOException
-	{
-		InputStream var2 = TexturePackDefault.class.getResourceAsStream(par1Str);
-		if(var2 == null) throw new FileNotFoundException(par1Str);
-		else return var2;
-	}
-	
-	@Override public boolean func_98140_c(String par1Str)
-	{
-		return TexturePackDefault.class.getResourceAsStream(par1Str) != null;
-	}
-	
-	@Override public boolean isCompatible()
-	{
-		return true;
-	}
-	
-	@Override protected void loadDescription()
-	{
-		firstDescriptionLine = "The default look of Minecraft";
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/TexturePackDownloadSuccess.java b/RMCClient/minecraft/net/minecraft/src/TexturePackDownloadSuccess.java
deleted file mode 100644
index f16edba..0000000
--- a/RMCClient/minecraft/net/minecraft/src/TexturePackDownloadSuccess.java
+++ /dev/null
@@ -1,22 +0,0 @@
-package net.minecraft.src;
-
-import java.io.File;
-
-class TexturePackDownloadSuccess implements IDownloadSuccess
-{
-	final TexturePackList texturePacks;
-	
-	TexturePackDownloadSuccess(TexturePackList par1TexturePackList)
-	{
-		texturePacks = par1TexturePackList;
-	}
-	
-	@Override public void onSuccess(File par1File)
-	{
-		if(TexturePackList.isDownloading(texturePacks))
-		{
-			TexturePackList.setSelectedTexturePack(texturePacks, new TexturePackCustom(TexturePackList.generateTexturePackID(texturePacks, par1File), par1File, TexturePackList.func_98143_h()));
-			TexturePackList.getMinecraft(texturePacks).scheduleTexturePackRefresh();
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/TexturePackFolder.java b/RMCClient/minecraft/net/minecraft/src/TexturePackFolder.java
deleted file mode 100644
index 86bd0cc..0000000
--- a/RMCClient/minecraft/net/minecraft/src/TexturePackFolder.java
+++ /dev/null
@@ -1,37 +0,0 @@
-package net.minecraft.src;
-
-import java.io.BufferedInputStream;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.InputStream;
-
-public class TexturePackFolder extends TexturePackImplementation
-{
-	public TexturePackFolder(String par1, File par2, ITexturePack par3ITexturePack)
-	{
-		super(par1, par2, par2.getName(), par3ITexturePack);
-	}
-	
-	@Override protected InputStream func_98139_b(String par1Str) throws IOException
-	{
-		File var2 = new File(texturePackFile, par1Str.substring(1));
-		if(!var2.exists()) throw new FileNotFoundException(par1Str);
-		else return new BufferedInputStream(new FileInputStream(var2));
-	}
-	
-	@Override public boolean func_98140_c(String par1Str)
-	{
-		File var2 = new File(texturePackFile, par1Str);
-		return var2.exists() && var2.isFile();
-	}
-	
-	@Override public boolean isCompatible()
-	{
-		File var1 = new File(texturePackFile, "textures/");
-		boolean var2 = var1.exists() && var1.isDirectory();
-		boolean var3 = func_98140_c("terrain.png") || func_98140_c("gui/items.png");
-		return var2 || !var3;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/TexturePackImplementation.java b/RMCClient/minecraft/net/minecraft/src/TexturePackImplementation.java
deleted file mode 100644
index 494cc32..0000000
--- a/RMCClient/minecraft/net/minecraft/src/TexturePackImplementation.java
+++ /dev/null
@@ -1,171 +0,0 @@
-package net.minecraft.src;
-
-import java.awt.image.BufferedImage;
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-
-import javax.imageio.ImageIO;
-
-import org.lwjgl.opengl.GL11;
-
-public abstract class TexturePackImplementation implements ITexturePack
-{
-	private final String texturePackID;
-	private final String texturePackFileName;
-	protected final File texturePackFile;
-	protected String firstDescriptionLine;
-	protected String secondDescriptionLine;
-	private final ITexturePack field_98141_g;
-	protected BufferedImage thumbnailImage;
-	private int thumbnailTextureName = -1;
-	
-	protected TexturePackImplementation(String par1, File par2File, String par3Str, ITexturePack par4ITexturePack)
-	{
-		texturePackID = par1;
-		texturePackFileName = par3Str;
-		texturePackFile = par2File;
-		field_98141_g = par4ITexturePack;
-		loadThumbnailImage();
-		loadDescription();
-	}
-	
-	@Override public void bindThumbnailTexture(RenderEngine par1RenderEngine)
-	{
-		if(thumbnailImage != null)
-		{
-			if(thumbnailTextureName == -1)
-			{
-				thumbnailTextureName = par1RenderEngine.allocateAndSetupTexture(thumbnailImage);
-			}
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, thumbnailTextureName);
-			par1RenderEngine.resetBoundTexture();
-		} else
-		{
-			par1RenderEngine.bindTexture("/gui/unknown_pack.png");
-		}
-	}
-	
-	@Override public void deleteTexturePack(RenderEngine par1RenderEngine)
-	{
-		if(thumbnailImage != null && thumbnailTextureName != -1)
-		{
-			par1RenderEngine.deleteTexture(thumbnailTextureName);
-		}
-	}
-	
-	@Override public InputStream func_98137_a(String par1Str, boolean par2) throws IOException
-	{
-		try
-		{
-			return func_98139_b(par1Str);
-		} catch(IOException var4)
-		{
-			if(field_98141_g != null && par2) return field_98141_g.func_98137_a(par1Str, true);
-			else throw var4;
-		}
-	}
-	
-	@Override public boolean func_98138_b(String par1Str, boolean par2)
-	{
-		boolean var3 = func_98140_c(par1Str);
-		return !var3 && par2 && field_98141_g != null ? field_98141_g.func_98138_b(par1Str, par2) : var3;
-	}
-	
-	protected abstract InputStream func_98139_b(String var1) throws IOException;
-	
-	public abstract boolean func_98140_c(String var1);
-	
-	@Override public String getFirstDescriptionLine()
-	{
-		return firstDescriptionLine;
-	}
-	
-	@Override public InputStream getResourceAsStream(String par1Str) throws IOException
-	{
-		return func_98137_a(par1Str, true);
-	}
-	
-	@Override public String getSecondDescriptionLine()
-	{
-		return secondDescriptionLine;
-	}
-	
-	@Override public String getTexturePackFileName()
-	{
-		return texturePackFileName;
-	}
-	
-	@Override public String getTexturePackID()
-	{
-		return texturePackID;
-	}
-	
-	protected void loadDescription()
-	{
-		InputStream var1 = null;
-		BufferedReader var2 = null;
-		try
-		{
-			var1 = func_98139_b("/pack.txt");
-			var2 = new BufferedReader(new InputStreamReader(var1));
-			firstDescriptionLine = trimStringToGUIWidth(var2.readLine());
-			secondDescriptionLine = trimStringToGUIWidth(var2.readLine());
-		} catch(IOException var12)
-		{
-			;
-		} finally
-		{
-			try
-			{
-				if(var2 != null)
-				{
-					var2.close();
-				}
-				if(var1 != null)
-				{
-					var1.close();
-				}
-			} catch(IOException var11)
-			{
-				;
-			}
-		}
-	}
-	
-	private void loadThumbnailImage()
-	{
-		InputStream var1 = null;
-		try
-		{
-			var1 = func_98137_a("/pack.png", false);
-			thumbnailImage = ImageIO.read(var1);
-		} catch(IOException var11)
-		{
-			;
-		} finally
-		{
-			try
-			{
-				if(var1 != null)
-				{
-					var1.close();
-				}
-			} catch(IOException var10)
-			{
-				;
-			}
-		}
-	}
-	
-	private static String trimStringToGUIWidth(String par0Str)
-	{
-		if(par0Str != null && par0Str.length() > 34)
-		{
-			par0Str = par0Str.substring(0, 34);
-		}
-		return par0Str;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/TexturePackList.java b/RMCClient/minecraft/net/minecraft/src/TexturePackList.java
deleted file mode 100644
index 3d3c942..0000000
--- a/RMCClient/minecraft/net/minecraft/src/TexturePackList.java
+++ /dev/null
@@ -1,199 +0,0 @@
-package net.minecraft.src;
-
-import java.io.File;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-
-import net.minecraft.client.Minecraft;
-
-public class TexturePackList
-{
-	private static final ITexturePack defaultTexturePack = new TexturePackDefault();
-	private final Minecraft mc;
-	private final File texturePackDir;
-	private final File mpTexturePackFolder;
-	private List availableTexturePacks = new ArrayList();
-	private Map texturePackCache = new HashMap();
-	private ITexturePack selectedTexturePack;
-	private boolean isDownloading;
-	
-	public TexturePackList(File par1File, Minecraft par2Minecraft)
-	{
-		mc = par2Minecraft;
-		texturePackDir = new File(par1File, "texturepacks");
-		mpTexturePackFolder = new File(par1File, "texturepacks-mp-cache");
-		createTexturePackDirs();
-		updateAvaliableTexturePacks();
-	}
-	
-	public List availableTexturePacks()
-	{
-		return Collections.unmodifiableList(availableTexturePacks);
-	}
-	
-	private void createTexturePackDirs()
-	{
-		if(!texturePackDir.isDirectory())
-		{
-			texturePackDir.delete();
-			texturePackDir.mkdirs();
-		}
-		if(!mpTexturePackFolder.isDirectory())
-		{
-			mpTexturePackFolder.delete();
-			mpTexturePackFolder.mkdirs();
-		}
-	}
-	
-	private void downloadTexture(String par1Str, File par2File)
-	{
-		HashMap var3 = new HashMap();
-		GuiProgress var4 = new GuiProgress();
-		var3.put("X-Minecraft-Username", mc.session.username);
-		var3.put("X-Minecraft-Version", "1.5.2");
-		var3.put("X-Minecraft-Supported-Resolutions", "16");
-		isDownloading = true;
-		mc.displayGuiScreen(var4);
-		HttpUtil.downloadTexturePack(par2File, par1Str, new TexturePackDownloadSuccess(this), var3, 10000000, var4);
-	}
-	
-	public boolean func_77300_f()
-	{
-		if(!mc.gameSettings.serverTextures) return false;
-		else
-		{
-			ServerData var1 = mc.getServerData();
-			return var1 == null ? true : var1.func_78840_c();
-		}
-	}
-	
-	private String generateTexturePackID(File par1File)
-	{
-		return par1File.isFile() && par1File.getName().toLowerCase().endsWith(".zip") ? par1File.getName() + ":" + par1File.length() + ":" + par1File.lastModified() : par1File.isDirectory() && new File(par1File, "pack.txt").exists() ? par1File.getName() + ":folder:" + par1File.lastModified() : null;
-	}
-	
-	public boolean getAcceptsTextures()
-	{
-		if(!mc.gameSettings.serverTextures) return false;
-		else
-		{
-			ServerData var1 = mc.getServerData();
-			return var1 == null ? false : var1.getAcceptsTextures();
-		}
-	}
-	
-	public boolean getIsDownloading()
-	{
-		return isDownloading;
-	}
-	
-	public ITexturePack getSelectedTexturePack()
-	{
-		return selectedTexturePack;
-	}
-	
-	private List getTexturePackDirContents()
-	{
-		return texturePackDir.exists() && texturePackDir.isDirectory() ? Arrays.asList(texturePackDir.listFiles()) : Collections.emptyList();
-	}
-	
-	public void onDownloadFinished()
-	{
-		isDownloading = false;
-		updateAvaliableTexturePacks();
-		mc.scheduleTexturePackRefresh();
-	}
-	
-	public void requestDownloadOfTexture(String par1Str)
-	{
-		String var2 = par1Str.substring(par1Str.lastIndexOf("/") + 1);
-		if(var2.contains("?"))
-		{
-			var2 = var2.substring(0, var2.indexOf("?"));
-		}
-		if(var2.endsWith(".zip"))
-		{
-			File var3 = new File(mpTexturePackFolder, var2);
-			downloadTexture(par1Str, var3);
-		}
-	}
-	
-	public boolean setTexturePack(ITexturePack par1ITexturePack)
-	{
-		if(par1ITexturePack == selectedTexturePack) return false;
-		else
-		{
-			isDownloading = false;
-			selectedTexturePack = par1ITexturePack;
-			mc.gameSettings.skin = par1ITexturePack.getTexturePackFileName();
-			mc.gameSettings.saveOptions();
-			return true;
-		}
-	}
-	
-	public void updateAvaliableTexturePacks()
-	{
-		ArrayList var1 = new ArrayList();
-		selectedTexturePack = defaultTexturePack;
-		var1.add(defaultTexturePack);
-		Iterator var2 = getTexturePackDirContents().iterator();
-		while(var2.hasNext())
-		{
-			File var3 = (File) var2.next();
-			String var4 = this.generateTexturePackID(var3);
-			if(var4 != null)
-			{
-				Object var5 = texturePackCache.get(var4);
-				if(var5 == null)
-				{
-					var5 = var3.isDirectory() ? new TexturePackFolder(var4, var3, defaultTexturePack) : new TexturePackCustom(var4, var3, defaultTexturePack);
-					texturePackCache.put(var4, var5);
-				}
-				if(((ITexturePack) var5).getTexturePackFileName().equals(mc.gameSettings.skin))
-				{
-					selectedTexturePack = (ITexturePack) var5;
-				}
-				var1.add(var5);
-			}
-		}
-		availableTexturePacks.removeAll(var1);
-		var2 = availableTexturePacks.iterator();
-		while(var2.hasNext())
-		{
-			ITexturePack var6 = (ITexturePack) var2.next();
-			var6.deleteTexturePack(mc.renderEngine);
-			texturePackCache.remove(var6.getTexturePackID());
-		}
-		availableTexturePacks = var1;
-	}
-	
-	static ITexturePack func_98143_h()
-	{
-		return defaultTexturePack;
-	}
-	
-	static String generateTexturePackID(TexturePackList par0TexturePackList, File par1File)
-	{
-		return par0TexturePackList.generateTexturePackID(par1File);
-	}
-	
-	static Minecraft getMinecraft(TexturePackList par0TexturePackList)
-	{
-		return par0TexturePackList.mc;
-	}
-	
-	static boolean isDownloading(TexturePackList par0TexturePackList)
-	{
-		return par0TexturePackList.isDownloading;
-	}
-	
-	static ITexturePack setSelectedTexturePack(TexturePackList par0TexturePackList, ITexturePack par1ITexturePack)
-	{
-		return par0TexturePackList.selectedTexturePack = par1ITexturePack;
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureStitched.java b/RMCClient/minecraft/net/minecraft/src/TextureStitched.java
deleted file mode 100644
index 1e982f6..0000000
--- a/RMCClient/minecraft/net/minecraft/src/TextureStitched.java
+++ /dev/null
@@ -1,185 +0,0 @@
-package net.minecraft.src;
-
-import java.io.BufferedReader;
-import java.util.ArrayList;
-import java.util.List;
-
-public class TextureStitched implements Icon
-{
-	private final String textureName;
-	protected Texture textureSheet;
-	protected List textureList;
-	private List listAnimationTuples;
-	protected boolean rotated;
-	protected int originX;
-	protected int originY;
-	private int width;
-	private int height;
-	private float minU;
-	private float maxU;
-	private float minV;
-	private float maxV;
-	private float widthNorm;
-	private float heightNorm;
-	protected int frameCounter = 0;
-	protected int tickCounter = 0;
-	
-	protected TextureStitched(String par1)
-	{
-		textureName = par1;
-	}
-	
-	public void copyFrom(TextureStitched par1TextureStitched)
-	{
-		init(par1TextureStitched.textureSheet, par1TextureStitched.textureList, par1TextureStitched.originX, par1TextureStitched.originY, par1TextureStitched.width, par1TextureStitched.height, par1TextureStitched.rotated);
-	}
-	
-	@Override public String getIconName()
-	{
-		return textureName;
-	}
-	
-	@Override public float getInterpolatedU(double par1)
-	{
-		float var3 = maxU - minU;
-		return minU + var3 * ((float) par1 / 16.0F);
-	}
-	
-	@Override public float getInterpolatedV(double par1)
-	{
-		float var3 = maxV - minV;
-		return minV + var3 * ((float) par1 / 16.0F);
-	}
-	
-	@Override public float getMaxU()
-	{
-		return maxU;
-	}
-	
-	@Override public float getMaxV()
-	{
-		return maxV;
-	}
-	
-	@Override public float getMinU()
-	{
-		return minU;
-	}
-	
-	@Override public float getMinV()
-	{
-		return minV;
-	}
-	
-	@Override public int getOriginX()
-	{
-		return originX;
-	}
-	
-	@Override public int getOriginY()
-	{
-		return originY;
-	}
-	
-	@Override public int getSheetHeight()
-	{
-		return textureSheet.getHeight();
-	}
-	
-	@Override public int getSheetWidth()
-	{
-		return textureSheet.getWidth();
-	}
-	
-	public void init(Texture par1Texture, List par2List, int par3, int par4, int par5, int par6, boolean par7)
-	{
-		textureSheet = par1Texture;
-		textureList = par2List;
-		originX = par3;
-		originY = par4;
-		width = par5;
-		height = par6;
-		rotated = par7;
-		float var8 = 0.01F / par1Texture.getWidth();
-		float var9 = 0.01F / par1Texture.getHeight();
-		minU = (float) par3 / (float) par1Texture.getWidth() + var8;
-		maxU = (float) (par3 + par5) / (float) par1Texture.getWidth() - var8;
-		minV = (float) par4 / (float) par1Texture.getHeight() + var9;
-		maxV = (float) (par4 + par6) / (float) par1Texture.getHeight() - var9;
-		widthNorm = par5 / 16.0F;
-		heightNorm = par6 / 16.0F;
-	}
-	
-	public void readAnimationInfo(BufferedReader par1BufferedReader)
-	{
-		ArrayList var2 = new ArrayList();
-		try
-		{
-			for(String var3 = par1BufferedReader.readLine(); var3 != null; var3 = par1BufferedReader.readLine())
-			{
-				var3 = var3.trim();
-				if(var3.length() > 0)
-				{
-					String[] var4 = var3.split(",");
-					String[] var5 = var4;
-					int var6 = var4.length;
-					for(int var7 = 0; var7 < var6; ++var7)
-					{
-						String var8 = var5[var7];
-						int var9 = var8.indexOf(42);
-						if(var9 > 0)
-						{
-							Integer var10 = new Integer(var8.substring(0, var9));
-							Integer var11 = new Integer(var8.substring(var9 + 1));
-							var2.add(new Tuple(var10, var11));
-						} else
-						{
-							var2.add(new Tuple(new Integer(var8), Integer.valueOf(1)));
-						}
-					}
-				}
-			}
-		} catch(Exception var12)
-		{
-			System.err.println("Failed to read animation info for " + textureName + ": " + var12.getMessage());
-		}
-		if(!var2.isEmpty() && var2.size() < 600)
-		{
-			listAnimationTuples = var2;
-		}
-	}
-	
-	public void updateAnimation()
-	{
-		if(listAnimationTuples != null)
-		{
-			Tuple var1 = (Tuple) listAnimationTuples.get(frameCounter);
-			++tickCounter;
-			if(tickCounter >= ((Integer) var1.getSecond()).intValue())
-			{
-				int var2 = ((Integer) var1.getFirst()).intValue();
-				frameCounter = (frameCounter + 1) % listAnimationTuples.size();
-				tickCounter = 0;
-				var1 = (Tuple) listAnimationTuples.get(frameCounter);
-				int var3 = ((Integer) var1.getFirst()).intValue();
-				if(var2 != var3 && var3 >= 0 && var3 < textureList.size())
-				{
-					textureSheet.func_104062_b(originX, originY, (Texture) textureList.get(var3));
-				}
-			}
-		} else
-		{
-			int var4 = frameCounter;
-			frameCounter = (frameCounter + 1) % textureList.size();
-			if(var4 != frameCounter)
-			{
-				textureSheet.func_104062_b(originX, originY, (Texture) textureList.get(frameCounter));
-			}
-		}
-	}
-	
-	public static TextureStitched makeTextureStitched(String par0Str)
-	{
-		return "clock".equals(par0Str) ? new TextureClock() : "compass".equals(par0Str) ? new TextureCompass() : new TextureStitched(par0Str);
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/TextureUtil.java b/RMCClient/minecraft/net/minecraft/src/TextureUtil.java
new file mode 100644
index 0000000..eb44ee0
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/TextureUtil.java
@@ -0,0 +1,179 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.io.IOException;
+import java.nio.IntBuffer;
+
+import javax.imageio.ImageIO;
+
+import net.minecraft.client.Minecraft;
+
+import org.lwjgl.opengl.GL11;
+import org.lwjgl.opengl.GL12;
+
+public class TextureUtil
+{
+	private static final IntBuffer field_111000_c = GLAllocation.createDirectIntBuffer(4194304);
+	public static final DynamicTexture field_111001_a = new DynamicTexture(16, 16);
+	public static final int[] field_110999_b = field_111001_a.func_110565_c();
+	
+	static void bindTexture(int p_94277_0_)
+	{
+		GL11.glBindTexture(GL11.GL_TEXTURE_2D, p_94277_0_);
+	}
+	
+	public static int[] func_110985_a(int[] p_110985_0_)
+	{
+		int[] var1 = new int[p_110985_0_.length];
+		for(int var2 = 0; var2 < p_110985_0_.length; ++var2)
+		{
+			int var3 = p_110985_0_[var2] >> 24 & 255;
+			int var4 = p_110985_0_[var2] >> 16 & 255;
+			int var5 = p_110985_0_[var2] >> 8 & 255;
+			int var6 = p_110985_0_[var2] & 255;
+			int var7 = (var4 * 30 + var5 * 59 + var6 * 11) / 100;
+			int var8 = (var4 * 30 + var5 * 70) / 100;
+			int var9 = (var4 * 30 + var6 * 70) / 100;
+			var1[var2] = var3 << 24 | var7 << 16 | var8 << 8 | var9;
+		}
+		return var1;
+	}
+	
+	public static int[] func_110986_a(ResourceManager p_110986_0_, ResourceLocation p_110986_1_) throws IOException
+	{
+		BufferedImage var2 = ImageIO.read(p_110986_0_.func_110536_a(p_110986_1_).func_110527_b());
+		int var3 = var2.getWidth();
+		int var4 = var2.getHeight();
+		int[] var5 = new int[var3 * var4];
+		var2.getRGB(0, 0, var3, var4, var5, 0, var3);
+		return var5;
+	}
+	
+	public static int func_110987_a(int p_110987_0_, BufferedImage p_110987_1_)
+	{
+		return func_110989_a(p_110987_0_, p_110987_1_, false, false);
+	}
+	
+	public static void func_110988_a(int p_110988_0_, int[] p_110988_1_, int p_110988_2_, int p_110988_3_)
+	{
+		bindTexture(p_110988_0_);
+		func_110998_a(p_110988_1_, p_110988_2_, p_110988_3_, 0, 0, false, false);
+	}
+	
+	public static int func_110989_a(int p_110989_0_, BufferedImage p_110989_1_, boolean p_110989_2_, boolean p_110989_3_)
+	{
+		func_110991_a(p_110989_0_, p_110989_1_.getWidth(), p_110989_1_.getHeight());
+		return func_110995_a(p_110989_0_, p_110989_1_, 0, 0, p_110989_2_, p_110989_3_);
+	}
+	
+	private static void func_110990_a(int[] p_110990_0_, int p_110990_1_)
+	{
+		func_110994_a(p_110990_0_, 0, p_110990_1_);
+	}
+	
+	public static void func_110991_a(int p_110991_0_, int p_110991_1_, int p_110991_2_)
+	{
+		bindTexture(p_110991_0_);
+		GL11.glTexImage2D(GL11.GL_TEXTURE_2D, 0, GL11.GL_RGBA, p_110991_1_, p_110991_2_, 0, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, (IntBuffer) null);
+	}
+	
+	private static void func_110992_b(boolean p_110992_0_)
+	{
+		if(p_110992_0_)
+		{
+			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_LINEAR);
+			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_LINEAR);
+		} else
+		{
+			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_NEAREST);
+			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_NEAREST);
+		}
+	}
+	
+	private static void func_110993_a(BufferedImage p_110993_0_, int p_110993_1_, int p_110993_2_, boolean p_110993_3_, boolean p_110993_4_)
+	{
+		int var5 = p_110993_0_.getWidth();
+		int var6 = p_110993_0_.getHeight();
+		int var7 = 4194304 / var5;
+		int[] var8 = new int[var7 * var5];
+		func_110992_b(p_110993_3_);
+		func_110997_a(p_110993_4_);
+		for(int var9 = 0; var9 < var5 * var6; var9 += var5 * var7)
+		{
+			int var10 = var9 / var5;
+			int var11 = Math.min(var7, var6 - var10);
+			int var12 = var5 * var11;
+			p_110993_0_.getRGB(0, var10, var5, var11, var8, 0, var5);
+			func_110990_a(var8, var12);
+			GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, p_110993_1_, p_110993_2_ + var10, var5, var11, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, field_111000_c);
+		}
+	}
+	
+	private static void func_110994_a(int[] p_110994_0_, int p_110994_1_, int p_110994_2_)
+	{
+		int[] var3 = p_110994_0_;
+		if(Minecraft.getMinecraft().gameSettings.anaglyph)
+		{
+			var3 = func_110985_a(p_110994_0_);
+		}
+		field_111000_c.clear();
+		field_111000_c.put(var3, p_110994_1_, p_110994_2_);
+		field_111000_c.position(0).limit(p_110994_2_);
+	}
+	
+	public static int func_110995_a(int p_110995_0_, BufferedImage p_110995_1_, int p_110995_2_, int p_110995_3_, boolean p_110995_4_, boolean p_110995_5_)
+	{
+		bindTexture(p_110995_0_);
+		func_110993_a(p_110995_1_, p_110995_2_, p_110995_3_, p_110995_4_, p_110995_5_);
+		return p_110995_0_;
+	}
+	
+	public static int func_110996_a()
+	{
+		return GL11.glGenTextures();
+	}
+	
+	private static void func_110997_a(boolean p_110997_0_)
+	{
+		if(p_110997_0_)
+		{
+			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_S, GL11.GL_CLAMP);
+			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, GL11.GL_CLAMP);
+		} else
+		{
+			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_S, GL11.GL_REPEAT);
+			GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, GL11.GL_REPEAT);
+		}
+	}
+	
+	public static void func_110998_a(int[] p_110998_0_, int p_110998_1_, int p_110998_2_, int p_110998_3_, int p_110998_4_, boolean p_110998_5_, boolean p_110998_6_)
+	{
+		int var7 = 4194304 / p_110998_1_;
+		func_110992_b(p_110998_5_);
+		func_110997_a(p_110998_6_);
+		int var10;
+		for(int var8 = 0; var8 < p_110998_1_ * p_110998_2_; var8 += p_110998_1_ * var10)
+		{
+			int var9 = var8 / p_110998_1_;
+			var10 = Math.min(var7, p_110998_2_ - var9);
+			int var11 = p_110998_1_ * var10;
+			func_110994_a(p_110998_0_, var8, var11);
+			GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, p_110998_3_, p_110998_4_ + var9, p_110998_1_, var10, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, field_111000_c);
+		}
+	}
+	
+	static
+	{
+		int var0 = -16777216;
+		int var1 = -524040;
+		int[] var2 = new int[] { -524040, -524040, -524040, -524040, -524040, -524040, -524040, -524040 };
+		int[] var3 = new int[] { -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216 };
+		int var4 = var2.length;
+		for(int var5 = 0; var5 < 16; ++var5)
+		{
+			System.arraycopy(var5 < var4 ? var2 : var3, 0, field_110999_b, 16 * var5, var4);
+			System.arraycopy(var5 < var4 ? var3 : var2, 0, field_110999_b, 16 * var5 + var4, var4);
+		}
+		field_111001_a.func_110564_a();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/TexturedQuad.java b/RMCClient/minecraft/net/minecraft/src/TexturedQuad.java
index 00045b0..e2519d4 100644
--- a/RMCClient/minecraft/net/minecraft/src/TexturedQuad.java
+++ b/RMCClient/minecraft/net/minecraft/src/TexturedQuad.java
@@ -6,23 +6,21 @@
 	public int nVertices;
 	private boolean invertNormal;
 	
-	public TexturedQuad(PositionTextureVertex[] par1ArrayOfPositionTextureVertex)
+	public TexturedQuad(PositionTextureVertex[] p_i1152_1_)
 	{
-		nVertices = 0;
-		invertNormal = false;
-		vertexPositions = par1ArrayOfPositionTextureVertex;
-		nVertices = par1ArrayOfPositionTextureVertex.length;
+		vertexPositions = p_i1152_1_;
+		nVertices = p_i1152_1_.length;
 	}
 	
-	public TexturedQuad(PositionTextureVertex[] par1ArrayOfPositionTextureVertex, int par2, int par3, int par4, int par5, float par6, float par7)
+	public TexturedQuad(PositionTextureVertex[] p_i1153_1_, int p_i1153_2_, int p_i1153_3_, int p_i1153_4_, int p_i1153_5_, float p_i1153_6_, float p_i1153_7_)
 	{
-		this(par1ArrayOfPositionTextureVertex);
-		float var8 = 0.0F / par6;
-		float var9 = 0.0F / par7;
-		par1ArrayOfPositionTextureVertex[0] = par1ArrayOfPositionTextureVertex[0].setTexturePosition(par4 / par6 - var8, par3 / par7 + var9);
-		par1ArrayOfPositionTextureVertex[1] = par1ArrayOfPositionTextureVertex[1].setTexturePosition(par2 / par6 + var8, par3 / par7 + var9);
-		par1ArrayOfPositionTextureVertex[2] = par1ArrayOfPositionTextureVertex[2].setTexturePosition(par2 / par6 + var8, par5 / par7 - var9);
-		par1ArrayOfPositionTextureVertex[3] = par1ArrayOfPositionTextureVertex[3].setTexturePosition(par4 / par6 - var8, par5 / par7 - var9);
+		this(p_i1153_1_);
+		float var8 = 0.0F / p_i1153_6_;
+		float var9 = 0.0F / p_i1153_7_;
+		p_i1153_1_[0] = p_i1153_1_[0].setTexturePosition(p_i1153_4_ / p_i1153_6_ - var8, p_i1153_3_ / p_i1153_7_ + var9);
+		p_i1153_1_[1] = p_i1153_1_[1].setTexturePosition(p_i1153_2_ / p_i1153_6_ + var8, p_i1153_3_ / p_i1153_7_ + var9);
+		p_i1153_1_[2] = p_i1153_1_[2].setTexturePosition(p_i1153_2_ / p_i1153_6_ + var8, p_i1153_5_ / p_i1153_7_ - var9);
+		p_i1153_1_[3] = p_i1153_1_[3].setTexturePosition(p_i1153_4_ / p_i1153_6_ - var8, p_i1153_5_ / p_i1153_7_ - var9);
 	}
 	
 	public void draw(Tessellator par1Tessellator, float par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadClientSleep.java b/RMCClient/minecraft/net/minecraft/src/ThreadClientSleep.java
index aba15d5..b46c9bd 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadClientSleep.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadClientSleep.java
@@ -2,14 +2,14 @@
 
 import net.minecraft.client.Minecraft;
 
-public class ThreadClientSleep extends Thread
+class ThreadClientSleep extends Thread
 {
 	final Minecraft mc;
 	
-	public ThreadClientSleep(Minecraft par1Minecraft, String par2Str)
+	ThreadClientSleep(Minecraft p_i1002_1_, String p_i1002_2_)
 	{
-		super(par2Str);
-		mc = par1Minecraft;
+		super(p_i1002_2_);
+		mc = p_i1002_1_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadConnectToOnlineServer.java b/RMCClient/minecraft/net/minecraft/src/ThreadConnectToOnlineServer.java
index c0c8d00..59de563 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadConnectToOnlineServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadConnectToOnlineServer.java
@@ -10,10 +10,10 @@
 	final McoServer field_96597_a;
 	final GuiSlotOnlineServerList field_96596_b;
 	
-	ThreadConnectToOnlineServer(GuiSlotOnlineServerList par1GuiSlotOnlineServerList, McoServer par2McoServer)
+	ThreadConnectToOnlineServer(GuiSlotOnlineServerList p_i1121_1_, McoServer p_i1121_2_)
 	{
-		field_96596_b = par1GuiSlotOnlineServerList;
-		field_96597_a = par2McoServer;
+		field_96596_b = p_i1121_1_;
+		field_96597_a = p_i1121_2_;
 	}
 	
 	@Override public void run()
@@ -37,16 +37,16 @@
 									field_96597_a.field_96411_l = true;
 									field_96597_a.field_96412_m = -2L;
 									field_96597_a.field_96414_k = "";
-									GuiScreenOnlineServers.func_101014_j();
+									GuiScreenOnlineServers.func_140016_k();
 									long var1 = System.nanoTime();
-									GuiScreenOnlineServers.func_101002_a(field_96596_b.field_96294_a, field_96597_a);
+									GuiScreenOnlineServers.func_140024_a(field_96596_b.field_96294_a, field_96597_a);
 									long var3 = System.nanoTime();
 									field_96597_a.field_96412_m = (var3 - var1) / 1000000L;
 									var27 = false;
 								} else if(field_96597_a.field_102022_m)
 								{
 									field_96597_a.field_102022_m = false;
-									GuiScreenOnlineServers.func_101002_a(field_96596_b.field_96294_a, field_96597_a);
+									GuiScreenOnlineServers.func_140024_a(field_96596_b.field_96294_a, field_96597_a);
 									var27 = false;
 								} else
 								{
@@ -81,45 +81,45 @@
 							{
 								if(var27)
 								{
-									synchronized(GuiScreenOnlineServers.func_101007_h())
+									synchronized(GuiScreenOnlineServers.func_140029_i())
 									{
-										GuiScreenOnlineServers.func_101013_k();
+										GuiScreenOnlineServers.func_140021_r();
 									}
 								}
 							}
-							synchronized(GuiScreenOnlineServers.func_101007_h())
+							synchronized(GuiScreenOnlineServers.func_140029_i())
 							{
-								GuiScreenOnlineServers.func_101013_k();
+								GuiScreenOnlineServers.func_140021_r();
 								return;
 							}
 						}
-						synchronized(GuiScreenOnlineServers.func_101007_h())
+						synchronized(GuiScreenOnlineServers.func_140029_i())
 						{
-							GuiScreenOnlineServers.func_101013_k();
+							GuiScreenOnlineServers.func_140021_r();
 							return;
 						}
 					}
-					synchronized(GuiScreenOnlineServers.func_101007_h())
+					synchronized(GuiScreenOnlineServers.func_140029_i())
 					{
-						GuiScreenOnlineServers.func_101013_k();
+						GuiScreenOnlineServers.func_140021_r();
 						return;
 					}
 				}
-				synchronized(GuiScreenOnlineServers.func_101007_h())
+				synchronized(GuiScreenOnlineServers.func_140029_i())
 				{
-					GuiScreenOnlineServers.func_101013_k();
+					GuiScreenOnlineServers.func_140021_r();
 					return;
 				}
 			}
-			synchronized(GuiScreenOnlineServers.func_101007_h())
+			synchronized(GuiScreenOnlineServers.func_140029_i())
 			{
-				GuiScreenOnlineServers.func_101013_k();
+				GuiScreenOnlineServers.func_140021_r();
 				return;
 			}
 		}
-		synchronized(GuiScreenOnlineServers.func_101007_h())
+		synchronized(GuiScreenOnlineServers.func_140029_i())
 		{
-			GuiScreenOnlineServers.func_101013_k();
+			GuiScreenOnlineServers.func_140021_r();
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadConnectToServer.java b/RMCClient/minecraft/net/minecraft/src/ThreadConnectToServer.java
index 77d3fae..fdb2373 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadConnectToServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadConnectToServer.java
@@ -9,11 +9,11 @@
 	final int port;
 	final GuiConnecting connectingGui;
 	
-	ThreadConnectToServer(GuiConnecting par1GuiConnecting, String par2Str, int par3)
+	ThreadConnectToServer(GuiConnecting p_i1180_1_, String p_i1180_2_, int p_i1180_3_)
 	{
-		connectingGui = par1GuiConnecting;
-		ip = par2Str;
-		port = par3;
+		connectingGui = p_i1180_1_;
+		ip = p_i1180_2_;
+		port = p_i1180_3_;
 	}
 	
 	@Override public void run()
@@ -22,7 +22,7 @@
 		{
 			GuiConnecting.setNetClientHandler(connectingGui, new NetClientHandler(GuiConnecting.func_74256_a(connectingGui), ip, port));
 			if(GuiConnecting.isCancelled(connectingGui)) return;
-			GuiConnecting.getNetClientHandler(connectingGui).addToSendQueue(new Packet2ClientProtocol(61, GuiConnecting.func_74254_c(connectingGui).session.username, ip, port));
+			GuiConnecting.getNetClientHandler(connectingGui).addToSendQueue(new Packet2ClientProtocol(74, GuiConnecting.func_74254_c(connectingGui).func_110432_I().func_111285_a(), ip, port));
 		} catch(UnknownHostException var2)
 		{
 			if(GuiConnecting.isCancelled(connectingGui)) return;
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImage.java b/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImage.java
deleted file mode 100644
index 8e6f07c..0000000
--- a/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImage.java
+++ /dev/null
@@ -1,47 +0,0 @@
-package net.minecraft.src;
-
-import java.net.HttpURLConnection;
-import java.net.URL;
-
-import javax.imageio.ImageIO;
-
-class ThreadDownloadImage extends Thread
-{
-	final String location;
-	final IImageBuffer buffer;
-	final ThreadDownloadImageData imageData;
-	
-	ThreadDownloadImage(ThreadDownloadImageData par1, String par2Str, IImageBuffer par3IImageBuffer)
-	{
-		imageData = par1;
-		location = par2Str;
-		buffer = par3IImageBuffer;
-	}
-	
-	@Override public void run()
-	{
-		HttpURLConnection var1 = null;
-		try
-		{
-			URL var2 = new URL(location);
-			var1 = (HttpURLConnection) var2.openConnection();
-			var1.setDoInput(true);
-			var1.setDoOutput(false);
-			var1.connect();
-			if(var1.getResponseCode() / 100 == 4) return;
-			if(buffer == null)
-			{
-				imageData.image = ImageIO.read(var1.getInputStream());
-			} else
-			{
-				imageData.image = buffer.parseUserSkin(ImageIO.read(var1.getInputStream()));
-			}
-		} catch(Exception var6)
-		{
-			var6.printStackTrace();
-		} finally
-		{
-			var1.disconnect();
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImageData.java b/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImageData.java
index 14985ba..b6b3146 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImageData.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImageData.java
@@ -1,16 +1,75 @@
 package net.minecraft.src;
 
 import java.awt.image.BufferedImage;
+import java.io.IOException;
 
-public class ThreadDownloadImageData
+public class ThreadDownloadImageData extends AbstractTexture
 {
-	public BufferedImage image;
-	public int referenceCount = 1;
-	public int textureName = -1;
-	public boolean textureSetupComplete = false;
+	private final String field_110562_b;
+	private final IImageBuffer field_110563_c;
+	private BufferedImage field_110560_d;
+	private Thread field_110561_e;
+	private SimpleTexture field_110558_f;
+	private boolean field_110559_g;
 	
-	public ThreadDownloadImageData(String par1, IImageBuffer par2IImageBuffer)
+	public ThreadDownloadImageData(String p_i1273_1_, ResourceLocation p_i1273_2_, IImageBuffer p_i1273_3_)
 	{
-		new ThreadDownloadImage(this, par1, par2IImageBuffer).start();
+		field_110562_b = p_i1273_1_;
+		field_110563_c = p_i1273_3_;
+		field_110558_f = p_i1273_2_ != null ? new SimpleTexture(p_i1273_2_) : null;
+	}
+	
+	@Override public void func_110551_a(ResourceManager p_110551_1_) throws IOException
+	{
+		if(field_110560_d == null)
+		{
+			if(field_110558_f != null)
+			{
+				field_110558_f.func_110551_a(p_110551_1_);
+				field_110553_a = field_110558_f.func_110552_b();
+			}
+		} else
+		{
+			TextureUtil.func_110987_a(func_110552_b(), field_110560_d);
+		}
+		if(field_110561_e == null)
+		{
+			field_110561_e = new ThreadDownloadImageDataINNER1(this);
+			field_110561_e.setDaemon(true);
+			field_110561_e.setName("Skin downloader: " + field_110562_b);
+			field_110561_e.start();
+		}
+	}
+	
+	@Override public int func_110552_b()
+	{
+		int var1 = super.func_110552_b();
+		if(!field_110559_g && field_110560_d != null)
+		{
+			TextureUtil.func_110987_a(var1, field_110560_d);
+			field_110559_g = true;
+		}
+		return var1;
+	}
+	
+	public void func_110556_a(BufferedImage p_110556_1_)
+	{
+		field_110560_d = p_110556_1_;
+	}
+	
+	public boolean func_110557_a()
+	{
+		func_110552_b();
+		return field_110559_g;
+	}
+	
+	static String func_110554_a(ThreadDownloadImageData p_110554_0_)
+	{
+		return p_110554_0_.field_110562_b;
+	}
+	
+	static IImageBuffer func_110555_b(ThreadDownloadImageData p_110555_0_)
+	{
+		return p_110555_0_.field_110563_c;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImageDataINNER1.java b/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImageDataINNER1.java
new file mode 100644
index 0000000..53e73d7
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadDownloadImageDataINNER1.java
@@ -0,0 +1,51 @@
+package net.minecraft.src;
+
+import java.awt.image.BufferedImage;
+import java.net.HttpURLConnection;
+import java.net.URL;
+
+import javax.imageio.ImageIO;
+
+import net.minecraft.client.Minecraft;
+
+class ThreadDownloadImageDataINNER1 extends Thread
+{
+	final ThreadDownloadImageData field_110932_a;
+	
+	ThreadDownloadImageDataINNER1(ThreadDownloadImageData p_i1272_1_)
+	{
+		field_110932_a = p_i1272_1_;
+	}
+	
+	@Override public void run()
+	{
+		HttpURLConnection var1 = null;
+		try
+		{
+			var1 = (HttpURLConnection) new URL(ThreadDownloadImageData.func_110554_a(field_110932_a)).openConnection(Minecraft.getMinecraft().func_110437_J());
+			var1.setDoInput(true);
+			var1.setDoOutput(false);
+			var1.connect();
+			if(var1.getResponseCode() / 100 == 2)
+			{
+				BufferedImage var2 = ImageIO.read(var1.getInputStream());
+				if(ThreadDownloadImageData.func_110555_b(field_110932_a) != null)
+				{
+					var2 = ThreadDownloadImageData.func_110555_b(field_110932_a).parseUserSkin(var2);
+				}
+				field_110932_a.func_110556_a(var2);
+				return;
+			}
+		} catch(Exception var6)
+		{
+			var6.printStackTrace();
+			return;
+		} finally
+		{
+			if(var1 != null)
+			{
+				var1.disconnect();
+			}
+		}
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadDownloadResources.java b/RMCClient/minecraft/net/minecraft/src/ThreadDownloadResources.java
deleted file mode 100644
index 1c55cb0..0000000
--- a/RMCClient/minecraft/net/minecraft/src/ThreadDownloadResources.java
+++ /dev/null
@@ -1,143 +0,0 @@
-package net.minecraft.src;
-
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.net.URL;
-
-import javax.xml.parsers.DocumentBuilder;
-import javax.xml.parsers.DocumentBuilderFactory;
-
-import net.minecraft.client.Minecraft;
-
-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
-import org.w3c.dom.Node;
-import org.w3c.dom.NodeList;
-
-public class ThreadDownloadResources extends Thread
-{
-	public File resourcesFolder;
-	private Minecraft mc;
-	private boolean closing = false;
-	
-	public ThreadDownloadResources(File par1File, Minecraft par2Minecraft)
-	{
-		mc = par2Minecraft;
-		setName("Resource download thread");
-		setDaemon(true);
-		resourcesFolder = new File(par1File, "resources/");
-		if(!resourcesFolder.exists() && !resourcesFolder.mkdirs()) throw new RuntimeException("The working directory could not be created: " + resourcesFolder);
-	}
-	
-	public void closeMinecraft()
-	{
-		closing = true;
-	}
-	
-	private void downloadAndInstallResource(URL par1URL, String par2Str, long par3, int par5)
-	{
-		try
-		{
-			int var6 = par2Str.indexOf("/");
-			String var7 = par2Str.substring(0, var6);
-			if(var7.equalsIgnoreCase("sound3"))
-			{
-				if(par5 != 0) return;
-			} else if(par5 != 1) return;
-			File var8 = new File(resourcesFolder, par2Str);
-			if(!var8.exists() || var8.length() != par3)
-			{
-				var8.getParentFile().mkdirs();
-				String var9 = par2Str.replaceAll(" ", "%20");
-				downloadResource(new URL(par1URL, var9), var8, par3);
-				if(closing) return;
-			}
-			mc.installResource(par2Str, var8);
-		} catch(Exception var10)
-		{
-			var10.printStackTrace();
-		}
-	}
-	
-	private void downloadResource(URL par1URL, File par2File, long par3) throws IOException
-	{
-		byte[] var5 = new byte[4096];
-		DataInputStream var6 = new DataInputStream(par1URL.openStream());
-		DataOutputStream var7 = new DataOutputStream(new FileOutputStream(par2File));
-		boolean var8 = false;
-		do
-		{
-			int var9;
-			if((var9 = var6.read(var5)) < 0)
-			{
-				var6.close();
-				var7.close();
-				return;
-			}
-			var7.write(var5, 0, var9);
-		} while(!closing);
-	}
-	
-	private void loadResource(File par1File, String par2Str)
-	{
-		File[] var3 = par1File.listFiles();
-		for(File element : var3)
-		{
-			if(element.isDirectory())
-			{
-				loadResource(element, par2Str + element.getName() + "/");
-			} else
-			{
-				try
-				{
-					mc.installResource(par2Str + element.getName(), element);
-				} catch(Exception var6)
-				{
-					mc.getLogAgent().logWarning("Failed to add " + par2Str + element.getName() + " in resources");
-				}
-			}
-		}
-	}
-	
-	public void reloadResources()
-	{
-		loadResource(resourcesFolder, "");
-	}
-	
-	@Override public void run()
-	{
-		try
-		{
-			URL var1 = new URL("http://s3.amazonaws.com/MinecraftResources/");
-			DocumentBuilderFactory var2 = DocumentBuilderFactory.newInstance();
-			DocumentBuilder var3 = var2.newDocumentBuilder();
-			Document var4 = var3.parse(var1.openStream());
-			NodeList var5 = var4.getElementsByTagName("Contents");
-			for(int var6 = 0; var6 < 2; ++var6)
-			{
-				for(int var7 = 0; var7 < var5.getLength(); ++var7)
-				{
-					Node var8 = var5.item(var7);
-					if(var8.getNodeType() == 1)
-					{
-						Element var9 = (Element) var8;
-						String var10 = var9.getElementsByTagName("Key").item(0).getChildNodes().item(0).getNodeValue();
-						long var11 = Long.parseLong(var9.getElementsByTagName("Size").item(0).getChildNodes().item(0).getNodeValue());
-						if(var11 > 0L)
-						{
-							downloadAndInstallResource(var1, var10, var11, var6);
-							if(closing) return;
-						}
-					}
-				}
-			}
-		} catch(Exception var13)
-		{
-			loadResource(resourcesFolder, "");
-			var13.printStackTrace();
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadLanServerFind.java b/RMCClient/minecraft/net/minecraft/src/ThreadLanServerFind.java
index bd3f8ac..c9c1e30 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadLanServerFind.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadLanServerFind.java
@@ -14,10 +14,10 @@
 	private final InetAddress broadcastAddress;
 	private final MulticastSocket socket;
 	
-	public ThreadLanServerFind(LanServerList par1LanServerList) throws IOException
+	public ThreadLanServerFind(LanServerList p_i1320_1_) throws IOException
 	{
 		super("LanServerDetector");
-		localServerList = par1LanServerList;
+		localServerList = p_i1320_1_;
 		setDaemon(true);
 		socket = new MulticastSocket(4445);
 		broadcastAddress = InetAddress.getByName("224.0.2.60");
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadLanServerPing.java b/RMCClient/minecraft/net/minecraft/src/ThreadLanServerPing.java
index d84d6d6..bc97c21 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadLanServerPing.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadLanServerPing.java
@@ -14,11 +14,11 @@
 	private boolean isStopping = true;
 	private final String address;
 	
-	public ThreadLanServerPing(String par1Str, String par2Str) throws IOException
+	public ThreadLanServerPing(String p_i1321_1_, String p_i1321_2_) throws IOException
 	{
 		super("LanServerPinger");
-		motd = par1Str;
-		address = par2Str;
+		motd = p_i1321_1_;
+		address = p_i1321_2_;
 		setDaemon(true);
 		socket = new DatagramSocket();
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadLoginVerifier.java b/RMCClient/minecraft/net/minecraft/src/ThreadLoginVerifier.java
index c4acc4c..94e8cd2 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadLoginVerifier.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadLoginVerifier.java
@@ -10,9 +10,9 @@
 {
 	final NetLoginHandler loginHandler;
 	
-	ThreadLoginVerifier(NetLoginHandler par1NetLoginHandler)
+	ThreadLoginVerifier(NetLoginHandler p_i1526_1_)
 	{
-		loginHandler = par1NetLoginHandler;
+		loginHandler = p_i1526_1_;
 	}
 	
 	@Override public void run()
@@ -21,7 +21,7 @@
 		{
 			String var1 = new BigInteger(CryptManager.getServerIdHash(NetLoginHandler.getServerId(loginHandler), NetLoginHandler.getLoginMinecraftServer(loginHandler).getKeyPair().getPublic(), NetLoginHandler.getSharedKey(loginHandler))).toString(16);
 			URL var2 = new URL("http://session.minecraft.net/game/checkserver.jsp?user=" + URLEncoder.encode(NetLoginHandler.getClientUsername(loginHandler), "UTF-8") + "&serverId=" + URLEncoder.encode(var1, "UTF-8"));
-			BufferedReader var3 = new BufferedReader(new InputStreamReader(var2.openStream()));
+			BufferedReader var3 = new BufferedReader(new InputStreamReader(var2.openConnection(NetLoginHandler.getLoginMinecraftServer(loginHandler).func_110454_ao()).getInputStream()));
 			String var4 = var3.readLine();
 			var3.close();
 			if(!"YES".equals(var4))
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadMinecraftServer.java b/RMCClient/minecraft/net/minecraft/src/ThreadMinecraftServer.java
index df376c2..07b34e0 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadMinecraftServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadMinecraftServer.java
@@ -6,10 +6,10 @@
 {
 	final MinecraftServer theServer;
 	
-	public ThreadMinecraftServer(MinecraftServer par1MinecraftServer, String par2Str)
+	public ThreadMinecraftServer(MinecraftServer p_i1494_1_, String p_i1494_2_)
 	{
-		super(par2Str);
-		theServer = par1MinecraftServer;
+		super(p_i1494_2_);
+		theServer = p_i1494_1_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadOnlineConnect.java b/RMCClient/minecraft/net/minecraft/src/ThreadOnlineConnect.java
index b7146fb..3b2258b 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadOnlineConnect.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadOnlineConnect.java
@@ -9,11 +9,11 @@
 	final int field_96593_b;
 	final TaskOnlineConnect field_96594_c;
 	
-	ThreadOnlineConnect(TaskOnlineConnect par1TaskOnlineConnect, String par2Str, int par3)
+	ThreadOnlineConnect(TaskOnlineConnect p_i1118_1_, String p_i1118_2_, int p_i1118_3_)
 	{
-		field_96594_c = par1TaskOnlineConnect;
-		field_96595_a = par2Str;
-		field_96593_b = par3;
+		field_96594_c = p_i1118_1_;
+		field_96595_a = p_i1118_2_;
+		field_96593_b = p_i1118_3_;
 	}
 	
 	@Override public void run()
@@ -22,8 +22,8 @@
 		{
 			TaskOnlineConnect.func_96583_a(field_96594_c, new NetClientHandler(field_96594_c.func_96578_b(), field_96595_a, field_96593_b, TaskOnlineConnect.func_98172_a(field_96594_c)));
 			if(field_96594_c.func_96577_c()) return;
-			field_96594_c.func_96576_b(StringTranslate.getInstance().translateKey("mco.connect.authorizing"));
-			TaskOnlineConnect.func_96580_a(field_96594_c).addToSendQueue(new Packet2ClientProtocol(61, field_96594_c.func_96578_b().session.username, field_96595_a, field_96593_b));
+			field_96594_c.func_96576_b(I18n.func_135053_a("mco.connect.authorizing"));
+			TaskOnlineConnect.func_96580_a(field_96594_c).addToSendQueue(new Packet2ClientProtocol(74, field_96594_c.func_96578_b().func_110432_I().func_111285_a(), field_96595_a, field_96593_b));
 		} catch(UnknownHostException var2)
 		{
 			if(field_96594_c.func_96577_c()) return;
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadOnlineScreen.java b/RMCClient/minecraft/net/minecraft/src/ThreadOnlineScreen.java
index 484e5aa..9dd5a79 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadOnlineScreen.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadOnlineScreen.java
@@ -4,20 +4,29 @@
 {
 	final GuiScreenOnlineServers field_98173_a;
 	
-	ThreadOnlineScreen(GuiScreenOnlineServers par1GuiScreenOnlineServers)
+	ThreadOnlineScreen(GuiScreenOnlineServers p_i1120_1_)
 	{
-		field_98173_a = par1GuiScreenOnlineServers;
+		field_98173_a = p_i1120_1_;
 	}
 	
 	@Override public void run()
 	{
-		McoClient var1 = new McoClient(GuiScreenOnlineServers.func_96177_a(field_98173_a).session);
 		try
 		{
-			GuiScreenOnlineServers.func_98081_a(field_98173_a, var1.func_96379_c());
-		} catch(Exception var3)
+			McoServer var1 = GuiScreenOnlineServers.func_140011_a(field_98173_a, GuiScreenOnlineServers.func_140041_a(field_98173_a));
+			if(var1 != null)
+			{
+				McoClient var2 = new McoClient(GuiScreenOnlineServers.func_98075_b(field_98173_a).func_110432_I());
+				GuiScreenOnlineServers.func_140040_h().func_140058_a(var1);
+				GuiScreenOnlineServers.func_140013_c(field_98173_a).remove(var1);
+				var2.func_140055_c(var1.field_96408_a);
+				GuiScreenOnlineServers.func_140040_h().func_140058_a(var1);
+				GuiScreenOnlineServers.func_140013_c(field_98173_a).remove(var1);
+				GuiScreenOnlineServers.func_140017_d(field_98173_a);
+			}
+		} catch(ExceptionMcoService var3)
 		{
-			GuiScreenOnlineServers.func_98081_a(field_98173_a, 0);
+			GuiScreenOnlineServers.func_98076_f(field_98173_a).getLogAgent().logSevere(var3.toString());
 		}
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadPollServers.java b/RMCClient/minecraft/net/minecraft/src/ThreadPollServers.java
index baee334..b73d982 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadPollServers.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadPollServers.java
@@ -10,10 +10,10 @@
 	final ServerData pollServersServerData;
 	final GuiSlotServer serverSlotContainer;
 	
-	ThreadPollServers(GuiSlotServer par1GuiSlotServer, ServerData par2ServerData)
+	ThreadPollServers(GuiSlotServer p_i1038_1_, ServerData p_i1038_2_)
 	{
-		serverSlotContainer = par1GuiSlotServer;
-		pollServersServerData = par2ServerData;
+		serverSlotContainer = p_i1038_1_;
+		pollServersServerData = p_i1038_2_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadStatSyncherReceive.java b/RMCClient/minecraft/net/minecraft/src/ThreadStatSyncherReceive.java
index 3e4a020..bf87929 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadStatSyncherReceive.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadStatSyncherReceive.java
@@ -4,9 +4,9 @@
 {
 	final StatsSyncher syncher;
 	
-	ThreadStatSyncherReceive(StatsSyncher par1StatsSyncher)
+	ThreadStatSyncherReceive(StatsSyncher p_i1333_1_)
 	{
-		syncher = par1StatsSyncher;
+		syncher = p_i1333_1_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadStatSyncherSend.java b/RMCClient/minecraft/net/minecraft/src/ThreadStatSyncherSend.java
index f283664..de4637b 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadStatSyncherSend.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadStatSyncherSend.java
@@ -7,10 +7,10 @@
 	final Map field_77483_a;
 	final StatsSyncher syncher;
 	
-	ThreadStatSyncherSend(StatsSyncher par1StatsSyncher, Map par2Map)
+	ThreadStatSyncherSend(StatsSyncher p_i1334_1_, Map p_i1334_2_)
 	{
-		syncher = par1StatsSyncher;
-		field_77483_a = par2Map;
+		syncher = p_i1334_1_;
+		field_77483_a = p_i1334_2_;
 	}
 	
 	@Override public void run()
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadTitleScreen.java b/RMCClient/minecraft/net/minecraft/src/ThreadTitleScreen.java
deleted file mode 100644
index 0355d86..0000000
--- a/RMCClient/minecraft/net/minecraft/src/ThreadTitleScreen.java
+++ /dev/null
@@ -1,57 +0,0 @@
-package net.minecraft.src;
-
-import java.io.IOException;
-
-class ThreadTitleScreen extends Thread
-{
-	final StringTranslate field_98135_a;
-	final int field_98133_b;
-	final int field_98134_c;
-	final GuiMainMenu field_98132_d;
-	
-	ThreadTitleScreen(GuiMainMenu par1GuiMainMenu, StringTranslate par2StringTranslate, int par3, int par4)
-	{
-		field_98132_d = par1GuiMainMenu;
-		field_98135_a = par2StringTranslate;
-		field_98133_b = par3;
-		field_98134_c = par4;
-	}
-	
-	@Override public void run()
-	{
-		McoClient var1 = new McoClient(GuiMainMenu.func_98058_a(field_98132_d).session);
-		boolean var2 = false;
-		for(int var3 = 0; var3 < 3; ++var3)
-		{
-			try
-			{
-				Boolean var4 = var1.func_96375_b();
-				if(var4.booleanValue())
-				{
-					GuiMainMenu.func_98061_a(field_98132_d, field_98135_a, field_98133_b, field_98134_c);
-				}
-				GuiMainMenu.func_98059_a(var4.booleanValue());
-			} catch(ExceptionRetryCall var6)
-			{
-				var2 = true;
-			} catch(ExceptionMcoService var7)
-			{
-				;
-			} catch(IOException var8)
-			{
-				;
-			}
-			if(!var2)
-			{
-				break;
-			}
-			try
-			{
-				Thread.sleep(10000L);
-			} catch(InterruptedException var5)
-			{
-				Thread.currentThread().interrupt();
-			}
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/ThreadedFileIOBase.java b/RMCClient/minecraft/net/minecraft/src/ThreadedFileIOBase.java
index 735843b..9ee2c6f 100644
--- a/RMCClient/minecraft/net/minecraft/src/ThreadedFileIOBase.java
+++ b/RMCClient/minecraft/net/minecraft/src/ThreadedFileIOBase.java
@@ -8,9 +8,9 @@
 {
 	public static final ThreadedFileIOBase threadedIOInstance = new ThreadedFileIOBase();
 	private List threadedIOQueue = Collections.synchronizedList(new ArrayList());
-	private volatile long writeQueuedCounter = 0L;
-	private volatile long savedIOCounter = 0L;
-	private volatile boolean isThreadWaiting = false;
+	private volatile long writeQueuedCounter;
+	private volatile long savedIOCounter;
+	private volatile boolean isThreadWaiting;
 	
 	private ThreadedFileIOBase()
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/Tickable.java b/RMCClient/minecraft/net/minecraft/src/Tickable.java
new file mode 100644
index 0000000..3617bc5
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Tickable.java
@@ -0,0 +1,6 @@
+package net.minecraft.src;
+
+public interface Tickable
+{
+	void func_110550_d();
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/TickableTextureObject.java b/RMCClient/minecraft/net/minecraft/src/TickableTextureObject.java
new file mode 100644
index 0000000..3271c76
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/TickableTextureObject.java
@@ -0,0 +1,5 @@
+package net.minecraft.src;
+
+public interface TickableTextureObject extends TextureObject, Tickable
+{
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityBeaconRenderer.java b/RMCClient/minecraft/net/minecraft/src/TileEntityBeaconRenderer.java
index cd89130..f59bee1 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityBeaconRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityBeaconRenderer.java
@@ -4,6 +4,8 @@
 
 public class TileEntityBeaconRenderer extends TileEntitySpecialRenderer
 {
+	private static final ResourceLocation field_110629_a = new ResourceLocation("textures/entity/beacon_beam.png");
+	
 	@Override public void renderTileEntityAt(TileEntity par1TileEntity, double par2, double par4, double par6, float par8)
 	{
 		renderTileEntityBeaconAt((TileEntityBeacon) par1TileEntity, par2, par4, par6, par8);
@@ -15,7 +17,7 @@
 		if(var9 > 0.0F)
 		{
 			Tessellator var10 = Tessellator.instance;
-			bindTextureByName("/misc/beam.png");
+			func_110628_a(field_110629_a);
 			GL11.glTexParameterf(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_S, 10497.0F);
 			GL11.glTexParameterf(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, 10497.0F);
 			GL11.glDisable(GL11.GL_LIGHTING);
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityChest.java b/RMCClient/minecraft/net/minecraft/src/TileEntityChest.java
index 1cc2f41..2a0ace1 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityChest.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityChest.java
@@ -6,7 +6,7 @@
 public class TileEntityChest extends TileEntity implements IInventory
 {
 	private ItemStack[] chestContents = new ItemStack[36];
-	public boolean adjacentChestChecked = false;
+	public boolean adjacentChestChecked;
 	public TileEntityChest adjacentChestZNeg;
 	public TileEntityChest adjacentChestXPos;
 	public TileEntityChest adjacentChestXNeg;
@@ -15,9 +15,19 @@
 	public float prevLidAngle;
 	public int numUsingPlayers;
 	private int ticksSinceSync;
-	private int field_94046_i = -1;
+	private int field_94046_i;
 	private String field_94045_s;
 	
+	public TileEntityChest()
+	{
+		field_94046_i = -1;
+	}
+	
+	public TileEntityChest(int p_i2350_1_)
+	{
+		field_94046_i = p_i2350_1_;
+	}
+	
 	public void checkForAdjacentChests()
 	{
 		if(!adjacentChestChecked)
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityChestRenderer.java b/RMCClient/minecraft/net/minecraft/src/TileEntityChestRenderer.java
index 5580643..f4b07f5 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityChestRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityChestRenderer.java
@@ -7,6 +7,12 @@
 
 public class TileEntityChestRenderer extends TileEntitySpecialRenderer
 {
+	private static final ResourceLocation field_110635_a = new ResourceLocation("textures/entity/chest/trapped_double.png");
+	private static final ResourceLocation field_110634_c = new ResourceLocation("textures/entity/chest/christmas_double.png");
+	private static final ResourceLocation field_110632_d = new ResourceLocation("textures/entity/chest/normal_double.png");
+	private static final ResourceLocation field_110633_e = new ResourceLocation("textures/entity/chest/trapped.png");
+	private static final ResourceLocation field_110630_f = new ResourceLocation("textures/entity/chest/christmas.png");
+	private static final ResourceLocation field_110631_g = new ResourceLocation("textures/entity/chest/normal.png");
 	private ModelChest chestModel = new ModelChest();
 	private ModelChest largeChestModel = new ModelLargeChest();
 	private boolean isChristmas;
@@ -50,26 +56,26 @@
 				var14 = chestModel;
 				if(par1TileEntityChest.func_98041_l() == 1)
 				{
-					bindTextureByName("/item/chests/trap_small.png");
+					func_110628_a(field_110633_e);
 				} else if(isChristmas)
 				{
-					bindTextureByName("/item/xmaschest.png");
+					func_110628_a(field_110630_f);
 				} else
 				{
-					bindTextureByName("/item/chest.png");
+					func_110628_a(field_110631_g);
 				}
 			} else
 			{
 				var14 = largeChestModel;
 				if(par1TileEntityChest.func_98041_l() == 1)
 				{
-					bindTextureByName("/item/chests/trap_large.png");
+					func_110628_a(field_110635_a);
 				} else if(isChristmas)
 				{
-					bindTextureByName("/item/largexmaschest.png");
+					func_110628_a(field_110634_c);
 				} else
 				{
-					bindTextureByName("/item/largechest.png");
+					func_110628_a(field_110632_d);
 				}
 			}
 			GL11.glPushMatrix();
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityCommandBlock.java b/RMCClient/minecraft/net/minecraft/src/TileEntityCommandBlock.java
index 36f60f5..dd5d06e 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityCommandBlock.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityCommandBlock.java
@@ -4,7 +4,7 @@
 
 public class TileEntityCommandBlock extends TileEntity implements ICommandSender
 {
-	private int succesCount = 0;
+	private int succesCount;
 	private String command = "";
 	private String commandSenderName = "@";
 	
@@ -25,6 +25,11 @@
 				return var3.executeCommand(this, command);
 			} else return 0;
 		}
+	}
+	
+	@Override public World func_130014_f_()
+	{
+		return getWorldObj();
 	}
 	
 	public void func_96102_a(int par1)
@@ -70,7 +75,7 @@
 		}
 	}
 	
-	@Override public void sendChatToPlayer(String par1Str)
+	@Override public void sendChatToPlayer(ChatMessageComponent par1Str)
 	{
 	}
 	
@@ -83,11 +88,6 @@
 	public void setCommandSenderName(String par1Str)
 	{
 		commandSenderName = par1Str;
-	}
-	
-	@Override public String translateString(String par1Str, Object ... par2ArrayOfObj)
-	{
-		return par1Str;
 	}
 	
 	@Override public void writeToNBT(NBTTagCompound par1NBTTagCompound)
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityComparator.java b/RMCClient/minecraft/net/minecraft/src/TileEntityComparator.java
index 933b93d..02dbf98 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityComparator.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityComparator.java
@@ -2,7 +2,7 @@
 
 public class TileEntityComparator extends TileEntity
 {
-	private int field_96101_a = 0;
+	private int field_96101_a;
 	
 	public void func_96099_a(int par1)
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityEnderChestRenderer.java b/RMCClient/minecraft/net/minecraft/src/TileEntityEnderChestRenderer.java
index f4f60b8..b184db7 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityEnderChestRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityEnderChestRenderer.java
@@ -5,6 +5,7 @@
 
 public class TileEntityEnderChestRenderer extends TileEntitySpecialRenderer
 {
+	private static final ResourceLocation field_110637_a = new ResourceLocation("textures/entity/chest/ender.png");
 	private ModelChest theEnderChestModel = new ModelChest();
 	
 	public void renderEnderChest(TileEntityEnderChest par1TileEntityEnderChest, double par2, double par4, double par6, float par8)
@@ -14,7 +15,7 @@
 		{
 			var9 = par1TileEntityEnderChest.getBlockMetadata();
 		}
-		bindTextureByName("/item/enderchest.png");
+		func_110628_a(field_110637_a);
 		GL11.glPushMatrix();
 		GL11.glEnable(GL12.GL_RESCALE_NORMAL);
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityFurnace.java b/RMCClient/minecraft/net/minecraft/src/TileEntityFurnace.java
index de28359..2ae1665 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityFurnace.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityFurnace.java
@@ -6,9 +6,9 @@
 	private static final int[] field_102011_e = new int[] { 2, 1 };
 	private static final int[] field_102009_f = new int[] { 1 };
 	private ItemStack[] furnaceItemStacks = new ItemStack[3];
-	public int furnaceBurnTime = 0;
-	public int currentItemBurnTime = 0;
-	public int furnaceCookTime = 0;
+	public int furnaceBurnTime;
+	public int currentItemBurnTime;
+	public int furnaceCookTime;
 	private String field_94130_e;
 	
 	@Override public boolean canExtractItem(int par1, ItemStack par2ItemStack, int par3)
@@ -274,6 +274,7 @@
 				Block var3 = Block.blocksList[var1];
 				if(var3 == Block.woodSingleSlab) return 150;
 				if(var3.blockMaterial == Material.wood) return 300;
+				if(var3 == Block.field_111034_cE) return 16000;
 			}
 			return var2 instanceof ItemTool && ((ItemTool) var2).getToolMaterialName().equals("WOOD") ? 200 : var2 instanceof ItemSword && ((ItemSword) var2).getToolMaterialName().equals("WOOD") ? 200 : var2 instanceof ItemHoe && ((ItemHoe) var2).getMaterialName().equals("WOOD") ? 200 : var1 == Item.stick.itemID ? 100 : var1 == Item.coal.itemID ? 1600 : var1 == Item.bucketLava.itemID ? 20000 : var1 == Block.sapling.blockID ? 100 : var1 == Item.blazeRod.itemID ? 2400 : 0;
 		}
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityHopper.java b/RMCClient/minecraft/net/minecraft/src/TileEntityHopper.java
index 728d482..3afaa4c 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityHopper.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityHopper.java
@@ -40,7 +40,8 @@
 		{
 			if(!isCoolingDown() && BlockHopper.getIsBlockNotPoweredFromMetadata(getBlockMetadata()))
 			{
-				boolean var1 = insertItemToInventory() | suckItemsIntoHopper(this);
+				boolean var1 = insertItemToInventory();
+				var1 = suckItemsIntoHopper(this) || var1;
 				if(var1)
 				{
 					setTransferCooldown(8);
@@ -231,9 +232,9 @@
 		}
 	}
 	
-	private static boolean areItemStacksEqualItem(ItemStack par1ItemStack, ItemStack par2ItemStack)
+	private static boolean areItemStacksEqualItem(ItemStack p_94114_0_, ItemStack par1ItemStack)
 	{
-		return par1ItemStack.itemID != par2ItemStack.itemID ? false : par1ItemStack.getItemDamage() != par2ItemStack.getItemDamage() ? false : par1ItemStack.stackSize > par1ItemStack.getMaxStackSize() ? false : ItemStack.areItemStackTagsEqual(par1ItemStack, par2ItemStack);
+		return p_94114_0_.itemID != par1ItemStack.itemID ? false : p_94114_0_.getItemDamage() != par1ItemStack.getItemDamage() ? false : p_94114_0_.stackSize > p_94114_0_.getMaxStackSize() ? false : ItemStack.areItemStackTagsEqual(p_94114_0_, par1ItemStack);
 	}
 	
 	private static boolean canExtractItemFromInventory(IInventory par0IInventory, ItemStack par1ItemStack, int par2, int par3)
@@ -282,6 +283,7 @@
 				if(par0IInventory instanceof TileEntityHopper)
 				{
 					((TileEntityHopper) par0IInventory).setTransferCooldown(8);
+					par0IInventory.onInventoryChanged();
 				}
 				par0IInventory.onInventoryChanged();
 			}
@@ -356,29 +358,29 @@
 		return var7;
 	}
 	
-	public static ItemStack insertStack(IInventory par1IInventory, ItemStack par2ItemStack, int par3)
+	public static ItemStack insertStack(IInventory p_94117_0_, ItemStack par1IInventory, int par2ItemStack)
 	{
-		if(par1IInventory instanceof ISidedInventory && par3 > -1)
+		if(p_94117_0_ instanceof ISidedInventory && par2ItemStack > -1)
 		{
-			ISidedInventory var6 = (ISidedInventory) par1IInventory;
-			int[] var7 = var6.getAccessibleSlotsFromSide(par3);
-			for(int var5 = 0; var5 < var7.length && par2ItemStack != null && par2ItemStack.stackSize > 0; ++var5)
+			ISidedInventory var6 = (ISidedInventory) p_94117_0_;
+			int[] var7 = var6.getAccessibleSlotsFromSide(par2ItemStack);
+			for(int var5 = 0; var5 < var7.length && par1IInventory != null && par1IInventory.stackSize > 0; ++var5)
 			{
-				par2ItemStack = func_102014_c(par1IInventory, par2ItemStack, var7[var5], par3);
+				par1IInventory = func_102014_c(p_94117_0_, par1IInventory, var7[var5], par2ItemStack);
 			}
 		} else
 		{
-			int var3 = par1IInventory.getSizeInventory();
-			for(int var4 = 0; var4 < var3 && par2ItemStack != null && par2ItemStack.stackSize > 0; ++var4)
+			int var3 = p_94117_0_.getSizeInventory();
+			for(int var4 = 0; var4 < var3 && par1IInventory != null && par1IInventory.stackSize > 0; ++var4)
 			{
-				par2ItemStack = func_102014_c(par1IInventory, par2ItemStack, var4, par3);
+				par1IInventory = func_102014_c(p_94117_0_, par1IInventory, var4, par2ItemStack);
 			}
 		}
-		if(par2ItemStack != null && par2ItemStack.stackSize == 0)
+		if(par1IInventory != null && par1IInventory.stackSize == 0)
 		{
-			par2ItemStack = null;
+			par1IInventory = null;
 		}
-		return par2ItemStack;
+		return par1IInventory;
 	}
 	
 	public static boolean suckItemsIntoHopper(Hopper par0Hopper)
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityMobSpawnerLogic.java b/RMCClient/minecraft/net/minecraft/src/TileEntityMobSpawnerLogic.java
index 8aae6df..6dc1597 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityMobSpawnerLogic.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityMobSpawnerLogic.java
@@ -4,9 +4,9 @@
 {
 	final TileEntityMobSpawner mobSpawnerEntity;
 	
-	TileEntityMobSpawnerLogic(TileEntityMobSpawner par1TileEntityMobSpawner)
+	TileEntityMobSpawnerLogic(TileEntityMobSpawner p_i2292_1_)
 	{
-		mobSpawnerEntity = par1TileEntityMobSpawner;
+		mobSpawnerEntity = p_i2292_1_;
 	}
 	
 	@Override public void func_98267_a(int par1)
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityNote.java b/RMCClient/minecraft/net/minecraft/src/TileEntityNote.java
index a285126..f17c126 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityNote.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityNote.java
@@ -2,8 +2,8 @@
 
 public class TileEntityNote extends TileEntity
 {
-	public byte note = 0;
-	public boolean previousRedstoneState = false;
+	public byte note;
+	public boolean previousRedstoneState;
 	
 	public void changePitch()
 	{
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityPiston.java b/RMCClient/minecraft/net/minecraft/src/TileEntityPiston.java
index c09fef0..207830a 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityPiston.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityPiston.java
@@ -19,13 +19,13 @@
 	{
 	}
 	
-	public TileEntityPiston(int par1, int par2, int par3, boolean par4, boolean par5)
+	public TileEntityPiston(int p_i2299_1_, int p_i2299_2_, int p_i2299_3_, boolean p_i2299_4_, boolean p_i2299_5_)
 	{
-		storedBlockID = par1;
-		storedMetadata = par2;
-		storedOrientation = par3;
-		extending = par4;
-		shouldHeadBeRendered = par5;
+		storedBlockID = p_i2299_1_;
+		storedMetadata = p_i2299_2_;
+		storedOrientation = p_i2299_3_;
+		extending = p_i2299_4_;
+		shouldHeadBeRendered = p_i2299_5_;
 	}
 	
 	public void clearPistonTileEntity()
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityRenderer.java b/RMCClient/minecraft/net/minecraft/src/TileEntityRenderer.java
index 13e608b..ee51bd7 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityRenderer.java
@@ -14,9 +14,9 @@
 	public static double staticPlayerX;
 	public static double staticPlayerY;
 	public static double staticPlayerZ;
-	public RenderEngine renderEngine;
+	public TextureManager renderEngine;
 	public World worldObj;
-	public EntityLiving entityLivingPlayer;
+	public EntityLivingBase entityLivingPlayer;
 	public float playerYaw;
 	public float playerPitch;
 	public double playerX;
@@ -42,7 +42,7 @@
 		}
 	}
 	
-	public void cacheActiveRenderInfo(World par1World, RenderEngine par2RenderEngine, FontRenderer par3FontRenderer, EntityLiving par4EntityLiving, float par5)
+	public void cacheActiveRenderInfo(World par1World, TextureManager par2RenderEngine, FontRenderer par3FontRenderer, EntityLivingBase par4EntityLiving, float par5)
 	{
 		if(worldObj != par1World)
 		{
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntityRendererPiston.java b/RMCClient/minecraft/net/minecraft/src/TileEntityRendererPiston.java
index e717de9..bca2a8e 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntityRendererPiston.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntityRendererPiston.java
@@ -19,7 +19,7 @@
 		if(var9 != null && par1TileEntityPiston.getProgress(par8) < 1.0F)
 		{
 			Tessellator var10 = Tessellator.instance;
-			bindTextureByName("/terrain.png");
+			func_110628_a(TextureMap.field_110575_b);
 			RenderHelper.disableStandardItemLighting();
 			GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
 			GL11.glEnable(GL11.GL_BLEND);
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntitySign.java b/RMCClient/minecraft/net/minecraft/src/TileEntitySign.java
index 28f91cc..aa615a3 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntitySign.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntitySign.java
@@ -5,6 +5,17 @@
 	public String[] signText = new String[] { "", "", "", "" };
 	public int lineBeingEdited = -1;
 	private boolean isEditable = true;
+	private EntityPlayer field_142011_d;
+	
+	public EntityPlayer func_142009_b()
+	{
+		return field_142011_d;
+	}
+	
+	public void func_142010_a(EntityPlayer p_142010_1_)
+	{
+		field_142011_d = p_142010_1_;
+	}
 	
 	@Override public Packet getDescriptionPacket()
 	{
@@ -35,6 +46,10 @@
 	public void setEditable(boolean par1)
 	{
 		isEditable = par1;
+		if(!par1)
+		{
+			field_142011_d = null;
+		}
 	}
 	
 	@Override public void writeToNBT(NBTTagCompound par1NBTTagCompound)
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntitySignRenderer.java b/RMCClient/minecraft/net/minecraft/src/TileEntitySignRenderer.java
index 5c38845..f131369 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntitySignRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntitySignRenderer.java
@@ -4,7 +4,8 @@
 
 public class TileEntitySignRenderer extends TileEntitySpecialRenderer
 {
-	private ModelSign modelSign = new ModelSign();
+	private static final ResourceLocation field_110638_a = new ResourceLocation("textures/entity/sign.png");
+	private final ModelSign modelSign = new ModelSign();
 	
 	@Override public void renderTileEntityAt(TileEntity par1TileEntity, double par2, double par4, double par6, float par8)
 	{
@@ -44,7 +45,7 @@
 			GL11.glTranslatef(0.0F, -0.3125F, -0.4375F);
 			modelSign.signStick.showModel = false;
 		}
-		bindTextureByName("/item/sign.png");
+		func_110628_a(field_110638_a);
 		GL11.glPushMatrix();
 		GL11.glScalef(var10, -var10, -var10);
 		modelSign.renderSign();
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntitySkullRenderer.java b/RMCClient/minecraft/net/minecraft/src/TileEntitySkullRenderer.java
index ce2582c..ab7e3d1 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntitySkullRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntitySkullRenderer.java
@@ -5,6 +5,10 @@
 
 public class TileEntitySkullRenderer extends TileEntitySpecialRenderer
 {
+	private static final ResourceLocation field_110642_c = new ResourceLocation("textures/entity/skeleton/skeleton.png");
+	private static final ResourceLocation field_110640_d = new ResourceLocation("textures/entity/skeleton/wither_skeleton.png");
+	private static final ResourceLocation field_110641_e = new ResourceLocation("textures/entity/zombie/zombie.png");
+	private static final ResourceLocation field_110639_f = new ResourceLocation("textures/entity/creeper/creeper.png");
 	public static TileEntitySkullRenderer skullRenderer;
 	private ModelSkeletonHead field_82396_c = new ModelSkeletonHead(0, 0, 64, 32);
 	private ModelSkeletonHead field_82395_d = new ModelSkeletonHead(0, 0, 64, 64);
@@ -16,31 +20,26 @@
 		{
 			case 0:
 			default:
-				bindTextureByName("/mob/skeleton.png");
+				func_110628_a(field_110642_c);
 				break;
 			case 1:
-				bindTextureByName("/mob/skeleton_wither.png");
+				func_110628_a(field_110640_d);
 				break;
 			case 2:
-				bindTextureByName("/mob/zombie.png");
+				func_110628_a(field_110641_e);
 				var8 = field_82395_d;
 				break;
 			case 3:
+				ResourceLocation var9 = AbstractClientPlayer.field_110314_b;
 				if(par7Str != null && par7Str.length() > 0)
 				{
-					String var9 = "http://skins.minecraft.net/MinecraftSkins/" + StringUtils.stripControlCodes(par7Str) + ".png";
-					if(!skullRenderer.tileEntityRenderer.renderEngine.hasImageData(var9))
-					{
-						skullRenderer.tileEntityRenderer.renderEngine.obtainImageData(var9, new ImageBufferDownload());
-					}
-					bindTextureByURL(var9, "/mob/char.png");
-				} else
-				{
-					bindTextureByName("/mob/char.png");
+					var9 = AbstractClientPlayer.func_110305_h(par7Str);
+					AbstractClientPlayer.func_110304_a(var9, par7Str);
 				}
+				func_110628_a(var9);
 				break;
 			case 4:
-				bindTextureByName("/mob/creeper.png");
+				func_110628_a(field_110639_f);
 		}
 		GL11.glPushMatrix();
 		GL11.glDisable(GL11.GL_CULL_FACE);
diff --git a/RMCClient/minecraft/net/minecraft/src/TileEntitySpecialRenderer.java b/RMCClient/minecraft/net/minecraft/src/TileEntitySpecialRenderer.java
index 2235cd3..94a9260 100644
--- a/RMCClient/minecraft/net/minecraft/src/TileEntitySpecialRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/TileEntitySpecialRenderer.java
@@ -1,28 +1,16 @@
 package net.minecraft.src;
 
-import org.lwjgl.opengl.GL11;
-
 public abstract class TileEntitySpecialRenderer
 {
 	protected TileEntityRenderer tileEntityRenderer;
 	
-	protected void bindTextureByName(String par1Str)
+	protected void func_110628_a(ResourceLocation p_110628_1_)
 	{
-		RenderEngine var2 = tileEntityRenderer.renderEngine;
+		TextureManager var2 = tileEntityRenderer.renderEngine;
 		if(var2 != null)
 		{
-			var2.bindTexture(par1Str);
+			var2.func_110577_a(p_110628_1_);
 		}
-	}
-	
-	protected void bindTextureByURL(String par1Str, String par2Str)
-	{
-		RenderEngine var3 = tileEntityRenderer.renderEngine;
-		if(var3 != null)
-		{
-			GL11.glBindTexture(GL11.GL_TEXTURE_2D, var3.getTextureForDownloadableImage(par1Str, par2Str));
-		}
-		var3.resetBoundTexture();
 	}
 	
 	public FontRenderer getFontRenderer()
diff --git a/RMCClient/minecraft/net/minecraft/src/Timer.java b/RMCClient/minecraft/net/minecraft/src/Timer.java
index 1c1fa71..0061088 100644
--- a/RMCClient/minecraft/net/minecraft/src/Timer.java
+++ b/RMCClient/minecraft/net/minecraft/src/Timer.java
@@ -9,15 +9,15 @@
 	public int elapsedTicks;
 	public float renderPartialTicks;
 	public float timerSpeed = 1.0F;
-	public float elapsedPartialTicks = 0.0F;
+	public float elapsedPartialTicks;
 	private long lastSyncSysClock;
 	private long lastSyncHRClock;
 	private long field_74285_i;
 	private double timeSyncAdjustment = 1.0D;
 	
-	public Timer(float par1)
+	public Timer(float p_i1018_1_)
 	{
-		ticksPerSecond = par1;
+		ticksPerSecond = p_i1018_1_;
 		lastSyncSysClock = Minecraft.getSystemTime();
 		lastSyncHRClock = System.nanoTime() / 1000000L;
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/TimerTaskMcoServerListUpdate.java b/RMCClient/minecraft/net/minecraft/src/TimerTaskMcoServerListUpdate.java
deleted file mode 100644
index 2bcbe00..0000000
--- a/RMCClient/minecraft/net/minecraft/src/TimerTaskMcoServerListUpdate.java
+++ /dev/null
@@ -1,52 +0,0 @@
-package net.minecraft.src;
-
-import java.io.IOException;
-import java.util.Collections;
-import java.util.List;
-import java.util.TimerTask;
-
-class TimerTaskMcoServerListUpdate extends TimerTask
-{
-	McoClient field_98262_a;
-	final McoServerList field_98261_b;
-	
-	private TimerTaskMcoServerListUpdate(McoServerList par1)
-	{
-		field_98261_b = par1;
-		field_98262_a = new McoClient(McoServerList.func_100014_a(field_98261_b));
-	}
-	
-	TimerTaskMcoServerListUpdate(McoServerList par1, McoServerListINNER1 par2)
-	{
-		this(par1);
-	}
-	
-	private void func_101018_a(List par1List)
-	{
-		Collections.sort(par1List, new TimerTaskMcoServerListUpdateComparator(this, McoServerList.func_100014_a(field_98261_b).username, (McoServerListINNER1) null));
-	}
-	
-	private void func_98260_a()
-	{
-		try
-		{
-			List var1 = field_98262_a.func_96382_a().field_96430_d;
-			func_101018_a(var1);
-			McoServerList.func_98247_a(field_98261_b, var1);
-		} catch(ExceptionMcoService var2)
-		{
-			;
-		} catch(IOException var3)
-		{
-			System.err.println(var3);
-		}
-	}
-	
-	@Override public void run()
-	{
-		if(!McoServerList.func_98249_b(field_98261_b))
-		{
-			func_98260_a();
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/TimerTaskMcoServerListUpdateComparator.java b/RMCClient/minecraft/net/minecraft/src/TimerTaskMcoServerListUpdateComparator.java
deleted file mode 100644
index 1b9e91a..0000000
--- a/RMCClient/minecraft/net/minecraft/src/TimerTaskMcoServerListUpdateComparator.java
+++ /dev/null
@@ -1,41 +0,0 @@
-package net.minecraft.src;
-
-import java.util.Comparator;
-
-class TimerTaskMcoServerListUpdateComparator implements Comparator
-{
-	private final String field_102024_b;
-	final TimerTaskMcoServerListUpdate field_102025_a;
-	
-	private TimerTaskMcoServerListUpdateComparator(TimerTaskMcoServerListUpdate par1TimerTaskMcoServerListUpdate, String par2Str)
-	{
-		field_102025_a = par1TimerTaskMcoServerListUpdate;
-		field_102024_b = par2Str;
-	}
-	
-	TimerTaskMcoServerListUpdateComparator(TimerTaskMcoServerListUpdate par1TimerTaskMcoServerListUpdate, String par2Str, McoServerListINNER1 par3McoServerListINNER1)
-	{
-		this(par1TimerTaskMcoServerListUpdate, par2Str);
-	}
-	
-	@Override public int compare(Object par1Obj, Object par2Obj)
-	{
-		return func_102023_a((McoServer) par1Obj, (McoServer) par2Obj);
-	}
-	
-	public int func_102023_a(McoServer par1McoServer, McoServer par2McoServer)
-	{
-		if(par1McoServer.field_96405_e.equals(par2McoServer.field_96405_e)) return par1McoServer.field_96408_a < par2McoServer.field_96408_a ? 1 : par1McoServer.field_96408_a > par2McoServer.field_96408_a ? -1 : 0;
-		else if(par1McoServer.field_96405_e.equals(field_102024_b)) return -1;
-		else if(par2McoServer.field_96405_e.equals(field_102024_b)) return 1;
-		else
-		{
-			if(par1McoServer.field_96404_d.equals("CLOSED") || par2McoServer.field_96404_d.equals("CLOSED"))
-			{
-				if(par1McoServer.field_96404_d.equals("CLOSED")) return 1;
-				if(par2McoServer.field_96404_d.equals("CLOSED")) return 0;
-			}
-			return par1McoServer.field_96408_a < par2McoServer.field_96408_a ? 1 : par1McoServer.field_96408_a > par2McoServer.field_96408_a ? -1 : 0;
-		}
-	}
-}
diff --git a/RMCClient/minecraft/net/minecraft/src/Tuple.java b/RMCClient/minecraft/net/minecraft/src/Tuple.java
index de350a8..2a57cff 100644
--- a/RMCClient/minecraft/net/minecraft/src/Tuple.java
+++ b/RMCClient/minecraft/net/minecraft/src/Tuple.java
@@ -5,10 +5,10 @@
 	private Object first;
 	private Object second;
 	
-	public Tuple(Object par1Obj, Object par2Obj)
+	public Tuple(Object p_i1555_1_, Object p_i1555_2_)
 	{
-		first = par1Obj;
-		second = par2Obj;
+		first = p_i1555_1_;
+		second = p_i1555_2_;
 	}
 	
 	public Object getFirst()
diff --git a/RMCClient/minecraft/net/minecraft/src/Util.java b/RMCClient/minecraft/net/minecraft/src/Util.java
new file mode 100644
index 0000000..8ae6c0d
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/Util.java
@@ -0,0 +1,10 @@
+package net.minecraft.src;
+
+public class Util
+{
+	public static EnumOS func_110647_a()
+	{
+		String var0 = System.getProperty("os.name").toLowerCase();
+		return var0.contains("win") ? EnumOS.WINDOWS : var0.contains("mac") ? EnumOS.MACOS : var0.contains("solaris") ? EnumOS.SOLARIS : var0.contains("sunos") ? EnumOS.SOLARIS : var0.contains("linux") ? EnumOS.LINUX : var0.contains("unix") ? EnumOS.LINUX : EnumOS.UNKNOWN;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/Vec3.java b/RMCClient/minecraft/net/minecraft/src/Vec3.java
index b621d4e..18abd11 100644
--- a/RMCClient/minecraft/net/minecraft/src/Vec3.java
+++ b/RMCClient/minecraft/net/minecraft/src/Vec3.java
@@ -8,24 +8,24 @@
 	public double yCoord;
 	public double zCoord;
 	
-	protected Vec3(Vec3Pool par1Vec3Pool, double par2, double par4, double par6)
+	protected Vec3(Vec3Pool p_i2305_1_, double p_i2305_2_, double p_i2305_4_, double p_i2305_6_)
 	{
-		if(par2 == -0.0D)
+		if(p_i2305_2_ == -0.0D)
 		{
-			par2 = 0.0D;
+			p_i2305_2_ = 0.0D;
 		}
-		if(par4 == -0.0D)
+		if(p_i2305_4_ == -0.0D)
 		{
-			par4 = 0.0D;
+			p_i2305_4_ = 0.0D;
 		}
-		if(par6 == -0.0D)
+		if(p_i2305_6_ == -0.0D)
 		{
-			par6 = 0.0D;
+			p_i2305_6_ = 0.0D;
 		}
-		xCoord = par2;
-		yCoord = par4;
-		zCoord = par6;
-		myVec3LocalPool = par1Vec3Pool;
+		xCoord = p_i2305_2_;
+		yCoord = p_i2305_4_;
+		zCoord = p_i2305_6_;
+		myVec3LocalPool = p_i2305_1_;
 	}
 	
 	public Vec3 addVector(double par1, double par3, double par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/Vec3Pool.java b/RMCClient/minecraft/net/minecraft/src/Vec3Pool.java
index 3112539..3fa6679 100644
--- a/RMCClient/minecraft/net/minecraft/src/Vec3Pool.java
+++ b/RMCClient/minecraft/net/minecraft/src/Vec3Pool.java
@@ -8,14 +8,14 @@
 	private final int truncateArrayResetThreshold;
 	private final int minimumSize;
 	private final List vec3Cache = new ArrayList();
-	private int nextFreeSpace = 0;
-	private int maximumSizeSinceLastTruncation = 0;
-	private int resetCount = 0;
+	private int nextFreeSpace;
+	private int maximumSizeSinceLastTruncation;
+	private int resetCount;
 	
-	public Vec3Pool(int par1, int par2)
+	public Vec3Pool(int p_i2306_1_, int p_i2306_2_)
 	{
-		truncateArrayResetThreshold = par1;
-		minimumSize = par2;
+		truncateArrayResetThreshold = p_i2306_1_;
+		minimumSize = p_i2306_2_;
 	}
 	
 	public void clear()
diff --git a/RMCClient/minecraft/net/minecraft/src/Village.java b/RMCClient/minecraft/net/minecraft/src/Village.java
index ac29f19..a056d74 100644
--- a/RMCClient/minecraft/net/minecraft/src/Village.java
+++ b/RMCClient/minecraft/net/minecraft/src/Village.java
@@ -11,25 +11,25 @@
 	private final List villageDoorInfoList = new ArrayList();
 	private final ChunkCoordinates centerHelper = new ChunkCoordinates(0, 0, 0);
 	private final ChunkCoordinates center = new ChunkCoordinates(0, 0, 0);
-	private int villageRadius = 0;
-	private int lastAddDoorTimestamp = 0;
-	private int tickCounter = 0;
-	private int numVillagers = 0;
+	private int villageRadius;
+	private int lastAddDoorTimestamp;
+	private int tickCounter;
+	private int numVillagers;
 	private int noBreedTicks;
 	private TreeMap playerReputation = new TreeMap();
 	private List villageAgressors = new ArrayList();
-	private int numIronGolems = 0;
+	private int numIronGolems;
 	
 	public Village()
 	{
 	}
 	
-	public Village(World par1World)
+	public Village(World p_i1675_1_)
 	{
-		worldObj = par1World;
+		worldObj = p_i1675_1_;
 	}
 	
-	public void addOrRenewAgressor(EntityLiving par1EntityLiving)
+	public void addOrRenewAgressor(EntityLivingBase par1EntityLiving)
 	{
 		Iterator var2 = villageAgressors.iterator();
 		VillageAgressor var3;
@@ -103,7 +103,7 @@
 		return var4;
 	}
 	
-	public EntityLiving findNearestVillageAggressor(EntityLiving par1EntityLiving)
+	public EntityLivingBase findNearestVillageAggressor(EntityLivingBase par1EntityLiving)
 	{
 		double var2 = Double.MAX_VALUE;
 		VillageAgressor var4 = null;
@@ -130,7 +130,7 @@
 		}
 	}
 	
-	public EntityPlayer func_82685_c(EntityLiving par1EntityLiving)
+	public EntityPlayer func_82685_c(EntityLivingBase par1EntityLiving)
 	{
 		double var2 = Double.MAX_VALUE;
 		EntityPlayer var4 = null;
diff --git a/RMCClient/minecraft/net/minecraft/src/VillageAgressor.java b/RMCClient/minecraft/net/minecraft/src/VillageAgressor.java
index a69d369..2c5119f 100644
--- a/RMCClient/minecraft/net/minecraft/src/VillageAgressor.java
+++ b/RMCClient/minecraft/net/minecraft/src/VillageAgressor.java
@@ -2,14 +2,14 @@
 
 class VillageAgressor
 {
-	public EntityLiving agressor;
+	public EntityLivingBase agressor;
 	public int agressionTime;
 	final Village villageObj;
 	
-	VillageAgressor(Village par1Village, EntityLiving par2EntityLiving, int par3)
+	VillageAgressor(Village p_i1674_1_, EntityLivingBase p_i1674_2_, int p_i1674_3_)
 	{
-		villageObj = par1Village;
-		agressor = par2EntityLiving;
-		agressionTime = par3;
+		villageObj = p_i1674_1_;
+		agressor = p_i1674_2_;
+		agressionTime = p_i1674_3_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/VillageCollection.java b/RMCClient/minecraft/net/minecraft/src/VillageCollection.java
index 95dc0ac..a8dfabb 100644
--- a/RMCClient/minecraft/net/minecraft/src/VillageCollection.java
+++ b/RMCClient/minecraft/net/minecraft/src/VillageCollection.java
@@ -10,17 +10,17 @@
 	private final List villagerPositionsList = new ArrayList();
 	private final List newDoors = new ArrayList();
 	private final List villageList = new ArrayList();
-	private int tickCounter = 0;
+	private int tickCounter;
 	
-	public VillageCollection(String par1Str)
+	public VillageCollection(String p_i1677_1_)
 	{
-		super(par1Str);
+		super(p_i1677_1_);
 	}
 	
-	public VillageCollection(World par1World)
+	public VillageCollection(World p_i1678_1_)
 	{
 		super("villages");
-		worldObj = par1World;
+		worldObj = p_i1678_1_;
 		markDirty();
 	}
 	
@@ -167,7 +167,7 @@
 			float var9 = var8.getCenter().getDistanceSquared(par1, par2, par3);
 			if(var9 < var6)
 			{
-				int var10 = par4 + var8.getVillageRadius();
+				float var10 = par4 + var8.getVillageRadius();
 				if(var9 <= var10 * var10)
 				{
 					var5 = var8;
diff --git a/RMCClient/minecraft/net/minecraft/src/VillageDoorInfo.java b/RMCClient/minecraft/net/minecraft/src/VillageDoorInfo.java
index d15abcc..0c71cc0 100644
--- a/RMCClient/minecraft/net/minecraft/src/VillageDoorInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/VillageDoorInfo.java
@@ -8,17 +8,17 @@
 	public final int insideDirectionX;
 	public final int insideDirectionZ;
 	public int lastActivityTimestamp;
-	public boolean isDetachedFromVillageFlag = false;
-	private int doorOpeningRestrictionCounter = 0;
+	public boolean isDetachedFromVillageFlag;
+	private int doorOpeningRestrictionCounter;
 	
-	public VillageDoorInfo(int par1, int par2, int par3, int par4, int par5, int par6)
+	public VillageDoorInfo(int p_i1673_1_, int p_i1673_2_, int p_i1673_3_, int p_i1673_4_, int p_i1673_5_, int p_i1673_6_)
 	{
-		posX = par1;
-		posY = par2;
-		posZ = par3;
-		insideDirectionX = par4;
-		insideDirectionZ = par5;
-		lastActivityTimestamp = par6;
+		posX = p_i1673_1_;
+		posY = p_i1673_2_;
+		posZ = p_i1673_3_;
+		insideDirectionX = p_i1673_4_;
+		insideDirectionZ = p_i1673_5_;
+		lastActivityTimestamp = p_i1673_6_;
 	}
 	
 	public int getDistanceSquared(int par1, int par2, int par3)
diff --git a/RMCClient/minecraft/net/minecraft/src/VillageSiege.java b/RMCClient/minecraft/net/minecraft/src/VillageSiege.java
index 68e58c8..fcb67c3 100644
--- a/RMCClient/minecraft/net/minecraft/src/VillageSiege.java
+++ b/RMCClient/minecraft/net/minecraft/src/VillageSiege.java
@@ -6,7 +6,7 @@
 public class VillageSiege
 {
 	private World worldObj;
-	private boolean field_75535_b = false;
+	private boolean field_75535_b;
 	private int field_75536_c = -1;
 	private int field_75533_d;
 	private int field_75534_e;
@@ -15,9 +15,9 @@
 	private int field_75538_h;
 	private int field_75539_i;
 	
-	public VillageSiege(World par1World)
+	public VillageSiege(World p_i1676_1_)
 	{
-		worldObj = par1World;
+		worldObj = p_i1676_1_;
 	}
 	
 	private Vec3 func_75527_a(int par1, int par2, int par3)
@@ -98,7 +98,7 @@
 			try
 			{
 				var2 = new EntityZombie(worldObj);
-				var2.initCreature();
+				var2.func_110161_a((EntityLivingData) null);
 				var2.setVillager(false);
 			} catch(Exception var4)
 			{
@@ -108,7 +108,7 @@
 			var2.setLocationAndAngles(var1.xCoord, var1.yCoord, var1.zCoord, worldObj.rand.nextFloat() * 360.0F, 0.0F);
 			worldObj.spawnEntityInWorld(var2);
 			ChunkCoordinates var3 = theVillage.getCenter();
-			var2.setHomeArea(var3.posX, var3.posY, var3.posZ, theVillage.getVillageRadius());
+			var2.func_110171_b(var3.posX, var3.posY, var3.posZ, theVillage.getVillageRadius());
 			return true;
 		}
 	}
diff --git a/RMCClient/minecraft/net/minecraft/src/WatchableObject.java b/RMCClient/minecraft/net/minecraft/src/WatchableObject.java
index 838135e..fd9d03e 100644
--- a/RMCClient/minecraft/net/minecraft/src/WatchableObject.java
+++ b/RMCClient/minecraft/net/minecraft/src/WatchableObject.java
@@ -7,11 +7,11 @@
 	private Object watchedObject;
 	private boolean watched;
 	
-	public WatchableObject(int par1, int par2, Object par3Obj)
+	public WatchableObject(int p_i1603_1_, int p_i1603_2_, Object p_i1603_3_)
 	{
-		dataValueId = par2;
-		watchedObject = par3Obj;
-		objectType = par1;
+		dataValueId = p_i1603_2_;
+		watchedObject = p_i1603_3_;
+		objectType = p_i1603_1_;
 		watched = true;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/WeightedRandomChestContent.java b/RMCClient/minecraft/net/minecraft/src/WeightedRandomChestContent.java
index 730c6bb..56fb092 100644
--- a/RMCClient/minecraft/net/minecraft/src/WeightedRandomChestContent.java
+++ b/RMCClient/minecraft/net/minecraft/src/WeightedRandomChestContent.java
@@ -4,24 +4,24 @@
 
 public class WeightedRandomChestContent extends WeightedRandomItem
 {
-	private ItemStack theItemId = null;
+	private ItemStack theItemId;
 	private int theMinimumChanceToGenerateItem;
 	private int theMaximumChanceToGenerateItem;
 	
-	public WeightedRandomChestContent(int par1, int par2, int par3, int par4, int par5)
+	public WeightedRandomChestContent(int p_i1557_1_, int p_i1557_2_, int p_i1557_3_, int p_i1557_4_, int p_i1557_5_)
 	{
-		super(par5);
-		theItemId = new ItemStack(par1, 1, par2);
-		theMinimumChanceToGenerateItem = par3;
-		theMaximumChanceToGenerateItem = par4;
+		super(p_i1557_5_);
+		theItemId = new ItemStack(p_i1557_1_, 1, p_i1557_2_);
+		theMinimumChanceToGenerateItem = p_i1557_3_;
+		theMaximumChanceToGenerateItem = p_i1557_4_;
 	}
 	
-	public WeightedRandomChestContent(ItemStack par1ItemStack, int par2, int par3, int par4)
+	public WeightedRandomChestContent(ItemStack p_i1558_1_, int p_i1558_2_, int p_i1558_3_, int p_i1558_4_)
 	{
-		super(par4);
-		theItemId = par1ItemStack;
-		theMinimumChanceToGenerateItem = par2;
-		theMaximumChanceToGenerateItem = par3;
+		super(p_i1558_4_);
+		theItemId = p_i1558_1_;
+		theMinimumChanceToGenerateItem = p_i1558_2_;
+		theMaximumChanceToGenerateItem = p_i1558_3_;
 	}
 	
 	public static WeightedRandomChestContent[] func_92080_a(WeightedRandomChestContent[] par0ArrayOfWeightedRandomChestContent, WeightedRandomChestContent ... par1ArrayOfWeightedRandomChestContent)
diff --git a/RMCClient/minecraft/net/minecraft/src/WeightedRandomItem.java b/RMCClient/minecraft/net/minecraft/src/WeightedRandomItem.java
index ca8c0c0..0461ea6 100644
--- a/RMCClient/minecraft/net/minecraft/src/WeightedRandomItem.java
+++ b/RMCClient/minecraft/net/minecraft/src/WeightedRandomItem.java
@@ -4,8 +4,8 @@
 {
 	protected int itemWeight;
 	
-	public WeightedRandomItem(int par1)
+	public WeightedRandomItem(int p_i1556_1_)
 	{
-		itemWeight = par1;
+		itemWeight = p_i1556_1_;
 	}
 }
diff --git a/RMCClient/minecraft/net/minecraft/src/WeightedRandomMinecart.java b/RMCClient/minecraft/net/minecraft/src/WeightedRandomMinecart.java
index f836b1e..c5693d0 100644
--- a/RMCClient/minecraft/net/minecraft/src/WeightedRandomMinecart.java
+++ b/RMCClient/minecraft/net/minecraft/src/WeightedRandomMinecart.java
@@ -6,12 +6,12 @@
 	public final String minecartName;
 	final MobSpawnerBaseLogic field_98221_d;
 	
-	public WeightedRandomMinecart(MobSpawnerBaseLogic par1MobSpawnerBaseLogic, NBTTagCompound par2NBTTagCompound)
+	public WeightedRandomMinecart(MobSpawnerBaseLogic p_i1945_1_, NBTTagCompound p_i1945_2_)
 	{
-		super(par2NBTTagCompound.getInteger("Weight"));
-		field_98221_d = par1MobSpawnerBaseLogic;
-		NBTTagCompound var3 = par2NBTTagCompound.getCompoundTag("Properties");
-		String var4 = par2NBTTagCompound.getString("Type");
+		super(p_i1945_2_.getInteger("Weight"));
+		field_98221_d = p_i1945_1_;
+		NBTTagCompound var3 = p_i1945_2_.getCompoundTag("Properties");
+		String var4 = p_i1945_2_.getString("Type");
 		if(var4.equals("Minecart"))
 		{
 			if(var3 != null)
@@ -36,32 +36,32 @@
 		minecartName = var4;
 	}
 	
-	public WeightedRandomMinecart(MobSpawnerBaseLogic par1MobSpawnerBaseLogic, NBTTagCompound par2NBTTagCompound, String par3Str)
+	public WeightedRandomMinecart(MobSpawnerBaseLogic p_i1946_1_, NBTTagCompound p_i1946_2_, String p_i1946_3_)
 	{
 		super(1);
-		field_98221_d = par1MobSpawnerBaseLogic;
-		if(par3Str.equals("Minecart"))
+		field_98221_d = p_i1946_1_;
+		if(p_i1946_3_.equals("Minecart"))
 		{
-			if(par2NBTTagCompound != null)
+			if(p_i1946_2_ != null)
 			{
-				switch(par2NBTTagCompound.getInteger("Type"))
+				switch(p_i1946_2_.getInteger("Type"))
 				{
 					case 0:
-						par3Str = "MinecartRideable";
+						p_i1946_3_ = "MinecartRideable";
 						break;
 					case 1:
-						par3Str = "MinecartChest";
+						p_i1946_3_ = "MinecartChest";
 						break;
 					case 2:
-						par3Str = "MinecartFurnace";
+						p_i1946_3_ = "MinecartFurnace";
 				}
 			} else
 			{
-				par3Str = "MinecartRideable";
+				p_i1946_3_ = "MinecartRideable";
 			}
 		}
-		field_98222_b = par2NBTTagCompound;
-		minecartName = par3Str;
+		field_98222_b = p_i1946_2_;
+		minecartName = p_i1946_3_;
 	}
 	
 	public NBTTagCompound func_98220_a()
diff --git a/RMCClient/minecraft/net/minecraft/src/World.java b/RMCClient/minecraft/net/minecraft/src/World.java
index 49070c0..0d0d2b9 100644
--- a/RMCClient/minecraft/net/minecraft/src/World.java
+++ b/RMCClient/minecraft/net/minecraft/src/World.java
@@ -9,9 +9,11 @@
 import java.util.Random;
 import java.util.Set;
 
+import net.minecraft.server.MinecraftServer;
+
 public abstract class World implements IBlockAccess
 {
-	public boolean scheduledUpdatesAreImmediate = false;
+	public boolean scheduledUpdatesAreImmediate;
 	public List loadedEntityList = new ArrayList();
 	protected List unloadedEntityList = new ArrayList();
 	public List loadedTileEntityList = new ArrayList();
@@ -20,14 +22,14 @@
 	public List playerEntities = new ArrayList();
 	public List weatherEffects = new ArrayList();
 	private long cloudColour = 16777215L;
-	public int skylightSubtracted = 0;
+	public int skylightSubtracted;
 	protected int updateLCG = new Random().nextInt();
 	protected final int DIST_HASH_MAGIC = 1013904223;
 	protected float prevRainingStrength;
 	protected float rainingStrength;
 	protected float prevThunderingStrength;
 	protected float thunderingStrength;
-	public int lastLightningBolt = 0;
+	public int lastLightningBolt;
 	public int difficultySetting;
 	public Random rand = new Random();
 	public final WorldProvider provider;
@@ -53,17 +55,16 @@
 	int[] lightUpdateBlockList;
 	public boolean isRemote;
 	
-	public World(ISaveHandler par1ISaveHandler, String par2Str, WorldProvider par3WorldProvider, WorldSettings par4WorldSettings, Profiler par5Profiler, ILogAgent par6ILogAgent)
+	public World(ISaveHandler p_i1953_1_, String p_i1953_2_, WorldProvider p_i1953_3_, WorldSettings p_i1953_4_, Profiler p_i1953_5_, ILogAgent p_i1953_6_)
 	{
 		ambientTickCountdown = rand.nextInt(12000);
 		lightUpdateBlockList = new int[32768];
-		isRemote = false;
-		saveHandler = par1ISaveHandler;
-		theProfiler = par5Profiler;
-		worldInfo = new WorldInfo(par4WorldSettings, par2Str);
-		provider = par3WorldProvider;
-		mapStorage = new MapStorage(par1ISaveHandler);
-		worldLogAgent = par6ILogAgent;
+		saveHandler = p_i1953_1_;
+		theProfiler = p_i1953_5_;
+		worldInfo = new WorldInfo(p_i1953_4_, p_i1953_2_);
+		provider = p_i1953_3_;
+		mapStorage = new MapStorage(p_i1953_1_);
+		worldLogAgent = p_i1953_6_;
 		VillageCollection var7 = (VillageCollection) mapStorage.loadData(VillageCollection.class, "villages");
 		if(var7 == null)
 		{
@@ -74,25 +75,24 @@
 			villageCollectionObj = var7;
 			villageCollectionObj.func_82566_a(this);
 		}
-		par3WorldProvider.registerWorld(this);
+		p_i1953_3_.registerWorld(this);
 		chunkProvider = createChunkProvider();
 		calculateInitialSkylight();
 		calculateInitialWeather();
 	}
 	
-	public World(ISaveHandler par1ISaveHandler, String par2Str, WorldSettings par3WorldSettings, WorldProvider par4WorldProvider, Profiler par5Profiler, ILogAgent par6ILogAgent)
+	public World(ISaveHandler p_i1954_1_, String p_i1954_2_, WorldSettings p_i1954_3_, WorldProvider p_i1954_4_, Profiler p_i1954_5_, ILogAgent p_i1954_6_)
 	{
 		ambientTickCountdown = rand.nextInt(12000);
 		lightUpdateBlockList = new int[32768];
-		isRemote = false;
-		saveHandler = par1ISaveHandler;
-		theProfiler = par5Profiler;
-		mapStorage = new MapStorage(par1ISaveHandler);
-		worldLogAgent = par6ILogAgent;
-		worldInfo = par1ISaveHandler.loadWorldInfo();
-		if(par4WorldProvider != null)
+		saveHandler = p_i1954_1_;
+		theProfiler = p_i1954_5_;
+		mapStorage = new MapStorage(p_i1954_1_);
+		worldLogAgent = p_i1954_6_;
+		worldInfo = p_i1954_1_.loadWorldInfo();
+		if(p_i1954_4_ != null)
 		{
-			provider = par4WorldProvider;
+			provider = p_i1954_4_;
 		} else if(worldInfo != null && worldInfo.getDimension() != 0)
 		{
 			provider = WorldProvider.getProviderForDimension(worldInfo.getDimension());
@@ -102,10 +102,10 @@
 		}
 		if(worldInfo == null)
 		{
-			worldInfo = new WorldInfo(par3WorldSettings, par2Str);
+			worldInfo = new WorldInfo(p_i1954_3_, p_i1954_2_);
 		} else
 		{
-			worldInfo.setWorldName(par2Str);
+			worldInfo.setWorldName(p_i1954_2_);
 		}
 		provider.registerWorld(this);
 		chunkProvider = createChunkProvider();
@@ -113,7 +113,7 @@
 		{
 			try
 			{
-				initialize(par3WorldSettings);
+				initialize(p_i1954_3_);
 			} catch(Throwable var11)
 			{
 				CrashReport var8 = CrashReport.makeCrashReport(var11, "Exception initializing level");
@@ -586,6 +586,33 @@
 			}
 		}
 		return var5;
+	}
+	
+	public float func_110746_b(double p_110746_1_, double p_110746_3_, double p_110746_5_)
+	{
+		return func_110750_I(MathHelper.floor_double(p_110746_1_), MathHelper.floor_double(p_110746_3_), MathHelper.floor_double(p_110746_5_));
+	}
+	
+	public float func_110750_I(int p_110750_1_, int p_110750_2_, int p_110750_3_)
+	{
+		float var4 = 0.0F;
+		boolean var5 = difficultySetting == 3;
+		if(blockExists(p_110750_1_, p_110750_2_, p_110750_3_))
+		{
+			float var6 = func_130001_d();
+			var4 += MathHelper.clamp_float(getChunkFromBlockCoords(p_110750_1_, p_110750_3_).field_111204_q / 3600000.0F, 0.0F, 1.0F) * (var5 ? 1.0F : 0.75F);
+			var4 += var6 * 0.25F;
+		}
+		if(difficultySetting < 2)
+		{
+			var4 *= difficultySetting / 2.0F;
+		}
+		return MathHelper.clamp_float(var4, 0.0F, var5 ? 1.5F : 1.0F);
+	}
+	
+	public float func_130001_d()
+	{
+		return WorldProvider.field_111203_a[provider.getMoonPhase(worldInfo.getWorldTime())];
 	}
 	
 	public IUpdatePlayerListBox func_82735_a(EntityMinecart par1EntityMinecart)
@@ -1097,7 +1124,7 @@
 	{
 		if(getTotalWorldTime() % 600L == 0L)
 		{
-			theCalendar.setTimeInMillis(System.currentTimeMillis());
+			theCalendar.setTimeInMillis(MinecraftServer.func_130071_aq());
 		}
 		return theCalendar;
 	}
@@ -1284,7 +1311,7 @@
 	{
 		for(int var2 = 0; var2 < playerEntities.size(); ++var2)
 		{
-			if(par1Str.equals(((EntityPlayer) playerEntities.get(var2)).username)) return (EntityPlayer) playerEntities.get(var2);
+			if(par1Str.equals(((EntityPlayer) playerEntities.get(var2)).getCommandSenderName())) return (EntityPlayer) playerEntities.get(var2);
 		}
 		return null;
 	}
@@ -2791,12 +2818,12 @@
 			par1Entity.prevRotationPitch = par1Entity.rotationPitch;
 			if(par2 && par1Entity.addedToChunk)
 			{
+				++par1Entity.ticksExisted;
 				if(par1Entity.ridingEntity != null)
 				{
 					par1Entity.updateRidden();
 				} else
 				{
-					++par1Entity.ticksExisted;
 					par1Entity.onUpdate();
 				}
 			}
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldChunkManager.java b/RMCClient/minecraft/net/minecraft/src/WorldChunkManager.java
index f6d2171..62313a9 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldChunkManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldChunkManager.java
@@ -24,17 +24,17 @@
 		biomesToSpawnIn.add(BiomeGenBase.jungleHills);
 	}
 	
-	public WorldChunkManager(long par1, WorldType par3WorldType)
+	public WorldChunkManager(long p_i1975_1_, WorldType p_i1975_3_)
 	{
 		this();
-		GenLayer[] var4 = GenLayer.initializeAllBiomeGenerators(par1, par3WorldType);
+		GenLayer[] var4 = GenLayer.initializeAllBiomeGenerators(p_i1975_1_, p_i1975_3_);
 		genBiomes = var4[0];
 		biomeIndexLayer = var4[1];
 	}
 	
-	public WorldChunkManager(World par1World)
+	public WorldChunkManager(World p_i1976_1_)
 	{
-		this(par1World.getSeed(), par1World.getWorldInfo().getTerrainType());
+		this(p_i1976_1_.getSeed(), p_i1976_1_.getWorldInfo().getTerrainType());
 	}
 	
 	public boolean areBiomesViable(int par1, int par2, int par3, List par4List)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldChunkManagerHell.java b/RMCClient/minecraft/net/minecraft/src/WorldChunkManagerHell.java
index a84efa1..a545e13 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldChunkManagerHell.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldChunkManagerHell.java
@@ -10,11 +10,11 @@
 	private float hellTemperature;
 	private float rainfall;
 	
-	public WorldChunkManagerHell(BiomeGenBase par1BiomeGenBase, float par2, float par3)
+	public WorldChunkManagerHell(BiomeGenBase p_i1979_1_, float p_i1979_2_, float p_i1979_3_)
 	{
-		biomeGenerator = par1BiomeGenBase;
-		hellTemperature = par2;
-		rainfall = par3;
+		biomeGenerator = p_i1979_1_;
+		hellTemperature = p_i1979_2_;
+		rainfall = p_i1979_3_;
 	}
 	
 	@Override public boolean areBiomesViable(int par1, int par2, int par3, List par4List)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldClient.java b/RMCClient/minecraft/net/minecraft/src/WorldClient.java
index 144b7d2..2e7c1d9 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldClient.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldClient.java
@@ -17,13 +17,13 @@
 	private final Minecraft mc = Minecraft.getMinecraft();
 	private final Set previousActiveChunkSet = new HashSet();
 	
-	public WorldClient(NetClientHandler par1NetClientHandler, WorldSettings par2WorldSettings, int par3, int par4, Profiler par5Profiler, ILogAgent par6ILogAgent)
+	public WorldClient(NetClientHandler p_i1188_1_, WorldSettings p_i1188_2_, int p_i1188_3_, int p_i1188_4_, Profiler p_i1188_5_, ILogAgent p_i1188_6_)
 	{
-		super(new SaveHandlerMP(), "MpServer", WorldProvider.getProviderForDimension(par3), par2WorldSettings, par5Profiler, par6ILogAgent);
-		sendQueue = par1NetClientHandler;
-		difficultySetting = par4;
+		super(new SaveHandlerMP(), "MpServer", WorldProvider.getProviderForDimension(p_i1188_3_), p_i1188_2_, p_i1188_5_, p_i1188_6_);
+		sendQueue = p_i1188_1_;
+		difficultySetting = p_i1188_4_;
 		this.setSpawnLocation(8, 64, 8);
-		mapStorage = par1NetClientHandler.mapStorage;
+		mapStorage = p_i1188_1_.mapStorage;
 	}
 	
 	public void addEntityToWorld(int par1, Entity par2Entity)
@@ -47,6 +47,8 @@
 		CrashReportCategory var2 = super.addWorldInfoToCrashReport(par1CrashReport);
 		var2.addCrashSectionCallable("Forced entities", new CallableMPL1(this));
 		var2.addCrashSectionCallable("Retry entities", new CallableMPL2(this));
+		var2.addCrashSectionCallable("Server brand", new WorldClientINNER3(this));
+		var2.addCrashSectionCallable("Server type", new WorldClientINNER4(this));
 		return var2;
 	}
 	
@@ -236,6 +238,19 @@
 		return super.setBlock(par1, par2, par3, par4, par5, 3);
 	}
 	
+	@Override public void setWorldTime(long par1)
+	{
+		if(par1 < 0L)
+		{
+			par1 = -par1;
+			getGameRules().setOrCreateGameRule("doDaylightCycle", "false");
+		} else
+		{
+			getGameRules().setOrCreateGameRule("doDaylightCycle", "true");
+		}
+		super.setWorldTime(par1);
+	}
+	
 	@Override public boolean spawnEntityInWorld(Entity par1Entity)
 	{
 		boolean var2 = super.spawnEntityInWorld(par1Entity);
@@ -251,7 +266,10 @@
 	{
 		super.tick();
 		func_82738_a(getTotalWorldTime() + 1L);
-		setWorldTime(getWorldTime() + 1L);
+		if(getGameRules().getGameRuleBooleanValue("doDaylightCycle"))
+		{
+			setWorldTime(getWorldTime() + 1L);
+		}
 		theProfiler.startSection("reEntryProcessing");
 		for(int var1 = 0; var1 < 10 && !entitySpawnQueue.isEmpty(); ++var1)
 		{
@@ -338,6 +356,11 @@
 		}
 	}
 	
+	static Minecraft func_142030_c(WorldClient p_142030_0_)
+	{
+		return p_142030_0_.mc;
+	}
+	
 	static Set getEntityList(WorldClient par0WorldClient)
 	{
 		return par0WorldClient.entityList;
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldClientINNER3.java b/RMCClient/minecraft/net/minecraft/src/WorldClientINNER3.java
new file mode 100644
index 0000000..2ffa00d
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/WorldClientINNER3.java
@@ -0,0 +1,23 @@
+package net.minecraft.src;
+
+import java.util.concurrent.Callable;
+
+class WorldClientINNER3 implements Callable
+{
+	final WorldClient field_142027_a;
+	
+	WorldClientINNER3(WorldClient p_i2342_1_)
+	{
+		field_142027_a = p_i2342_1_;
+	}
+	
+	@Override public Object call()
+	{
+		return func_142026_a();
+	}
+	
+	public String func_142026_a()
+	{
+		return WorldClient.func_142030_c(field_142027_a).thePlayer.func_142021_k();
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldClientINNER4.java b/RMCClient/minecraft/net/minecraft/src/WorldClientINNER4.java
new file mode 100644
index 0000000..4caa0ed
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/WorldClientINNER4.java
@@ -0,0 +1,23 @@
+package net.minecraft.src;
+
+import java.util.concurrent.Callable;
+
+class WorldClientINNER4 implements Callable
+{
+	final WorldClient field_142029_a;
+	
+	WorldClientINNER4(WorldClient p_i2343_1_)
+	{
+		field_142029_a = p_i2343_1_;
+	}
+	
+	@Override public Object call()
+	{
+		return func_142028_a();
+	}
+	
+	public String func_142028_a()
+	{
+		return WorldClient.func_142030_c(field_142029_a).getIntegratedServer() == null ? "Non-integrated multiplayer server" : "Integrated singleplayer server";
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenBigMushroom.java b/RMCClient/minecraft/net/minecraft/src/WorldGenBigMushroom.java
index 7188073..20c7238 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenBigMushroom.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenBigMushroom.java
@@ -11,10 +11,10 @@
 		super(false);
 	}
 	
-	public WorldGenBigMushroom(int par1)
+	public WorldGenBigMushroom(int p_i2017_1_)
 	{
 		super(true);
-		mushroomType = par1;
+		mushroomType = p_i2017_1_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenBigTree.java b/RMCClient/minecraft/net/minecraft/src/WorldGenBigTree.java
index 42aa3d7..15554ae 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenBigTree.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenBigTree.java
@@ -8,7 +8,7 @@
 	Random rand = new Random();
 	World worldObj;
 	int[] basePos = new int[] { 0, 0, 0 };
-	int heightLimit = 0;
+	int heightLimit;
 	int height;
 	double heightAttenuation = 0.618D;
 	double branchDensity = 1.0D;
@@ -20,9 +20,9 @@
 	int leafDistanceLimit = 4;
 	int[][] leafNodes;
 	
-	public WorldGenBigTree(boolean par1)
+	public WorldGenBigTree(boolean p_i2008_1_)
 	{
-		super(par1);
+		super(p_i2008_1_);
 	}
 	
 	int checkBlockLine(int[] par1ArrayOfInteger, int[] par2ArrayOfInteger)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenClay.java b/RMCClient/minecraft/net/minecraft/src/WorldGenClay.java
index 0d520e9..537c548 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenClay.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenClay.java
@@ -7,10 +7,10 @@
 	private int clayBlockId;
 	private int numberOfBlocks;
 	
-	public WorldGenClay(int par1)
+	public WorldGenClay(int p_i2011_1_)
 	{
 		clayBlockId = Block.blockClay.blockID;
-		numberOfBlocks = par1;
+		numberOfBlocks = p_i2011_1_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenDeadBush.java b/RMCClient/minecraft/net/minecraft/src/WorldGenDeadBush.java
index 28e034d..6f3cd83 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenDeadBush.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenDeadBush.java
@@ -6,9 +6,9 @@
 {
 	private int deadBushID;
 	
-	public WorldGenDeadBush(int par1)
+	public WorldGenDeadBush(int p_i2012_1_)
 	{
-		deadBushID = par1;
+		deadBushID = p_i2012_1_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenDungeons.java b/RMCClient/minecraft/net/minecraft/src/WorldGenDungeons.java
index 363b228..b9b0e98 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenDungeons.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenDungeons.java
@@ -4,6 +4,8 @@
 
 public class WorldGenDungeons extends WorldGenerator
 {
+	private static final WeightedRandomChestContent[] field_111189_a = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.saddle.itemID, 0, 1, 1, 10), new WeightedRandomChestContent(Item.ingotIron.itemID, 0, 1, 4, 10), new WeightedRandomChestContent(Item.bread.itemID, 0, 1, 1, 10), new WeightedRandomChestContent(Item.wheat.itemID, 0, 1, 4, 10), new WeightedRandomChestContent(Item.gunpowder.itemID, 0, 1, 4, 10), new WeightedRandomChestContent(Item.silk.itemID, 0, 1, 4, 10), new WeightedRandomChestContent(Item.bucketEmpty.itemID, 0, 1, 1, 10), new WeightedRandomChestContent(Item.appleGold.itemID, 0, 1, 1, 1), new WeightedRandomChestContent(Item.redstone.itemID, 0, 1, 4, 10), new WeightedRandomChestContent(Item.record13.itemID, 0, 1, 1, 10), new WeightedRandomChestContent(Item.recordCat.itemID, 0, 1, 1, 10), new WeightedRandomChestContent(Item.field_111212_ci.itemID, 0, 1, 1, 10), new WeightedRandomChestContent(Item.field_111216_cf.itemID, 0, 1, 1, 2), new WeightedRandomChestContent(Item.field_111215_ce.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.field_111213_cg.itemID, 0, 1, 1, 1) };
+	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
 	{
 		byte var6 = 3;
@@ -64,7 +66,7 @@
 				{
 					if(var11 < 3)
 					{
-						label210:
+						label101:
 						{
 							var12 = par3 + par2Random.nextInt(var7 * 2 + 1) - var7;
 							int var14 = par5 + par2Random.nextInt(var8 * 2 + 1) - var8;
@@ -90,19 +92,13 @@
 								if(var15 == 1)
 								{
 									par1World.setBlock(var12, par4, var14, Block.chest.blockID, 0, 2);
-									TileEntityChest var16 = (TileEntityChest) par1World.getBlockTileEntity(var12, par4, var14);
-									if(var16 != null)
+									WeightedRandomChestContent[] var16 = WeightedRandomChestContent.func_92080_a(field_111189_a, new WeightedRandomChestContent[] { Item.enchantedBook.func_92114_b(par2Random) });
+									TileEntityChest var17 = (TileEntityChest) par1World.getBlockTileEntity(var12, par4, var14);
+									if(var17 != null)
 									{
-										for(int var17 = 0; var17 < 8; ++var17)
-										{
-											ItemStack var18 = pickCheckLootItem(par2Random);
-											if(var18 != null)
-											{
-												var16.setInventorySlotContents(par2Random.nextInt(var16.getSizeInventory()), var18);
-											}
-										}
+										WeightedRandomChestContent.generateChestContents(par2Random, var16, var17, 8);
 									}
-									break label210;
+									break label101;
 								}
 							}
 							++var11;
@@ -114,22 +110,16 @@
 				}
 			}
 			par1World.setBlock(par3, par4, par5, Block.mobSpawner.blockID, 0, 2);
-			TileEntityMobSpawner var19 = (TileEntityMobSpawner) par1World.getBlockTileEntity(par3, par4, par5);
-			if(var19 != null)
+			TileEntityMobSpawner var18 = (TileEntityMobSpawner) par1World.getBlockTileEntity(par3, par4, par5);
+			if(var18 != null)
 			{
-				var19.func_98049_a().setMobID(pickMobSpawner(par2Random));
+				var18.func_98049_a().setMobID(pickMobSpawner(par2Random));
 			} else
 			{
 				System.err.println("Failed to fetch mob spawner entity at (" + par3 + ", " + par4 + ", " + par5 + ")");
 			}
 			return true;
 		} else return false;
-	}
-	
-	private ItemStack pickCheckLootItem(Random par1Random)
-	{
-		int var2 = par1Random.nextInt(12);
-		return var2 == 0 ? new ItemStack(Item.saddle) : var2 == 1 ? new ItemStack(Item.ingotIron, par1Random.nextInt(4) + 1) : var2 == 2 ? new ItemStack(Item.bread) : var2 == 3 ? new ItemStack(Item.wheat, par1Random.nextInt(4) + 1) : var2 == 4 ? new ItemStack(Item.gunpowder, par1Random.nextInt(4) + 1) : var2 == 5 ? new ItemStack(Item.silk, par1Random.nextInt(4) + 1) : var2 == 6 ? new ItemStack(Item.bucketEmpty) : var2 == 7 && par1Random.nextInt(100) == 0 ? new ItemStack(Item.appleGold) : var2 == 8 && par1Random.nextInt(2) == 0 ? new ItemStack(Item.redstone, par1Random.nextInt(4) + 1) : var2 == 9 && par1Random.nextInt(10) == 0 ? new ItemStack(Item.itemsList[Item.record13.itemID + par1Random.nextInt(2)]) : var2 == 10 ? new ItemStack(Item.dyePowder, 1, 3) : var2 == 11 ? Item.enchantedBook.func_92109_a(par1Random) : null;
 	}
 	
 	private String pickMobSpawner(Random par1Random)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenFlowers.java b/RMCClient/minecraft/net/minecraft/src/WorldGenFlowers.java
index f9d9f46..edec20b 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenFlowers.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenFlowers.java
@@ -6,9 +6,9 @@
 {
 	private int plantBlockId;
 	
-	public WorldGenFlowers(int par1)
+	public WorldGenFlowers(int p_i2014_1_)
 	{
-		plantBlockId = par1;
+		plantBlockId = p_i2014_1_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenForest.java b/RMCClient/minecraft/net/minecraft/src/WorldGenForest.java
index ac0335c..52a610d 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenForest.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenForest.java
@@ -4,9 +4,9 @@
 
 public class WorldGenForest extends WorldGenerator
 {
-	public WorldGenForest(boolean par1)
+	public WorldGenForest(boolean p_i2009_1_)
 	{
-		super(par1);
+		super(p_i2009_1_);
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenHellLava.java b/RMCClient/minecraft/net/minecraft/src/WorldGenHellLava.java
index 4c18476..6eba27b 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenHellLava.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenHellLava.java
@@ -5,12 +5,12 @@
 public class WorldGenHellLava extends WorldGenerator
 {
 	private int hellLavaID;
-	private boolean field_94524_b = false;
+	private boolean field_94524_b;
 	
-	public WorldGenHellLava(int par1, boolean par2)
+	public WorldGenHellLava(int p_i2016_1_, boolean p_i2016_2_)
 	{
-		hellLavaID = par1;
-		field_94524_b = par2;
+		hellLavaID = p_i2016_1_;
+		field_94524_b = p_i2016_2_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenHugeTrees.java b/RMCClient/minecraft/net/minecraft/src/WorldGenHugeTrees.java
index 9393f98..fafc566 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenHugeTrees.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenHugeTrees.java
@@ -8,12 +8,12 @@
 	private final int woodMetadata;
 	private final int leavesMetadata;
 	
-	public WorldGenHugeTrees(boolean par1, int par2, int par3, int par4)
+	public WorldGenHugeTrees(boolean p_i2019_1_, int p_i2019_2_, int p_i2019_3_, int p_i2019_4_)
 	{
-		super(par1);
-		baseHeight = par2;
-		woodMetadata = par3;
-		leavesMetadata = par4;
+		super(p_i2019_1_);
+		baseHeight = p_i2019_2_;
+		woodMetadata = p_i2019_3_;
+		leavesMetadata = p_i2019_4_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenLakes.java b/RMCClient/minecraft/net/minecraft/src/WorldGenLakes.java
index ea9f68e..600e587 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenLakes.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenLakes.java
@@ -6,9 +6,9 @@
 {
 	private int blockIndex;
 	
-	public WorldGenLakes(int par1)
+	public WorldGenLakes(int p_i2018_1_)
 	{
-		blockIndex = par1;
+		blockIndex = p_i2018_1_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenLiquids.java b/RMCClient/minecraft/net/minecraft/src/WorldGenLiquids.java
index e573b27..2a4636d 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenLiquids.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenLiquids.java
@@ -6,9 +6,9 @@
 {
 	private int liquidBlockId;
 	
-	public WorldGenLiquids(int par1)
+	public WorldGenLiquids(int p_i2024_1_)
 	{
-		liquidBlockId = par1;
+		liquidBlockId = p_i2024_1_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenMinable.java b/RMCClient/minecraft/net/minecraft/src/WorldGenMinable.java
index 3d563b8..fc9f8d4 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenMinable.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenMinable.java
@@ -8,16 +8,16 @@
 	private int numberOfBlocks;
 	private int field_94523_c;
 	
-	public WorldGenMinable(int par1, int par2)
+	public WorldGenMinable(int p_i2020_1_, int p_i2020_2_)
 	{
-		this(par1, par2, Block.stone.blockID);
+		this(p_i2020_1_, p_i2020_2_, Block.stone.blockID);
 	}
 	
-	public WorldGenMinable(int par1, int par2, int par3)
+	public WorldGenMinable(int p_i2021_1_, int p_i2021_2_, int p_i2021_3_)
 	{
-		minableBlockId = par1;
-		numberOfBlocks = par2;
-		field_94523_c = par3;
+		minableBlockId = p_i2021_1_;
+		numberOfBlocks = p_i2021_2_;
+		field_94523_c = p_i2021_3_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenSand.java b/RMCClient/minecraft/net/minecraft/src/WorldGenSand.java
index fa9fdbb..ad5e02c 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenSand.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenSand.java
@@ -7,10 +7,10 @@
 	private int sandID;
 	private int radius;
 	
-	public WorldGenSand(int par1, int par2)
+	public WorldGenSand(int p_i2022_1_, int p_i2022_2_)
 	{
-		sandID = par2;
-		radius = par1;
+		sandID = p_i2022_2_;
+		radius = p_i2022_1_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenShrub.java b/RMCClient/minecraft/net/minecraft/src/WorldGenShrub.java
index 6b833d1..93c5f02 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenShrub.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenShrub.java
@@ -7,10 +7,10 @@
 	private int field_76527_a;
 	private int field_76526_b;
 	
-	public WorldGenShrub(int par1, int par2)
+	public WorldGenShrub(int p_i2015_1_, int p_i2015_2_)
 	{
-		field_76526_b = par1;
-		field_76527_a = par2;
+		field_76526_b = p_i2015_1_;
+		field_76527_a = p_i2015_2_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenSpikes.java b/RMCClient/minecraft/net/minecraft/src/WorldGenSpikes.java
index 606c36d..868339b 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenSpikes.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenSpikes.java
@@ -6,9 +6,9 @@
 {
 	private int replaceID;
 	
-	public WorldGenSpikes(int par1)
+	public WorldGenSpikes(int p_i2023_1_)
 	{
-		replaceID = par1;
+		replaceID = p_i2023_1_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenTaiga2.java b/RMCClient/minecraft/net/minecraft/src/WorldGenTaiga2.java
index e32ef65..4f641cb 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenTaiga2.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenTaiga2.java
@@ -4,9 +4,9 @@
 
 public class WorldGenTaiga2 extends WorldGenerator
 {
-	public WorldGenTaiga2(boolean par1)
+	public WorldGenTaiga2(boolean p_i2025_1_)
 	{
-		super(par1);
+		super(p_i2025_1_);
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenTallGrass.java b/RMCClient/minecraft/net/minecraft/src/WorldGenTallGrass.java
index 90297e6..d78bb14 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenTallGrass.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenTallGrass.java
@@ -7,10 +7,10 @@
 	private int tallGrassID;
 	private int tallGrassMetadata;
 	
-	public WorldGenTallGrass(int par1, int par2)
+	public WorldGenTallGrass(int p_i2026_1_, int p_i2026_2_)
 	{
-		tallGrassID = par1;
-		tallGrassMetadata = par2;
+		tallGrassID = p_i2026_1_;
+		tallGrassMetadata = p_i2026_2_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenTrees.java b/RMCClient/minecraft/net/minecraft/src/WorldGenTrees.java
index 0720d36..3902365 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenTrees.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenTrees.java
@@ -9,18 +9,18 @@
 	private final int metaWood;
 	private final int metaLeaves;
 	
-	public WorldGenTrees(boolean par1)
+	public WorldGenTrees(boolean p_i2027_1_)
 	{
-		this(par1, 4, 0, 0, false);
+		this(p_i2027_1_, 4, 0, 0, false);
 	}
 	
-	public WorldGenTrees(boolean par1, int par2, int par3, int par4, boolean par5)
+	public WorldGenTrees(boolean p_i2028_1_, int p_i2028_2_, int p_i2028_3_, int p_i2028_4_, boolean p_i2028_5_)
 	{
-		super(par1);
-		minTreeHeight = par2;
-		metaWood = par3;
-		metaLeaves = par4;
-		vinesGrow = par5;
+		super(p_i2028_1_);
+		minTreeHeight = p_i2028_2_;
+		metaWood = p_i2028_3_;
+		metaLeaves = p_i2028_4_;
+		vinesGrow = p_i2028_5_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGenerator.java b/RMCClient/minecraft/net/minecraft/src/WorldGenerator.java
index 4ede9c0..1ccf831 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGenerator.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGenerator.java
@@ -11,9 +11,9 @@
 		doBlockNotify = false;
 	}
 	
-	public WorldGenerator(boolean par1)
+	public WorldGenerator(boolean p_i2013_1_)
 	{
-		doBlockNotify = par1;
+		doBlockNotify = p_i2013_1_;
 	}
 	
 	public abstract boolean generate(World var1, Random var2, int var3, int var4, int var5);
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldGeneratorBonusChest.java b/RMCClient/minecraft/net/minecraft/src/WorldGeneratorBonusChest.java
index 554ff1e..9acba62 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldGeneratorBonusChest.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldGeneratorBonusChest.java
@@ -7,10 +7,10 @@
 	private final WeightedRandomChestContent[] theBonusChestGenerator;
 	private final int itemsToGenerateInBonusChest;
 	
-	public WorldGeneratorBonusChest(WeightedRandomChestContent[] par1ArrayOfWeightedRandomChestContent, int par2)
+	public WorldGeneratorBonusChest(WeightedRandomChestContent[] p_i2010_1_, int p_i2010_2_)
 	{
-		theBonusChestGenerator = par1ArrayOfWeightedRandomChestContent;
-		itemsToGenerateInBonusChest = par2;
+		theBonusChestGenerator = p_i2010_1_;
+		itemsToGenerateInBonusChest = p_i2010_2_;
 	}
 	
 	@Override public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldInfo.java b/RMCClient/minecraft/net/minecraft/src/WorldInfo.java
index 9623333..611248b 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldInfo.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldInfo.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import net.minecraft.server.MinecraftServer;
+
 public class WorldInfo
 {
 	private long randomSeed;
@@ -34,15 +36,15 @@
 		theGameRules = new GameRules();
 	}
 	
-	public WorldInfo(NBTTagCompound par1NBTTagCompound)
+	public WorldInfo(NBTTagCompound p_i2157_1_)
 	{
 		terrainType = WorldType.DEFAULT;
 		generatorOptions = "";
 		theGameRules = new GameRules();
-		randomSeed = par1NBTTagCompound.getLong("RandomSeed");
-		if(par1NBTTagCompound.hasKey("generatorName"))
+		randomSeed = p_i2157_1_.getLong("RandomSeed");
+		if(p_i2157_1_.hasKey("generatorName"))
 		{
-			String var2 = par1NBTTagCompound.getString("generatorName");
+			String var2 = p_i2157_1_.getString("generatorName");
 			terrainType = WorldType.parseWorldType(var2);
 			if(terrainType == null)
 			{
@@ -50,114 +52,114 @@
 			} else if(terrainType.isVersioned())
 			{
 				int var3 = 0;
-				if(par1NBTTagCompound.hasKey("generatorVersion"))
+				if(p_i2157_1_.hasKey("generatorVersion"))
 				{
-					var3 = par1NBTTagCompound.getInteger("generatorVersion");
+					var3 = p_i2157_1_.getInteger("generatorVersion");
 				}
 				terrainType = terrainType.getWorldTypeForGeneratorVersion(var3);
 			}
-			if(par1NBTTagCompound.hasKey("generatorOptions"))
+			if(p_i2157_1_.hasKey("generatorOptions"))
 			{
-				generatorOptions = par1NBTTagCompound.getString("generatorOptions");
+				generatorOptions = p_i2157_1_.getString("generatorOptions");
 			}
 		}
-		theGameType = EnumGameType.getByID(par1NBTTagCompound.getInteger("GameType"));
-		if(par1NBTTagCompound.hasKey("MapFeatures"))
+		theGameType = EnumGameType.getByID(p_i2157_1_.getInteger("GameType"));
+		if(p_i2157_1_.hasKey("MapFeatures"))
 		{
-			mapFeaturesEnabled = par1NBTTagCompound.getBoolean("MapFeatures");
+			mapFeaturesEnabled = p_i2157_1_.getBoolean("MapFeatures");
 		} else
 		{
 			mapFeaturesEnabled = true;
 		}
-		spawnX = par1NBTTagCompound.getInteger("SpawnX");
-		spawnY = par1NBTTagCompound.getInteger("SpawnY");
-		spawnZ = par1NBTTagCompound.getInteger("SpawnZ");
-		totalTime = par1NBTTagCompound.getLong("Time");
-		if(par1NBTTagCompound.hasKey("DayTime"))
+		spawnX = p_i2157_1_.getInteger("SpawnX");
+		spawnY = p_i2157_1_.getInteger("SpawnY");
+		spawnZ = p_i2157_1_.getInteger("SpawnZ");
+		totalTime = p_i2157_1_.getLong("Time");
+		if(p_i2157_1_.hasKey("DayTime"))
 		{
-			worldTime = par1NBTTagCompound.getLong("DayTime");
+			worldTime = p_i2157_1_.getLong("DayTime");
 		} else
 		{
 			worldTime = totalTime;
 		}
-		lastTimePlayed = par1NBTTagCompound.getLong("LastPlayed");
-		sizeOnDisk = par1NBTTagCompound.getLong("SizeOnDisk");
-		levelName = par1NBTTagCompound.getString("LevelName");
-		saveVersion = par1NBTTagCompound.getInteger("version");
-		rainTime = par1NBTTagCompound.getInteger("rainTime");
-		raining = par1NBTTagCompound.getBoolean("raining");
-		thunderTime = par1NBTTagCompound.getInteger("thunderTime");
-		thundering = par1NBTTagCompound.getBoolean("thundering");
-		hardcore = par1NBTTagCompound.getBoolean("hardcore");
-		if(par1NBTTagCompound.hasKey("initialized"))
+		lastTimePlayed = p_i2157_1_.getLong("LastPlayed");
+		sizeOnDisk = p_i2157_1_.getLong("SizeOnDisk");
+		levelName = p_i2157_1_.getString("LevelName");
+		saveVersion = p_i2157_1_.getInteger("version");
+		rainTime = p_i2157_1_.getInteger("rainTime");
+		raining = p_i2157_1_.getBoolean("raining");
+		thunderTime = p_i2157_1_.getInteger("thunderTime");
+		thundering = p_i2157_1_.getBoolean("thundering");
+		hardcore = p_i2157_1_.getBoolean("hardcore");
+		if(p_i2157_1_.hasKey("initialized"))
 		{
-			initialized = par1NBTTagCompound.getBoolean("initialized");
+			initialized = p_i2157_1_.getBoolean("initialized");
 		} else
 		{
 			initialized = true;
 		}
-		if(par1NBTTagCompound.hasKey("allowCommands"))
+		if(p_i2157_1_.hasKey("allowCommands"))
 		{
-			allowCommands = par1NBTTagCompound.getBoolean("allowCommands");
+			allowCommands = p_i2157_1_.getBoolean("allowCommands");
 		} else
 		{
 			allowCommands = theGameType == EnumGameType.CREATIVE;
 		}
-		if(par1NBTTagCompound.hasKey("Player"))
+		if(p_i2157_1_.hasKey("Player"))
 		{
-			playerTag = par1NBTTagCompound.getCompoundTag("Player");
+			playerTag = p_i2157_1_.getCompoundTag("Player");
 			dimension = playerTag.getInteger("Dimension");
 		}
-		if(par1NBTTagCompound.hasKey("GameRules"))
+		if(p_i2157_1_.hasKey("GameRules"))
 		{
-			theGameRules.readGameRulesFromNBT(par1NBTTagCompound.getCompoundTag("GameRules"));
+			theGameRules.readGameRulesFromNBT(p_i2157_1_.getCompoundTag("GameRules"));
 		}
 	}
 	
-	public WorldInfo(WorldInfo par1WorldInfo)
+	public WorldInfo(WorldInfo p_i2159_1_)
 	{
 		terrainType = WorldType.DEFAULT;
 		generatorOptions = "";
 		theGameRules = new GameRules();
-		randomSeed = par1WorldInfo.randomSeed;
-		terrainType = par1WorldInfo.terrainType;
-		generatorOptions = par1WorldInfo.generatorOptions;
-		theGameType = par1WorldInfo.theGameType;
-		mapFeaturesEnabled = par1WorldInfo.mapFeaturesEnabled;
-		spawnX = par1WorldInfo.spawnX;
-		spawnY = par1WorldInfo.spawnY;
-		spawnZ = par1WorldInfo.spawnZ;
-		totalTime = par1WorldInfo.totalTime;
-		worldTime = par1WorldInfo.worldTime;
-		lastTimePlayed = par1WorldInfo.lastTimePlayed;
-		sizeOnDisk = par1WorldInfo.sizeOnDisk;
-		playerTag = par1WorldInfo.playerTag;
-		dimension = par1WorldInfo.dimension;
-		levelName = par1WorldInfo.levelName;
-		saveVersion = par1WorldInfo.saveVersion;
-		rainTime = par1WorldInfo.rainTime;
-		raining = par1WorldInfo.raining;
-		thunderTime = par1WorldInfo.thunderTime;
-		thundering = par1WorldInfo.thundering;
-		hardcore = par1WorldInfo.hardcore;
-		allowCommands = par1WorldInfo.allowCommands;
-		initialized = par1WorldInfo.initialized;
-		theGameRules = par1WorldInfo.theGameRules;
+		randomSeed = p_i2159_1_.randomSeed;
+		terrainType = p_i2159_1_.terrainType;
+		generatorOptions = p_i2159_1_.generatorOptions;
+		theGameType = p_i2159_1_.theGameType;
+		mapFeaturesEnabled = p_i2159_1_.mapFeaturesEnabled;
+		spawnX = p_i2159_1_.spawnX;
+		spawnY = p_i2159_1_.spawnY;
+		spawnZ = p_i2159_1_.spawnZ;
+		totalTime = p_i2159_1_.totalTime;
+		worldTime = p_i2159_1_.worldTime;
+		lastTimePlayed = p_i2159_1_.lastTimePlayed;
+		sizeOnDisk = p_i2159_1_.sizeOnDisk;
+		playerTag = p_i2159_1_.playerTag;
+		dimension = p_i2159_1_.dimension;
+		levelName = p_i2159_1_.levelName;
+		saveVersion = p_i2159_1_.saveVersion;
+		rainTime = p_i2159_1_.rainTime;
+		raining = p_i2159_1_.raining;
+		thunderTime = p_i2159_1_.thunderTime;
+		thundering = p_i2159_1_.thundering;
+		hardcore = p_i2159_1_.hardcore;
+		allowCommands = p_i2159_1_.allowCommands;
+		initialized = p_i2159_1_.initialized;
+		theGameRules = p_i2159_1_.theGameRules;
 	}
 	
-	public WorldInfo(WorldSettings par1WorldSettings, String par2Str)
+	public WorldInfo(WorldSettings p_i2158_1_, String p_i2158_2_)
 	{
 		terrainType = WorldType.DEFAULT;
 		generatorOptions = "";
 		theGameRules = new GameRules();
-		randomSeed = par1WorldSettings.getSeed();
-		theGameType = par1WorldSettings.getGameType();
-		mapFeaturesEnabled = par1WorldSettings.isMapFeaturesEnabled();
-		levelName = par2Str;
-		hardcore = par1WorldSettings.getHardcoreEnabled();
-		terrainType = par1WorldSettings.getTerrainType();
-		generatorOptions = par1WorldSettings.func_82749_j();
-		allowCommands = par1WorldSettings.areCommandsAllowed();
+		randomSeed = p_i2158_1_.getSeed();
+		theGameType = p_i2158_1_.getGameType();
+		mapFeaturesEnabled = p_i2158_1_.isMapFeaturesEnabled();
+		levelName = p_i2158_2_;
+		hardcore = p_i2158_1_.getHardcoreEnabled();
+		terrainType = p_i2158_1_.getTerrainType();
+		generatorOptions = p_i2158_1_.func_82749_j();
+		allowCommands = p_i2158_1_.areCommandsAllowed();
 		initialized = false;
 	}
 	
@@ -399,7 +401,7 @@
 		par1NBTTagCompound.setLong("Time", totalTime);
 		par1NBTTagCompound.setLong("DayTime", worldTime);
 		par1NBTTagCompound.setLong("SizeOnDisk", sizeOnDisk);
-		par1NBTTagCompound.setLong("LastPlayed", System.currentTimeMillis());
+		par1NBTTagCompound.setLong("LastPlayed", MinecraftServer.func_130071_aq());
 		par1NBTTagCompound.setString("LevelName", levelName);
 		par1NBTTagCompound.setInteger("version", saveVersion);
 		par1NBTTagCompound.setInteger("rainTime", rainTime);
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldManager.java b/RMCClient/minecraft/net/minecraft/src/WorldManager.java
index 2314a7b..9103a94 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldManager.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldManager.java
@@ -9,10 +9,10 @@
 	private MinecraftServer mcServer;
 	private WorldServer theWorldServer;
 	
-	public WorldManager(MinecraftServer par1MinecraftServer, WorldServer par2WorldServer)
+	public WorldManager(MinecraftServer p_i1517_1_, WorldServer p_i1517_2_)
 	{
-		mcServer = par1MinecraftServer;
-		theWorldServer = par2WorldServer;
+		mcServer = p_i1517_1_;
+		theWorldServer = p_i1517_2_;
 	}
 	
 	@Override public void broadcastSound(int par1, int par2, int par3, int par4, int par5)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldProvider.java b/RMCClient/minecraft/net/minecraft/src/WorldProvider.java
index bdbb40f..18d46c6 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldProvider.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldProvider.java
@@ -2,14 +2,15 @@
 
 public abstract class WorldProvider
 {
+	public static final float[] field_111203_a = new float[] { 1.0F, 0.75F, 0.5F, 0.25F, 0.0F, 0.25F, 0.5F, 0.75F };
 	public World worldObj;
 	public WorldType terrainType;
 	public String field_82913_c;
 	public WorldChunkManager worldChunkMgr;
-	public boolean isHellWorld = false;
-	public boolean hasNoSky = false;
+	public boolean isHellWorld;
+	public boolean hasNoSky;
 	public float[] lightBrightnessTable = new float[16];
-	public int dimensionId = 0;
+	public int dimensionId;
 	private float[] colorsSunriseSunset = new float[4];
 	
 	public float[] calcSunriseSunsetColors(float par1, float par2)
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldRenderer.java b/RMCClient/minecraft/net/minecraft/src/WorldRenderer.java
index d1a4837..d3a1f29 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldRenderer.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldRenderer.java
@@ -11,7 +11,7 @@
 	public World worldObj;
 	private int glRenderList = -1;
 	private static Tessellator tessellator = Tessellator.instance;
-	public static int chunksUpdated = 0;
+	public static int chunksUpdated;
 	public int posX;
 	public int posY;
 	public int posZ;
@@ -21,7 +21,7 @@
 	public int posXClip;
 	public int posYClip;
 	public int posZClip;
-	public boolean isInFrustum = false;
+	public boolean isInFrustum;
 	public boolean[] skipRenderPass = new boolean[2];
 	public int posXPlus;
 	public int posYPlus;
@@ -33,18 +33,18 @@
 	public boolean isWaitingOnOcclusionQuery;
 	public int glOcclusionQuery;
 	public boolean isChunkLit;
-	private boolean isInitialized = false;
+	private boolean isInitialized;
 	public List tileEntityRenderers = new ArrayList();
 	private List tileEntities;
 	private int bytesDrawn;
 	
-	public WorldRenderer(World par1World, List par2List, int par3, int par4, int par5, int par6)
+	public WorldRenderer(World p_i1240_1_, List p_i1240_2_, int p_i1240_3_, int p_i1240_4_, int p_i1240_5_, int p_i1240_6_)
 	{
-		worldObj = par1World;
-		tileEntities = par2List;
-		glRenderList = par6;
+		worldObj = p_i1240_1_;
+		tileEntities = p_i1240_2_;
+		glRenderList = p_i1240_6_;
 		posX = -999;
-		setPosition(par3, par4, par5);
+		setPosition(p_i1240_3_, p_i1240_4_, p_i1240_5_);
 		needsUpdate = false;
 	}
 	
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldSavedData.java b/RMCClient/minecraft/net/minecraft/src/WorldSavedData.java
index 01fe36a..d658889 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldSavedData.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldSavedData.java
@@ -5,9 +5,9 @@
 	public final String mapName;
 	private boolean dirty;
 	
-	public WorldSavedData(String par1Str)
+	public WorldSavedData(String p_i2141_1_)
 	{
-		mapName = par1Str;
+		mapName = p_i2141_1_;
 	}
 	
 	public boolean isDirty()
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldServer.java b/RMCClient/minecraft/net/minecraft/src/WorldServer.java
index 5570d0f..47ba0f3 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldServer.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldServer.java
@@ -20,20 +20,21 @@
 	public ChunkProviderServer theChunkProviderServer;
 	public boolean canNotSave;
 	private boolean allPlayersSleeping;
-	private int updateEntityTick = 0;
+	private int updateEntityTick;
 	private final Teleporter field_85177_Q;
+	private final SpawnerAnimals field_135059_Q = new SpawnerAnimals();
 	private ServerBlockEventList[] blockEventCache = new ServerBlockEventList[] { new ServerBlockEventList((ServerBlockEvent) null), new ServerBlockEventList((ServerBlockEvent) null) };
-	private int blockEventCacheIndex = 0;
+	private int blockEventCacheIndex;
 	private static final WeightedRandomChestContent[] bonusChestContent = new WeightedRandomChestContent[] { new WeightedRandomChestContent(Item.stick.itemID, 0, 1, 3, 10), new WeightedRandomChestContent(Block.planks.blockID, 0, 1, 3, 10), new WeightedRandomChestContent(Block.wood.blockID, 0, 1, 3, 10), new WeightedRandomChestContent(Item.axeStone.itemID, 0, 1, 1, 3), new WeightedRandomChestContent(Item.axeWood.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.pickaxeStone.itemID, 0, 1, 1, 3), new WeightedRandomChestContent(Item.pickaxeWood.itemID, 0, 1, 1, 5), new WeightedRandomChestContent(Item.appleRed.itemID, 0, 2, 3, 5), new WeightedRandomChestContent(Item.bread.itemID, 0, 2, 3, 3) };
-	private ArrayList field_94579_S = new ArrayList();
+	private List field_94579_S = new ArrayList();
 	private IntHashMap entityIdMap;
 	
-	public WorldServer(MinecraftServer par1MinecraftServer, ISaveHandler par2ISaveHandler, String par3Str, int par4, WorldSettings par5WorldSettings, Profiler par6Profiler, ILogAgent par7ILogAgent)
+	public WorldServer(MinecraftServer p_i1522_1_, ISaveHandler p_i1522_2_, String p_i1522_3_, int p_i1522_4_, WorldSettings p_i1522_5_, Profiler p_i1522_6_, ILogAgent p_i1522_7_)
 	{
-		super(par2ISaveHandler, par3Str, par5WorldSettings, WorldProvider.getProviderForDimension(par4), par6Profiler, par7ILogAgent);
-		mcServer = par1MinecraftServer;
+		super(p_i1522_2_, p_i1522_3_, p_i1522_5_, WorldProvider.getProviderForDimension(p_i1522_4_), p_i1522_6_, p_i1522_7_);
+		mcServer = p_i1522_1_;
 		theEntityTracker = new EntityTracker(this);
-		thePlayerManager = new PlayerManager(this, par1MinecraftServer.getConfigurationManager().getViewDistance());
+		thePlayerManager = new PlayerManager(this, p_i1522_1_.getConfigurationManager().getViewDistance());
 		if(entityIdMap == null)
 		{
 			entityIdMap = new IntHashMap();
@@ -47,7 +48,7 @@
 			pendingTickListEntries = new TreeSet();
 		}
 		field_85177_Q = new Teleporter(this);
-		worldScoreboard = new ServerScoreboard(par1MinecraftServer);
+		worldScoreboard = new ServerScoreboard(p_i1522_1_);
 		ScoreboardSaveData var8 = (ScoreboardSaveData) mapStorage.loadData(ScoreboardSaveData.class, "scoreboard");
 		if(var8 == null)
 		{
@@ -189,6 +190,7 @@
 		{
 			if(Block.blocksList[par4].func_82506_l())
 			{
+				var8 = 8;
 				if(checkChunksExist(var7.xCoord - var8, var7.yCoord - var8, var7.zCoord - var8, var7.xCoord + var8, var7.yCoord + var8, var7.zCoord + var8))
 				{
 					int var9 = getBlockId(var7.xCoord, var7.yCoord, var7.zCoord);
@@ -505,32 +507,30 @@
 		provider.worldChunkMgr.cleanupCache();
 		if(areAllPlayersAsleep())
 		{
-			boolean var1 = false;
-			if(spawnHostileMobs && difficultySetting >= 1)
+			if(getGameRules().getGameRuleBooleanValue("doDaylightCycle"))
 			{
-				;
+				long var1 = worldInfo.getWorldTime() + 24000L;
+				worldInfo.setWorldTime(var1 - var1 % 24000L);
 			}
-			if(!var1)
-			{
-				long var2 = worldInfo.getWorldTime() + 24000L;
-				worldInfo.setWorldTime(var2 - var2 % 24000L);
-				wakeAllPlayers();
-			}
+			wakeAllPlayers();
 		}
 		theProfiler.startSection("mobSpawner");
 		if(getGameRules().getGameRuleBooleanValue("doMobSpawning"))
 		{
-			SpawnerAnimals.findChunksForSpawning(this, spawnHostileMobs, spawnPeacefulMobs, worldInfo.getWorldTotalTime() % 400L == 0L);
+			field_135059_Q.findChunksForSpawning(this, spawnHostileMobs, spawnPeacefulMobs, worldInfo.getWorldTotalTime() % 400L == 0L);
 		}
 		theProfiler.endStartSection("chunkSource");
 		chunkProvider.unloadQueuedChunks();
-		int var4 = calculateSkylightSubtracted(1.0F);
-		if(var4 != skylightSubtracted)
+		int var3 = calculateSkylightSubtracted(1.0F);
+		if(var3 != skylightSubtracted)
 		{
-			skylightSubtracted = var4;
+			skylightSubtracted = var3;
 		}
 		worldInfo.incrementTotalWorldTime(worldInfo.getWorldTotalTime() + 1L);
-		worldInfo.setWorldTime(worldInfo.getWorldTime() + 1L);
+		if(getGameRules().getGameRuleBooleanValue("doDaylightCycle"))
+		{
+			worldInfo.setWorldTime(worldInfo.getWorldTime() + 1L);
+		}
 		theProfiler.endStartSection("tickPending");
 		tickUpdates(false);
 		theProfiler.endStartSection("tickTiles");
@@ -705,11 +705,6 @@
 		}
 	}
 	
-	public void uncheckedUpdateEntity(Entity par1Entity, boolean par2)
-	{
-		super.updateEntityWithOptionalForce(par1Entity, par2);
-	}
-	
 	@Override public void updateAllPlayersSleepingFlag()
 	{
 		allPlayersSleeping = !playerEntities.isEmpty();
@@ -747,10 +742,7 @@
 		{
 			par1Entity.setDead();
 		}
-		if(!(par1Entity.riddenByEntity instanceof EntityPlayer))
-		{
-			super.updateEntityWithOptionalForce(par1Entity, par2);
-		}
+		super.updateEntityWithOptionalForce(par1Entity, par2);
 	}
 	
 	@Override protected void updateWeather()
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldServerMulti.java b/RMCClient/minecraft/net/minecraft/src/WorldServerMulti.java
index 572066e..d1dfdf5 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldServerMulti.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldServerMulti.java
@@ -4,12 +4,12 @@
 
 public class WorldServerMulti extends WorldServer
 {
-	public WorldServerMulti(MinecraftServer par1MinecraftServer, ISaveHandler par2ISaveHandler, String par3Str, int par4, WorldSettings par5WorldSettings, WorldServer par6WorldServer, Profiler par7Profiler, ILogAgent par8ILogAgent)
+	public WorldServerMulti(MinecraftServer p_i1514_1_, ISaveHandler p_i1514_2_, String p_i1514_3_, int p_i1514_4_, WorldSettings p_i1514_5_, WorldServer p_i1514_6_, Profiler p_i1514_7_, ILogAgent p_i1514_8_)
 	{
-		super(par1MinecraftServer, par2ISaveHandler, par3Str, par4, par5WorldSettings, par7Profiler, par8ILogAgent);
-		mapStorage = par6WorldServer.mapStorage;
-		worldScoreboard = par6WorldServer.getScoreboard();
-		worldInfo = new DerivedWorldInfo(par6WorldServer.getWorldInfo());
+		super(p_i1514_1_, p_i1514_2_, p_i1514_3_, p_i1514_4_, p_i1514_5_, p_i1514_7_, p_i1514_8_);
+		mapStorage = p_i1514_6_.mapStorage;
+		worldScoreboard = p_i1514_6_.getScoreboard();
+		worldInfo = new DerivedWorldInfo(p_i1514_6_.getWorldInfo());
 	}
 	
 	@Override protected void saveLevel() throws MinecraftException
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldSettings.java b/RMCClient/minecraft/net/minecraft/src/WorldSettings.java
index 601b11b..35d574f 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldSettings.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldSettings.java
@@ -11,19 +11,19 @@
 	private boolean bonusChestEnabled;
 	private String field_82751_h;
 	
-	public WorldSettings(long par1, EnumGameType par3EnumGameType, boolean par4, boolean par5, WorldType par6WorldType)
+	public WorldSettings(long p_i1957_1_, EnumGameType p_i1957_3_, boolean p_i1957_4_, boolean p_i1957_5_, WorldType p_i1957_6_)
 	{
 		field_82751_h = "";
-		seed = par1;
-		theGameType = par3EnumGameType;
-		mapFeaturesEnabled = par4;
-		hardcoreEnabled = par5;
-		terrainType = par6WorldType;
+		seed = p_i1957_1_;
+		theGameType = p_i1957_3_;
+		mapFeaturesEnabled = p_i1957_4_;
+		hardcoreEnabled = p_i1957_5_;
+		terrainType = p_i1957_6_;
 	}
 	
-	public WorldSettings(WorldInfo par1WorldInfo)
+	public WorldSettings(WorldInfo p_i1958_1_)
 	{
-		this(par1WorldInfo.getSeed(), par1WorldInfo.getGameType(), par1WorldInfo.isMapFeaturesEnabled(), par1WorldInfo.isHardcoreModeEnabled(), par1WorldInfo.getTerrainType());
+		this(p_i1958_1_.getSeed(), p_i1958_1_.getGameType(), p_i1958_1_.isMapFeaturesEnabled(), p_i1958_1_.isHardcoreModeEnabled(), p_i1958_1_.getTerrainType());
 	}
 	
 	public boolean areCommandsAllowed()
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldTemplate.java b/RMCClient/minecraft/net/minecraft/src/WorldTemplate.java
new file mode 100644
index 0000000..2ffe4df
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/WorldTemplate.java
@@ -0,0 +1,26 @@
+package net.minecraft.src;
+
+
+public class WorldTemplate extends ValueObject
+{
+	public String field_110734_a;
+	public String field_110732_b;
+	public String field_110733_c;
+	public String field_110731_d;
+	
+	public static WorldTemplate func_110730_a(JsonNode p_110730_0_)
+	{
+		WorldTemplate var1 = new WorldTemplate();
+		try
+		{
+			var1.field_110734_a = p_110730_0_.getNumberValue(new Object[] { "id" });
+			var1.field_110732_b = p_110730_0_.getStringValue(new Object[] { "name" });
+			var1.field_110733_c = p_110730_0_.getStringValue(new Object[] { "version" });
+			var1.field_110731_d = p_110730_0_.getStringValue(new Object[] { "author" });
+		} catch(IllegalArgumentException var3)
+		{
+			;
+		}
+		return var1;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldTemplateList.java b/RMCClient/minecraft/net/minecraft/src/WorldTemplateList.java
new file mode 100644
index 0000000..60d22bb
--- /dev/null
+++ b/RMCClient/minecraft/net/minecraft/src/WorldTemplateList.java
@@ -0,0 +1,36 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+public class WorldTemplateList extends ValueObject
+{
+	public List field_110736_a;
+	
+	public static WorldTemplateList func_110735_a(String p_110735_0_)
+	{
+		WorldTemplateList var1 = new WorldTemplateList();
+		var1.field_110736_a = new ArrayList();
+		try
+		{
+			JsonRootNode var2 = new JdomParser().parse(p_110735_0_);
+			if(var2.isArrayNode(new Object[] { "templates" }))
+			{
+				Iterator var3 = var2.getArrayNode(new Object[] { "templates" }).iterator();
+				while(var3.hasNext())
+				{
+					JsonNode var4 = (JsonNode) var3.next();
+					var1.field_110736_a.add(WorldTemplate.func_110730_a(var4));
+				}
+			}
+		} catch(InvalidSyntaxException var5)
+		{
+			;
+		} catch(IllegalArgumentException var6)
+		{
+			;
+		}
+		return var1;
+	}
+}
diff --git a/RMCClient/minecraft/net/minecraft/src/WorldType.java b/RMCClient/minecraft/net/minecraft/src/WorldType.java
index d406fbf..c61e326 100644
--- a/RMCClient/minecraft/net/minecraft/src/WorldType.java
+++ b/RMCClient/minecraft/net/minecraft/src/WorldType.java
@@ -13,18 +13,18 @@
 	private boolean canBeCreated;
 	private boolean isWorldTypeVersioned;
 	
-	private WorldType(int par1, String par2Str)
+	private WorldType(int p_i1959_1_, String p_i1959_2_)
 	{
-		this(par1, par2Str, 0);
+		this(p_i1959_1_, p_i1959_2_, 0);
 	}
 	
-	private WorldType(int par1, String par2Str, int par3)
+	private WorldType(int p_i1960_1_, String p_i1960_2_, int p_i1960_3_)
 	{
-		worldType = par2Str;
-		generatorVersion = par3;
+		worldType = p_i1960_2_;
+		generatorVersion = p_i1960_3_;
 		canBeCreated = true;
-		worldTypeId = par1;
-		worldTypes[par1] = this;
+		worldTypeId = p_i1960_1_;
+		worldTypes[p_i1960_1_] = this;
 	}
 	
 	public boolean getCanBeCreated()
diff --git a/RMCClient/minecraft/net/minecraft/src/WrongUsageException.java b/RMCClient/minecraft/net/minecraft/src/WrongUsageException.java
index 9ee7732..354cdcc 100644
--- a/RMCClient/minecraft/net/minecraft/src/WrongUsageException.java
+++ b/RMCClient/minecraft/net/minecraft/src/WrongUsageException.java
@@ -4,8 +4,8 @@
 {
 	private static final long serialVersionUID = 1L;
 	
-	public WrongUsageException(String par1Str, Object ... par2ArrayOfObj)
+	public WrongUsageException(String p_i1364_1_, Object ... p_i1364_2_)
 	{
-		super(par1Str, par2ArrayOfObj);
+		super(p_i1364_1_, p_i1364_2_);
 	}
 }